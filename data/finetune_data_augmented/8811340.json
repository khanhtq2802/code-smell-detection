{"text": "<fim_prefix>\n<fim_suffix>  public static class isSSHSetupCompleteForUserComputeResourcePreference_args implements org.apache.thrift.TBase<isSSHSetupCompleteForUserComputeResourcePreference_args, isSSHSetupCompleteForUserComputeResourcePreference_args._Fields>, java.io.Serializable, Cloneable, Comparable<isSSHSetupCompleteForUserComputeResourcePreference_args>   {\n    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct(\"isSSHSetupCompleteForUserComputeResourcePreference_args\");\n    private static final org.apache.thrift.protocol.TField AUTHZ_TOKEN_FIELD_DESC = new org.apache.thrift.protocol.TField(\"authzToken\", org.apache.thrift.protocol.TType.STRUCT, (short)1);\n    private static final org.apache.thrift.protocol.TField COMPUTE_RESOURCE_ID_FIELD_DESC = new org.apache.thrift.protocol.TField(\"computeResourceId\", org.apache.thrift.protocol.TType.STRING, (short)2);\n    private static final org.apache.thrift.protocol.TField AIRAVATA_CRED_STORE_TOKEN_FIELD_DESC = new org.apache.thrift.protocol.TField(\"airavataCredStoreToken\", org.apache.thrift.protocol.TType.STRING, (short)3);\n    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();\n    static {\n      schemes.put(StandardScheme.class, new isSSHSetupCompleteForUserComputeResourcePreference_argsStandardSchemeFactory());\n      schemes.put(TupleScheme.class, new isSSHSetupCompleteForUserComputeResourcePreference_argsTupleSchemeFactory());\n    }\n    public org.apache.airavata.model.security.AuthzToken authzToken; // required\n    public String computeResourceId; // required\n    public String airavataCredStoreToken; // required\n    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */\n    public enum _Fields implements org.apache.thrift.TFieldIdEnum {\n      AUTHZ_TOKEN((short)1, \"authzToken\"),\n      COMPUTE_RESOURCE_ID((short)2, \"computeResourceId\"),\n      AIRAVATA_CRED_STORE_TOKEN((short)3, \"airavataCredStoreToken\");\n      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();\n      static {\n        for (_Fields field : EnumSet.allOf(_Fields.class)) {\n          byName.put(field.getFieldName(), field);\n        }\n      }\n      /**\n       * Find the _Fields constant that matches fieldId, or null if its not found.\n       */\n      public static _Fields findByThriftId(int fieldId) {\n        switch(fieldId) {\n          case 1: // AUTHZ_TOKEN\n            return AUTHZ_TOKEN;\n          case 2: // COMPUTE_RESOURCE_ID\n            return COMPUTE_RESOURCE_ID;\n          case 3: // AIRAVATA_CRED_STORE_TOKEN\n            return AIRAVATA_CRED_STORE_TOKEN;\n          default:\n            return null;\n        }\n      }\n      /**\n       * Find the _Fields constant that matches fieldId, throwing an exception\n       * if it is not found.\n       */\n      public static _Fields findByThriftIdOrThrow(int fieldId) {\n        _Fields fields = findByThriftId(fieldId);\n        if (fields == null) throw new IllegalArgumentException(\"Field \" + fieldId + \" doesn't exist!\");\n        return fields;\n      }\n      /**\n       * Find the _Fields constant that matches name, or null if its not found.\n       */\n      public static _Fields findByName(String name) {\n        return byName.get(name);\n      }\n      private final short _thriftId;\n      private final String _fieldName;\n      _Fields(short thriftId, String fieldName) {\n        _thriftId = thriftId;\n        _fieldName = fieldName;\n      }\n      public short getThriftFieldId() {\n        return _thriftId;\n      }\n      public String getFieldName() {\n        return _fieldName;\n      }\n    }\n    // isset id assignments\n    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;\n    static {\n      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);\n      tmpMap.put(_Fields.AUTHZ_TOKEN, new org.apache.thrift.meta_data.FieldMetaData(\"authzToken\", org.apache.thrift.TFieldRequirementType.REQUIRED, \n          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, org.apache.airavata.model.security.AuthzToken.class)));\n      tmpMap.put(_Fields.COMPUTE_RESOURCE_ID, new org.apache.thrift.meta_data.FieldMetaData(\"computeResourceId\", org.apache.thrift.TFieldRequirementType.REQUIRED, \n          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));\n      tmpMap.put(_Fields.AIRAVATA_CRED_STORE_TOKEN, new org.apache.thrift.meta_data.FieldMetaData(\"airavataCredStoreToken\", org.apache.thrift.TFieldRequirementType.REQUIRED, \n          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));\n      metaDataMap = Collections.unmodifiableMap(tmpMap);\n      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(isSSHSetupCompleteForUserComputeResourcePreference_args.class, metaDataMap);\n    }\n    public isSSHSetupCompleteForUserComputeResourcePreference_args() {\n    }\n    public isSSHSetupCompleteForUserComputeResourcePreference_args(\n      org.apache.airavata.model.security.AuthzToken authzToken,\n      String computeResourceId,\n      String airavataCredStoreToken)\n    {\n      this();\n      this.authzToken = authzToken;\n      this.computeResourceId = computeResourceId;\n      this.airavataCredStoreToken = airavataCredStoreToken;\n    }\n    /**\n     * Performs a deep copy on <i>other</i>.\n     */\n    public isSSHSetupCompleteForUserComputeResourcePreference_args(isSSHSetupCompleteForUserComputeResourcePreference_args other) {\n      if (other.isSetAuthzToken()) {\n        this.authzToken = new org.apache.airavata.model.security.AuthzToken(other.authzToken);\n      }\n      if (other.isSetComputeResourceId()) {\n        this.computeResourceId = other.computeResourceId;\n      }\n      if (other.isSetAiravataCredStoreToken()) {\n        this.airavataCredStoreToken = other.airavataCredStoreToken;\n      }\n    }\n    public isSSHSetupCompleteForUserComputeResourcePreference_args deepCopy() {\n      return new isSSHSetupCompleteForUserComputeResourcePreference_args(this);\n    }\n    @Override\n    public void clear() {\n      this.authzToken = null;\n      this.computeResourceId = null;\n      this.airavataCredStoreToken = null;\n    }\n    public org.apache.airavata.model.security.AuthzToken getAuthzToken() {\n      return this.authzToken;\n    }\n    public isSSHSetupCompleteForUserComputeResourcePreference_args setAuthzToken(org.apache.airavata.model.security.AuthzToken authzToken) {\n      this.authzToken = authzToken;\n      return this;\n    }\n    public void unsetAuthzToken() {\n      this.authzToken = null;\n    }\n    /** Returns true if field authzToken is set (has been assigned a value) and false otherwise */\n    public boolean isSetAuthzToken() {\n      return this.authzToken != null;\n    }\n    public void setAuthzTokenIsSet(boolean value) {\n      if (!value) {\n        this.authzToken = null;\n      }\n    }\n    public String getComputeResourceId() {\n      return this.computeResourceId;\n    }\n    public isSSHSetupCompleteForUserComputeResourcePreference_args setComputeResourceId(String computeResourceId) {\n      this.computeResourceId = computeResourceId;\n      return this;\n    }\n    public void unsetComputeResourceId() {\n      this.computeResourceId = null;\n    }\n    /** Returns true if field computeResourceId is set (has been assigned a value) and false otherwise */\n    public boolean isSetComputeResourceId() {\n      return this.computeResourceId != null;\n    }\n    public void setComputeResourceIdIsSet(boolean value) {\n      if (!value) {\n        this.computeResourceId = null;\n      }\n    }\n    public String getAiravataCredStoreToken() {\n      return this.airavataCredStoreToken;\n    }\n    public isSSHSetupCompleteForUserComputeResourcePreference_args setAiravataCredStoreToken(String airavataCredStoreToken) {\n      this.airavataCredStoreToken = airavataCredStoreToken;\n      return this;\n    }\n    public void unsetAiravataCredStoreToken() {\n      this.airavataCredStoreToken = null;\n    }\n    /** Returns true if field airavataCredStoreToken is set (has been assigned a value) and false otherwise */<fim_middle>// class below has no smell\n"}