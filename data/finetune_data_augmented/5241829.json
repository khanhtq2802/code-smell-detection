{"text": "<fim_prefix>/*\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with this\n * work for additional information regarding copyright ownership.  The ASF\n * licenses this file to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n*/\n\npackage org.apache.oodt.cas.product.jaxrs.resources;\n\nimport java.io.File;\nimport java.util.ArrayList;\nimport java.util.List;\n\nimport javax.xml.bind.annotation.XmlAccessType;\nimport javax.xml.bind.annotation.XmlAccessorType;\nimport javax.xml.bind.annotation.XmlElement;\nimport javax.xml.bind.annotation.XmlElementWrapper;\nimport javax.xml.bind.annotation.XmlRootElement;\nimport javax.xml.bind.annotation.XmlType;\n\nimport org.apache.oodt.cas.filemgr.structs.Product;\nimport org.apache.oodt.cas.filemgr.structs.Reference;\nimport org.apache.oodt.cas.metadata.Metadata;\n\n/**\n * A JAX-RS resource representing a {@link Product}.\n * @author rlaidlaw\n * @version $Revision$\n */\n@XmlRootElement(name = \"product\")\n@XmlType(propOrder = {\"productId\", \"productName\", \"productStructure\",\n  \"productTypeName\", \"transferStatus\", \"metadataResource\",\n  \"referenceResources\"})\n@XmlAccessorType(XmlAccessType.NONE)\npublic class ProductResource\n{\n  private Product product;\n  private MetadataResource metadataResource;\n  private List<ReferenceResource> referenceResources =\n    new ArrayList<ReferenceResource>();\n\n  // The file manager's working directory for this resource, used for example\n  // when creating zip archives.\n  private File workingDir;\n\n\n\n  /**\n   * Default constructor required by JAXB.\n   */\n  public ProductResource()\n  {\n  }\n\n\n\n  /**\n   * Constructor that sets the product, metadata, references and\n   * working directory for the resource.\n   * @param product the product associated with the resource\n   * @param metadata the metadata associated with the resource\n   * @param references the references associated with the resource\n   * @param workingDir the working directory for creating temporary files to\n   * attach to responses\n   */\n  public ProductResource(Product product, Metadata metadata,\n    List<Reference> references, File workingDir)\n  {\n    this.product = product;\n    this.metadataResource = new MetadataResource(metadata);\n    for (int index = 0; index < references.size(); index++)\n    {\n      referenceResources.add(new ReferenceResource(product.getProductId(),\n        index, references.get(index), workingDir));\n    }\n    this.workingDir = workingDir;\n  }\n\n\n\n  /**\n   * Gets the working directory for the product.\n   * @return the working directory\n   */\n  public File getWorkingDir()\n  {\n    return workingDir;\n  }\n\n\n\n  /**\n   * Gets the product's ID.\n   * @return the product's ID.\n   */\n  @XmlElement(name = \"id\")\n  public String getProductId()\n  {\n    return product.getProductId();\n  }\n\n\n\n  /**\n   * Gets the product's name.\n   * @return the product's name\n   */\n  @XmlElement(name = \"name\")\n  public String getProductName()\n  {\n    return product.getProductName();\n  }\n\n\n\n  /**\n   * Gets the product's structure.\n   * @return a string describing the product's structure\n   */\n  @XmlElement(name = \"structure\")\n  public String getProductStructure()\n  {\n    return product.getProductStructure();\n  }\n\n\n\n  /**\n   * Gets the name of the product's type.\n   * @return the name of the product's type\n   */\n  @XmlElement(name = \"type\")\n  public String getProductTypeName()\n  {\n    return product.getProductType().getName();\n  }\n\n\n\n  /**\n   * Gets the transfer status for the product.\n   * @return the transfer status for the product\n   */\n  @XmlElement(name = \"transferStatus\")\n  public String getTransferStatus()\n  {\n    return product.getTransferStatus();\n  }\n\n\n\n  /**\n   * Gets the metadata resource for the product.\n   * @return the product's metadata resource\n   */\n  @XmlElement(name = \"metadata\")\n  public MetadataResource getMetadataResource()\n  {\n    return metadataResource;\n  }\n\n\n\n  /**\n   * Gets the reference resources.\n   * @return the reference resources\n   */\n<fim_suffix>  @XmlElementWrapper(name = \"references\")\n  @XmlElement(name = \"reference\")\n  public List<ReferenceResource> getReferenceResources()\n  {\n    return referenceResources;\n  }\n\n\n\n  /**\n   * Gets the product's references.\n   * @return the product's references\n   */\n  public List<Reference> getProductReferences()\n  {\n    return product.getProductReferences();\n  }\n}<fim_middle>// function below has no smell\n"}