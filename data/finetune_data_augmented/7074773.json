{"text": "<fim_prefix>/* $Id$ */\npackage com.linkedin.parseq.example.simple;\n\nimport static com.linkedin.parseq.example.common.ExampleUtil.fetchUrl;\n\nimport java.util.concurrent.TimeUnit;\n\nimport com.linkedin.parseq.Engine;\nimport com.linkedin.parseq.Task;\nimport com.linkedin.parseq.example.common.AbstractExample;\nimport com.linkedin.parseq.example.common.ExampleUtil;\nimport com.linkedin.parseq.example.common.MockService;\n\n\n/**\n * @author Jaroslaw Odzga (jodzga@linkedin.com)\n */\npublic class DegradedExperienceExample extends AbstractExample {\n<fim_suffix>  public static void main(String[] args) throws Exception {\n    new DegradedExperienceExample().runExample();\n  }\n\n  @Override\n  protected void doRunExample(final Engine engine) throws Exception {\n    final MockService<String> httpClient = getService();\n\n    final Task<Integer> fetchAndLength =\n        fetchUrl(httpClient, \"http://www.google.com\", 100)\n          .withTimeout(50, TimeUnit.MILLISECONDS)\n          .recover(\"default\", t -> \"\")\n          .map(\"length\", s -> s.length());\n\n    engine.run(fetchAndLength);\n\n    fetchAndLength.await();\n\n    System.out.println(\"Response length: \" + fetchAndLength.get());\n\n    ExampleUtil.printTracingResults(fetchAndLength);\n  }\n}<fim_middle>// function below has no smell\n"}