{"text": "<fim_prefix>/*\n * ====================================================================\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n * ====================================================================\n *\n * This software consists of voluntary contributions made by many\n * individuals on behalf of the Apache Software Foundation.  For more\n * information on the Apache Software Foundation, please see\n * <http://www.apache.org/>.\n *\n */\n\npackage org.apache.hc.core5.http.protocol;\n\nimport java.io.IOException;\nimport java.net.URISyntaxException;\n\nimport org.apache.hc.core5.annotation.Contract;\nimport org.apache.hc.core5.annotation.ThreadingBehavior;\nimport org.apache.hc.core5.http.EntityDetails;\nimport org.apache.hc.core5.http.Header;\nimport org.apache.hc.core5.http.HttpException;\nimport org.apache.hc.core5.http.HttpHeaders;\nimport org.apache.hc.core5.http.HttpRequest;\nimport org.apache.hc.core5.http.HttpRequestInterceptor;\nimport org.apache.hc.core5.http.HttpVersion;\nimport org.apache.hc.core5.http.ProtocolException;\nimport org.apache.hc.core5.http.ProtocolVersion;\nimport org.apache.hc.core5.net.URIAuthority;\nimport org.apache.hc.core5.util.Args;\n\n/**\n * RequestTargetHost is responsible for copying {@code Host} header value to\n * {@link HttpRequest#setAuthority(URIAuthority)} of the incoming message.\n * This interceptor is required for server side protocol processors.\n *\n * @since 5.0\n */\n<fim_suffix>@Contract(threading = ThreadingBehavior.IMMUTABLE)\npublic class RequestValidateHost implements HttpRequestInterceptor {\n\n    public RequestValidateHost() {\n        super();\n    }\n\n    @Override\n    public void process(final HttpRequest request, final EntityDetails entity, final HttpContext context)\n            throws HttpException, IOException {\n        Args.notNull(request, \"HTTP request\");\n\n        final Header header = request.getHeader(HttpHeaders.HOST);\n        if (header != null) {\n            final URIAuthority authority;\n            try {\n                authority = URIAuthority.create(header.getValue());\n            } catch (final URISyntaxException ex) {\n                throw new ProtocolException(ex.getMessage(), ex);\n            }\n            request.setAuthority(authority);\n        } else {\n            final ProtocolVersion version = request.getVersion() != null ? request.getVersion() : HttpVersion.HTTP_1_1;\n            if (version.greaterEquals(HttpVersion.HTTP_1_1)) {\n                throw new ProtocolException(\"Host header is absent\");\n            }\n        }\n    }\n\n}<fim_middle>// class below has no smell\n"}