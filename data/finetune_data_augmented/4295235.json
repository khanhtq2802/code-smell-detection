{"text": "<fim_prefix>/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements. See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership. The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\npackage org.apache.deltaspike.core.impl.config;\n\n\n\n/**\n * {@link org.apache.deltaspike.core.spi.config.ConfigSource}\n * which uses {@link System#getenv()}\n *\n * We also allow to write underlines _ instead of dots _ in the\n * environment via export (unix) or SET (windows)\n */\n<fim_suffix>class EnvironmentPropertyConfigSource extends MapConfigSource\n{\n\n    EnvironmentPropertyConfigSource()\n    {\n        super(System.getenv());\n        initOrdinal(300);\n    }\n\n    \n    /**\n     * {@inheritDoc}\n     */\n    @Override\n    public String getConfigName()\n    {\n        return \"environment-properties\";\n    }\n\n    @Override\n    public String getPropertyValue(String key)\n    {\n        String val = super.getPropertyValue(key);\n        if (val == null || val.isEmpty())\n        {\n            val = super.getPropertyValue(key.replace('.', '_'));\n        }\n\n        return val;\n    }\n\n    @Override\n    public boolean isScannable()\n    {\n        return true;\n    }\n}<fim_middle>// class below has no smell\n"}