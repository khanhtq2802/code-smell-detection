{"text": "<fim_prefix>/****************************************************************\n * Licensed to the Apache Software Foundation (ASF) under one   *\n * or more contributor license agreements.  See the NOTICE file *\n * distributed with this work for additional information        *\n * regarding copyright ownership.  The ASF licenses this file   *\n * to you under the Apache License, Version 2.0 (the            *\n * \"License\"); you may not use this file except in compliance   *\n * with the License.  You may obtain a copy of the License at   *\n *                                                              *\n *   http://www.apache.org/licenses/LICENSE-2.0                 *\n *                                                              *\n * Unless required by applicable law or agreed to in writing,   *\n * software distributed under the License is distributed on an  *\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY       *\n * KIND, either express or implied.  See the License for the    *\n * specific language governing permissions and limitations      *\n * under the License.                                           *\n ****************************************************************/\npackage org.apache.james.mailbox.store.mail.model.impl;\n\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.util.Date;\nimport java.util.List;\n\nimport javax.mail.internet.SharedInputStream;\n\nimport org.apache.james.mailbox.model.MessageAttachment;\nimport org.apache.james.mailbox.model.MessageId;\nimport org.apache.james.mailbox.store.mail.model.Message;\nimport org.apache.james.mailbox.store.mail.model.Property;\n\nimport com.google.common.collect.ImmutableList;\n\n<fim_suffix>public class SimpleMessage implements Message {\n\n    private final MessageId messageId;\n    private final String subType;\n    private final String mediaType;\n    private final SharedInputStream content;\n    private final int bodyStartOctet;\n    private final Date internalDate;\n    private final long size;\n    private final Long textualLineCount;\n    private final List<Property> properties;\n    private final List<MessageAttachment> attachments;\n\n    public SimpleMessage(MessageId messageId, SharedInputStream content, long size, Date internalDate, String subType, String mediaType, int bodyStartOctet, Long textualLineCount, List<Property> properties, List<MessageAttachment> attachments) {\n        this.messageId = messageId;\n        this.subType = subType;\n        this.mediaType = mediaType;\n        this.content = content;\n        this.bodyStartOctet = bodyStartOctet;\n        this.internalDate = internalDate;\n        this.size = size;\n        this.textualLineCount = textualLineCount;\n        this.properties = properties;\n        this.attachments = attachments;\n    }\n\n    public SimpleMessage(MessageId messageId, SharedInputStream content, long size, Date internalDate, String subType, String mediaType, int bodyStartOctet, Long textualLineCount, List<Property> properties) {\n        this(messageId, content, size, internalDate, subType, mediaType, bodyStartOctet, textualLineCount, properties, ImmutableList.<MessageAttachment>of());\n    }\n\n    @Override\n    public MessageId getMessageId() {\n        return messageId;\n    }\n\n    @Override\n    public Date getInternalDate() {\n        return internalDate;\n    }\n\n    @Override\n    public InputStream getBodyContent() throws IOException {\n        return content.newStream(bodyStartOctet, -1);\n    }\n\n    @Override\n    public String getMediaType() {\n        return mediaType;\n    }\n\n    @Override\n    public String getSubType() {\n        return subType;\n    }\n\n    @Override\n    public long getBodyOctets() {\n        return getFullContentOctets() - bodyStartOctet;\n    }\n\n    @Override\n    public long getHeaderOctets() {\n        return bodyStartOctet;\n    }\n\n    @Override\n    public long getFullContentOctets() {\n        return size;\n    }\n\n    @Override\n    public Long getTextualLineCount() {\n        return textualLineCount;\n    }\n\n    @Override\n    public InputStream getHeaderContent() throws IOException {\n        long headerEnd = bodyStartOctet;\n        if (headerEnd < 0) {\n            headerEnd = 0;\n        }\n        return content.newStream(0, headerEnd);\n    }\n\n    @Override\n    public InputStream getFullContent() throws IOException {\n        return content.newStream(0, -1);\n    }\n\n    @Override\n    public List<Property> getProperties() {\n        return properties;\n    }\n\n    @Override\n    public List<MessageAttachment> getAttachments() {\n        return attachments;\n    }\n}<fim_middle>// class below is data class\n"}