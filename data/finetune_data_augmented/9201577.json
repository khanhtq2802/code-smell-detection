{"text": "<fim_prefix>\n<fim_suffix>public class ResultSetWrapper implements IResultIterator\n{\n\tprivate SimpleResultSet source;\n\tprivate int index;\n\tprivate CachedList cachedRows;\n\tprivate IResultClass trimedResultClass;\n\tpublic ResultSetWrapper( DataEngineSession session, SimpleResultSet source ) throws DataException\n\t{\n\t\tthis.source = source;\n\t\tthis.index = source.getCurrentResultIndex( );\n\t\tthis.cachedRows = new CachedList( session.getTempDir( ),\n\t\t\t\tDataEngineSession.getCurrentClassLoader( ),\n\t\t\t\tnew ResultObjectHolderCreator( ) );\n\t\tList<ResultFieldMetadata> metas = new ArrayList<ResultFieldMetadata>();\n\t\tfor( int i = 1; i <= this.source.getResultClass( ).getFieldCount( ); i++)\n\t\t{\n\t\t\tResultFieldMetadata meta = this.source.getResultClass( ).getFieldMetaData( i );\n\t\t\tif( meta.getName( ).startsWith( \"_{$TEMP\" ))\n\t\t\t\tcontinue;\n\t\t\tmetas.add( meta );\n\t\t} \n\t\tthis.trimedResultClass = new ResultClass( metas );\n\t\tif( this.index == 0 )\n\t\t{\n\t\t\tthis.cachedRows.add( new ResultObjectHolder( source.getCurrentResult( ),\n\t\t\t\t\tsource.getStartingGroupLevel( ),\n\t\t\t\t\tsource.getEndingGroupLevel( ), source.getGroupIndex( ) ) );\n\t\t}\n\t}\n\tprotected void initialize( ) throws DataException\n\t{\n\t\tthis.index = source.getCurrentResultIndex( );\n\t\tif( this.index == 0 )\n\t\t{\n\t\t\tthis.cachedRows.add( new ResultObjectHolder( source.getCurrentResult( ),\n\t\t\t\t\tsource.getStartingGroupLevel( ),\n\t\t\t\t\tsource.getEndingGroupLevel( ), source.getGroupIndex( ) ) );\n\t\t}\n\t}\n\tpublic IResultClass getResultClass( ) throws DataException\n\t{\n\t\treturn this.source.getResultClass( );\n\t}\n\tpublic boolean next( ) throws DataException\n\t{\n\t\tif( this.index < this.cachedRows.size( ) - 1 )\n\t\t{\n\t\t\tthis.index++;\n\t\t\treturn true;\n\t\t}\n\t\telse if( this.index == this.cachedRows.size( ) - 1 )\n\t\t{\n\t\t\tboolean result = this.source.next( );\n\t\t\tthis.index++;\t\t\t\n\t\t\tif( result )\n\t\t\t{\n\t\t\t\tthis.cachedRows.add( new ResultObjectHolder( this.source.getCurrentResult( ),\n\t\t\t\t\t\tthis.source.getStartingGroupLevel( ),\n\t\t\t\t\t\tthis.source.getEndingGroupLevel( ), source.getGroupIndex( ) ) );\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\t\telse \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\tpublic void first( int groupingLevel ) throws DataException\n\t{\n\t\tif( groupingLevel!= 0 )\n\t\t\tthrow new UnsupportedOperationException();\n\t}\n\tpublic void last( int groupingLevel ) throws DataException\n\t{\n\t\tthrow new UnsupportedOperationException();\n\t}\n\tpublic IResultObject getCurrentResult( ) throws DataException\n\t{\n\t\tif( this.index >= this.cachedRows.size( )||this.index < 0)\n\t\t\treturn null;\n\t\treturn getResultObjectHolder( ).getResultObject( );\n\t}\n\tpublic int getCurrentResultIndex( ) throws DataException\n\t{\n\t\treturn this.index;\n\t}\n\tpublic int getCurrentGroupIndex( int groupLevel ) throws DataException\n\t{\n\t\treturn this.getResultObjectHolder( ).getCurrentGroupIndex( groupLevel-1 );\n\t}\n\tpublic int getStartingGroupLevel( ) throws DataException\n\t{\n\t\tassert this.index < this.cachedRows.size( );\n\t\treturn getResultObjectHolder( ).getStartingGroupIndex( );\n\t}\n\tprivate ResultObjectHolder getResultObjectHolder( )\n\t{\n\t\treturn ((ResultObjectHolder)this.cachedRows.get( this.index ));\n\t}\n\tpublic int getEndingGroupLevel( ) throws DataException\n\t{\n\t\tassert this.index < this.cachedRows.size( );\n\t\treturn getResultObjectHolder( ).getEndingGroupIndex( );\n\t}\n\tpublic void close( ) throws DataException\n\t{\n\t\tthis.source.close( );\n\t}\n\tpublic int[] getGroupStartAndEndIndex( int groupLevel )\n\t\t\tthrows DataException\n\t{\n\t\treturn this.source.getGroupStartAndEndIndex( groupLevel );\n\t}\n\tpublic ResultSetCache getResultSetCache( )\n\t{\n\t\tthrow new UnsupportedOperationException();\n\t}\n\tpublic int getRowCount( ) throws DataException\n\t{\n\t\treturn this.source.getRowCount( );\n\t}\n\tpublic IExecutorHelper getExecutorHelper( )\n\t{\n\t\treturn this.source.getExecutorHelper( );\n\t}\n\tpublic void doSave( StreamWrapper streamsWrapper, boolean isSubQuery )\n\t\t\tthrows DataException\n\t{\n\t\tthis.source.doSave( streamsWrapper, isSubQuery );\n\t}\n\tpublic void incrementalUpdate( StreamWrapper streamsWrapper, int rowCount,\n\t\t\tboolean isSubQuery ) throws DataException\n\t{\n\t\tthis.source.incrementalUpdate( streamsWrapper, rowCount, isSubQuery );\n\t}\n\tpublic Object getAggrValue( String aggrName ) throws DataException\n\t{\n\t\twhile( !this.source.aggrValueAvailable( aggrName, this.index ))\n\t\t{\n\t\t\tif( this.source.next( ) )\n\t\t\t{\n\t\t\t\t\tthis.cachedRows.add( new ResultObjectHolder( this.source.getCurrentResult( ),\n\t\t\t\t\t\tthis.source.getStartingGroupLevel( ),\n\t\t\t\t\t\tthis.source.getEndingGroupLevel( ) ,this.source.getGroupIndex( )));\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn this.source.getAggrHelper( ).getAggrValue( aggrName, this );\n\t}\n\tprivate class ResultObjectHolder implements ICachedObject\n\t{\n\t\tprivate IResultObject ro;\n\t\tprivate int startingGroupIndex;\n\t\tprivate int endingGroupIndex;\n\t\tprivate Object[] groupIndex;\n\t\tpublic ResultObjectHolder( IResultObject ro, Integer startingGroupIndex, Integer endingGroupIndex, Object[] groupIndex )\n\t\t{\n\t\t\tthis.ro = ro;\n\t\t\tthis.startingGroupIndex = startingGroupIndex;\n\t\t\tthis.endingGroupIndex = endingGroupIndex;\n\t\t\tthis.groupIndex = groupIndex;\n\t\t}\n\t\tpublic int getCurrentGroupIndex( int groupLevel )\n\t\t{\n\t\t\tint candidateIndex = (Integer)this.groupIndex[groupLevel]-1;\n\t\t\tif( candidateIndex >= 0 )\n\t\t\t\treturn candidateIndex;\n\t\t\treturn 0;\n\t\t}\n\t\tpublic IResultObject getResultObject()\n\t\t{\n\t\t\treturn this.ro;\n\t\t}\n\t\tpublic int getStartingGroupIndex()\n\t\t{\n\t\t\treturn this.startingGroupIndex;\n\t\t}\n\t\tpublic int getEndingGroupIndex()\n\t\t{\n\t\t\treturn this.endingGroupIndex;\n\t\t}\n\t\tpublic Object[] getFieldValues( )\n\t\t{\n\t\t\tObject[] result = new Object[trimedResultClass.getFieldCount( )+2+this.groupIndex.length];\n\t\t\tfor( int i = 0; i < trimedResultClass.getFieldCount( ); i++ )\n\t\t\t{\n\t\t\t\ttry\n\t\t\t\t{\n\t\t\t\t\tresult[i] = this.ro.getFieldValue( i+1 );\n\t\t\t\t}\n\t\t\t\tcatch ( DataException e )\n\t\t\t\t{\n\t\t\t\t\tresult[i] = e;\n\t\t\t\t}\n\t\t\t}\n\t\t\tresult[trimedResultClass.getFieldCount( )] = this.startingGroupIndex;\n\t\t\tresult[trimedResultClass.getFieldCount( )+1] = this.endingGroupIndex;\n\t\t\tfor( int i = trimedResultClass.getFieldCount( )+2; i < result.length; i++ )\n\t\t\t{\n\t\t\t\tresult[i] = this.groupIndex[i-trimedResultClass.getFieldCount( )-2];\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\t}\n\t/**\n\t * A creator class implemented ICachedObjectCreator. This class is used to\n\t * create GroupInfo object.\n\t * \n\t * @author Administrator\n\t * \n\t */\n\tclass ResultObjectHolderCreator implements ICachedObjectCreator\n\t{\n\t\t/*\n\t\t * (non-Javadoc)\n\t\t * @see org.eclipse.birt.data.engine.cache.ICachedObjectCreator#createInstance(java.lang.Object[])\n\t\t */\n\t\tpublic ICachedObject createInstance(Object[] fields)\n\t\t{\n\t\t\ttry\n\t\t\t{\n\t\t\t\tObject[] resultValues = new Object[ trimedResultClass.getFieldCount( ) ];\n\t\t\t\tSystem.arraycopy( fields, 0, resultValues, 0,  Math.min( fields.length, resultValues.length) );\n\t\t\t\tObject[] results = new Object[fields.length<fim_middle>// class below has no smell\n"}