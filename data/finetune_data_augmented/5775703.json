{"text": "<fim_prefix>/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\npackage org.apache.syncope.common.lib.to;\n\nimport com.fasterxml.jackson.annotation.JsonProperty;\nimport com.fasterxml.jackson.annotation.JsonTypeInfo;\nimport java.io.Serializable;\nimport java.net.URI;\nimport java.util.ArrayList;\nimport java.util.List;\nimport javax.xml.bind.annotation.XmlElement;\nimport javax.xml.bind.annotation.XmlElementWrapper;\nimport javax.xml.bind.annotation.XmlRootElement;\nimport javax.xml.bind.annotation.XmlType;\nimport org.apache.commons.lang3.builder.EqualsBuilder;\nimport org.apache.commons.lang3.builder.HashCodeBuilder;\nimport org.apache.syncope.common.lib.BaseBean;\n\n<fim_suffix>@XmlRootElement(name = \"pagedResult\")\n@XmlType\npublic class PagedResult<T extends BaseBean> implements Serializable {\n\n    private static final long serialVersionUID = 3472875885259250934L;\n\n    private URI prev;\n\n    private URI next;\n\n    private final List<T> result = new ArrayList<>();\n\n    private int page;\n\n    private int size;\n\n    private int totalCount;\n\n    public URI getPrev() {\n        return prev;\n    }\n\n    public void setPrev(final URI prev) {\n        this.prev = prev;\n    }\n\n    public URI getNext() {\n        return next;\n    }\n\n    public void setNext(final URI next) {\n        this.next = next;\n    }\n\n    @XmlElementWrapper(name = \"result\")\n    @XmlElement(name = \"item\")\n    @JsonProperty(\"result\")\n    @JsonTypeInfo(use = JsonTypeInfo.Id.CLASS, include = JsonTypeInfo.As.PROPERTY, property = \"@class\")\n    public List<T> getResult() {\n        return result;\n    }\n\n    public int getPage() {\n        return page;\n    }\n\n    public void setPage(final int page) {\n        this.page = page;\n    }\n\n    public int getSize() {\n        return size;\n    }\n\n    public void setSize(final int size) {\n        this.size = size;\n    }\n\n    public int getTotalCount() {\n        return totalCount;\n    }\n\n    public void setTotalCount(final int totalCount) {\n        this.totalCount = totalCount;\n    }\n\n    @Override\n    public int hashCode() {\n        return new HashCodeBuilder().\n                append(prev).\n                append(next).\n                append(result).\n                append(page).\n                append(size).\n                append(totalCount).\n                build();\n    }\n\n    @Override\n    public boolean equals(final Object obj) {\n        if (this == obj) {\n            return true;\n        }\n        if (obj == null) {\n            return false;\n        }\n        if (getClass() != obj.getClass()) {\n            return false;\n        }\n        @SuppressWarnings(\"unchecked\")\n        final PagedResult<T> other = (PagedResult<T>) obj;\n        return new EqualsBuilder().\n                append(prev, other.prev).\n                append(next, other.next).\n                append(result, other.result).\n                append(page, other.page).\n                append(size, other.size).\n                append(totalCount, other.totalCount).\n                build();\n    }\n}<fim_middle>// class below is data class\n"}