{"text": "<fim_prefix>             try {\n               return APIRequestCreateSentInprogressOnBehalfRequest.this.parseResponse(result.getBody(), result.getHeader());\n             } catch (Exception e) {\n               throw new RuntimeException(e);\n             }\n           }\n         }\n      );\n    };\n    public APIRequestCreateSentInprogressOnBehalfRequest(String nodeId, APIContext context) {\n      super(context, nodeId, \"/sent_inprogress_onbehalf_requests\", \"POST\", Arrays.asList(PARAMS));\n    }\n    @Override\n    public APIRequestCreateSentInprogressOnBehalfRequest setParam(String param, Object value) {\n      setParamInternal(param, value);\n      return this;\n    }\n    @Override\n    public APIRequestCreateSentInprogressOnBehalfRequest setParams(Map<String, Object> params) {\n      setParamsInternal(params);\n      return this;\n    }\n    public APIRequestCreateSentInprogressOnBehalfRequest setReceivingBusiness (String receivingBusiness) {\n      this.setParam(\"receiving_business\", receivingBusiness);\n      return this;\n    }\n    public APIRequestCreateSentInprogressOnBehalfRequest setBusinessOwnedObject (String businessOwnedObject) {\n      this.setParam(\"business_owned_object\", businessOwnedObject);\n      return this;\n    }\n    public APIRequestCreateSentInprogressOnBehalfRequest requestAllFields () {\n      return this.requestAllFields(true);\n    }\n    public APIRequestCreateSentInprogressOnBehalfRequest requestAllFields (boolean value) {\n      for (String field : FIELDS) {\n        this.requestField(field, value);\n      }\n      return this;\n    }\n    @Override\n    public APIRequestCreateSentInprogressOnBehalfRequest requestFields (List<String> fields) {\n      return this.requestFields(fields, true);\n    }\n    @Override\n    public APIRequestCreateSentInprogressOnBehalfRequest requestFields (List<String> fields, boolean value) {\n      for (String field : fields) {\n        this.requestField(field, value);\n      }\n      return this;\n    }\n    @Override\n    public APIRequestCreateSentInprogressOnBehalfRequest requestField (String field) {\n      this.requestField(field, true);\n      return this;\n    }\n    @Override\n    public APIRequestCreateSentInprogressOnBehalfRequest requestField (String field, boolean value) {\n      this.requestFieldInternal(field, value);\n      return this;\n    }\n  }\n  public static class APIRequestGetSharedAudiencePermissions extends APIRequest<AudiencePermission> {\n    APINodeList<AudiencePermission> lastResponse = null;\n    @Override\n    public APINodeList<AudiencePermission> getLastResponse() {\n      return lastResponse;\n    }\n    public static final String[] PARAMS = {\n      \"partner_id\",\n    };\n    public static final String[] FIELDS = {\n      \"audience\",\n      \"share_account_id\",\n      \"share_account_name\",\n    };\n    @Override\n    public APINodeList<AudiencePermission> parseResponse(String response, String header) throws APIException {\n      return AudiencePermission.parseResponse(response, getContext(), this, header);\n    }\n    @Override\n    public APINodeList<AudiencePermission> execute() throws APIException {\n      return execute(new HashMap<String, Object>());\n    }\n    @Override\n    public APINodeList<AudiencePermission> execute(Map<String, Object> extraParams) throws APIException {\n      ResponseWrapper rw = executeInternal(extraParams);\n      lastResponse = parseResponse(rw.getBody(),rw.getHeader());\n      return lastResponse;\n    }\n    public ListenableFuture<APINodeList<AudiencePermission>> executeAsync() throws APIException {\n      return executeAsync(new HashMap<String, Object>());\n    };\n    public ListenableFuture<APINodeList<AudiencePermission>> executeAsync(Map<String, Object> extraParams) throws APIException {\n      return Futures.transform(\n        executeAsyncInternal(extraParams),\n        new Function<ResponseWrapper, APINodeList<AudiencePermission>>() {\n           public APINodeList<AudiencePermission> apply(ResponseWrapper result) {\n             try {\n               return APIRequestGetSharedAudiencePermissions.this.parseResponse(result.getBody(), result.getHeader());\n             } catch (Exception e) {\n               throw new RuntimeException(e);\n             }\n           }\n         }\n      );\n    };\n    public APIRequestGetSharedAudiencePermissions(String nodeId, APIContext context) {\n      super(context, nodeId, \"/shared_audience_permissions\", \"GET\", Arrays.asList(PARAMS));\n    }\n    @Override\n    public APIRequestGetSharedAudiencePermissions setParam(String param, Object value) {\n      setParamInternal(param, value);\n      return this;\n    }\n    @Override\n    public APIRequestGetSharedAudiencePermissions setParams(Map<String, Object> params) {\n      setParamsInternal(params);\n      return this;\n    }\n    public APIRequestGetSharedAudiencePermissions setPartnerId (String partnerId) {\n      this.setParam(\"partner_id\", partnerId);\n      return this;\n    }\n    public APIRequestGetSharedAudiencePermissions requestAllFields () {\n      return this.requestAllFields(true);\n    }\n    public APIRequestGetSharedAudiencePermissions requestAllFields (boolean value) {\n      for (String field : FIELDS) {\n        this.requestField(field, value);\n      }\n      return this;\n    }\n    @Override\n    public APIRequestGetSharedAudiencePermissions requestFields (List<String> fields) {\n      return this.requestFields(fields, true);\n    }\n    @Override\n    public APIRequestGetSharedAudiencePermissions requestFields (List<String> fields, boolean value) {\n      for (String field : fields) {\n        this.requestField(field, value);\n      }\n      return this;\n    }\n    @Override\n    public APIRequestGetSharedAudiencePermissions requestField (String field) {\n      this.requestField(field, true);\n      return this;\n    }\n    @Override\n    public APIRequestGetSharedAudiencePermissions requestField (String field, boolean value) {\n      this.requestFieldInternal(field, value);\n      return this;\n    }\n    public APIRequestGetSharedAudiencePermissions requestAudienceField () {\n      return this.requestAudienceField(true);\n    }\n    public APIRequestGetSharedAudiencePermissions requestAudienceField (boolean value) {\n      this.requestField(\"audience\", value);\n      return this;\n    }\n    public APIRequestGetSharedAudiencePermissions requestShareAccountIdField () {\n      return this.requestShareAccountIdField(true);\n    }\n    public APIRequestGetSharedAudiencePermissions requestShareAccountIdField (boolean value) {\n      this.requestField(\"share_account_id\", value);\n      return this;\n    }\n    public APIRequestGetSharedAudiencePermissions requestShareAccountNameField () {\n      return this.requestShareAccountNameField(true);\n    }\n    public APIRequestGetSharedAudiencePermissions requestShareAccountNameField (boolean value) {\n      this.requestField(\"share_account_name\", value);\n      return this;\n    }\n  }\n  public static class APIRequestCreateSpacoDataSetCollection extends APIRequest<APINode> {\n    APINode lastResponse = null;\n    @Override\n    public APINode getLastResponse() {\n      return lastResponse;\n    }\n    public static final String[] PARAMS = {\n      \"spaco_data_collections\",\n    };\n    public static final String[] FIELDS = {\n    };\n    @Override\n    public APINode parseResponse(String response, String header) throws APIException {\n      return APINode.parseResponse(response, getContext(), this, header).head();\n    }\n    @Override\n    public APINode execute() throws APIException {\n      return execute(new HashMap<String, Object>());\n    }\n    @Override\n    public APINode execute(Map<String, Object> extraParams) throws APIException {\n      ResponseWrapper rw = executeInternal(extraParams);\n      lastResponse = parseResponse(rw.getBody(), rw.getHeader());\n      return lastResponse;\n    }\n    public ListenableFuture<APINode> executeAsync() throws APIException {\n      return executeAsync(new HashMap<String, Object>());\n    };\n    public ListenableFuture<APINode> executeAsync(Map<String, Object> extraParams) throws APIException {\n      return Futures.transform(\n        executeAsyncInternal(extraParams),\n        new Function<ResponseWrapper, APINode>() {\n           public APINode apply(ResponseWrapper result) {\n             try {\n               return APIRequestCreateSpacoDataSetCollection.this.parseResponse(result.getBody(), result.getHeader());\n             } catch (Exception e) {\n               throw new RuntimeException(e);\n             }\n           }\n         }\n      );\n    };\n    public APIRequestCreateSpacoDataSetCollection(String nodeId, APIContext context) {\n      super(context, nodeId, \"/spaco_dataset_collections\", \"POST\", Arrays.asList(PARAMS));\n    }\n    @Override\n    public APIRequestCreateSpacoDataSetCollection setParam(String param, Object value) {\n      setParamInternal(param, value);\n      return this;\n    }\n<fim_suffix>    @Override\n    public APIRequestCreateSpacoDataSetCollection setParams(Map<String, Object> params) {\n      setParamsInternal(params);\n      return this;\n    }<fim_middle>// function below has no smell\n"}