{"text": "<fim_prefix>/***********************************************************************\n * Copyright (c) 2004 Actuate Corporation.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n * Actuate Corporation - initial API and implementation\n ***********************************************************************/\n\npackage org.eclipse.birt.chart.model.attribute.impl;\n\nimport org.eclipse.birt.chart.model.attribute.AttributeFactory;\nimport org.eclipse.birt.chart.model.attribute.AttributePackage;\nimport org.eclipse.birt.chart.model.attribute.ScriptValue;\nimport org.eclipse.birt.chart.model.data.ScriptExpression;\nimport org.eclipse.birt.chart.util.ChartUtil;\nimport org.eclipse.emf.common.notify.Notification;\nimport org.eclipse.emf.ecore.EClass;\nimport org.eclipse.emf.ecore.impl.ENotificationImpl;\n\n/**\n * <!-- begin-user-doc --> An implementation of the model object '\n * <em><b>Script Value</b></em>'. <!-- end-user-doc -->\n * <p>\n * The following features are implemented:\n * <ul>\n *   <li>{@link org.eclipse.birt.chart.model.attribute.impl.ScriptValueImpl#getScript <em>Script</em>}</li>\n * </ul>\n * </p>\n *\n * @generated\n */\n<fim_suffix>public class ScriptValueImpl extends ActionValueImpl implements ScriptValue\n{\n\n\t/**\n\t * The default value of the '{@link #getScript() <em>Script</em>}' attribute.\n\t * <!-- begin-user-doc --> <!-- end-user-doc -->\n\t * @see #getScript()\n\t * @generated\n\t * @ordered\n\t */\n\tprotected static final String SCRIPT_EDEFAULT = null;\n\n\t/**\n\t * The cached value of the '{@link #getScript() <em>Script</em>}' attribute.\n\t * <!-- begin-user-doc --> <!-- end-user-doc -->\n\t * @see #getScript()\n\t * @generated\n\t * @ordered\n\t */\n\tprotected String script = SCRIPT_EDEFAULT;\n\n\t/**\n\t * <!-- begin-user-doc --> <!-- end-user-doc -->\n\t * @generated\n\t */\n\tprotected ScriptValueImpl( )\n\t{\n\t\tsuper( );\n\t}\n\n\t/**\n\t * <!-- begin-user-doc --> <!-- end-user-doc -->\n\t * @generated\n\t */\n\t@Override\n\tprotected EClass eStaticClass( )\n\t{\n\t\treturn AttributePackage.Literals.SCRIPT_VALUE;\n\t}\n\n\t/**\n\t * <!-- begin-user-doc --> <!-- end-user-doc -->\n\t * @generated\n\t */\n\tpublic String getScript( )\n\t{\n\t\treturn script;\n\t}\n\n\t/**\n\t * <!-- begin-user-doc --> <!-- end-user-doc -->\n\t * @generated\n\t */\n\tpublic void setScript( String newScript )\n\t{\n\t\tString oldScript = script;\n\t\tscript = newScript;\n\t\tif ( eNotificationRequired( ) )\n\t\t\teNotify( new ENotificationImpl( this,\n\t\t\t\t\tNotification.SET,\n\t\t\t\t\tAttributePackage.SCRIPT_VALUE__SCRIPT,\n\t\t\t\t\toldScript,\n\t\t\t\t\tscript ) );\n\t}\n\n\t/**\n\t * <!-- begin-user-doc -->\n\t * <!-- end-user-doc -->\n\t * @generated\n\t */\n\t@Override\n\tpublic Object eGet( int featureID, boolean resolve, boolean coreType )\n\t{\n\t\tswitch ( featureID )\n\t\t{\n\t\t\tcase AttributePackage.SCRIPT_VALUE__SCRIPT :\n\t\t\t\treturn getScript( );\n\t\t}\n\t\treturn super.eGet( featureID, resolve, coreType );\n\t}\n\n\t/**\n\t * <!-- begin-user-doc -->\n\t * <!-- end-user-doc -->\n\t * @generated\n\t */\n\t@Override\n\tpublic void eSet( int featureID, Object newValue )\n\t{\n\t\tswitch ( featureID )\n\t\t{\n\t\t\tcase AttributePackage.SCRIPT_VALUE__SCRIPT :\n\t\t\t\tsetScript( (String) newValue );\n\t\t\t\treturn;\n\t\t}\n\t\tsuper.eSet( featureID, newValue );\n\t}\n\n\t/**\n\t * <!-- begin-user-doc -->\n\t * <!-- end-user-doc -->\n\t * @generated\n\t */\n\t@Override\n\tpublic void eUnset( int featureID )\n\t{\n\t\tswitch ( featureID )\n\t\t{\n\t\t\tcase AttributePackage.SCRIPT_VALUE__SCRIPT :\n\t\t\t\tsetScript( SCRIPT_EDEFAULT );\n\t\t\t\treturn;\n\t\t}\n\t\tsuper.eUnset( featureID );\n\t}\n\n\t/**\n\t * <!-- begin-user-doc -->\n\t * <!-- end-user-doc -->\n\t * @generated\n\t */\n\t@Override\n\tpublic boolean eIsSet( int featureID )\n\t{\n\t\tswitch ( featureID )\n\t\t{\n\t\t\tcase AttributePackage.SCRIPT_VALUE__SCRIPT :\n\t\t\t\treturn SCRIPT_EDEFAULT == null ? script != null\n\t\t\t\t\t\t: !SCRIPT_EDEFAULT.equals( script );\n\t\t}\n\t\treturn super.eIsSet( featureID );\n\t}\n\n\t/**\n\t * <!-- begin-user-doc --> <!-- end-user-doc -->\n\t * @generated\n\t */\n\t@Override\n\tpublic String toString( )\n\t{\n\t\tif ( eIsProxy( ) )\n\t\t\treturn super.toString( );\n\n\t\tStringBuffer result = new StringBuffer( super.toString( ) );\n\t\tresult.append( \" (script: \" ); //$NON-NLS-1$\n\t\tresult.append( script );\n\t\tresult.append( ')' );\n\t\treturn result.toString( );\n\t}\n\n\t/**\n\t * A convenience method provided to build a script action value when needed\n\t * \n\t * @param script\n\t * @return\n\t */\n\tpublic static final ScriptValue create( String script )\n\t{\n\t\tScriptValue sv = AttributeFactory.eINSTANCE.createScriptValue( );\n\t\tsv.setScript( script );\n\t\treturn sv;\n\t}\n\n\t/**\n\t * A convenient method to get an instance copy. This is much faster than the\n\t * ECoreUtil.copy().\n\t */\n\tpublic ScriptValue copyInstance( )\n\t{\n\t\tScriptValueImpl dest = new ScriptValueImpl( );\n\t\tdest.set( this );\n\t\treturn dest;\n\t}\n\n\tprotected void set( ScriptValue src )\n\t{\n\t\tsuper.set( src );\n\t\tscript = src.getScript( );\n\t}\n\n\t/*\n\t * Get script expression.\n\t * \n\t * @return expression the script expression.\n\t */\n\tpublic ScriptExpression getScriptExpression( )\n\t{\n\t\tScriptExpression expression = new ScriptExpression( );\n\t\texpression.setType( ChartUtil.getExpressionType( script ) );\n\t\texpression.setValue( ChartUtil.getExpressionText( script ) );\n\t\treturn expression;\n\t}\n\n\t/*\n\t * Set script expression.\n\t * \n\t * @param expression the script expression.\n\t */\n\tpublic void setScriptExpression( ScriptExpression expression )\n\t{\n\t\tsetScript( ChartUtil.adaptExpression( expression ) );\n\t}\n\n} // ScriptValueImpl<fim_middle>// class below has no smell\n"}