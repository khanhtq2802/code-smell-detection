{"text": "<fim_prefix>/*\n *  Licensed to the Apache Software Foundation (ASF) under one\n *  or more contributor license agreements.  See the NOTICE file\n *  distributed with this work for additional information\n *  regarding copyright ownership.  The ASF licenses this file\n *  to you under the Apache License, Version 2.0 (the\n *  \"License\"); you may not use this file except in compliance\n *  with the License.  You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing,\n *  software distributed under the License is distributed on an\n *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n *  KIND, either express or implied.  See the License for the\n *  specific language governing permissions and limitations\n *  under the License.\n */\n\npackage org.apache.isis.core.metamodel.facets.actions.layout;\n\nimport org.apache.isis.applib.annotation.ActionLayout;\nimport org.apache.isis.applib.annotation.When;\nimport org.apache.isis.applib.annotation.Where;\nimport org.apache.isis.core.metamodel.adapter.ObjectAdapter;\nimport org.apache.isis.core.metamodel.facetapi.FacetHolder;\nimport org.apache.isis.core.metamodel.facets.all.hide.HiddenFacet;\nimport org.apache.isis.core.metamodel.facets.members.hidden.HiddenFacetAbstract;\n\n<fim_suffix>public class HiddenFacetForActionLayoutAnnotation extends HiddenFacetAbstract {\n\n    public static HiddenFacet create(final ActionLayout actionLayout, final FacetHolder holder) {\n        if (actionLayout == null) {\n            return null;\n        }\n        final Where where = actionLayout.hidden();\n        return where != null && where != Where.NOT_SPECIFIED  ? new HiddenFacetForActionLayoutAnnotation(where, holder) : null;\n    }\n\n    private HiddenFacetForActionLayoutAnnotation(final Where where, final FacetHolder holder) {\n        super(When.ALWAYS, where, holder);\n    }\n\n    @Override\n    public String hiddenReason(final ObjectAdapter targetAdapter, final Where whereContext) {\n        if(!where().includes(whereContext)) {\n            return null;\n        }\n        return \"Hidden on \" + where().getFriendlyName();\n    }\n\n}<fim_middle>// class below has no smell\n"}