{"text": "<fim_prefix>/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage org.apache.hadoop.hdfs;\n\nimport java.io.IOException;\n\nimport org.apache.hadoop.classification.InterfaceAudience;\nimport org.apache.hadoop.classification.InterfaceStability;\n\n/** \n  * This exception is thrown when a read encounters a block that has no locations\n  * associated with it.\n  */\n<fim_suffix>@InterfaceAudience.Private\n@InterfaceStability.Evolving\npublic class BlockMissingException extends IOException {\n\n  private static final long serialVersionUID = 1L;\n\n  private String filename;\n  private long   offset;\n\n  /**\n   * An exception that indicates that file was corrupted.\n   * @param filename name of corrupted file\n   * @param description a description of the corruption details\n   */\n  public BlockMissingException(String filename, String description, long offset) {\n    super(description);\n    this.filename = filename;\n    this.offset = offset;\n  }\n\n  /**\n   * Returns the name of the corrupted file.\n   * @return name of corrupted file\n   */\n  public String getFile() {\n    return filename;\n  }\n\n  /**\n   * Returns the offset at which this file is corrupted\n   * @return offset of corrupted file\n   */\n  public long getOffset() {\n    return offset;\n  }\n}<fim_middle>// class below is data class\n"}