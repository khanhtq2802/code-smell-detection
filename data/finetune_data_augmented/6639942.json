{"text": "<fim_prefix>/**\n * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.\n *\n * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,\n * copy, modify, and distribute this software in source code or binary form for use\n * in connection with the web services and APIs provided by Facebook.\n *\n * As with any software that integrates with the Facebook platform, your use of\n * this software is subject to the Facebook Developer Principles and Policies\n * [http://developers.facebook.com/policy/]. This copyright notice shall be\n * included in all copies or substantial portions of the software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\npackage com.facebook;\n\nimport android.content.Context;\nimport android.content.Intent;\nimport android.support.annotation.Nullable;\nimport android.support.v4.content.LocalBroadcastManager;\n\nimport com.facebook.internal.Utility;\nimport com.facebook.internal.Validate;\n\n<fim_suffix>final public class ProfileManager {\n    public static final String ACTION_CURRENT_PROFILE_CHANGED =\n            \"com.facebook.sdk.ACTION_CURRENT_PROFILE_CHANGED\";\n    public static final String EXTRA_OLD_PROFILE =\n            \"com.facebook.sdk.EXTRA_OLD_PROFILE\";\n    public static final String EXTRA_NEW_PROFILE =\n            \"com.facebook.sdk.EXTRA_NEW_PROFILE\";\n\n    private static volatile ProfileManager instance;\n\n    private final LocalBroadcastManager localBroadcastManager;\n    private final ProfileCache profileCache;\n    private Profile currentProfile;\n\n\n    ProfileManager(\n            LocalBroadcastManager localBroadcastManager,\n            ProfileCache profileCache) {\n        Validate.notNull(localBroadcastManager, \"localBroadcastManager\");\n        Validate.notNull(profileCache, \"profileCache\");\n        this.localBroadcastManager = localBroadcastManager;\n        this.profileCache = profileCache;\n    }\n\n    static ProfileManager getInstance() {\n        if (instance == null) {\n            synchronized (ProfileManager.class) {\n                if (instance == null) {\n                    Context applicationContext = FacebookSdk.getApplicationContext();\n                    LocalBroadcastManager localBroadcastManager = LocalBroadcastManager.getInstance(\n                            applicationContext);\n\n                    instance = new ProfileManager(localBroadcastManager, new ProfileCache());\n                }\n            }\n        }\n        return instance;\n    }\n\n    Profile getCurrentProfile() {\n        return currentProfile;\n    }\n\n    boolean loadCurrentProfile() {\n        Profile profile = profileCache.load();\n\n        if (profile != null) {\n            setCurrentProfile(profile, false);\n            return true;\n        }\n\n        return false;\n    }\n\n    void setCurrentProfile(@Nullable Profile currentProfile) {\n        setCurrentProfile(currentProfile, true);\n    }\n\n    private void setCurrentProfile(@Nullable Profile currentProfile, boolean writeToCache) {\n        Profile oldProfile = this.currentProfile;\n        this.currentProfile = currentProfile;\n\n        if (writeToCache) {\n            if (currentProfile != null) {\n                profileCache.save(currentProfile);\n            } else {\n                profileCache.clear();\n            }\n        }\n\n        if (!Utility.areObjectsEqual(oldProfile, currentProfile)) {\n            sendCurrentProfileChangedBroadcast(oldProfile, currentProfile);\n        }\n    }\n\n    private void sendCurrentProfileChangedBroadcast(\n            Profile oldProfile,\n            Profile currentProfile) {\n        Intent intent = new Intent(ACTION_CURRENT_PROFILE_CHANGED);\n\n        intent.putExtra(EXTRA_OLD_PROFILE, oldProfile);\n        intent.putExtra(EXTRA_NEW_PROFILE, currentProfile);\n\n        localBroadcastManager.sendBroadcast(intent);\n    }\n}<fim_middle>// class below has no smell\n"}