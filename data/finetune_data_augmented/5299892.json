{"text": "<fim_prefix>/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\npackage org.apache.parquet.cli;\n\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.net.URLStreamHandler;\nimport org.apache.hadoop.conf.Configurable;\nimport org.apache.hadoop.conf.Configuration;\nimport org.apache.hadoop.fs.FileSystem;\nimport org.apache.hadoop.fs.Path;\n\n/**\n * A {@link URLStreamHandler} for handling Hadoop filesystem URLs,\n * most commonly those with the <i>hdfs</i> scheme.\n */\n<fim_suffix>public class HadoopFileSystemURLStreamHandler extends URLStreamHandler\n    implements Configurable {\n\n  private static Configuration defaultConf = new Configuration();\n\n  public static Configuration getDefaultConf() {\n    return defaultConf;\n  }\n\n  public static void setDefaultConf(Configuration defaultConf) {\n    HadoopFileSystemURLStreamHandler.defaultConf = defaultConf;\n  }\n\n  private Configuration conf = defaultConf;\n\n  @Override\n  public void setConf(Configuration conf) {\n    this.conf = conf;\n  }\n\n  @Override\n  public Configuration getConf() {\n    return conf;\n  }\n\n  @Override\n  protected URLConnection openConnection(URL url) throws IOException {\n    return new HadoopFileSystemURLConnection(url);\n  }\n\n  class HadoopFileSystemURLConnection extends URLConnection {\n    public HadoopFileSystemURLConnection(URL url) {\n      super(url);\n    }\n    @Override\n    public void connect() throws IOException {\n    }\n    @Override\n    public InputStream getInputStream() throws IOException {\n      Path path = new Path(url.toExternalForm());\n      FileSystem fileSystem = path.getFileSystem(conf);\n      return fileSystem.open(path);\n    }\n  }\n}<fim_middle>// class below has no smell\n"}