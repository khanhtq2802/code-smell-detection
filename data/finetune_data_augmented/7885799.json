{"text": "<fim_prefix>/*\n * Copyright 2016-present Facebook, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License. You may obtain\n * a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations\n * under the License.\n */\n\npackage com.facebook.buck.cli.bootstrapper;\n\nimport java.util.concurrent.Callable;\nimport java.util.logging.Handler;\nimport java.util.logging.LogRecord;\n\npublic final class MemoryHandler extends Handler implements Callable<Handler> {\n  private static final Class<?> HANDLER_CLASS =\n      ClassLoaderBootstrapper.loadClass(\"com.facebook.buck.log.memory.MemoryHandler\");\n\n  private final Handler inner;\n\n  public MemoryHandler() throws IllegalAccessException, InstantiationException {\n    inner = (Handler) HANDLER_CLASS.newInstance();\n  }\n\n  @Override\n  public void publish(LogRecord record) {\n    inner.publish(record);\n  }\n\n  @Override\n  public void flush() {\n    inner.flush();\n  }\n\n<fim_suffix>  @Override\n  public void close() throws SecurityException {\n    inner.close();\n  }\n\n  @Override\n  public Handler call() {\n    return inner;\n  }\n}<fim_middle>// function below has no smell\n"}