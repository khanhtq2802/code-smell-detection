{"text": "<fim_prefix>            stopAppMaster_result result = new stopAppMaster_result();\n            {\n              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;\n              msg = (org.apache.thrift.TBase)new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());\n            }\n            try {\n              fcall.sendResponse(fb,msg,msgType,seqid);\n              return;\n            } catch (Exception ex) {\n              LOGGER.error(\"Exception writing to internal frame buffer\", ex);\n            }\n            fb.close();\n          }\n        };\n      }\n      protected boolean isOneway() {\n        return false;\n      }\n      public void start(I iface, stopAppMaster_args args, org.apache.thrift.async.AsyncMethodCallback<Void> resultHandler) throws TException {\n        iface.stopAppMaster(resultHandler);\n      }\n    }\n    public static class startNimbus<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, startNimbus_args, Void> {\n      public startNimbus() {\n        super(\"startNimbus\");\n      }\n      public startNimbus_args getEmptyArgsInstance() {\n        return new startNimbus_args();\n      }\n      public AsyncMethodCallback<Void> getResultHandler(final AsyncFrameBuffer fb, final int seqid) {\n        final org.apache.thrift.AsyncProcessFunction fcall = this;\n        return new AsyncMethodCallback<Void>() { \n          public void onComplete(Void o) {\n            startNimbus_result result = new startNimbus_result();\n            try {\n              fcall.sendResponse(fb,result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);\n              return;\n            } catch (Exception e) {\n              LOGGER.error(\"Exception writing to internal frame buffer\", e);\n            }\n            fb.close();\n          }\n          public void onError(Exception e) {\n            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;\n            org.apache.thrift.TBase msg;\n            startNimbus_result result = new startNimbus_result();\n            {\n              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;\n              msg = (org.apache.thrift.TBase)new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());\n            }\n            try {\n              fcall.sendResponse(fb,msg,msgType,seqid);\n              return;\n            } catch (Exception ex) {\n              LOGGER.error(\"Exception writing to internal frame buffer\", ex);\n            }\n            fb.close();\n          }\n        };\n      }\n      protected boolean isOneway() {\n        return false;\n      }\n      public void start(I iface, startNimbus_args args, org.apache.thrift.async.AsyncMethodCallback<Void> resultHandler) throws TException {\n        iface.startNimbus(args.number, args.container_memory, args.container_vcorecount,resultHandler);\n      }\n    }\n    public static class stopNimbus<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, stopNimbus_args, Void> {\n      public stopNimbus() {\n        super(\"stopNimbus\");\n      }\n      public stopNimbus_args getEmptyArgsInstance() {\n        return new stopNimbus_args();\n      }\n      public AsyncMethodCallback<Void> getResultHandler(final AsyncFrameBuffer fb, final int seqid) {\n        final org.apache.thrift.AsyncProcessFunction fcall = this;\n        return new AsyncMethodCallback<Void>() { \n          public void onComplete(Void o) {\n            stopNimbus_result result = new stopNimbus_result();\n            try {\n              fcall.sendResponse(fb,result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);\n              return;\n            } catch (Exception e) {\n              LOGGER.error(\"Exception writing to internal frame buffer\", e);\n            }\n            fb.close();\n          }\n          public void onError(Exception e) {\n            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;\n            org.apache.thrift.TBase msg;\n            stopNimbus_result result = new stopNimbus_result();\n            {\n              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;\n              msg = (org.apache.thrift.TBase)new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());\n            }\n            try {\n              fcall.sendResponse(fb,msg,msgType,seqid);\n              return;\n            } catch (Exception ex) {\n              LOGGER.error(\"Exception writing to internal frame buffer\", ex);\n            }\n            fb.close();\n          }\n        };\n      }\n      protected boolean isOneway() {\n        return false;\n      }\n      public void start(I iface, stopNimbus_args args, org.apache.thrift.async.AsyncMethodCallback<Void> resultHandler) throws TException {\n        iface.stopNimbus(resultHandler);\n      }\n    }\n    public static class removeNimbus<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, removeNimbus_args, Void> {\n      public removeNimbus() {\n        super(\"removeNimbus\");\n      }\n      public removeNimbus_args getEmptyArgsInstance() {\n        return new removeNimbus_args();\n      }\n      public AsyncMethodCallback<Void> getResultHandler(final AsyncFrameBuffer fb, final int seqid) {\n        final org.apache.thrift.AsyncProcessFunction fcall = this;\n        return new AsyncMethodCallback<Void>() { \n          public void onComplete(Void o) {\n            removeNimbus_result result = new removeNimbus_result();\n            try {\n              fcall.sendResponse(fb,result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);\n              return;\n            } catch (Exception e) {\n              LOGGER.error(\"Exception writing to internal frame buffer\", e);\n            }\n            fb.close();\n          }\n          public void onError(Exception e) {\n            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;\n            org.apache.thrift.TBase msg;\n            removeNimbus_result result = new removeNimbus_result();\n            {\n              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;\n              msg = (org.apache.thrift.TBase)new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());\n            }\n            try {\n              fcall.sendResponse(fb,msg,msgType,seqid);\n              return;\n            } catch (Exception ex) {\n              LOGGER.error(\"Exception writing to internal frame buffer\", ex);\n            }\n            fb.close();\n          }\n        };\n      }\n      protected boolean isOneway() {\n        return false;\n      }\n      public void start(I iface, removeNimbus_args args, org.apache.thrift.async.AsyncMethodCallback<Void> resultHandler) throws TException {\n        iface.removeNimbus(args.number,resultHandler);\n      }\n    }\n<fim_suffix>    public static class removeSpecNimbus<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, removeSpecNimbus_args, Void> {\n      public removeSpecNimbus() {\n        super(\"removeSpecNimbus\");\n      }\n      public removeSpecNimbus_args getEmptyArgsInstance() {\n        return new removeSpecNimbus_args();\n      }\n      public AsyncMethodCallback<Void> getResultHandler(final AsyncFrameBuffer fb, final int seqid) {\n        final org.apache.thrift.AsyncProcessFunction fcall = this;\n        return new AsyncMethodCallback<Void>() { \n          public void onComplete(Void o) {\n            removeSpecNimbus_result result = new removeSpecNimbus_result();\n            try {\n              fcall.sendResponse(fb,result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);\n              return;\n            } catch (Exception e) {\n              LOGGER.error(\"Exception writing to internal frame buffer\", e);\n            }\n            fb.close();\n          }\n          public void onError(Exception e) {\n            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;\n            org.apache.thrift.TBase msg;\n            removeSpecNimbus_result result = new removeSpecNimbus_result();\n            {\n              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;\n              msg = (org.apache.thrift.TBase)new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());\n            }\n            try {\n              fcall.sendResponse(fb,msg,msgType,seqid);\n              return;\n            } catch (Exception ex) {\n              LOGGER.error(\"Exception writing to internal frame buffer\", ex);\n            }\n            fb.close();\n          }\n        };\n      }\n      protected boolean isOneway() {\n        return false;\n      }\n      public void start(I iface, removeSpecNimbus_args args, org.apache.thrift.async.AsyncMethodCallback<Void> resultHandler) throws TException {\n        iface.removeSpecNimbus(args.container_id,resultHandler);\n      }\n    }<fim_middle>// class below has no smell\n"}