{"text": "<fim_prefix>/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\npackage org.apache.brooklyn.location.jclouds.templates.customize;\n\nimport java.util.Arrays;\nimport java.util.Collections;\n\nimport org.apache.brooklyn.api.location.PortRange;\nimport org.apache.brooklyn.core.location.PortRanges;\nimport org.apache.brooklyn.util.core.config.ConfigBag;\nimport org.apache.commons.lang3.ArrayUtils;\nimport org.jclouds.compute.options.TemplateOptions;\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\n\nimport com.google.common.collect.Iterables;\n\n<fim_suffix>class InboundPortsOption implements TemplateOptionCustomizer {\n    private static final Logger LOG = LoggerFactory.getLogger(InboundPortsOption.class);\n\n    @Override\n    public void apply(TemplateOptions t, ConfigBag props, Object v) {\n        int[] inboundPorts = toIntPortArray(v);\n        if (LOG.isDebugEnabled())\n            LOG.debug(\"opening inbound ports {} for cloud/type {}\", Arrays.toString(inboundPorts), t.getClass());\n        t.inboundPorts(inboundPorts);\n    }\n\n    private int[] toIntPortArray(Object v) {\n        PortRange portRange = PortRanges.fromIterable(Collections.singletonList(v));\n        return ArrayUtils.toPrimitive(Iterables.toArray(portRange, Integer.class));\n    }\n}<fim_middle>// class below has no smell\n"}