{"text": "<fim_prefix>            reportError(re);\n            recover(input,re);\n        }\n        finally {\n            \trestoreStackSize(stackSize);\n        }\n        return ;\n    }\n    // $ANTLR end \"rule__LiteralCondition__Group__1\"\n    // $ANTLR start \"rule__LiteralCondition__Group__1__Impl\"\n    // InternalXtext.g:5268:1: rule__LiteralCondition__Group__1__Impl : ( ( rule__LiteralCondition__Alternatives_1 ) ) ;\n    public final void rule__LiteralCondition__Group__1__Impl() throws RecognitionException {\n        \t\tint stackSize = keepStackSize();\n        try {\n            // InternalXtext.g:5272:1: ( ( ( rule__LiteralCondition__Alternatives_1 ) ) )\n            // InternalXtext.g:5273:1: ( ( rule__LiteralCondition__Alternatives_1 ) )\n            {\n            // InternalXtext.g:5273:1: ( ( rule__LiteralCondition__Alternatives_1 ) )\n            // InternalXtext.g:5274:2: ( rule__LiteralCondition__Alternatives_1 )\n            {\n             before(grammarAccess.getLiteralConditionAccess().getAlternatives_1()); \n            // InternalXtext.g:5275:2: ( rule__LiteralCondition__Alternatives_1 )\n            // InternalXtext.g:5275:3: rule__LiteralCondition__Alternatives_1\n            {\n            pushFollow(FollowSets000.FOLLOW_2);\n            rule__LiteralCondition__Alternatives_1();\n            state._fsp--;\n            }\n             after(grammarAccess.getLiteralConditionAccess().getAlternatives_1()); \n            }\n            }\n        }\n        catch (RecognitionException re) {\n            reportError(re);\n            recover(input,re);\n        }\n        finally {\n            \trestoreStackSize(stackSize);\n        }\n        return ;\n    }\n    // $ANTLR end \"rule__LiteralCondition__Group__1__Impl\"\n    // $ANTLR start \"rule__Disjunction__Group__0\"\n    // InternalXtext.g:5284:1: rule__Disjunction__Group__0 : rule__Disjunction__Group__0__Impl rule__Disjunction__Group__1 ;\n    public final void rule__Disjunction__Group__0() throws RecognitionException {\n        \t\tint stackSize = keepStackSize();\n        try {\n            // InternalXtext.g:5288:1: ( rule__Disjunction__Group__0__Impl rule__Disjunction__Group__1 )\n            // InternalXtext.g:5289:2: rule__Disjunction__Group__0__Impl rule__Disjunction__Group__1\n            {\n            pushFollow(FollowSets000.FOLLOW_26);\n            rule__Disjunction__Group__0__Impl();\n            state._fsp--;\n            pushFollow(FollowSets000.FOLLOW_2);\n            rule__Disjunction__Group__1();\n            state._fsp--;\n            }\n        }\n        catch (RecognitionException re) {\n            reportError(re);\n            recover(input,re);\n        }\n        finally {\n            \trestoreStackSize(stackSize);\n        }\n        return ;\n    }\n    // $ANTLR end \"rule__Disjunction__Group__0\"\n    // $ANTLR start \"rule__Disjunction__Group__0__Impl\"\n    // InternalXtext.g:5296:1: rule__Disjunction__Group__0__Impl : ( ruleConjunction ) ;\n    public final void rule__Disjunction__Group__0__Impl() throws RecognitionException {\n        \t\tint stackSize = keepStackSize();\n        try {\n            // InternalXtext.g:5300:1: ( ( ruleConjunction ) )\n            // InternalXtext.g:5301:1: ( ruleConjunction )\n            {\n            // InternalXtext.g:5301:1: ( ruleConjunction )\n            // InternalXtext.g:5302:2: ruleConjunction\n            {\n             before(grammarAccess.getDisjunctionAccess().getConjunctionParserRuleCall_0()); \n            pushFollow(FollowSets000.FOLLOW_2);\n            ruleConjunction();\n            state._fsp--;\n             after(grammarAccess.getDisjunctionAccess().getConjunctionParserRuleCall_0()); \n            }\n            }\n        }\n        catch (RecognitionException re) {\n            reportError(re);\n            recover(input,re);\n        }\n        finally {\n            \trestoreStackSize(stackSize);\n        }\n        return ;\n    }\n    // $ANTLR end \"rule__Disjunction__Group__0__Impl\"\n    // $ANTLR start \"rule__Disjunction__Group__1\"\n    // InternalXtext.g:5311:1: rule__Disjunction__Group__1 : rule__Disjunction__Group__1__Impl ;\n    public final void rule__Disjunction__Group__1() throws RecognitionException {\n        \t\tint stackSize = keepStackSize();\n        try {\n            // InternalXtext.g:5315:1: ( rule__Disjunction__Group__1__Impl )\n            // InternalXtext.g:5316:2: rule__Disjunction__Group__1__Impl\n            {\n            pushFollow(FollowSets000.FOLLOW_2);\n            rule__Disjunction__Group__1__Impl();\n            state._fsp--;\n            }\n        }\n        catch (RecognitionException re) {\n            reportError(re);\n            recover(input,re);\n        }\n        finally {\n            \trestoreStackSize(stackSize);\n        }\n        return ;\n    }\n    // $ANTLR end \"rule__Disjunction__Group__1\"\n    // $ANTLR start \"rule__Disjunction__Group__1__Impl\"\n    // InternalXtext.g:5322:1: rule__Disjunction__Group__1__Impl : ( ( rule__Disjunction__Group_1__0 )* ) ;\n    public final void rule__Disjunction__Group__1__Impl() throws RecognitionException {\n        \t\tint stackSize = keepStackSize();\n        try {\n            // InternalXtext.g:5326:1: ( ( ( rule__Disjunction__Group_1__0 )* ) )\n            // InternalXtext.g:5327:1: ( ( rule__Disjunction__Group_1__0 )* )\n            {\n            // InternalXtext.g:5327:1: ( ( rule__Disjunction__Group_1__0 )* )\n            // InternalXtext.g:5328:2: ( rule__Disjunction__Group_1__0 )*\n            {\n             before(grammarAccess.getDisjunctionAccess().getGroup_1()); \n            // InternalXtext.g:5329:2: ( rule__Disjunction__Group_1__0 )*\n            loop58:\n            do {\n                int alt58=2;\n                int LA58_0 = input.LA(1);\n                if ( (LA58_0==35) ) {\n                    alt58=1;\n                }\n                switch (alt58) {\n            \tcase 1 :\n            \t    // InternalXtext.g:5329:3: rule__Disjunction__Group_1__0\n            \t    {\n            \t    pushFollow(FollowSets000.FOLLOW_27);\n            \t    rule__Disjunction__Group_1__0();\n            \t    state._fsp--;\n            \t    }\n            \t    break;\n            \tdefault :\n            \t    break loop58;\n                }\n            } while (true);\n             after(grammarAccess.getDisjunctionAccess().getGroup_1()); \n            }\n            }\n        }\n        catch (RecognitionException re) {\n            reportError(re);\n            recover(input,re);\n        }\n        finally {\n            \trestoreStackSize(stackSize);\n        }\n        return ;\n    }\n    // $ANTLR end \"rule__Disjunction__Group__1__Impl\"\n    // $ANTLR start \"rule__Disjunction__Group_1__0\"\n    // InternalXtext.g:5338:1: rule__Disjunction__Group_1__0 : rule__Disjunction__Group_1__0__Impl rule__Disjunction__Group_1__1 ;\n<fim_suffix>    public final void rule__Disjunction__Group_1__0() throws RecognitionException {\n        \t\tint stackSize = keepStackSize();\n        try {\n            // InternalXtext.g:5342:1: ( rule__Disjunction__Group_1__0__Impl rule__Disjunction__Group_1__1 )\n            // InternalXtext.g:5343:2: rule__Disjunction__Group_1__0__Impl rule__Disjunction__Group_1__1\n            {\n            pushFollow(FollowSets000.FOLLOW_26);\n            rule__Disjunction__Group_1__0__Impl();\n            state._fsp--;\n            pushFollow(FollowSets000.FOLLOW_2);\n            rule__Disjunction__Group_1__1();\n            state._fsp--;\n            }\n        }\n        catch (RecognitionException re) {\n            reportError(re);\n            recover(input,re);\n        }\n        finally {\n            \trestoreStackSize(stackSize);\n        }\n        return ;\n    }<fim_middle>// function below has no smell\n"}