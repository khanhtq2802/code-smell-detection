{"text": "<fim_prefix>package org.eclipse.paho.mqttv5.client.internal;\n\nimport java.util.concurrent.atomic.AtomicInteger;\n\n/**\n * This class is used as a store for client information that should be preserved\n * for a single connection. \n * Properties returned in subsequent connect packets will override existing properties\n * here as well.\n *\n * Connection variables that this class holds:\n *\n * <ul>\n * <li>Receive Maximum</li>\n * <li>Maximum QoS</li>\n * <li>Retain Available</li>\n * <li>Maximum Packet Size</li>\n * <li>Outgoing Topic Alias Maximum</li>\n * <li>Incoming Topic Alias Maximum</li>\n * <li>Wildcard Subscriptions Available</li>\n * <li>Subscription Identifiers Available</li>\n * <li>Shared Subscriptions Available</li>\n * <li>Send Reason Messages</li>\n * </ul>\n */\n<fim_suffix>public class MqttConnectionState {\n\n\t// ******* Connection properties ******//\n\tprivate Integer receiveMaximum = 65535;\n\tprivate Integer maximumQoS = 2;\n\tprivate Boolean retainAvailable = true;\n\tprivate Long outgoingMaximumPacketSize = null;\n\tprivate Long incomingMaximumPacketSize = null;\n\tprivate Integer outgoingTopicAliasMaximum = 0;\n\tprivate Integer incomingTopicAliasMax = 0;\n\tprivate Boolean wildcardSubscriptionsAvailable = true;\n\tprivate Boolean subscriptionIdentifiersAvailable = true;\n\tprivate Boolean sharedSubscriptionsAvailable = true;\n\tprivate boolean sendReasonMessages = false;\n\tprivate long keepAlive = 60;\n\n\t// ******* Counters ******//\n\tprivate AtomicInteger nextOutgoingTopicAlias = new AtomicInteger(1);\n\n\n\t/**\n\t * Clears the session and resets. This would be called when the connection has\n\t * been lost and cleanStart = True.\n\t */\n\tpublic void clearConnectionState() {\n\t\tnextOutgoingTopicAlias.set(1);\n\t}\n\n\n\tpublic Integer getReceiveMaximum() {\n\t\tif (receiveMaximum == null) {\n\t\t\treturn 65535;\n\t\t}\n\t\treturn receiveMaximum;\n\t}\n\n\tpublic void setReceiveMaximum(Integer receiveMaximum) {\n\t\tthis.receiveMaximum = receiveMaximum;\n\t}\n\n\tpublic Integer getMaximumQoS() {\n\t\treturn maximumQoS;\n\t}\n\n\tpublic void setMaximumQoS(Integer maximumQoS) {\n\t\tthis.maximumQoS = maximumQoS;\n\t}\n\n\tpublic Boolean isRetainAvailable() {\n\t\treturn retainAvailable;\n\t}\n\n\tpublic void setRetainAvailable(Boolean retainAvailable) {\n\t\tthis.retainAvailable = retainAvailable;\n\t}\n\n\tpublic Long getOutgoingMaximumPacketSize() {\n\t\treturn outgoingMaximumPacketSize;\n\t}\n\n\tpublic void setOutgoingMaximumPacketSize(Long maximumPacketSize) {\n\t\tthis.outgoingMaximumPacketSize = maximumPacketSize;\n\t}\n\t\n\tpublic Long getIncomingMaximumPacketSize() {\n\t\treturn incomingMaximumPacketSize;\n\t}\n\n\n\tpublic void setIncomingMaximumPacketSize(Long incomingMaximumPacketSize) {\n\t\tthis.incomingMaximumPacketSize = incomingMaximumPacketSize;\n\t}\n\n\n\tpublic Integer getOutgoingTopicAliasMaximum() {\n\t\treturn outgoingTopicAliasMaximum;\n\t}\n\n\tpublic void setOutgoingTopicAliasMaximum(Integer topicAliasMaximum) {\n\t\tthis.outgoingTopicAliasMaximum = topicAliasMaximum;\n\t}\n\n\tpublic Boolean isWildcardSubscriptionsAvailable() {\n\t\treturn wildcardSubscriptionsAvailable;\n\t}\n\n\tpublic void setWildcardSubscriptionsAvailable(Boolean wildcardSubscriptionsAvailable) {\n\t\tthis.wildcardSubscriptionsAvailable = wildcardSubscriptionsAvailable;\n\t}\n\n\tpublic Boolean isSubscriptionIdentifiersAvailable() {\n\t\treturn subscriptionIdentifiersAvailable;\n\t}\n\n\tpublic void setSubscriptionIdentifiersAvailable(Boolean subscriptionIdentifiersAvailable) {\n\t\tthis.subscriptionIdentifiersAvailable = subscriptionIdentifiersAvailable;\n\t}\n\n\tpublic Boolean isSharedSubscriptionsAvailable() {\n\t\treturn sharedSubscriptionsAvailable;\n\t}\n\n\tpublic void setSharedSubscriptionsAvailable(Boolean sharedSubscriptionsAvailable) {\n\t\tthis.sharedSubscriptionsAvailable = sharedSubscriptionsAvailable;\n\t}\n\t\n\tpublic Integer getNextOutgoingTopicAlias() {\n\t\treturn nextOutgoingTopicAlias.getAndIncrement();\n\t}\n\n\n\tpublic Integer getIncomingTopicAliasMax() {\n\t\treturn incomingTopicAliasMax;\n\t}\n\n\n\tpublic void setIncomingTopicAliasMax(Integer incomingTopicAliasMax) {\n\t\tthis.incomingTopicAliasMax = incomingTopicAliasMax;\n\t}\n\n\n\tpublic boolean isSendReasonMessages() {\n\t\treturn sendReasonMessages;\n\t}\n\n\n\tpublic void setSendReasonMessages(boolean enableReasonMessages) {\n\t\tthis.sendReasonMessages = enableReasonMessages;\n\t}\n\n\n\tpublic long getKeepAlive() {\n\t\treturn keepAlive;\n\t}\n\n\n\tpublic void setKeepAliveSeconds(long keepAlive) {\n\t\tthis.keepAlive = keepAlive * 1000;\n\t}\n\n\n\t\n}<fim_middle>// class below is data class\n"}