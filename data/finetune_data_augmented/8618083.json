{"text": "<fim_prefix>/*\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage org.apache.ignite.internal.pagemem.wal.record.delta;\n\nimport org.apache.ignite.IgniteCheckedException;\nimport org.apache.ignite.internal.pagemem.PageMemory;\nimport org.apache.ignite.internal.processors.cache.persistence.tree.io.BPlusIO;\nimport org.apache.ignite.internal.util.typedef.internal.S;\n\n/**\n * Replace.\n */\n<fim_suffix>public class ReplaceRecord<L> extends PageDeltaRecord {\n    /** */\n    private BPlusIO<L> io;\n\n    /** */\n    private byte[] rowBytes;\n\n    /** */\n    private int idx;\n\n    /**\n     * @param grpId Cache group ID.\n     * @param pageId  Page ID.\n     * @param io IO.\n     * @param rowBytes Row bytes.\n     * @param idx Index.\n     */\n    public ReplaceRecord(int grpId, long pageId, BPlusIO<L> io, byte[] rowBytes, int idx) {\n        super(grpId, pageId);\n\n        this.io = io;\n        this.rowBytes = rowBytes;\n        this.idx = idx;\n    }\n\n    /** {@inheritDoc} */\n    @Override public void applyDelta(PageMemory pageMem, long pageAddr)\n        throws IgniteCheckedException {\n        if (io.getCount(pageAddr) < idx)\n            throw new DeltaApplicationException(\"Index is greater than count: \" + idx);\n\n        io.store(pageAddr, idx, null, rowBytes, false);\n    }\n\n    /** {@inheritDoc} */\n    @Override public RecordType type() {\n        return RecordType.BTREE_PAGE_REPLACE;\n    }\n\n    /**\n     * @return IO.\n     */\n    public BPlusIO<L> io() {\n        return io;\n    }\n\n    /**\n     * @return Index.\n     */\n    public int index() {\n        return idx;\n    }\n\n    /**\n     * @return Row bytes.\n     */\n    public byte[] rowBytes() {\n        return rowBytes;\n    }\n\n    /** {@inheritDoc} */\n    @Override public String toString() {\n        return S.toString(ReplaceRecord.class, this, \"super\", super.toString());\n    }\n}<fim_middle>// class below has no smell\n"}