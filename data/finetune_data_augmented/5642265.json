{"text": "<fim_prefix>/*\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements. See the NOTICE file distributed with this\n * work for additional information regarding copyright ownership. The ASF\n * licenses this file to You under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations under\n * the License.\n */\npackage org.apache.sling.testing.clients.interceptors;\n\nimport org.apache.http.Header;\nimport org.apache.http.cookie.Cookie;\nimport org.apache.http.cookie.CookieOrigin;\nimport org.apache.http.cookie.CookiePathComparator;\nimport org.apache.http.cookie.MalformedCookieException;\nimport org.apache.http.impl.cookie.DefaultCookieSpec;\n\nimport java.util.List;\n\npublic class StickyCookieSpec extends DefaultCookieSpec {\n    private final static CookiePathComparator PATH_COMPARATOR = new CookiePathComparator();\n\n<fim_suffix>    @Override\n    public List<Cookie> parse(Header header, CookieOrigin origin) throws MalformedCookieException {\n        List<Cookie> cookies = super.parse(header, origin);\n        for (Cookie cookie : cookies) {\n            if (cookie.getName().equals(StickyCookieHolder.COOKIE_NAME)) {\n                // store it in the TestStickySessionRule threadlocal var\n                StickyCookieHolder.setTestStickySessionCookie(cookie);\n            }\n        }\n        return cookies;\n    }\n\n    @Override\n    public List<Header> formatCookies(List<Cookie> cookies) {\n        return super.formatCookies(cookies);\n    }\n}<fim_middle>// function below has no smell\n"}