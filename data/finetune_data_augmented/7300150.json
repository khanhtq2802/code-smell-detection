{"text": "<fim_prefix>/*\n * Copyright 2002-2019 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage org.springframework.amqp.rabbit.core;\n\nimport org.apache.commons.logging.Log;\nimport org.apache.commons.logging.LogFactory;\n\nimport org.springframework.amqp.rabbit.connection.ConnectionFactory;\nimport org.springframework.beans.factory.BeanInitializationException;\nimport org.springframework.beans.factory.InitializingBean;\nimport org.springframework.lang.Nullable;\n\n/**\n * Convenient super class for application classes that need RabbitMQ access.\n *\n * <p>Requires a ConnectionFactory or a RabbitTemplate instance to be set.\n * It will create its own RabbitTemplate if a ConnectionFactory is passed in.\n * A custom RabbitTemplate instance can be created for a given ConnectionFactory\n * through overriding the {@link #createRabbitTemplate} method.\n *\n * @author Mark Pollack\n * @author Gary Russell\n *\n * @see #setConnectionFactory\n * @see #setRabbitOperations\n * @see #createRabbitTemplate\n * @see org.springframework.amqp.rabbit.core.RabbitTemplate\n */\n<fim_suffix>public class RabbitGatewaySupport implements InitializingBean {\n\n\t/** Logger available to subclasses. */\n\tprotected final Log logger = LogFactory.getLog(getClass()); // NOSONAR\n\n\tprivate RabbitOperations rabbitOperations;\n\n\t/**\n\t * Set the Rabbit connection factory to be used by the gateway.\n\t * Will automatically create a RabbitTemplate for the given ConnectionFactory.\n\t * @param connectionFactory The connection factory.\n\t * @see #createRabbitTemplate\n\t * @see #setConnectionFactory(org.springframework.amqp.rabbit.connection.ConnectionFactory)\n\t */\n\tpublic final void setConnectionFactory(ConnectionFactory connectionFactory) {\n\t\tthis.rabbitOperations = createRabbitTemplate(connectionFactory);\n\t}\n\n\t/**\n\t * Create a RabbitTemplate for the given ConnectionFactory.\n\t * Only invoked if populating the gateway with a ConnectionFactory reference.\n\t *\n\t * @param connectionFactory the Rabbit ConnectionFactory to create a RabbitTemplate for\n\t * @return the new RabbitTemplate instance\n\t * @see #setConnectionFactory\n\t */\n\tprotected RabbitTemplate createRabbitTemplate(ConnectionFactory connectionFactory) {\n\t\treturn new RabbitTemplate(connectionFactory);\n\t}\n\n\t/**\n\t * @return The Rabbit ConnectionFactory used by the gateway.\n\t */\n\t@Nullable\n\tpublic final ConnectionFactory getConnectionFactory() {\n\t\treturn (this.rabbitOperations != null ? this.rabbitOperations.getConnectionFactory() : null);\n\t}\n\n\t/**\n\t * Set the {@link RabbitOperations} for the gateway.\n\t * @param rabbitOperations The Rabbit operations.\n\t * @see #setConnectionFactory(org.springframework.amqp.rabbit.connection.ConnectionFactory)\n\t */\n\tpublic final void setRabbitOperations(RabbitOperations rabbitOperations) {\n\t\tthis.rabbitOperations = rabbitOperations;\n\t}\n\n\t/**\n\t * @return The {@link RabbitOperations} for the gateway.\n\t */\n\tpublic final RabbitOperations getRabbitOperations() {\n\t\treturn this.rabbitOperations;\n\t}\n\n\t@Override\n\tpublic final void afterPropertiesSet() throws IllegalArgumentException, BeanInitializationException {\n\t\tif (this.rabbitOperations == null) {\n\t\t\tthrow new IllegalArgumentException(\"'connectionFactory' or 'rabbitTemplate' is required\");\n\t\t}\n\t\ttry {\n\t\t\tinitGateway();\n\t\t}\n\t\tcatch (Exception ex) {\n\t\t\tthrow new BeanInitializationException(\"Initialization of Rabbit gateway failed: \" + ex.getMessage(), ex);\n\t\t}\n\t}\n\n\t/**\n\t * Subclasses can override this for custom initialization behavior.\n\t * Gets called after population of this instance's bean properties.\n\t */\n\tprotected void initGateway() {\n\t}\n\n}<fim_middle>// class below is data class\n"}