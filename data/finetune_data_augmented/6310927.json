{"text": "<fim_prefix>/*******************************************************************************\n * Copyright (c) 2017 Eurotech and/or its affiliates and others\n *\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     Eurotech - initial API and implementation\n *******************************************************************************/\npackage org.eclipse.kapua.app.console.core.shared;\n\n/**\n * <p>\n * FieldVerifier validates that the name the user enters is valid.\n * </p>\n * <p>\n * This class is in the <code>shared</code> packing because we use it in both\n * the client code and on the server. On the client, we verify that the name is\n * valid before sending an RPC request so the user doesn't have to wait for a\n * network round trip to get feedback. On the server, we verify that the name is\n * correct to ensure that the input is correct regardless of where the RPC\n * originates.\n * </p>\n * <p>\n * When creating a class that is used on both the client and the server, be sure\n * that all code is translatable and does not use native JavaScript. Code that\n * is note translatable (such as code that interacts with a database or the file\n * system) cannot be compiled into client side JavaScript. Code that uses native\n * JavaScript (such as Widgets) cannot be run on the server.\n * </p>\n */\n<fim_suffix>public class FieldVerifier {\n\n    private FieldVerifier() {\n    }\n\n    /**\n     * Verifies that the specified name is valid for our service.\n     *\n     * In this example, we only require that the name is at least four\n     * characters. In your application, you can use more complex checks to ensure\n     * that usernames, passwords, email addresses, URLs, and other fields have the\n     * proper syntax.\n     *\n     * @param name\n     *            the name to validate\n     * @return true if valid, false if invalid\n     */\n    public static boolean isValidName(String name) {\n        if (name == null) {\n            return false;\n        }\n        return name.length() > 3;\n    }\n}<fim_middle>// class below has no smell\n"}