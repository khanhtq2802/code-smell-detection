{"text": "<fim_prefix>/**\n * Copyright (c) 2016, 2019, Oracle and/or its affiliates. All rights reserved.\n */\npackage com.oracle.bmc.healthchecks.model;\n/**\n * The results returned by running a ping probe.  All times and durations are\n * returned in milliseconds. All times are relative to the POSIX epoch\n * (1970-01-01T00:00Z).\n *\n * <br/>\n * Note: Objects should always be created or deserialized using the {@link Builder}. This model distinguishes fields\n * that are {@code null} because they are unset from fields that are explicitly set to {@code null}. This is done in\n * the setter methods of the {@link Builder}, which maintain a set of all explicitly set fields called\n * {@link #__explicitlySet__}. The {@link #hashCode()} and {@link #equals(Object)} methods are implemented to take\n * {@link #__explicitlySet__} into account. The constructor, on the other hand, does not set {@link #__explicitlySet__}\n * (since the constructor cannot distinguish explicit {@code null} from unset {@code null}).\n **/\n@javax.annotation.Generated(value = \"OracleSDKGenerator\", comments = \"API Version: 20180501\")\n@lombok.AllArgsConstructor(onConstructor = @__({@Deprecated}))\n@lombok.Value\n@com.fasterxml.jackson.databind.annotation.JsonDeserialize(\n    builder = PingProbeResultSummary.Builder.class\n)\n@com.fasterxml.jackson.annotation.JsonFilter(com.oracle.bmc.http.internal.ExplicitlySetFilter.NAME)\npublic class PingProbeResultSummary {\n    @com.fasterxml.jackson.databind.annotation.JsonPOJOBuilder(withPrefix = \"\")\n    @lombok.experimental.Accessors(fluent = true)\n    public static class Builder {\n        @com.fasterxml.jackson.annotation.JsonProperty(\"key\")\n        private String key;\n        public Builder key(String key) {\n            this.key = key;\n            this.__explicitlySet__.add(\"key\");\n            return this;\n        }\n        @com.fasterxml.jackson.annotation.JsonProperty(\"probeConfigurationId\")\n        private String probeConfigurationId;\n        public Builder probeConfigurationId(String probeConfigurationId) {\n            this.probeConfigurationId = probeConfigurationId;\n            this.__explicitlySet__.add(\"probeConfigurationId\");\n            return this;\n        }\n        @com.fasterxml.jackson.annotation.JsonProperty(\"startTime\")\n        private Double startTime;\n        public Builder startTime(Double startTime) {\n            this.startTime = startTime;\n            this.__explicitlySet__.add(\"startTime\");\n            return this;\n        }\n        @com.fasterxml.jackson.annotation.JsonProperty(\"target\")\n        private String target;\n        public Builder target(String target) {\n            this.target = target;\n            this.__explicitlySet__.add(\"target\");\n            return this;\n        }\n        @com.fasterxml.jackson.annotation.JsonProperty(\"vantagePointName\")\n        private String vantagePointName;\n        public Builder vantagePointName(String vantagePointName) {\n            this.vantagePointName = vantagePointName;\n            this.__explicitlySet__.add(\"vantagePointName\");\n            return this;\n        }\n        @com.fasterxml.jackson.annotation.JsonProperty(\"isTimedOut\")\n        private Boolean isTimedOut;\n        public Builder isTimedOut(Boolean isTimedOut) {\n            this.isTimedOut = isTimedOut;\n            this.__explicitlySet__.add(\"isTimedOut\");\n            return this;\n        }\n        @com.fasterxml.jackson.annotation.JsonProperty(\"isHealthy\")\n        private Boolean isHealthy;\n        public Builder isHealthy(Boolean isHealthy) {\n            this.isHealthy = isHealthy;\n            this.__explicitlySet__.add(\"isHealthy\");\n            return this;\n        }\n        @com.fasterxml.jackson.annotation.JsonProperty(\"errorCategory\")\n        private ErrorCategory errorCategory;\n        public Builder errorCategory(ErrorCategory errorCategory) {\n            this.errorCategory = errorCategory;\n            this.__explicitlySet__.add(\"errorCategory\");\n            return this;\n        }\n        @com.fasterxml.jackson.annotation.JsonProperty(\"errorMessage\")\n        private String errorMessage;\n        public Builder errorMessage(String errorMessage) {\n            this.errorMessage = errorMessage;\n            this.__explicitlySet__.add(\"errorMessage\");\n            return this;\n        }\n        @com.fasterxml.jackson.annotation.JsonProperty(\"protocol\")\n        private PingProbeProtocol protocol;\n        public Builder protocol(PingProbeProtocol protocol) {\n            this.protocol = protocol;\n            this.__explicitlySet__.add(\"protocol\");\n            return this;\n        }\n        @com.fasterxml.jackson.annotation.JsonProperty(\"connection\")\n        private Connection connection;\n<fim_suffix>        public Builder connection(Connection connection) {\n            this.connection = connection;\n            this.__explicitlySet__.add(\"connection\");\n            return this;\n        }\n        @com.fasterxml.jackson.annotation.JsonProperty(\"dns\")\n        private DNS dns;\n        public Builder dns(DNS dns) {\n            this.dns = dns;\n            this.__explicitlySet__.add(\"dns\");\n            return this;\n        }\n        @com.fasterxml.jackson.annotation.JsonProperty(\"domainLookupStart\")\n        private Double domainLookupStart;\n        public Builder domainLookupStart(Double domainLookupStart) {\n            this.domainLookupStart = domainLookupStart;\n            this.__explicitlySet__.add(\"domainLookupStart\");\n            return this;\n        }\n        @com.fasterxml.jackson.annotation.JsonProperty(\"domainLookupEnd\")\n        private Double domainLookupEnd;\n        public Builder domainLookupEnd(Double domainLookupEnd) {\n            this.domainLookupEnd = domainLookupEnd;\n            this.__explicitlySet__.add(\"domainLookupEnd\");\n            return this;\n        }\n        @com.fasterxml.jackson.annotation.JsonProperty(\"latencyInMs\")\n        private Double latencyInMs;\n        public Builder latencyInMs(Double latencyInMs) {\n            this.latencyInMs = latencyInMs;\n            this.__explicitlySet__.add(\"latencyInMs\");\n            return this;\n        }\n        @com.fasterxml.jackson.annotation.JsonProperty(\"icmpCode\")\n        private Integer icmpCode;\n        public Builder icmpCode(Integer icmpCode) {\n            this.icmpCode = icmpCode;\n            this.__explicitlySet__.add(\"icmpCode\");\n            return this;\n        }\n        @com.fasterxml.jackson.annotation.JsonIgnore\n        private final java.util.Set<String> __explicitlySet__ = new java.util.HashSet<String>();\n        public PingProbeResultSummary build() {\n            PingProbeResultSummary __instance__ =\n                    new PingProbeResultSummary(\n                            key,\n                            probeConfigurationId,\n                            startTime,\n                            target,\n                            vantagePointName,\n                            isTimedOut,\n                            isHealthy,\n                            errorCategory,\n                            errorMessage,\n                            protocol,\n                            connection,\n                            dns,\n                            domainLookupStart,\n                            domainLookupEnd,\n                            latencyInMs,\n                            icmpCode);\n            __instance__.__explicitlySet__.addAll(__explicitlySet__);\n            return __instance__;\n        }\n        @com.fasterxml.jackson.annotation.JsonIgnore\n        public Builder copy(PingProbeResultSummary o) {\n            Builder copiedBuilder =\n                    key(o.getKey())\n                            .probeConfigurationId(o.getProbeConfigurationId())\n                            .startTime(o.getStartTime())\n                            .target(o.getTarget())\n                            .vantagePointName(o.getVantagePointName())\n                            .isTimedOut(o.getIsTimedOut())\n                            .isHealthy(o.getIsHealthy())\n                            .errorCategory(o.getErrorCategory())\n                            .errorMessage(o.getErrorMessage())\n                            .protocol(o.getProtocol())\n                            .connection(o.getConnection())\n                            .dns(o.getDns())\n                            .domainLookupStart(o.getDomainLookupStart())\n                            .domainLookupEnd(o.getDomainLookupEnd())\n                            .latencyInMs(o.getLatencyInMs())\n                            .icmpCode(o.getIcmpCode());\n            copiedBuilder.__explicitlySet__.retainAll(o.__explicitlySet__);\n            return copiedBuilder;\n        }\n    }\n    /**\n     * Create a new builder.\n     */\n    public static Builder builder() {\n        return new Builder();\n    }\n    /**\n     * A value identifying this specific probe result. The key is only unique within\n     * the results of its probe configuration. The key may be reused after 90 days.\n     *\n     **/\n    @com.fasterxml.jackson.annotation.JsonProperty(\"key\")\n    String key;\n    /**\n     * The OCID of the monitor or on-demand probe responsible for creating this result.\n     *\n     **/\n    @com.fasterxml.jackson.annotation.JsonProperty(\"probeConfigurationId\")\n    String probeConfigurationId;\n    /**\n     * The date and time the probe was executed, expressed in milliseconds since the\n     * POSIX epoch. This field is defined by the PerformanceResourceTiming interface\n     * of the W3C Resource Timing specification. For more information, see\n     * [Resource Timing](https://w3c.github.io/resource-timing/#sec-resource-timing).\n     *\n     **/\n    @com.fasterxml.jackson.annotation.JsonProperty(\"startTime\")\n    Double startTime;\n    /**\n     * The target hostname or IP address of the probe.\n     **/\n    @com.fasterxml.jackson.annotation.JsonProperty(\"target\")\n    String target;\n    /**<fim_middle>// function below has no smell\n"}