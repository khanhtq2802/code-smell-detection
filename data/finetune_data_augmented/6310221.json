{"text": "<fim_prefix>            }\n        });// end submit click handler\n    }\n    private void showModal(final GwtFirewallPortForwardEntry existingEntry) {\n        if (existingEntry == null) {\n            // new\n            this.portForwardingForm.setTitle(MSGS.firewallPortForwardFormInformation());\n        } else {\n            // edit existing entry\n            this.portForwardingForm\n                    .setTitle(MSGS.firewallPortForwardFormUpdate(String.valueOf(existingEntry.getInPort())));\n        }\n        setModalFieldsLabels();\n        setModalFieldsTooltips();\n        setModalFieldsValues(existingEntry);\n        setModalFieldsHandlers();\n        if (existingEntry == null) {\n            this.submit.setId(\"new\");\n        } else {\n            this.submit.setId(\"edit\");\n        }\n        this.portForwardingForm.show();\n    }// end initModal\n    private void setModalFieldsHandlers() {\n        // Set validations\n        this.input.addBlurHandler(new BlurHandler() {\n            @Override\n            public void onBlur(BlurEvent event) {\n                if (PortForwardingTabUi.this.input.getText().trim().isEmpty() || !PortForwardingTabUi.this.input\n                        .getText().trim().matches(FieldType.ALPHANUMERIC.getRegex())) {\n                    PortForwardingTabUi.this.groupInput.setValidationState(ValidationState.ERROR);\n                } else {\n                    PortForwardingTabUi.this.groupInput.setValidationState(ValidationState.NONE);\n                }\n            }\n        });\n        this.output.addBlurHandler(new BlurHandler() {\n            @Override\n            public void onBlur(BlurEvent event) {\n                if (PortForwardingTabUi.this.output.getText().trim().isEmpty() || !PortForwardingTabUi.this.output\n                        .getText().trim().matches(FieldType.ALPHANUMERIC.getRegex())) {\n                    PortForwardingTabUi.this.groupOutput.setValidationState(ValidationState.ERROR);\n                } else {\n                    PortForwardingTabUi.this.groupOutput.setValidationState(ValidationState.NONE);\n                }\n            }\n        });\n        this.lan.addBlurHandler(new BlurHandler() {\n            @Override\n            public void onBlur(BlurEvent event) {\n                if (PortForwardingTabUi.this.lan.getText().trim().isEmpty()\n                        || !PortForwardingTabUi.this.lan.getText().trim().matches(FieldType.IPv4_ADDRESS.getRegex())) {\n                    PortForwardingTabUi.this.groupLan.setValidationState(ValidationState.ERROR);\n                } else {\n                    PortForwardingTabUi.this.groupLan.setValidationState(ValidationState.NONE);\n                }\n            }\n        });\n        this.internal.addBlurHandler(new BlurHandler() {\n            @Override\n            public void onBlur(BlurEvent event) {\n                if (PortForwardingTabUi.this.internal.getText().trim().isEmpty()\n                        || !PortForwardingTabUi.this.internal.getText().trim().matches(FieldType.NUMERIC.getRegex())) {\n                    PortForwardingTabUi.this.groupInternal.setValidationState(ValidationState.ERROR);\n                } else {\n                    PortForwardingTabUi.this.groupInternal.setValidationState(ValidationState.NONE);\n                }\n            }\n        });\n        this.external.addBlurHandler(new BlurHandler() {\n            @Override\n            public void onBlur(BlurEvent event) {\n                if (PortForwardingTabUi.this.external.getText().trim().isEmpty()\n                        || !PortForwardingTabUi.this.external.getText().trim().matches(FieldType.NUMERIC.getRegex())) {\n                    PortForwardingTabUi.this.groupExternal.setValidationState(ValidationState.ERROR);\n                } else {\n                    PortForwardingTabUi.this.groupExternal.setValidationState(ValidationState.NONE);\n                }\n            }\n        });\n        this.permittedNw.addBlurHandler(new BlurHandler() {\n            @Override\n            public void onBlur(BlurEvent event) {\n                if (!PortForwardingTabUi.this.permittedNw.getText().trim().isEmpty()\n                        && !PortForwardingTabUi.this.permittedNw.getText().trim()\n                                .matches(FieldType.NETWORK.getRegex())) {\n                    PortForwardingTabUi.this.groupPermittedNw.setValidationState(ValidationState.ERROR);\n                } else {\n                    PortForwardingTabUi.this.groupPermittedNw.setValidationState(ValidationState.NONE);\n                }\n            }\n        });\n        this.permittedMac.addBlurHandler(new BlurHandler() {\n            @Override\n            public void onBlur(BlurEvent event) {\n                if (!PortForwardingTabUi.this.permittedMac.getText().trim().isEmpty()\n                        && !PortForwardingTabUi.this.permittedMac.getText().trim()\n                                .matches(FieldType.MAC_ADDRESS.getRegex())) {\n                    PortForwardingTabUi.this.groupPermittedMac.setValidationState(ValidationState.ERROR);\n                } else {\n                    PortForwardingTabUi.this.groupPermittedMac.setValidationState(ValidationState.NONE);\n                }\n            }\n        });\n        this.source.addBlurHandler(new BlurHandler() {\n            @Override\n            public void onBlur(BlurEvent event) {\n                if (!PortForwardingTabUi.this.source.getText().trim().isEmpty()\n                        && !PortForwardingTabUi.this.source.getText().trim().matches(FieldType.PORT_RANGE.getRegex())) {\n                    PortForwardingTabUi.this.groupSource.setValidationState(ValidationState.ERROR);\n                } else {\n                    PortForwardingTabUi.this.groupSource.setValidationState(ValidationState.NONE);\n                }\n            }\n        });\n    }\n    private void setModalFieldsValues(final GwtFirewallPortForwardEntry existingEntry) {\n        // set ListBoxes\n        this.protocol.clear();\n        for (GwtNetProtocol prot : GwtNetProtocol.values()) {\n            this.protocol.addItem(prot.name());\n        }\n        this.enable.clear();\n        for (GwtFirewallNatMasquerade masquerade : GwtFirewallNatMasquerade.values()) {\n            this.enable.addItem(masquerade.name());\n        }\n        // populate Existing Values\n        if (existingEntry != null) {\n            this.input.setText(existingEntry.getInboundInterface());\n            this.output.setText(existingEntry.getOutboundInterface());\n            this.lan.setText(existingEntry.getAddress());\n            this.external.setText(String.valueOf(existingEntry.getInPort()));\n            this.internal.setText(String.valueOf(existingEntry.getOutPort()));\n            this.permittedNw.setText(existingEntry.getPermittedNetwork());\n            this.permittedMac.setText(existingEntry.getPermittedMAC());\n            this.source.setText(existingEntry.getSourcePortRange());\n            for (int i = 0; i < this.protocol.getItemCount(); i++) {\n                if (existingEntry.getProtocol().equals(this.protocol.getItemText(i))) {\n                    this.protocol.setSelectedIndex(i);\n                    break;\n                }\n            }\n            for (int i = 0; i < this.enable.getItemCount(); i++) {\n                if (existingEntry.getMasquerade().equals(this.enable.getItemText(i))) {\n                    this.enable.setSelectedIndex(i);\n                    break;\n                }\n            }\n        } else {\n            this.input.reset();\n            this.output.reset();\n            this.lan.reset();\n            this.external.reset();\n            this.internal.reset();\n            this.permittedNw.reset();\n            this.permittedMac.reset();\n            this.source.reset();\n            this.protocol.setSelectedIndex(0);\n            this.enable.setSelectedIndex(0);\n        }\n    }\n<fim_suffix>    private void setModalFieldsTooltips() {\n        // set Tooltips\n        this.tooltipInput.setTitle(MSGS.firewallPortForwardFormInboundInterfaceToolTip());\n        this.tooltipOutput.setTitle(MSGS.firewallPortForwardFormOutboundInterfaceToolTip());\n        this.tooltipLan.setTitle(MSGS.firewallPortForwardFormLanAddressToolTip());\n        this.tooltipProtocol.setTitle(MSGS.firewallPortForwardFormProtocolToolTip());\n        this.tooltipInternal.setTitle(MSGS.firewallPortForwardFormInternalPortToolTip());\n        this.tooltipExternal.setTitle(MSGS.firewallPortForwardFormExternalPortToolTip());\n        this.tooltipEnable.setTitle(MSGS.firewallPortForwardFormMasqueradingToolTip());\n        this.tooltipPermittedNw.setTitle(MSGS.firewallPortForwardFormPermittedNetworkToolTip());\n        this.tooltipPermittedMac.setTitle(MSGS.firewallPortForwardFormPermittedMacAddressToolTip());\n        this.tooltipSource.setTitle(MSGS.firewallPortForwardFormSourcePortRangeToolTip());\n        this.tooltipInput.reconfigure();\n        this.tooltipOutput.reconfigure();\n        this.tooltipLan.reconfigure();\n        this.tooltipProtocol.reconfigure();\n        this.tooltipExternal.reconfigure();\n        this.tooltipInternal.reconfigure();\n        this.tooltipEnable.reconfigure();\n        this.tooltipPermittedNw.reconfigure();\n        this.tooltipPermittedMac.reconfigure();\n        this.tooltipSource.reconfigure();\n    }<fim_middle>// function below is long method\n"}