{"text": "<fim_prefix>          com.google.protobuf.ExtensionRegistryLite extensionRegistry)\n          throws java.io.IOException {\n        org.apache.drill.exec.proto.GeneralRPCProtos.RpcHeader parsedMessage = null;\n        try {\n          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);\n        } catch (com.google.protobuf.InvalidProtocolBufferException e) {\n          parsedMessage = (org.apache.drill.exec.proto.GeneralRPCProtos.RpcHeader) e.getUnfinishedMessage();\n          throw e.unwrapIOException();\n        } finally {\n          if (parsedMessage != null) {\n            mergeFrom(parsedMessage);\n          }\n        }\n        return this;\n      }\n      private int bitField0_;\n      private int mode_ = 0;\n      /**\n       * <code>optional .exec.rpc.RpcMode mode = 1;</code>\n       */\n      public boolean hasMode() {\n        return ((bitField0_ & 0x00000001) == 0x00000001);\n      }\n      /**\n       * <code>optional .exec.rpc.RpcMode mode = 1;</code>\n       */\n      public org.apache.drill.exec.proto.GeneralRPCProtos.RpcMode getMode() {\n        @SuppressWarnings(\"deprecation\")\n        org.apache.drill.exec.proto.GeneralRPCProtos.RpcMode result = org.apache.drill.exec.proto.GeneralRPCProtos.RpcMode.valueOf(mode_);\n        return result == null ? org.apache.drill.exec.proto.GeneralRPCProtos.RpcMode.REQUEST : result;\n      }\n      /**\n       * <code>optional .exec.rpc.RpcMode mode = 1;</code>\n       */\n      public Builder setMode(org.apache.drill.exec.proto.GeneralRPCProtos.RpcMode value) {\n        if (value == null) {\n          throw new NullPointerException();\n        }\n        bitField0_ |= 0x00000001;\n        mode_ = value.getNumber();\n        onChanged();\n        return this;\n      }\n      /**\n       * <code>optional .exec.rpc.RpcMode mode = 1;</code>\n       */\n      public Builder clearMode() {\n        bitField0_ = (bitField0_ & ~0x00000001);\n        mode_ = 0;\n        onChanged();\n        return this;\n      }\n      private int coordinationId_ ;\n      /**\n       * <pre>\n       * reusable coordination identifier.  Sender defines.  Server returns on return.  Irrelevant for purely single direction rpc.\n       * </pre>\n       *\n       * <code>optional int32 coordination_id = 2;</code>\n       */\n      public boolean hasCoordinationId() {\n        return ((bitField0_ & 0x00000002) == 0x00000002);\n      }\n      /**\n       * <pre>\n       * reusable coordination identifier.  Sender defines.  Server returns on return.  Irrelevant for purely single direction rpc.\n       * </pre>\n       *\n       * <code>optional int32 coordination_id = 2;</code>\n       */\n      public int getCoordinationId() {\n        return coordinationId_;\n      }\n      /**\n       * <pre>\n       * reusable coordination identifier.  Sender defines.  Server returns on return.  Irrelevant for purely single direction rpc.\n       * </pre>\n       *\n       * <code>optional int32 coordination_id = 2;</code>\n       */\n      public Builder setCoordinationId(int value) {\n        bitField0_ |= 0x00000002;\n        coordinationId_ = value;\n        onChanged();\n        return this;\n      }\n      /**\n       * <pre>\n       * reusable coordination identifier.  Sender defines.  Server returns on return.  Irrelevant for purely single direction rpc.\n       * </pre>\n       *\n       * <code>optional int32 coordination_id = 2;</code>\n       */\n      public Builder clearCoordinationId() {\n        bitField0_ = (bitField0_ & ~0x00000002);\n        coordinationId_ = 0;\n        onChanged();\n        return this;\n      }\n      private int rpcType_ ;\n      /**\n       * <pre>\n       * a rpc mode specific rpc type.\n       * </pre>\n       *\n       * <code>optional int32 rpc_type = 3;</code>\n       */\n      public boolean hasRpcType() {\n        return ((bitField0_ & 0x00000004) == 0x00000004);\n      }\n      /**\n       * <pre>\n       * a rpc mode specific rpc type.\n       * </pre>\n       *\n       * <code>optional int32 rpc_type = 3;</code>\n       */\n      public int getRpcType() {\n        return rpcType_;\n      }\n      /**\n       * <pre>\n       * a rpc mode specific rpc type.\n       * </pre>\n       *\n       * <code>optional int32 rpc_type = 3;</code>\n       */\n      public Builder setRpcType(int value) {\n        bitField0_ |= 0x00000004;\n        rpcType_ = value;\n        onChanged();\n        return this;\n      }\n      /**\n       * <pre>\n       * a rpc mode specific rpc type.\n       * </pre>\n       *\n       * <code>optional int32 rpc_type = 3;</code>\n       */\n      public Builder clearRpcType() {\n        bitField0_ = (bitField0_ & ~0x00000004);\n        rpcType_ = 0;\n        onChanged();\n        return this;\n      }\n      @java.lang.Override\n      public final Builder setUnknownFields(\n          final com.google.protobuf.UnknownFieldSet unknownFields) {\n        return super.setUnknownFields(unknownFields);\n      }\n      @java.lang.Override\n      public final Builder mergeUnknownFields(\n          final com.google.protobuf.UnknownFieldSet unknownFields) {\n        return super.mergeUnknownFields(unknownFields);\n      }\n      // @@protoc_insertion_point(builder_scope:exec.rpc.RpcHeader)\n    }\n    // @@protoc_insertion_point(class_scope:exec.rpc.RpcHeader)\n    private static final org.apache.drill.exec.proto.GeneralRPCProtos.RpcHeader DEFAULT_INSTANCE;\n    static {\n      DEFAULT_INSTANCE = new org.apache.drill.exec.proto.GeneralRPCProtos.RpcHeader();\n    }\n    public static org.apache.drill.exec.proto.GeneralRPCProtos.RpcHeader getDefaultInstance() {\n      return DEFAULT_INSTANCE;\n    }\n    @java.lang.Deprecated public static final com.google.protobuf.Parser<RpcHeader>\n        PARSER = new com.google.protobuf.AbstractParser<RpcHeader>() {\n      @java.lang.Override\n      public RpcHeader parsePartialFrom(\n          com.google.protobuf.CodedInputStream input,\n          com.google.protobuf.ExtensionRegistryLite extensionRegistry)\n          throws com.google.protobuf.InvalidProtocolBufferException {\n        return new RpcHeader(input, extensionRegistry);\n      }\n    };\n    public static com.google.protobuf.Parser<RpcHeader> parser() {\n      return PARSER;\n    }\n    @java.lang.Override\n    public com.google.protobuf.Parser<RpcHeader> getParserForType() {\n      return PARSER;\n    }\n    @java.lang.Override\n    public org.apache.drill.exec.proto.GeneralRPCProtos.RpcHeader getDefaultInstanceForType() {\n      return DEFAULT_INSTANCE;\n    }\n  }\n<fim_suffix>  public interface CompleteRpcMessageOrBuilder extends\n      // @@protoc_insertion_point(interface_extends:exec.rpc.CompleteRpcMessage)\n      com.google.protobuf.MessageOrBuilder {\n    /**\n     * <pre>\n     * required\n     * </pre>\n     *\n     * <code>optional .exec.rpc.RpcHeader header = 1;</code>\n     */\n    boolean hasHeader();\n    /**\n     * <pre>\n     * required\n     * </pre>\n     *\n     * <code>optional .exec.rpc.RpcHeader header = 1;</code>\n     */\n    org.apache.drill.exec.proto.GeneralRPCProtos.RpcHeader getHeader();\n    /**\n     * <pre>\n     * required\n     * </pre>\n     *\n     * <code>optional .exec.rpc.RpcHeader header = 1;</code>\n     */\n    org.apache.drill.exec.proto.GeneralRPCProtos.RpcHeaderOrBuilder getHeaderOrBuilder();\n    /**\n     * <pre>\n     * required\n     * </pre>\n     *\n     * <code>optional bytes protobuf_body = 2;</code>\n     */\n    boolean hasProtobufBody();\n    /**\n     * <pre>\n     * required\n     * </pre>\n     *\n     * <code>optional bytes protobuf_body = 2;</code>\n     */\n    com.google.protobuf.ByteString getProtobufBody();\n    /**\n     * <pre>\n     * optional\n     * </pre>\n     *\n     * <code>optional bytes raw_body = 3;</code>\n     */\n    boolean hasRawBody();\n    /**\n     * <pre>\n     * optional\n     * </pre>\n     *\n     * <code>optional bytes raw_body = 3;</code>\n     */\n    com.google.protobuf.ByteString getRawBody();\n  }<fim_middle>// class below has no smell\n"}