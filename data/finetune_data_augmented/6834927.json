{"text": "<fim_prefix>\t\t//\trhs=BitwiseANDExpression<In,Yield>)*;\n\t\t@Override public ParserRule getRule() { return rule; }\n\t\t//BitwiseANDExpression<In,Yield> (=> ({BinaryBitwiseExpression.lhs=current} op=BitwiseXOROperator)\n\t\t//rhs=BitwiseANDExpression<In,Yield>)*\n\t\tpublic Group getGroup() { return cGroup; }\n\t\t//BitwiseANDExpression<In,Yield>\n\t\tpublic RuleCall getBitwiseANDExpressionParserRuleCall_0() { return cBitwiseANDExpressionParserRuleCall_0; }\n\t\t//(=> ({BinaryBitwiseExpression.lhs=current} op=BitwiseXOROperator) rhs=BitwiseANDExpression<In,Yield>)*\n\t\tpublic Group getGroup_1() { return cGroup_1; }\n\t\t//=> ({BinaryBitwiseExpression.lhs=current} op=BitwiseXOROperator)\n\t\tpublic Group getGroup_1_0() { return cGroup_1_0; }\n\t\t//{BinaryBitwiseExpression.lhs=current} op=BitwiseXOROperator\n\t\tpublic Group getGroup_1_0_0() { return cGroup_1_0_0; }\n\t\t//{BinaryBitwiseExpression.lhs=current}\n\t\tpublic Action getBinaryBitwiseExpressionLhsAction_1_0_0_0() { return cBinaryBitwiseExpressionLhsAction_1_0_0_0; }\n\t\t//op=BitwiseXOROperator\n\t\tpublic Assignment getOpAssignment_1_0_0_1() { return cOpAssignment_1_0_0_1; }\n\t\t//BitwiseXOROperator\n\t\tpublic RuleCall getOpBitwiseXOROperatorParserRuleCall_1_0_0_1_0() { return cOpBitwiseXOROperatorParserRuleCall_1_0_0_1_0; }\n\t\t//rhs=BitwiseANDExpression<In,Yield>\n\t\tpublic Assignment getRhsAssignment_1_1() { return cRhsAssignment_1_1; }\n\t\t//BitwiseANDExpression<In,Yield>\n\t\tpublic RuleCall getRhsBitwiseANDExpressionParserRuleCall_1_1_0() { return cRhsBitwiseANDExpressionParserRuleCall_1_1_0; }\n\t}\n\tpublic class BitwiseXOROperatorElements extends AbstractParserRuleElementFinder {\n\t\tprivate final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), \"org.eclipse.n4js.N4JS.BitwiseXOROperator\");\n\t\tprivate final Keyword cCircumflexAccentKeyword = (Keyword)rule.eContents().get(1);\n\t\t//BitwiseXOROperator BinaryBitwiseOperator:\n\t\t//\t'^';\n\t\t@Override public ParserRule getRule() { return rule; }\n\t\t//'^'\n\t\tpublic Keyword getCircumflexAccentKeyword() { return cCircumflexAccentKeyword; }\n\t}\n<fim_suffix>\tpublic class BitwiseORExpressionElements extends AbstractParserRuleElementFinder {\n\t\tprivate final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), \"org.eclipse.n4js.N4JS.BitwiseORExpression\");\n\t\tprivate final Group cGroup = (Group)rule.eContents().get(1);\n\t\tprivate final RuleCall cBitwiseXORExpressionParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);\n\t\tprivate final Group cGroup_1 = (Group)cGroup.eContents().get(1);\n\t\tprivate final Group cGroup_1_0 = (Group)cGroup_1.eContents().get(0);\n\t\tprivate final Group cGroup_1_0_0 = (Group)cGroup_1_0.eContents().get(0);\n\t\tprivate final Action cBinaryBitwiseExpressionLhsAction_1_0_0_0 = (Action)cGroup_1_0_0.eContents().get(0);\n\t\tprivate final Assignment cOpAssignment_1_0_0_1 = (Assignment)cGroup_1_0_0.eContents().get(1);\n\t\tprivate final RuleCall cOpBitwiseOROperatorParserRuleCall_1_0_0_1_0 = (RuleCall)cOpAssignment_1_0_0_1.eContents().get(0);\n\t\tprivate final Assignment cRhsAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);\n\t\tprivate final RuleCall cRhsBitwiseXORExpressionParserRuleCall_1_1_0 = (RuleCall)cRhsAssignment_1_1.eContents().get(0);\n\t\t//BitwiseORExpression <In, Yield Expression:\n\t\t//\tBitwiseXORExpression<In,Yield> (=> ({BinaryBitwiseExpression.lhs=current} op=BitwiseOROperator)\n\t\t//\trhs=BitwiseXORExpression<In,Yield>)*;\n\t\t@Override public ParserRule getRule() { return rule; }\n\t\t//BitwiseXORExpression<In,Yield> (=> ({BinaryBitwiseExpression.lhs=current} op=BitwiseOROperator)\n\t\t//rhs=BitwiseXORExpression<In,Yield>)*\n\t\tpublic Group getGroup() { return cGroup; }\n\t\t//BitwiseXORExpression<In,Yield>\n\t\tpublic RuleCall getBitwiseXORExpressionParserRuleCall_0() { return cBitwiseXORExpressionParserRuleCall_0; }\n\t\t//(=> ({BinaryBitwiseExpression.lhs=current} op=BitwiseOROperator) rhs=BitwiseXORExpression<In,Yield>)*\n\t\tpublic Group getGroup_1() { return cGroup_1; }\n\t\t//=> ({BinaryBitwiseExpression.lhs=current} op=BitwiseOROperator)\n\t\tpublic Group getGroup_1_0() { return cGroup_1_0; }\n\t\t//{BinaryBitwiseExpression.lhs=current} op=BitwiseOROperator\n\t\tpublic Group getGroup_1_0_0() { return cGroup_1_0_0; }\n\t\t//{BinaryBitwiseExpression.lhs=current}\n\t\tpublic Action getBinaryBitwiseExpressionLhsAction_1_0_0_0() { return cBinaryBitwiseExpressionLhsAction_1_0_0_0; }\n\t\t//op=BitwiseOROperator\n\t\tpublic Assignment getOpAssignment_1_0_0_1() { return cOpAssignment_1_0_0_1; }\n\t\t//BitwiseOROperator\n\t\tpublic RuleCall getOpBitwiseOROperatorParserRuleCall_1_0_0_1_0() { return cOpBitwiseOROperatorParserRuleCall_1_0_0_1_0; }\n\t\t//rhs=BitwiseXORExpression<In,Yield>\n\t\tpublic Assignment getRhsAssignment_1_1() { return cRhsAssignment_1_1; }\n\t\t//BitwiseXORExpression<In,Yield>\n\t\tpublic RuleCall getRhsBitwiseXORExpressionParserRuleCall_1_1_0() { return cRhsBitwiseXORExpressionParserRuleCall_1_1_0; }\n\t}<fim_middle>// class below is data class\n"}