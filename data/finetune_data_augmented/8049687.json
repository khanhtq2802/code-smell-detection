{"text": "<fim_prefix>        \t\tint stackSize = keepStackSize();\n        try {\n            // InternalXbaseWithAnnotations.g:6766:1: ( ( ( rule__XUnaryOperation__FeatureAssignment_0_1 ) ) )\n            // InternalXbaseWithAnnotations.g:6767:1: ( ( rule__XUnaryOperation__FeatureAssignment_0_1 ) )\n            {\n            // InternalXbaseWithAnnotations.g:6767:1: ( ( rule__XUnaryOperation__FeatureAssignment_0_1 ) )\n            // InternalXbaseWithAnnotations.g:6768:2: ( rule__XUnaryOperation__FeatureAssignment_0_1 )\n            {\n            if ( state.backtracking==0 ) {\n               before(grammarAccess.getXUnaryOperationAccess().getFeatureAssignment_0_1()); \n            }\n            // InternalXbaseWithAnnotations.g:6769:2: ( rule__XUnaryOperation__FeatureAssignment_0_1 )\n            // InternalXbaseWithAnnotations.g:6769:3: rule__XUnaryOperation__FeatureAssignment_0_1\n            {\n            pushFollow(FOLLOW_2);\n            rule__XUnaryOperation__FeatureAssignment_0_1();\n            state._fsp--;\n            if (state.failed) return ;\n            }\n            if ( state.backtracking==0 ) {\n               after(grammarAccess.getXUnaryOperationAccess().getFeatureAssignment_0_1()); \n            }\n            }\n            }\n        }\n        catch (RecognitionException re) {\n            reportError(re);\n            recover(input,re);\n        }\n        finally {\n            \trestoreStackSize(stackSize);\n        }\n        return ;\n    }\n    // $ANTLR end \"rule__XUnaryOperation__Group_0__1__Impl\"\n    // $ANTLR start \"rule__XUnaryOperation__Group_0__2\"\n    // InternalXbaseWithAnnotations.g:6777:1: rule__XUnaryOperation__Group_0__2 : rule__XUnaryOperation__Group_0__2__Impl ;\n    public final void rule__XUnaryOperation__Group_0__2() throws RecognitionException {\n        \t\tint stackSize = keepStackSize();\n        try {\n            // InternalXbaseWithAnnotations.g:6781:1: ( rule__XUnaryOperation__Group_0__2__Impl )\n            // InternalXbaseWithAnnotations.g:6782:2: rule__XUnaryOperation__Group_0__2__Impl\n            {\n            pushFollow(FOLLOW_2);\n            rule__XUnaryOperation__Group_0__2__Impl();\n            state._fsp--;\n            if (state.failed) return ;\n            }\n        }\n        catch (RecognitionException re) {\n            reportError(re);\n            recover(input,re);\n        }\n        finally {\n            \trestoreStackSize(stackSize);\n        }\n        return ;\n    }\n    // $ANTLR end \"rule__XUnaryOperation__Group_0__2\"\n    // $ANTLR start \"rule__XUnaryOperation__Group_0__2__Impl\"\n    // InternalXbaseWithAnnotations.g:6788:1: rule__XUnaryOperation__Group_0__2__Impl : ( ( rule__XUnaryOperation__OperandAssignment_0_2 ) ) ;\n    public final void rule__XUnaryOperation__Group_0__2__Impl() throws RecognitionException {\n        \t\tint stackSize = keepStackSize();\n        try {\n            // InternalXbaseWithAnnotations.g:6792:1: ( ( ( rule__XUnaryOperation__OperandAssignment_0_2 ) ) )\n            // InternalXbaseWithAnnotations.g:6793:1: ( ( rule__XUnaryOperation__OperandAssignment_0_2 ) )\n            {\n            // InternalXbaseWithAnnotations.g:6793:1: ( ( rule__XUnaryOperation__OperandAssignment_0_2 ) )\n            // InternalXbaseWithAnnotations.g:6794:2: ( rule__XUnaryOperation__OperandAssignment_0_2 )\n            {\n            if ( state.backtracking==0 ) {\n               before(grammarAccess.getXUnaryOperationAccess().getOperandAssignment_0_2()); \n            }\n            // InternalXbaseWithAnnotations.g:6795:2: ( rule__XUnaryOperation__OperandAssignment_0_2 )\n            // InternalXbaseWithAnnotations.g:6795:3: rule__XUnaryOperation__OperandAssignment_0_2\n            {\n            pushFollow(FOLLOW_2);\n            rule__XUnaryOperation__OperandAssignment_0_2();\n            state._fsp--;\n            if (state.failed) return ;\n            }\n            if ( state.backtracking==0 ) {\n               after(grammarAccess.getXUnaryOperationAccess().getOperandAssignment_0_2()); \n            }\n            }\n            }\n        }\n        catch (RecognitionException re) {\n            reportError(re);\n            recover(input,re);\n        }\n        finally {\n            \trestoreStackSize(stackSize);\n        }\n        return ;\n    }\n    // $ANTLR end \"rule__XUnaryOperation__Group_0__2__Impl\"\n    // $ANTLR start \"rule__XCastedExpression__Group__0\"\n    // InternalXbaseWithAnnotations.g:6804:1: rule__XCastedExpression__Group__0 : rule__XCastedExpression__Group__0__Impl rule__XCastedExpression__Group__1 ;\n    public final void rule__XCastedExpression__Group__0() throws RecognitionException {\n        \t\tint stackSize = keepStackSize();\n        try {\n            // InternalXbaseWithAnnotations.g:6808:1: ( rule__XCastedExpression__Group__0__Impl rule__XCastedExpression__Group__1 )\n            // InternalXbaseWithAnnotations.g:6809:2: rule__XCastedExpression__Group__0__Impl rule__XCastedExpression__Group__1\n            {\n            pushFollow(FOLLOW_39);\n            rule__XCastedExpression__Group__0__Impl();\n            state._fsp--;\n            if (state.failed) return ;\n            pushFollow(FOLLOW_2);\n            rule__XCastedExpression__Group__1();\n            state._fsp--;\n            if (state.failed) return ;\n            }\n        }\n        catch (RecognitionException re) {\n            reportError(re);\n            recover(input,re);\n        }\n        finally {\n            \trestoreStackSize(stackSize);\n        }\n        return ;\n    }\n    // $ANTLR end \"rule__XCastedExpression__Group__0\"\n    // $ANTLR start \"rule__XCastedExpression__Group__0__Impl\"\n    // InternalXbaseWithAnnotations.g:6816:1: rule__XCastedExpression__Group__0__Impl : ( ruleXPostfixOperation ) ;\n    public final void rule__XCastedExpression__Group__0__Impl() throws RecognitionException {\n        \t\tint stackSize = keepStackSize();\n        try {\n            // InternalXbaseWithAnnotations.g:6820:1: ( ( ruleXPostfixOperation ) )\n            // InternalXbaseWithAnnotations.g:6821:1: ( ruleXPostfixOperation )\n            {\n            // InternalXbaseWithAnnotations.g:6821:1: ( ruleXPostfixOperation )\n            // InternalXbaseWithAnnotations.g:6822:2: ruleXPostfixOperation\n            {\n            if ( state.backtracking==0 ) {\n               before(grammarAccess.getXCastedExpressionAccess().getXPostfixOperationParserRuleCall_0()); \n            }\n            pushFollow(FOLLOW_2);\n            ruleXPostfixOperation();\n            state._fsp--;\n            if (state.failed) return ;\n            if ( state.backtracking==0 ) {\n               after(grammarAccess.getXCastedExpressionAccess().getXPostfixOperationParserRuleCall_0()); \n            }\n            }\n            }\n        }\n        catch (RecognitionException re) {\n            reportError(re);\n            recover(input,re);\n        }\n        finally {\n            \trestoreStackSize(stackSize);\n        }\n        return ;\n    }\n    // $ANTLR end \"rule__XCastedExpression__Group__0__Impl\"\n    // $ANTLR start \"rule__XCastedExpression__Group__1\"\n    // InternalXbaseWithAnnotations.g:6831:1: rule__XCastedExpression__Group__1 : rule__XCastedExpression__Group__1__Impl ;\n<fim_suffix>    public final void rule__XCastedExpression__Group__1() throws RecognitionException {\n        \t\tint stackSize = keepStackSize();\n        try {\n            // InternalXbaseWithAnnotations.g:6835:1: ( rule__XCastedExpression__Group__1__Impl )\n            // InternalXbaseWithAnnotations.g:6836:2: rule__XCastedExpression__Group__1__Impl\n            {\n            pushFollow(FOLLOW_2);\n            rule__XCastedExpression__Group__1__Impl();\n            state._fsp--;\n            if (state.failed) return ;\n            }\n        }\n        catch (RecognitionException re) {\n            reportError(re);\n            recover(input,re);\n        }\n        finally {\n            \trestoreStackSize(stackSize);\n        }\n        return ;\n    }<fim_middle>// function below has no smell\n"}