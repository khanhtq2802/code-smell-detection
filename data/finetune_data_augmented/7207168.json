{"text": "<fim_prefix>/**\n * Copyright (c) 2016, 2019, Oracle and/or its affiliates. All rights reserved.\n */\npackage com.oracle.bmc.waas.model;\n/**\n *\n * <br/>\n * Note: Objects should always be created or deserialized using the {@link Builder}. This model distinguishes fields\n * that are {@code null} because they are unset from fields that are explicitly set to {@code null}. This is done in\n * the setter methods of the {@link Builder}, which maintain a set of all explicitly set fields called\n * {@link #__explicitlySet__}. The {@link #hashCode()} and {@link #equals(Object)} methods are implemented to take\n * {@link #__explicitlySet__} into account. The constructor, on the other hand, does not set {@link #__explicitlySet__}\n * (since the constructor cannot distinguish explicit {@code null} from unset {@code null}).\n **/\n@javax.annotation.Generated(value = \"OracleSDKGenerator\", comments = \"API Version: 20181116\")\n@lombok.AllArgsConstructor(onConstructor = @__({@Deprecated}))\n@lombok.Value\n@com.fasterxml.jackson.databind.annotation.JsonDeserialize(\n    builder = AccessRuleCriteria.Builder.class\n)\n@com.fasterxml.jackson.annotation.JsonFilter(com.oracle.bmc.http.internal.ExplicitlySetFilter.NAME)\npublic class AccessRuleCriteria {\n    @com.fasterxml.jackson.databind.annotation.JsonPOJOBuilder(withPrefix = \"\")\n    @lombok.experimental.Accessors(fluent = true)\n    public static class Builder {\n        @com.fasterxml.jackson.annotation.JsonProperty(\"condition\")\n        private Condition condition;\n        public Builder condition(Condition condition) {\n            this.condition = condition;\n            this.__explicitlySet__.add(\"condition\");\n            return this;\n        }\n        @com.fasterxml.jackson.annotation.JsonProperty(\"value\")\n        private String value;\n        public Builder value(String value) {\n            this.value = value;\n            this.__explicitlySet__.add(\"value\");\n            return this;\n        }\n        @com.fasterxml.jackson.annotation.JsonIgnore\n        private final java.util.Set<String> __explicitlySet__ = new java.util.HashSet<String>();\n        public AccessRuleCriteria build() {\n            AccessRuleCriteria __instance__ = new AccessRuleCriteria(condition, value);\n            __instance__.__explicitlySet__.addAll(__explicitlySet__);\n            return __instance__;\n        }\n        @com.fasterxml.jackson.annotation.JsonIgnore\n        public Builder copy(AccessRuleCriteria o) {\n            Builder copiedBuilder = condition(o.getCondition()).value(o.getValue());\n            copiedBuilder.__explicitlySet__.retainAll(o.__explicitlySet__);\n            return copiedBuilder;\n        }\n    }\n    /**\n     * Create a new builder.\n     */\n    public static Builder builder() {\n        return new Builder();\n    }\n    /**\n     * The criteria the access rule uses to determine if action should be taken on a request.\n     * <p>\n     * - **URL_IS:** Matches if the concatenation of request URL path and query is identical to the contents of the `value` field.\n     * - **URL_IS_NOT:** Matches if the concatenation of request URL path and query is not identical to the contents of the `value` field.\n     * - **URL_STARTS_WITH:** Matches if the concatenation of request URL path and query starts with the contents of the `value` field.\n     * - **URL_PART_ENDS_WITH:** Matches if the concatenation of request URL path and query ends with the contents of the `value` field.\n     * - **URL_PART_CONTAINS:** Matches if the concatenation of request URL path and query contains the contents of the `value` field.\n     * - **URL_REGEX:** Matches if the request is described by the regular expression in the `value` field.\n     * - **IP_IS:** Matches if the request originates from an IP address in the `value` field.\n     * - **IP_IS_NOT:** Matches if the request does not originate from an IP address in the `value` field.\n     * - **HTTP_HEADER_CONTAINS:** Matches if the request includes an HTTP header field whose name and value correspond to data specified in the `value` field with a separating colon. **Example:** `host:test.example.com` where `host` is the name of the field and `test.example.com` is the value of the host field. Comparison is independently applied to every header field whose name is a case insensitive match, and the value is required to be case-sensitive identical.\n     * - **COUNTRY_IS:** Matches if the request originates from a country in the `value` field. Country codes are in ISO 3166-1 alpha-2 format. For a list of codes, see [ISO's website](https://www.iso.org/obp/ui/#search/code/).\n     * - **COUNTRY_IS_NOT:** Matches if the request does not originate from a country in the `value` field. Country codes are in ISO 3166-1 alpha-2 format. For a list of codes, see [ISO's website](https://www.iso.org/obp/ui/#search/code/).\n     * - **USER_AGENT_IS:** Matches if the requesting user agent is identical to the contents of the `value` field. Example: `Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:35.0) Gecko/20100101 Firefox/35.0`\n     * - **USER_AGENT_IS_NOT:** Matches if the requesting user agent is not identical to the contents of the `value` field. Example: `Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:35.0) Gecko/20100101 Firefox/35.0`\n     **/\n    @lombok.extern.slf4j.Slf4j\n    public enum Condition {\n        UrlIs(\"URL_IS\"),\n        UrlIsNot(\"URL_IS_NOT\"),\n        UrlStartsWith(\"URL_STARTS_WITH\"),\n        UrlPartEndsWith(\"URL_PART_ENDS_WITH\"),\n        UrlPartContains(\"URL_PART_CONTAINS\"),\n        UrlRegex(\"URL_REGEX\"),\n        IpIs(\"IP_IS\"),\n        IpIsNot(\"IP_IS_NOT\"),\n        HttpHeaderContains(\"HTTP_HEADER_CONTAINS\"),\n        CountryIs(\"COUNTRY_IS\"),\n        CountryIsNot(\"COUNTRY_IS_NOT\"),\n        UserAgentIs(\"USER_AGENT_IS\"),\n        UserAgentIsNot(\"USER_AGENT_IS_NOT\"),\n        /**\n         * This value is used if a service returns a value for this enum that is not recognized by this\n         * version of the SDK.\n         */\n        UnknownEnumValue(null);\n        private final String value;\n        private static java.util.Map<String, Condition> map;\n        static {\n            map = new java.util.HashMap<>();\n            for (Condition v : Condition.values()) {\n                if (v != UnknownEnumValue) {\n                    map.put(v.getValue(), v);\n                }\n            }\n        }\n        Condition(String value) {\n            this.value = value;\n        }\n<fim_suffix>        @com.fasterxml.jackson.annotation.JsonValue\n        public String getValue() {\n            return value;\n        }\n        @com.fasterxml.jackson.annotation.JsonCreator\n        public static Condition create(String key) {\n            if (map.containsKey(key)) {\n                return map.get(key);\n            }\n            LOG.warn(\n                    \"Received unknown value '{}' for enum 'Condition', returning UnknownEnumValue\",\n                    key);\n            return UnknownEnumValue;\n        }\n    };\n    /**\n     * The criteria the access rule uses to determine if action should be taken on a request.\n     * <p>\n     * - **URL_IS:** Matches if the concatenation of request URL path and query is identical to the contents of the `value` field.\n     * - **URL_IS_NOT:** Matches if the concatenation of request URL path and query is not identical to the contents of the `value` field.\n     * - **URL_STARTS_WITH:** Matches if the concatenation of request URL path and query starts with the contents of the `value` field.\n     * - **URL_PART_ENDS_WITH:** Matches if the concatenation of request URL path and query ends with the contents of the `value` field.\n     * - **URL_PART_CONTAINS:** Matches if the concatenation of request URL path and query contains the contents of the `value` field.\n     * - **URL_REGEX:** Matches if the request is described by the regular expression in the `value` field.\n     * - **IP_IS:** Matches if the request originates from an IP address in the `value` field.\n     * - **IP_IS_NOT:** Matches if the request does not originate from an IP address in the `value` field.<fim_middle>// function below has no smell\n"}