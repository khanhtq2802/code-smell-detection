{"text": "<fim_prefix>        } catch (NotServingTabletException nste) {\n          result.nste = nste;\n        } catch (TooManyFilesException tmfe) {\n          result.tmfe = tmfe;\n        } catch (TSampleNotPresentException tsnpe) {\n          result.tsnpe = tsnpe;\n        }\n        return result;\n      }\n    }\n    public static class continueScan<I extends Iface> extends org.apache.thrift.ProcessFunction<I, continueScan_args> {\n      public continueScan() {\n        super(\"continueScan\");\n      }\n      public continueScan_args getEmptyArgsInstance() {\n        return new continueScan_args();\n      }\n      protected boolean isOneway() {\n        return false;\n      }\n      @Override\n      protected boolean rethrowUnhandledExceptions() {\n        return false;\n      }\n      public continueScan_result getResult(I iface, continueScan_args args) throws org.apache.thrift.TException {\n        continueScan_result result = new continueScan_result();\n        try {\n          result.success = iface.continueScan(args.tinfo, args.scanID);\n        } catch (NoSuchScanIDException nssi) {\n          result.nssi = nssi;\n        } catch (NotServingTabletException nste) {\n          result.nste = nste;\n        } catch (TooManyFilesException tmfe) {\n          result.tmfe = tmfe;\n        } catch (TSampleNotPresentException tsnpe) {\n          result.tsnpe = tsnpe;\n        }\n        return result;\n      }\n    }\n    public static class closeScan<I extends Iface> extends org.apache.thrift.ProcessFunction<I, closeScan_args> {\n      public closeScan() {\n        super(\"closeScan\");\n      }\n      public closeScan_args getEmptyArgsInstance() {\n        return new closeScan_args();\n      }\n      protected boolean isOneway() {\n        return true;\n      }\n      @Override\n      protected boolean rethrowUnhandledExceptions() {\n        return false;\n      }\n      public org.apache.thrift.TBase getResult(I iface, closeScan_args args) throws org.apache.thrift.TException {\n        iface.closeScan(args.tinfo, args.scanID);\n        return null;\n      }\n    }\n    public static class startMultiScan<I extends Iface> extends org.apache.thrift.ProcessFunction<I, startMultiScan_args> {\n      public startMultiScan() {\n        super(\"startMultiScan\");\n      }\n      public startMultiScan_args getEmptyArgsInstance() {\n        return new startMultiScan_args();\n      }\n      protected boolean isOneway() {\n        return false;\n      }\n      @Override\n      protected boolean rethrowUnhandledExceptions() {\n        return false;\n      }\n      public startMultiScan_result getResult(I iface, startMultiScan_args args) throws org.apache.thrift.TException {\n        startMultiScan_result result = new startMultiScan_result();\n        try {\n          result.success = iface.startMultiScan(args.tinfo, args.credentials, args.batch, args.columns, args.ssiList, args.ssio, args.authorizations, args.waitForWrites, args.samplerConfig, args.batchTimeOut, args.classLoaderContext, args.executionHints);\n        } catch (org.apache.accumulo.core.clientImpl.thrift.ThriftSecurityException sec) {\n          result.sec = sec;\n        } catch (TSampleNotPresentException tsnpe) {\n          result.tsnpe = tsnpe;\n        }\n        return result;\n      }\n    }\n    public static class continueMultiScan<I extends Iface> extends org.apache.thrift.ProcessFunction<I, continueMultiScan_args> {\n      public continueMultiScan() {\n        super(\"continueMultiScan\");\n      }\n      public continueMultiScan_args getEmptyArgsInstance() {\n        return new continueMultiScan_args();\n      }\n      protected boolean isOneway() {\n        return false;\n      }\n      @Override\n      protected boolean rethrowUnhandledExceptions() {\n        return false;\n      }\n      public continueMultiScan_result getResult(I iface, continueMultiScan_args args) throws org.apache.thrift.TException {\n        continueMultiScan_result result = new continueMultiScan_result();\n        try {\n          result.success = iface.continueMultiScan(args.tinfo, args.scanID);\n        } catch (NoSuchScanIDException nssi) {\n          result.nssi = nssi;\n        } catch (TSampleNotPresentException tsnpe) {\n          result.tsnpe = tsnpe;\n        }\n        return result;\n      }\n    }\n    public static class closeMultiScan<I extends Iface> extends org.apache.thrift.ProcessFunction<I, closeMultiScan_args> {\n      public closeMultiScan() {\n        super(\"closeMultiScan\");\n      }\n      public closeMultiScan_args getEmptyArgsInstance() {\n        return new closeMultiScan_args();\n      }\n      protected boolean isOneway() {\n        return false;\n      }\n      @Override\n      protected boolean rethrowUnhandledExceptions() {\n        return false;\n      }\n      public closeMultiScan_result getResult(I iface, closeMultiScan_args args) throws org.apache.thrift.TException {\n        closeMultiScan_result result = new closeMultiScan_result();\n        try {\n          iface.closeMultiScan(args.tinfo, args.scanID);\n        } catch (NoSuchScanIDException nssi) {\n          result.nssi = nssi;\n        }\n        return result;\n      }\n    }\n    public static class startUpdate<I extends Iface> extends org.apache.thrift.ProcessFunction<I, startUpdate_args> {\n      public startUpdate() {\n        super(\"startUpdate\");\n      }\n      public startUpdate_args getEmptyArgsInstance() {\n        return new startUpdate_args();\n      }\n      protected boolean isOneway() {\n        return false;\n      }\n      @Override\n      protected boolean rethrowUnhandledExceptions() {\n        return false;\n      }\n      public startUpdate_result getResult(I iface, startUpdate_args args) throws org.apache.thrift.TException {\n        startUpdate_result result = new startUpdate_result();\n        try {\n          result.success = iface.startUpdate(args.tinfo, args.credentials, args.durability);\n          result.setSuccessIsSet(true);\n        } catch (org.apache.accumulo.core.clientImpl.thrift.ThriftSecurityException sec) {\n          result.sec = sec;\n        }\n        return result;\n      }\n    }\n    public static class applyUpdates<I extends Iface> extends org.apache.thrift.ProcessFunction<I, applyUpdates_args> {\n      public applyUpdates() {\n        super(\"applyUpdates\");\n      }\n      public applyUpdates_args getEmptyArgsInstance() {\n        return new applyUpdates_args();\n      }\n      protected boolean isOneway() {\n        return true;\n      }\n      @Override\n      protected boolean rethrowUnhandledExceptions() {\n        return false;\n      }\n      public org.apache.thrift.TBase getResult(I iface, applyUpdates_args args) throws org.apache.thrift.TException {\n        iface.applyUpdates(args.tinfo, args.updateID, args.keyExtent, args.mutations);\n        return null;\n      }\n    }\n    public static class closeUpdate<I extends Iface> extends org.apache.thrift.ProcessFunction<I, closeUpdate_args> {\n      public closeUpdate() {\n        super(\"closeUpdate\");\n      }\n      public closeUpdate_args getEmptyArgsInstance() {\n        return new closeUpdate_args();\n      }\n      protected boolean isOneway() {\n        return false;\n      }\n      @Override\n      protected boolean rethrowUnhandledExceptions() {\n        return false;\n      }\n      public closeUpdate_result getResult(I iface, closeUpdate_args args) throws org.apache.thrift.TException {\n        closeUpdate_result result = new closeUpdate_result();\n        try {\n          result.success = iface.closeUpdate(args.tinfo, args.updateID);\n        } catch (NoSuchScanIDException nssi) {\n          result.nssi = nssi;\n        }\n        return result;\n      }\n    }\n<fim_suffix>    public static class update<I extends Iface> extends org.apache.thrift.ProcessFunction<I, update_args> {\n      public update() {\n        super(\"update\");\n      }\n      public update_args getEmptyArgsInstance() {\n        return new update_args();\n      }\n      protected boolean isOneway() {\n        return false;\n      }\n      @Override\n      protected boolean rethrowUnhandledExceptions() {\n        return false;\n      }\n      public update_result getResult(I iface, update_args args) throws org.apache.thrift.TException {\n        update_result result = new update_result();\n        try {\n          iface.update(args.tinfo, args.credentials, args.keyExtent, args.mutation, args.durability);\n        } catch (org.apache.accumulo.core.clientImpl.thrift.ThriftSecurityException sec) {\n          result.sec = sec;\n        } catch (NotServingTabletException nste) {\n          result.nste = nste;\n        } catch (ConstraintViolationException cve) {\n          result.cve = cve;\n        }\n        return result;\n      }\n    }<fim_middle>// class below has no smell\n"}