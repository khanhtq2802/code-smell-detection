{"text": "<fim_prefix>/*\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage org.apache.ignite.internal.visor.node;\n\nimport java.io.IOException;\nimport java.io.ObjectInput;\nimport java.io.ObjectOutput;\nimport org.apache.ignite.configuration.IgniteConfiguration;\nimport org.apache.ignite.internal.util.typedef.internal.S;\nimport org.apache.ignite.internal.util.typedef.internal.U;\nimport org.apache.ignite.internal.visor.VisorDataTransferObject;\nimport org.jetbrains.annotations.Nullable;\n\nimport static org.apache.ignite.internal.visor.util.VisorTaskUtils.compactArray;\n\n/**\n * Data transfer object for node lifecycle configuration properties.\n */\n<fim_suffix>public class VisorLifecycleConfiguration extends VisorDataTransferObject{\n    /** */\n    private static final long serialVersionUID = 0L;\n\n    /** Lifecycle beans. */\n    private String beans;\n\n    /**\n     * Default constructor.\n     */\n    public VisorLifecycleConfiguration() {\n        // No-op.\n    }\n\n    /**\n     * Create data transfer object for node lifecycle configuration properties.\n     *\n     * @param c Grid configuration.\n     */\n    public VisorLifecycleConfiguration(IgniteConfiguration c) {\n        beans = compactArray(c.getLifecycleBeans());\n    }\n\n    /**\n     * @return Lifecycle beans.\n     */\n    @Nullable public String getBeans() {\n        return beans;\n    }\n\n    /** {@inheritDoc} */\n    @Override protected void writeExternalData(ObjectOutput out) throws IOException {\n        U.writeString(out, beans);\n    }\n\n    /** {@inheritDoc} */\n    @Override protected void readExternalData(byte protoVer, ObjectInput in) throws IOException, ClassNotFoundException {\n        beans = U.readString(in);\n    }\n\n    /** {@inheritDoc} */\n    @Override public String toString() {\n        return S.toString(VisorLifecycleConfiguration.class, this);\n    }\n}<fim_middle>// class below has no smell\n"}