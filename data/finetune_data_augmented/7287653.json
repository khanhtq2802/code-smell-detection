{"text": "<fim_prefix>/*******************************************************************************\n * Copyright (c) 2012, 2015 Pivotal Software, Inc.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * https://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n * Pivotal Software, Inc. - initial API and implementation\n *******************************************************************************/\npackage org.springsource.ide.eclipse.commons.core.util;\n\nimport java.util.LinkedHashSet;\nimport java.util.Set;\n\nimport org.eclipse.core.resources.IProject;\nimport org.eclipse.core.resources.IProjectDescription;\nimport org.eclipse.core.resources.IResource;\nimport org.eclipse.core.runtime.CoreException;\nimport org.eclipse.core.runtime.IProgressMonitor;\nimport org.springsource.ide.eclipse.commons.internal.core.CorePlugin;\n\n/**\n * @author Kris De Volder\n */\npublic class NatureUtils {\n\n\t/**\n\t * Make sure a project has a number of required natures. If the natures are not yet present, add them now.\n\t * @throws CoreException\n\t */\n<fim_suffix>\tpublic static void ensure(IProject project, IProgressMonitor mon, String... reqNatures) throws CoreException {\n\t\tIProjectDescription desc = project.getDescription();\n\t\tString[] oldNaturesArr = desc.getNatureIds();\n\t\tSet<String> natures = new LinkedHashSet<String>();\n\t\tfor (String n : reqNatures) {\n\t\t\tnatures.add(n);\n\t\t}\n\t\tfor (String n : oldNaturesArr) {\n\t\t\tnatures.add(n);\n\t\t}\n\t\tif (natures.size()>oldNaturesArr.length) {\n\t\t\t//Some natures got added\n\t\t\tdesc.setNatureIds(natures.toArray(new String[natures.size()]));\n\t\t\tproject.setDescription(desc, mon);\n\t\t} else {\n\t\t\t//No new natures added, but need to set it to force desired ordering\n\t\t\tdesc.setNatureIds(natures.toArray(new String[natures.size()]));\n\t\t\tproject.setDescription(desc, IResource.AVOID_NATURE_CONFIG, mon);\n\t\t}\n\t}\n\n\t/**\n\t * Removes a nature from a project. This does nothing if the project doesn't have the nature.\n\t */\n\tpublic static void remove(IProject project, String natureId, IProgressMonitor mon) throws CoreException {\n\t\tIProjectDescription desc = project.getDescription();\n\t\tString[] oldNaturesArr = desc.getNatureIds();\n\t\tSet<String> natures = new LinkedHashSet<String>();\n\t\tfor (String n : oldNaturesArr) {\n\t\t\tif (!n.equals(natureId)) {\n\t\t\t\tnatures.add(n);\n\t\t\t}\n\t\t}\n\t\tif (natures.size()!=oldNaturesArr.length) {\n\t\t\t//Something removed\n\t\t\tdesc.setNatureIds(natures.toArray(new String[natures.size()]));\n\t\t\tproject.setDescription(desc, mon);\n\t\t}\n\n\t}\n\n\tpublic static boolean hasNature(IProject p, String natureId) {\n\t\ttry {\n\t\t\treturn p!=null && p.isAccessible() && p.hasNature(natureId);\n\t\t} catch (CoreException e) {\n\t\t\tCorePlugin.log(e);\n\t\t}\n\t\treturn false;\n\t}\n\n\n}<fim_middle>// function below has no smell\n"}