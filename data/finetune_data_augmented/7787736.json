{"text": "<fim_prefix>/*\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.apache.wicket.extensions.markup.html.repeater.data.table;\n\n\nimport org.apache.wicket.util.io.IClusterable;\nimport org.apache.wicket.markup.html.basic.Label;\nimport org.apache.wicket.markup.html.navigation.paging.IPageableItems;\nimport org.apache.wicket.model.Model;\nimport org.apache.wicket.model.StringResourceModel;\n\n\n/**\n * Label that provides Showing x to y of z message given for a DataTable. The message can be\n * overridden using the <code>NavigatorLabel</code> property key, the default message is used is of\n * the format <code>Showing ${from} to ${to} of ${of}</code>. The message can also be configured\n * pragmatically by setting it as the model object of the label.\n * \n * @author Igor Vaynberg (ivaynberg)\n * \n */\npublic class NavigatorLabel extends Label\n{\n\tprivate static final long serialVersionUID = 1L;\n\n\t/**\n\t * Construct.\n\t * \n\t * @param id\n\t * @param pageable\n\t */\n\tpublic NavigatorLabel(final String id, final IPageableItems pageable)\n\t{\n\t\tsuper(id);\n\t\tsetDefaultModel(new StringResourceModel(\"NavigatorLabel\", this,\n\t\t\tnew Model<>(new LabelModelObject(pageable))));\n\t}\n\n\tprivate static class LabelModelObject implements IClusterable\n\t{\n\t\tprivate static final long serialVersionUID = 1L;\n\t\tprivate final IPageableItems pageable;\n\n\t\t/**\n\t\t * Construct.\n\t\t * \n\t\t * @param table\n\t\t */\n\t\tpublic LabelModelObject(final IPageableItems table)\n\t\t{\n\t\t\tpageable = table;\n\t\t}\n\n\t\t/**\n\t\t * @return \"z\" in \"Showing x to y of z\"\n\t\t */\n\t\tpublic long getOf()\n\t\t{\n\t\t\treturn pageable.getItemCount();\n\t\t}\n\n\t\t/**\n\t\t * @return \"x\" in \"Showing x to y of z\"\n\t\t */\n\t\tpublic long getFrom()\n\t\t{\n\t\t\tif (getOf() == 0)\n\t\t\t{\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\treturn pageable.getCurrentPage() * pageable.getItemsPerPage() + 1;\n\t\t}\n\n\t\t/**\n\t\t * @return \"y\" in \"Showing x to y of z\"\n\t\t */\n<fim_suffix>\t\tpublic long getTo()\n\t\t{\n\t\t\tif (getOf() == 0)\n\t\t\t{\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\treturn Math.min(getOf(), getFrom() + pageable.getItemsPerPage() - 1);\n\t\t}\n\t}\n}<fim_middle>// function below has no smell\n"}