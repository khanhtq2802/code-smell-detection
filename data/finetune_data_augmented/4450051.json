{"text": "<fim_prefix>        result = result && (getNumericPrecision()\n            == other.getNumericPrecision());\n      }\n      result = result && (hasNumericPrecisionRadix() == other.hasNumericPrecisionRadix());\n      if (hasNumericPrecisionRadix()) {\n        result = result && (getNumericPrecisionRadix()\n            == other.getNumericPrecisionRadix());\n      }\n      result = result && (hasNumericScale() == other.hasNumericScale());\n      if (hasNumericScale()) {\n        result = result && (getNumericScale()\n            == other.getNumericScale());\n      }\n      result = result && (hasDateTimePrecision() == other.hasDateTimePrecision());\n      if (hasDateTimePrecision()) {\n        result = result && (getDateTimePrecision()\n            == other.getDateTimePrecision());\n      }\n      result = result && (hasIntervalType() == other.hasIntervalType());\n      if (hasIntervalType()) {\n        result = result && getIntervalType()\n            .equals(other.getIntervalType());\n      }\n      result = result && (hasIntervalPrecision() == other.hasIntervalPrecision());\n      if (hasIntervalPrecision()) {\n        result = result && (getIntervalPrecision()\n            == other.getIntervalPrecision());\n      }\n      result = result && (hasColumnSize() == other.hasColumnSize());\n      if (hasColumnSize()) {\n        result = result && (getColumnSize()\n            == other.getColumnSize());\n      }\n      result = result && unknownFields.equals(other.unknownFields);\n      return result;\n    }\n    @java.lang.Override\n    public int hashCode() {\n      if (memoizedHashCode != 0) {\n        return memoizedHashCode;\n      }\n      int hash = 41;\n      hash = (19 * hash) + getDescriptor().hashCode();\n      if (hasCatalogName()) {\n        hash = (37 * hash) + CATALOG_NAME_FIELD_NUMBER;\n        hash = (53 * hash) + getCatalogName().hashCode();\n      }\n      if (hasSchemaName()) {\n        hash = (37 * hash) + SCHEMA_NAME_FIELD_NUMBER;\n        hash = (53 * hash) + getSchemaName().hashCode();\n      }\n      if (hasTableName()) {\n        hash = (37 * hash) + TABLE_NAME_FIELD_NUMBER;\n        hash = (53 * hash) + getTableName().hashCode();\n      }\n      if (hasColumnName()) {\n        hash = (37 * hash) + COLUMN_NAME_FIELD_NUMBER;\n        hash = (53 * hash) + getColumnName().hashCode();\n      }\n      if (hasOrdinalPosition()) {\n        hash = (37 * hash) + ORDINAL_POSITION_FIELD_NUMBER;\n        hash = (53 * hash) + getOrdinalPosition();\n      }\n      if (hasDefaultValue()) {\n        hash = (37 * hash) + DEFAULT_VALUE_FIELD_NUMBER;\n        hash = (53 * hash) + getDefaultValue().hashCode();\n      }\n      if (hasIsNullable()) {\n        hash = (37 * hash) + IS_NULLABLE_FIELD_NUMBER;\n        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(\n            getIsNullable());\n      }\n      if (hasDataType()) {\n        hash = (37 * hash) + DATA_TYPE_FIELD_NUMBER;\n        hash = (53 * hash) + getDataType().hashCode();\n      }\n      if (hasCharMaxLength()) {\n        hash = (37 * hash) + CHAR_MAX_LENGTH_FIELD_NUMBER;\n        hash = (53 * hash) + getCharMaxLength();\n      }\n      if (hasCharOctetLength()) {\n        hash = (37 * hash) + CHAR_OCTET_LENGTH_FIELD_NUMBER;\n        hash = (53 * hash) + getCharOctetLength();\n      }\n      if (hasNumericPrecision()) {\n        hash = (37 * hash) + NUMERIC_PRECISION_FIELD_NUMBER;\n        hash = (53 * hash) + getNumericPrecision();\n      }\n      if (hasNumericPrecisionRadix()) {\n        hash = (37 * hash) + NUMERIC_PRECISION_RADIX_FIELD_NUMBER;\n        hash = (53 * hash) + getNumericPrecisionRadix();\n      }\n      if (hasNumericScale()) {\n        hash = (37 * hash) + NUMERIC_SCALE_FIELD_NUMBER;\n        hash = (53 * hash) + getNumericScale();\n      }\n      if (hasDateTimePrecision()) {\n        hash = (37 * hash) + DATE_TIME_PRECISION_FIELD_NUMBER;\n        hash = (53 * hash) + getDateTimePrecision();\n      }\n      if (hasIntervalType()) {\n        hash = (37 * hash) + INTERVAL_TYPE_FIELD_NUMBER;\n        hash = (53 * hash) + getIntervalType().hashCode();\n      }\n      if (hasIntervalPrecision()) {\n        hash = (37 * hash) + INTERVAL_PRECISION_FIELD_NUMBER;\n        hash = (53 * hash) + getIntervalPrecision();\n      }\n      if (hasColumnSize()) {\n        hash = (37 * hash) + COLUMN_SIZE_FIELD_NUMBER;\n        hash = (53 * hash) + getColumnSize();\n      }\n      hash = (29 * hash) + unknownFields.hashCode();\n      memoizedHashCode = hash;\n      return hash;\n    }\n    public static org.apache.drill.exec.proto.UserProtos.ColumnMetadata parseFrom(\n        java.nio.ByteBuffer data)\n        throws com.google.protobuf.InvalidProtocolBufferException {\n      return PARSER.parseFrom(data);\n    }\n    public static org.apache.drill.exec.proto.UserProtos.ColumnMetadata parseFrom(\n        java.nio.ByteBuffer data,\n        com.google.protobuf.ExtensionRegistryLite extensionRegistry)\n        throws com.google.protobuf.InvalidProtocolBufferException {\n      return PARSER.parseFrom(data, extensionRegistry);\n    }\n    public static org.apache.drill.exec.proto.UserProtos.ColumnMetadata parseFrom(\n        com.google.protobuf.ByteString data)\n        throws com.google.protobuf.InvalidProtocolBufferException {\n      return PARSER.parseFrom(data);\n    }\n    public static org.apache.drill.exec.proto.UserProtos.ColumnMetadata parseFrom(\n        com.google.protobuf.ByteString data,\n        com.google.protobuf.ExtensionRegistryLite extensionRegistry)\n        throws com.google.protobuf.InvalidProtocolBufferException {\n      return PARSER.parseFrom(data, extensionRegistry);\n    }\n    public static org.apache.drill.exec.proto.UserProtos.ColumnMetadata parseFrom(byte[] data)\n        throws com.google.protobuf.InvalidProtocolBufferException {\n      return PARSER.parseFrom(data);\n    }\n    public static org.apache.drill.exec.proto.UserProtos.ColumnMetadata parseFrom(\n        byte[] data,\n        com.google.protobuf.ExtensionRegistryLite extensionRegistry)\n        throws com.google.protobuf.InvalidProtocolBufferException {\n      return PARSER.parseFrom(data, extensionRegistry);\n    }\n    public static org.apache.drill.exec.proto.UserProtos.ColumnMetadata parseFrom(java.io.InputStream input)\n        throws java.io.IOException {\n      return com.google.protobuf.GeneratedMessageV3\n          .parseWithIOException(PARSER, input);\n    }\n    public static org.apache.drill.exec.proto.UserProtos.ColumnMetadata parseFrom(\n        java.io.InputStream input,\n        com.google.protobuf.ExtensionRegistryLite extensionRegistry)\n        throws java.io.IOException {\n      return com.google.protobuf.GeneratedMessageV3\n          .parseWithIOException(PARSER, input, extensionRegistry);\n    }\n    public static org.apache.drill.exec.proto.UserProtos.ColumnMetadata parseDelimitedFrom(java.io.InputStream input)\n        throws java.io.IOException {\n      return com.google.protobuf.GeneratedMessageV3\n          .parseDelimitedWithIOException(PARSER, input);\n    }\n    public static org.apache.drill.exec.proto.UserProtos.ColumnMetadata parseDelimitedFrom(\n        java.io.InputStream input,\n        com.google.protobuf.ExtensionRegistryLite extensionRegistry)\n        throws java.io.IOException {\n      return com.google.protobuf.GeneratedMessageV3\n          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);\n    }\n    public static org.apache.drill.exec.proto.UserProtos.ColumnMetadata parseFrom(\n        com.google.protobuf.CodedInputStream input)\n        throws java.io.IOException {\n      return com.google.protobuf.GeneratedMessageV3\n          .parseWithIOException(PARSER, input);\n    }\n    public static org.apache.drill.exec.proto.UserProtos.ColumnMetadata parseFrom(\n        com.google.protobuf.CodedInputStream input,\n        com.google.protobuf.ExtensionRegistryLite extensionRegistry)\n        throws java.io.IOException {\n      return com.google.protobuf.GeneratedMessageV3\n          .parseWithIOException(PARSER, input, extensionRegistry);\n    }\n    @java.lang.Override\n    public Builder newBuilderForType() { return newBuilder(); }\n    public static Builder newBuilder() {\n      return DEFAULT_INSTANCE.toBuilder();\n    }\n    public static Builder newBuilder(org.apache.drill.exec.proto.UserProtos.ColumnMetadata prototype) {\n      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);\n    }\n    @java.lang.Override\n    public Builder toBuilder() {\n      return this == DEFAULT_INSTANCE\n          ? new Builder() : new Builder().mergeFrom(this);\n    }\n<fim_suffix>    @java.lang.Override\n    protected Builder newBuilderForType(\n        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {\n      Builder builder = new Builder(parent);\n      return builder;\n    }<fim_middle>// function below has no smell\n"}