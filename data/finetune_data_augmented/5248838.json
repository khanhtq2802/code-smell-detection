{"text": "<fim_prefix>/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage org.apache.oozie.command.coord;\n\nimport java.util.List;\nimport java.util.Map;\n\nimport org.apache.oozie.CoordinatorJobInfo;\nimport org.apache.oozie.ErrorCode;\nimport org.apache.oozie.XException;\nimport org.apache.oozie.command.CommandException;\nimport org.apache.oozie.command.PreconditionException;\nimport org.apache.oozie.executor.jpa.CoordJobInfoGetJPAExecutor;\nimport org.apache.oozie.service.JPAService;\nimport org.apache.oozie.service.Services;\n\n/**\n * The command to get a job info for a list of coordinator jobs by given filters.\n */\n<fim_suffix>public class CoordJobsXCommand extends CoordinatorXCommand<CoordinatorJobInfo> {\n    private Map<String, List<String>> filter;\n    private int start = 1;\n    private int len = 50;\n\n    public CoordJobsXCommand(Map<String, List<String>> filter, int start, int length) {\n        super(\"coord.job.info\", \"coord.job.info\", 1);\n        this.filter = filter;\n        this.start = start;\n        this.len = length;\n    }\n\n    @Override\n    protected boolean isLockRequired() {\n        return false;\n    }\n\n    @Override\n    public String getEntityKey() {\n        return null;\n    }\n\n    @Override\n    protected void loadState() throws CommandException {\n    }\n\n    @Override\n    protected void verifyPrecondition() throws CommandException, PreconditionException {\n    }\n\n    @Override\n    protected CoordinatorJobInfo execute() throws CommandException {\n        try {\n            JPAService jpaService = Services.get().get(JPAService.class);\n            CoordinatorJobInfo coordInfo = null;\n            if (jpaService != null) {\n                coordInfo = jpaService.execute(new CoordJobInfoGetJPAExecutor(filter, start, len));\n            }\n            else {\n                LOG.error(ErrorCode.E0610);\n            }\n            return coordInfo;\n        }\n        catch (XException ex) {\n            throw new CommandException(ex);\n        }\n    }\n\n}<fim_middle>// class below has no smell\n"}