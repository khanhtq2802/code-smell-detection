{"text": "<fim_prefix>/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\npackage org.apache.myfaces.tobago.internal.util;\n\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\n\nimport javax.servlet.http.Cookie;\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\nimport java.lang.invoke.MethodHandles;\n\n<fim_suffix>public class CookieUtils {\n\n  private static final Logger LOG = LoggerFactory.getLogger(MethodHandles.lookup().lookupClass());\n\n  private static final String THEME_PARAMETER = \"tobago.theme\";\n\n  private static final int ONE_YEAR_IN_SECONDS = 365 * 24 * 60 * 60;\n\n  private CookieUtils() {\n  }\n\n  public static String getThemeNameFromCookie(final HttpServletRequest request) {\n    String themeName = null;\n    final Cookie[] cookies = request.getCookies();\n    if (cookies != null) {\n      for (final Cookie cookie : cookies) {\n        if (LOG.isDebugEnabled()) {\n          LOG.debug(\"cookie name  ='{}'\", cookie.getName());\n          LOG.debug(\"cookie value ='{}'\", cookie.getValue());\n          LOG.debug(\"cookie path  ='{}'\", cookie.getPath());\n        }\n        if (THEME_PARAMETER.equals(cookie.getName())) {\n          themeName = cookie.getValue();\n          if (LOG.isDebugEnabled()) {\n            LOG.debug(\"theme from cookie {}='{}'\", THEME_PARAMETER, themeName);\n          }\n          break;\n        }\n      }\n    }\n    return themeName;\n  }\n\n  public static void setThemeNameToCookie(\n      final HttpServletRequest request, final HttpServletResponse response, final String themeName) {\n\n    String path = request.getContextPath();\n    path = StringUtils.isBlank(path) ? \"/\" : path;\n    boolean found = false;\n    final Cookie[] cookies = request.getCookies();\n    if (cookies != null) {\n      for (final Cookie cookie : cookies) {\n        if (THEME_PARAMETER.equals(cookie.getName())) {\n          if (found) {\n            if (LOG.isDebugEnabled()) {\n              LOG.debug(\"Found more than one cookie {}, try to remove them...\", THEME_PARAMETER);\n            }\n            cookie.setMaxAge(0);\n          } else {\n            found = true;\n            if (StringUtils.notEquals(cookie.getValue(), themeName)) {\n              if (LOG.isDebugEnabled()) {\n                LOG.debug(\"update theme {} -> {}\", cookie.getValue(), themeName);\n              }\n              cookie.setValue(themeName);\n            }\n            if (StringUtils.notEquals(cookie.getPath(), path)) {\n              if (LOG.isDebugEnabled()) {\n                LOG.debug(\"update path  {} -> {}\", cookie.getPath(), path);\n              }\n              cookie.setPath(path);\n            }\n            cookie.setMaxAge(ONE_YEAR_IN_SECONDS);\n          }\n          response.addCookie(cookie);\n        }\n      }\n    }\n    if (!found) {\n      final Cookie cookie = new Cookie(THEME_PARAMETER, themeName);\n      cookie.setPath(path);\n      cookie.setMaxAge(ONE_YEAR_IN_SECONDS);\n      response.addCookie(cookie);\n    }\n  }\n\n  public static void removeThemeNameCookie(\n      final HttpServletRequest request, final HttpServletResponse response) {\n\n    String path = request.getContextPath();\n    path = StringUtils.isBlank(path) ? \"/\" : path;\n    final Cookie[] cookies = request.getCookies();\n    if (cookies != null) {\n      for (final Cookie cookie : cookies) {\n        if (THEME_PARAMETER.equals(cookie.getName())) {\n          cookie.setMaxAge(0);\n          cookie.setValue(null);\n          response.addCookie(cookie);\n        }\n      }\n    }\n  }\n}<fim_middle>// class below has no smell\n"}