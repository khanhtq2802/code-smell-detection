{"text": "<fim_prefix>               before(grammarAccess.getFunctionTypeExpressionOLDAccess().getFunctionKeyword_3()); \n            }\n            match(input,Function,FOLLOW_2); if (state.failed) return ;\n            if ( state.backtracking==0 ) {\n               after(grammarAccess.getFunctionTypeExpressionOLDAccess().getFunctionKeyword_3()); \n            }\n            }\n            }\n        }\n        catch (RecognitionException re) {\n            reportError(re);\n            recover(input,re);\n        }\n        finally {\n            \trestoreStackSize(stackSize);\n        }\n        return ;\n    }\n    public final void rule__FunctionTypeExpressionOLD__Group__4() throws RecognitionException {\n        \t\tint stackSize = keepStackSize();\n        try {\n            {\n            pushFollow(FOLLOW_112);\n            rule__FunctionTypeExpressionOLD__Group__4__Impl();\n            state._fsp--;\n            if (state.failed) return ;\n            pushFollow(FOLLOW_2);\n            rule__FunctionTypeExpressionOLD__Group__5();\n            state._fsp--;\n            if (state.failed) return ;\n            }\n        }\n        catch (RecognitionException re) {\n            reportError(re);\n            recover(input,re);\n        }\n        finally {\n            \trestoreStackSize(stackSize);\n        }\n        return ;\n    }\n    public final void rule__FunctionTypeExpressionOLD__Group__4__Impl() throws RecognitionException {\n        \t\tint stackSize = keepStackSize();\n        try {\n            {\n            {\n            if ( state.backtracking==0 ) {\n               before(grammarAccess.getFunctionTypeExpressionOLDAccess().getGroup_4()); \n            }\n            int alt613=2;\n            int LA613_0 = input.LA(1);\n            if ( (LA613_0==LessThanSign) ) {\n                alt613=1;\n            }\n            switch (alt613) {\n                case 1 :\n                    {\n                    pushFollow(FOLLOW_2);\n                    rule__FunctionTypeExpressionOLD__Group_4__0();\n                    state._fsp--;\n                    if (state.failed) return ;\n                    }\n                    break;\n            }\n            if ( state.backtracking==0 ) {\n               after(grammarAccess.getFunctionTypeExpressionOLDAccess().getGroup_4()); \n            }\n            }\n            }\n        }\n        catch (RecognitionException re) {\n            reportError(re);\n            recover(input,re);\n        }\n        finally {\n            \trestoreStackSize(stackSize);\n        }\n        return ;\n    }\n    public final void rule__FunctionTypeExpressionOLD__Group__5() throws RecognitionException {\n        \t\tint stackSize = keepStackSize();\n        try {\n            {\n            pushFollow(FOLLOW_188);\n            rule__FunctionTypeExpressionOLD__Group__5__Impl();\n            state._fsp--;\n            if (state.failed) return ;\n            pushFollow(FOLLOW_2);\n            rule__FunctionTypeExpressionOLD__Group__6();\n            state._fsp--;\n            if (state.failed) return ;\n            }\n        }\n        catch (RecognitionException re) {\n            reportError(re);\n            recover(input,re);\n        }\n        finally {\n            \trestoreStackSize(stackSize);\n        }\n        return ;\n    }\n    public final void rule__FunctionTypeExpressionOLD__Group__5__Impl() throws RecognitionException {\n        \t\tint stackSize = keepStackSize();\n        try {\n            {\n            {\n            if ( state.backtracking==0 ) {\n               before(grammarAccess.getFunctionTypeExpressionOLDAccess().getLeftParenthesisKeyword_5()); \n            }\n            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;\n            if ( state.backtracking==0 ) {\n               after(grammarAccess.getFunctionTypeExpressionOLDAccess().getLeftParenthesisKeyword_5()); \n            }\n            }\n            }\n        }\n        catch (RecognitionException re) {\n            reportError(re);\n            recover(input,re);\n        }\n        finally {\n            \trestoreStackSize(stackSize);\n        }\n        return ;\n    }\n    public final void rule__FunctionTypeExpressionOLD__Group__6() throws RecognitionException {\n        \t\tint stackSize = keepStackSize();\n        try {\n            {\n            pushFollow(FOLLOW_63);\n            rule__FunctionTypeExpressionOLD__Group__6__Impl();\n            state._fsp--;\n            if (state.failed) return ;\n            pushFollow(FOLLOW_2);\n            rule__FunctionTypeExpressionOLD__Group__7();\n            state._fsp--;\n            if (state.failed) return ;\n            }\n        }\n        catch (RecognitionException re) {\n            reportError(re);\n            recover(input,re);\n        }\n        finally {\n            \trestoreStackSize(stackSize);\n        }\n        return ;\n    }\n    public final void rule__FunctionTypeExpressionOLD__Group__6__Impl() throws RecognitionException {\n        \t\tint stackSize = keepStackSize();\n        try {\n            {\n            {\n            if ( state.backtracking==0 ) {\n               before(grammarAccess.getFunctionTypeExpressionOLDAccess().getTAnonymousFormalParameterListParserRuleCall_6()); \n            }\n            pushFollow(FOLLOW_2);\n            ruleTAnonymousFormalParameterList();\n            state._fsp--;\n            if (state.failed) return ;\n            if ( state.backtracking==0 ) {\n               after(grammarAccess.getFunctionTypeExpressionOLDAccess().getTAnonymousFormalParameterListParserRuleCall_6()); \n            }\n            }\n            }\n        }\n        catch (RecognitionException re) {\n            reportError(re);\n            recover(input,re);\n        }\n        finally {\n            \trestoreStackSize(stackSize);\n        }\n        return ;\n    }\n    public final void rule__FunctionTypeExpressionOLD__Group__7() throws RecognitionException {\n        \t\tint stackSize = keepStackSize();\n        try {\n            {\n            pushFollow(FOLLOW_189);\n            rule__FunctionTypeExpressionOLD__Group__7__Impl();\n            state._fsp--;\n            if (state.failed) return ;\n            pushFollow(FOLLOW_2);\n            rule__FunctionTypeExpressionOLD__Group__8();\n            state._fsp--;\n            if (state.failed) return ;\n            }\n        }\n        catch (RecognitionException re) {\n            reportError(re);\n            recover(input,re);\n        }\n        finally {\n            \trestoreStackSize(stackSize);\n        }\n        return ;\n    }\n    public final void rule__FunctionTypeExpressionOLD__Group__7__Impl() throws RecognitionException {\n        \t\tint stackSize = keepStackSize();\n        try {\n            {\n            {\n            if ( state.backtracking==0 ) {\n               before(grammarAccess.getFunctionTypeExpressionOLDAccess().getRightParenthesisKeyword_7()); \n            }\n            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;\n            if ( state.backtracking==0 ) {\n               after(grammarAccess.getFunctionTypeExpressionOLDAccess().getRightParenthesisKeyword_7()); \n            }\n            }\n            }\n        }\n        catch (RecognitionException re) {\n            reportError(re);\n            recover(input,re);\n        }\n        finally {\n            \trestoreStackSize(stackSize);\n        }\n        return ;\n    }\n    public final void rule__FunctionTypeExpressionOLD__Group__8() throws RecognitionException {\n        \t\tint stackSize = keepStackSize();\n        try {\n            {\n            pushFollow(FOLLOW_189);\n            rule__FunctionTypeExpressionOLD__Group__8__Impl();\n            state._fsp--;\n            if (state.failed) return ;\n            pushFollow(FOLLOW_2);\n            rule__FunctionTypeExpressionOLD__Group__9();\n            state._fsp--;\n            if (state.failed) return ;\n            }\n        }\n        catch (RecognitionException re) {\n            reportError(re);\n            recover(input,re);\n        }\n        finally {\n            \trestoreStackSize(stackSize);\n        }\n        return ;\n    }\n    public final void rule__FunctionTypeExpressionOLD__Group__8__Impl() throws RecognitionException {\n        \t\tint stackSize = keepStackSize();\n        try {\n            {\n            {\n            if ( state.backtracking==0 ) {\n               before(grammarAccess.getFunctionTypeExpressionOLDAccess().getColonSepReturnTypeRefParserRuleCall_8()); \n            }\n            int alt614=2;\n            int LA614_0 = input.LA(1);\n            if ( (LA614_0==Colon) ) {\n                alt614=1;\n            }\n            switch (alt614) {\n                case 1 :\n                    {\n                    pushFollow(FOLLOW_2);\n                    ruleColonSepReturnTypeRef();\n                    state._fsp--;\n                    if (state.failed) return ;\n                    }\n                    break;\n            }\n            if ( state.backtracking==0 ) {\n               after(grammarAccess.getFunctionTypeExpressionOLDAccess().getColonSepReturnTypeRefParserRuleCall_8()); \n            }\n            }\n            }\n        }\n        catch (RecognitionException re) {\n            reportError(re);\n            recover(input,re);\n        }\n        finally {\n            \trestoreStackSize(stackSize);\n        }\n        return ;\n    }\n<fim_suffix>    public final void rule__FunctionTypeExpressionOLD__Group__9() throws RecognitionException {\n        \t\tint stackSize = keepStackSize();\n        try {\n            {\n            pushFollow(FOLLOW_2);\n            rule__FunctionTypeExpressionOLD__Group__9__Impl();\n            state._fsp--;\n            if (state.failed) return ;\n            }\n        }\n        catch (RecognitionException re) {\n            reportError(re);\n            recover(input,re);\n        }\n        finally {\n            \trestoreStackSize(stackSize);\n        }\n        return ;\n    }<fim_middle>// function below has no smell\n"}