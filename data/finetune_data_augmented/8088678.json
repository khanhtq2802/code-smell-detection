{"text": "<fim_prefix>/**\n * <copyright>\n * </copyright>\n *\n * $Id: AModelImpl.java,v 1.1 2010/02/04 09:24:53 sefftinge Exp $\n */\npackage org.eclipse.xtext.generator.grammarAccess.ametamodel.asubpackage.impl;\n\nimport java.util.Collection;\n\nimport org.eclipse.emf.common.notify.NotificationChain;\n\nimport org.eclipse.emf.common.util.EList;\n\nimport org.eclipse.emf.ecore.EClass;\nimport org.eclipse.emf.ecore.InternalEObject;\n\nimport org.eclipse.emf.ecore.impl.EObjectImpl;\n\nimport org.eclipse.emf.ecore.util.EObjectContainmentEList;\nimport org.eclipse.emf.ecore.util.InternalEList;\n\nimport org.eclipse.xtext.generator.grammarAccess.ametamodel.asubpackage.AModel;\nimport org.eclipse.xtext.generator.grammarAccess.ametamodel.asubpackage.AType;\nimport org.eclipse.xtext.generator.grammarAccess.ametamodel.asubpackage.AsubpackagePackage;\n\n/**\n * <!-- begin-user-doc -->\n * An implementation of the model object '<em><b>AModel</b></em>'.\n * <!-- end-user-doc -->\n * <p>\n * The following features are implemented:\n * </p>\n * <ul>\n *   <li>{@link org.eclipse.xtext.generator.grammarAccess.ametamodel.asubpackage.impl.AModelImpl#getElements <em>Elements</em>}</li>\n * </ul>\n *\n * @generated\n */\npublic class AModelImpl extends EObjectImpl implements AModel {\n\t/**\n\t * The cached value of the '{@link #getElements() <em>Elements</em>}' containment reference list.\n\t * <!-- begin-user-doc -->\n\t * <!-- end-user-doc -->\n\t * @see #getElements()\n\t * @generated\n\t * @ordered\n\t */\n\tprotected EList<AType> elements;\n\n\t/**\n\t * <!-- begin-user-doc -->\n\t * <!-- end-user-doc -->\n\t * @generated\n\t */\n\tprotected AModelImpl() {\n\t\tsuper();\n\t}\n\n\t/**\n\t * <!-- begin-user-doc -->\n\t * <!-- end-user-doc -->\n\t * @generated\n\t */\n\t@Override\n\tprotected EClass eStaticClass() {\n\t\treturn AsubpackagePackage.Literals.AMODEL;\n\t}\n\n\t/**\n\t * <!-- begin-user-doc -->\n\t * <!-- end-user-doc -->\n\t * @generated\n\t */\n\tpublic EList<AType> getElements() {\n\t\tif (elements == null) {\n\t\t\telements = new EObjectContainmentEList<AType>(AType.class, this, AsubpackagePackage.AMODEL__ELEMENTS);\n\t\t}\n\t\treturn elements;\n\t}\n\n\t/**\n\t * <!-- begin-user-doc -->\n\t * <!-- end-user-doc -->\n\t * @generated\n\t */\n\t@Override\n\tpublic NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs) {\n\t\tswitch (featureID) {\n\t\t\tcase AsubpackagePackage.AMODEL__ELEMENTS:\n\t\t\t\treturn ((InternalEList<?>)getElements()).basicRemove(otherEnd, msgs);\n\t\t}\n\t\treturn super.eInverseRemove(otherEnd, featureID, msgs);\n\t}\n\n\t/**\n\t * <!-- begin-user-doc -->\n\t * <!-- end-user-doc -->\n\t * @generated\n\t */\n\t@Override\n\tpublic Object eGet(int featureID, boolean resolve, boolean coreType) {\n\t\tswitch (featureID) {\n\t\t\tcase AsubpackagePackage.AMODEL__ELEMENTS:\n\t\t\t\treturn getElements();\n\t\t}\n\t\treturn super.eGet(featureID, resolve, coreType);\n\t}\n\n\t/**\n\t * <!-- begin-user-doc -->\n\t * <!-- end-user-doc -->\n\t * @generated\n\t */\n\t@SuppressWarnings(\"unchecked\")\n\t@Override\n\tpublic void eSet(int featureID, Object newValue) {\n\t\tswitch (featureID) {\n\t\t\tcase AsubpackagePackage.AMODEL__ELEMENTS:\n\t\t\t\tgetElements().clear();\n\t\t\t\tgetElements().addAll((Collection<? extends AType>)newValue);\n\t\t\t\treturn;\n\t\t}\n\t\tsuper.eSet(featureID, newValue);\n\t}\n\n\t/**\n\t * <!-- begin-user-doc -->\n\t * <!-- end-user-doc -->\n\t * @generated\n\t */\n\t@Override\n\tpublic void eUnset(int featureID) {\n\t\tswitch (featureID) {\n\t\t\tcase AsubpackagePackage.AMODEL__ELEMENTS:\n\t\t\t\tgetElements().clear();\n\t\t\t\treturn;\n\t\t}\n\t\tsuper.eUnset(featureID);\n\t}\n\n\t/**\n\t * <!-- begin-user-doc -->\n\t * <!-- end-user-doc -->\n\t * @generated\n\t */\n<fim_suffix>\t@Override\n\tpublic boolean eIsSet(int featureID) {\n\t\tswitch (featureID) {\n\t\t\tcase AsubpackagePackage.AMODEL__ELEMENTS:\n\t\t\t\treturn elements != null && !elements.isEmpty();\n\t\t}\n\t\treturn super.eIsSet(featureID);\n\t}\n\n} //AModelImpl<fim_middle>// function below has no smell\n"}