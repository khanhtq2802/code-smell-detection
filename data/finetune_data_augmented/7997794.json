{"text": "<fim_prefix>        EObject iv_ruleAnotherSuperMain = null;\n        try {\n            // InternalSubTestLanguage.g:129:57: (iv_ruleAnotherSuperMain= ruleAnotherSuperMain EOF )\n            // InternalSubTestLanguage.g:130:2: iv_ruleAnotherSuperMain= ruleAnotherSuperMain EOF\n            {\n             newCompositeNode(grammarAccess.getAnotherSuperMainRule()); \n            pushFollow(FollowSets000.FOLLOW_1);\n            iv_ruleAnotherSuperMain=ruleAnotherSuperMain();\n            state._fsp--;\n             current =iv_ruleAnotherSuperMain; \n            match(input,EOF,FollowSets000.FOLLOW_2); \n            }\n        }\n            catch (RecognitionException re) {\n                recover(input,re);\n                appendSkippedTokens();\n            }\n        finally {\n        }\n        return current;\n    }\n    // $ANTLR end \"entryRuleAnotherSuperMain\"\n    // $ANTLR start \"ruleAnotherSuperMain\"\n    // InternalSubTestLanguage.g:136:1: ruleAnotherSuperMain returns [EObject current=null] : (otherlv_0= 'ups' ( (lv_name_1_0= RULE_ID ) ) ) ;\n    public final EObject ruleAnotherSuperMain() throws RecognitionException {\n        EObject current = null;\n        Token otherlv_0=null;\n        Token lv_name_1_0=null;\n        \tenterRule();\n        try {\n            // InternalSubTestLanguage.g:142:2: ( (otherlv_0= 'ups' ( (lv_name_1_0= RULE_ID ) ) ) )\n            // InternalSubTestLanguage.g:143:2: (otherlv_0= 'ups' ( (lv_name_1_0= RULE_ID ) ) )\n            {\n            // InternalSubTestLanguage.g:143:2: (otherlv_0= 'ups' ( (lv_name_1_0= RULE_ID ) ) )\n            // InternalSubTestLanguage.g:144:3: otherlv_0= 'ups' ( (lv_name_1_0= RULE_ID ) )\n            {\n            otherlv_0=(Token)match(input,13,FollowSets000.FOLLOW_6); \n            \t\t\tnewLeafNode(otherlv_0, grammarAccess.getAnotherSuperMainAccess().getUpsKeyword_0());\n            // InternalSubTestLanguage.g:148:3: ( (lv_name_1_0= RULE_ID ) )\n            // InternalSubTestLanguage.g:149:4: (lv_name_1_0= RULE_ID )\n            {\n            // InternalSubTestLanguage.g:149:4: (lv_name_1_0= RULE_ID )\n            // InternalSubTestLanguage.g:150:5: lv_name_1_0= RULE_ID\n            {\n            lv_name_1_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_2); \n            \t\t\t\t\tnewLeafNode(lv_name_1_0, grammarAccess.getAnotherSuperMainAccess().getNameIDTerminalRuleCall_1_0());\n            \t\t\t\t\tif (current==null) {\n            \t\t\t\t\t\tcurrent = createModelElement(grammarAccess.getAnotherSuperMainRule());\n            \t\t\t\t\t}\n            \t\t\t\t\tsetWithLastConsumed(\n            \t\t\t\t\t\tcurrent,\n            \t\t\t\t\t\t\"name\",\n            \t\t\t\t\t\tlv_name_1_0,\n            \t\t\t\t\t\t\"org.eclipse.xtext.common.Terminals.ID\");\n            }\n            }\n            }\n            }\n            \tleaveRule();\n        }\n            catch (RecognitionException re) {\n                recover(input,re);\n                appendSkippedTokens();\n            }\n        finally {\n        }\n        return current;\n    }\n    // $ANTLR end \"ruleAnotherSuperMain\"\n    // $ANTLR start \"entryRuleSuperMain\"\n    // InternalSubTestLanguage.g:170:1: entryRuleSuperMain returns [EObject current=null] : iv_ruleSuperMain= ruleSuperMain EOF ;\n    public final EObject entryRuleSuperMain() throws RecognitionException {\n        EObject current = null;\n        EObject iv_ruleSuperMain = null;\n        try {\n            // InternalSubTestLanguage.g:170:50: (iv_ruleSuperMain= ruleSuperMain EOF )\n            // InternalSubTestLanguage.g:171:2: iv_ruleSuperMain= ruleSuperMain EOF\n            {\n             newCompositeNode(grammarAccess.getSuperMainRule()); \n            pushFollow(FollowSets000.FOLLOW_1);\n            iv_ruleSuperMain=ruleSuperMain();\n            state._fsp--;\n             current =iv_ruleSuperMain; \n            match(input,EOF,FollowSets000.FOLLOW_2); \n            }\n        }\n            catch (RecognitionException re) {\n                recover(input,re);\n                appendSkippedTokens();\n            }\n        finally {\n        }\n        return current;\n    }\n    // $ANTLR end \"entryRuleSuperMain\"\n    // $ANTLR start \"ruleSuperMain\"\n    // InternalSubTestLanguage.g:177:1: ruleSuperMain returns [EObject current=null] : (otherlv_0= 'super' ( (lv_name_1_0= RULE_ID ) ) ) ;\n    public final EObject ruleSuperMain() throws RecognitionException {\n        EObject current = null;\n        Token otherlv_0=null;\n        Token lv_name_1_0=null;\n        \tenterRule();\n        try {\n            // InternalSubTestLanguage.g:183:2: ( (otherlv_0= 'super' ( (lv_name_1_0= RULE_ID ) ) ) )\n            // InternalSubTestLanguage.g:184:2: (otherlv_0= 'super' ( (lv_name_1_0= RULE_ID ) ) )\n            {\n            // InternalSubTestLanguage.g:184:2: (otherlv_0= 'super' ( (lv_name_1_0= RULE_ID ) ) )\n            // InternalSubTestLanguage.g:185:3: otherlv_0= 'super' ( (lv_name_1_0= RULE_ID ) )\n            {\n            otherlv_0=(Token)match(input,14,FollowSets000.FOLLOW_6); \n            \t\t\tnewLeafNode(otherlv_0, grammarAccess.getSuperMainAccess().getSuperKeyword_0());\n            // InternalSubTestLanguage.g:189:3: ( (lv_name_1_0= RULE_ID ) )\n            // InternalSubTestLanguage.g:190:4: (lv_name_1_0= RULE_ID )\n            {\n            // InternalSubTestLanguage.g:190:4: (lv_name_1_0= RULE_ID )\n            // InternalSubTestLanguage.g:191:5: lv_name_1_0= RULE_ID\n            {\n            lv_name_1_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_2); \n            \t\t\t\t\tnewLeafNode(lv_name_1_0, grammarAccess.getSuperMainAccess().getNameIDTerminalRuleCall_1_0());\n            \t\t\t\t\tif (current==null) {\n            \t\t\t\t\t\tcurrent = createModelElement(grammarAccess.getSuperMainRule());\n            \t\t\t\t\t}\n            \t\t\t\t\tsetWithLastConsumed(\n            \t\t\t\t\t\tcurrent,\n            \t\t\t\t\t\t\"name\",\n            \t\t\t\t\t\tlv_name_1_0,\n            \t\t\t\t\t\t\"org.eclipse.xtext.common.Terminals.ID\");\n            }\n            }\n            }\n            }\n            \tleaveRule();\n        }\n            catch (RecognitionException re) {\n                recover(input,re);\n                appendSkippedTokens();\n            }\n        finally {\n        }\n        return current;\n    }\n    // $ANTLR end \"ruleSuperMain\"\n    // Delegated rules\n<fim_suffix>    private static class FollowSets000 {\n        public static final BitSet FOLLOW_1 = new BitSet(new long[]{0x0000000000000000L});\n        public static final BitSet FOLLOW_2 = new BitSet(new long[]{0x0000000000000002L});\n        public static final BitSet FOLLOW_3 = new BitSet(new long[]{0x0000000000004000L});\n        public static final BitSet FOLLOW_4 = new BitSet(new long[]{0x0000000000001000L});\n        public static final BitSet FOLLOW_5 = new BitSet(new long[]{0x0000000000002002L});\n        public static final BitSet FOLLOW_6 = new BitSet(new long[]{0x0000000000000010L});\n    }<fim_middle>// class below has no smell\n"}