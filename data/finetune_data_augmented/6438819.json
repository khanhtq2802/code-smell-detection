{"text": "<fim_prefix>/*\n * Copyright (c) 2019 the Eclipse Milo Authors\n *\n * This program and the accompanying materials are made\n * available under the terms of the Eclipse Public License 2.0\n * which is available at https://www.eclipse.org/legal/epl-2.0/\n *\n * SPDX-License-Identifier: EPL-2.0\n */\n\npackage org.eclipse.milo.opcua.stack.core.types.structured;\n\nimport javax.annotation.Nullable;\n\nimport com.google.common.base.MoreObjects;\nimport org.eclipse.milo.opcua.stack.core.Identifiers;\nimport org.eclipse.milo.opcua.stack.core.UaSerializationException;\nimport org.eclipse.milo.opcua.stack.core.serialization.UaDecoder;\nimport org.eclipse.milo.opcua.stack.core.serialization.UaEncoder;\nimport org.eclipse.milo.opcua.stack.core.serialization.codecs.BuiltinDataTypeCodec;\nimport org.eclipse.milo.opcua.stack.core.types.builtin.NodeId;\n\n<fim_suffix>public class EventFilter extends MonitoringFilter {\n\n    public static final NodeId TypeId = Identifiers.EventFilter;\n    public static final NodeId BinaryEncodingId = Identifiers.EventFilter_Encoding_DefaultBinary;\n    public static final NodeId XmlEncodingId = Identifiers.EventFilter_Encoding_DefaultXml;\n\n    protected final SimpleAttributeOperand[] selectClauses;\n    protected final ContentFilter whereClause;\n\n    public EventFilter() {\n        super();\n        this.selectClauses = null;\n        this.whereClause = null;\n    }\n\n    public EventFilter(SimpleAttributeOperand[] selectClauses, ContentFilter whereClause) {\n        super();\n        this.selectClauses = selectClauses;\n        this.whereClause = whereClause;\n    }\n\n    @Nullable\n    public SimpleAttributeOperand[] getSelectClauses() { return selectClauses; }\n\n    public ContentFilter getWhereClause() { return whereClause; }\n\n    @Override\n    public NodeId getTypeId() { return TypeId; }\n\n    @Override\n    public NodeId getBinaryEncodingId() { return BinaryEncodingId; }\n\n    @Override\n    public NodeId getXmlEncodingId() { return XmlEncodingId; }\n\n    @Override\n    public String toString() {\n        return MoreObjects.toStringHelper(this)\n            .add(\"SelectClauses\", selectClauses)\n            .add(\"WhereClause\", whereClause)\n            .toString();\n    }\n\n    public static class Codec extends BuiltinDataTypeCodec<EventFilter> {\n\n        @Override\n        public Class<EventFilter> getType() {\n            return EventFilter.class;\n        }\n\n        @Override\n        public EventFilter decode(UaDecoder decoder) throws UaSerializationException {\n            SimpleAttributeOperand[] selectClauses =\n                decoder.readBuiltinStructArray(\n                    \"SelectClauses\",\n                    SimpleAttributeOperand.class\n                );\n            ContentFilter whereClause = (ContentFilter) decoder.readBuiltinStruct(\"WhereClause\", ContentFilter.class);\n\n            return new EventFilter(selectClauses, whereClause);\n        }\n\n        @Override\n        public void encode(EventFilter value, UaEncoder encoder) throws UaSerializationException {\n            encoder.writeBuiltinStructArray(\n                \"SelectClauses\",\n                value.selectClauses,\n                SimpleAttributeOperand.class\n            );\n            encoder.writeBuiltinStruct(\"WhereClause\", value.whereClause, ContentFilter.class);\n        }\n    }\n\n}<fim_middle>// class below has no smell\n"}