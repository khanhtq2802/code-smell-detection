{"text": "<fim_prefix>/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\npackage org.apache.ranger.entity;\n\nimport java.io.Serializable;\n\nimport javax.persistence.Cacheable;\nimport javax.persistence.Column;\nimport javax.persistence.Entity;\nimport javax.persistence.GeneratedValue;\nimport javax.persistence.GenerationType;\nimport javax.persistence.Id;\nimport javax.persistence.SequenceGenerator;\nimport javax.persistence.Table;\nimport javax.persistence.Version;\nimport javax.xml.bind.annotation.XmlRootElement;\n\nimport org.apache.ranger.common.AppConstants;\n\n<fim_suffix>@Entity\n@Cacheable\n@Table(name=\"x_tag\")\n@XmlRootElement\npublic class XXTag extends XXDBBase implements Serializable {\n\tprivate static final long serialVersionUID = 1L;\n\n\t@Id\n\t@SequenceGenerator(name = \"X_TAG_SEQ\", sequenceName = \"X_TAG_SEQ\", allocationSize = 1)\n\t@GeneratedValue(strategy = GenerationType.AUTO, generator = \"X_TAG_SEQ\")\n\t@Column(name = \"id\")\n\tprotected Long id;\n\n\t@Column(name = \"guid\", unique = true, nullable = false, length = 512)\n\tprotected String guid;\n\n\t@Version\n\t@Column(name = \"version\")\n\tprotected Long version;\n\n\t@Column(name = \"type\")\n\tprotected Long type;\n\n\t@Column(name = \"owned_by\")\n\tprotected Short owner;\n\n\t@Column(name = \"policy_options\")\n\tprotected String options;\n\n\t@Column(name = \"tag_attrs_text\")\n\tprotected String tagAttrs;\n\n\t@Override\n\tpublic void setId(Long id) {\n\t\tthis.id = id;\n\t}\n\n\t@Override\n\tpublic Long getId() {\n\t\treturn id;\n\t}\n\n\t/**\n\t * @return the guid\n\t */\n\tpublic String getGuid() {\n\t\treturn guid;\n\t}\n\n\t/**\n\t * @param guid\n\t *            the guid to set\n\t */\n\tpublic void setGuid(String guid) {\n\t\tthis.guid = guid;\n\t}\n\n\t/**\n\t * @return the version\n\t */\n\tpublic Long getVersion() {\n\t\treturn version;\n\t}\n\n\t/**\n\t * @param version\n\t *            the version to set\n\t */\n\tpublic void setVersion(Long version) {\n\t\tthis.version = version;\n\t}\n\n\t/**\n\t * @return the type\n\t */\n\tpublic Long getType() {\n\t\treturn type;\n\t}\n\n\t/**\n\t * @param type\n\t *            the type to set\n\t */\n\tpublic void setType(Long type) {\n\t\tthis.type = type;\n\t}\n\n\tpublic Short getOwner() { return owner; }\n\tpublic void setOwner(Short owner) { this.owner = owner; }\n\n\tpublic void setOptions(String options) {\n\t\tthis.options = options;\n\t}\n\n\tpublic String getOptions() {\n\t\treturn this.options;\n\t}\n\n\tpublic String getTagAttrs() { return tagAttrs; }\n\n\tpublic void setTagAttrs(String tagAttrs) { this.tagAttrs = tagAttrs; }\n\n    @Override\n\tpublic int getMyClassType() {\n\t\treturn AppConstants.CLASS_TYPE_XA_TAG;\n\t}\n\n\t/*\n\t * (non-Javadoc)\n\t *\n\t * @see java.lang.Object#hashCode()\n\t */\n\t@Override\n\tpublic int hashCode() {\n\t\tfinal int prime = 31;\n\t\tint result = 1;\n\t\tresult = prime * result + ((version == null) ? 0 : version.hashCode());\n\t\tresult = prime * result + ((guid == null) ? 0 : guid.hashCode());\n\t\tresult = prime * result + ((id == null) ? 0 : id.hashCode());\n\t\tresult = prime * result + ((type == null) ? 0 : type.hashCode());\n\t\tresult = prime * result + ((owner == null) ? 0 : owner.hashCode());\n\t\tresult = prime * result + ((options == null) ? 0 : options.hashCode());\n\t\tresult = prime * result + ((tagAttrs == null) ? 0 : tagAttrs.hashCode());\n\t\treturn result;\n\t}\n\n\t/*\n\t * (non-Javadoc)\n\t *\n\t * @see java.lang.Object#equals(java.lang.Object)\n\t */\n\t@Override\n\tpublic boolean equals(Object obj) {\n\t\tif (this == obj)\n\t\t\treturn true;\n\t\tif (!super.equals(obj))\n\t\t\treturn false;\n\t\tif (getClass() != obj.getClass())\n\t\t\treturn false;\n\t\tXXTag other = (XXTag) obj;\n\t\tif (version == null) {\n\t\t\tif (other.version != null)\n\t\t\t\treturn false;\n\t\t} else if (!version.equals(other.version))\n\t\t\treturn false;\n\t\tif (guid == null) {\n\t\t\tif (other.guid != null)\n\t\t\t\treturn false;\n\t\t} else if (!guid.equals(other.guid))\n\t\t\treturn false;\n\t\tif (id == null) {\n\t\t\tif (other.id != null)\n\t\t\t\treturn false;\n\t\t} else if (!id.equals(other.id))\n\t\t\treturn false;\n\t\tif (type == null) {\n\t\t\tif (other.type != null)\n\t\t\t\treturn false;\n\t\t} else if (!type.equals(other.type))\n\t\t\treturn false;\n\t\tif (owner == null) {\n\t\t\tif (other.owner != null)\n\t\t\t\treturn false;\n\t\t} else if (!owner.equals(other.owner))\n\t\t\treturn false;\n\t\tif (options == null) {\n\t\t\tif (other.options != null)\n\t\t\t\treturn false;\n\t\t} else if (!options.equals(other.options))\n\n\t\tif (tagAttrs == null) {\n\t\t\tif (other.tagAttrs != null)\n\t\t\t\treturn false;\n\t\t} else if (!tagAttrs.equals(other.tagAttrs))\n\t\t\treturn false;\n\t\treturn true;\n\t}\n\n\t/*\n\t * (non-Javadoc)\n\t *\n\t * @see java.lang.Object#toString()\n\t */\n\t@Override\n\tpublic String toString() {\n\t\tStringBuilder sb = new StringBuilder();\n\t\ttoString(sb);\n\t\treturn sb.toString();\n\t}\n\n\tpublic StringBuilder toString(StringBuilder sb) {\n\t\tsb.append(\"{ \");\n\t\tsb.append(super.toString() + \"} \");\n\t\tsb.append(\"id={\").append(id).append(\"} \");\n\t\tsb.append(\"guid={\").append(guid).append(\"} \");\n\t\tsb.append(\"type={\").append(type).append(\"} \");\n\t\tsb.append(\"owned_by={\").append(owner).append(\"} \");\n\t\tsb.append(\"options={\").append(options).append(\"} \");\n\t\tsb.append(\"tagAttrs={\").append(tagAttrs).append(\"} \");\n\t\tsb.append(\" }\");\n\n\t\treturn sb;\n\t}\n\n}<fim_middle>// class below has no smell\n"}