{"text": "<fim_prefix>\n<fim_suffix>public class FilenetConnector extends org.apache.manifoldcf.crawler.connectors.BaseRepositoryConnector\n{\n  public static final String _rcsid = \"@(#)$Id: FilenetConnector.java 996524 2010-09-13 13:38:01Z kwright $\";\n  // Parameters\n  public static final String CONFIG_PARAM_USERID = \"User ID\";\n  public static final String CONFIG_PARAM_PASSWORD = \"Password\";\n  public static final String CONFIG_PARAM_FILENETDOMAIN_OLD = \"Filenet domain\";\n  public static final String CONFIG_PARAM_FILENETDOMAIN = \"FileNet domain\";\n  public static final String CONFIG_PARAM_OBJECTSTORE = \"Object store\";\n  public static final String CONFIG_PARAM_SERVERPROTOCOL = \"Server protocol\";\n  public static final String CONFIG_PARAM_SERVERHOSTNAME = \"Server hostname\";\n  public static final String CONFIG_PARAM_SERVERPORT = \"Server port\";\n  public static final String CONFIG_PARAM_SERVERWSILOCATION = \"Server WebServices location\";\n  public static final String CONFIG_PARAM_URLPROTOCOL = \"Document URL protocol\";\n  public static final String CONFIG_PARAM_URLHOSTNAME = \"Document URL hostname\";\n  public static final String CONFIG_PARAM_URLPORT = \"Document URL port\";\n  public static final String CONFIG_PARAM_URLLOCATION = \"Document URL location\";\n  // Specification nodes\n  public static final String SPEC_NODE_FOLDER = \"folder\";\n  public static final String SPEC_NODE_MIMETYPE = \"mimetype\";\n  public static final String SPEC_NODE_DOCUMENTCLASS = \"documentclass\";\n  // This specification node is only ever a child of SPEC_NODE_DOCUMENTCLASS\n  public static final String SPEC_NODE_METADATAFIELD = \"metafield\";\n  // This specification node is only ever a child of SPEC_NODE_DOCUMENTCLASS\n  public static final String SPEC_NODE_MATCH = \"match\";\n  // Specification attributes\n  public static final String SPEC_ATTRIBUTE_VALUE = \"value\";\n  public static final String SPEC_ATTRIBUTE_ALLMETADATA = \"allmetadata\";\n  public static final String SPEC_ATTRIBUTE_MATCHTYPE = \"matchtype\";\n  public static final String SPEC_ATTRIBUTE_FIELDNAME = \"fieldname\";\n  // Activities\n  public static final String ACTIVITY_FETCH = \"fetch\";\n  protected static final long timeToRelease = 300000L;\n  /** Filenet session handle. */\n  protected IFilenet session = null;\n  /** Time last session was created */\n  protected long lastSessionFetch = -1L;\n  /** Username */\n  protected String userID = null;\n  /** Password */\n  protected String password = null;\n  /** Filenet domain */\n  protected String filenetDomain = null;\n  /** Object store */\n  protected String objectStore = null;\n  /** Server protocol */\n  protected String serverProtocol = null;\n  /** Server host name */\n  protected String serverHostname = null;\n  /** Server port */\n  protected String serverPort = null;\n  /** Server location */\n  protected String serverLocation = null;\n  /** URI to get us to the webservices integration */\n  protected String serverWSIURI = null;\n  /** Document URI server protocol */\n  protected String docUrlServerProtocol = null;\n  /** Document URI server name */\n  protected String docUrlServerName = null;\n  /** Document URI port */\n  protected String docUrlPort = null;\n  /** Document URI location */\n  protected String docUrlLocation = null;\n  /** Document URI protocol, server, port, and location */\n  protected String docURIPrefix = null;\n  /** Deny access token for default authority */\n  private final static String defaultAuthorityDenyToken = GLOBAL_DENY_TOKEN;\n  protected class GetSessionThread extends Thread\n  {\n    protected IFilenet rval = null;\n    protected Throwable exception = null;\n    public GetSessionThread()\n    {\n      super();\n      setDaemon(true);\n    }\n    public void run()\n    {\n      try\n      {\n        // Create a session\n        IFilenetFactory df = (IFilenetFactory)Naming.lookup(\"rmi://127.0.0.1:8305/filenet_factory\");\n        IFilenet newSession = df.make();\n        newSession.createSession(userID,password,filenetDomain,objectStore,serverWSIURI);\n        session = newSession;\n      }\n      catch (Throwable e)\n      {\n        this.exception = e;\n      }\n    }\n    public void finishUp()\n      throws java.net.MalformedURLException, NotBoundException, RemoteException, FilenetException, InterruptedException\n    {\n      join();\n      Throwable thr = exception;\n      if (thr != null)\n      {\n        if (thr instanceof java.net.MalformedURLException)\n          throw (java.net.MalformedURLException)thr;\n        else if (thr instanceof NotBoundException)\n          throw (NotBoundException)thr;\n        else if (thr instanceof RemoteException)\n          throw (RemoteException)thr;\n        else if (thr instanceof FilenetException)\n          throw (FilenetException)thr;\n        else if (thr instanceof RuntimeException)\n          throw (RuntimeException)thr;\n        else if (thr instanceof Error)\n          throw (Error)thr;\n        else\n          throw new RuntimeException(\"Unexpected exception type: \"+thr.getClass().getName()+\": \"+thr.getMessage(),thr);\n      }\n    }\n  }\n  /** Get a DFC session.  This will be done every time it is needed.\n  */\n  protected void getSession()\n    throws ManifoldCFException, ServiceInterruption\n  {\n    if (session == null)\n    {\n      // Check for parameter validity\n      if (userID == null || userID.length() < 1)\n        throw new ManifoldCFException(\"Parameter \"+CONFIG_PARAM_USERID+\" required but not set\");\n      if (Logging.connectors.isDebugEnabled())\n        Logging.connectors.debug(\"FileNet: UserID = '\" + userID + \"'\");\n      if (password == null || password.length() < 1)\n        throw new ManifoldCFException(\"Parameter \"+CONFIG_PARAM_PASSWORD+\" required but not set\");\n      Logging.connectors.debug(\"FileNet: Password exists\");\n      if (objectStore == null || objectStore.length() < 1)\n        throw new ManifoldCFException(\"Parameter \"+CONFIG_PARAM_OBJECTSTORE+\" required but not set\");\n      if (serverProtocol == null || serverProtocol.length() < 1)\n        throw new ManifoldCFException(\"Parameter \"+CONFIG_PARAM_SERVERPROTOCOL+\" required but not set\");\n      if (serverHostname == null || serverHostname.length() < 1)\n        throw new ManifoldCFException(\"Parameter \"+CONFIG_PARAM_SERVERHOSTNAME+\" required but not set\");\n      if (serverPort != null && serverPort.length() < 1)\n        serverPort = null;\n      if (Logging.connectors.isDebugEnabled())\n        Logging.connectors.debug(\"FileNet: Server URI is '\"+serverWSIURI+\"'\");\n      if (docUrlServerProtocol == null || docUrlServerProtocol.length() == 0)\n        throw new ManifoldCFException(\"Parameter \"+CONFIG_PARAM_URLPROTOCOL+\" required but not set\");\n      if (docUrlServerName == null || docUrlServerName.length() == 0)<fim_middle>// class below is blob\n"}