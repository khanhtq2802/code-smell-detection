{"text": "<fim_prefix>/*******************************************************************************\n * Copyright (c) 2017 Spring IDE Developers\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * https://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     Spring IDE Developers - initial API and implementation\n *******************************************************************************/\npackage org.springframework.ide.eclipse.editor.support.yaml.path;\n\nimport java.util.stream.Stream;\n\nimport org.eclipse.core.runtime.Assert;\n\n<fim_suffix>public class AlternativeYamlTraversal extends AbstractYamlTraversal {\n\n\tprivate YamlTraversal first;\n\tprivate YamlTraversal second;\n\n\tpublic AlternativeYamlTraversal(YamlTraversal first, YamlTraversal second) {\n\t\tAssert.isLegal(!first.isEmpty());\n\t\tAssert.isLegal(!second.isEmpty());\n\t\tthis.first = first;\n\t\tthis.second = second;\n\t}\n\n\t@Override\n\tpublic <T extends YamlNavigable<T>> Stream<T> traverseAmbiguously(T start) {\n\t\treturn Stream.concat(\n\t\t\t\tfirst.traverseAmbiguously(start),\n\t\t\t\tsecond.traverseAmbiguously(start)\n\t\t);\n\t}\n\n\t@Override\n\tpublic boolean canEmpty() {\n\t\treturn first.canEmpty() || second.canEmpty();\n\t}\n\n\t@Override\n\tpublic String toString() {\n\t\treturn \"Or(\"+first+\", \"+second+\")\";\n\t}\n\n}<fim_middle>// class below has no smell\n"}