{"text": "<fim_prefix>/*\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.apache.camel.component.bean;\n\nimport org.apache.camel.CamelExchangeException;\nimport org.apache.camel.Exchange;\nimport org.apache.camel.util.ObjectHelper;\n\npublic class MethodNotFoundException extends CamelExchangeException {\n    private static final long serialVersionUID = -7411465307141051012L;\n\n    private final Object bean;\n    private final String methodName;\n\n    public MethodNotFoundException(Exchange exchange, Object pojo, String methodName) {\n        super(\"Method with name: \" + methodName + \" not found on bean: \" + pojo + \" of type: \" + ObjectHelper.className(pojo), exchange);\n        this.methodName = methodName;\n        this.bean = pojo;\n    }\n\n    public MethodNotFoundException(Exchange exchange, Object pojo, String methodName, String postfix) {\n        super(\"Method with name: \" + methodName + \" \" + postfix + \" not found on bean: \" + pojo + \" of type: \" + ObjectHelper.className(pojo), exchange);\n        this.methodName = methodName;\n        this.bean = pojo;\n    }\n\n    public MethodNotFoundException(Exchange exchange, Class<?> type, String methodName, boolean isStaticMethod) {\n        super((isStaticMethod ? \"Static method\" : \"Method\") + \" with name: \" + methodName + \" not found on class: \" + ObjectHelper.name(type), exchange);\n        this.methodName = methodName;\n        this.bean = null;\n    }\n\n<fim_suffix>    public MethodNotFoundException(Object pojo, String methodName, Throwable cause) {\n        super(\"Method with name: \" + methodName + \" not found on bean: \" + pojo + \" of type:\" + ObjectHelper.className(pojo), null, cause);\n        this.methodName = methodName;\n        this.bean = pojo;\n    }\n\n    public MethodNotFoundException(Class<?> type, String methodName, Throwable cause) {\n        super(\"Method with name: \" + methodName + \" not found on class: \" + ObjectHelper.className(type), null, cause);\n        this.methodName = methodName;\n        this.bean = null;\n    }\n\n    public String getMethodName() {\n        return methodName;\n    }\n\n    public Object getBean() {\n        return bean;\n    }\n}<fim_middle>// function below has no smell\n"}