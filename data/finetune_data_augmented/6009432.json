{"text": "<fim_prefix>/*\n * Copyright 2002-2007 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage com.baidu.jprotobuf.pbrpc;\n\nimport com.baidu.jprotobuf.pbrpc.data.RpcDataPackage;\n\n/**\n * \n * Error data exception.\n *\n * @author xiemalin\n * @since 1.4\n */\n<fim_suffix>public class ErrorDataException extends Exception {\n\n    /** serialVersionUID. */\n    private static final long serialVersionUID = -9052741930614009382L;\n    \n    /** The rpc data package. */\n    private RpcDataPackage rpcDataPackage;\n    \n    /** The error code. */\n    private int errorCode;\n    \n    /**\n     * Gets the error code.\n     *\n     * @return the error code\n     */\n    public int getErrorCode() {\n        return errorCode;\n    }\n\n    /**\n     * Sets the error code.\n     *\n     * @param errorCode the new error code\n     */\n    public void setErrorCode(int errorCode) {\n        this.errorCode = errorCode;\n    }\n\n    /**\n     * Gets the rpc data package.\n     *\n     * @return the rpc data package\n     */\n    public RpcDataPackage getRpcDataPackage() {\n        return rpcDataPackage;\n    }\n\n    /**\n     * Sets the rpc data package.\n     *\n     * @param rpcDataPackage the new rpc data package\n     */\n    public void setRpcDataPackage(RpcDataPackage rpcDataPackage) {\n        this.rpcDataPackage = rpcDataPackage;\n    }\n\n    /**\n     * Instantiates a new error data exception.\n     */\n    public ErrorDataException() {\n        super();\n    }\n\n    /**\n     * Instantiates a new error data exception.\n     *\n     * @param message the message\n     * @param cause the cause\n     */\n    public ErrorDataException(String message, Throwable cause) {\n        super(message, cause);\n    }\n    \n    /**\n     * Instantiates a new error data exception.\n     *\n     * @param message the message\n     * @param cause the cause\n     * @param errorCode the error code\n     */\n    public ErrorDataException(String message, Throwable cause, int errorCode) {\n        super(message, cause);\n        this.errorCode = errorCode;\n    }\n\n    /**\n     * Instantiates a new error data exception.\n     *\n     * @param message the message\n     */\n    public ErrorDataException(String message) {\n        super(message);\n    }\n\n    /**\n     * Instantiates a new error data exception.\n     *\n     * @param message the message\n     * @param errorCode the error code\n     */\n    public ErrorDataException(String message, int errorCode) {\n        super(message);\n        this.errorCode = errorCode;\n    }\n    \n    /**\n     * Instantiates a new error data exception.\n     *\n     * @param cause the cause\n     */\n    public ErrorDataException(Throwable cause) {\n        super(cause);\n    }\n    \n    /**\n     * Instantiates a new error data exception.\n     *\n     * @param cause the cause\n     * @param errorCode the error code\n     */\n    public ErrorDataException(Throwable cause, int errorCode) {\n        super(cause);\n        this.errorCode = errorCode;\n    }\n\n    \n}<fim_middle>// class below is data class\n"}