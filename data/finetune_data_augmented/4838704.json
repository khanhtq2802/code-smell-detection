{"text": "<fim_prefix>/*\n *  Licensed to the Apache Software Foundation (ASF) under one\n *  or more contributor license agreements.  See the NOTICE file\n *  distributed with this work for additional information\n *  regarding copyright ownership.  The ASF licenses this file\n *  to you under the Apache License, Version 2.0 (the\n *  \"License\"); you may not use this file except in compliance\n *  with the License.  You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing,\n *  software distributed under the License is distributed on an\n *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n *  KIND, either express or implied.  See the License for the\n *  specific language governing permissions and limitations\n *  under the License.\n */\n\npackage org.apache.isis.core.metamodel.facets.collections.layout;\n\nimport java.util.Comparator;\nimport java.util.Properties;\nimport com.google.common.base.Strings;\nimport org.apache.isis.core.commons.lang.ClassUtil;\nimport org.apache.isis.core.metamodel.facetapi.FacetHolder;\nimport org.apache.isis.core.metamodel.facets.collections.sortedby.SortedByFacet;\nimport org.apache.isis.core.metamodel.facets.collections.sortedby.SortedByFacetAbstract;\n\n<fim_suffix>public class SortedByFacetOnCollectionFromLayoutProperties extends SortedByFacetAbstract {\n\n    public static SortedByFacet create(Properties properties, FacetHolder holder) {\n        final Class sortedBy = sortedBy(properties);\n        return sortedBy != null? new SortedByFacetOnCollectionFromLayoutProperties(sortedBy, holder): null;\n    }\n\n    private SortedByFacetOnCollectionFromLayoutProperties(Class<? extends Comparator<?>> sortedBy, FacetHolder holder) {\n        super(sortedBy, holder);\n    }\n\n    private static Class<?> sortedBy(Properties properties) {\n        if(properties == null) {\n            return null;\n        }\n        String sortedBy = Strings.emptyToNull(properties.getProperty(\"sortedBy\"));\n        if (sortedBy == null) {\n            return null;\n        }\n        final Class<?> sortedByClass = ClassUtil.forName(sortedBy);\n        if(sortedByClass == Comparator.class) {\n            return null;\n        }\n        return sortedByClass;\n    }\n\n}<fim_middle>// class below has no smell\n"}