{"text": "<fim_prefix>\t\t\t\treferences[++j] = item.getQualifiedName( );\n\t\t\t\treferMap.put( references[j], item );\n\t\t\t}\n\t\t}\n\t\tint tmp = j + 1;\n\t\tArrays.sort( references, 1, tmp );\n\t\tfor ( int i = 0; i < referenceList.size( ); i++ )\n\t\t{\n\t\t\tReportItemHandle item = ( (ReportItemHandle) referenceList.get( i ) );\n\t\t\tif ( item.getName( ) == null )\n\t\t\t{\n\t\t\t\treferences[++j] = item.getElement( )\n\t\t\t\t\t\t.getDefn( )\n\t\t\t\t\t\t.getDisplayName( )\n\t\t\t\t\t\t+ \" (ID \" //$NON-NLS-1$\n\t\t\t\t\t\t+ item.getID( )\n\t\t\t\t\t\t+ \") - \" //$NON-NLS-1$\n\t\t\t\t\t\t+ Messages.getString( \"BindingPage.ReportItem.NoName\" ); //$NON-NLS-1$\n\t\t\t\treferMap.put( references[j], item );\n\t\t\t}\n\t\t}\n\t\tArrays.sort( references, tmp, referenceList.size( ) + 1 );\n\t\treturn references;\n\t}\n\tprivate ComputedColumnHandle getSelectColumnHandle( )\n\t{\n\t\tif ( selectedColumnName != null )\n\t\t{\n\t\t\tfor ( int i = 0; i < bindingTable.getTable( ).getItemCount( ); i++ )\n\t\t\t{\n\t\t\t\tComputedColumnHandle handle = (ComputedColumnHandle) bindingTable.getElementAt( i );\n\t\t\t\tif ( selectedColumnName.equals( handle.getName( ) ) )\n\t\t\t\t{\n\t\t\t\t\treturn handle;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\tprotected void handleAddEvent( )\n\t{\n\t\tDataColumnBindingDialog dialog = new DataColumnBindingDialog( true );\n\t\tdialog.setInput( inputElement );\n\t\tdialog.setExpressionProvider( expressionProvider );\n\t\tif ( dialog.open( ) == Dialog.OK )\n\t\t{\n\t\t\tif ( bindingTable != null )\n\t\t\t{\n\t\t\t\trefreshBindingTable( );\n\t\t\t}\n\t\t}\n\t}\n\tprotected void handleDelEvent( )\n\t{\n\t\tif ( !btnDel.isEnabled( ) )\n\t\t\treturn;\n\t\tint pos = bindingTable.getTable( ).getSelectionIndex( );\n\t\tpos = getOriginalIndex( pos );\n\t\tif ( pos > -1 )\n\t\t{\n\t\t\ttry\n\t\t\t{\n\t\t\t\tComputedColumnHandle handle = (ComputedColumnHandle) ( DEUtil.getBindingHolder( inputElement ) ).getColumnBindings( )\n\t\t\t\t\t\t.getAt( pos );\n\t\t\t\tdeleteRow( handle );\n\t\t\t}\n\t\t\tcatch ( Exception e1 )\n\t\t\t{\n\t\t\t\tExceptionHandler.handle( e1 );\n\t\t\t}\n\t\t}\n\t}\n\tprotected void handleEditEvent( )\n\t{\n\t\tint pos = bindingTable.getTable( ).getSelectionIndex( );\n\t\teditSelectedBinding( pos );\n\t}\n\t/**\n\t * Edits the selected binding of table.\n\t * \n\t * @param bindingIndex\n\t */\n\tprivate void editSelectedBinding( int bindingIndex )\n\t{\n\t\tif ( !btnEdit.isEnabled( ) )\n\t\t\treturn;\n\t\tComputedColumnHandle bindingHandle = null;\n\t\tbindingIndex = getOriginalIndex( bindingIndex );\n\t\tif ( bindingIndex > -1 )\n\t\t{\n\t\t\tbindingHandle = (ComputedColumnHandle) ( DEUtil.getBindingHolder( inputElement ) ).getColumnBindings( )\n\t\t\t\t\t.getAt( bindingIndex );\n\t\t}\n\t\tif ( bindingHandle == null )\n\t\t\treturn;\n\t\tString bindingName = bindingHandle.getName( );\n\t\tDataColumnBindingDialog dialog = new DataColumnBindingDialog( false );\n\t\tsetDialogInput( dialog, bindingHandle );\n\t\tdialog.setExpressionProvider( expressionProvider );\n\t\tif ( dialog.open( ) == Dialog.OK )\n\t\t{\n\t\t\tif ( bindingTable != null )\n\t\t\t\tbindingTable.getTable( ).setSelection( bindingIndex );\n\t\t\tif ( selectedColumnName != null\n\t\t\t\t\t&& selectedColumnName.equals( bindingName ) )\n\t\t\t\tselectedColumnName = bindingHandle.getName( );\n\t\t}\n\t\tselectIndex = getShowIndex( bindingIndex );\n\t}\n\tprotected void setDialogInput( DataColumnBindingDialog dialog,\n\t\t\tComputedColumnHandle bindingHandle )\n\t{\n\t\tif ( dialog != null )\n\t\t{\n\t\t\tdialog.setInput( inputElement, bindingHandle );\n\t\t}\n\t}\n\tprotected boolean initDialog( )\n\t{\n\t\tif ( canSelect )\n\t\t{\n\t\t\tif ( inputElement instanceof DataItemHandle )\n\t\t\t{\n\t\t\t\tselectedColumnName = ( (DataItemHandle) inputElement ).getResultSetColumn( );\n\t\t\t\tupdateSelection( );\n\t\t\t}\n\t\t\telse if ( inputElement instanceof ImageHandle )\n\t\t\t{\n\t\t\t\tselectedColumnName = getColumnName( ( (ImageHandle) inputElement ).getValueExpression( ) );\n\t\t\t\tupdateSelection( );\n\t\t\t}\n\t\t}\n\t\tload( );\n\t\treturn super.initDialog( );\n\t}\n\t@Override\n\tprotected boolean needRememberLastSize( )\n\t{\n\t\treturn true;\n\t}\n\t/**\n\t * @return Returns the enableAutoCommit.\n\t */\n\tpublic boolean isEnableAutoCommit( )\n\t{\n\t\treturn enableAutoCommit;\n\t}\n\tpublic void load( )\n\t{\n\t\tif ( canSelect )\n\t\t{\n\t\t\tdatasetRadio.setEnabled( true );\n\t\t\treportItemRadio.setEnabled( true );\n\t\t\tBindingInfo info = (BindingInfo) loadValue( );\n\t\t\tif ( info != null )\n\t\t\t{\n\t\t\t\trefreshBindingInfo( info );\n\t\t\t}\n\t\t}\n\t\trefreshBindingTable( );\n\t}\n\tpublic Object loadValue( )\n\t{\n\t\tif ( canSelect )\n\t\t{\n\t\t\tint type = inputElement.getDataBindingType( );\n\t\t\tObject value;\n\t\t\tif ( type == ReportItemHandle.DATABINDING_TYPE_NONE )\n\t\t\t\ttype = DEUtil.getBindingHolder( inputElement )\n\t\t\t\t\t\t.getDataBindingType( );\n\t\t\tswitch ( type )\n\t\t\t{\n\t\t\t\tcase ReportItemHandle.DATABINDING_TYPE_DATA :\n\t\t\t\t\tDataSetHandle dataset = inputElement.getDataSet( );\n\t\t\t\t\tif ( dataset == null )\n\t\t\t\t\t\tvalue = NullDatasetChoice;\n\t\t\t\t\telse\n\t\t\t\t\t\tvalue = dataset.getQualifiedName( );\n\t\t\t\t\tbreak;\n\t\t\t\tcase ReportItemHandle.DATABINDING_TYPE_REPORT_ITEM_REF :\n\t\t\t\t\tReportItemHandle reference = inputElement.getDataBindingReference( );\n\t\t\t\t\tif ( reference == null )\n\t\t\t\t\t\tvalue = NullReportItemChoice;\n\t\t\t\t\telse\n\t\t\t\t\t\tvalue = reference.getQualifiedName( );\n\t\t\t\t\tbreak;\n\t\t\t\tdefault :\n\t\t\t\t\tvalue = NullDatasetChoice;\n\t\t\t}\n\t\t\tBindingInfo info = new BindingInfo( type, value );\n\t\t\treturn info;\n\t\t}\n\t\treturn null;\n\t}\n<fim_suffix>\tprotected void okPressed( )\n\t{\n\t\tif ( canSelect )\n\t\t{\n\t\t\tsetResult( selectedColumnName );\n\t\t\tif ( inputElement instanceof DataItemHandle )\n\t\t\t{\n\t\t\t\ttry\n\t\t\t\t{\n\t\t\t\t\t( (DataItemHandle) inputElement ).setResultSetColumn( selectedColumnName );\n\t\t\t\t}\n\t\t\t\tcatch ( SemanticException e )\n\t\t\t\t{\n\t\t\t\t\tExceptionHandler.handle( e );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif( getSelectColumnHandle( ) != null && ExtendedDataModelUIAdapterHelper.isBoundToExtendedData( inputElement ) )\n\t\t{\n\t\t\tDataModelAdapterStatus status = DataModelAdapterUtil.validateRelativeTimePeriod( inputElement, getSelectColumnHandle( ));\n\t\t\tif( status.getStatus( ) == DataModelAdapterStatus.Status.FAIL )\n\t\t\t{\n\t\t\t\tMessageDialog.openError( UIUtil.getDefaultShell( ), null, status.getMessage( ) );\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tsuper.okPressed( );\n\t}<fim_middle>// function below has no smell\n"}