{"text": "<fim_prefix>/**\n * Copyright (c) 2016 NumberFour AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n * \n * Contributors:\n *   NumberFour AG - Initial API and implementation\n */\npackage org.eclipse.n4js.ts.types.impl;\n\nimport org.eclipse.emf.common.notify.Notification;\n\nimport org.eclipse.emf.ecore.EClass;\n\nimport org.eclipse.emf.ecore.impl.ENotificationImpl;\n\nimport org.eclipse.n4js.ts.types.TConstableElement;\nimport org.eclipse.n4js.ts.types.TypesPackage;\n\nimport org.eclipse.n4js.utils.emf.ProxyResolvingEObjectImpl;\n\n/**\n * <!-- begin-user-doc -->\n * An implementation of the model object '<em><b>TConstable Element</b></em>'.\n * <!-- end-user-doc -->\n * <p>\n * The following features are implemented:\n * </p>\n * <ul>\n *   <li>{@link org.eclipse.n4js.ts.types.impl.TConstableElementImpl#isConst <em>Const</em>}</li>\n *   <li>{@link org.eclipse.n4js.ts.types.impl.TConstableElementImpl#getCompileTimeValue <em>Compile Time Value</em>}</li>\n * </ul>\n *\n * @generated\n */\npublic abstract class TConstableElementImpl extends ProxyResolvingEObjectImpl implements TConstableElement {\n\t/**\n\t * The default value of the '{@link #isConst() <em>Const</em>}' attribute.\n\t * <!-- begin-user-doc -->\n\t * <!-- end-user-doc -->\n\t * @see #isConst()\n\t * @generated\n\t * @ordered\n\t */\n\tprotected static final boolean CONST_EDEFAULT = false;\n\n\t/**\n\t * The cached value of the '{@link #isConst() <em>Const</em>}' attribute.\n\t * <!-- begin-user-doc -->\n\t * <!-- end-user-doc -->\n\t * @see #isConst()\n\t * @generated\n\t * @ordered\n\t */\n\tprotected boolean const_ = CONST_EDEFAULT;\n\n\t/**\n\t * The default value of the '{@link #getCompileTimeValue() <em>Compile Time Value</em>}' attribute.\n\t * <!-- begin-user-doc -->\n\t * <!-- end-user-doc -->\n\t * @see #getCompileTimeValue()\n\t * @generated\n\t * @ordered\n\t */\n\tprotected static final String COMPILE_TIME_VALUE_EDEFAULT = null;\n\n\t/**\n\t * The cached value of the '{@link #getCompileTimeValue() <em>Compile Time Value</em>}' attribute.\n\t * <!-- begin-user-doc -->\n\t * <!-- end-user-doc -->\n\t * @see #getCompileTimeValue()\n\t * @generated\n\t * @ordered\n\t */\n\tprotected String compileTimeValue = COMPILE_TIME_VALUE_EDEFAULT;\n\n\t/**\n\t * <!-- begin-user-doc -->\n\t * <!-- end-user-doc -->\n\t * @generated\n\t */\n\tprotected TConstableElementImpl() {\n\t\tsuper();\n\t}\n\n\t/**\n\t * <!-- begin-user-doc -->\n\t * <!-- end-user-doc -->\n\t * @generated\n\t */\n\t@Override\n\tprotected EClass eStaticClass() {\n\t\treturn TypesPackage.Literals.TCONSTABLE_ELEMENT;\n\t}\n\n\t/**\n\t * <!-- begin-user-doc -->\n\t * <!-- end-user-doc -->\n\t * @generated\n\t */\n\tpublic boolean isConst() {\n\t\treturn const_;\n\t}\n\n\t/**\n\t * <!-- begin-user-doc -->\n\t * <!-- end-user-doc -->\n\t * @generated\n\t */\n\tpublic void setConst(boolean newConst) {\n\t\tboolean oldConst = const_;\n\t\tconst_ = newConst;\n\t\tif (eNotificationRequired())\n\t\t\teNotify(new ENotificationImpl(this, Notification.SET, TypesPackage.TCONSTABLE_ELEMENT__CONST, oldConst, const_));\n\t}\n\n\t/**\n\t * <!-- begin-user-doc -->\n\t * <!-- end-user-doc -->\n\t * @generated\n\t */\n\tpublic String getCompileTimeValue() {\n\t\treturn compileTimeValue;\n\t}\n\n\t/**\n\t * <!-- begin-user-doc -->\n\t * <!-- end-user-doc -->\n\t * @generated\n\t */\n\tpublic void setCompileTimeValue(String newCompileTimeValue) {\n\t\tString oldCompileTimeValue = compileTimeValue;\n\t\tcompileTimeValue = newCompileTimeValue;\n\t\tif (eNotificationRequired())\n\t\t\teNotify(new ENotificationImpl(this, Notification.SET, TypesPackage.TCONSTABLE_ELEMENT__COMPILE_TIME_VALUE, oldCompileTimeValue, compileTimeValue));\n\t}\n\n\t/**\n\t * <!-- begin-user-doc -->\n\t * <!-- end-user-doc -->\n\t * @generated\n\t */\n\t@Override\n\tpublic Object eGet(int featureID, boolean resolve, boolean coreType) {\n\t\tswitch (featureID) {\n\t\t\tcase TypesPackage.TCONSTABLE_ELEMENT__CONST:\n\t\t\t\treturn isConst();\n\t\t\tcase TypesPackage.TCONSTABLE_ELEMENT__COMPILE_TIME_VALUE:\n\t\t\t\treturn getCompileTimeValue();\n\t\t}\n\t\treturn super.eGet(featureID, resolve, coreType);\n\t}\n\n\t/**\n\t * <!-- begin-user-doc -->\n\t * <!-- end-user-doc -->\n\t * @generated\n\t */\n\t@Override\n\tpublic void eSet(int featureID, Object newValue) {\n\t\tswitch (featureID) {\n\t\t\tcase TypesPackage.TCONSTABLE_ELEMENT__CONST:\n\t\t\t\tsetConst((Boolean)newValue);\n\t\t\t\treturn;\n\t\t\tcase TypesPackage.TCONSTABLE_ELEMENT__COMPILE_TIME_VALUE:\n\t\t\t\tsetCompileTimeValue((String)newValue);\n\t\t\t\treturn;\n\t\t}\n\t\tsuper.eSet(featureID, newValue);\n\t}\n\n\t/**\n\t * <!-- begin-user-doc -->\n\t * <!-- end-user-doc -->\n\t * @generated\n\t */\n<fim_suffix>\t@Override\n\tpublic void eUnset(int featureID) {\n\t\tswitch (featureID) {\n\t\t\tcase TypesPackage.TCONSTABLE_ELEMENT__CONST:\n\t\t\t\tsetConst(CONST_EDEFAULT);\n\t\t\t\treturn;\n\t\t\tcase TypesPackage.TCONSTABLE_ELEMENT__COMPILE_TIME_VALUE:\n\t\t\t\tsetCompileTimeValue(COMPILE_TIME_VALUE_EDEFAULT);\n\t\t\t\treturn;\n\t\t}\n\t\tsuper.eUnset(featureID);\n\t}\n\n\t/**\n\t * <!-- begin-user-doc -->\n\t * <!-- end-user-doc -->\n\t * @generated\n\t */\n\t@Override\n\tpublic boolean eIsSet(int featureID) {\n\t\tswitch (featureID) {\n\t\t\tcase TypesPackage.TCONSTABLE_ELEMENT__CONST:\n\t\t\t\treturn const_ != CONST_EDEFAULT;\n\t\t\tcase TypesPackage.TCONSTABLE_ELEMENT__COMPILE_TIME_VALUE:\n\t\t\t\treturn COMPILE_TIME_VALUE_EDEFAULT == null ? compileTimeValue != null : !COMPILE_TIME_VALUE_EDEFAULT.equals(compileTimeValue);\n\t\t}\n\t\treturn super.eIsSet(featureID);\n\t}\n\n\t/**\n\t * <!-- begin-user-doc -->\n\t * <!-- end-user-doc -->\n\t * @generated\n\t */\n\t@Override\n\tpublic String toString() {\n\t\tif (eIsProxy()) return super.toString();\n\n\t\tStringBuilder result = new StringBuilder(super.toString());\n\t\tresult.append(\" (const: \");\n\t\tresult.append(const_);\n\t\tresult.append(\", compileTimeValue: \");\n\t\tresult.append(compileTimeValue);\n\t\tresult.append(')');\n\t\treturn result.toString();\n\t}\n\n} //TConstableElementImpl<fim_middle>// function below has no smell\n"}