{"text": "<fim_prefix>/*\n * This file provided by Facebook is for non-commercial testing and evaluation\n * purposes only.  Facebook reserves all rights not expressly granted.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n * FACEBOOK BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n * ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\npackage com.facebook.samples.comparison.adapters;\n\nimport android.content.Context;\nimport android.view.ViewGroup;\nimport com.facebook.samples.comparison.configs.glide.GlideApp;\nimport com.facebook.samples.comparison.holders.GlideHolder;\nimport com.facebook.samples.comparison.instrumentation.InstrumentedImageView;\nimport com.facebook.samples.comparison.instrumentation.PerfListener;\n\n/**\n * RecyclerView Adapter for Glide\n */\n<fim_suffix>public class GlideAdapter extends ImageListAdapter {\n\n  public GlideAdapter(\n      Context context,\n      PerfListener perfListener) {\n    super(context, perfListener);\n  }\n\n  @Override\n  public GlideHolder onCreateViewHolder(ViewGroup parent, int viewType) {\n    final InstrumentedImageView instrumentedImageView = new InstrumentedImageView(getContext());\n    return new GlideHolder(getContext(), parent, instrumentedImageView, getPerfListener());\n  }\n\n  @Override\n  public void shutDown() {\n    GlideApp.get(getContext()).clearMemory();\n  }\n}<fim_middle>// class below has no smell\n"}