{"text": "<fim_prefix>/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements. See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership. The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\npackage org.apache.cxf.jaxrs.rx2.client;\n\nimport javax.ws.rs.client.Entity;\nimport javax.ws.rs.client.RxInvoker;\nimport javax.ws.rs.core.GenericType;\nimport javax.ws.rs.core.Response;\n\nimport io.reactivex.Flowable;\n\n\n<fim_suffix>@SuppressWarnings(\"rawtypes\")\npublic interface FlowableRxInvoker extends RxInvoker<Flowable> {\n\n    @Override\n    Flowable<Response> get();\n\n    @Override\n    <T> Flowable<T> get(Class<T> responseType);\n\n    @Override\n    <T> Flowable<T> get(GenericType<T> responseType);\n\n    @Override\n    Flowable<Response> put(Entity<?> entity);\n\n    @Override\n    <T> Flowable<T> put(Entity<?> entity, Class<T> clazz);\n\n    @Override\n    <T> Flowable<T> put(Entity<?> entity, GenericType<T> type);\n\n    @Override\n    Flowable<Response> post(Entity<?> entity);\n\n    @Override\n    <T> Flowable<T> post(Entity<?> entity, Class<T> clazz);\n\n    @Override\n    <T> Flowable<T> post(Entity<?> entity, GenericType<T> type);\n\n    @Override\n    Flowable<Response> delete();\n\n    @Override\n    <T> Flowable<T> delete(Class<T> responseType);\n\n    @Override\n    <T> Flowable<T> delete(GenericType<T> responseType);\n\n    @Override\n    Flowable<Response> head();\n\n    @Override\n    Flowable<Response> options();\n\n    @Override\n    <T> Flowable<T> options(Class<T> responseType);\n\n    @Override\n    <T> Flowable<T> options(GenericType<T> responseType);\n\n    @Override\n    Flowable<Response> trace();\n\n    @Override\n    <T> Flowable<T> trace(Class<T> responseType);\n\n    @Override\n    <T> Flowable<T> trace(GenericType<T> responseType);\n\n    @Override\n    Flowable<Response> method(String name);\n\n    @Override\n    <T> Flowable<T> method(String name, Class<T> responseType);\n\n    @Override\n    <T> Flowable<T> method(String name, GenericType<T> responseType);\n\n    @Override\n    Flowable<Response> method(String name, Entity<?> entity);\n\n    @Override\n    <T> Flowable<T> method(String name, Entity<?> entity, Class<T> responseType);\n\n    @Override\n    <T> Flowable<T> method(String name, Entity<?> entity, GenericType<T> responseType);\n}\n<fim_middle>// class below has no smell\n"}