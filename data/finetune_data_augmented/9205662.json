{"text": "<fim_prefix>\t\t\t\t\timageHeightDpi );\n\t\t\timageWidth = LayoutUtil.getImageWidth( image.getWidth( ),\n\t\t\t\t\tparentSizeInfo.getWidth( ), 0, imageWidthDpi );\n\t\t}\n\t\tColumnsInfo imageColumnsInfo = LayoutUtil.createImage( imageWidth );\n\t\tsplitColumns( imageColumnsInfo, parentSizeInfo );\n\t\tContainerSizeInfo imageSize = new ContainerSizeInfo( parentSizeInfo\n\t\t\t\t.getStartCoordinate( ), imageColumnsInfo.getTotalWidth( ) );\n\t\tStyleEntry entry = engine.getStyle( style, imageSize, parentSizeInfo,\n\t\t\t\tgetParentStyle( container ) );\n\t\tSheetData data = createImageData( image, imageData, imageSize\n\t\t\t\t.getWidth( ), imageHeight, entry, container );\n\t\tdata.setHyperlinkDef( link );\n\t\tdata.setBookmark( bookmark );\n\t\tdata.setStartX( imageSize.getStartCoordinate( ) );\n\t\tdata.setEndX( imageSize.getEndCoordinate( ) );\n\t\taddData( data );\n\t}\n\tprivate int[] getImageSize( IImageContent image, Image imageInfo,\n\t\t\tContainerSizeInfo parentSizeInfo, int imageWidthDpi,\n\t\t\tint imageHeightDpi )\n\t{\n\t\tint imageHeight;\n\t\tint imageWidth;\n\t\tif ( image.getWidth( ) == null && image.getHeight( ) == null )\n\t\t{\n\t\t\tint imageFileWidthDpi = imageInfo.getPhysicalWidthDpi( ) == -1\n\t\t\t\t\t? 0\n\t\t\t\t\t: imageInfo.getPhysicalWidthDpi( );\n\t\t\tint imageFileHeightDpi = imageInfo.getPhysicalHeightDpi( ) == -1\n\t\t\t\t\t? 0\n\t\t\t\t\t: imageInfo.getPhysicalHeightDpi( );\n\t\t\timageWidthDpi = PropertyUtil.getImageDpi( image, imageFileWidthDpi,\n\t\t\t\t\t0 );\n\t\t\timageHeightDpi = PropertyUtil.getImageDpi( image,\n\t\t\t\t\timageFileHeightDpi, 0 );\n\t\t}\n\t\tint imageInfoHeight = (int) ( imageInfo.getHeight( ) * 1000\n\t\t\t\t* OdsUtil.INCH_PT / imageHeightDpi );\n\t\tint imageInfoWidth = (int) ( imageInfo.getWidth( ) * 1000\n\t\t\t\t* OdsUtil.INCH_PT / imageWidthDpi );\n\t\tif ( image.getWidth( ) == null && image.getHeight( ) != null )\n\t\t{\n\t\t\timageHeight = LayoutUtil.getImageHeight( image.getHeight( ),\n\t\t\t\t\timageInfoHeight, imageHeightDpi );\n\t\t\tfloat scale = ( (float) imageInfoHeight )\n\t\t\t\t\t/ ( (float) imageInfoWidth );\n\t\t\timageWidth = (int) ( imageHeight / scale );\n\t\t}\n\t\telse if ( image.getHeight( ) == null && image.getWidth( ) != null )\n\t\t{\n\t\t\timageWidth = LayoutUtil.getImageWidth( image.getWidth( ),\n\t\t\t\t\tparentSizeInfo.getWidth( ), imageInfoWidth, imageWidthDpi );\n\t\t\tfloat scale = ( (float) imageInfoHeight )\n\t\t\t\t\t/ ( (float) imageInfoWidth );\n\t\t\timageHeight = (int) ( imageWidth * scale );\n\t\t}\n\t\telse\n\t\t{\n\t\t\timageHeight = LayoutUtil.getImageHeight( image.getHeight( ),\n\t\t\t\t\timageInfoHeight, imageHeightDpi );\n\t\t\timageWidth = LayoutUtil.getImageWidth( image.getWidth( ),\n\t\t\t\t\tparentSizeInfo.getWidth( ), imageInfoWidth, imageWidthDpi );\n\t\t}\n\t\tint[] imageSize = {imageHeight, imageWidth};\n\t\treturn imageSize;\n\t}\n\tprivate SheetData createImageData( IImageContent image, byte[] imageData,\n\t\t\tint imageWidth, int imageHeight, StyleEntry entry,\n\t\t\tOdsContainer container )\n\t{\n\t\tint type = SheetData.IMAGE;\n\t\tentry.setProperty( StyleConstant.DATA_TYPE_PROP, type );\n\t\tString uri = image.getURI( );\n\t\tString mimeType = image.getMIMEType( );\n\t\tString extension = image.getExtension( );\n\t\tString altText = image.getAltText( );\n\t\tif ( FlashFile.isFlash( mimeType, uri, extension ) )\n\t\t{\n\t\t\tif ( null == altText )\n\t\t\t{\n\t\t\t\taltText = messageFlashObjectNotSupported; \n\t\t\t}\n\t\t\tentry.setProperty( StyleConstant.DATA_TYPE_PROP, SheetData.STRING );\n\t\t\treturn createData( altText, entry );\n\t\t}\n\t\tif ( imageData != null )\n\t\t{\n\t\t\tImageEntry imageEntry = null;\n\t\t\ttry\n\t\t\t{\n\t\t\t\timageEntry = context.getImageManager( ).addImage( image );\n\t\t\t}\n\t\t\tcatch ( IOException e )\n\t\t\t{\n\t\t\t\tlogger.log( Level.SEVERE, e.getLocalizedMessage( ), e );\n\t\t\t}\n\t\t\tSheetData imageData1 = new ImageData( imageEntry.getUri(), image.getAltText( ), imageWidth,\n\t\t\t\t\timageHeight, entry, type, container );\n\t\t\treturn imageData1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tentry.setProperty( StyleConstant.DATA_TYPE_PROP, SheetData.STRING );\n\t\t\treturn createData( image.getAltText( ), entry );\n\t\t}\n\t}\n\tpublic Data addDateTime( Object txt, IStyle style, HyperlinkInfo link,\n\t\t\tBookmarkDef bookmark, String dateTimeLocale, float height )\n\t{\n\t\tOdsContainer currentContainer = getCurrentContainer( );\n\t\tContainerSizeInfo containerSize = currentContainer.getSizeInfo( );\n\t\tStyleEntry entry = engine.getStyle( style, containerSize,\n\t\t\t\t\t\t\t\t\t\t\tgetParentStyle( currentContainer ) );\n\t\tcontext.addStyle( entry );\n\t\tData data = null;\n\t\tIDataContent dataContent = (IDataContent)txt;\n\t\tObject value = dataContent.getValue( );\n\t\tDate date = OdsUtil.getDate( value );\n\t\t//If date time is before 1900, it must be output as string, otherwise, else can't format the date.\n\t\tif ( date != null\n\t\t\t\t&& ( ( date instanceof Time ) || date.getYear( ) >= 0 ) )\n\t\t{\n\t\t\tdata = createDateData( value, entry, style.getDateTimeFormat( ),\n\t\t\t\t\tdateTimeLocale );\n\t\t\tdata.setHeight( height );\n\t\t\tdata.setBookmark( bookmark );\n\t\t\tdata.setHyperlinkDef( link );\n\t\t\tdata.setStartX( containerSize.getStartCoordinate( ) );\n\t\t\tdata.setEndX( containerSize.getEndCoordinate( ) );\n\t\t\taddData( data );\n\t\t\treturn data;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tentry.setProperty( StyleConstant.DATA_TYPE_PROP, SheetData.STRING );\n\t\t\treturn addData( dataContent.getText( ), style, link, bookmark,\n\t\t\t\t\tdateTimeLocale, height );\n\t\t}\n\t}\n\tpublic void addCaption( String text, IStyle style )\n\t{\n\t\tContainerSizeInfo containerSize = getCurrentContainer( ).getSizeInfo( );\n\t\tStyleEntry entry = StyleBuilder.createEmptyStyleEntry( StyleConstant.TYPE_PARAGRAPH );\n\t\tentry.setProperty( StyleEntry.H_ALIGN_PROP, \"Center\" );\n\t\tentry.setProperty( StyleEntry.FONT_SIZE_PROP, StyleBuilder\n\t\t\t\t\t\t.convertFontSize( style\n\t\t\t\t\t\t\t\t.getProperty( IStyle.STYLE_FONT_SIZE ) ) );\n\t\tentry.setProperty( StyleEntry.DATA_TYPE_PROP, SheetData.STRING );\n\t\tData data = createData( text, entry );\n\t\tdata.setStartX( containerSize.getStartCoordinate( ) );\n\t\tdata.setEndX( containerSize.getEndCoordinate( ) );\n\t\taddData( data );\n\t}\n<fim_suffix>\tprivate void setDataType( StyleEntry entry, Object value, String dataLocale )\n\t{\n\t\tULocale locale = getLocale( dataLocale );\n\t\tsetDataType( entry, value, locale );\n\t}<fim_middle>// function below has no smell\n"}