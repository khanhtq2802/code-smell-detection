{"text": "<fim_prefix>package com.esri.hadoop.hive;\n\nimport org.apache.commons.logging.Log;\nimport org.apache.commons.logging.LogFactory;\nimport org.apache.hadoop.hive.ql.exec.Description;\nimport org.apache.hadoop.io.BytesWritable;\n// DoubleWritable - must use hive-serde2; the other one produces struct {value:d.d}\nimport org.apache.hadoop.hive.serde2.io.DoubleWritable;\n\n\nimport com.esri.core.geometry.ogc.OGCGeometry;\nimport com.esri.core.geometry.ogc.OGCPoint;\n\n<fim_suffix>@Description(name = \"ST_X\",\n   value = \"_FUNC_(point) - returns the X coordinate of point\",\n   extended = \"Example:\\n\"\n   + \"  SELECT _FUNC_(ST_Point(1.5, 2.5)) FROM src LIMIT 1;  --  1.5\"\n)\n//@HivePdkUnitTests(\n//\tcases = {\n//\t\t@HivePdkUnitTest(\n//\t\t\tquery = \"select ST_X(ST_Point(1,2)) from onerow\",\n//\t\t\tresult = \"1\"\n//\t\t\t),\n//\t\t@HivePdkUnitTest(\n//\t\t\tquery = \"select ST_X(ST_LineString(1.5,2.5, 3.0,2.2)) from onerow\",\n//\t\t\tresult = \"null\"\n//\t\t\t),\n//\t\t@HivePdkUnitTest(\n//\t\t\tquery = \"select ST_X(null) from onerow\",\n//\t\t\tresult = \"null\"\n//\t\t\t)\n//\t}\n//)\n\npublic class ST_X extends ST_GeometryAccessor {\n\tfinal DoubleWritable resultDouble = new DoubleWritable();\n\tstatic final Log LOG = LogFactory.getLog(ST_X.class.getName());\n\n\tpublic DoubleWritable evaluate(BytesWritable geomref) {\n\t\tif (geomref == null || geomref.getLength() == 0) {\n\t\t\tLogUtils.Log_ArgumentsNull(LOG);\n\t\t\treturn null;\n\t\t}\n\n\t\tOGCGeometry ogcGeometry = GeometryUtils.geometryFromEsriShape(geomref);\n\t\tif (ogcGeometry == null){\n\t\t\treturn null;\n\t\t}\n\n\t\tswitch(GeometryUtils.getType(geomref)) {\n\t\tcase ST_POINT:\n\t\t\tOGCPoint pt = (OGCPoint)ogcGeometry;\n\t\t\tresultDouble.set(pt.X());\n\t\t\treturn resultDouble;\n\t\tdefault:\n\t\t\tLogUtils.Log_InvalidType(LOG, GeometryUtils.OGCType.ST_POINT, GeometryUtils.getType(geomref));\n\t\t\treturn null;\n\t\t}\n\t}\n\n}<fim_middle>// class below has no smell\n"}