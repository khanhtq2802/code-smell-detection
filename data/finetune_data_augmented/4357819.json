{"text": "<fim_prefix>/*\n \n   Derby - Class org.apache.derbyTesting.functionTests.tests.jdbcapi.AssertEventCatcher\n\n   Licensed to the Apache Software Foundation (ASF) under one or more\n   contributor license agreements.  See the NOTICE file distributed with\n   this work for additional information regarding copyright ownership.\n   The ASF licenses this file to you under the Apache License, Version 2.0\n   (the \"License\"); you may not use this file except in compliance with\n   the License.  You may obtain a copy of the License at\n \n      http://www.apache.org/licenses/LICENSE-2.0\n \n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n \n */\n\npackage org.apache.derbyTesting.functionTests.tests.jdbcapi;\n\nimport javax.sql.*;\n\n<fim_suffix>public class AssertEventCatcher implements ConnectionEventListener\n{\n    private final int catcher;\n    //The following flags will indicate what kind of event was\n    //received by this listener\n    private boolean gotConnectionClosed = false;\n    private boolean gotConnectionErrorOccured = false;\n\n    public AssertEventCatcher(int which) {\n        catcher=which;\n    }\n\n    // ConnectionEventListener methods\n    public void connectionClosed(ConnectionEvent event)\n    {\n        gotConnectionClosed = true;\n    }\n\n    public void connectionErrorOccurred(ConnectionEvent event)\n    {\n        gotConnectionErrorOccured = true;\n    }\n\n    /**\n     * Tell the caller if we received Connection closed event\n     * @return true if received Connection closed event\n     */\n    public boolean didConnectionClosedEventHappen() \n    {\n    \treturn gotConnectionClosed;\n    }\n    \n    /**\n     * Tell the caller if we received Connection error event\n     * @return true if received Connection error event\n     */\n    public boolean didConnectionErrorEventHappen() \n    {\n    \treturn gotConnectionErrorOccured;\n    }\n    \n    /**\n     * Clear the event received flags for this listener.\n     */\n    public void resetState() \n    {\n    \tgotConnectionClosed = false;\n    \tgotConnectionErrorOccured = false;\n    }\n}<fim_middle>// class below has no smell\n"}