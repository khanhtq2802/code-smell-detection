{"text": "<fim_prefix>    public @org.apache.thrift.annotation.Nullable AccumuloSecurityException ouch2; // required\n    public @org.apache.thrift.annotation.Nullable NamespaceNotFoundException ouch3; // required\n    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */\n    public enum _Fields implements org.apache.thrift.TFieldIdEnum {\n      SUCCESS((short)0, \"success\"),\n      OUCH1((short)1, \"ouch1\"),\n      OUCH2((short)2, \"ouch2\"),\n      OUCH3((short)3, \"ouch3\");\n      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();\n      static {\n        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {\n          byName.put(field.getFieldName(), field);\n        }\n      }\n      /**\n       * Find the _Fields constant that matches fieldId, or null if its not found.\n       */\n      @org.apache.thrift.annotation.Nullable\n      public static _Fields findByThriftId(int fieldId) {\n        switch(fieldId) {\n          case 0: // SUCCESS\n            return SUCCESS;\n          case 1: // OUCH1\n            return OUCH1;\n          case 2: // OUCH2\n            return OUCH2;\n          case 3: // OUCH3\n            return OUCH3;\n          default:\n            return null;\n        }\n      }\n      /**\n       * Find the _Fields constant that matches fieldId, throwing an exception\n       * if it is not found.\n       */\n      public static _Fields findByThriftIdOrThrow(int fieldId) {\n        _Fields fields = findByThriftId(fieldId);\n        if (fields == null) throw new java.lang.IllegalArgumentException(\"Field \" + fieldId + \" doesn't exist!\");\n        return fields;\n      }\n      /**\n       * Find the _Fields constant that matches name, or null if its not found.\n       */\n      @org.apache.thrift.annotation.Nullable\n      public static _Fields findByName(java.lang.String name) {\n        return byName.get(name);\n      }\n      private final short _thriftId;\n      private final java.lang.String _fieldName;\n      _Fields(short thriftId, java.lang.String fieldName) {\n        _thriftId = thriftId;\n        _fieldName = fieldName;\n      }\n      public short getThriftFieldId() {\n        return _thriftId;\n      }\n      public java.lang.String getFieldName() {\n        return _fieldName;\n      }\n    }\n    // isset id assignments\n    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;\n    static {\n      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);\n      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData(\"success\", org.apache.thrift.TFieldRequirementType.DEFAULT, \n          new org.apache.thrift.meta_data.MapMetaData(org.apache.thrift.protocol.TType.MAP, \n              new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING), \n              new org.apache.thrift.meta_data.SetMetaData(org.apache.thrift.protocol.TType.SET, \n                  new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, IteratorScope.class)))));\n      tmpMap.put(_Fields.OUCH1, new org.apache.thrift.meta_data.FieldMetaData(\"ouch1\", org.apache.thrift.TFieldRequirementType.DEFAULT, \n          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, AccumuloException.class)));\n      tmpMap.put(_Fields.OUCH2, new org.apache.thrift.meta_data.FieldMetaData(\"ouch2\", org.apache.thrift.TFieldRequirementType.DEFAULT, \n          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, AccumuloSecurityException.class)));\n      tmpMap.put(_Fields.OUCH3, new org.apache.thrift.meta_data.FieldMetaData(\"ouch3\", org.apache.thrift.TFieldRequirementType.DEFAULT, \n          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, NamespaceNotFoundException.class)));\n      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);\n      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(listNamespaceIterators_result.class, metaDataMap);\n    }\n    public listNamespaceIterators_result() {\n    }\n    public listNamespaceIterators_result(\n      java.util.Map<java.lang.String,java.util.Set<IteratorScope>> success,\n      AccumuloException ouch1,\n      AccumuloSecurityException ouch2,\n      NamespaceNotFoundException ouch3)\n    {\n      this();\n      this.success = success;\n      this.ouch1 = ouch1;\n      this.ouch2 = ouch2;\n      this.ouch3 = ouch3;\n    }\n    /**\n     * Performs a deep copy on <i>other</i>.\n     */\n    public listNamespaceIterators_result(listNamespaceIterators_result other) {\n      if (other.isSetSuccess()) {\n        java.util.Map<java.lang.String,java.util.Set<IteratorScope>> __this__success = new java.util.HashMap<java.lang.String,java.util.Set<IteratorScope>>(other.success.size());\n        for (java.util.Map.Entry<java.lang.String, java.util.Set<IteratorScope>> other_element : other.success.entrySet()) {\n          java.lang.String other_element_key = other_element.getKey();\n          java.util.Set<IteratorScope> other_element_value = other_element.getValue();\n          java.lang.String __this__success_copy_key = other_element_key;\n          java.util.Set<IteratorScope> __this__success_copy_value = java.util.EnumSet.noneOf(IteratorScope.class);\n          for (IteratorScope other_element_value_element : other_element_value) {\n            __this__success_copy_value.add(other_element_value_element);\n          }\n          __this__success.put(__this__success_copy_key, __this__success_copy_value);\n        }\n        this.success = __this__success;\n      }\n      if (other.isSetOuch1()) {\n        this.ouch1 = new AccumuloException(other.ouch1);\n      }\n      if (other.isSetOuch2()) {\n        this.ouch2 = new AccumuloSecurityException(other.ouch2);\n      }\n      if (other.isSetOuch3()) {\n        this.ouch3 = new NamespaceNotFoundException(other.ouch3);\n      }\n    }\n    public listNamespaceIterators_result deepCopy() {\n      return new listNamespaceIterators_result(this);\n    }\n    @Override\n    public void clear() {\n      this.success = null;\n      this.ouch1 = null;\n      this.ouch2 = null;\n      this.ouch3 = null;\n    }\n    public int getSuccessSize() {\n      return (this.success == null) ? 0 : this.success.size();\n    }\n    public void putToSuccess(java.lang.String key, java.util.Set<IteratorScope> val) {\n      if (this.success == null) {\n        this.success = new java.util.HashMap<java.lang.String,java.util.Set<IteratorScope>>();\n      }\n      this.success.put(key, val);\n    }\n    @org.apache.thrift.annotation.Nullable\n    public java.util.Map<java.lang.String,java.util.Set<IteratorScope>> getSuccess() {\n      return this.success;\n    }\n    public listNamespaceIterators_result setSuccess(@org.apache.thrift.annotation.Nullable java.util.Map<java.lang.String,java.util.Set<IteratorScope>> success) {\n      this.success = success;\n      return this;\n    }\n    public void unsetSuccess() {\n      this.success = null;\n    }\n    /** Returns true if field success is set (has been assigned a value) and false otherwise */\n    public boolean isSetSuccess() {\n      return this.success != null;\n    }\n    public void setSuccessIsSet(boolean value) {\n      if (!value) {\n        this.success = null;\n      }\n    }\n    @org.apache.thrift.annotation.Nullable\n    public AccumuloException getOuch1() {\n      return this.ouch1;\n    }\n<fim_suffix>    public listNamespaceIterators_result setOuch1(@org.apache.thrift.annotation.Nullable AccumuloException ouch1) {\n      this.ouch1 = ouch1;\n      return this;\n    }<fim_middle>// function below has no smell\n"}