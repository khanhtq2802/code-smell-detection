{"text": "<fim_prefix>/*\n * Copyright (c) 2017-2018 Bosch Software Innovations GmbH.\n *\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v2.0\n * which accompanies this distribution, and is available at\n * https://www.eclipse.org/org/documents/epl-2.0/index.php\n *\n * SPDX-License-Identifier: EPL-2.0\n */\npackage org.eclipse.ditto.signals.commands.live.query;\n\nimport javax.annotation.Nonnull;\nimport javax.annotation.ParametersAreNonnullByDefault;\nimport javax.annotation.concurrent.Immutable;\n\nimport org.eclipse.ditto.model.base.headers.DittoHeaders;\nimport org.eclipse.ditto.signals.commands.base.Command;\nimport org.eclipse.ditto.signals.commands.things.query.RetrieveFeatures;\n\n/**\n * An immutable implementation of {@link RetrieveFeaturesLiveCommand}.\n */\n@ParametersAreNonnullByDefault\n@Immutable\nfinal class RetrieveFeaturesLiveCommandImpl extends AbstractQueryLiveCommand<RetrieveFeaturesLiveCommand,\n        RetrieveFeaturesLiveCommandAnswerBuilder> implements RetrieveFeaturesLiveCommand {\n\n    private RetrieveFeaturesLiveCommandImpl(final RetrieveFeatures command) {\n        super(command);\n    }\n\n    /**\n     * Returns an instance of {@code RetrieveFeaturesLiveCommandImpl}.\n     *\n     * @param command the command to base the result on.\n     * @return the instance.\n     * @throws NullPointerException if {@code command} is {@code null}.\n     * @throws ClassCastException if {@code command} is not an instance of {@link RetrieveFeatures}.\n     */\n    @Nonnull\n    public static RetrieveFeaturesLiveCommandImpl of(final Command<?> command) {\n        return new RetrieveFeaturesLiveCommandImpl((RetrieveFeatures) command);\n    }\n\n    @Override\n    public RetrieveFeaturesLiveCommand setDittoHeaders(final DittoHeaders dittoHeaders) {\n        return of(RetrieveFeatures.of(getThingId(), getSelectedFields().orElse(null), dittoHeaders));\n    }\n\n<fim_suffix>    @Nonnull\n    @Override\n    public RetrieveFeaturesLiveCommandAnswerBuilder answer() {\n        return RetrieveFeaturesLiveCommandAnswerBuilderImpl.newInstance(this);\n    }\n\n    @Nonnull\n    @Override\n    public String toString() {\n        return getClass().getSimpleName() + \"[\" + super.toString() + \"]\";\n    }\n\n}<fim_middle>// function below has no smell\n"}