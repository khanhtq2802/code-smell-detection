{"text": "<fim_prefix>import java.net.URI;\nimport java.util.ArrayList;\nimport java.util.HashMap;\nimport java.util.HashSet;\nimport java.util.List;\nimport java.util.Map;\nimport java.util.UUID;\nimport com.fasterxml.jackson.core.type.TypeReference;\nimport com.fasterxml.jackson.databind.node.ObjectNode;\nimport com.microsoft.alm.client.HttpMethod;\nimport com.microsoft.alm.client.model.NameValueCollection;\nimport com.microsoft.alm.client.VssHttpClientBase;\nimport com.microsoft.alm.client.VssMediaTypes;\nimport com.microsoft.alm.client.VssRestClientHandler;\nimport com.microsoft.alm.client.VssRestRequest;\nimport com.microsoft.alm.visualstudio.services.profile.Avatar;\nimport com.microsoft.alm.visualstudio.services.profile.CreateProfileContext;\nimport com.microsoft.alm.visualstudio.services.profile.GeoRegion;\nimport com.microsoft.alm.visualstudio.services.profile.model.RemoteProfile;\nimport com.microsoft.alm.visualstudio.services.profile.Profile;\nimport com.microsoft.alm.visualstudio.services.profile.ProfileAttribute;\nimport com.microsoft.alm.visualstudio.services.profile.ProfileAttributeBase;\nimport com.microsoft.alm.visualstudio.services.profile.ProfileRegions;\nimport com.microsoft.alm.visualstudio.services.webapi.ApiResourceVersion;\nimport com.microsoft.alm.visualstudio.services.webapi.VssJsonCollectionWrapper;\npublic abstract class ProfileHttpClientBase\n    extends VssHttpClientBase {\n    private final static Map<String, Class<? extends Exception>> TRANSLATED_EXCEPTIONS;\n    static {\n        TRANSLATED_EXCEPTIONS = new HashMap<String, Class<? extends Exception>>();\n    }\n    /**\n    * Create a new instance of ProfileHttpClientBase\n    *\n    * @param clientHandler\n    *            a DefaultRestClientHandler initialized with an instance of a JAX-RS Client implementation or\n    *            a TEERestClientHamdler initialized with TEE HTTP client implementation\n    * @param baseUrl\n    *            a TFS services URL\n    */\n    protected ProfileHttpClientBase(final VssRestClientHandler clientHandler, final URI baseUrl) {\n        super(clientHandler, baseUrl);\n    }\n    @Override\n    protected Map<String, Class<? extends Exception>> getTranslatedExceptions() {\n        return TRANSLATED_EXCEPTIONS;\n    }\n    /** \n     * [Preview API 3.1-preview.2]\n     * \n     * @param id \n     *            \n     * @param descriptor \n     *            \n     */\n    public void deleteProfileAttribute(\n        final String id, \n        final String descriptor) { \n        final UUID locationId = UUID.fromString(\"1392b6ac-d511-492e-af5b-2263e5545a5d\"); //$NON-NLS-1$\n        final ApiResourceVersion apiVersion = new ApiResourceVersion(\"3.1-preview.2\"); //$NON-NLS-1$\n        final Map<String, Object> routeValues = new HashMap<String, Object>();\n        routeValues.put(\"id\", id); //$NON-NLS-1$\n        final NameValueCollection queryParameters = new NameValueCollection();\n        queryParameters.addIfNotEmpty(\"descriptor\", descriptor); //$NON-NLS-1$\n        final VssRestRequest httpRequest = super.createRequest(HttpMethod.DELETE,\n                                                               locationId,\n                                                               routeValues,\n                                                               apiVersion,\n                                                               queryParameters,\n                                                               VssMediaTypes.APPLICATION_JSON_TYPE);\n        super.sendRequest(httpRequest);\n    }\n    /** \n     * [Preview API 3.1-preview.2]\n     * \n     * @param id \n     *            \n     * @param descriptor \n     *            \n     * @return ProfileAttribute\n     */\n    public ProfileAttribute getProfileAttribute(\n        final String id, \n        final String descriptor) { \n        final UUID locationId = UUID.fromString(\"1392b6ac-d511-492e-af5b-2263e5545a5d\"); //$NON-NLS-1$\n        final ApiResourceVersion apiVersion = new ApiResourceVersion(\"3.1-preview.2\"); //$NON-NLS-1$\n        final Map<String, Object> routeValues = new HashMap<String, Object>();\n        routeValues.put(\"id\", id); //$NON-NLS-1$\n        final NameValueCollection queryParameters = new NameValueCollection();\n        queryParameters.addIfNotEmpty(\"descriptor\", descriptor); //$NON-NLS-1$\n        final VssRestRequest httpRequest = super.createRequest(HttpMethod.GET,\n                                                               locationId,\n                                                               routeValues,\n                                                               apiVersion,\n                                                               queryParameters,\n                                                               VssMediaTypes.APPLICATION_JSON_TYPE);\n        return super.sendRequest(httpRequest, ProfileAttribute.class);\n    }\n    /** \n     * [Preview API 3.1-preview.2]\n     * \n     * @param id \n     *            \n     * @param partition \n     *            \n     * @param modifiedSince \n     *            \n     * @param modifiedAfterRevision \n     *            \n     * @param withCoreAttributes \n     *            \n     * @param coreAttributes \n     *            \n     * @return ArrayList&lt;ProfileAttribute&gt;\n     */\n    public ArrayList<ProfileAttribute> getProfileAttributes(\n        final String id, \n        final String partition, \n        final String modifiedSince, \n        final String modifiedAfterRevision, \n        final Boolean withCoreAttributes, \n        final String coreAttributes) { \n        final UUID locationId = UUID.fromString(\"1392b6ac-d511-492e-af5b-2263e5545a5d\"); //$NON-NLS-1$\n        final ApiResourceVersion apiVersion = new ApiResourceVersion(\"3.1-preview.2\"); //$NON-NLS-1$\n        final Map<String, Object> routeValues = new HashMap<String, Object>();\n        routeValues.put(\"id\", id); //$NON-NLS-1$\n        final NameValueCollection queryParameters = new NameValueCollection();\n        queryParameters.addIfNotEmpty(\"partition\", partition); //$NON-NLS-1$\n        queryParameters.addIfNotEmpty(\"modifiedSince\", modifiedSince); //$NON-NLS-1$\n        queryParameters.addIfNotEmpty(\"modifiedAfterRevision\", modifiedAfterRevision); //$NON-NLS-1$\n        queryParameters.addIfNotNull(\"withCoreAttributes\", withCoreAttributes); //$NON-NLS-1$\n        queryParameters.addIfNotEmpty(\"coreAttributes\", coreAttributes); //$NON-NLS-1$\n        final VssRestRequest httpRequest = super.createRequest(HttpMethod.GET,\n                                                               locationId,\n                                                               routeValues,\n                                                               apiVersion,\n                                                               queryParameters,\n                                                               VssMediaTypes.APPLICATION_JSON_TYPE);\n        return super.sendRequest(httpRequest, new TypeReference<ArrayList<ProfileAttribute>>() {});\n    }\n    /** \n     * [Preview API 3.1-preview.2]\n     * \n     * @param container \n     *            \n     * @param id \n     *            \n     * @param descriptor \n     *            \n     */\n    public void setProfileAttribute(\n        final ObjectNode container, \n        final String id, \n        final String descriptor) { \n        final UUID locationId = UUID.fromString(\"1392b6ac-d511-492e-af5b-2263e5545a5d\"); //$NON-NLS-1$\n        final ApiResourceVersion apiVersion = new ApiResourceVersion(\"3.1-preview.2\"); //$NON-NLS-1$\n        final Map<String, Object> routeValues = new HashMap<String, Object>();\n        routeValues.put(\"id\", id); //$NON-NLS-1$\n        final NameValueCollection queryParameters = new NameValueCollection();\n        queryParameters.addIfNotEmpty(\"descriptor\", descriptor); //$NON-NLS-1$\n        final VssRestRequest httpRequest = super.createRequest(HttpMethod.PUT,\n                                                               locationId,\n                                                               routeValues,\n                                                               apiVersion,\n                                                               container,\n                                                               VssMediaTypes.APPLICATION_JSON_TYPE,\n                                                               queryParameters,\n                                                               VssMediaTypes.APPLICATION_JSON_TYPE);\n        super.sendRequest(httpRequest);\n    }\n    /** \n     * [Preview API 3.1-preview.2]\n     * \n     * @param attributesCollection \n     *            \n     * @param id \n     *            \n     */\n<fim_suffix>    public void setProfileAttributes(\n        final VssJsonCollectionWrapper<List<ProfileAttributeBase<Object>>> attributesCollection, \n        final String id) { \n        final UUID locationId = UUID.fromString(\"1392b6ac-d511-492e-af5b-2263e5545a5d\"); //$NON-NLS-1$\n        final ApiResourceVersion apiVersion = new ApiResourceVersion(\"3.1-preview.2\"); //$NON-NLS-1$\n        final Map<String, Object> routeValues = new HashMap<String, Object>();\n        routeValues.put(\"id\", id); //$NON-NLS-1$\n        final VssRestRequest httpRequest = super.createRequest(HttpMethod.PATCH,\n                                                               locationId,\n                                                               routeValues,\n                                                               apiVersion,\n                                                               attributesCollection,\n                                                               VssMediaTypes.APPLICATION_JSON_TYPE,\n                                                               VssMediaTypes.APPLICATION_JSON_TYPE);\n        super.sendRequest(httpRequest);\n    }<fim_middle>// function below has no smell\n"}