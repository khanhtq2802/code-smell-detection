{"text": "<fim_prefix>\n<fim_suffix>  private static class SpoutStatsTupleScheme extends org.apache.storm.thrift.scheme.TupleScheme<SpoutStats> {\n    @Override\n    public void write(org.apache.storm.thrift.protocol.TProtocol prot, SpoutStats struct) throws org.apache.storm.thrift.TException {\n      org.apache.storm.thrift.protocol.TTupleProtocol oprot = (org.apache.storm.thrift.protocol.TTupleProtocol) prot;\n      {\n        oprot.writeI32(struct.acked.size());\n        for (java.util.Map.Entry<java.lang.String, java.util.Map<java.lang.String,java.lang.Long>> _iter290 : struct.acked.entrySet())\n        {\n          oprot.writeString(_iter290.getKey());\n          {\n            oprot.writeI32(_iter290.getValue().size());\n            for (java.util.Map.Entry<java.lang.String, java.lang.Long> _iter291 : _iter290.getValue().entrySet())\n            {\n              oprot.writeString(_iter291.getKey());\n              oprot.writeI64(_iter291.getValue());\n            }\n          }\n        }\n      }\n      {\n        oprot.writeI32(struct.failed.size());\n        for (java.util.Map.Entry<java.lang.String, java.util.Map<java.lang.String,java.lang.Long>> _iter292 : struct.failed.entrySet())\n        {\n          oprot.writeString(_iter292.getKey());\n          {\n            oprot.writeI32(_iter292.getValue().size());\n            for (java.util.Map.Entry<java.lang.String, java.lang.Long> _iter293 : _iter292.getValue().entrySet())\n            {\n              oprot.writeString(_iter293.getKey());\n              oprot.writeI64(_iter293.getValue());\n            }\n          }\n        }\n      }\n      {\n        oprot.writeI32(struct.complete_ms_avg.size());\n        for (java.util.Map.Entry<java.lang.String, java.util.Map<java.lang.String,java.lang.Double>> _iter294 : struct.complete_ms_avg.entrySet())\n        {\n          oprot.writeString(_iter294.getKey());\n          {\n            oprot.writeI32(_iter294.getValue().size());\n            for (java.util.Map.Entry<java.lang.String, java.lang.Double> _iter295 : _iter294.getValue().entrySet())\n            {\n              oprot.writeString(_iter295.getKey());\n              oprot.writeDouble(_iter295.getValue());\n            }\n          }\n        }\n      }\n    }\n    @Override\n    public void read(org.apache.storm.thrift.protocol.TProtocol prot, SpoutStats struct) throws org.apache.storm.thrift.TException {\n      org.apache.storm.thrift.protocol.TTupleProtocol iprot = (org.apache.storm.thrift.protocol.TTupleProtocol) prot;\n      {\n        org.apache.storm.thrift.protocol.TMap _map296 = new org.apache.storm.thrift.protocol.TMap(org.apache.storm.thrift.protocol.TType.STRING, org.apache.storm.thrift.protocol.TType.MAP, iprot.readI32());\n        struct.acked = new java.util.HashMap<java.lang.String,java.util.Map<java.lang.String,java.lang.Long>>(2*_map296.size);\n        @org.apache.storm.thrift.annotation.Nullable java.lang.String _key297;\n        @org.apache.storm.thrift.annotation.Nullable java.util.Map<java.lang.String,java.lang.Long> _val298;\n        for (int _i299 = 0; _i299 < _map296.size; ++_i299)\n        {\n          _key297 = iprot.readString();\n          {\n            org.apache.storm.thrift.protocol.TMap _map300 = new org.apache.storm.thrift.protocol.TMap(org.apache.storm.thrift.protocol.TType.STRING, org.apache.storm.thrift.protocol.TType.I64, iprot.readI32());\n            _val298 = new java.util.HashMap<java.lang.String,java.lang.Long>(2*_map300.size);\n            @org.apache.storm.thrift.annotation.Nullable java.lang.String _key301;\n            long _val302;\n            for (int _i303 = 0; _i303 < _map300.size; ++_i303)\n            {\n              _key301 = iprot.readString();\n              _val302 = iprot.readI64();\n              _val298.put(_key301, _val302);\n            }\n          }\n          struct.acked.put(_key297, _val298);\n        }\n      }\n      struct.set_acked_isSet(true);\n      {\n        org.apache.storm.thrift.protocol.TMap _map304 = new org.apache.storm.thrift.protocol.TMap(org.apache.storm.thrift.protocol.TType.STRING, org.apache.storm.thrift.protocol.TType.MAP, iprot.readI32());\n        struct.failed = new java.util.HashMap<java.lang.String,java.util.Map<java.lang.String,java.lang.Long>>(2*_map304.size);\n        @org.apache.storm.thrift.annotation.Nullable java.lang.String _key305;\n        @org.apache.storm.thrift.annotation.Nullable java.util.Map<java.lang.String,java.lang.Long> _val306;\n        for (int _i307 = 0; _i307 < _map304.size; ++_i307)\n        {\n          _key305 = iprot.readString();\n          {\n            org.apache.storm.thrift.protocol.TMap _map308 = new org.apache.storm.thrift.protocol.TMap(org.apache.storm.thrift.protocol.TType.STRING, org.apache.storm.thrift.protocol.TType.I64, iprot.readI32());\n            _val306 = new java.util.HashMap<java.lang.String,java.lang.Long>(2*_map308.size);\n            @org.apache.storm.thrift.annotation.Nullable java.lang.String _key309;\n            long _val310;\n            for (int _i311 = 0; _i311 < _map308.size; ++_i311)\n            {\n              _key309 = iprot.readString();\n              _val310 = iprot.readI64();\n              _val306.put(_key309, _val310);\n            }\n          }\n          struct.failed.put(_key305, _val306);\n        }\n      }\n      struct.set_failed_isSet(true);\n      {\n        org.apache.storm.thrift.protocol.TMap _map312 = new org.apache.storm.thrift.protocol.TMap(org.apache.storm.thrift.protocol.TType.STRING, org.apache.storm.thrift.protocol.TType.MAP, iprot.readI32());\n        struct.complete_ms_avg = new java.util.HashMap<java.lang.String,java.util.Map<java.lang.String,java.lang.Double>>(2*_map312.size);\n        @org.apache.storm.thrift.annotation.Nullable java.lang.String _key313;\n        @org.apache.storm.thrift.annotation.Nullable java.util.Map<java.lang.String,java.lang.Double> _val314;\n        for (int _i315 = 0; _i315 < _map312.size; ++_i315)\n        {\n          _key313 = iprot.readString();\n          {\n            org.apache.storm.thrift.protocol.TMap _map316 = new org.apache.storm.thrift.protocol.TMap(org.apache.storm.thrift.protocol.TType.STRING, org.apache.storm.thrift.protocol.TType.DOUBLE, iprot.readI32());\n            _val314 = new java.util.HashMap<java.lang.String,java.lang.Double>(2*_map316.size);\n            @org.apache.storm.thrift.annotation.Nullable java.lang.String _key317;\n            double _val318;<fim_middle>// class below has no smell\n"}