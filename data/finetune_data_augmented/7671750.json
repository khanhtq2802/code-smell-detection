{"text": "<fim_prefix>/*\n * Tencent is pleased to support the open source community by making\n * Tencent GT (Version 2.4 and subsequent versions) available.\n *\n * Notwithstanding anything to the contrary herein, any previous version\n * of Tencent GT shall not be subject to the license hereunder.\n * All right, title, and interest, including all intellectual property rights,\n * in and to the previous version of Tencent GT (including any and all copies thereof)\n * shall be owned and retained by Tencent and subject to the license under the\n * Tencent GT End User License Agreement (http://gt.qq.com/wp-content/EULA_EN.html).\n * \n * Copyright (C) 2015 THL A29 Limited, a Tencent company. All rights reserved.\n * \n * Licensed under the MIT License (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of the License at\n * \n * http://opensource.org/licenses/MIT\n * \n * Unless required by applicable law or agreed to in writing, software distributed\n * under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations under the License.\n */\npackage com.tencent.wstt.gt.activity;\nimport java.lang.reflect.Field;\nimport java.util.ArrayList;\nimport java.util.List;\nimport com.tencent.wstt.gt.GTApp;\nimport com.tencent.wstt.gt.OutPara;\nimport com.tencent.wstt.gt.R;\nimport com.tencent.wstt.gt.api.utils.Env;\nimport com.tencent.wstt.gt.internal.GTMemoryDaemonHelper;\nimport com.tencent.wstt.gt.log.GTGWInternal;\nimport com.tencent.wstt.gt.log.GWSaveEntry;\nimport com.tencent.wstt.gt.manager.OpPerfBridge;\nimport com.tencent.wstt.gt.manager.OpUIManager;\nimport com.tencent.wstt.gt.manager.ParamConst;\nimport com.tencent.wstt.gt.proInfo.floatView.GTMemHelperFloatview;\nimport com.tencent.wstt.gt.service.GTServiceController;\nimport com.tencent.wstt.gt.ui.model.TagTimeEntry;\nimport com.tencent.wstt.gt.utils.ToastUtil;\nimport android.app.AlertDialog;\nimport android.app.AlertDialog.Builder;\nimport android.app.ProgressDialog;\nimport android.content.DialogInterface;\nimport android.content.Intent;\nimport android.os.Bundle;\nimport android.os.Handler;\nimport android.os.Message;\nimport android.support.v4.app.ListFragment;\nimport android.util.Pair;\nimport android.view.LayoutInflater;\nimport android.view.MotionEvent;\nimport android.view.View;\nimport android.view.View.OnClickListener;\nimport android.view.View.OnTouchListener;\nimport android.view.ViewGroup;\nimport android.widget.AbsListView;\nimport android.widget.AbsListView.OnScrollListener;\nimport android.widget.Button;\nimport android.widget.EditText;\nimport android.widget.ImageButton;\nimport android.widget.ListView;\nimport android.widget.TextView;\npublic class GTParamOutFragment extends ListFragment implements OnClickListener, OnTouchListener, OnScrollListener {\n\tprivate Button btn_gw_on;\n\tprivate Button btn_gw_off;\n\tprivate ImageButton save;\n\tprivate ImageButton cleardata;\n\tprivate EditText et_savePath1;\n\tprivate EditText et_savePath2;\n\tprivate EditText et_savePath3;\n\tprivate EditText et_saveTestDesc;\n\tprivate AlertDialog gwhis_save;\n\tprivate ProgressDialog proDialog;\n\tprivate TextView invalid_alarm;\n\tprivate GTParamOutListAdapter outparam_adapter;\n\tprivate List<String> listProjectName = new ArrayList<String>();\n\tprivate List<Pair<String, String>> listProjectPair = new ArrayList<Pair<String, String>>();\n\tPair<String, String> pairSelSave2Cloud = null;\n\tpublic static boolean cb_all_status = false; // true\u4e3a\u5168\u9009 false\u4e3a\u5168\u53d6\u6d88\n\tstatic final String PRODUCT_ID = \"upload_product_id\";\n\tstatic final String PRODUCT_NAME = \"upload_product_name\";\n\tstatic final String PATH1 = \"upload_product_version\";\n\tstatic final String PATH2 = \"upload_feature\";\n\tstatic final String PATH3 = \"upload_path3\";\n\tstatic final String UIN = \"qq_uin\";\n\tstatic final String S_KEY = \"qq_sk\";\n\tstatic final String P_S_KEY = \"qq_psk\";\n\tstatic final String LS_KEY = \"qq_lsk\";\n\tstatic final String SRC = \"srcFolder\";\n\tstatic final String FILE_ARRAY = \"file_array\";\n\t// \u663e\u793a\u83ca\u82b1\n\tprivate void showProDialog(String title, String message)\n\t{\n\t\tproDialog = ProgressDialog.show(this.getActivity(), title, message, true, true);\n\t}\n\t// \u53d6\u6d88\u83ca\u82b1\n\tprivate void dismissProDialog()\n\t{\n\t\tif (null != proDialog)\n\t\t{\n\t\t\tproDialog.dismiss();\n\t\t\tproDialog = null;\n\t\t}\n\t}\n\t// \u8d1f\u8d23\u5237\u65b0UI\u7684Handler\n\tprivate static Handler refreshHandler = new Handler();\n\tpublic GTParamOutFragment() {\n\t\tsuper();\n\t\tGTApp.setOpHandler(opHandler);\n\t}\n<fim_suffix>\t@Override\n\tpublic void onCreate(Bundle savedInstanceState) {\n\t\tsuper.onCreate(savedInstanceState);\n\t\tsetHasOptionsMenu(true);\n\t\t// // \u5168\u5c40\u6267\u884c\u4e00\u6b21\u5373\u53ef\n\t\t// OpUIManager.getDefaultOutputParamList();\n\t}\n\t@Override\n\tpublic void onResume() {\n\t\tsuper.onResume();\n\t\tdoResume();\n\t\trefreshHandler.post(opRefreshRunnable);\n\t\tgetListView().setOnTouchListener(this);\n\t\tgetListView().setOnScrollListener(this);\n\t}\n\tprivate void doResume() {\n\t\tinitGwOnOff();\n\t\tOpUIManager.refreshUIOpList();\n\t\toutparam_adapter = new GTParamOutListAdapter(getActivity(), OpUIManager.list_op);\n\t\t// 2.2\u4e2d\u6bcf\u6b21\u8fdb\u9875\u9762\u90fd\u7f6e\u9876\u4f53\u9a8c\u4e0d\u597d\uff0c\u56fa\u53d6\u6d88\u8fd9\u91cc\u7684AUT\u53c2\u6570\u7f6e\u9876\n\t\t// OpUIManager.setAUTitemTop(outparam_adapter);\n\t\tsetListAdapter(outparam_adapter);\n\t\toutparam_adapter.notifyDataSetChanged();\n\t}\n\t@Override\n\tpublic void onPause() {\n\t\tsuper.onPause();\n\t\trefreshHandler.removeCallbacksAndMessages(null);\n\t}\n\tpublic View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {\n\t\tView layout = inflater.inflate(R.layout.gt_param_out, container, false);\n\t\tbtn_gw_on = (Button) layout.findViewById(R.id.btn_monitor);\n\t\tbtn_gw_off = (Button) layout.findViewById(R.id.btn_monitor_stop);\n\t\tsave = (ImageButton) layout.findViewById(R.id.gwdata_save);\n\t\tcleardata = (ImageButton) layout.findViewById(R.id.gwdata_delete);\n\t\tbtn_gw_on.setOnClickListener(this);\n\t\tbtn_gw_off.setOnClickListener(this);\n\t\tsave.setOnClickListener(this);\n\t\tcleardata.setOnClickListener(this);\n\t\t// \u4fdd\u5b58\u5bf9\u8bdd\u6846\n\t\tView rl_save = inflater.inflate(R.layout.gt_dailog_save_gw, null, false);\n\t\tImageButton btn_cleanSavePath = (ImageButton) rl_save.findViewById(R.id.save_clean);\n\t\tbtn_cleanSavePath.setOnClickListener(new OnClickListener() {\n\t\t\t@Override\n\t\t\tpublic void onClick(View v) {\n\t\t\t\tet_savePath3.setText(\"\");\n\t\t\t}\n\t\t});\n\t\tet_savePath1 = (EditText) rl_save.findViewById(R.id.save_editor_folder_parent1);\n\t\tet_savePath2 = (EditText) rl_save.findViewById(R.id.save_editor_folder_parent2);\n\t\tet_savePath3 = (EditText) rl_save.findViewById(R.id.save_editor);\n\t\tet_saveTestDesc = (EditText) rl_save.findViewById(R.id.save_editor_desc);\n\t\tinvalid_alarm = (TextView) rl_save.findViewById(R.id.invalid_alarm);<fim_middle>// function below has no smell\n"}