{"text": "<fim_prefix>/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.apache.ambari.server.api.services;\n\nimport javax.servlet.http.HttpServletRequest;\nimport javax.ws.rs.GET;\nimport javax.ws.rs.Path;\nimport javax.ws.rs.Produces;\nimport javax.ws.rs.core.Context;\nimport javax.ws.rs.core.Response;\n\nimport org.apache.ambari.annotations.ApiIgnore;\nimport org.apache.ambari.server.StaticallyInject;\nimport org.apache.ambari.server.audit.AuditLogger;\nimport org.apache.ambari.server.audit.event.LogoutAuditEvent;\nimport org.apache.ambari.server.security.authorization.AuthorizationHelper;\nimport org.apache.ambari.server.utils.RequestUtils;\nimport org.springframework.security.core.context.SecurityContextHolder;\n\nimport com.google.inject.Inject;\n\n/**\n * Service performing logout of current user\n */\n<fim_suffix>@StaticallyInject\n@Path(\"/logout\")\npublic class LogoutService {\n\n  @Inject\n  private static AuditLogger auditLogger;\n\n  @GET @ApiIgnore // until documented\n  @Produces(\"text/plain\")\n  public Response performLogout(@Context HttpServletRequest servletRequest) {\n    auditLog(servletRequest);\n    SecurityContextHolder.clearContext();\n    servletRequest.getSession().invalidate();\n    return Response.status(Response.Status.OK).build();\n  }\n\n  /**\n   * Creates and send and audit log event that the user has successfully logged out\n   * @param servletRequest\n   */\n  private void auditLog(HttpServletRequest servletRequest) {\n    if(!auditLogger.isEnabled()) {\n      return;\n    }\n    LogoutAuditEvent logoutEvent = LogoutAuditEvent.builder()\n      .withTimestamp(System.currentTimeMillis())\n      .withRemoteIp(RequestUtils.getRemoteAddress(servletRequest))\n      .withUserName(AuthorizationHelper.getAuthenticatedName())\n      .withProxyUserName(AuthorizationHelper.getProxyUserName())\n      .build();\n    auditLogger.log(logoutEvent);\n  }\n}<fim_middle>// class below has no smell\n"}