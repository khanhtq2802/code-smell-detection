{"text": "<fim_prefix>        public Builder copy(AutonomousDatabase o) {\n            Builder copiedBuilder =\n                    id(o.getId())\n                            .compartmentId(o.getCompartmentId())\n                            .lifecycleState(o.getLifecycleState())\n                            .lifecycleDetails(o.getLifecycleDetails())\n                            .dbName(o.getDbName())\n                            .cpuCoreCount(o.getCpuCoreCount())\n                            .dataStorageSizeInTBs(o.getDataStorageSizeInTBs())\n                            .timeCreated(o.getTimeCreated())\n                            .displayName(o.getDisplayName())\n                            .serviceConsoleUrl(o.getServiceConsoleUrl())\n                            .connectionStrings(o.getConnectionStrings())\n                            .licenseModel(o.getLicenseModel())\n                            .usedDataStorageSizeInTBs(o.getUsedDataStorageSizeInTBs())\n                            .freeformTags(o.getFreeformTags())\n                            .definedTags(o.getDefinedTags())\n                            .dbVersion(o.getDbVersion())\n                            .dbWorkload(o.getDbWorkload());\n            copiedBuilder.__explicitlySet__.retainAll(o.__explicitlySet__);\n            return copiedBuilder;\n        }\n    }\n    /**\n     * Create a new builder.\n     */\n    public static Builder builder() {\n        return new Builder();\n    }\n    /**\n     * The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the Autonomous Database.\n     **/\n    @com.fasterxml.jackson.annotation.JsonProperty(\"id\")\n    String id;\n    /**\n     * The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the compartment.\n     **/\n    @com.fasterxml.jackson.annotation.JsonProperty(\"compartmentId\")\n    String compartmentId;\n    /**\n     * The current state of the database.\n     **/\n    @lombok.extern.slf4j.Slf4j\n    public enum LifecycleState {\n        Provisioning(\"PROVISIONING\"),\n        Available(\"AVAILABLE\"),\n        Stopping(\"STOPPING\"),\n        Stopped(\"STOPPED\"),\n        Starting(\"STARTING\"),\n        Terminating(\"TERMINATING\"),\n        Terminated(\"TERMINATED\"),\n        Unavailable(\"UNAVAILABLE\"),\n        RestoreInProgress(\"RESTORE_IN_PROGRESS\"),\n        RestoreFailed(\"RESTORE_FAILED\"),\n        BackupInProgress(\"BACKUP_IN_PROGRESS\"),\n        ScaleInProgress(\"SCALE_IN_PROGRESS\"),\n        AvailableNeedsAttention(\"AVAILABLE_NEEDS_ATTENTION\"),\n        /**\n         * This value is used if a service returns a value for this enum that is not recognized by this\n         * version of the SDK.\n         */\n        UnknownEnumValue(null);\n        private final String value;\n        private static java.util.Map<String, LifecycleState> map;\n        static {\n            map = new java.util.HashMap<>();\n            for (LifecycleState v : LifecycleState.values()) {\n                if (v != UnknownEnumValue) {\n                    map.put(v.getValue(), v);\n                }\n            }\n        }\n        LifecycleState(String value) {\n            this.value = value;\n        }\n        @com.fasterxml.jackson.annotation.JsonValue\n        public String getValue() {\n            return value;\n        }\n        @com.fasterxml.jackson.annotation.JsonCreator\n        public static LifecycleState create(String key) {\n            if (map.containsKey(key)) {\n                return map.get(key);\n            }\n            LOG.warn(\n                    \"Received unknown value '{}' for enum 'LifecycleState', returning UnknownEnumValue\",\n                    key);\n            return UnknownEnumValue;\n        }\n    };\n    /**\n     * The current state of the database.\n     **/\n    @com.fasterxml.jackson.annotation.JsonProperty(\"lifecycleState\")\n    LifecycleState lifecycleState;\n    /**\n     * Information about the current lifecycle state.\n     **/\n    @com.fasterxml.jackson.annotation.JsonProperty(\"lifecycleDetails\")\n    String lifecycleDetails;\n    /**\n     * The database name.\n     **/\n    @com.fasterxml.jackson.annotation.JsonProperty(\"dbName\")\n    String dbName;\n    /**\n     * The number of CPU cores to be made available to the database.\n     **/\n    @com.fasterxml.jackson.annotation.JsonProperty(\"cpuCoreCount\")\n    Integer cpuCoreCount;\n    /**\n     * The quantity of data in the database, in terabytes.\n     **/\n    @com.fasterxml.jackson.annotation.JsonProperty(\"dataStorageSizeInTBs\")\n    Integer dataStorageSizeInTBs;\n    /**\n     * The date and time the database was created.\n     **/\n    @com.fasterxml.jackson.annotation.JsonProperty(\"timeCreated\")\n    java.util.Date timeCreated;\n    /**\n     * The user-friendly name for the Autonomous Database. The name does not have to be unique.\n     **/\n    @com.fasterxml.jackson.annotation.JsonProperty(\"displayName\")\n    String displayName;\n    /**\n     * The URL of the Service Console for the Autonomous Database.\n     **/\n    @com.fasterxml.jackson.annotation.JsonProperty(\"serviceConsoleUrl\")\n    String serviceConsoleUrl;\n    /**\n     * The connection string used to connect to the Autonomous Database. The username for the Service Console is ADMIN. Use the password you entered when creating the Autonomous Database for the password value.\n     **/\n    @com.fasterxml.jackson.annotation.JsonProperty(\"connectionStrings\")\n    AutonomousDatabaseConnectionStrings connectionStrings;\n    /**\n     * The Oracle license model that applies to the Oracle Autonomous Database. The default is BRING_YOUR_OWN_LICENSE.\n     *\n     **/\n    @lombok.extern.slf4j.Slf4j\n    public enum LicenseModel {\n        LicenseIncluded(\"LICENSE_INCLUDED\"),\n        BringYourOwnLicense(\"BRING_YOUR_OWN_LICENSE\"),\n        /**\n         * This value is used if a service returns a value for this enum that is not recognized by this\n         * version of the SDK.\n         */\n        UnknownEnumValue(null);\n        private final String value;\n        private static java.util.Map<String, LicenseModel> map;\n        static {\n            map = new java.util.HashMap<>();\n            for (LicenseModel v : LicenseModel.values()) {\n                if (v != UnknownEnumValue) {\n                    map.put(v.getValue(), v);\n                }\n            }\n        }\n        LicenseModel(String value) {\n            this.value = value;\n        }\n        @com.fasterxml.jackson.annotation.JsonValue\n        public String getValue() {\n            return value;\n        }\n        @com.fasterxml.jackson.annotation.JsonCreator\n        public static LicenseModel create(String key) {\n            if (map.containsKey(key)) {\n                return map.get(key);\n            }\n            LOG.warn(\n                    \"Received unknown value '{}' for enum 'LicenseModel', returning UnknownEnumValue\",\n                    key);\n            return UnknownEnumValue;\n        }\n    };\n    /**\n     * The Oracle license model that applies to the Oracle Autonomous Database. The default is BRING_YOUR_OWN_LICENSE.\n     *\n     **/\n    @com.fasterxml.jackson.annotation.JsonProperty(\"licenseModel\")\n    LicenseModel licenseModel;\n    /**\n     * The amount of storage that has been used, in terabytes.\n     **/\n    @com.fasterxml.jackson.annotation.JsonProperty(\"usedDataStorageSizeInTBs\")\n    Integer usedDataStorageSizeInTBs;\n    /**\n     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace.\n     * For more information, see [Resource Tags](https://docs.cloud.oracle.com/Content/General/Concepts/resourcetags.htm).\n     * <p>\n     * Example: `{\\\"Department\\\": \\\"Finance\\\"}`\n     *\n     **/\n    @com.fasterxml.jackson.annotation.JsonProperty(\"freeformTags\")\n    java.util.Map<String, String> freeformTags;\n    /**\n     * Defined tags for this resource. Each key is predefined and scoped to a namespace.\n     * For more information, see [Resource Tags](https://docs.cloud.oracle.com/Content/General/Concepts/resourcetags.htm).\n     * <p>\n     * Example: `{\\\"Operations\\\": {\\\"CostCenter\\\": \\\"42\\\"}}`\n     *\n     **/\n    @com.fasterxml.jackson.annotation.JsonProperty(\"definedTags\")\n    java.util.Map<String, java.util.Map<String, Object>> definedTags;\n    /**\n     * A valid Oracle Database version for Autonomous Database.\n     **/\n    @com.fasterxml.jackson.annotation.JsonProperty(\"dbVersion\")\n    String dbVersion;\n    /**\n     * The Autonomous Database workload type.\n     **/\n    @lombok.extern.slf4j.Slf4j\n    public enum DbWorkload {\n        Oltp(\"OLTP\"),\n        Dw(\"DW\"),\n        /**\n         * This value is used if a service returns a value for this enum that is not recognized by this\n         * version of the SDK.\n         */\n        UnknownEnumValue(null);\n        private final String value;\n        private static java.util.Map<String, DbWorkload> map;\n        static {\n            map = new java.util.HashMap<>();\n            for (DbWorkload v : DbWorkload.values()) {\n                if (v != UnknownEnumValue) {\n                    map.put(v.getValue(), v);\n                }\n            }\n        }\n        DbWorkload(String value) {\n            this.value = value;\n        }\n<fim_suffix>        @com.fasterxml.jackson.annotation.JsonValue\n        public String getValue() {\n            return value;\n        }<fim_middle>// function below has no smell\n"}