{"text": "<fim_prefix>/*\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.jclouds.ultradns.ws.xml;\n\nimport static com.google.common.base.Preconditions.checkNotNull;\nimport static org.jclouds.util.SaxUtils.cleanseAttributes;\n\nimport java.util.Map;\n\nimport org.jclouds.http.functions.ParseSax;\nimport org.xml.sax.Attributes;\n\n<fim_suffix>public abstract class AttributeHandler extends ParseSax.HandlerForGeneratedRequestWithResult<String> {\n\n   public static class PoolName extends AttributeHandler {\n      public PoolName() {\n         super(\"PoolName\");\n      }\n   }\n\n   private final String attributeName;\n   private String attribute = null;\n\n   private AttributeHandler(String attributeName) {\n      this.attributeName = checkNotNull(attributeName, \"attributeName\");\n   }\n\n   @Override\n   public String getResult() {\n      return checkNotNull(attribute, \"%s not present in the response\", attributeName);\n   }\n\n   @Override\n   public void startElement(String uri, String localName, String qName, Attributes attrs) {\n      Map<String, String> attributes = cleanseAttributes(attrs);\n      if (attribute == null && attributes.containsKey(attributeName)) {\n         attribute = attributes.get(attributeName);\n      }\n   }\n}<fim_middle>// class below has no smell\n"}