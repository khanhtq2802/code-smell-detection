{"text": "<fim_prefix>/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\npackage org.apache.syncope.core.persistence.jpa.entity;\n\nimport javax.persistence.Entity;\nimport javax.persistence.ManyToOne;\nimport javax.persistence.OneToOne;\nimport javax.persistence.Table;\nimport javax.validation.constraints.NotNull;\nimport org.apache.syncope.core.persistence.api.entity.AnyType;\nimport org.apache.syncope.core.persistence.api.entity.DynRealm;\nimport org.apache.syncope.core.persistence.api.entity.DynRealmMembership;\n\n<fim_suffix>@Entity\n@Table(name = JPADynRealmMembership.TABLE)\npublic class JPADynRealmMembership extends AbstractGeneratedKeyEntity implements DynRealmMembership {\n\n    private static final long serialVersionUID = 8157856850557493134L;\n\n    public static final String TABLE = \"DynRealmMembership\";\n\n    @OneToOne\n    private JPADynRealm dynRealm;\n\n    @ManyToOne\n    private JPAAnyType anyType;\n\n    @NotNull\n    private String fiql;\n\n    @Override\n    public DynRealm getDynRealm() {\n        return dynRealm;\n    }\n\n    @Override\n    public void setDynRealm(final DynRealm dynRealm) {\n        checkType(dynRealm, JPADynRealm.class);\n        this.dynRealm = (JPADynRealm) dynRealm;\n    }\n\n    @Override\n    public AnyType getAnyType() {\n        return anyType;\n    }\n\n    @Override\n    public void setAnyType(final AnyType anyType) {\n        checkType(anyType, JPAAnyType.class);\n        this.anyType = (JPAAnyType) anyType;\n    }\n\n    @Override\n    public String getFIQLCond() {\n        return fiql;\n    }\n\n    @Override\n    public void setFIQLCond(final String fiql) {\n        this.fiql = fiql;\n    }\n\n}<fim_middle>// class below is data class\n"}