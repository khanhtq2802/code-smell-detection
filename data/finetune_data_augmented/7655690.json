{"text": "<fim_prefix>/*\n * Copyright 2015 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.springframework.social.connect.web;\n\nimport static org.springframework.web.util.HtmlUtils.htmlEscape;\n\nimport java.io.UnsupportedEncodingException;\nimport java.util.List;\nimport java.util.Map;\n\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\n\nimport org.springframework.social.connect.Connection;\nimport org.springframework.social.connect.UserProfile;\nimport org.springframework.web.servlet.View;\nimport org.springframework.web.servlet.view.AbstractView;\nimport org.springframework.web.util.UriUtils;\n\n/**\n * <p>\n * Generic {@link View} implementation that displays the connection statis for a provider.\n * Can be used as both a connected view and a disconnected view.\n * </p>\n * \n * <p>\n * Configure as a bean whose name is \"connect/{providerId}Connect\" and/or \"connect/{providerId}Connected\".\n * For example:\n * </p>\n * \n * <code>\n * &#064;Bean(name={\"connect/facebookConnect\", \"connect/facebookConnected\"})\n * public View facebookConnectView() {\n * \treturn new GenericConnectionStatusView(\"facebook\", \"Facebook\");\n * }\n * </code>\n * \n * @author Craig Walls\n */\npublic class GenericConnectionStatusView extends AbstractView {\n\t\n\tprivate final String providerId;\n\t\n\tprivate final String providerDisplayName;\n\n\t/**\n\t * Constructs the generic status view.\n\t * @param providerId the provider Id (e.g., \"facebook\")\n\t * @param providerDisplayName a friendly, displayable name for the provider (e.g., \"Facebook\") \n\t */\n\tpublic GenericConnectionStatusView(String providerId, String providerDisplayName) {\n\t\tthis.providerId = providerId;\n\t\tthis.providerDisplayName = providerDisplayName;\n\t}\n\n\t@Override\n\tprotected void renderMergedOutputModel(Map<String, Object> model, HttpServletRequest request, HttpServletResponse response) throws Exception {\n\t\tresponse.setHeader(\"Content-Type\", \"text/html\");\n\t\tresponse.getWriter().write(GenericConnectionStatusHtmlCreator.generateConnectionViewHtml(\n\t\t\t\tproviderDisplayName, providerId, getProfileIfConnected(model)));\n\t}\n\n\n\n\tprivate UserProfile getProfileIfConnected(Map<String, Object> model) {\n\t\t@SuppressWarnings(\"unchecked\")\n\t\tList<Connection<?>> connections = (List<Connection<?>>) model.get(\"connections\");\n\t\tif (connections != null) {\n\t\t\tfor (Connection<?> connection : connections) {\n\t\t\t\tif (connection.getKey().getProviderId().equals(providerId)) {\n\t\t\t\t\treturn connection.fetchUserProfile();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\t\n<fim_suffix>\tpublic static class GenericConnectionStatusHtmlCreator {\n\t\tpublic static String generateConnectionViewHtml(String providerDisplayName, String providerId, UserProfile profile) {\n\t\t\tString escProviderDisplayName = escape(providerDisplayName);\n\t\t\tStringBuilder builder = new StringBuilder();\n\t\t\tif (profile == null) {\n\t\t\t\tbuilder.append(\"<h3>Connect to \" + escProviderDisplayName + \"</h3>\");\n\t\t\t\tbuilder.append(\"<form action=\\\"/connect/\");\n\t\t\t\t\n\t\t\t\ttry {\n\t\t\t\t\tString escProviderId = UriUtils.encodePath(providerId, \"UTF-8\");\n\t\t\t\t\tbuilder.append(escProviderId);\n\t\t\t\t} catch (UnsupportedEncodingException e) { /* Default to UTF-8...should be fine.*/ }\n\n\t\t\t\tbuilder.append(\"\\\" method=\\\"POST\\\">\");\n\t\t\t\tbuilder.append(\"<div class=\\\"formInfo\\\">\");\n\t\t\t\tbuilder.append(\"<p>You aren't connected to \");\n\t\t\t\tbuilder.append(escProviderDisplayName);\n\t\t\t\tbuilder.append(\" yet. Click the button to connect with your \");\n\t\t\t\tbuilder.append(escProviderDisplayName);\n\t\t\t\tbuilder.append(\" account.</p>\");\n\t\t\t\tbuilder.append(\"</div>\");\n\t\t\t\tbuilder.append(\"<p><button type=\\\"submit\\\">Connect to \");\n\t\t\t\tbuilder.append(escProviderDisplayName);\n\t\t\t\tbuilder.append(\"</button></p>\");\n\t\t\t\tbuilder.append(\"</form>\");\n\t\t\t} else {\n\t\t\t\tString escProfileName = escape(profile.getName());\n\t\t\t\tbuilder.append(\"<h3>Connected to \");\n\t\t\t\tbuilder.append(escProviderDisplayName);\n\t\t\t\tbuilder.append(\"</h3>\");\n\t\t\t\tbuilder.append(\"<p>Hello, \");\n\t\t\t\tbuilder.append(escProfileName);\n\t\t\t\tbuilder.append(\"!</p><p>You are now connected to \");\n\t\t\t\tbuilder.append(escProviderDisplayName);\n\t\t\t\tString username = profile.getUsername();\n\t\t\t\tif (username !=null) {\n\t\t\t\t\tbuilder.append(\" as \");\n\t\t\t\t\tbuilder.append(escape(username));\n\t\t\t\t}\n\t\t\t\tbuilder.append(\".</p>\");\n\t\t\t}\n\t\t\treturn builder.toString();\n\t\t}\n\t\t\n\t\tprivate static String escape(String in) {\n\t\t\treturn htmlEscape(in).replaceAll(\"\\\\{\", \"&#123;\").replaceAll(\"\\\\}\", \"&#125;\");\n\t\t}\n\t}\n}<fim_middle>// class below is blob\n"}