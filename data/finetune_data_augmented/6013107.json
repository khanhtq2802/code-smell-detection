{"text": "<fim_prefix>/*\n * Copyright 2013-2019 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage org.cloudfoundry.uaa.clients;\n\nimport com.fasterxml.jackson.annotation.JsonIgnore;\nimport com.fasterxml.jackson.core.JsonGenerator;\nimport com.fasterxml.jackson.databind.SerializerProvider;\nimport com.fasterxml.jackson.databind.annotation.JsonSerialize;\nimport com.fasterxml.jackson.databind.ser.std.StdSerializer;\nimport org.cloudfoundry.uaa.IdentityZoned;\nimport org.immutables.value.Value;\n\nimport java.io.IOException;\nimport java.util.List;\n\n/**\n * The request payload for the Batch Create Clients operation\n */\n@Value.Immutable\n@JsonSerialize(using = _BatchChangeSecretRequest.BatchChangeSecretSerializer.class)\nabstract class _BatchChangeSecretRequest implements IdentityZoned {\n\n    @Value.Check\n    void checkClients() {\n        if (this.getChangeSecrets().isEmpty()) {\n            throw new IllegalStateException(\"Cannot build BatchChangeSecretsRequest, required attribute changeSecret is not set\");\n        }\n    }\n\n    /**\n     * A list of secrets to change\n     */\n    @JsonIgnore\n    abstract List<ChangeSecret> getChangeSecrets();\n\n<fim_suffix>    static class BatchChangeSecretSerializer extends StdSerializer<BatchChangeSecretRequest> {\n\n        private static final long serialVersionUID = 8880285813370852371L;\n\n        BatchChangeSecretSerializer() {\n            super(BatchChangeSecretRequest.class);\n        }\n\n        @Override\n        public void serialize(BatchChangeSecretRequest request, JsonGenerator gen, SerializerProvider provider) throws IOException {\n            gen.writeObject(request.getChangeSecrets());\n        }\n\n    }\n\n}<fim_middle>// class below has no smell\n"}