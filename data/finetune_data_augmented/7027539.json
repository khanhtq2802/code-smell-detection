{"text": "<fim_prefix>\n<fim_suffix>@Generated(\"com.amazonaws:aws-java-sdk-code-generator\")\npublic class ListKeysResult extends com.ibm.cloud.objectstorage.AmazonWebServiceResult<com.ibm.cloud.objectstorage.ResponseMetadata> implements Serializable, Cloneable {\n    /**\n     * <p>\n     * A list of keys.\n     * </p>\n     */\n    private com.ibm.cloud.objectstorage.internal.SdkInternalList<KeyListEntry> keys;\n    /**\n     * <p>\n     * When <code>Truncated</code> is true, this element is present and contains the value to use for the\n     * <code>Marker</code> parameter in a subsequent request.\n     * </p>\n     */\n    private String nextMarker;\n    /**\n     * <p>\n     * A flag that indicates whether there are more items in the list. When this value is true, the list in this\n     * response is truncated. To retrieve more items, pass the value of the <code>NextMarker</code> element in this\n     * response to the <code>Marker</code> parameter in a subsequent request.\n     * </p>\n     */\n    private Boolean truncated;\n    /**\n     * <p>\n     * A list of keys.\n     * </p>\n     * \n     * @return A list of keys.\n     */\n    public java.util.List<KeyListEntry> getKeys() {\n        if (keys == null) {\n            keys = new com.ibm.cloud.objectstorage.internal.SdkInternalList<KeyListEntry>();\n        }\n        return keys;\n    }\n    /**\n     * <p>\n     * A list of keys.\n     * </p>\n     * \n     * @param keys\n     *        A list of keys.\n     */\n    public void setKeys(java.util.Collection<KeyListEntry> keys) {\n        if (keys == null) {\n            this.keys = null;\n            return;\n        }\n        this.keys = new com.ibm.cloud.objectstorage.internal.SdkInternalList<KeyListEntry>(keys);\n    }\n    /**\n     * <p>\n     * A list of keys.\n     * </p>\n     * <p>\n     * <b>NOTE:</b> This method appends the values to the existing list (if any). Use\n     * {@link #setKeys(java.util.Collection)} or {@link #withKeys(java.util.Collection)} if you want to override the\n     * existing values.\n     * </p>\n     * \n     * @param keys\n     *        A list of keys.\n     * @return Returns a reference to this object so that method calls can be chained together.\n     */\n    public ListKeysResult withKeys(KeyListEntry... keys) {\n        if (this.keys == null) {\n            setKeys(new com.ibm.cloud.objectstorage.internal.SdkInternalList<KeyListEntry>(keys.length));\n        }\n        for (KeyListEntry ele : keys) {\n            this.keys.add(ele);\n        }\n        return this;\n    }\n    /**\n     * <p>\n     * A list of keys.\n     * </p>\n     * \n     * @param keys\n     *        A list of keys.\n     * @return Returns a reference to this object so that method calls can be chained together.\n     */\n    public ListKeysResult withKeys(java.util.Collection<KeyListEntry> keys) {\n        setKeys(keys);\n        return this;\n    }\n    /**\n     * <p>\n     * When <code>Truncated</code> is true, this element is present and contains the value to use for the\n     * <code>Marker</code> parameter in a subsequent request.\n     * </p>\n     * \n     * @param nextMarker\n     *        When <code>Truncated</code> is true, this element is present and contains the value to use for the\n     *        <code>Marker</code> parameter in a subsequent request.\n     */\n    public void setNextMarker(String nextMarker) {\n        this.nextMarker = nextMarker;\n    }\n    /**\n     * <p>\n     * When <code>Truncated</code> is true, this element is present and contains the value to use for the\n     * <code>Marker</code> parameter in a subsequent request.\n     * </p>\n     * \n     * @return When <code>Truncated</code> is true, this element is present and contains the value to use for the\n     *         <code>Marker</code> parameter in a subsequent request.\n     */\n    public String getNextMarker() {\n        return this.nextMarker;\n    }\n    /**\n     * <p>\n     * When <code>Truncated</code> is true, this element is present and contains the value to use for the\n     * <code>Marker</code> parameter in a subsequent request.\n     * </p>\n     * \n     * @param nextMarker\n     *        When <code>Truncated</code> is true, this element is present and contains the value to use for the\n     *        <code>Marker</code> parameter in a subsequent request.\n     * @return Returns a reference to this object so that method calls can be chained together.\n     */\n    public ListKeysResult withNextMarker(String nextMarker) {\n        setNextMarker(nextMarker);\n        return this;\n    }\n    /**\n     * <p>\n     * A flag that indicates whether there are more items in the list. When this value is true, the list in this\n     * response is truncated. To retrieve more items, pass the value of the <code>NextMarker</code> element in this\n     * response to the <code>Marker</code> parameter in a subsequent request.\n     * </p>\n     * \n     * @param truncated\n     *        A flag that indicates whether there are more items in the list. When this value is true, the list in this\n     *        response is truncated. To retrieve more items, pass the value of the <code>NextMarker</code> element in\n     *        this response to the <code>Marker</code> parameter in a subsequent request.\n     */\n    public void setTruncated(Boolean truncated) {\n        this.truncated = truncated;\n    }\n    /**\n     * <p>\n     * A flag that indicates whether there are more items in the list. When this value is true, the list in this\n     * response is truncated. To retrieve more items, pass the value of the <code>NextMarker</code> element in this\n     * response to the <code>Marker</code> parameter in a subsequent request.\n     * </p>\n     * \n     * @return A flag that indicates whether there are more items in the list. When this value is true, the list in this\n     *         response is truncated. To retrieve more items, pass the value of the <code>NextMarker</code> element in\n     *         this response to the <code>Marker</code> parameter in a subsequent request.\n     */\n    public Boolean getTruncated() {\n        return this.truncated;\n    }\n    /**\n     * <p>\n     * A flag that indicates whether there are more items in the list. When this value is true, the list in this\n     * response is truncated. To retrieve more items, pass the value of the <code>NextMarker</code> element in this\n     * response to the <code>Marker</code> parameter in a subsequent request.\n     * </p>\n     * \n     * @param truncated\n     *        A flag that indicates whether there are more items in the list. When this value is true, the list in this\n     *        response is truncated. To retrieve more items, pass the value of the <code>NextMarker</code> element in\n     *        this response to the <code>Marker</code> parameter in a subsequent request.\n     * @return Returns a reference to this object so that method calls can be chained together.\n     */\n    public ListKeysResult withTruncated(Boolean truncated) {\n        setTruncated(truncated);\n        return this;\n    }\n    /**\n     * <p>\n     * A flag that indicates whether there are more items in the list. When this value is true, the list in this\n     * response is truncated. To retrieve more items, pass the value of the <code>NextMarker</code> element in this\n     * response to the <code>Marker</code> parameter in a subsequent request.\n     * </p>\n     * \n     * @return A flag that indicates whether there are more items in the list. When this value is true, the list in this\n     *         response is truncated. To retrieve more items, pass the value of the <code>NextMarker</code> element in\n     *         this response to the <code>Marker</code> parameter in a subsequent request.\n     */\n    public Boolean isTruncated() {\n        return this.truncated;\n    }\n    /**\n     * Returns a string representation of this object; useful for testing and debugging.\n     *\n     * @return A string representation of this object.\n     *\n     * @see java.lang.Object#toString()\n     */\n    @Override\n    public String toString() {\n        StringBuilder sb = new StringBuilder();\n        sb.append(\"{\");\n        if (getKeys() != null)\n            sb.append(\"Keys: \").append(getKeys()).append(\",\");\n        if (getNextMarker() != null)\n            sb.append(\"NextMarker: \").append(getNextMarker()).append(\",\");\n        if (getTruncated() != null)\n            sb.append(\"Truncated: \").append(getTruncated());\n        sb.append(\"}\");\n        return sb.toString();\n    }<fim_middle>// class below is data class\n"}