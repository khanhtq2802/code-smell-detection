{"text": "<fim_prefix>/*\n * reserved comment block\n * DO NOT REMOVE OR ALTER!\n */\n/*\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage com.sun.org.apache.bcel.internal.generic;\n\n/**\n * IXOR - Bitwise XOR int\n * <PRE>Stack: ..., value1, value2 -&gt; ..., result</PRE>\n *\n * @version $Id: IXOR.java 1747278 2016-06-07 17:28:43Z britter $\n */\n<fim_suffix>public class IXOR extends ArithmeticInstruction {\n\n    public IXOR() {\n        super(com.sun.org.apache.bcel.internal.Const.IXOR);\n    }\n\n\n    /**\n     * Call corresponding visitor method(s). The order is:\n     * Call visitor methods of implemented interfaces first, then\n     * call methods according to the class hierarchy in descending order,\n     * i.e., the most specific visitXXX() call comes last.\n     *\n     * @param v Visitor object\n     */\n    @Override\n    public void accept( final Visitor v ) {\n        v.visitTypedInstruction(this);\n        v.visitStackProducer(this);\n        v.visitStackConsumer(this);\n        v.visitArithmeticInstruction(this);\n        v.visitIXOR(this);\n    }\n}<fim_middle>// class below has no smell\n"}