{"text": "<fim_prefix>/*\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.apache.cocoon.portal.services.aspects.support;\n\nimport java.util.Iterator;\nimport java.util.Properties;\n\nimport org.apache.cocoon.portal.PortalService;\nimport org.apache.cocoon.portal.services.aspects.BasicAspectContext;\nimport org.apache.commons.collections.iterators.EmptyIterator;\n\n/**\n * Reusable implementation of the {@link BasicAspectContext}.\n *\n * @since 2.2\n * @version $Id$\n */\n<fim_suffix>public abstract class BasicAspectContextImpl implements BasicAspectContext {\n\n    /** The portal service. */\n    protected final PortalService portalService;\n\n    /** The iterator used to iterate over the aspects. */\n    protected final Iterator aspectsIterator;\n    /** The iterator used to iterate over the configuration of the aspects. */\n    protected final Iterator propertiesIterator;\n\n    /** The current configuration. */\n    protected Properties aspectProperties;\n\n    public BasicAspectContextImpl(PortalService service,\n                                  AspectChainImpl   chain) {\n        this.portalService = service;\n        if ( chain != null ) {\n            this.aspectsIterator = chain.getAspectsIterator();\n            this.propertiesIterator = chain.getPropertiesIterator();\n        } else {\n            this.aspectsIterator = EmptyIterator.INSTANCE;\n            this.propertiesIterator = EmptyIterator.INSTANCE;\n        }\n    }\n\n    /**\n     * @see org.apache.cocoon.portal.services.aspects.BasicAspectContext#getAspectProperties()\n     */\n    public Properties getAspectProperties() {\n        return this.aspectProperties;\n    }\n\n    /**\n     * @see org.apache.cocoon.portal.services.aspects.BasicAspectContext#getPortalService()\n     */\n    public PortalService getPortalService() {\n        return this.portalService;\n    }\n\n    protected Object getNext() {\n        if (this.aspectsIterator.hasNext()) {\n            this.aspectProperties = (Properties)this.propertiesIterator.next();\n            return this.aspectsIterator.next();\n        }\n        return null;\n    }\n}<fim_middle>// class below has no smell\n"}