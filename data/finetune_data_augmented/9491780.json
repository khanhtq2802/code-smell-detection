{"text": "<fim_prefix>/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage org.apache.hadoop.fs.azure.security;\n\nimport org.apache.hadoop.conf.Configuration;\nimport org.apache.hadoop.fs.azure.SecureWasbRemoteCallHelper;\nimport org.apache.hadoop.fs.azure.WasbRemoteCallHelper;\nimport org.apache.hadoop.io.Text;\nimport org.apache.hadoop.io.retry.RetryPolicy;\nimport org.apache.hadoop.io.retry.RetryUtils;\nimport org.apache.hadoop.security.token.Token;\nimport org.apache.hadoop.security.token.delegation.web.DelegationTokenIdentifier;\nimport org.apache.http.client.methods.HttpGet;\nimport org.apache.http.client.methods.HttpPut;\nimport org.apache.http.client.utils.URIBuilder;\n\nimport java.io.IOException;\nimport java.util.Map;\n\n/**\n * Class to manage delegation token operations by making rest call to remote service.\n */\n<fim_suffix>public class RemoteWasbDelegationTokenManager\n    implements WasbDelegationTokenManager {\n\n  /**\n   * Configuration parameter name expected in the configuration\n   * object to provide the url of the delegation token service to fetch the delegation tokens.\n   */\n  public static final String KEY_DELEGATION_TOKEN_SERVICE_URLS =\n      \"fs.azure.delegation.token.service.urls\";\n  /**\n   * Configuration key to enable http retry policy for delegation token service calls.\n   */\n  public static final String DT_MANAGER_HTTP_CLIENT_RETRY_POLICY_ENABLED_KEY =\n      \"fs.azure.delegationtokenservice.http.retry.policy.enabled\";\n  /**\n   * Configuration key for delegation token service http retry policy spec.\n   */\n  public static final String DT_MANAGER_HTTP_CLIENT_RETRY_POLICY_SPEC_KEY =\n      \"fs.azure.delegationtokenservice.http.retry.policy.spec\";\n  /**\n   * Default remote delegation token manager endpoint.\n   */\n  private static final String DEFAULT_DELEGATION_TOKEN_MANAGER_ENDPOINT =\n      \"/tokenmanager/v1\";\n  /**\n   * Default for delegation token service http retry policy spec.\n   */\n  private static final String DT_MANAGER_HTTP_CLIENT_RETRY_POLICY_SPEC_DEFAULT =\n      \"10,3,100,2\";\n\n  private static final boolean\n      DT_MANAGER_HTTP_CLIENT_RETRY_POLICY_ENABLED_DEFAULT = true;\n\n  private static final Text WASB_DT_SERVICE_NAME = new Text(\"WASB_DT_SERVICE\");\n  /**\n   * Query parameter value for Getting delegation token http request\n   */\n  private static final String GET_DELEGATION_TOKEN_OP = \"GETDELEGATIONTOKEN\";\n  /**\n   * Query parameter value for renewing delegation token http request\n   */\n  private static final String RENEW_DELEGATION_TOKEN_OP =\n      \"RENEWDELEGATIONTOKEN\";\n  /**\n   * Query parameter value for canceling the delegation token http request\n   */\n  private static final String CANCEL_DELEGATION_TOKEN_OP =\n      \"CANCELDELEGATIONTOKEN\";\n  /**\n   * op parameter to represent the operation.\n   */\n  private static final String OP_PARAM_KEY_NAME = \"op\";\n  /**\n   * renewer parameter to represent the renewer of the delegation token.\n   */\n  private static final String RENEWER_PARAM_KEY_NAME = \"renewer\";\n  /**\n   * service parameter to represent the service which returns delegation tokens.\n   */\n  private static final String SERVICE_PARAM_KEY_NAME = \"service\";\n  /**\n   * token parameter to represent the delegation token.\n   */\n  private static final String TOKEN_PARAM_KEY_NAME = \"token\";\n  private WasbRemoteCallHelper remoteCallHelper;\n  private String[] dtServiceUrls;\n  private boolean isSpnegoTokenCacheEnabled;\n\n  public RemoteWasbDelegationTokenManager(Configuration conf)\n      throws IOException {\n    RetryPolicy retryPolicy = RetryUtils.getMultipleLinearRandomRetry(conf,\n        DT_MANAGER_HTTP_CLIENT_RETRY_POLICY_ENABLED_KEY,\n        DT_MANAGER_HTTP_CLIENT_RETRY_POLICY_ENABLED_DEFAULT,\n        DT_MANAGER_HTTP_CLIENT_RETRY_POLICY_SPEC_KEY,\n        DT_MANAGER_HTTP_CLIENT_RETRY_POLICY_SPEC_DEFAULT);\n    this.isSpnegoTokenCacheEnabled =\n        conf.getBoolean(Constants.AZURE_ENABLE_SPNEGO_TOKEN_CACHE, true);\n\n    remoteCallHelper = new SecureWasbRemoteCallHelper(retryPolicy, true,\n        isSpnegoTokenCacheEnabled);\n    this.dtServiceUrls =\n        conf.getTrimmedStrings(KEY_DELEGATION_TOKEN_SERVICE_URLS);\n    if (this.dtServiceUrls == null || this.dtServiceUrls.length <= 0) {\n      throw new IOException(\n          KEY_DELEGATION_TOKEN_SERVICE_URLS + \" config not set\"\n              + \" in configuration.\");\n    }\n  }\n\n  @Override\n  public Token<DelegationTokenIdentifier> getDelegationToken(\n      String renewer) throws IOException {\n    URIBuilder uriBuilder =\n        new URIBuilder().setPath(DEFAULT_DELEGATION_TOKEN_MANAGER_ENDPOINT)\n            .addParameter(OP_PARAM_KEY_NAME, GET_DELEGATION_TOKEN_OP)\n            .addParameter(RENEWER_PARAM_KEY_NAME, renewer)\n            .addParameter(SERVICE_PARAM_KEY_NAME,\n                WASB_DT_SERVICE_NAME.toString());\n    String responseBody = remoteCallHelper\n        .makeRemoteRequest(dtServiceUrls, uriBuilder.getPath(),\n            uriBuilder.getQueryParams(), HttpGet.METHOD_NAME);\n    return TokenUtils.toDelegationToken(JsonUtils.parse(responseBody));\n  }\n\n  @Override\n  public long renewDelegationToken(Token<?> token)\n      throws IOException {\n    URIBuilder uriBuilder =\n        new URIBuilder().setPath(DEFAULT_DELEGATION_TOKEN_MANAGER_ENDPOINT)\n            .addParameter(OP_PARAM_KEY_NAME, RENEW_DELEGATION_TOKEN_OP)\n            .addParameter(TOKEN_PARAM_KEY_NAME, token.encodeToUrlString());\n\n    String responseBody = remoteCallHelper\n        .makeRemoteRequest(dtServiceUrls, uriBuilder.getPath(),\n            uriBuilder.getQueryParams(), HttpPut.METHOD_NAME);\n\n    Map<?, ?> parsedResp = JsonUtils.parse(responseBody);\n    return ((Number) parsedResp.get(\"long\")).longValue();\n  }\n\n  @Override\n  public void cancelDelegationToken(Token<?> token)\n      throws IOException {\n    URIBuilder uriBuilder =\n        new URIBuilder().setPath(DEFAULT_DELEGATION_TOKEN_MANAGER_ENDPOINT)\n            .addParameter(OP_PARAM_KEY_NAME, CANCEL_DELEGATION_TOKEN_OP)\n            .addParameter(TOKEN_PARAM_KEY_NAME, token.encodeToUrlString());\n    remoteCallHelper.makeRemoteRequest(dtServiceUrls, uriBuilder.getPath(),\n        uriBuilder.getQueryParams(), HttpPut.METHOD_NAME);\n  }\n}<fim_middle>// class below is blob\n"}