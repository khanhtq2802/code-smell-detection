{"text": "<fim_prefix>/*******************************************************************************\n * Copyright (c) 2012 VMWare, Inc.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * https://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     VMWare, Inc. - initial API and implementation\n *******************************************************************************/\npackage org.grails.ide.eclipse.ui.internal.wizard.inport;\n\nimport org.eclipse.swt.SWT;\nimport org.eclipse.swt.events.SelectionAdapter;\nimport org.eclipse.swt.events.SelectionEvent;\nimport org.eclipse.swt.widgets.Button;\nimport org.eclipse.swt.widgets.Composite;\nimport org.eclipse.swt.widgets.Label;\nimport org.grails.ide.eclipse.core.wizard.GrailsImportWizardCore;\nimport org.grails.ide.eclipse.maven.ui.GrailsM2EUtils;\nimport org.springsource.ide.eclipse.commons.livexp.core.LiveExpression;\nimport org.springsource.ide.eclipse.commons.livexp.core.ValidationResult;\nimport org.springsource.ide.eclipse.commons.livexp.core.Validator;\nimport org.springsource.ide.eclipse.commons.livexp.core.ValueListener;\nimport org.springsource.ide.eclipse.commons.livexp.ui.CommentSection;\nimport org.springsource.ide.eclipse.commons.livexp.ui.GroupSection;\nimport org.springsource.ide.eclipse.commons.livexp.ui.WizardPageSection;\n\n<fim_suffix>public class MavenWarningSection extends GroupSection {\n\t\n\tprivate static final GrailsM2EUtils m2e = GrailsM2EUtils.getInstance();\n\t\n\tprivate static class IgnoreMavenWarning extends WizardPageSection {\n\n\t\tprivate String msg;\n\t\tprivate final GrailsImportWizardCore model;\n\n\t\tpublic IgnoreMavenWarning(GrailsImportWizardPage owner, String msg) {\n\t\t\tsuper(owner);\n\t\t\tthis.msg = msg;\n\t\t\tthis.model = owner.model;\n\t\t}\n\n\t\t@Override\n\t\tpublic LiveExpression<ValidationResult> getValidator() {\n\t\t\treturn model.mavenValidator;\n\t\t}\n\n\t\t@Override\n\t\tpublic void createContents(Composite page) {\n\t\t\tfinal Button checkBox = new Button(page, SWT.CHECK);\n\t\t\tcheckBox.setSelection(model.ignoreMavenWarning.getValue());\n\t\t\tcheckBox.setText(msg);\n\t\t\tcheckBox.addSelectionListener(new SelectionAdapter() {\n\t\t\t\tpublic void widgetSelected(SelectionEvent e) {\n\t\t\t\t\tmodel.ignoreMavenWarning.setValue(checkBox.getSelection());\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\t\n\t\n\tpublic MavenWarningSection(GrailsImportWizardPage owner, String title) {\n\t\tsuper(owner, title,\n\t\t\t\tnew CommentSection(owner, \n\t\t\t\t\t\t\"The selected project looks like a Mavenized project and should be imported using m2e's \" +\n\t\t\t\t\t\t\"'Import Existing Maven Projects' wizard. If you proceed the project may not be imported correctly.\"),\n\t\t\t\tnew IgnoreMavenWarning(owner, \"Ignore this warning and allow me to proceed\"),\t\n\t\t\t\tnew OpenM2EImportWizardSection(owner)\n\t\t);\n\t\t\n\t\t//Hide this entire section if it does not apply:\n\t\towner.model.isMaven.addListener(new ValueListener<Boolean>() {\n\t\t\tpublic void gotValue(LiveExpression<Boolean> exp, Boolean isMaven) {\n\t\t\t\tisVisible.setValue(isMaven);\n\t\t\t}\n\t\t});\n\t}\n\t\n\tprivate static class OpenM2EImportWizardSection extends WizardPageSection {\n\t\t\n\t\tprivate GrailsImportWizardPage page;\n\t\tprivate GrailsImportWizardCore model;\n\n\t\tpublic OpenM2EImportWizardSection(GrailsImportWizardPage page) {\n\t\t\tsuper(page);\n\t\t\tthis.page = page;\n\t\t\tthis.model = page.model;\n\t\t}\n\n\t\tprivate void openWizard() {\n\t\t\towner.getShell().close();\n\t\t\tm2e.openM2EImportWizard(model.location.getValue());\n\t\t}\n\t\t\n\t\t@Override\n\t\tpublic LiveExpression<ValidationResult> getValidator() {\n\t\t\treturn Validator.constant(ValidationResult.OK);\n\t\t}\n\n\t\t@Override\n\t\tpublic void createContents(Composite page) {\n\t\t\tif (m2e.isInstalled()) {\n\t\t\t\tButton button = new Button(page, SWT.PUSH);\n\t\t\t\tbutton.setText(\"Switch to Maven Import\");\n\t\t\t\tbutton.addSelectionListener(new SelectionAdapter() {\n\t\t\t\t\t@Override\n\t\t\t\t\tpublic void widgetSelected(SelectionEvent e) {\n\t\t\t\t\t\topenWizard();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tLabel label = new Label(page, SWT.WRAP);\n\t\t\t\tlabel.setText(\"Can't open M2E Wizard because M2E is not installed.\");\n\t\t\t}\n\t\t}\n\t\t\n\t}\n}<fim_middle>// class below is blob\n"}