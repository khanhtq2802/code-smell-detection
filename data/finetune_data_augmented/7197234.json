{"text": "<fim_prefix>/**\n * Copyright (c) 2016, 2019, Oracle and/or its affiliates. All rights reserved.\n */\npackage com.oracle.bmc.core.model;\n/**\n * Either instanceId or imageSourceDetails must be provided in addition to other required parameters.\n * <br/>\n * Note: Objects should always be created or deserialized using the {@link Builder}. This model distinguishes fields\n * that are {@code null} because they are unset from fields that are explicitly set to {@code null}. This is done in\n * the setter methods of the {@link Builder}, which maintain a set of all explicitly set fields called\n * {@link #__explicitlySet__}. The {@link #hashCode()} and {@link #equals(Object)} methods are implemented to take\n * {@link #__explicitlySet__} into account. The constructor, on the other hand, does not set {@link #__explicitlySet__}\n * (since the constructor cannot distinguish explicit {@code null} from unset {@code null}).\n **/\n@javax.annotation.Generated(value = \"OracleSDKGenerator\", comments = \"API Version: 20160918\")\n@lombok.AllArgsConstructor(onConstructor = @__({@Deprecated}))\n@lombok.Value\n@com.fasterxml.jackson.databind.annotation.JsonDeserialize(\n    builder = CreateImageDetails.Builder.class\n)\n@com.fasterxml.jackson.annotation.JsonFilter(com.oracle.bmc.http.internal.ExplicitlySetFilter.NAME)\npublic class CreateImageDetails {\n    @com.fasterxml.jackson.databind.annotation.JsonPOJOBuilder(withPrefix = \"\")\n    @lombok.experimental.Accessors(fluent = true)\n    public static class Builder {\n        @com.fasterxml.jackson.annotation.JsonProperty(\"compartmentId\")\n        private String compartmentId;\n        public Builder compartmentId(String compartmentId) {\n            this.compartmentId = compartmentId;\n            this.__explicitlySet__.add(\"compartmentId\");\n            return this;\n        }\n        @com.fasterxml.jackson.annotation.JsonProperty(\"definedTags\")\n        private java.util.Map<String, java.util.Map<String, Object>> definedTags;\n        public Builder definedTags(\n                java.util.Map<String, java.util.Map<String, Object>> definedTags) {\n            this.definedTags = definedTags;\n            this.__explicitlySet__.add(\"definedTags\");\n            return this;\n        }\n        @com.fasterxml.jackson.annotation.JsonProperty(\"displayName\")\n        private String displayName;\n        public Builder displayName(String displayName) {\n            this.displayName = displayName;\n            this.__explicitlySet__.add(\"displayName\");\n            return this;\n        }\n        @com.fasterxml.jackson.annotation.JsonProperty(\"freeformTags\")\n        private java.util.Map<String, String> freeformTags;\n<fim_suffix>        public Builder freeformTags(java.util.Map<String, String> freeformTags) {\n            this.freeformTags = freeformTags;\n            this.__explicitlySet__.add(\"freeformTags\");\n            return this;\n        }\n        @com.fasterxml.jackson.annotation.JsonProperty(\"imageSourceDetails\")\n        private ImageSourceDetails imageSourceDetails;\n        public Builder imageSourceDetails(ImageSourceDetails imageSourceDetails) {\n            this.imageSourceDetails = imageSourceDetails;\n            this.__explicitlySet__.add(\"imageSourceDetails\");\n            return this;\n        }\n        @com.fasterxml.jackson.annotation.JsonProperty(\"instanceId\")\n        private String instanceId;\n        public Builder instanceId(String instanceId) {\n            this.instanceId = instanceId;\n            this.__explicitlySet__.add(\"instanceId\");\n            return this;\n        }\n        @com.fasterxml.jackson.annotation.JsonProperty(\"launchMode\")\n        private LaunchMode launchMode;\n        public Builder launchMode(LaunchMode launchMode) {\n            this.launchMode = launchMode;\n            this.__explicitlySet__.add(\"launchMode\");\n            return this;\n        }\n        @com.fasterxml.jackson.annotation.JsonIgnore\n        private final java.util.Set<String> __explicitlySet__ = new java.util.HashSet<String>();\n        public CreateImageDetails build() {\n            CreateImageDetails __instance__ =\n                    new CreateImageDetails(\n                            compartmentId,\n                            definedTags,\n                            displayName,\n                            freeformTags,\n                            imageSourceDetails,\n                            instanceId,\n                            launchMode);\n            __instance__.__explicitlySet__.addAll(__explicitlySet__);\n            return __instance__;\n        }\n        @com.fasterxml.jackson.annotation.JsonIgnore\n        public Builder copy(CreateImageDetails o) {\n            Builder copiedBuilder =\n                    compartmentId(o.getCompartmentId())\n                            .definedTags(o.getDefinedTags())\n                            .displayName(o.getDisplayName())\n                            .freeformTags(o.getFreeformTags())\n                            .imageSourceDetails(o.getImageSourceDetails())\n                            .instanceId(o.getInstanceId())\n                            .launchMode(o.getLaunchMode());\n            copiedBuilder.__explicitlySet__.retainAll(o.__explicitlySet__);\n            return copiedBuilder;\n        }\n    }\n    /**\n     * Create a new builder.\n     */\n    public static Builder builder() {\n        return new Builder();\n    }\n    /**\n     * The OCID of the compartment containing the instance you want to use as the basis for the image.\n     **/\n    @com.fasterxml.jackson.annotation.JsonProperty(\"compartmentId\")\n    String compartmentId;\n    /**\n     * Defined tags for this resource. Each key is predefined and scoped to a namespace.\n     * For more information, see [Resource Tags](https://docs.cloud.oracle.com/Content/General/Concepts/resourcetags.htm).\n     * <p>\n     * Example: `{\\\"Operations\\\": {\\\"CostCenter\\\": \\\"42\\\"}}`\n     *\n     **/\n    @com.fasterxml.jackson.annotation.JsonProperty(\"definedTags\")\n    java.util.Map<String, java.util.Map<String, Object>> definedTags;\n    /**\n     * A user-friendly name for the image. It does not have to be unique, and it's changeable.\n     * Avoid entering confidential information.\n     * <p>\n     * You cannot use an Oracle-provided image name as a custom image name.\n     * <p>\n     * Example: `My Oracle Linux image`\n     *\n     **/\n    @com.fasterxml.jackson.annotation.JsonProperty(\"displayName\")\n    String displayName;\n    /**\n     * Free-form tags for this resource. Each tag is a simple key-value pair with no\n     * predefined name, type, or namespace. For more information, see\n     * [Resource Tags](https://docs.cloud.oracle.com/Content/General/Concepts/resourcetags.htm).\n     * <p>\n     * Example: `{\\\"Department\\\": \\\"Finance\\\"}`\n     *\n     **/\n    @com.fasterxml.jackson.annotation.JsonProperty(\"freeformTags\")\n    java.util.Map<String, String> freeformTags;\n    /**\n     * Details for creating an image through import\n     **/\n    @com.fasterxml.jackson.annotation.JsonProperty(\"imageSourceDetails\")\n    ImageSourceDetails imageSourceDetails;\n    /**\n     * The OCID of the instance you want to use as the basis for the image.\n     **/\n    @com.fasterxml.jackson.annotation.JsonProperty(\"instanceId\")\n    String instanceId;\n    /**\n     * Specifies the configuration mode for launching virtual machine (VM) instances. The configuration modes are:\n     * * `NATIVE` - VM instances launch with iSCSI boot and VFIO devices. The default value for Oracle-provided images.\n     * * `EMULATED` - VM instances launch with emulated devices, such as the E1000 network driver and emulated SCSI disk controller.\n     * * `PARAVIRTUALIZED` - VM instances launch with paravirtualized devices using virtio drivers.\n     * * `CUSTOM` - VM instances launch with custom configuration settings specified in the `LaunchOptions` parameter.\n     *\n     **/\n    public enum LaunchMode {\n        Native(\"NATIVE\"),\n        Emulated(\"EMULATED\"),\n        Paravirtualized(\"PARAVIRTUALIZED\"),\n        Custom(\"CUSTOM\"),\n        ;\n        private final String value;\n        private static java.util.Map<String, LaunchMode> map;\n        static {\n            map = new java.util.HashMap<>();\n            for (LaunchMode v : LaunchMode.values()) {\n                map.put(v.getValue(), v);\n            }\n        }\n        LaunchMode(String value) {\n            this.value = value;\n        }\n        @com.fasterxml.jackson.annotation.JsonValue\n        public String getValue() {\n            return value;\n        }\n        @com.fasterxml.jackson.annotation.JsonCreator\n        public static LaunchMode create(String key) {\n            if (map.containsKey(key)) {\n                return map.get(key);\n            }\n            throw new RuntimeException(\"Invalid LaunchMode: \" + key);\n        }\n    };\n    /**\n     * Specifies the configuration mode for launching virtual machine (VM) instances. The configuration modes are:\n     * * `NATIVE` - VM instances launch with iSCSI boot and VFIO devices. The default value for Oracle-provided images.\n     * * `EMULATED` - VM instances launch with emulated devices, such as the E1000 network driver and emulated SCSI disk controller.<fim_middle>// function below has no smell\n"}