{"text": "<fim_prefix>/*\n *  Licensed to the Apache Software Foundation (ASF) under one\n *  or more contributor license agreements.  See the NOTICE file\n *  distributed with this work for additional information\n *  regarding copyright ownership.  The ASF licenses this file\n *  to you under the Apache License, Version 2.0 (the\n *  \"License\"); you may not use this file except in compliance\n *  with the License.  You may obtain a copy of the License at\n *\n *       http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n *\n *\n */\npackage org.apache.polygene.library.sql.generator.implementation.grammar.query;\n\nimport java.util.Objects;\nimport org.apache.polygene.library.sql.generator.grammar.common.ColumnNameList;\nimport org.apache.polygene.library.sql.generator.grammar.query.TableAlias;\nimport org.apache.polygene.library.sql.generator.implementation.grammar.common.SQLSyntaxElementBase;\nimport org.apache.polygene.library.sql.generator.implementation.transformation.spi.SQLProcessorAggregator;\n\n/**\n * @author Stanislav Muhametsin\n */\n<fim_suffix>public class TableAliasImpl extends SQLSyntaxElementBase<TableAlias, TableAlias>\n    implements TableAlias\n{\n    private final String _tableAlias;\n\n    private final ColumnNameList _columnAliases;\n\n    public TableAliasImpl( SQLProcessorAggregator processor, String tableAlias, ColumnNameList columnNames )\n    {\n        this( processor, TableAlias.class, tableAlias, columnNames );\n    }\n\n    protected TableAliasImpl( SQLProcessorAggregator processor, Class<? extends TableAlias> implementingClass,\n                              String tableAlias, ColumnNameList columnNames )\n    {\n        super( processor, implementingClass );\n        Objects.requireNonNull( tableAlias, \"table alias table name\" );\n        this._tableAlias = tableAlias;\n        this._columnAliases = columnNames;\n    }\n\n    public ColumnNameList getColumnAliases()\n    {\n        return this._columnAliases;\n    }\n\n    public String getTableAlias()\n    {\n        return this._tableAlias;\n    }\n\n    @Override\n    protected boolean doesEqual( TableAlias another )\n    {\n        return this._tableAlias.equals( another.getTableAlias() )\n               && bothNullOrEquals( this._columnAliases, another.getColumnAliases() );\n    }\n}<fim_middle>// class below has no smell\n"}