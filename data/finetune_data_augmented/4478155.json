{"text": "<fim_prefix>/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.apache.drill.exec.store.mongo;\n\nimport java.util.List;\n\nimport org.apache.drill.common.logical.StoragePluginConfig;\n\nimport com.fasterxml.jackson.annotation.JsonCreator;\nimport com.fasterxml.jackson.annotation.JsonIgnore;\nimport com.fasterxml.jackson.annotation.JsonProperty;\nimport com.fasterxml.jackson.annotation.JsonTypeName;\nimport com.mongodb.MongoClientOptions;\nimport com.mongodb.MongoClientURI;\nimport com.mongodb.MongoCredential;\n\n<fim_suffix>@JsonTypeName(MongoStoragePluginConfig.NAME)\npublic class MongoStoragePluginConfig extends StoragePluginConfig {\n  static final org.slf4j.Logger logger = org.slf4j.LoggerFactory\n      .getLogger(MongoStoragePluginConfig.class);\n\n  public static final String NAME = \"mongo\";\n\n  private String connection;\n\n  @JsonIgnore\n  private MongoClientURI clientURI;\n\n  @JsonCreator\n  public MongoStoragePluginConfig(@JsonProperty(\"connection\") String connection) {\n    this.connection = connection;\n    this.clientURI = new MongoClientURI(connection);\n  }\n\n  @Override\n  public boolean equals(Object that) {\n    if (this == that) {\n      return true;\n    } else if (that == null || getClass() != that.getClass()) {\n      return false;\n    }\n    MongoStoragePluginConfig thatConfig = (MongoStoragePluginConfig) that;\n    return this.connection.equals(thatConfig.connection);\n\n  }\n\n  @Override\n  public int hashCode() {\n    return this.connection != null ? this.connection.hashCode() : 0;\n  }\n\n  @JsonIgnore\n  public MongoCredential getMongoCrendials() {\n    return clientURI.getCredentials();\n  }\n\n  @JsonIgnore\n  public MongoClientOptions getMongoOptions() {\n    return clientURI.getOptions();\n  }\n\n  @JsonIgnore\n  public List<String> getHosts() {\n    return clientURI.getHosts();\n  }\n\n  public String getConnection() {\n    return connection;\n  }\n}<fim_middle>// class below has no smell\n"}