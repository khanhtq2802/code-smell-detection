{"text": "<fim_prefix>/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *  http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\npackage org.apache.struts2.config_browser;\n\nimport com.opensymphony.xwork2.ActionSupport;\nimport com.opensymphony.xwork2.config.entities.ActionConfig;\nimport com.opensymphony.xwork2.inject.Inject;\nimport org.apache.commons.text.StringEscapeUtils;\nimport org.apache.struts2.StrutsConstants;\n\nimport java.util.Set;\nimport java.util.TreeSet;\n\n/**\n * ActionNamesAction\n */\n<fim_suffix>public class ActionNamesAction extends ActionSupport {\n\n    private static final long serialVersionUID = -5389385242431387840L;\n\n    private Set<String> actionNames;\n    private String namespace = \"\";\n    private Set<String> namespaces;\n    private String extension;\n\n    protected ConfigurationHelper configHelper;\n\n    @Inject\n    public void setConfigurationHelper(ConfigurationHelper cfg) {\n        this.configHelper = cfg;\n    }\n\n    public Set<String> getActionNames() {\n        return actionNames;\n    }\n\n    public String getNamespace() {\n        return StringEscapeUtils.escapeHtml4(namespace);\n    }\n\n    public void setNamespace(String namespace) {\n        this.namespace = namespace;\n    }\n\n    @Inject(StrutsConstants.STRUTS_ACTION_EXTENSION)\n    public void setExtension(String ext) {\n        this.extension = ext;\n    }\n\n    public ActionConfig getConfig(String actionName) {\n        return configHelper.getActionConfig(namespace, actionName);\n    }\n\n    public Set<String> getNamespaces() {\n        return namespaces;\n    }\n\n    public String getExtension() {\n        if (extension == null) {\n            return \"action\";\n        }\n        if (extension.contains(\",\")) {\n            return extension.substring(0, extension.indexOf(\",\"));\n        }\n        return extension;\n    }\n\n    public String execute() throws Exception {\n        namespaces = configHelper.getNamespaces();\n        if (namespaces.size() == 0) {\n            addActionError(\"There are no namespaces in this configuration\");\n            return ERROR;\n        }\n        if (namespace == null) {\n            namespace = \"\";\n        }\n        actionNames = new TreeSet<String>(configHelper.getActionNames(namespace));\n        return SUCCESS;\n    }\n\n    /**\n     * Index action to support cooperation with REST plugin\n     *\n     * @return action result\n     * @throws Exception\n     */\n    public String index() throws Exception {\n        return execute();\n    }\n\n    public String redirect() {\n        return SUCCESS;\n    }\n\n}<fim_middle>// class below is data class\n"}