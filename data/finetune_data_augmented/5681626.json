{"text": "<fim_prefix>/*\n * $Id$\n *\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *  http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\npackage org.apache.struts.faces.component;\n\n\nimport javax.faces.component.UIOutput;\nimport javax.faces.context.FacesContext;\nimport javax.faces.el.ValueBinding;\n\n\n/**\n * <p>Custom component that replaces the Struts\n * <code>&lt;html:message&gt;</code> tag.</p>\n */\n\n<fim_suffix>public class MessageComponent extends UIOutput {\n\n\n    // ------------------------------------------------------------ Constructors\n\n\n    /**\n     * <p>Create a new {@link MessageComponent} with default properties.</p>\n     */\n    public MessageComponent() {\n\n        super();\n        setRendererType(\"org.apache.struts.faces.Message\");\n\n    }\n\n\n    // ------------------------------------------------------ Instance Variables\n\n\n    /**\n     * <p>MessageResources attribute key to use for message lookup.</p>\n     */\n    private String bundle = null;\n\n\n    /**\n     * <p>Flag indicating whether output should be filtered.</p>\n     */\n    private boolean filter = true;\n    private boolean filterSet = false;\n\n\n    /**\n     * <p>Message key to use for message lookup.</p>\n     */\n    private String key = null;\n\n\n    /**\n     * <p>CSS style(s) to be rendered for this component.</p>\n     */\n    private String style = null;\n\n\n    /**\n     * <p>CSS style class(es) to be rendered for this component.</p>\n     */\n    private String styleClass = null;\n\n\n    // ---------------------------------------------------- Component Properties\n\n\n    /**\n     * <p>Return the MessageResources key.</p>\n     */\n    public String getBundle() {\n\n        ValueBinding vb = getValueBinding(\"bundle\");\n        if (vb != null) {\n            return (String) vb.getValue(getFacesContext());\n        } else {\n            return bundle;\n        }\n\n    }\n\n\n    /**\n     * <p>Set the MessageResources key.</p>\n     *\n     * @param bundle The new key\n     */\n    public void setBundle(String bundle) {\n\n        this.bundle = bundle;\n\n    }\n\n\n    /**\n     * <p>Return the component family to which this component belongs.</p>\n     */\n    public String getFamily() {\n\n        return \"org.apache.struts.faces.Message\";\n\n    }\n\n\n    /**\n     * <p>Return a flag indicating whether filtering should take place.</p>\n     */\n    public boolean isFilter() {\n\n        if (filterSet) {\n            return filter;\n        }\n        ValueBinding vb = getValueBinding(\"filter\");\n        if (vb != null) {\n            Boolean value = (Boolean) vb.getValue(getFacesContext());\n            if (null == value) {\n                return filter;\n            }\n            return value.booleanValue();\n        } else {\n            return filter;\n        }\n\n    }\n\n\n    /**\n     * <p>Set the flag indicating that the output value should be filtered.</p>\n     *\n     * @param filter The new filter flag\n     */\n    public void setFilter(boolean filter) {\n\n        this.filter = filter;\n        this.filterSet = true;\n\n    }\n\n\n    /**\n     * <p>Return the message key.</p>\n     */\n    public String getKey() {\n\n        ValueBinding vb = getValueBinding(\"key\");\n        if (vb != null) {\n            return (String) vb.getValue(getFacesContext());\n        } else {\n            return key;\n        }\n\n    }\n\n\n    /**\n     * <p>Set the message key.</p>\n     *\n     * @param key The new key\n     */\n    public void setKey(String key) {\n\n        this.key = key;\n\n    }\n\n\n    /**\n     * <p>Return the CSS style(s) to be rendered for this component.</p>\n     */\n    public String getStyle() {\n\n        ValueBinding vb = getValueBinding(\"style\");\n        if (vb != null) {\n            return (String) vb.getValue(getFacesContext());\n        } else {\n            return style;\n        }\n\n    }\n\n\n    /**\n     * <p>Set the CSS style(s) to be rendered for this component.</p>\n     *\n     * @param style The new CSS style(s)\n     */\n    public void setStyle(String style) {\n\n        this.style = style;\n\n    }\n\n\n    /**\n     * <p>Return the CSS style class(es) to be rendered for this component.</p>\n     */\n    public String getStyleClass() {\n\n        ValueBinding vb = getValueBinding(\"styleClass\");\n        if (vb != null) {\n            return (String) vb.getValue(getFacesContext());\n        } else {\n            return styleClass;\n        }\n\n    }\n\n\n    /**\n     * <p>Set the CSS style class(es) to be rendered for this component.</p>\n     *\n     * @param styleClass The new CSS style class(es)\n     */\n    public void setStyleClass(String styleClass) {\n\n        this.styleClass = styleClass;\n\n    }\n\n\n    // ---------------------------------------------------- StateManager Methods\n\n\n    /**\n     * <p>Restore the state of this component.</p>\n     *\n     * @param context <code>FacesContext</code> for the current request\n     * @param state State object from which to restore our state\n     */\n    public void restoreState(FacesContext context, Object state) {\n\n        Object values[] = (Object[]) state;\n        super.restoreState(context, values[0]);\n        bundle = (String) values[1];\n        filter = ((Boolean) values[2]).booleanValue();\n        filterSet = ((Boolean) values[3]).booleanValue();\n        key = (String) values[4];\n        style = (String) values[5];\n        styleClass = (String) values[6];\n\n    }\n\n\n    /**\n     * <p>Save the state of this component.</p>\n     *\n     * @param context <code>FacesContext</code> for the current request\n     */\n    public Object saveState(FacesContext context) {\n\n        Object values[] = new Object[7];\n        values[0] = super.saveState(context);\n        values[1] = bundle;\n        values[2] = filter ? Boolean.TRUE : Boolean.FALSE;\n        values[3] = filterSet ? Boolean.TRUE : Boolean.FALSE;\n        values[4] = key;\n        values[5] = style;\n        values[6] = styleClass;\n        return values;\n\n    }\n\n\n}<fim_middle>// class below is data class\n"}