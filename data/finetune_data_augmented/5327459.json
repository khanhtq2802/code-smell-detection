{"text": "<fim_prefix>/*\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.apache.nifi.web.api.config;\n\nimport org.apache.nifi.util.StringUtils;\nimport org.apache.nifi.web.ResourceNotFoundException;\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\n\nimport javax.ws.rs.core.Response;\nimport javax.ws.rs.core.Response.Status;\nimport javax.ws.rs.ext.ExceptionMapper;\nimport javax.ws.rs.ext.Provider;\n\n/**\n * Maps resource not found exceptions into client responses.\n */\n<fim_suffix>@Provider\npublic class ResourceNotFoundExceptionMapper implements ExceptionMapper<ResourceNotFoundException> {\n\n    private static final Logger logger = LoggerFactory.getLogger(ResourceNotFoundExceptionMapper.class);\n\n    @Override\n    public Response toResponse(ResourceNotFoundException exception) {\n        // log the error\n        logger.info(String.format(\"%s. Returning %s response.\", exception, Response.Status.NOT_FOUND));\n\n        if (logger.isDebugEnabled()) {\n            logger.debug(StringUtils.EMPTY, exception);\n        }\n\n        return Response.status(Status.NOT_FOUND).entity(exception.getMessage()).type(\"text/plain\").build();\n    }\n\n}<fim_middle>// class below has no smell\n"}