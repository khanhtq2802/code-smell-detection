{"text": "<fim_prefix>package com.nwalsh.xalan;\n\nimport org.w3c.dom.*;\n\n/**\n * <p>Utility class for the Verbatim extension (ignore this).</p>\n *\n * <p>$Id: Callout.java,v 1.1 2002/05/15 17:22:28 isberg Exp $</p>\n *\n * <p>Copyright (C) 2000 Norman Walsh.</p>\n *\n * <p>This class is just for book keeping in the Verbatim class.\n * It stores information about the location of callouts.</p>\n *\n * <p>Only line/column based callouts are supported. This class\n * implements the Comparable interface so that callouts can be sorted.\n * Callouts are sorted so that they occur in left-to-right,\n * top-to-bottom order based on line/column.</p>\n *\n * <p><b>Change Log:</b></p>\n * <dl>\n * <dt>1.0</dt>\n * <dd><p>Initial release.</p></dd>\n * </dl>\n *\n * @author Norman Walsh\n * <a href=\"mailto:ndw@nwalsh.com\">ndw@nwalsh.com</a>\n *\n * @see Verbatim\n *\n * @version $Id: Callout.java,v 1.1 2002/05/15 17:22:28 isberg Exp $\n * */\n<fim_suffix>public class Callout implements Comparable {\n  /** The callout number. */\n  private int callout = 0;\n  /** The area Element item that generated this callout. */\n  private Element area = null;\n  /** The line on which this callout occurs. */\n  private int line = 0;\n  /** The column in which this callout appears. */\n  private int col = 0;\n  /** The type of callout. */\n  private int type = 0;\n  /** The other type of callout. */\n  private String otherType = null;\n\n  public static final int CALS_PAIR = 1;\n  public static final int LINE_COLUMN = 2;\n  public static final int LINE_COLUMN_PAIR = 3;\n  public static final int LINE_RANGE = 4;\n  public static final int OTHER = 5;\n\n  /** The constructor; initialize the private data structures. */\n  public Callout(int callout, Element area, int line, int col, int type) {\n    this.callout = callout;\n    this.area = area;\n    this.line = line;\n    this.col = col;\n    this.type = type;\n    this.otherType = null;\n  }\n\n  /** The constructor; initialize the private data structures. */\n  public Callout(int callout, Element area, int line, int col, String otherType) {\n    this.callout = callout;\n    this.area = area;\n    this.line = line;\n    this.col = col;\n    this.type = Callout.OTHER;\n    this.otherType = otherType;\n  }\n\n  /**\n   * <p>The compareTo method compares this Callout with another.</p>\n   *\n   * <p>Given two Callouts, A and B, A < B if:</p>\n   *\n   * <ol>\n   * <li>A.line < B.line, or</li>\n   * <li>A.line = B.line && A.col < B.col, or</li>\n   * <li>A.line = B.line && A.col = B.col && A.callout < B.callout</li>\n   * <li>Otherwise, they're equal.</li>\n   * </ol>\n   */\n  public int compareTo (Object o) {\n    Callout c = (Callout) o;\n\n    if (line == c.getLine()) {\n      if (col > c.getColumn()) {\n\treturn 1;\n      } else if (col < c.getColumn()) {\n\treturn -1;\n      } else {\n\tif (callout < c.getCallout()) {\n\t  return -1;\n\t} else if (callout > c.getCallout()) {\n\t  return 1;\n\t} else {\n\t  return 0;\n\t}\n      }\n    } else {\n      if (line > c.getLine()) {\n\treturn 1;\n      } else {\n\treturn -1;\n      }\n    }\n  }\n\n  /** Access the Callout's area. */\n  public Element getArea() {\n    return area;\n  }\n\n  /** Access the Callout's line. */\n  public int getLine() {\n    return line;\n  }\n\n  /** Access the Callout's column. */\n  public int getColumn() {\n    return col;\n  }\n\n  /** Access the Callout's callout number. */\n  public int getCallout() {\n    return callout;\n  }\n\n  /** Access the Callout's type. */\n  public int getType() {\n    return type;\n  }\n\n  /** Access the Callout's otherType. */\n  public String getOtherType() {\n    return otherType;\n  }\n\n\n}\n<fim_middle>// class below is data class\n"}