{"text": "<fim_prefix>/*****************************************************************\n *   Licensed to the Apache Software Foundation (ASF) under one\n *  or more contributor license agreements.  See the NOTICE file\n *  distributed with this work for additional information\n *  regarding copyright ownership.  The ASF licenses this file\n *  to you under the Apache License, Version 2.0 (the\n *  \"License\"); you may not use this file except in compliance\n *  with the License.  You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing,\n *  software distributed under the License is distributed on an\n *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n *  KIND, either express or implied.  See the License for the\n *  specific language governing permissions and limitations\n *  under the License.\n ****************************************************************/\npackage org.apache.cayenne.di;\n\n/**\n * A runtime exception thrown on DI misconfiguration.\n * \n * @since 4.0\n */\n<fim_suffix>public class DIRuntimeException extends RuntimeException {\n   \n\tprivate static final long serialVersionUID = 396131653561690312L;\n\n\t/**\n     * Creates new <code>ConfigurationException</code> without detail message.\n     */\n    public DIRuntimeException() {\n    }\n\n    /**\n     * Constructs an exception with the specified message with an optional list\n     * of message formatting arguments. Message formatting rules follow\n     * \"String.format(..)\" conventions.\n     */\n    public DIRuntimeException(String messageFormat, Object... messageArgs) {\n        super(String.format(messageFormat, messageArgs));\n    }\n\n    /**\n     * Constructs an exception wrapping another exception thrown elsewhere.\n     */\n    public DIRuntimeException(Throwable cause) {\n        super(cause);\n    }\n\n    public DIRuntimeException(String messageFormat, Throwable cause, Object... messageArgs) {\n        super(String.format(messageFormat, messageArgs), cause);\n    }\n}<fim_middle>// class below has no smell\n"}