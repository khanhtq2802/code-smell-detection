{"text": "<fim_prefix>/**\n * Copyright (c) 2013, 2016 itemis AG (http://www.itemis.eu) and others.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n */\npackage org.eclipse.xtend.core.macro.declaration;\n\nimport com.google.common.base.Objects;\nimport com.google.common.collect.Iterables;\nimport org.eclipse.xtend.core.macro.declaration.XtendTypeDeclarationImpl;\nimport org.eclipse.xtend.core.xtend.XtendAnnotationType;\nimport org.eclipse.xtend.core.xtend.XtendMember;\nimport org.eclipse.xtend.lib.macro.declaration.AnnotationTypeDeclaration;\nimport org.eclipse.xtend.lib.macro.declaration.AnnotationTypeElementDeclaration;\nimport org.eclipse.xtend.lib.macro.declaration.MemberDeclaration;\nimport org.eclipse.xtext.xbase.lib.Functions.Function1;\nimport org.eclipse.xtext.xbase.lib.IterableExtensions;\nimport org.eclipse.xtext.xbase.lib.ListExtensions;\n\n<fim_suffix>@SuppressWarnings(\"all\")\npublic class XtendAnnotationTypeDeclarationImpl extends XtendTypeDeclarationImpl<XtendAnnotationType> implements AnnotationTypeDeclaration {\n  @Override\n  public AnnotationTypeElementDeclaration findDeclaredAnnotationTypeElement(final String name) {\n    final Function1<AnnotationTypeElementDeclaration, Boolean> _function = (AnnotationTypeElementDeclaration it) -> {\n      String _simpleName = it.getSimpleName();\n      return Boolean.valueOf(Objects.equal(_simpleName, name));\n    };\n    return IterableExtensions.findFirst(this.getDeclaredAnnotationTypeElements(), _function);\n  }\n  \n  @Override\n  public Iterable<? extends AnnotationTypeElementDeclaration> getDeclaredAnnotationTypeElements() {\n    final Function1<XtendMember, MemberDeclaration> _function = (XtendMember it) -> {\n      return this.getCompilationUnit().toXtendMemberDeclaration(it);\n    };\n    return Iterables.<AnnotationTypeElementDeclaration>filter(ListExtensions.<XtendMember, MemberDeclaration>map(this.getDelegate().getMembers(), _function), AnnotationTypeElementDeclaration.class);\n  }\n}<fim_middle>// class below has no smell\n"}