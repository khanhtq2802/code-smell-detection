{"text": "<fim_prefix>/*\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to you under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.apache.calcite.adapter.enumerable;\n\nimport org.apache.calcite.plan.RelOptRule;\nimport org.apache.calcite.plan.RelOptRuleCall;\nimport org.apache.calcite.rel.RelNode;\nimport org.apache.calcite.rex.RexProgram;\nimport org.apache.calcite.tools.RelBuilderFactory;\n\n/** Variant of {@link org.apache.calcite.rel.rules.ProjectToCalcRule} for\n * {@link org.apache.calcite.adapter.enumerable.EnumerableConvention enumerable calling convention}. */\n<fim_suffix>public class EnumerableProjectToCalcRule extends RelOptRule {\n  /**\n   * Creates an EnumerableProjectToCalcRule.\n   *\n   * @param relBuilderFactory Builder for relational expressions\n   */\n  public EnumerableProjectToCalcRule(RelBuilderFactory relBuilderFactory) {\n    super(operand(EnumerableProject.class, any()), relBuilderFactory, null);\n  }\n\n  public void onMatch(RelOptRuleCall call) {\n    final EnumerableProject project = call.rel(0);\n    final RelNode input = project.getInput();\n    final RexProgram program =\n        RexProgram.create(input.getRowType(),\n            project.getProjects(),\n            null,\n            project.getRowType(),\n            project.getCluster().getRexBuilder());\n    final EnumerableCalc calc = EnumerableCalc.create(input, program);\n    call.transformTo(calc);\n  }\n}\n\n// End EnumerableProjectToCalcRule.java<fim_middle>// class below has no smell\n"}