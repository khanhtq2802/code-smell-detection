{"text": "<fim_prefix>/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements. See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership. The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\npackage org.apache.sshd.client.subsystem.sftp.fs;\n\nimport java.net.URI;\nimport java.util.Map;\n\nimport org.apache.sshd.common.PropertyResolver;\nimport org.apache.sshd.common.auth.BasicCredentialsProvider;\n\n/**\n * @author <a href=\"mailto:dev@mina.apache.org\">Apache MINA SSHD Project</a>\n */\n<fim_suffix>public class SftpFileSystemInitializationContext {\n    private final String id;\n    private final URI uri;\n    private final Map<String, ?> environment;\n    private String host;\n    private int port;\n    private BasicCredentialsProvider credentials;\n    private PropertyResolver propertyResolver;\n    private long maxConnectTime;\n    private long maxAuthTime;\n\n    /**\n     * @param id The unique identifier assigned to the file-system being created\n     * @param uri The original {@link URI} that triggered the file-system creation\n     * @param env The environment settings passed along with the URI (may be {@code null})\n     */\n    public SftpFileSystemInitializationContext(String id, URI uri, Map<String, ?> env) {\n        this.id = id;\n        this.uri = uri;\n        this.environment = env;\n    }\n\n    /**\n     * @return The unique identifier assigned to the file-system being created\n     */\n    public String getId() {\n        return id;\n    }\n\n    /**\n     * @return The original {@link URI} that triggered the file-system creation\n     */\n    public URI getUri() {\n        return uri;\n    }\n\n    /**\n     * @return The environment settings passed along with the URI (may be {@code null})\n     */\n    public Map<String, ?> getEnvironment() {\n        return environment;\n    }\n\n    public String getHost() {\n        return host;\n    }\n\n    public void setHost(String host) {\n        this.host = host;\n    }\n\n    /**\n     * @return The <U>resolved</U> target port from the URI\n     */\n    public int getPort() {\n        return port;\n    }\n\n    public void setPort(int port) {\n        this.port = port;\n    }\n\n    /**\n     * @return The credentials recovered from the URI\n     */\n    public BasicCredentialsProvider getCredentials() {\n        return credentials;\n    }\n\n    public void setCredentials(BasicCredentialsProvider credentials) {\n        this.credentials = credentials;\n    }\n\n    /**\n     * @return A {@link PropertyResolver} for easy access of any query parameters\n     * encoded in the URI\n     */\n    public PropertyResolver getPropertyResolver() {\n        return propertyResolver;\n    }\n\n    public void setPropertyResolver(PropertyResolver propertyResolver) {\n        this.propertyResolver = propertyResolver;\n    }\n\n    /**\n     * @return The <U>resolved</U> max. connect timeout (msec.)\n     */\n    public long getMaxConnectTime() {\n        return maxConnectTime;\n    }\n\n    public void setMaxConnectTime(long maxConnectTime) {\n        this.maxConnectTime = maxConnectTime;\n    }\n\n    /**\n     * @return The <U>resolved</U> max. authentication timeout (msec.)\n     */\n    public long getMaxAuthTime() {\n        return maxAuthTime;\n    }\n\n    public void setMaxAuthTime(long maxAuthTime) {\n        this.maxAuthTime = maxAuthTime;\n    }\n\n    @Override\n    public String toString() {\n        return getClass().getSimpleName() + \"[\" + getId() + \"]\";\n    }\n}<fim_middle>// class below is data class\n"}