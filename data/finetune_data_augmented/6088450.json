{"text": "<fim_prefix>/*******************************************************************************\n * Copyright (c) 2016 UT-Battelle, LLC.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *   Robert Smith\n *******************************************************************************/\npackage org.eclipse.eavp.tests.geometry.view.javafx.display;\n\nimport static org.junit.Assert.assertEquals;\n\nimport org.eclipse.eavp.geometry.view.javafx.display.FXScaleOption;\nimport org.eclipse.eavp.geometry.view.javafx.render.FXMeshCache;\nimport org.eclipse.eavp.geometry.view.javafx.render.FXRenderObject;\nimport org.eclipse.eavp.geometry.view.model.impl.ScaleOptionImpl;\nimport org.eclipse.january.geometry.GeometryFactory;\nimport org.eclipse.january.geometry.Shape;\nimport org.junit.Ignore;\nimport org.junit.Test;\n\n/**\n * A class to test the functionality of the FXScaleDecorator.\n * \n * @author Robert Smith\n *\n */\n<fim_suffix>public class FXScaleOptionTester {\n\n\t/**\n\t * Check that the decorator will set the object's scale correctly.\n\t */\n\t@Test @Ignore\n\tpublic void checkMesh() {\n\n\t\t// Create a render object\n\t\tShape shape = GeometryFactory.eINSTANCE.createShape();\n\t\tFXRenderObject object = new FXRenderObject(shape, new FXMeshCache());\n\n\t\t// Create a scale decorator for it\n\t\tFXScaleOption decorator = new FXScaleOption(object);\n\n\t\t// Set the scale\n\t\tobject.setProperty(ScaleOptionImpl.PROPERTY_NAME_SCALE, 0.5);\n\n\t\t// The child's scale in all directions should have been changed\n\t\tassertEquals(0.5, object.getMesh().getScaleX(), .01d);\n\t\tassertEquals(0.5, object.getMesh().getScaleY(), .01d);\n\t\tassertEquals(0.5, object.getMesh().getScaleZ(), .01d);\n\n\t\t// Sending an update from the shape should also set the scale\n\t\tshape.changeDecoratorProperty(ScaleOptionImpl.PROPERTY_NAME_SCALE, 10d);\n\t\tassertEquals(10, object.getMesh().getScaleX(), .01d);\n\t\tassertEquals(10, object.getMesh().getScaleY(), .01d);\n\t\tassertEquals(10, object.getMesh().getScaleZ(), .01d);\n\n\t\t// Deactivating the option should leave the object with a 1:1 scale\n\t\tdecorator.setActive(false);\n\t\tassertEquals(1, object.getMesh().getScaleX(), .01d);\n\t\tassertEquals(1, object.getMesh().getScaleY(), .01d);\n\t\tassertEquals(1, object.getMesh().getScaleZ(), .01d);\n\t}\n}<fim_middle>// class below has no smell\n"}