{"text": "<fim_prefix>/*******************************************************************************\n * Copyright (c) 2004 Actuate Corporation.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *  Actuate Corporation  - initial API and implementation\n *******************************************************************************/\n\npackage org.eclipse.birt.report.model.parser;\n\nimport org.eclipse.birt.report.model.api.metadata.PropertyValueException;\nimport org.eclipse.birt.report.model.api.util.StringUtil;\nimport org.eclipse.birt.report.model.core.DesignElement;\nimport org.eclipse.birt.report.model.elements.ReportItemTheme;\nimport org.eclipse.birt.report.model.elements.interfaces.IAbstractThemeModel;\nimport org.eclipse.birt.report.model.elements.interfaces.IReportItemThemeModel;\nimport org.eclipse.birt.report.model.util.AbstractParseState;\nimport org.eclipse.birt.report.model.util.XMLParserException;\nimport org.xml.sax.Attributes;\n\n/**\n * This class parses a theme in the library.\n */\n\n<fim_suffix>class ReportItemThemeState extends ReportElementState\n{\n\n\t/**\n\t * The report item theme being created.\n\t */\n\n\tprotected ReportItemTheme element;\n\n\t/**\n\t * Constructs the report item theme state with the design parser handler,\n\t * the container element and the container slot of the table row.\n\t * \n\t * @param handler\n\t *            the design file parser handler\n\t * @param theContainer\n\t *            the element that contains this one\n\t * @param slot\n\t *            the slot in which this element appears\n\t */\n\n\tReportItemThemeState( ModuleParserHandler handler,\n\t\t\tDesignElement theContainer, int slot )\n\t{\n\t\tsuper( handler, theContainer, slot );\n\n\t}\n\n\tpublic DesignElement getElement( )\n\t{\n\t\treturn element;\n\t}\n\n\t/*\n\t * (non-Javadoc)\n\t * \n\t * @see\n\t * org.eclipse.birt.report.model.util.AbstractParseState#startElement(java\n\t * .lang.String)\n\t */\n\n\tpublic AbstractParseState startElement( String tagName )\n\t{\n\t\tint tagValue = tagName.toLowerCase( ).hashCode( );\n\n\t\tif ( ParserSchemaConstants.STYLES_TAG == tagValue )\n\t\t\treturn new StylesState( handler, getElement( ),\n\t\t\t\t\tIAbstractThemeModel.STYLES_SLOT );\n\t\treturn super.startElement( tagName );\n\t}\n\n\t/*\n\t * (non-Javadoc)\n\t * \n\t * @see\n\t * org.eclipse.birt.report.model.util.AbstractParseState#parseAttrs(org.\n\t * xml.sax.Attributes)\n\t */\n\n\tpublic void parseAttrs( Attributes attrs ) throws XMLParserException\n\t{\n\t\telement = new ReportItemTheme( );\n\n\t\tString type = getAttrib( attrs, DesignSchemaConstants.TYPE_ATTRIB );\n\t\ttype = StringUtil.trimString( type );\n\n\t\tif ( !ReportItemTheme.isValidType( type ) )\n\t\t{\n\t\t\tRecoverableError\n\t\t\t\t\t.dealInvalidPropertyValue(\n\t\t\t\t\t\t\thandler,\n\t\t\t\t\t\t\tnew PropertyValueException(\n\t\t\t\t\t\t\t\t\telement,\n\t\t\t\t\t\t\t\t\tIReportItemThemeModel.TYPE_PROP,\n\t\t\t\t\t\t\t\t\ttype,\n\t\t\t\t\t\t\t\t\tPropertyValueException.DESIGN_EXCEPTION_NOT_SUPPORTED_REPORT_ITEM_THEME_TYPE ) );\n\t\t}\n\t\tsetProperty( IReportItemThemeModel.TYPE_PROP, type );\n\n\t\tinitElement( attrs, true );\n\t}\n\n}<fim_middle>// class below has no smell\n"}