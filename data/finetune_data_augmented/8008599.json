{"text": "<fim_prefix>/*\n * generated by Xtext\n */\npackage org.eclipse.xtext.ui.tests.editor.contentassist.ui;\n\nimport com.google.inject.Binder;\nimport com.google.inject.Provider;\nimport com.google.inject.name.Names;\nimport org.eclipse.ui.plugin.AbstractUIPlugin;\nimport org.eclipse.xtext.ide.LexerIdeBindings;\nimport org.eclipse.xtext.ide.editor.contentassist.antlr.IContentAssistParser;\nimport org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;\nimport org.eclipse.xtext.parser.antlr.AntlrTokenDefProvider;\nimport org.eclipse.xtext.parser.antlr.ITokenDefProvider;\nimport org.eclipse.xtext.parser.antlr.LexerProvider;\nimport org.eclipse.xtext.resource.containers.IAllContainersState;\nimport org.eclipse.xtext.ui.DefaultUiModule;\nimport org.eclipse.xtext.ui.editor.contentassist.ContentAssistContext;\nimport org.eclipse.xtext.ui.editor.contentassist.IContentProposalProvider;\nimport org.eclipse.xtext.ui.editor.contentassist.IProposalConflictHelper;\nimport org.eclipse.xtext.ui.editor.contentassist.antlr.AntlrProposalConflictHelper;\nimport org.eclipse.xtext.ui.editor.contentassist.antlr.DelegatingContentAssistContextFactory;\nimport org.eclipse.xtext.ui.shared.Access;\nimport org.eclipse.xtext.ui.tests.editor.contentassist.ide.contentassist.antlr.CrossReferenceProposalTestLanguageParser;\nimport org.eclipse.xtext.ui.tests.editor.contentassist.ide.contentassist.antlr.internal.InternalCrossReferenceProposalTestLanguageLexer;\nimport org.eclipse.xtext.ui.tests.editor.contentassist.ui.contentassist.CrossReferenceProposalTestLanguageProposalProvider;\n\n/**\n * Manual modifications go to {@link CrossReferenceProposalTestLanguageUiModule}.\n */\n@SuppressWarnings(\"all\")\npublic abstract class AbstractCrossReferenceProposalTestLanguageUiModule extends DefaultUiModule {\n\n\tpublic AbstractCrossReferenceProposalTestLanguageUiModule(AbstractUIPlugin plugin) {\n\t\tsuper(plugin);\n\t}\n\t\n\t// contributed by org.eclipse.xtext.xtext.generator.ImplicitFragment\n\tpublic Provider<? extends IAllContainersState> provideIAllContainersState() {\n\t\treturn Access.getJavaProjectsState();\n\t}\n\t\n\t// contributed by org.eclipse.xtext.xtext.generator.parser.antlr.XtextAntlrGeneratorFragment2\n\tpublic Class<? extends IProposalConflictHelper> bindIProposalConflictHelper() {\n\t\treturn AntlrProposalConflictHelper.class;\n\t}\n\t\n\t// contributed by org.eclipse.xtext.xtext.generator.parser.antlr.XtextAntlrGeneratorFragment2\n\tpublic void configureContentAssistLexer(Binder binder) {\n\t\tbinder.bind(Lexer.class)\n\t\t\t.annotatedWith(Names.named(LexerIdeBindings.CONTENT_ASSIST))\n\t\t\t.to(InternalCrossReferenceProposalTestLanguageLexer.class);\n\t}\n\t\n\t// contributed by org.eclipse.xtext.xtext.generator.parser.antlr.XtextAntlrGeneratorFragment2\n\tpublic void configureHighlightingLexer(Binder binder) {\n\t\tbinder.bind(org.eclipse.xtext.parser.antlr.Lexer.class)\n\t\t\t.annotatedWith(Names.named(LexerIdeBindings.HIGHLIGHTING))\n\t\t\t.to(org.eclipse.xtext.ui.tests.editor.contentassist.parser.antlr.internal.InternalCrossReferenceProposalTestLanguageLexer.class);\n\t}\n\t\n\t// contributed by org.eclipse.xtext.xtext.generator.parser.antlr.XtextAntlrGeneratorFragment2\n\tpublic void configureHighlightingTokenDefProvider(Binder binder) {\n\t\tbinder.bind(ITokenDefProvider.class)\n\t\t\t.annotatedWith(Names.named(LexerIdeBindings.HIGHLIGHTING))\n\t\t\t.to(AntlrTokenDefProvider.class);\n\t}\n\t\n\t// contributed by org.eclipse.xtext.xtext.generator.parser.antlr.XtextAntlrGeneratorFragment2\n<fim_suffix>\tpublic Class<? extends ContentAssistContext.Factory> bindContentAssistContext$Factory() {\n\t\treturn DelegatingContentAssistContextFactory.class;\n\t}\n\t\n\t// contributed by org.eclipse.xtext.xtext.generator.parser.antlr.XtextAntlrGeneratorFragment2\n\tpublic Class<? extends IContentAssistParser> bindIContentAssistParser() {\n\t\treturn CrossReferenceProposalTestLanguageParser.class;\n\t}\n\t\n\t// contributed by org.eclipse.xtext.xtext.generator.parser.antlr.XtextAntlrGeneratorFragment2\n\tpublic void configureContentAssistLexerProvider(Binder binder) {\n\t\tbinder.bind(InternalCrossReferenceProposalTestLanguageLexer.class).toProvider(LexerProvider.create(InternalCrossReferenceProposalTestLanguageLexer.class));\n\t}\n\t\n\t// contributed by org.eclipse.xtext.xtext.generator.ui.contentAssist.ContentAssistFragment2\n\tpublic Class<? extends IContentProposalProvider> bindIContentProposalProvider() {\n\t\treturn CrossReferenceProposalTestLanguageProposalProvider.class;\n\t}\n\t\n}<fim_middle>// function below has no smell\n"}