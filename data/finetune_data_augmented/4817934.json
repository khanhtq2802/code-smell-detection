{"text": "<fim_prefix>package org.apache.taverna.workbench.file.importworkflow.actions;\n/*\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport java.awt.Component;\nimport java.awt.event.ActionEvent;\n\nimport javax.swing.AbstractAction;\n\nimport org.apache.taverna.activities.dataflow.servicedescriptions.DataflowActivityIcon;\nimport org.apache.taverna.ui.menu.MenuManager;\nimport org.apache.taverna.workbench.configuration.colour.ColourManager;\nimport org.apache.taverna.workbench.configuration.workbench.WorkbenchConfiguration;\nimport org.apache.taverna.workbench.edits.EditManager;\nimport org.apache.taverna.workbench.file.FileManager;\nimport org.apache.taverna.workbench.file.importworkflow.gui.ImportWorkflowWizard;\nimport org.apache.taverna.workbench.selection.SelectionManager;\nimport org.apache.taverna.workbench.ui.Utils;\n\n/**\n * A general version of {@link AddNestedWorkflowAction} and {@link MergeWorkflowAction} that allows\n * the user to choose which action to perform.\n *\n * @author Stian Soiland-Reyes\n *\n */\n<fim_suffix>public class ImportWorkflowAction extends AbstractAction {\n\tprivate static final long serialVersionUID = -2242979457902699028L;\n\tprivate final EditManager editManager;\n\tprivate final FileManager fileManager;\n\tprivate final MenuManager menuManager;\n\tprivate final ColourManager colourManager;\n\tprivate final WorkbenchConfiguration workbenchConfiguration;\n\tprivate final SelectionManager selectionManager;\n\n\tpublic ImportWorkflowAction(EditManager editManager, FileManager fileManager,\n\t\t\tMenuManager menuManager, ColourManager colourManager,\n\t\t\tWorkbenchConfiguration workbenchConfiguration, SelectionManager selectionManager) {\n\t\tsuper(\"Import workflow\", DataflowActivityIcon.getDataflowIcon());\n\t\tthis.editManager = editManager;\n\t\tthis.fileManager = fileManager;\n\t\tthis.menuManager = menuManager;\n\t\tthis.colourManager = colourManager;\n\t\tthis.workbenchConfiguration = workbenchConfiguration;\n\t\tthis.selectionManager = selectionManager;\n\t}\n\n\tpublic void actionPerformed(ActionEvent e) {\n\t\tfinal Component parentComponent;\n\t\tif (e.getSource() instanceof Component) {\n\t\t\tparentComponent = (Component) e.getSource();\n\t\t} else {\n\t\t\tparentComponent = null;\n\t\t}\n\t\tImportWorkflowWizard wizard = new ImportWorkflowWizard(\n\t\t\t\tUtils.getParentFrame(parentComponent), editManager, fileManager, menuManager,\n\t\t\t\tcolourManager, workbenchConfiguration, selectionManager);\n\t\twizard.setVisible(true);\n\t}\n\n}<fim_middle>// class below has no smell\n"}