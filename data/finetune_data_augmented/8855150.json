{"text": "<fim_prefix>      }\n      protected boolean isOneway() {\n        return false;\n      }\n      public registerResourceJobManager_result getResult(I iface, registerResourceJobManager_args args) throws org.apache.thrift.TException {\n        registerResourceJobManager_result result = new registerResourceJobManager_result();\n        try {\n          result.success = iface.registerResourceJobManager(args.authzToken, args.resourceJobManager);\n        } catch (org.apache.airavata.model.error.InvalidRequestException ire) {\n          result.ire = ire;\n        } catch (org.apache.airavata.model.error.AiravataClientException ace) {\n          result.ace = ace;\n        } catch (org.apache.airavata.model.error.AiravataSystemException ase) {\n          result.ase = ase;\n        } catch (org.apache.airavata.model.error.AuthorizationException ae) {\n          result.ae = ae;\n        }\n        return result;\n      }\n    }\n    public static class updateResourceJobManager<I extends Iface> extends org.apache.thrift.ProcessFunction<I, updateResourceJobManager_args> {\n      public updateResourceJobManager() {\n        super(\"updateResourceJobManager\");\n      }\n      public updateResourceJobManager_args getEmptyArgsInstance() {\n        return new updateResourceJobManager_args();\n      }\n      protected boolean isOneway() {\n        return false;\n      }\n      public updateResourceJobManager_result getResult(I iface, updateResourceJobManager_args args) throws org.apache.thrift.TException {\n        updateResourceJobManager_result result = new updateResourceJobManager_result();\n        try {\n          result.success = iface.updateResourceJobManager(args.authzToken, args.resourceJobManagerId, args.updatedResourceJobManager);\n          result.setSuccessIsSet(true);\n        } catch (org.apache.airavata.model.error.InvalidRequestException ire) {\n          result.ire = ire;\n        } catch (org.apache.airavata.model.error.AiravataClientException ace) {\n          result.ace = ace;\n        } catch (org.apache.airavata.model.error.AiravataSystemException ase) {\n          result.ase = ase;\n        } catch (org.apache.airavata.model.error.AuthorizationException ae) {\n          result.ae = ae;\n        }\n        return result;\n      }\n    }\n    public static class getResourceJobManager<I extends Iface> extends org.apache.thrift.ProcessFunction<I, getResourceJobManager_args> {\n      public getResourceJobManager() {\n        super(\"getResourceJobManager\");\n      }\n      public getResourceJobManager_args getEmptyArgsInstance() {\n        return new getResourceJobManager_args();\n      }\n      protected boolean isOneway() {\n        return false;\n      }\n      public getResourceJobManager_result getResult(I iface, getResourceJobManager_args args) throws org.apache.thrift.TException {\n        getResourceJobManager_result result = new getResourceJobManager_result();\n        try {\n          result.success = iface.getResourceJobManager(args.authzToken, args.resourceJobManagerId);\n        } catch (org.apache.airavata.model.error.InvalidRequestException ire) {\n          result.ire = ire;\n        } catch (org.apache.airavata.model.error.AiravataClientException ace) {\n          result.ace = ace;\n        } catch (org.apache.airavata.model.error.AiravataSystemException ase) {\n          result.ase = ase;\n        } catch (org.apache.airavata.model.error.AuthorizationException ae) {\n          result.ae = ae;\n        }\n        return result;\n      }\n    }\n    public static class deleteResourceJobManager<I extends Iface> extends org.apache.thrift.ProcessFunction<I, deleteResourceJobManager_args> {\n      public deleteResourceJobManager() {\n        super(\"deleteResourceJobManager\");\n      }\n      public deleteResourceJobManager_args getEmptyArgsInstance() {\n        return new deleteResourceJobManager_args();\n      }\n      protected boolean isOneway() {\n        return false;\n      }\n      public deleteResourceJobManager_result getResult(I iface, deleteResourceJobManager_args args) throws org.apache.thrift.TException {\n        deleteResourceJobManager_result result = new deleteResourceJobManager_result();\n        try {\n          result.success = iface.deleteResourceJobManager(args.authzToken, args.resourceJobManagerId);\n          result.setSuccessIsSet(true);\n        } catch (org.apache.airavata.model.error.InvalidRequestException ire) {\n          result.ire = ire;\n        } catch (org.apache.airavata.model.error.AiravataClientException ace) {\n          result.ace = ace;\n        } catch (org.apache.airavata.model.error.AiravataSystemException ase) {\n          result.ase = ase;\n        } catch (org.apache.airavata.model.error.AuthorizationException ae) {\n          result.ae = ae;\n        }\n        return result;\n      }\n    }\n    public static class deleteBatchQueue<I extends Iface> extends org.apache.thrift.ProcessFunction<I, deleteBatchQueue_args> {\n      public deleteBatchQueue() {\n        super(\"deleteBatchQueue\");\n      }\n      public deleteBatchQueue_args getEmptyArgsInstance() {\n        return new deleteBatchQueue_args();\n      }\n      protected boolean isOneway() {\n        return false;\n      }\n      public deleteBatchQueue_result getResult(I iface, deleteBatchQueue_args args) throws org.apache.thrift.TException {\n        deleteBatchQueue_result result = new deleteBatchQueue_result();\n        try {\n          result.success = iface.deleteBatchQueue(args.authzToken, args.computeResourceId, args.queueName);\n          result.setSuccessIsSet(true);\n        } catch (org.apache.airavata.model.error.InvalidRequestException ire) {\n          result.ire = ire;\n        } catch (org.apache.airavata.model.error.AiravataClientException ace) {\n          result.ace = ace;\n        } catch (org.apache.airavata.model.error.AiravataSystemException ase) {\n          result.ase = ase;\n        } catch (org.apache.airavata.model.error.AuthorizationException ae) {\n          result.ae = ae;\n        }\n        return result;\n      }\n    }\n    public static class registerGatewayResourceProfile<I extends Iface> extends org.apache.thrift.ProcessFunction<I, registerGatewayResourceProfile_args> {\n      public registerGatewayResourceProfile() {\n        super(\"registerGatewayResourceProfile\");\n      }\n      public registerGatewayResourceProfile_args getEmptyArgsInstance() {\n        return new registerGatewayResourceProfile_args();\n      }\n      protected boolean isOneway() {\n        return false;\n      }\n      public registerGatewayResourceProfile_result getResult(I iface, registerGatewayResourceProfile_args args) throws org.apache.thrift.TException {\n        registerGatewayResourceProfile_result result = new registerGatewayResourceProfile_result();\n        try {\n          result.success = iface.registerGatewayResourceProfile(args.authzToken, args.gatewayResourceProfile);\n        } catch (org.apache.airavata.model.error.InvalidRequestException ire) {\n          result.ire = ire;\n        } catch (org.apache.airavata.model.error.AiravataClientException ace) {\n          result.ace = ace;\n        } catch (org.apache.airavata.model.error.AiravataSystemException ase) {\n          result.ase = ase;\n        } catch (org.apache.airavata.model.error.AuthorizationException ae) {\n          result.ae = ae;\n        }\n        return result;\n      }\n    }\n<fim_suffix>    public static class getGatewayResourceProfile<I extends Iface> extends org.apache.thrift.ProcessFunction<I, getGatewayResourceProfile_args> {\n      public getGatewayResourceProfile() {\n        super(\"getGatewayResourceProfile\");\n      }\n      public getGatewayResourceProfile_args getEmptyArgsInstance() {\n        return new getGatewayResourceProfile_args();\n      }\n      protected boolean isOneway() {\n        return false;\n      }\n      public getGatewayResourceProfile_result getResult(I iface, getGatewayResourceProfile_args args) throws org.apache.thrift.TException {\n        getGatewayResourceProfile_result result = new getGatewayResourceProfile_result();\n        try {\n          result.success = iface.getGatewayResourceProfile(args.authzToken, args.gatewayID);\n        } catch (org.apache.airavata.model.error.InvalidRequestException ire) {\n          result.ire = ire;\n        } catch (org.apache.airavata.model.error.AiravataClientException ace) {\n          result.ace = ace;\n        } catch (org.apache.airavata.model.error.AiravataSystemException ase) {\n          result.ase = ase;\n        } catch (org.apache.airavata.model.error.AuthorizationException ae) {\n          result.ae = ae;\n        }\n        return result;\n      }\n    }<fim_middle>// class below has no smell\n"}