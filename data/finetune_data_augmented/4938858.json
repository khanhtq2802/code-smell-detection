{"text": "<fim_prefix> * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.jclouds.rackspace.cloudloadbalancers.v1.features;\nimport java.util.Map;\nimport javax.inject.Named;\nimport javax.ws.rs.Consumes;\nimport javax.ws.rs.DELETE;\nimport javax.ws.rs.GET;\nimport javax.ws.rs.POST;\nimport javax.ws.rs.PUT;\nimport javax.ws.rs.Path;\nimport javax.ws.rs.PathParam;\nimport javax.ws.rs.Produces;\nimport javax.ws.rs.QueryParam;\nimport javax.ws.rs.core.MediaType;\nimport org.jclouds.Fallbacks.EmptyMapOnNotFoundOr404;\nimport org.jclouds.Fallbacks.EmptyPagedIterableOnNotFoundOr404;\nimport org.jclouds.Fallbacks.FalseOnNotFoundOr404;\nimport org.jclouds.Fallbacks.NullOnNotFoundOr404;\nimport org.jclouds.Fallbacks.VoidOnNotFoundOr404;\nimport org.jclouds.collect.IterableWithMarker;\nimport org.jclouds.collect.PagedIterable;\nimport org.jclouds.openstack.keystone.auth.filters.AuthenticateRequest;\nimport org.jclouds.openstack.keystone.v2_0.KeystoneFallbacks.EmptyPaginatedCollectionOnNotFoundOr404;\nimport org.jclouds.openstack.v2_0.options.PaginationOptions;\nimport org.jclouds.rackspace.cloudloadbalancers.v1.binders.BindMetadataToJsonPayload;\nimport org.jclouds.rackspace.cloudloadbalancers.v1.domain.CreateLoadBalancer;\nimport org.jclouds.rackspace.cloudloadbalancers.v1.domain.LoadBalancer;\nimport org.jclouds.rackspace.cloudloadbalancers.v1.domain.Metadata;\nimport org.jclouds.rackspace.cloudloadbalancers.v1.domain.UpdateLoadBalancer;\nimport org.jclouds.rackspace.cloudloadbalancers.v1.functions.ParseLoadBalancer;\nimport org.jclouds.rackspace.cloudloadbalancers.v1.functions.ParseLoadBalancers;\nimport org.jclouds.rackspace.cloudloadbalancers.v1.functions.ParseMetadata;\nimport org.jclouds.rest.annotations.BinderParam;\nimport org.jclouds.rest.annotations.Fallback;\nimport org.jclouds.rest.annotations.Payload;\nimport org.jclouds.rest.annotations.PayloadParam;\nimport org.jclouds.rest.annotations.RequestFilters;\nimport org.jclouds.rest.annotations.ResponseParser;\nimport org.jclouds.rest.annotations.Transform;\nimport org.jclouds.rest.annotations.WrapWith;\n/**\n * Provides access to CloudLoadBalancers LoadBalancer features.\n * <p/>\n */\n<fim_suffix>@RequestFilters(AuthenticateRequest.class)\npublic interface LoadBalancerApi {\n   /**\n    * Create a new load balancer with the configuration defined by the request.\n    * \n    * @return The object will contain a unique identifier and status of the request. Using the\n    *         identifier, the caller can check on the progress of the operation by performing a\n    *         {@link LoadBalancerApi#get}.\n    */\n   @Named(\"lb:create\")\n   @POST\n   @ResponseParser(ParseLoadBalancer.class)\n   @Consumes(MediaType.APPLICATION_JSON)\n   @Fallback(NullOnNotFoundOr404.class)\n   @Path(\"/loadbalancers\")\n   LoadBalancer create(@WrapWith(\"loadBalancer\") CreateLoadBalancer createLB);\n   /**\n    * Update the properties of a load balancer.\n    * \n    * @return The object will contain a unique identifier and status of the request. Using the\n    *         identifier, the caller can check on the progress of the operation by performing a\n    *         {@link LoadBalancerApi#get}.\n    */\n   @Named(\"lb:update\")\n   @PUT\n   @ResponseParser(ParseLoadBalancer.class)\n   @Consumes(MediaType.APPLICATION_JSON)\n   @Path(\"/loadbalancers/{id}\")\n   void update(@PathParam(\"id\") int id, @WrapWith(\"loadBalancer\") UpdateLoadBalancer updateLB);\n   /**\n    * List the load balancers.\n    */\n   @Named(\"lb:list\")\n   @GET\n   @ResponseParser(ParseLoadBalancers.class)\n   @Transform(ParseLoadBalancers.ToPagedIterable.class)\n   @Consumes(MediaType.APPLICATION_JSON)\n   @Path(\"/loadbalancers\")\n   @Fallback(EmptyPagedIterableOnNotFoundOr404.class)\n   PagedIterable<LoadBalancer> list();\n   /**\n    * List the load balancers with full control of pagination.\n    */\n   @Named(\"lb:list\")\n   @GET\n   @ResponseParser(ParseLoadBalancers.class)\n   @Consumes(MediaType.APPLICATION_JSON)\n   @Fallback(EmptyPaginatedCollectionOnNotFoundOr404.class)\n   @Path(\"/loadbalancers\")\n   IterableWithMarker<LoadBalancer> list(PaginationOptions options);\n   /**\n    * Get a load balancer.\n    */\n   @Named(\"lb:get\")\n   @GET\n   @ResponseParser(ParseLoadBalancer.class)\n   @Consumes(MediaType.APPLICATION_JSON)\n   @Fallback(NullOnNotFoundOr404.class)\n   @Path(\"/loadbalancers/{id}\")\n   LoadBalancer get(@PathParam(\"id\") int id);\n   /**\n    * Delete a load balancer.\n    */\n   @Named(\"lb:delete\")\n   @DELETE\n   @Fallback(VoidOnNotFoundOr404.class)\n   @Path(\"/loadbalancers/{id}\")\n   @Consumes(\"*/*\")\n   void delete(@PathParam(\"id\") int id);\n   /**\n    * When a metadata item is added, it is assigned a unique identifier that can be used for mutating operations such\n    * as changing the value attribute or removing it. Key and value must be 256 characters or less. \n    * All UTF-8 characters are valid.\n    */\n   @Named(\"lb:createmetadata\")\n   @POST\n   @Consumes(MediaType.APPLICATION_JSON)\n   @ResponseParser(ParseMetadata.class)\n   @Fallback(EmptyMapOnNotFoundOr404.class)\n   @Path(\"/loadbalancers/{id}/metadata\")\n   Metadata createMetadata(@PathParam(\"id\") int id, \n                           @BinderParam(BindMetadataToJsonPayload.class) Map<String, String> metadata);\n   /**\n    * List a load balancer's metadata.\n    */\n   @Named(\"lb:getmetadata\")\n   @GET\n   @Consumes(MediaType.APPLICATION_JSON)\n   @ResponseParser(ParseMetadata.class)\n   @Fallback(EmptyMapOnNotFoundOr404.class)\n   @Path(\"/loadbalancers/{id}/metadata\")\n   Metadata getMetadata(@PathParam(\"id\") int id);\n   /**\n    * Update metadatum. Key and value must be 256 characters or less. All UTF-8 characters are valid.\n    * \n    * @return true on a successful update, false if the metadatum was not found\n    */\n   @Named(\"lb:updatemetadatum\")\n   @PUT\n   @Produces(MediaType.APPLICATION_JSON)\n   @Consumes(\"*/*\")\n   @Fallback(FalseOnNotFoundOr404.class)\n   @Payload(\"%7B\\\"meta\\\":%7B\\\"value\\\":\\\"{value}\\\"%7D%7D\")\n   @Path(\"/loadbalancers/{id}/metadata/{metadatumId}\")\n   boolean updateMetadatum(@PathParam(\"id\") int id, \n                           @PathParam(\"metadatumId\") int metadatumId, \n                           @PayloadParam(\"value\") String value);\n   /**\n    * Delete metadatum.\n    * \n    * @see LoadBalancerApi#deleteMetadata(int, Iterable)\n    * \n    * @return true on a successful removal, false if the metadatum was not found\n    */\n   @Named(\"lb:deletemetadatum\")\n   @DELETE\n   @Fallback(FalseOnNotFoundOr404.class)\n   @Consumes(\"*/*\")\n   @Path(\"/loadbalancers/{id}/metadata/{metadatumId}\")\n   boolean deleteMetadatum(@PathParam(\"id\") int id, @PathParam(\"metadatumId\") int metadatumId);\n   /**\n    * Batch delete metadata given the specified ids.\n    * \n    * The current default limit is ten ids per request. Any and all configuration data is immediately purged and is \n    * not recoverable. If one or more of the items in the list cannot be removed due to its current status, an \n    * exception is thrown along with the ids of the ones the system identified as potential failures for this request.\n    * \n    * @return true on a successful removal, false if the metadata was not found\n    */\n   @Named(\"lb:deletemetadata\")\n   @DELETE\n   @Fallback(FalseOnNotFoundOr404.class)\n   @Consumes(\"*/*\")\n   @Path(\"/loadbalancers/{id}/metadata\")\n   boolean deleteMetadata(@PathParam(\"id\") int id, \n                          @QueryParam(\"id\") Iterable<Integer> metadataIds);\n}<fim_middle>// class below has no smell\n"}