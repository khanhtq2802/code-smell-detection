{"text": "<fim_prefix>/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements. See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership. The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License. You may obtain a copy of the License at\n*\n* http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied. See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\npackage org.apache.taverna.activities.externaltool;\n\nimport java.net.URI;\n\nimport org.apache.taverna.activities.externaltool.invocation.AskUserForPw;\nimport org.apache.taverna.security.credentialmanager.CMException;\nimport org.apache.taverna.security.credentialmanager.CredentialManager;\nimport org.apache.taverna.security.credentialmanager.UsernamePassword;\n\npublic class RetrieveLoginFromTaverna implements AskUserForPw {\n\tprivate final String url;\n\tprivate final CredentialManager credentialManager;\n\n\tpublic RetrieveLoginFromTaverna(String url, CredentialManager credentialManager) {\n\t\tthis.url = url;\n\t\tthis.credentialManager = credentialManager;\n\t}\n\n\tprivate UsernamePassword getUserPass() {\n\t\ttry {\n\t\t\tfinal String urlStr = url;\n\t\t\tURI userpassUrl = URI.create(urlStr.replace(\"//\", \"/\"));\n\t\t\tfinal UsernamePassword userAndPass = credentialManager.getUsernameAndPasswordForService(userpassUrl, false, null);\n\t\t\treturn userAndPass;\n\t\t} catch (CMException e) {\n\t\t\tthrow new RuntimeException(\"Error in Taverna Credential Manager\", e);\n\t\t}\n\t}\n\n\tpublic String getUsername() throws RuntimeException {\n\t\tfinal UsernamePassword userPass = getUserPass();\n\t\tif (userPass == null) {\n\t\t\tthrow new RuntimeException(\"Unable to obtain valid username and password\");\n\t\t}\n\t\tuserPass.resetPassword();\n\t\treturn userPass.getUsername();\n\t}\n\n<fim_suffix>\tpublic String getPassword() {\n\t\tfinal UsernamePassword userPass = getUserPass();\n\t\tfinal String pw = userPass.getPasswordAsString();\n\t\tuserPass.resetPassword();\n\t\treturn pw;\n\t}\n\n\n\tpublic String getKeyfile() {\n\t\treturn \"\";\n\t}\n\n\tpublic String getPassphrase() {\n\t\treturn \"\";\n\t}\n\n\tpublic void authenticationSucceeded() {\n\t}\n}<fim_middle>// function below has no smell\n"}