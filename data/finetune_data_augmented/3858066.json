{"text": "<fim_prefix>\n<fim_suffix>@Table(name = \"clusters\")\n@NamedQueries({\n    @NamedQuery(name = \"clusterByName\", query =\n        \"SELECT cluster \" +\n            \"FROM ClusterEntity cluster \" +\n            \"WHERE cluster.clusterName=:clusterName\"),\n    @NamedQuery(name = \"allClusters\", query =\n        \"SELECT clusters \" +\n            \"FROM ClusterEntity clusters\"),\n    @NamedQuery(name = \"clusterByResourceId\", query =\n        \"SELECT cluster \" +\n            \"FROM ClusterEntity cluster \" +\n            \"WHERE cluster.resource.id=:resourceId\")\n})\n@Entity\n@TableGenerator(name = \"cluster_id_generator\",\n    table = \"ambari_sequences\", pkColumnName = \"sequence_name\", valueColumnName = \"sequence_value\"\n    , pkColumnValue = \"cluster_id_seq\"\n    , initialValue = 1\n)\npublic class ClusterEntity {\n  @Id\n  @Column(name = \"cluster_id\", nullable = false, insertable = true, updatable = true)\n  @GeneratedValue(strategy = GenerationType.TABLE, generator = \"cluster_id_generator\")\n  private Long clusterId;\n  @Basic\n  @Column(name = \"cluster_name\", nullable = false, insertable = true,\n      updatable = true, unique = true, length = 100)\n  private String clusterName;\n  @Basic\n  @Enumerated(value = EnumType.STRING)\n  @Column(name = \"provisioning_state\", insertable = true, updatable = true)\n  private State provisioningState = State.INIT;\n  @Basic\n  @Enumerated(value = EnumType.STRING)\n  @Column(name = \"security_type\", nullable = false, insertable = true, updatable = true)\n  private SecurityType securityType = SecurityType.NONE;\n  @Basic\n  @Column(name = \"desired_cluster_state\", insertable = true, updatable = true)\n  private String desiredClusterState = \"\";\n  @Basic\n  @Column(name = \"cluster_info\", insertable = true, updatable = true)\n  private String clusterInfo = \"\";\n  /**\n   * Unidirectional one-to-one association to {@link StackEntity}\n   */\n  @OneToOne\n  @JoinColumn(name = \"desired_stack_id\", unique = false, nullable = false, insertable = true, updatable = true)\n  private StackEntity desiredStack;\n  @OneToMany(mappedBy = \"clusterEntity\")\n  private Collection<ClusterServiceEntity> clusterServiceEntities;\n  @OneToOne(mappedBy = \"clusterEntity\", cascade = CascadeType.REMOVE)\n  private ClusterStateEntity clusterStateEntity;\n  @ManyToMany(mappedBy = \"clusterEntities\")\n  private Collection<HostEntity> hostEntities;\n  @OneToMany(mappedBy = \"clusterEntity\", cascade = CascadeType.ALL)\n  private Collection<ClusterConfigEntity> configEntities;\n  @OneToMany(mappedBy = \"clusterEntity\", cascade = CascadeType.ALL)\n  private Collection<ConfigGroupEntity> configGroupEntities;\n  @OneToMany(mappedBy = \"clusterEntity\", cascade = CascadeType.ALL)\n  private Collection<RequestScheduleEntity> requestScheduleEntities;\n  @OneToMany(mappedBy = \"clusterEntity\", cascade = CascadeType.REMOVE)\n  private Collection<ServiceConfigEntity> serviceConfigEntities;\n  @OneToMany(mappedBy = \"clusterEntity\", cascade = CascadeType.REMOVE, fetch = FetchType.LAZY)\n  private Collection<AlertDefinitionEntity> alertDefinitionEntities;\n  @OneToMany(mappedBy = \"clusterEntity\", cascade = CascadeType.REMOVE, fetch = FetchType.LAZY)\n  private Collection<WidgetEntity> widgetEntities;\n  @OneToMany(mappedBy = \"clusterEntity\", cascade = CascadeType.REMOVE, fetch = FetchType.LAZY)\n  private Collection<WidgetLayoutEntity> widgetLayoutEntities;\n  @OneToOne(cascade = CascadeType.ALL)\n  @JoinColumns({\n      @JoinColumn(name = \"resource_id\", referencedColumnName = \"resource_id\", nullable = false)\n  })\n  private ResourceEntity resource;\n  @Basic\n  @Column(name = \"upgrade_id\", nullable = true, insertable = false, updatable = false)\n  private Long upgradeId;\n  /**\n   * {@code null} when there is no upgrade/downgrade in progress.\n   */\n  @OneToOne(cascade = CascadeType.REMOVE)\n  @JoinColumn(\n      name = \"upgrade_id\",\n      referencedColumnName = \"upgrade_id\",\n      nullable = true,\n      insertable = false,\n      updatable = true)\n  private UpgradeEntity upgradeEntity = null;\n  public Long getClusterId() {\n    return clusterId;\n  }\n  public void setClusterId(Long clusterId) {\n    this.clusterId = clusterId;\n  }\n  public String getClusterName() {\n    return clusterName;\n  }\n  public void setClusterName(String clusterName) {\n    this.clusterName = clusterName;\n  }\n  public String getDesiredClusterState() {\n    return defaultString(desiredClusterState);\n  }\n  public void setDesiredClusterState(String desiredClusterState) {\n    this.desiredClusterState = desiredClusterState;\n  }\n  public String getClusterInfo() {\n    return defaultString(clusterInfo);\n  }\n  public void setClusterInfo(String clusterInfo) {\n    this.clusterInfo = clusterInfo;\n  }\n  public StackEntity getDesiredStack() {\n    return desiredStack;\n  }\n  public void setDesiredStack(StackEntity desiredStack) {\n    this.desiredStack = desiredStack;\n  }\n  /**\n   * Gets whether the cluster is still initializing or has finished with its\n   * deployment requests.\n   *\n   * @return either {@link State#INIT} or {@link State#INSTALLED},\n   * never {@code null}.\n   */\n  public State getProvisioningState(){\n    return provisioningState;\n  }\n  /**\n   * Sets whether the cluster is still initializing or has finished with its\n   * deployment requests.\n   *\n   * @param provisioningState either {@link State#INIT} or\n   * {@link State#INSTALLED}, never {@code null}.\n   */\n  public void setProvisioningState(State provisioningState){\n    this.provisioningState = provisioningState;\n  }\n  /**\n   * Gets this ClusterEntity's security type.\n   *\n   * @return the current SecurityType\n   */\n  public SecurityType getSecurityType() {\n    return securityType;\n  }\n  /**\n   * Set's this ClusterEntity's security type\n   *\n   * @param securityType the new SecurityType\n   */\n  public void setSecurityType(SecurityType securityType) {\n    this.securityType = securityType;\n  }\n  @Override\n  public boolean equals(Object o) {\n    if (this == o) {\n      return true;\n    }\n    if (o == null || getClass() != o.getClass()) {\n      return false;\n    }\n    ClusterEntity that = (ClusterEntity) o;\n    if (!clusterId.equals(that.clusterId)) {\n      return false;\n    }\n    if (!clusterName.equals(that.clusterName)) {\n      return false;\n    }\n    return true;\n  }\n  @Override\n  public int hashCode() {\n    int result = null == clusterId ? 0 : clusterId.hashCode();\n    result = 31 * result + clusterName.hashCode();\n    return result;\n  }\n  public Collection<ClusterServiceEntity> getClusterServiceEntities() {\n    return clusterServiceEntities;\n  }\n  public void setClusterServiceEntities(Collection<ClusterServiceEntity> clusterServiceEntities) {\n    this.clusterServiceEntities = clusterServiceEntities;\n  }\n  public ClusterStateEntity getClusterStateEntity() {\n    return clusterStateEntity;\n  }\n  public void setClusterStateEntity(ClusterStateEntity clusterStateEntity) {\n    this.clusterStateEntity = clusterStateEntity;\n  }\n  public Collection<HostEntity> getHostEntities() {\n    return hostEntities;\n  }\n  public void setHostEntities(Collection<HostEntity> hostEntities) {\n    this.hostEntities = hostEntities;\n  }\n  public Collection<ClusterConfigEntity> getClusterConfigEntities() {\n    return configEntities;\n  }\n  public void setClusterConfigEntities(Collection<ClusterConfigEntity> entities) {\n    configEntities = entities;\n  }\n  public Collection<ConfigGroupEntity> getConfigGroupEntities() {\n    return configGroupEntities;\n  }\n  public void setConfigGroupEntities(Collection<ConfigGroupEntity> configGroupEntities) {\n    this.configGroupEntities = configGroupEntities;\n  }\n  public Collection<RequestScheduleEntity> getRequestScheduleEntities() {\n    return requestScheduleEntities;\n  }\n  public void setRequestScheduleEntities(Collection<RequestScheduleEntity> requestScheduleEntities) {\n    this.requestScheduleEntities = requestScheduleEntities;\n  }\n  public Collection<ServiceConfigEntity> getServiceConfigEntities() {\n    return serviceConfigEntities;\n  }\n  public void setServiceConfigEntities(Collection<ServiceConfigEntity> serviceConfigEntities) {\n    this.serviceConfigEntities = serviceConfigEntities;\n  }\n  public Collection<AlertDefinitionEntity> getAlertDefinitionEntities() {\n    return alertDefinitionEntities;\n  }\n  /**\n   * Get the admin resource entity.\n   *\n   * @return the resource entity\n   */\n  public ResourceEntity getResource() {\n    return resource;\n  }\n  /**\n   * Set the admin resource entity.\n   *<fim_middle>// class below is data class\n"}