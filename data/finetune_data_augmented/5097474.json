{"text": "<fim_prefix>/*\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage org.apache.marmotta.commons.sesame.model;\n\n/**\n * Add file description here!\n *\n * @author Sebastian Schaffert (sschaffert@apache.org)\n */\n<fim_suffix>public class LiteralKey {\n\n    private Object value;\n\n    private String type;\n\n    private String lang;\n\n    public LiteralKey(Object value, String type, String lang) {\n        this.value = value;\n        this.type = type != null ? type.intern() : null;\n        this.lang = lang != null ? lang.intern() : null;\n    }\n\n    public String getLang() {\n        return lang;\n    }\n\n    public String getType() {\n        return type;\n    }\n\n    public Object getValue() {\n        return value;\n    }\n\n    @Override\n    public boolean equals(Object o) {\n        if (this == o) return true;\n        if (o == null || getClass() != o.getClass()) return false;\n\n        LiteralKey that = (LiteralKey) o;\n\n        if (lang != null ? !lang.equals(that.lang) : that.lang != null) return false;\n        if (type != null ? !type.equals(that.type) : that.type != null) return false;\n        return value.equals(that.value);\n\n    }\n\n    @Override\n    public int hashCode() {\n        int result = value.hashCode();\n        result = 31 * result + (type != null ? type.hashCode() : 0);\n        result = 31 * result + (lang != null ? lang.hashCode() : 0);\n        return result;\n    }\n}<fim_middle>// class below is data class\n"}