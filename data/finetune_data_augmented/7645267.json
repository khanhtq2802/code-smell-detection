{"text": "<fim_prefix>/*\n * Copyright 2015 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.springframework.social.facebook.api;\n\nimport java.io.Serializable;\n\nimport org.springframework.util.LinkedMultiValueMap;\nimport org.springframework.util.MultiValueMap;\n\n/**\n * Carries parameters to describe a paged set of results.\n * @author Craig Walls\n */\n@SuppressWarnings(\"serial\")\npublic class PagingParameters implements Serializable {\n\t\n\tprivate final Integer limit;\n\n\tprivate final Integer offset;\n\n\tprivate final Long since;\n\t\n\tprivate final Long until;\n\n\tprivate final String after;\n\n\tprivate final String before;\n\t\n\tprivate final String pagingToken;\n\n\tprivate final String fullUrl;\n\n\t/**\n\t * Constructs a PagedListParameters.\n\t * @param limit The number of items to limit the list to.\n\t * @param offset The offset into the full result list to start this list at.\n\t * @param since The beginning timestamp bound for time-sensitive content (e.g., posts, comments, etc).\n\t * @param until The ending timestamp bound for time-sensitive content (e.g., posts, comments, etc).\n\t */\n\tpublic PagingParameters(Integer limit, Integer offset, Long since, Long until) {\n\t\tthis(limit, offset, since, until, null, null, null, null);\n\t}\n\n\t/**\n\t * Constructs a PagedListParameters.\n\t * @param limit The number of items to limit the list to.\n\t * @param offset The offset into the full result list to start this list at.\n\t * @param since The beginning timestamp bound for time-sensitive content (e.g., posts, comments, etc).\n\t * @param until The ending timestamp bound for time-sensitive content (e.g., posts, comments, etc).\n\t * @param after A cursor token that points to the end of the page being returned. \n\t * @param before A cursor token that points to the start of the page being returned. \n\t */\n\tpublic PagingParameters(Integer limit, Integer offset, Long since, Long until, String after, String before) {\n\t\tthis(limit, offset, since, until, after, before, null, null);\n\t}\n\t\n\t/**\n\t * Constructs a PagedListParameters.\n\t * @param limit The number of items to limit the list to.\n\t * @param offset The offset into the full result list to start this list at.\n\t * @param since The beginning timestamp bound for time-sensitive content (e.g., posts, comments, etc).\n\t * @param until The ending timestamp bound for time-sensitive content (e.g., posts, comments, etc).\n\t * @param after A cursor token that points to the end of the page being returned. \n\t * @param before A cursor token that points to the start of the page being returned. \n\t * @param pagingToken A page token. This is undocumented by Facebook and its purpose is unclear, \n\t *                    but if it's available, it helps prevent the last item in a page of results \n\t *                    from appearing as the first item on the next page.\n\t */\n\tpublic PagingParameters(Integer limit, Integer offset, Long since, Long until, String after, String before, String pagingToken) {\n\t\tthis(limit, offset, since, until, after, before, pagingToken, null);\n\t}\n\n\t/**\n\t * Constructs a PagedListParameters.\n\t * @param limit       The number of items to limit the list to.\n\t * @param offset      The offset into the full result list to start this list at.\n\t * @param since       The beginning timestamp bound for time-sensitive content (e.g., posts, comments, etc).\n\t * @param until       The ending timestamp bound for time-sensitive content (e.g., posts, comments, etc).\n\t * @param after       A cursor token that points to the end of the page being returned.\n\t * @param before      A cursor token that points to the start of the page being returned.\n\t * @param pagingToken A page token. This is undocumented by Facebook and its purpose is unclear,\n\t *                    but if it's available, it helps prevent the last item in a page of results\n\t *                    from appearing as the first item on the next page.\n\t * @param fullUrl     The full url to the next or previous page.\n\t */\n\tpublic PagingParameters(Integer limit, Integer offset, Long since, Long until, String after, String before, String pagingToken, String fullUrl) {\n\t\tthis.limit = limit;\n\t\tthis.offset = offset;\n\t\tthis.since = since;\n\t\tthis.until = until;\n\t\tthis.after = after;\n\t\tthis.before = before;\n\t\tthis.pagingToken = pagingToken;\n\t\tthis.fullUrl = fullUrl;\n\t}\n\t\n\tpublic Integer getLimit() {\n\t\treturn limit;\n\t}\n\n\tpublic Integer getOffset() {\n\t\treturn offset;\n\t}\n\t\n\tpublic Long getSince() {\n\t\treturn since;\n\t}\n\n\tpublic Long getUntil() {\n\t\treturn until;\n\t}\n\t\n\tpublic String getAfter() {\n\t\treturn after;\n\t}\n\t\n\tpublic String getBefore() {\n\t\treturn before;\n\t}\n\t\n\tpublic String getPagingToken() {\n\t\treturn pagingToken;\n\t}\n\n\tpublic String getFullUrl() {\n\t\treturn fullUrl;\n\t}\n\n<fim_suffix>\tpublic MultiValueMap<String, String> toMap() {\n\t\tMultiValueMap<String, String> map = new LinkedMultiValueMap<String, String>();\n\t\tif (limit != null) { map.set(\"limit\", String.valueOf(limit)); }\n\t\tif (offset != null) { map.set(\"offset\", String.valueOf(offset)); }\n\t\tif (since != null) { map.set(\"since\", String.valueOf(since)); }\n\t\tif (until != null) { map.set(\"until\", String.valueOf(until)); }\n\t\tif (after != null) { map.set(\"after\", after); }\n\t\tif (before != null) { map.set(\"before\", before); }\n\t\tif (pagingToken != null) { map.set(\"__paging_token\", pagingToken); }\n\t\treturn map;\n\t}\n\t\n}<fim_middle>// function below has no smell\n"}