{"text": "<fim_prefix>/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.apache.felix.bundlerepository.impl;\n\nimport java.util.Collection;\nimport java.util.Collections;\nimport java.util.HashMap;\nimport java.util.Map;\n\nimport org.osgi.framework.namespace.BundleNamespace;\nimport org.osgi.framework.namespace.HostNamespace;\nimport org.osgi.framework.namespace.PackageNamespace;\nimport org.osgi.namespace.service.ServiceNamespace;\n\n<fim_suffix>class NamespaceTranslator\n{\n    private static final Map<String, String> osgiToFelixMap = fillOSGiToFelixMap();\n    private static final Map<String, String> felixToOSGiMap = fillFelixToOSGiMap();\n\n    private static Map<String, String> fillOSGiToFelixMap()\n    {\n        Map<String, String> result = new HashMap<String, String>(4);\n        result.put(PackageNamespace.PACKAGE_NAMESPACE, org.apache.felix.bundlerepository.Capability.PACKAGE);\n        result.put(ServiceNamespace.SERVICE_NAMESPACE, org.apache.felix.bundlerepository.Capability.SERVICE);\n        result.put(BundleNamespace.BUNDLE_NAMESPACE, org.apache.felix.bundlerepository.Capability.BUNDLE);\n        result.put(HostNamespace.HOST_NAMESPACE, org.apache.felix.bundlerepository.Capability.FRAGMENT);\n        return Collections.unmodifiableMap(result);\n    }\n\n    private static Map<String, String> fillFelixToOSGiMap()\n    {\n        Map<String, String> result = new HashMap<String, String>(4);\n        result.put(org.apache.felix.bundlerepository.Capability.PACKAGE, PackageNamespace.PACKAGE_NAMESPACE);\n        result.put(org.apache.felix.bundlerepository.Capability.SERVICE, ServiceNamespace.SERVICE_NAMESPACE);\n        result.put(org.apache.felix.bundlerepository.Capability.BUNDLE, BundleNamespace.BUNDLE_NAMESPACE);\n        result.put(org.apache.felix.bundlerepository.Capability.FRAGMENT, HostNamespace.HOST_NAMESPACE);\n        return Collections.unmodifiableMap(result);\n    }\n\n    public static String getFelixNamespace(String osgiNamespace)\n    {\n        String result = osgiToFelixMap.get(osgiNamespace);\n        if (result == null)\n            return osgiNamespace;\n        else\n            return result;\n    }\n\n    public static Collection<String> getTranslatedFelixNamespaces()\n    {\n        return felixToOSGiMap.keySet();\n    }\n\n    public static String getOSGiNamespace(String felixNamespace)\n    {\n        String result = felixToOSGiMap.get(felixNamespace);\n        if (result == null)\n            return felixNamespace;\n        else\n            return result;\n    }\n\n    public static Collection<String> getTranslatedOSGiNamespaces()\n    {\n        return osgiToFelixMap.keySet();\n    }\n}<fim_middle>// class below has no smell\n"}