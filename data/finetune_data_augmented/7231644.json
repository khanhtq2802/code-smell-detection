{"text": "<fim_prefix>    outPointerCoordsObj.pressure = rawPointerCoords.getAxisValue(AMOTION_EVENT_AXIS_PRESSURE);\n    outPointerCoordsObj.size = rawPointerCoords.getAxisValue(AMOTION_EVENT_AXIS_SIZE);\n    outPointerCoordsObj.touchMajor = rawPointerCoords.getAxisValue(AMOTION_EVENT_AXIS_TOUCH_MAJOR);\n    outPointerCoordsObj.touchMinor = rawPointerCoords.getAxisValue(AMOTION_EVENT_AXIS_TOUCH_MINOR);\n    outPointerCoordsObj.toolMajor = rawPointerCoords.getAxisValue(AMOTION_EVENT_AXIS_TOOL_MAJOR);\n    outPointerCoordsObj.toolMinor = rawPointerCoords.getAxisValue(AMOTION_EVENT_AXIS_TOOL_MINOR);\n    outPointerCoordsObj.orientation = rawPointerCoords.getAxisValue(AMOTION_EVENT_AXIS_ORIENTATION);\n    long outBits = 0;\n    NativeBitSet64 bits = new NativeBitSet64(rawPointerCoords.getBits());\n    bits.clearBit(AMOTION_EVENT_AXIS_X);\n    bits.clearBit(AMOTION_EVENT_AXIS_Y);\n    bits.clearBit(AMOTION_EVENT_AXIS_PRESSURE);\n    bits.clearBit(AMOTION_EVENT_AXIS_SIZE);\n    bits.clearBit(AMOTION_EVENT_AXIS_TOUCH_MAJOR);\n    bits.clearBit(AMOTION_EVENT_AXIS_TOUCH_MINOR);\n    bits.clearBit(AMOTION_EVENT_AXIS_TOOL_MAJOR);\n    bits.clearBit(AMOTION_EVENT_AXIS_TOOL_MINOR);\n    bits.clearBit(AMOTION_EVENT_AXIS_ORIENTATION);\n    if (!bits.isEmpty()) {\n      int packedAxesCount = bits.count();\n      float[] outValuesArray = obtainPackedAxisValuesArray(packedAxesCount, outPointerCoordsObj);\n      float[] outValues = outValuesArray;\n      int index = 0;\n      do {\n        int axis = bits.clearFirstMarkedBit();\n        outBits |= NativeBitSet64.valueForBit(axis);\n        outValues[index++] = rawPointerCoords.getAxisValue(axis);\n      } while (!bits.isEmpty());\n    }\n    ReflectionHelpers.setField(outPointerCoordsObj, \"mPackedAxisBits\", outBits);\n  }\n  @Implementation(maxSdk = KITKAT_WATCH)\n  @HiddenApi\n  protected static int nativeInitialize(\n      int nativePtr,\n      int deviceId,\n      int source,\n      int action,\n      int flags,\n      int edgeFlags,\n      int metaState,\n      int buttonState,\n      float xOffset,\n      float yOffset,\n      float xPrecision,\n      float yPrecision,\n      long downTimeNanos,\n      long eventTimeNanos,\n      int pointerCount,\n      PointerProperties[] pointerIds,\n      PointerCoords[] pointerCoords) {\n    return (int)\n        nativeInitialize(\n            (long) nativePtr,\n            deviceId,\n            source,\n            action,\n            flags,\n            edgeFlags,\n            metaState,\n            buttonState,\n            xOffset,\n            yOffset,\n            xPrecision,\n            yPrecision,\n            downTimeNanos,\n            eventTimeNanos,\n            pointerCount,\n            pointerIds,\n            pointerCoords);\n  }\n  @Implementation(minSdk = LOLLIPOP, maxSdk = P)\n  @HiddenApi\n  protected static long nativeInitialize(\n      long nativePtr,\n      int deviceId,\n      int source,\n      int action,\n      int flags,\n      int edgeFlags,\n      int metaState,\n      int buttonState,\n      float xOffset,\n      float yOffset,\n      float xPrecision,\n      float yPrecision,\n      long downTimeNanos,\n      long eventTimeNanos,\n      int pointerCount,\n      PointerProperties[] pointerPropertiesObjArray,\n      PointerCoords[] pointerCoordsObjArray) {\n    validatePointerCount(pointerCount);\n    validatePointerPropertiesArray(pointerPropertiesObjArray, pointerCount);\n    validatePointerCoordsObjArray(pointerCoordsObjArray, pointerCount);\n    NativeInput.MotionEvent event;\n    if (nativePtr > 0) {\n      event = nativeMotionEventRegistry.getNativeObject(nativePtr);\n    } else {\n      event = new NativeInput.MotionEvent();\n      nativePtr = nativeMotionEventRegistry.register(event);\n    }\n    NativeInput.PointerCoords[] rawPointerCoords = new NativeInput.PointerCoords[pointerCount];\n    for (int i = 0; i < pointerCount; i++) {\n      PointerCoords pointerCoordsObj = pointerCoordsObjArray[i];\n      checkNotNull(pointerCoordsObj);\n      rawPointerCoords[i] = pointerCoordsToNative(pointerCoordsObj, xOffset, yOffset);\n    }\n    event.initialize(\n        deviceId,\n        source,\n        action,\n        0,\n        flags,\n        edgeFlags,\n        metaState,\n        buttonState,\n        xOffset,\n        yOffset,\n        xPrecision,\n        yPrecision,\n        downTimeNanos,\n        eventTimeNanos,\n        pointerCount,\n        pointerPropertiesObjArray,\n        rawPointerCoords);\n    return nativePtr;\n  }\n  // TODO(brettchabot): properly handle displayId\n  @Implementation(minSdk = android.os.Build.VERSION_CODES.Q)\n  @HiddenApi\n  protected static long nativeInitialize(\n      long nativePtr,\n      int deviceId,\n      int source,\n      int displayId,\n      int action,\n      int flags,\n      int edgeFlags,\n      int metaState,\n      int buttonState,\n      int classification,\n      float xOffset,\n      float yOffset,\n      float xPrecision,\n      float yPrecision,\n      long downTimeNanos,\n      long eventTimeNanos,\n      int pointerCount,\n      PointerProperties[] pointerIds,\n      PointerCoords[] pointerCoords) {\n        return\n        nativeInitialize(\n            nativePtr,\n            deviceId,\n            source,\n            action,\n            flags,\n            edgeFlags,\n            metaState,\n            buttonState,\n            xOffset,\n            yOffset,\n            xPrecision,\n            yPrecision,\n            downTimeNanos,\n            eventTimeNanos,\n            pointerCount,\n            pointerIds,\n            pointerCoords);\n  }\n  @Implementation(maxSdk = KITKAT_WATCH)\n  @HiddenApi\n  protected static void nativeDispose(int nativePtr) {\n    nativeDispose((long) nativePtr);\n  }\n  @Implementation(minSdk = LOLLIPOP)\n  @HiddenApi\n  protected static void nativeDispose(long nativePtr) {\n    nativeMotionEventRegistry.unregister(nativePtr);\n  }\n  @Implementation(maxSdk = KITKAT_WATCH)\n  @HiddenApi\n  protected static void nativeAddBatch(\n      int nativePtr, long eventTimeNanos, PointerCoords[] pointerCoordsObjArray, int metaState) {\n    nativeAddBatch((long) nativePtr, eventTimeNanos, pointerCoordsObjArray, metaState);\n  }\n  @Implementation(minSdk = LOLLIPOP)\n  @HiddenApi\n  protected static void nativeAddBatch(\n      long nativePtr, long eventTimeNanos, PointerCoords[] pointerCoordsObjArray, int metaState) {\n    NativeInput.MotionEvent event = getNativeMotionEvent(nativePtr);\n    int pointerCount = event.getPointerCount();\n    validatePointerCoordsObjArray(pointerCoordsObjArray, pointerCount);\n    NativeInput.PointerCoords[] rawPointerCoords = new NativeInput.PointerCoords[pointerCount];\n    for (int i = 0; i < pointerCount; i++) {\n      PointerCoords pointerCoordsObj = pointerCoordsObjArray[i];\n      checkNotNull(pointerCoordsObj);\n      rawPointerCoords[i] =\n          pointerCoordsToNative(pointerCoordsObj, event.getXOffset(), event.getYOffset());\n    }\n    event.addSample(eventTimeNanos, rawPointerCoords);\n    event.setMetaState(event.getMetaState() | metaState);\n  }\n  @Implementation(maxSdk = KITKAT_WATCH)\n  @HiddenApi\n  protected static void nativeGetPointerCoords(\n      int nativePtr, int pointerIndex, int historyPos, PointerCoords outPointerCoordsObj) {\n    nativeGetPointerCoords((long) nativePtr, pointerIndex, historyPos, outPointerCoordsObj);\n  }\n<fim_suffix>  @Implementation(minSdk = LOLLIPOP)\n  @HiddenApi\n  protected static void nativeGetPointerCoords(\n      long nativePtr, int pointerIndex, int historyPos, PointerCoords outPointerCoordsObj) {\n    NativeInput.MotionEvent event = getNativeMotionEvent(nativePtr);\n    int pointerCount = event.getPointerCount();\n    validatePointerIndex(pointerIndex, pointerCount);\n    validatePointerCoords(outPointerCoordsObj);\n    NativeInput.PointerCoords rawPointerCoords;\n    if (historyPos == HISTORY_CURRENT) {\n      rawPointerCoords = event.getRawPointerCoords(pointerIndex);\n    } else {\n      int historySize = event.getHistorySize();\n      validateHistoryPos(historyPos, historySize);\n      rawPointerCoords = event.getHistoricalRawPointerCoords(pointerIndex, historyPos);\n    }\n    pointerCoordsFromNative(\n        rawPointerCoords, event.getXOffset(), event.getYOffset(), outPointerCoordsObj);\n  }<fim_middle>// function below is long method\n"}