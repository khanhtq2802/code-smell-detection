{"text": "<fim_prefix>      switch (field) {\n      case TABLE:\n        if (value == null) {\n          unsetTable();\n        } else {\n          if (value instanceof byte[]) {\n            setTable((byte[])value);\n          } else {\n            setTable((java.nio.ByteBuffer)value);\n          }\n        }\n        break;\n      case TPUT:\n        if (value == null) {\n          unsetTput();\n        } else {\n          setTput((TPut)value);\n        }\n        break;\n      }\n    }\n    @org.apache.thrift.annotation.Nullable\n    public java.lang.Object getFieldValue(_Fields field) {\n      switch (field) {\n      case TABLE:\n        return getTable();\n      case TPUT:\n        return getTput();\n      }\n      throw new java.lang.IllegalStateException();\n    }\n    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */\n    public boolean isSet(_Fields field) {\n      if (field == null) {\n        throw new java.lang.IllegalArgumentException();\n      }\n      switch (field) {\n      case TABLE:\n        return isSetTable();\n      case TPUT:\n        return isSetTput();\n      }\n      throw new java.lang.IllegalStateException();\n    }\n    @Override\n    public boolean equals(java.lang.Object that) {\n      if (that == null)\n        return false;\n      if (that instanceof put_args)\n        return this.equals((put_args)that);\n      return false;\n    }\n    public boolean equals(put_args that) {\n      if (that == null)\n        return false;\n      if (this == that)\n        return true;\n      boolean this_present_table = true && this.isSetTable();\n      boolean that_present_table = true && that.isSetTable();\n      if (this_present_table || that_present_table) {\n        if (!(this_present_table && that_present_table))\n          return false;\n        if (!this.table.equals(that.table))\n          return false;\n      }\n      boolean this_present_tput = true && this.isSetTput();\n      boolean that_present_tput = true && that.isSetTput();\n      if (this_present_tput || that_present_tput) {\n        if (!(this_present_tput && that_present_tput))\n          return false;\n        if (!this.tput.equals(that.tput))\n          return false;\n      }\n      return true;\n    }\n    @Override\n    public int hashCode() {\n      int hashCode = 1;\n      hashCode = hashCode * 8191 + ((isSetTable()) ? 131071 : 524287);\n      if (isSetTable())\n        hashCode = hashCode * 8191 + table.hashCode();\n      hashCode = hashCode * 8191 + ((isSetTput()) ? 131071 : 524287);\n      if (isSetTput())\n        hashCode = hashCode * 8191 + tput.hashCode();\n      return hashCode;\n    }\n    @Override\n    public int compareTo(put_args other) {\n      if (!getClass().equals(other.getClass())) {\n        return getClass().getName().compareTo(other.getClass().getName());\n      }\n      int lastComparison = 0;\n      lastComparison = java.lang.Boolean.valueOf(isSetTable()).compareTo(other.isSetTable());\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n      if (isSetTable()) {\n        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.table, other.table);\n        if (lastComparison != 0) {\n          return lastComparison;\n        }\n      }\n      lastComparison = java.lang.Boolean.valueOf(isSetTput()).compareTo(other.isSetTput());\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n      if (isSetTput()) {\n        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.tput, other.tput);\n        if (lastComparison != 0) {\n          return lastComparison;\n        }\n      }\n      return 0;\n    }\n    @org.apache.thrift.annotation.Nullable\n    public _Fields fieldForId(int fieldId) {\n      return _Fields.findByThriftId(fieldId);\n    }\n    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {\n      scheme(iprot).read(iprot, this);\n    }\n    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {\n      scheme(oprot).write(oprot, this);\n    }\n    @Override\n    public java.lang.String toString() {\n      java.lang.StringBuilder sb = new java.lang.StringBuilder(\"put_args(\");\n      boolean first = true;\n      sb.append(\"table:\");\n      if (this.table == null) {\n        sb.append(\"null\");\n      } else {\n        org.apache.thrift.TBaseHelper.toString(this.table, sb);\n      }\n      first = false;\n      if (!first) sb.append(\", \");\n      sb.append(\"tput:\");\n      if (this.tput == null) {\n        sb.append(\"null\");\n      } else {\n        sb.append(this.tput);\n      }\n      first = false;\n      sb.append(\")\");\n      return sb.toString();\n    }\n    public void validate() throws org.apache.thrift.TException {\n      // check for required fields\n      if (table == null) {\n        throw new org.apache.thrift.protocol.TProtocolException(\"Required field 'table' was not present! Struct: \" + toString());\n      }\n      if (tput == null) {\n        throw new org.apache.thrift.protocol.TProtocolException(\"Required field 'tput' was not present! Struct: \" + toString());\n      }\n      // check for sub-struct validity\n      if (tput != null) {\n        tput.validate();\n      }\n    }\n    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {\n      try {\n        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));\n      } catch (org.apache.thrift.TException te) {\n        throw new java.io.IOException(te);\n      }\n    }\n    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {\n      try {\n        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));\n      } catch (org.apache.thrift.TException te) {\n        throw new java.io.IOException(te);\n      }\n    }\n    private static class put_argsStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {\n      public put_argsStandardScheme getScheme() {\n        return new put_argsStandardScheme();\n      }\n    }\n<fim_suffix>    private static class put_argsStandardScheme extends org.apache.thrift.scheme.StandardScheme<put_args> {\n      public void read(org.apache.thrift.protocol.TProtocol iprot, put_args struct) throws org.apache.thrift.TException {\n        org.apache.thrift.protocol.TField schemeField;\n        iprot.readStructBegin();\n        while (true)\n        {\n          schemeField = iprot.readFieldBegin();\n          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { \n            break;\n          }\n          switch (schemeField.id) {\n            case 1: // TABLE\n              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {\n                struct.table = iprot.readBinary();\n                struct.setTableIsSet(true);\n              } else { \n                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);\n              }\n              break;\n            case 2: // TPUT\n              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {\n                struct.tput = new TPut();\n                struct.tput.read(iprot);\n                struct.setTputIsSet(true);\n              } else { \n                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);\n              }\n              break;\n            default:\n              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);\n          }\n          iprot.readFieldEnd();\n        }\n        iprot.readStructEnd();\n        // check for required fields of primitive type, which can't be checked in the validate method\n        struct.validate();\n      }\n      public void write(org.apache.thrift.protocol.TProtocol oprot, put_args struct) throws org.apache.thrift.TException {\n        struct.validate();\n        oprot.writeStructBegin(STRUCT_DESC);\n        if (struct.table != null) {\n          oprot.writeFieldBegin(TABLE_FIELD_DESC);\n          oprot.writeBinary(struct.table);\n          oprot.writeFieldEnd();\n        }\n        if (struct.tput != null) {\n          oprot.writeFieldBegin(TPUT_FIELD_DESC);\n          struct.tput.write(oprot);\n          oprot.writeFieldEnd();\n        }\n        oprot.writeFieldStop();\n        oprot.writeStructEnd();\n      }\n    }<fim_middle>// class below is blob\n"}