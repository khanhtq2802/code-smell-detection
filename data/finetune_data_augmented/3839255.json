{"text": "<fim_prefix>        java.util.BitSet incoming = iprot.readBitSet(3);\n        if (incoming.get(0)) {\n          struct.login = iprot.readBinary();\n          struct.setLoginIsSet(true);\n        }\n        if (incoming.get(1)) {\n          struct.user = iprot.readString();\n          struct.setUserIsSet(true);\n        }\n        if (incoming.get(2)) {\n          struct.perm = org.apache.accumulo.proxy.thrift.SystemPermission.findByValue(iprot.readI32());\n          struct.setPermIsSet(true);\n        }\n      }\n    }\n    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {\n      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();\n    }\n  }\n  public static class grantSystemPermission_result implements org.apache.thrift.TBase<grantSystemPermission_result, grantSystemPermission_result._Fields>, java.io.Serializable, Cloneable, Comparable<grantSystemPermission_result>   {\n    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct(\"grantSystemPermission_result\");\n    private static final org.apache.thrift.protocol.TField OUCH1_FIELD_DESC = new org.apache.thrift.protocol.TField(\"ouch1\", org.apache.thrift.protocol.TType.STRUCT, (short)1);\n    private static final org.apache.thrift.protocol.TField OUCH2_FIELD_DESC = new org.apache.thrift.protocol.TField(\"ouch2\", org.apache.thrift.protocol.TType.STRUCT, (short)2);\n    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new grantSystemPermission_resultStandardSchemeFactory();\n    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new grantSystemPermission_resultTupleSchemeFactory();\n    public @org.apache.thrift.annotation.Nullable AccumuloException ouch1; // required\n    public @org.apache.thrift.annotation.Nullable AccumuloSecurityException ouch2; // required\n    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */\n    public enum _Fields implements org.apache.thrift.TFieldIdEnum {\n      OUCH1((short)1, \"ouch1\"),\n      OUCH2((short)2, \"ouch2\");\n      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();\n      static {\n        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {\n          byName.put(field.getFieldName(), field);\n        }\n      }\n      /**\n       * Find the _Fields constant that matches fieldId, or null if its not found.\n       */\n      @org.apache.thrift.annotation.Nullable\n      public static _Fields findByThriftId(int fieldId) {\n        switch(fieldId) {\n          case 1: // OUCH1\n            return OUCH1;\n          case 2: // OUCH2\n            return OUCH2;\n          default:\n            return null;\n        }\n      }\n      /**\n       * Find the _Fields constant that matches fieldId, throwing an exception\n       * if it is not found.\n       */\n      public static _Fields findByThriftIdOrThrow(int fieldId) {\n        _Fields fields = findByThriftId(fieldId);\n        if (fields == null) throw new java.lang.IllegalArgumentException(\"Field \" + fieldId + \" doesn't exist!\");\n        return fields;\n      }\n      /**\n       * Find the _Fields constant that matches name, or null if its not found.\n       */\n      @org.apache.thrift.annotation.Nullable\n      public static _Fields findByName(java.lang.String name) {\n        return byName.get(name);\n      }\n      private final short _thriftId;\n      private final java.lang.String _fieldName;\n      _Fields(short thriftId, java.lang.String fieldName) {\n        _thriftId = thriftId;\n        _fieldName = fieldName;\n      }\n      public short getThriftFieldId() {\n        return _thriftId;\n      }\n      public java.lang.String getFieldName() {\n        return _fieldName;\n      }\n    }\n    // isset id assignments\n    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;\n    static {\n      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);\n      tmpMap.put(_Fields.OUCH1, new org.apache.thrift.meta_data.FieldMetaData(\"ouch1\", org.apache.thrift.TFieldRequirementType.DEFAULT, \n          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, AccumuloException.class)));\n      tmpMap.put(_Fields.OUCH2, new org.apache.thrift.meta_data.FieldMetaData(\"ouch2\", org.apache.thrift.TFieldRequirementType.DEFAULT, \n          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, AccumuloSecurityException.class)));\n      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);\n      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(grantSystemPermission_result.class, metaDataMap);\n    }\n    public grantSystemPermission_result() {\n    }\n    public grantSystemPermission_result(\n      AccumuloException ouch1,\n      AccumuloSecurityException ouch2)\n    {\n      this();\n      this.ouch1 = ouch1;\n      this.ouch2 = ouch2;\n    }\n    /**\n     * Performs a deep copy on <i>other</i>.\n     */\n    public grantSystemPermission_result(grantSystemPermission_result other) {\n      if (other.isSetOuch1()) {\n        this.ouch1 = new AccumuloException(other.ouch1);\n      }\n      if (other.isSetOuch2()) {\n        this.ouch2 = new AccumuloSecurityException(other.ouch2);\n      }\n    }\n    public grantSystemPermission_result deepCopy() {\n      return new grantSystemPermission_result(this);\n    }\n    @Override\n    public void clear() {\n      this.ouch1 = null;\n      this.ouch2 = null;\n    }\n    @org.apache.thrift.annotation.Nullable\n    public AccumuloException getOuch1() {\n      return this.ouch1;\n    }\n    public grantSystemPermission_result setOuch1(@org.apache.thrift.annotation.Nullable AccumuloException ouch1) {\n      this.ouch1 = ouch1;\n      return this;\n    }\n    public void unsetOuch1() {\n      this.ouch1 = null;\n    }\n    /** Returns true if field ouch1 is set (has been assigned a value) and false otherwise */\n    public boolean isSetOuch1() {\n      return this.ouch1 != null;\n    }\n    public void setOuch1IsSet(boolean value) {\n      if (!value) {\n        this.ouch1 = null;\n      }\n    }\n    @org.apache.thrift.annotation.Nullable\n    public AccumuloSecurityException getOuch2() {\n      return this.ouch2;\n    }\n    public grantSystemPermission_result setOuch2(@org.apache.thrift.annotation.Nullable AccumuloSecurityException ouch2) {\n      this.ouch2 = ouch2;\n      return this;\n    }\n    public void unsetOuch2() {\n      this.ouch2 = null;\n    }\n    /** Returns true if field ouch2 is set (has been assigned a value) and false otherwise */\n    public boolean isSetOuch2() {\n      return this.ouch2 != null;\n    }\n    public void setOuch2IsSet(boolean value) {\n      if (!value) {\n        this.ouch2 = null;\n      }\n    }\n    public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {\n      switch (field) {\n      case OUCH1:\n        if (value == null) {\n          unsetOuch1();\n        } else {\n          setOuch1((AccumuloException)value);\n        }\n        break;\n      case OUCH2:\n        if (value == null) {\n          unsetOuch2();\n        } else {\n          setOuch2((AccumuloSecurityException)value);\n        }\n        break;\n      }\n    }\n<fim_suffix>    @org.apache.thrift.annotation.Nullable\n    public java.lang.Object getFieldValue(_Fields field) {\n      switch (field) {\n      case OUCH1:\n        return getOuch1();\n      case OUCH2:\n        return getOuch2();\n      }\n      throw new java.lang.IllegalStateException();\n    }<fim_middle>// function below has no smell\n"}