{"text": "<fim_prefix>/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *  http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\npackage org.apache.empire.commons;\n\nimport java.io.Serializable;\n\n/**\n * This class defines one possible value of a field and it's description<BR>\n * This class is used by the Options class to implement a set of options \n * where the option value us used as the key for the set.<BR>\n * The text should only be used for display purposes e.g. to display a drop-down in a user interface.<BR>\n * <P>\n */\npublic class OptionEntry implements Serializable\n{\n\tprivate static final long serialVersionUID = 1L;\n\t\n\tprivate Object value;\n    private String text;\n    \n<fim_suffix>    public OptionEntry(Object value, String text)\n    {\n        this.value = value;\n        this.text = text;\n    }\n\n    public Object getValue()\n    {\n        return value;\n    }\n\n    /**\n     * Gets the value as string\n     * \n     * @return the string representation of the value or an empty string if the value is <code>null</code>\n     */\n    public String getValueString()\n    {\n        // check null\n        if (value==null)\n            return \"\";\n        // check enum\n        if (value.getClass().isEnum())\n            return ((Enum<?>)value).name();\n        // convert\n        return String.valueOf(value);\n    }\n    \n    public String getText()\n    {\n        return text;\n    }\n\n    public void setText(String text)\n    {\n        this.text = text;\n    }\n}<fim_middle>// function below has no smell\n"}