{"text": "<fim_prefix>/**\n * Copyright (c) 2016, 2019, Oracle and/or its affiliates. All rights reserved.\n */\npackage com.oracle.bmc.core.requests;\n\nimport com.oracle.bmc.core.model.*;\n\n<fim_suffix>@javax.annotation.Generated(value = \"OracleSDKGenerator\", comments = \"API Version: 20160918\")\n@lombok.Builder(builderClassName = \"Builder\", buildMethodName = \"buildWithoutInvocationCallback\")\n@lombok.Getter\npublic class ListCrossConnectGroupsRequest extends com.oracle.bmc.requests.BmcRequest {\n\n    /**\n     * The OCID of the compartment.\n     */\n    private String compartmentId;\n\n    /**\n     * For list pagination. The maximum number of results per page, or items to return in a paginated\n     * \\\"List\\\" call. For important details about how pagination works, see\n     * [List Pagination](https://docs.cloud.oracle.com/iaas/Content/API/Concepts/usingapi.htm#nine).\n     * <p>\n     * Example: `50`\n     *\n     */\n    private Integer limit;\n\n    /**\n     * For list pagination. The value of the `opc-next-page` response header from the previous \\\"List\\\"\n     * call. For important details about how pagination works, see\n     * [List Pagination](https://docs.cloud.oracle.com/iaas/Content/API/Concepts/usingapi.htm#nine).\n     *\n     */\n    private String page;\n\n    /**\n     * A filter to return only resources that match the given display name exactly.\n     *\n     */\n    private String displayName;\n\n    /**\n     * The field to sort by. You can provide one sort order (`sortOrder`). Default order for\n     * TIMECREATED is descending. Default order for DISPLAYNAME is ascending. The DISPLAYNAME\n     * sort order is case sensitive.\n     * <p>\n     **Note:** In general, some \\\"List\\\" operations (for example, `ListInstances`) let you\n     * optionally filter by availability domain if the scope of the resource type is within a\n     * single availability domain. If you call one of these \\\"List\\\" operations without specifying\n     * an availability domain, the resources are grouped by availability domain, then sorted.\n     *\n     */\n    private SortBy sortBy;\n\n    /**\n     * The field to sort by. You can provide one sort order (`sortOrder`). Default order for\n     * TIMECREATED is descending. Default order for DISPLAYNAME is ascending. The DISPLAYNAME\n     * sort order is case sensitive.\n     * <p>\n     **Note:** In general, some \\\"List\\\" operations (for example, `ListInstances`) let you\n     * optionally filter by availability domain if the scope of the resource type is within a\n     * single availability domain. If you call one of these \\\"List\\\" operations without specifying\n     * an availability domain, the resources are grouped by availability domain, then sorted.\n     *\n     **/\n    public enum SortBy {\n        Timecreated(\"TIMECREATED\"),\n        Displayname(\"DISPLAYNAME\"),\n        ;\n\n        private final String value;\n        private static java.util.Map<String, SortBy> map;\n\n        static {\n            map = new java.util.HashMap<>();\n            for (SortBy v : SortBy.values()) {\n                map.put(v.getValue(), v);\n            }\n        }\n\n        SortBy(String value) {\n            this.value = value;\n        }\n\n        @com.fasterxml.jackson.annotation.JsonValue\n        public String getValue() {\n            return value;\n        }\n\n        @com.fasterxml.jackson.annotation.JsonCreator\n        public static SortBy create(String key) {\n            if (map.containsKey(key)) {\n                return map.get(key);\n            }\n            throw new RuntimeException(\"Invalid SortBy: \" + key);\n        }\n    };\n\n    /**\n     * The sort order to use, either ascending (`ASC`) or descending (`DESC`). The DISPLAYNAME sort order\n     * is case sensitive.\n     *\n     */\n    private SortOrder sortOrder;\n\n    /**\n     * The sort order to use, either ascending (`ASC`) or descending (`DESC`). The DISPLAYNAME sort order\n     * is case sensitive.\n     *\n     **/\n    public enum SortOrder {\n        Asc(\"ASC\"),\n        Desc(\"DESC\"),\n        ;\n\n        private final String value;\n        private static java.util.Map<String, SortOrder> map;\n\n        static {\n            map = new java.util.HashMap<>();\n            for (SortOrder v : SortOrder.values()) {\n                map.put(v.getValue(), v);\n            }\n        }\n\n        SortOrder(String value) {\n            this.value = value;\n        }\n\n        @com.fasterxml.jackson.annotation.JsonValue\n        public String getValue() {\n            return value;\n        }\n\n        @com.fasterxml.jackson.annotation.JsonCreator\n        public static SortOrder create(String key) {\n            if (map.containsKey(key)) {\n                return map.get(key);\n            }\n            throw new RuntimeException(\"Invalid SortOrder: \" + key);\n        }\n    };\n\n    /**\n     * A filter to return only resources that match the specified lifecycle state. The value is case insensitive.\n     *\n     */\n    private CrossConnectGroup.LifecycleState lifecycleState;\n\n    public static class Builder {\n        private com.oracle.bmc.util.internal.Consumer<javax.ws.rs.client.Invocation.Builder>\n                invocationCallback = null;\n\n        /**\n         * Set the invocation callback for the request to be built.\n         * @param invocationCallback the invocation callback to be set for the request\n         * @return this builder instance\n         */\n        public Builder invocationCallback(\n                com.oracle.bmc.util.internal.Consumer<javax.ws.rs.client.Invocation.Builder>\n                        invocationCallback) {\n            this.invocationCallback = invocationCallback;\n            return this;\n        }\n\n        /**\n         * Copy method to populate the builder with values from the given instance.\n         * @return this builder instance\n         */\n        public Builder copy(ListCrossConnectGroupsRequest o) {\n            compartmentId(o.getCompartmentId());\n            limit(o.getLimit());\n            page(o.getPage());\n            displayName(o.getDisplayName());\n            sortBy(o.getSortBy());\n            sortOrder(o.getSortOrder());\n            lifecycleState(o.getLifecycleState());\n            invocationCallback(o.getInvocationCallback());\n            return this;\n        }\n\n        /**\n         * Build the instance of ListCrossConnectGroupsRequest as configured by this builder\n         *\n         * Note that this method takes calls to {@link Builder#invocationCallback(com.oracle.bmc.util.internal.Consumer)} into account,\n         * while the method {@link Builder#buildWithoutInvocationCallback} does not.\n         *\n         * This is the preferred method to build an instance.\n         *\n         * @return instance of ListCrossConnectGroupsRequest\n         */\n        public ListCrossConnectGroupsRequest build() {\n            ListCrossConnectGroupsRequest request = buildWithoutInvocationCallback();\n            request.setInvocationCallback(invocationCallback);\n            return request;\n        }\n    }\n}<fim_middle>// class below has no smell\n"}