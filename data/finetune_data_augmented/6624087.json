{"text": "<fim_prefix>/*\n * Copyright 2017 Esri.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n * use this file except in compliance with the License. You may obtain a copy of\n * the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations under\n * the License.\n */\n\npackage com.esri.samples.map.manage_bookmarks;\n\nimport java.util.Optional;\n\nimport javafx.application.Application;\nimport javafx.geometry.Insets;\nimport javafx.geometry.Pos;\nimport javafx.scene.Scene;\nimport javafx.scene.control.Alert;\nimport javafx.scene.control.Alert.AlertType;\nimport javafx.scene.control.Button;\nimport javafx.scene.control.Label;\nimport javafx.scene.control.ListView;\nimport javafx.scene.control.TextInputDialog;\nimport javafx.scene.layout.Background;\nimport javafx.scene.layout.BackgroundFill;\nimport javafx.scene.layout.CornerRadii;\nimport javafx.scene.layout.StackPane;\nimport javafx.scene.layout.VBox;\nimport javafx.scene.paint.Paint;\nimport javafx.stage.Stage;\n\nimport com.esri.arcgisruntime.mapping.ArcGISMap;\nimport com.esri.arcgisruntime.mapping.Basemap;\nimport com.esri.arcgisruntime.mapping.Bookmark;\nimport com.esri.arcgisruntime.mapping.BookmarkList;\nimport com.esri.arcgisruntime.mapping.Viewpoint;\nimport com.esri.arcgisruntime.mapping.view.MapView;\n\npublic class ManageBookmarksSample extends Application {\n\n  private MapView mapView;\n  private BookmarkList bookmarkList;\n  private Bookmark bookmark;\n\n  @Override\n  public void start(Stage stage) {\n\n    try {\n      // create stack pane and application scene\n      StackPane stackPane = new StackPane();\n      Scene scene = new Scene(stackPane);\n      scene.getStylesheets().add(getClass().getResource(\"/css/style.css\").toExternalForm());\n\n      // set title, size, and add scene to stage\n      stage.setTitle(\"Manage Bookmarks Sample\");\n      stage.setWidth(800);\n      stage.setHeight(700);\n      stage.setScene(scene);\n      stage.show();\n\n      // create a control panel\n      VBox controlsVBox = new VBox(6);\n      controlsVBox.setBackground(new Background(new BackgroundFill(Paint.valueOf(\"rgba(0,0,0,0.3)\"), CornerRadii.EMPTY,\n          Insets.EMPTY)));\n      controlsVBox.setPadding(new Insets(10.0));\n      controlsVBox.setMaxSize(220, 240);\n      controlsVBox.getStyleClass().add(\"panel-region\");\n\n      // create label for bookmarks\n      Label bookmarkLabel = new Label(\"Bookmarks\");\n      bookmarkLabel.getStyleClass().add(\"panel-label\");\n\n      // create a list to hold the names of the bookmarks\n      ListView<String> bookmarkNames = new ListView<>();\n      bookmarkNames.setMaxHeight(190);\n\n      // when user clicks on a bookmark change to that location\n      bookmarkNames.getSelectionModel().selectedItemProperty().addListener((ov, old_val, new_val) -> {\n        int index = bookmarkNames.getSelectionModel().getSelectedIndex();\n        mapView.setBookmarkAsync(bookmarkList.get(index));\n      });\n\n      // create button to add a bookmark\n      Button addBookmarkButton = new Button(\"Add Bookmark\");\n      addBookmarkButton.setMaxWidth(Double.MAX_VALUE);\n\n      // show dialog to user and add a bookmark if text is entered\n      addBookmarkButton.setOnAction(e -> {\n        TextInputDialog dialog = new TextInputDialog();\n        dialog.initOwner(mapView.getScene().getWindow());\n        dialog.setHeaderText(\"Add Bookmark\");\n        dialog.setContentText(\"Bookmark Name\");\n\n        Optional<String> result = dialog.showAndWait();\n        result.ifPresent(text -> {\n          if (text.trim().length() > 0 && !bookmarkNames.getItems().contains(text)) {\n            bookmark = new Bookmark(text, mapView.getCurrentViewpoint(Viewpoint.Type.BOUNDING_GEOMETRY));\n            bookmarkList.add(bookmark);\n            bookmarkNames.getItems().add(bookmark.getName());\n          } else {\n            Alert alert = new Alert(AlertType.INFORMATION);\n            alert.initOwner(mapView.getScene().getWindow());\n            alert.setHeaderText(\"Text Error\");\n            alert.setContentText(\"Text name already exist or no text was entered.\");\n            alert.showAndWait();\n          }\n        });\n      });\n\n      // add label and bookmarks to the control panel\n      controlsVBox.getChildren().addAll(bookmarkLabel, bookmarkNames, addBookmarkButton);\n\n      ArcGISMap map = new ArcGISMap(Basemap.createImageryWithLabels());\n\n      // create a view for this map and set map to it\n      mapView = new MapView();\n      mapView.setMap(map);\n\n      // get all the bookmarks from the ArcGISMap\n      bookmarkList = map.getBookmarks();\n\n      // add default bookmarks\n      Viewpoint viewpoint;\n\n      viewpoint = new Viewpoint(27.3805833, 33.6321389, 6e3);\n      bookmark = new Bookmark(\"Mysterious Desert Pattern\", viewpoint);\n      bookmarkList.add(bookmark);\n      bookmarkNames.getItems().add(bookmark.getName());\n      // set this bookmark as the ArcGISMap's initial viewpoint\n      mapView.setBookmarkAsync(bookmarkList.get(0));\n\n      viewpoint = new Viewpoint(37.401573, -116.867808, 6e3);\n      bookmark = new Bookmark(\"Strange Symbol\", viewpoint);\n      bookmarkNames.getItems().add(bookmark.getName());\n      bookmarkList.add(bookmark);\n\n      viewpoint = new Viewpoint(-33.867886, -63.985, 4e4);\n      bookmark = new Bookmark(\"Guitar-Shaped Trees\", viewpoint);\n      bookmarkNames.getItems().add(bookmark.getName());\n      bookmarkList.add(bookmark);\n\n      viewpoint = new Viewpoint(44.525049, -110.83819, 6e3);\n      bookmark = new Bookmark(\"Grand Prismatic Spring\", viewpoint);\n      bookmarkNames.getItems().add(bookmark.getName());\n      bookmarkList.add(bookmark);\n\n      // add the map view and control panel to stack pane\n      stackPane.getChildren().addAll(mapView, controlsVBox);\n      StackPane.setAlignment(controlsVBox, Pos.TOP_LEFT);\n      StackPane.setMargin(controlsVBox, new Insets(10, 0, 0, 10));\n\n    } catch (Exception e) {\n      // on any error, display the stack trace\n      e.printStackTrace();\n    }\n  }\n\n  /**\n   * Stops and releases all resources used in application.\n   */\n  @Override\n  public void stop() {\n\n    if (mapView != null) {\n      mapView.dispose();\n    }\n  }\n\n  /**\n   * Opens and runs application.\n   *\n   * @param args arguments passed to this application\n   */\n<fim_suffix>  public static void main(String[] args) {\n\n    Application.launch(args);\n  }\n\n}<fim_middle>// function below has no smell\n"}