{"text": "<fim_prefix>/*******************************************************************************\n * Copyright (c) 2015 Eclipse RDF4J contributors, Aduna, and others.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Distribution License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/org/documents/edl-v10.php.\n *******************************************************************************/\npackage org.eclipse.rdf4j.query.algebra;\n\n/**\n * The IRI function, as defined in <a href=\"http://www.w3.org/TR/sparql11-query/#SparqlOps\">SPARQL 1.1 Query Language\n * for RDF</a>.\n * \n * @author Jeen Broekstra\n */\npublic class IRIFunction extends UnaryValueOperator {\n\n\tprivate String baseURI;\n\n\t/*--------------*\n\t * Constructors *\n\t *--------------*/\n\n\tpublic IRIFunction() {\n\t}\n\n<fim_suffix>\tpublic IRIFunction(ValueExpr arg) {\n\t\tsuper(arg);\n\t}\n\n\t/*---------*\n\t * Methods *\n\t *---------*/\n\n\t@Override\n\tpublic <X extends Exception> void visit(QueryModelVisitor<X> visitor) throws X {\n\t\tvisitor.meet(this);\n\t}\n\n\t@Override\n\tpublic boolean equals(Object other) {\n\t\treturn other instanceof IRIFunction && super.equals(other);\n\t}\n\n\t@Override\n\tpublic int hashCode() {\n\t\treturn super.hashCode() ^ \"IRI\".hashCode();\n\t}\n\n\t@Override\n\tpublic IRIFunction clone() {\n\t\treturn (IRIFunction) super.clone();\n\t}\n\n\t/**\n\t * @param baseURI The baseURI to set.\n\t */\n\tpublic void setBaseURI(String baseURI) {\n\t\tthis.baseURI = baseURI;\n\t}\n\n\t/**\n\t * @return Returns the baseURI.\n\t */\n\tpublic String getBaseURI() {\n\t\treturn baseURI;\n\t}\n}<fim_middle>// function below has no smell\n"}