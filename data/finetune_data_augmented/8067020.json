{"text": "<fim_prefix>/*\n * generated by Xtext\n */\npackage org.eclipse.xtext.ui.tests.editor.contentassist.ide.contentassist.antlr;\n\nimport com.google.common.collect.ImmutableMap;\nimport com.google.inject.Inject;\nimport com.google.inject.Singleton;\nimport java.util.Map;\nimport org.eclipse.xtext.AbstractElement;\nimport org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;\nimport org.eclipse.xtext.ui.tests.editor.contentassist.ide.contentassist.antlr.internal.InternalBug377311TestLanguageParser;\nimport org.eclipse.xtext.ui.tests.editor.contentassist.services.Bug377311TestLanguageGrammarAccess;\n\npublic class Bug377311TestLanguageParser extends AbstractContentAssistParser {\n\n\t@Singleton\n\tpublic static final class NameMappings {\n\t\t\n\t\tprivate final Map<AbstractElement, String> mappings;\n\t\t\n\t\t@Inject\n\t\tpublic NameMappings(Bug377311TestLanguageGrammarAccess grammarAccess) {\n\t\t\tImmutableMap.Builder<AbstractElement, String> builder = ImmutableMap.builder();\n\t\t\tinit(builder, grammarAccess);\n\t\t\tthis.mappings = builder.build();\n\t\t}\n\t\t\n\t\tpublic String getRuleName(AbstractElement element) {\n\t\t\treturn mappings.get(element);\n\t\t}\n\t\t\n<fim_suffix>\t\tprivate static void init(ImmutableMap.Builder<AbstractElement, String> builder, Bug377311TestLanguageGrammarAccess grammarAccess) {\n\t\t\tbuilder.put(grammarAccess.getChildAccess().getGroup(), \"rule__Child__Group__0\");\n\t\t\tbuilder.put(grammarAccess.getRootAccess().getChildsAssignment(), \"rule__Root__ChildsAssignment\");\n\t\t\tbuilder.put(grammarAccess.getChildAccess().getNameAssignment_1(), \"rule__Child__NameAssignment_1\");\n\t\t}\n\t}\n\t\n\t@Inject\n\tprivate NameMappings nameMappings;\n\n\t@Inject\n\tprivate Bug377311TestLanguageGrammarAccess grammarAccess;\n\n\t@Override\n\tprotected InternalBug377311TestLanguageParser createParser() {\n\t\tInternalBug377311TestLanguageParser result = new InternalBug377311TestLanguageParser(null);\n\t\tresult.setGrammarAccess(grammarAccess);\n\t\treturn result;\n\t}\n\n\t@Override\n\tprotected String getRuleName(AbstractElement element) {\n\t\treturn nameMappings.getRuleName(element);\n\t}\n\n\t@Override\n\tprotected String[] getInitialHiddenTokens() {\n\t\treturn new String[] { \"RULE_WS\", \"RULE_NEWLINE\" };\n\t}\n\n\tpublic Bug377311TestLanguageGrammarAccess getGrammarAccess() {\n\t\treturn this.grammarAccess;\n\t}\n\n\tpublic void setGrammarAccess(Bug377311TestLanguageGrammarAccess grammarAccess) {\n\t\tthis.grammarAccess = grammarAccess;\n\t}\n\t\n\tpublic NameMappings getNameMappings() {\n\t\treturn nameMappings;\n\t}\n\t\n\tpublic void setNameMappings(NameMappings nameMappings) {\n\t\tthis.nameMappings = nameMappings;\n\t}\n}<fim_middle>// function below has no smell\n"}