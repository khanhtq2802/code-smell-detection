{"text": "<fim_prefix>package com.esri.geoevent.solutions.processor.line2pt;\n\n/*\n * #%L\n * Esri :: AGES :: Solutions :: Processor :: Geometry\n * $Id:$\n * $HeadURL:$\n * %%\n * Copyright (C) 2013 - 2014 Esri\n * %%\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *      http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * #L%\n */\n\n\nimport java.io.IOError;\nimport java.util.HashMap;\n\nimport com.esri.core.geometry.LinearUnit;\nimport com.esri.core.geometry.SpatialReference;\nimport com.esri.core.geometry.Unit;\n\n//import com.esri.core.geometry.LinearUnit;\n//import com.esri.core.geometry.SpatialReference;\n//import com.esri.core.geometry.Unit;\n\npublic class UnitConverter {\n\tprivate HashMap<String, Integer> wkidLookup = new HashMap<String, Integer>();\n\tprivate HashMap<String, String> cannonicalNameLookup = new HashMap<String, String>();\n\tpublic UnitConverter() {\n\t\twkidLookup.put(\"Meter\", 9001);\n\t\twkidLookup.put(\"Kilometer\", 9036);\n\t\twkidLookup.put(\"Foot_US\", 9003);\n\t\twkidLookup.put(\"Mile_US\", 9035);\n\t\twkidLookup.put(\"Nautical_Mile\", 9030);\n\t\t\n\t\tcannonicalNameLookup.put(\"Meters\", \"Meter\");\n\t\tcannonicalNameLookup.put(\"Kilometers\", \"Kilometer\");\n\t\tcannonicalNameLookup.put(\"Feet\", \"Foot_US\");\n\t\tcannonicalNameLookup.put(\"Miles\", \"Mile_US\");\n\t\tcannonicalNameLookup.put(\"Nautical Miles\", \"Nautical_Mile\");\n\t\t\n\t}\n\n<fim_suffix>\tpublic int findWkid(String unit) {\n\t\tif (!wkidLookup.containsKey(unit)) {\n\t\t\tthrow new IllegalArgumentException();\n\t\t}\n\t\treturn wkidLookup.get(unit);\n\t}\n\t\n\tpublic String findConnonicalName(String unit) {\n\t\tif (!cannonicalNameLookup.containsKey(unit)) {\n\t\t\tthrow new IllegalArgumentException();\n\t\t}\n\t\treturn cannonicalNameLookup.get(unit);\n\t}\n\n\tpublic double Convert( double value, int wkidin, int wkidout)\n\t{\n\t\tUnit uin = LinearUnit.create(wkidin);\n\t\tUnit uout = LinearUnit.create(wkidout);\n\t\t\n\t\tvalue = Unit.convertUnits(value, uin, uout);\n\t\treturn value;\n\t}\n\t\n\tpublic double Convert(double v, String unitsin, SpatialReference srout)\n\t{\n\t\tUnit u = srout.getUnit();\n\t\tString srcannonicalName = u.getName();\n\t\tint srwkid = findWkid(srcannonicalName);\n\t\tString cannonicalName = findConnonicalName(unitsin);\n\t\tint unitwkid = findWkid(cannonicalName);\n\t\tif(srwkid != unitwkid)\n\t\t{\n\t\t\tv = Convert(v, unitwkid, srwkid);\n\t\t}\n\t\treturn v;\n\t}\n\n}\n<fim_middle>// function below has no smell\n"}