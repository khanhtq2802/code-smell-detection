{"text": "<fim_prefix>/*\n * RangeDecoderFromBuffer\n *\n * Authors: Lasse Collin <lasse.collin@tukaani.org>\n *          Igor Pavlov <http://7-zip.org/>\n *\n * This file has been put into the public domain.\n * You can do whatever you want with this file.\n */\n\npackage org.tukaani.xz.rangecoder;\n\nimport java.io.DataInputStream;\nimport java.io.IOException;\nimport org.tukaani.xz.ArrayCache;\nimport org.tukaani.xz.CorruptedInputException;\n\npublic final class RangeDecoderFromBuffer extends RangeDecoder {\n    private static final int INIT_SIZE = 5;\n\n    private final byte[] buf;\n    private int pos;\n\n<fim_suffix>    public RangeDecoderFromBuffer(int inputSizeMax, ArrayCache arrayCache) {\n        // We will use the *end* of the array so if the cache gives us\n        // a bigger-than-requested array, we still want to use buf.length.\n        buf = arrayCache.getByteArray(inputSizeMax - INIT_SIZE, false);\n        pos = buf.length;\n    }\n\n    public void putArraysToCache(ArrayCache arrayCache) {\n        arrayCache.putArray(buf);\n    }\n\n    public void prepareInputBuffer(DataInputStream in, int len)\n            throws IOException {\n        if (len < INIT_SIZE)\n            throw new CorruptedInputException();\n\n        if (in.readUnsignedByte() != 0x00)\n            throw new CorruptedInputException();\n\n        code = in.readInt();\n        range = 0xFFFFFFFF;\n\n        // Read the data to the end of the buffer. If the data is corrupt\n        // and the decoder, reading from buf, tries to read past the end of\n        // the data, ArrayIndexOutOfBoundsException will be thrown and\n        // the problem is detected immediately.\n        len -= INIT_SIZE;\n        pos = buf.length - len;\n        in.readFully(buf, pos, len);\n    }\n\n    public boolean isFinished() {\n        return pos == buf.length && code == 0;\n    }\n\n    public void normalize() throws IOException {\n        if ((range & TOP_MASK) == 0) {\n            try {\n                // If the input is corrupt, this might throw\n                // ArrayIndexOutOfBoundsException.\n                code = (code << SHIFT_BITS) | (buf[pos++] & 0xFF);\n                range <<= SHIFT_BITS;\n            } catch (ArrayIndexOutOfBoundsException e) {\n                throw new CorruptedInputException();\n            }\n        }\n    }\n}<fim_middle>// function below has no smell\n"}