{"text": "<fim_prefix>          seek(newTime);\n        }\n      }\n      else if (bdp != null && playCode == VideoFrame.DVD_CONTROL_CHAPTER_SET)\n      {\n        long newTime = bdp.getChapterStartMsec((int)param1);\n        if (Sage.DBG) System.out.println(\"Set chapter (\" + param1 + \") for BluRay seeking to \" + newTime);\n        seek(newTime);\n      }\n      else if (bdp != null && playCode == VideoFrame.DVD_CONTROL_ANGLE_CHANGE)\n      {\n        /*if (getDVDTotalAngles() > 1)\n\t\t\t\t{\n\t\t\t\t\tcurrBDAngle++;\n\t\t\t\t\tif (currBDAngle > getDVDTotalAngles())\n\t\t\t\t\t\tcurrBDAngle = 1;\n\t\t\t\t\tif (Sage.DBG) System.out.println(\"Setting BluRay Angle to be \" + currBDAngle);\n\t\t\t\t\t// Lock the pusher so we can change the file source\n\t\t\t\t\tsynchronized (this)\n\t\t\t\t\t{\n\t\t\t\t\t\taddYieldDecoderLock();\n\t\t\t\t\t\tsynchronized (decoderLock)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tbdp.setAngle(currBDAngle);\n\t\t\t\t\t\t\tseek(getMediaTimeMillis());\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}*/\n      }\n      else if (bdp != null && playCode == VideoFrame.DVD_CONTROL_TITLE_SET && uiMgr != null)\n      {\n        if (param1 > 0 && param1 <= bdp.getNumTitles())\n          uiMgr.getVideoFrame().setBluRayTargetTitle((int)param1);\n        else\n          uiMgr.getVideoFrame().playbackControl(0);\n      }\n    }\n    return false;\n  }\n  private boolean matchBDSubpictureToAudio()\n  {\n    if (bdp != null && audioTracks != null && !subpicOn)\n    {\n      // Also init the corresponding subpicture stream for forced subtitles\n      String currLang = audioTracks[Math.max(0, Math.min(languageIndex, audioTracks.length - 1))].getLanguage();\n      if (subpicTracks != null && currLang != null)\n      {\n        for (int i = 0; i < subpicTracks.length; i++)\n        {\n          if (currLang.equals(subpicTracks[i].getLanguage()))\n          {\n            String tag = subpicTracks[i].getId();\n            int target = i;\n            // See if it's just a stream ID or if it's 2 parts\n            if (tag != null && tag.length() > 0)\n            {\n              int dashIdx = tag.indexOf('-');\n              if (dashIdx == -1)\n              {\n                try\n                {\n                  if (tag.length() == 4) // the full ID\n                    target = Integer.parseInt(tag, 16);\n                  else\n                    target = (Integer.parseInt(tag, 16) << 8);\n                }\n                catch (NumberFormatException nfe)\n                {\n                  if (Sage.DBG) System.out.println(\"ERROR parsing subpic stream ID \" + tag + \" of: \" + nfe);\n                }\n              }\n              else\n              {\n                try\n                {\n                  target = (Integer.parseInt(tag.substring(0, dashIdx), 16) << 8) |\n                      Integer.parseInt(tag.substring(dashIdx + 1, dashIdx + 3), 16);\n                }\n                catch (NumberFormatException nfe)\n                {\n                  if (Sage.DBG) System.out.println(\"ERROR parsing subpic stream ID \" + tag + \" of: \" + nfe);\n                }\n              }\n            }\n            if (Sage.DBG) System.out.println(\"Setting BD subpicture to match audio track for forced subs subID=\" + tag);\n            synchronized (this)\n            {\n              DVDStream(1, isMpeg2PS ? (subpicOn ? target : PS_SUBPIC_DISABLE_STREAM) : ((target & 0x1FFF) | SUBPIC_DISABLE_STREAM));\n            }\n            return true;\n          }\n        }\n      }\n    }\n    return false;\n  }\n  public boolean areDVDButtonsVisible()\n  {\n    return false;\n  }\n  public int getDVDAngle()\n  {\n    if (bdp != null)\n      return Math.min(currBDAngle, getDVDTotalAngles());\n    return 0;\n  }\n  public String[] getDVDAvailableLanguages()\n  {\n    if (hdMediaExtender && audioTracks != null && (currState == PLAY_STATE || currState == PAUSE_STATE))\n    {\n      MediaFile mf = VideoFrame.getMediaFileForPlayer(this);\n      if (mf != null)\n      {\n        sage.media.format.ContainerFormat cf = (bdp != null) ? bdp.getFileFormat() : mf.getFileFormat();\n        if (cf != null && cf.getNumAudioStreams() > 1)\n        {\n          if (audioSels == null)\n            audioSels = cf.getAudioStreamSelectionDescriptors();\n          return audioSels;\n        }\n      }\n    }\n    return Pooler.EMPTY_STRING_ARRAY;\n  }\n  public String[] getDVDAvailableSubpictures()\n  {\n    if (hdMediaExtender && subpicTracks != null && (currState == PLAY_STATE || currState == PAUSE_STATE))\n    {\n      MediaFile mf = VideoFrame.getMediaFileForPlayer(this);\n      if (mf != null)\n      {\n        sage.media.format.ContainerFormat cf = (bdp != null) ? bdp.getFileFormat() : mf.getFileFormat();\n        if (cf != null && cf.getNumSubpictureStreams() > 0)\n        {\n          if (subpicSels == null)\n            subpicSels = cf.getSubpictureStreamSelectionDescriptors();\n          return subpicSels;\n        }\n      }\n    }\n    return Pooler.EMPTY_STRING_ARRAY;\n  }\n  public int getDVDChapter()\n  {\n    if (bdp != null)\n      return bdp.getChapter(mpegSrc.getLastParsedTimeMillis() * 45);\n    return 0;\n  }\n  public int getDVDTotalChapters()\n  {\n    if (bdp != null)\n      return bdp.getNumChapters();\n    return 0;\n  }\n  public int getDVDDomain()\n  {\n    if (bdp != null)\n      return 4; // We're always in the movie for BluRays\n    return 0;\n  }\n  public sage.media.format.AudioFormat getCurrAudioFormat()\n  {\n    if (audioTracks != null && audioTracks.length > 0)\n    {\n      return audioTracks[Math.min(audioTracks.length - 1, Math.max(0, languageIndex))];\n    }\n    else\n      return null;\n  }\n  public String getDVDLanguage()\n  {\n    if (hdMediaExtender && audioTracks != null && (currState == PLAY_STATE || currState == PAUSE_STATE))\n    {\n      MediaFile mf = VideoFrame.getMediaFileForPlayer(this);\n      if (mf != null)\n      {\n        sage.media.format.ContainerFormat cf = (bdp != null) ? bdp.getFileFormat() : mf.getFileFormat();\n        if (cf != null && cf.getNumAudioStreams() > 0)\n        {\n          if (audioSels == null)\n            audioSels = cf.getAudioStreamSelectionDescriptors();\n          return audioSels[Math.min(audioSels.length - 1, Math.max(0, languageIndex))];\n        }\n      }\n    }\n    return \"\";\n  }\n  public String getDVDSubpicture()\n  {\n    if (hdMediaExtender && subpicTracks != null && (currState == PLAY_STATE || currState == PAUSE_STATE))\n    {\n      if (!subpicOn) return null;\n      MediaFile mf = VideoFrame.getMediaFileForPlayer(this);\n      if (mf != null)\n      {\n        sage.media.format.ContainerFormat cf = (bdp != null) ? bdp.getFileFormat() : mf.getFileFormat();\n        if (cf != null && cf.getNumSubpictureStreams() > 0)\n        {\n          if (subpicSels == null)\n            subpicSels = cf.getSubpictureStreamSelectionDescriptors();\n          return subpicSels[Math.min(subpicSels.length - 1, Math.max(0, subpicIndex))];\n        }\n      }\n    }\n    return \"\";\n  }\n  public int getDVDTitle()\n  {\n    if (bdp != null)\n      return currBDTitle;\n    return 0;\n  }\n  public String getBluRayTitleDesc(int titleNum)\n  {\n    if (bdp != null)\n      return bdp.getTitleDesc(titleNum);\n    else\n      return \"\";\n  }\n  public int getDVDTotalAngles()\n  {\n    if (bdp != null)\n      return bdp.getNumAngles();\n    return 0;\n  }\n<fim_suffix>  public int getDVDTotalTitles()\n  {\n    if (bdp != null)\n      return bdp.getNumTitles();\n    return 0;\n  }<fim_middle>// function below has no smell\n"}