{"text": "<fim_prefix>/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\npackage org.apache.uima.caseditor.editor.action;\n\n\nimport org.apache.uima.cas.Feature;\nimport org.apache.uima.cas.Type;\nimport org.apache.uima.cas.text.AnnotationFS;\nimport org.apache.uima.caseditor.editor.ICasDocument;\nimport org.apache.uima.caseditor.editor.ICasEditor;\nimport org.apache.uima.caseditor.editor.util.AnnotationSelection;\nimport org.eclipse.jface.viewers.IStructuredSelection;\nimport org.eclipse.ui.actions.BaseSelectionListenerAction;\n\n/**\n * Widens the left side of the currently selected annotation by one.\n */\n<fim_suffix>public final class WideLeftAnnotationSideAction extends BaseSelectionListenerAction {\n  \n  public static final String ID = \"WideLeftAnnotationSide\";\n  \n  private ICasEditor editor;\n\n  /**\n   * Initializes a new instance.\n   *\n   * @param editor\n   */\n  public WideLeftAnnotationSideAction(ICasEditor editor) {\n    super(\"WideLeftAnnotationSside\");\n\n    this.editor = editor;\n\n    setEnabled(false);\n  }\n\n  @Override\n  protected boolean updateSelection(IStructuredSelection selection) {\n    AnnotationSelection annotation = new AnnotationSelection(selection);\n\n    return annotation.size() == 1;\n  }\n\n  /**\n   * Widens the annotation and sends and sends an update notification\n   * to the provided document.\n   * \n   * @param document\n   * @param annotation\n   */\n  public static void wideLeftAnnotationSide(ICasDocument document, AnnotationFS annotation) {\n    Type annotationType = annotation.getType();\n    Feature beginFeature = annotationType.getFeatureByBaseName(\"begin\");\n\n    if (annotation.getBegin() > 0) {\n      annotation.setIntValue(beginFeature, annotation.getBegin() - 1);\n    }\n\n    document.update(annotation);\n  }\n  \n  /**\n   * Decreases the begin index of an annotation by one.\n   */\n  @Override\n  public void run() {\n    AnnotationSelection annotations = new AnnotationSelection(getStructuredSelection());\n\n    AnnotationFS annotation = annotations.getFirst();\n    \n    wideLeftAnnotationSide(editor.getDocument(), annotation);\n  }\n}<fim_middle>// class below has no smell\n"}