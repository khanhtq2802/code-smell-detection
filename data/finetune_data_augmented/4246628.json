{"text": "<fim_prefix>package org.apache.commons.jcs.auxiliary.disk.file;\n\n/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport org.apache.commons.jcs.auxiliary.disk.AbstractDiskCacheAttributes;\n\n/**\n * Configuration values for the file disk cache.\n */\n<fim_suffix>public class FileDiskCacheAttributes\n    extends AbstractDiskCacheAttributes\n{\n    /** Don't change. */\n    private static final long serialVersionUID = -7371586172678836062L;\n\n    /** Default file count limit: -1 means no limit */\n    public static final int DEFAULT_MAX_NUMBER_OF_FILES = -1;\n\n    /** Max number of files */\n    private int maxNumberOfFiles = DEFAULT_MAX_NUMBER_OF_FILES;\n\n    /** Default limit on the number of times we will retry a delete. */\n    public static final int DEFAULT_MAX_RETRIES_ON_DELETE = 10;\n\n    /** Max number of retries on delete */\n    private int maxRetriesOnDelete = DEFAULT_MAX_RETRIES_ON_DELETE;\n\n    /** Default touch rule. */\n    public static final boolean DEFAULT_TOUCH_ON_GET = false;\n\n    /** Default limit on the number of times we will retry a delete. */\n    public static final int DEFAULT_MAX_RETRIES_ON_TOUCH = 10;\n\n    /** Max number of retries on touch  */\n    private int maxRetriesOnTouch = DEFAULT_MAX_RETRIES_ON_TOUCH;\n\n    /**\n     * Should we touch on get. If so, we will reset the last modified time. If you have a max file\n     * size set, this will make the removal strategy LRU. If this is false, then the oldest will be\n     * removed.\n     */\n    private boolean touchOnGet = DEFAULT_TOUCH_ON_GET;\n\n    /**\n     * @param maxNumberOfFiles the maxNumberOfFiles to set\n     */\n    public void setMaxNumberOfFiles( int maxNumberOfFiles )\n    {\n        this.maxNumberOfFiles = maxNumberOfFiles;\n    }\n\n    /**\n     * @return the maxNumberOfFiles\n     */\n    public int getMaxNumberOfFiles()\n    {\n        return maxNumberOfFiles;\n    }\n\n    /**\n     * @param maxRetriesOnDelete the maxRetriesOnDelete to set\n     */\n    public void setMaxRetriesOnDelete( int maxRetriesOnDelete )\n    {\n        this.maxRetriesOnDelete = maxRetriesOnDelete;\n    }\n\n    /**\n     * @return the maxRetriesOnDelete\n     */\n    public int getMaxRetriesOnDelete()\n    {\n        return maxRetriesOnDelete;\n    }\n\n    /**\n     * @param touchOnGet the touchOnGet to set\n     */\n    public void setTouchOnGet( boolean touchOnGet )\n    {\n        this.touchOnGet = touchOnGet;\n    }\n\n    /**\n     * @return the touchOnGet\n     */\n    public boolean isTouchOnGet()\n    {\n        return touchOnGet;\n    }\n\n    /**\n     * @param maxRetriesOnTouch the maxRetriesOnTouch to set\n     */\n    public void setMaxRetriesOnTouch( int maxRetriesOnTouch )\n    {\n        this.maxRetriesOnTouch = maxRetriesOnTouch;\n    }\n\n    /**\n     * @return the maxRetriesOnTouch\n     */\n    public int getMaxRetriesOnTouch()\n    {\n        return maxRetriesOnTouch;\n    }\n\n    /**\n     * Write out the values for debugging purposes.\n     * <p>\n     * @return String\n     */\n    @Override\n    public String toString()\n    {\n        StringBuilder str = new StringBuilder();\n        str.append( \"DiskFileCacheAttributes \" );\n        str.append( \"\\n diskPath = \" + super.getDiskPath() );\n        str.append( \"\\n maxNumberOfFiles   = \" + getMaxNumberOfFiles() );\n        str.append( \"\\n maxRetriesOnDelete  = \" + getMaxRetriesOnDelete() );\n        return str.toString();\n    }\n}<fim_middle>// class below is data class\n"}