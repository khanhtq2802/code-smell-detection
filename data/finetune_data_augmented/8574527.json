{"text": "<fim_prefix>/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage org.apache.hadoop.hbase.io;\n\nimport org.apache.hadoop.hbase.CompatibilitySingletonFactory;\nimport org.apache.hadoop.hbase.regionserver.MetricsRegionServerSourceFactory;\nimport org.apache.yetus.audience.InterfaceAudience;\n\nimport org.apache.hbase.thirdparty.com.google.common.annotations.VisibleForTesting;\n\n@InterfaceAudience.Private\npublic class MetricsIO {\n\n  private final MetricsIOSource source;\n  private final MetricsIOWrapper wrapper;\n\n  public MetricsIO(MetricsIOWrapper wrapper) {\n    this(CompatibilitySingletonFactory.getInstance(MetricsRegionServerSourceFactory.class)\n            .createIO(wrapper), wrapper);\n  }\n\n  MetricsIO(MetricsIOSource source, MetricsIOWrapper wrapper) {\n    this.source = source;\n    this.wrapper = wrapper;\n  }\n\n  @VisibleForTesting\n  public MetricsIOSource getMetricsSource() {\n    return source;\n  }\n\n  @VisibleForTesting\n  public MetricsIOWrapper getWrapper() {\n    return wrapper;\n  }\n\n<fim_suffix>  public void updateFsReadTime(long t) {\n    source.updateFsReadTime(t);\n  }\n\n  public void updateFsPreadTime(long t) {\n    source.updateFsPReadTime(t);\n  }\n\n  public void updateFsWriteTime(long t) {\n    source.updateFsWriteTime(t);\n  }\n}<fim_middle>// function below has no smell\n"}