{"text": "<fim_prefix>\n<fim_suffix>@Component(\"org.apache.usergrid.rest.management.organizations.applications.ApplicationResource\")\n@Scope(\"prototype\")\n@Produces({\n    MediaType.APPLICATION_JSON,\n    \"application/javascript\",\n    \"application/x-javascript\",\n    \"text/ecmascript\",\n    \"application/ecmascript\",\n    \"text/jscript\"\n})\npublic class ApplicationResource extends AbstractContextResource {\n    private static final Logger logger = LoggerFactory.getLogger(ApplicationResource.class);\n    public static final String CONFIRM_APPLICATION_IDENTIFIER = \"confirm_application_identifier\";\n    public static final String RESTORE_PASSWORD = \"restore_password\";\n    //@Autowired\n    //protected ExportService exportService;\n    OrganizationInfo organization;\n    UUID applicationId;\n    ApplicationInfo application;\n    @Autowired\n    private SignInProviderFactory signInProviderFactory;\n    public ApplicationResource() {\n    }\n    public ApplicationResource init( OrganizationInfo organization, UUID applicationId ) {\n        this.organization = organization;\n        this.applicationId = applicationId;\n        return this;\n    }\n    public ApplicationResource init( OrganizationInfo organization, ApplicationInfo application ) {\n        this.organization = organization;\n        applicationId = application.getId();\n        this.application = application;\n        return this;\n    }\n    @RequireOrganizationAccess\n    @GET\n    @JSONP\n    @Produces({MediaType.APPLICATION_JSON, \"application/javascript\"})\n    public ApiResponse getApplication(\n            @Context UriInfo ui, @QueryParam(\"callback\") @DefaultValue(\"callback\") String callback )\n        throws Exception {\n        ApiResponse response = createApiResponse();\n        ServiceManager sm = smf.getServiceManager( applicationId );\n        response.setAction( \"get\" );\n        response.setApplication( sm.getApplication() );\n        response.setParams( ui.getQueryParameters() );\n        response.setResults( management.getApplicationMetadata( applicationId ) );\n        return response;\n    }\n    @RequireOrganizationAccess\n    @GET\n    @Path(\"credentials\")\n    @JSONP\n    @Produces({MediaType.APPLICATION_JSON, \"application/javascript\"})\n    public ApiResponse getCredentials(\n            @Context UriInfo ui, @QueryParam(\"callback\") @DefaultValue(\"callback\") String callback )\n        throws Exception {\n        ApiResponse response = createApiResponse();\n        response.setAction(\"get application client credentials\");\n        ClientCredentialsInfo credentials =\n                new ClientCredentialsInfo( management.getClientIdForApplication( applicationId ),\n                        management.getClientSecretForApplication( applicationId ) );\n        response.setCredentials( credentials );\n        return response;\n    }\n    @RequireOrganizationAccess\n    @POST\n    @Path(\"credentials\")\n    @JSONP\n    @Produces({MediaType.APPLICATION_JSON, \"application/javascript\"})\n    public ApiResponse generateCredentials( @Context UriInfo ui,\n            @QueryParam(\"callback\") @DefaultValue(\"callback\") String callback )\n        throws Exception {\n        ApiResponse response = createApiResponse();\n        response.setAction( \"generate application client credentials\" );\n        ClientCredentialsInfo credentials =\n                new ClientCredentialsInfo( management.getClientIdForApplication( applicationId ),\n                        management.newClientSecretForApplication(applicationId) );\n        response.setCredentials( credentials );\n        return response;\n    }\n    @RequireOrganizationAccess\n    @GET\n    @JSONP\n    @Path(\"_size\")\n    public ApiResponse getApplicationSize(\n        @Context UriInfo ui, @QueryParam(\"callback\") @DefaultValue(\"callback\") String callback )\n        throws Exception {\n        ApiResponse response = createApiResponse();\n        response.setAction( \"get application size for all entities\" );\n        long size = management.getApplicationSize(this.applicationId);\n        Map<String,Object> map = new HashMap<>();\n        Map<String,Object> innerMap = new HashMap<>();\n        Map<String,Object> sumMap = new HashMap<>();\n        innerMap.put(\"application\",size);\n        sumMap.put(\"size\",innerMap);\n        map.put(\"aggregation\", sumMap);\n        response.setMetadata(map);\n        return response;\n    }\n    @RequireOrganizationAccess\n    @GET\n    @JSONP\n    @Path(\"{collection_name}/_size\")\n    public ApiResponse getCollectionSize(\n        @Context UriInfo ui,\n        @PathParam( \"collection_name\" ) String collection_name,\n        @QueryParam(\"callback\") @DefaultValue(\"callback\") String callback )\n        throws Exception {\n        ApiResponse response = createApiResponse();\n        response.setAction(\"get collection size for all entities\");\n        long size = management.getCollectionSize(this.applicationId, collection_name);\n        Map<String,Object> map = new HashMap<>();\n        Map<String,Object> sumMap = new HashMap<>();\n        Map<String,Object> innerMap = new HashMap<>();\n        innerMap.put(collection_name,size);\n        sumMap.put(\"size\",innerMap);\n        map.put(\"aggregation\",sumMap);\n        response.setMetadata(map);\n        return response;\n    }\n    @RequireOrganizationAccess\n    @GET\n    @JSONP\n    @Path(\"collections/_size\")\n    public ApiResponse getEachCollectionSize(\n        @Context UriInfo ui,\n        @QueryParam(\"callback\") @DefaultValue(\"callback\") String callback )\n        throws Exception {\n        ApiResponse response = createApiResponse();\n        response.setAction(\"get collection size for all entities\");\n        Map<String,Long> sizes = management.getEachCollectionSize(this.applicationId);\n        Map<String,Object> map = new HashMap<>();\n        Map<String,Object> sumMap = new HashMap<>();\n        sumMap.put(\"size\",sizes);\n        map.put(\"aggregation\",sumMap);\n        response.setMetadata(map);\n        return response;\n    }\n    @POST\n    @Path(\"sia-provider\")\n    @Consumes(APPLICATION_JSON)\n    @RequireOrganizationAccess\n    @JSONP\n    @Produces({MediaType.APPLICATION_JSON, \"application/javascript\"})\n    public ApiResponse configureProvider(\n            @Context UriInfo ui,\n            @QueryParam(\"provider_key\") String siaProvider,\n            Map<String, Object> json,\n            @QueryParam(\"callback\")\n            @DefaultValue(\"\") String callback )\n        throws Exception {\n        ApiResponse response = createApiResponse();\n        response.setAction( \"post signin provider configuration\" );\n        Preconditions.checkArgument( siaProvider != null, \"Sign in provider required\" );\n        SignInAsProvider signInAsProvider = null;\n        if ( StringUtils.equalsIgnoreCase( siaProvider, \"facebook\" ) ) {\n            signInAsProvider = signInProviderFactory.facebook(\n                    smf.getServiceManager( applicationId ).getApplication() );\n        }\n        else if ( StringUtils.equalsIgnoreCase( siaProvider, \"pingident\" ) ) {\n            signInAsProvider = signInProviderFactory.pingident(\n                    smf.getServiceManager( applicationId ).getApplication() );\n        }\n        else if ( StringUtils.equalsIgnoreCase( siaProvider, \"foursquare\" ) ) {\n            signInAsProvider = signInProviderFactory.foursquare(\n                    smf.getServiceManager( applicationId ).getApplication() );\n        }\n        Preconditions.checkArgument( signInAsProvider != null,\n                \"No signin provider found by that name: \" + siaProvider );\n        signInAsProvider.saveToConfiguration( json );\n        return response;\n    }\n//    @POST\n//    @Path(\"export\")\n//    @Consumes(APPLICATION_JSON)\n//    @RequireOrganizationAccess\n//    public Response exportPostJson( @Context UriInfo ui,Map<String, Object> json,\n//                                    @QueryParam(\"callback\") @DefaultValue(\"\") String callback )\n//            throws OAuthSystemException {\n//\n//        UsergridAwsCredentials uac = new UsergridAwsCredentials();\n//\n//        UUID jobUUID = null;\n//        Map<String, String> uuidRet = new HashMap<String, String>();\n//\n//        Map<String,Object> properties;\n//        Map<String, Object> storage_info;\n//\n//        try {\n//            if((properties = ( Map<String, Object> )  json.get( \"properties\" )) == null){\n//                throw new NullArgumentException(\"Could not find 'properties'\");\n//            }\n//            storage_info = ( Map<String, Object> ) properties.get( \"storage_info\" );\n//            String storage_provider = ( String ) properties.get( \"storage_provider\" );\n//            if(storage_provider == null) {\n//                throw new NullArgumentException( \"Could not find field 'storage_provider'\" );\n//            }\n//            if(storage_info == null) {\n//                throw new NullArgumentException( \"Could not find field 'storage_info'\" );\n//            }\n//\n//\n//            String bucketName = ( String ) storage_info.get( \"bucket_location\" );<fim_middle>// class below is blob\n"}