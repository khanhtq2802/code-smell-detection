{"text": "<fim_prefix>\t\t\t\tBoolean result = reference.getOuter().accept(this) && doVisitParameterizedTypeReference(reference);\n\t\t\t\treturn result;\n\t\t\t}\n\t\t\t@Override\n\t\t\tprotected Boolean doVisitInnerFunctionTypeReference(InnerFunctionTypeReference reference) {\n\t\t\t\tBoolean result = reference.getOuter().accept(this) && doVisitParameterizedTypeReference(reference);\n\t\t\t\treturn result;\n\t\t\t}\n\t\t\t@Override\n\t\t\tprotected Boolean doVisitArrayTypeReference(ArrayTypeReference reference) {\n\t\t\t\treturn reference.getComponentType().accept(this);\n\t\t\t}\n\t\t});\n\t}\n\tprotected boolean isFinal(LightweightTypeReference expressionTypeRef) {\n\t\tif (expressionTypeRef.isArray()) {\n\t\t\treturn isFinal(expressionTypeRef.getComponentType());\n\t\t}\n\t\tif (expressionTypeRef.isPrimitive())\n\t\t\treturn true;\n\t\treturn expressionTypeRef.getType() instanceof JvmDeclaredType\n\t\t\t\t&& ((JvmDeclaredType) expressionTypeRef.getType()).isFinal();\n\t}\n\t@Check\n\tpublic void checkDelegateConstructorIsFirst(XFeatureCall featureCall) {\n\t\tJvmIdentifiableElement feature = featureCall.getFeature();\n\t\tif (feature != null && !feature.eIsProxy() && feature instanceof JvmConstructor) {\n\t\t\tJvmIdentifiableElement container = logicalContainerProvider.getNearestLogicalContainer(featureCall);\n\t\t\tif (container != null) {\n\t\t\t\tif (container instanceof JvmConstructor) {\n\t\t\t\t\tXExpression body = logicalContainerProvider.getAssociatedExpression(container);\n\t\t\t\t\tif (body == featureCall)\n\t\t\t\t\t\treturn;\n\t\t\t\t\tif (body instanceof XBlockExpression) {\n\t\t\t\t\t\tList<XExpression> expressions = ((XBlockExpression) body).getExpressions();\n\t\t\t\t\t\tif (expressions.isEmpty() || expressions.get(0) != featureCall) {\n\t\t\t\t\t\t\terror(\"Constructor call must be the first expression in a constructor\", null, INVALID_CONSTRUCTOR_INVOCATION);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\terror(\"Constructor call must be the first expression in a constructor\", null, INVALID_CONSTRUCTOR_INVOCATION);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t@Check\n\tpublic void checkConstructorArgumentsAreValid(XFeatureCall featureCall) {\n\t\tJvmIdentifiableElement feature = featureCall.getFeature();\n\t\tif (feature != null && !feature.eIsProxy() && feature instanceof JvmConstructor) {\n\t\t\tJvmType containerType = EcoreUtil2.getContainerOfType(logicalContainerProvider.getNearestLogicalContainer(featureCall), JvmType.class);\n\t\t\tfor(XExpression argument: featureCall.getFeatureCallArguments()) {\n\t\t\t\tcheckIsValidConstructorArgument(argument, containerType);\n\t\t\t}\n\t\t}\n\t}\n\tprotected void checkIsValidConstructorArgument(XExpression argument, JvmType containerType) {\n\t\tTreeIterator<EObject> iterator = EcoreUtil2.eAll(argument);\n\t\twhile(iterator.hasNext()) {\n\t\t\tEObject partOfArgumentExpression = iterator.next();\n\t\t\tif (partOfArgumentExpression instanceof XFeatureCall || partOfArgumentExpression instanceof XMemberFeatureCall) {\t\t\t\t\n\t\t\t\tXAbstractFeatureCall featureCall = (XAbstractFeatureCall) partOfArgumentExpression;\n\t\t\t\tXExpression actualReceiver = featureCall.getActualReceiver();\n\t\t\t\tif(actualReceiver instanceof XFeatureCall && ((XFeatureCall)actualReceiver).getFeature() == containerType) {\n\t\t\t\t\tJvmIdentifiableElement feature = featureCall.getFeature();\n\t\t\t\t\tif (feature != null && !feature.eIsProxy()) {\n\t\t\t\t\t\tif (feature instanceof JvmField) {\n\t\t\t\t\t\t\tif (!((JvmField) feature).isStatic())\n\t\t\t\t\t\t\t\terror(\"Cannot refer to an instance field \" + feature.getSimpleName() + \" while explicitly invoking a constructor\", \n\t\t\t\t\t\t\t\t\t\tpartOfArgumentExpression, null, INVALID_CONSTRUCTOR_ARGUMENT);\n\t\t\t\t\t\t} else if (feature instanceof JvmOperation) {\n\t\t\t\t\t\t\tif (!((JvmOperation) feature).isStatic())\n\t\t\t\t\t\t\t\terror(\"Cannot refer to an instance method while explicitly invoking a constructor\", \n\t\t\t\t\t\t\t\t\t\tpartOfArgumentExpression, null, INVALID_CONSTRUCTOR_ARGUMENT);\t\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if(isLocalClassSemantics(partOfArgumentExpression)) {\n\t\t\t\titerator.prune();\n\t\t\t}\n\t\t}\n\t}\n\t@Check\n\tpublic void checkNoCircularConstructorCall(XFeatureCall featureCall) {\n\t\tJvmIdentifiableElement feature = featureCall.getFeature();\n\t\tif (feature != null && !feature.eIsProxy() && feature instanceof JvmConstructor) {\n\t\t\tJvmIdentifiableElement logicalContainer = logicalContainerProvider.getNearestLogicalContainer(featureCall);\n\t\t\tif (logicalContainer instanceof JvmConstructor) {\n\t\t\t\tJvmConstructor currentConstructor = (JvmConstructor) logicalContainer;\n\t\t\t\tJvmConstructor calledConstructor = (JvmConstructor) feature;\n\t\t\t\tSet<JvmConstructor> visited = Sets.newHashSet(currentConstructor);\n\t\t\t\twhile(calledConstructor.getDeclaringType() == currentConstructor.getDeclaringType()) {\n\t\t\t\t\tif (!visited.add(calledConstructor)) {\n\t\t\t\t\t\terror(\"Recursive constructor invocation\", XABSTRACT_FEATURE_CALL__FEATURE, CIRCULAR_CONSTRUCTOR_INVOCATION);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tXExpression constructorBody = logicalContainerProvider.getAssociatedExpression(calledConstructor);\n\t\t\t\t\tif (constructorBody instanceof XBlockExpression) {\n\t\t\t\t\t\tList<XExpression> expressions = ((XBlockExpression) constructorBody).getExpressions();\n\t\t\t\t\t\tif (expressions.isEmpty())\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\tXExpression firstInBody = ((XBlockExpression) constructorBody).getExpressions().get(0);\n\t\t\t\t\t\tif (firstInBody instanceof XFeatureCall) {\n\t\t\t\t\t\t\tJvmIdentifiableElement calledFeature = ((XFeatureCall) firstInBody).getFeature();\n\t\t\t\t\t\t\tif (calledFeature != null && !calledFeature.eIsProxy() && calledFeature instanceof JvmConstructor) {\n\t\t\t\t\t\t\t\tcalledConstructor = (JvmConstructor) calledFeature;\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t} \n\t\t\t\t\t\t} \n\t\t\t\t\t} \n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n<fim_suffix>\t@Check\n\tpublic void checkNoForwardReferences(XExpression fieldInitializer) {\n\t\tJvmIdentifiableElement container = logicalContainerProvider.getLogicalContainer(fieldInitializer);\n\t\tif (container instanceof JvmField) {\n\t\t\tJvmField field = (JvmField) container;\n\t\t\tboolean staticField = field.isStatic();\n\t\t\tJvmDeclaredType declaredType = field.getDeclaringType();\n\t\t\tif (declaredType == null) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tCollection<JvmField> illegalFields = Sets.newHashSet();\n\t\t\tfor(int i = declaredType.getMembers().size() - 1; i>=0; i--) {\n\t\t\t\tJvmMember member = declaredType.getMembers().get(i);\n\t\t\t\tif (member instanceof JvmField) {\n\t\t\t\t\tif (((JvmField) member).isStatic() == staticField) {\n\t\t\t\t\t\tillegalFields.add((JvmField) member);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (member == field)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tTreeIterator<EObject> iterator = EcoreUtil2.eAll(fieldInitializer);\n\t\t\twhile(iterator.hasNext()) {\n\t\t\t\tEObject object = iterator.next();\n\t\t\t\tif (object instanceof XFeatureCall) {\n\t\t\t\t\tJvmIdentifiableElement feature = ((XFeatureCall) object).getFeature();\n\t\t\t\t\tif (illegalFields.contains(((XFeatureCall) object).getFeature())) {\n\t\t\t\t\t\terror(\"Cannot reference the field '\" + feature.getSimpleName() + \"' before it is defined\", \n\t\t\t\t\t\t\t\tobject, null, INSIGNIFICANT_INDEX, ILLEGAL_FORWARD_REFERENCE);\n\t\t\t\t\t}\n\t\t\t\t} else if (isLocalClassSemantics(object)) {\n\t\t\t\t\titerator.prune();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}<fim_middle>// function below is long method\n"}