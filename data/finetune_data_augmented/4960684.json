{"text": "<fim_prefix>/*\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.jclouds.sts.options;\n\nimport org.jclouds.http.options.BaseHttpRequestOptions;\n\nimport com.google.common.base.MoreObjects;\nimport com.google.common.base.Objects;\nimport com.google.common.collect.Multimap;\n\n/**\n * @see <a href=\n *      \"http://docs.aws.amazon.com/STS/latest/APIReference/API_AssumeRole.html\"\n *      />\n */\npublic class AssumeRoleOptions extends BaseHttpRequestOptions implements Cloneable {\n\n   // long as this is a more typical unit for duration, hence less casting\n   private Long durationSeconds;\n   private String policy;\n   private String externalId;\n\n   /**\n    * A unique identifier that is generated by a third party for each of their customers. \n    */\n   public AssumeRoleOptions externalId(String externalId) {\n      this.externalId = externalId;\n      return this;\n   }\n\n   /**\n    * The duration, in seconds, that the credentials should remain valid. 12\n    * hours is default. 15 minutes is current minimum.\n    */\n   public AssumeRoleOptions durationSeconds(long durationSeconds) {\n      this.durationSeconds = durationSeconds;\n      return this;\n   }\n\n   /**\n    * A supplemental policy that can be associated with the temporary security credentials. \n    */\n   public AssumeRoleOptions policy(String policy) {\n      this.policy = policy;\n      return this;\n   }\n\n<fim_suffix>   public static class Builder {\n\n      /**\n       * @see AssumeRoleOptions#externalId\n       */\n      public static AssumeRoleOptions externalId(String externalId) {\n         return new AssumeRoleOptions().externalId(externalId);\n      }\n\n      /**\n       * @see AssumeRoleOptions#durationSeconds\n       */\n      public static AssumeRoleOptions durationSeconds(long durationSeconds) {\n         return new AssumeRoleOptions().durationSeconds(durationSeconds);\n      }\n\n      /**\n       * @see AssumeRoleOptions#policy\n       */\n      public static AssumeRoleOptions policy(String policy) {\n         return new AssumeRoleOptions().policy(policy);\n      }\n   }\n\n   @Override\n   public Multimap<String, String> buildFormParameters() {\n      Multimap<String, String> params = super.buildFormParameters();\n      if (externalId != null)\n         params.put(\"ExternalId\", externalId.toString());\n      if (durationSeconds != null)\n         params.put(\"DurationSeconds\", durationSeconds.toString());\n      if (policy != null)\n         params.put(\"Policy\", policy);\n      return params;\n   }\n\n   /**\n    * {@inheritDoc}\n    */\n   @Override\n   public int hashCode() {\n      return Objects.hashCode(externalId, durationSeconds, policy);\n   }\n\n   @Override\n   public AssumeRoleOptions clone() {\n      return new AssumeRoleOptions().externalId(externalId).durationSeconds(durationSeconds)\n            .policy(policy);\n   }\n\n   /**\n    * {@inheritDoc}\n    */\n   @Override\n   public boolean equals(Object obj) {\n      if (this == obj)\n         return true;\n      if (obj == null)\n         return false;\n      if (getClass() != obj.getClass())\n         return false;\n      AssumeRoleOptions other = AssumeRoleOptions.class.cast(obj);\n      return Objects.equal(this.externalId, other.externalId)\n            && Objects.equal(this.durationSeconds, other.durationSeconds)\n            && Objects.equal(this.policy, other.policy);\n   }\n\n   /**\n    * {@inheritDoc}\n    */\n   @Override\n   public String toString() {\n      return MoreObjects.toStringHelper(this).omitNullValues().add(\"externalId\", externalId)\n            .add(\"durationSeconds\", durationSeconds).add(\"policy\", policy).toString();\n   }\n}<fim_middle>// class below has no smell\n"}