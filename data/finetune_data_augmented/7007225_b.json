{"text": "<fim_prefix>// Copyright 2017 The Nomulus Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\npackage google.registry.model.poll;\n\nimport com.google.common.annotations.VisibleForTesting;\nimport com.googlecode.objectify.annotation.Embed;\nimport google.registry.model.ImmutableObject;\nimport google.registry.model.eppcommon.Trid;\nimport google.registry.model.eppoutput.EppResponse.ResponseData;\nimport javax.xml.bind.annotation.XmlAttribute;\nimport javax.xml.bind.annotation.XmlElement;\nimport javax.xml.bind.annotation.XmlRootElement;\nimport javax.xml.bind.annotation.XmlTransient;\nimport javax.xml.bind.annotation.XmlType;\nimport javax.xml.bind.annotation.XmlValue;\nimport org.joda.time.DateTime;\n\n/** The {@link ResponseData} returned when completing a pending action on a domain. */\n<fim_suffix>@XmlTransient\npublic abstract class PendingActionNotificationResponse\n    extends ImmutableObject implements ResponseData {\n\n  /** The inner name type that contains a name and the result boolean. */\n  @Embed\n  static class NameOrId extends ImmutableObject {\n    @XmlValue\n    String value;\n\n    @XmlAttribute(name = \"paResult\")\n    boolean actionResult;\n  }\n\n  @XmlTransient\n  NameOrId nameOrId;\n\n  @XmlElement(name = \"paTRID\")\n  Trid trid;\n\n  @XmlElement(name = \"paDate\")\n  DateTime processedDate;\n\n  public String getNameAsString() {\n    return nameOrId.value;\n  }\n\n  @VisibleForTesting\n  public Trid getTrid() {\n    return trid;\n  }\n\n  @VisibleForTesting\n  public boolean getActionResult() {\n    return nameOrId.actionResult;\n  }\n\n  protected static <T extends PendingActionNotificationResponse> T init(\n      T response, String nameOrId, boolean actionResult, Trid trid, DateTime processedDate) {\n    response.nameOrId = new NameOrId();\n    response.nameOrId.value = nameOrId;\n    response.nameOrId.actionResult = actionResult;\n    response.trid = trid;\n    response.processedDate = processedDate;\n    return response;\n  }\n\n  /** An adapter to output the XML in response to resolving a pending command on a domain. */\n  @Embed\n  @XmlRootElement(name = \"panData\", namespace = \"urn:ietf:params:xml:ns:domain-1.0\")\n  @XmlType(\n      propOrder = {\"name\", \"trid\", \"processedDate\"},\n      namespace = \"urn:ietf:params:xml:ns:domain-1.0\")\n  public static class DomainPendingActionNotificationResponse\n      extends PendingActionNotificationResponse {\n\n    @XmlElement\n    NameOrId getName() {\n      return nameOrId;\n    }\n\n    public static DomainPendingActionNotificationResponse create(\n        String fullyQualifiedDomainName, boolean actionResult, Trid trid, DateTime processedDate) {\n      return init(\n          new DomainPendingActionNotificationResponse(),\n          fullyQualifiedDomainName,\n          actionResult,\n          trid,\n          processedDate);\n    }\n  }\n\n  /** An adapter to output the XML in response to resolving a pending command on a contact. */\n  @Embed\n  @XmlRootElement(name = \"panData\", namespace = \"urn:ietf:params:xml:ns:contact-1.0\")\n  @XmlType(\n      propOrder = {\"id\", \"trid\", \"processedDate\"},\n      namespace = \"urn:ietf:params:xml:ns:contact-1.0\")\n  public static class ContactPendingActionNotificationResponse\n      extends PendingActionNotificationResponse {\n\n    @XmlElement\n    NameOrId getId() {\n      return nameOrId;\n    }\n\n    public static ContactPendingActionNotificationResponse create(\n        String contactId, boolean actionResult, Trid trid, DateTime processedDate) {\n      return init(\n          new ContactPendingActionNotificationResponse(),\n          contactId,\n          actionResult,\n          trid,\n          processedDate);\n    }\n  }\n\n  /** An adapter to output the XML in response to resolving a pending command on a host. */\n  @Embed\n  @XmlRootElement(name = \"panData\", namespace = \"urn:ietf:params:xml:ns:domain-1.0\")\n  @XmlType(\n    propOrder = {\"name\", \"trid\", \"processedDate\"},\n    namespace = \"urn:ietf:params:xml:ns:domain-1.0\"\n  )\n  public static class HostPendingActionNotificationResponse\n      extends PendingActionNotificationResponse {\n\n    @XmlElement\n    NameOrId getName() {\n      return nameOrId;\n    }\n\n    public static HostPendingActionNotificationResponse create(\n        String fullyQualifiedHostName, boolean actionResult, Trid trid, DateTime processedDate) {\n      return init(\n          new HostPendingActionNotificationResponse(),\n          fullyQualifiedHostName,\n          actionResult,\n          trid,\n          processedDate);\n    }\n  }\n}<fim_middle>// class below is data class and blob\n"}