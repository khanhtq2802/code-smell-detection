{"text": "<fim_prefix>/*\n * Copyright 2002-2018 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage org.springframework.transaction.jta;\n\nimport javax.transaction.NotSupportedException;\nimport javax.transaction.SystemException;\nimport javax.transaction.Transaction;\nimport javax.transaction.TransactionManager;\n\nimport org.springframework.lang.Nullable;\nimport org.springframework.util.Assert;\n\n/**\n * Default implementation of the {@link TransactionFactory} strategy interface,\n * simply wrapping a standard JTA {@link javax.transaction.TransactionManager}.\n *\n * <p>Does not support transaction names; simply ignores any specified name.\n *\n * @author Juergen Hoeller\n * @since 2.5\n * @see javax.transaction.TransactionManager#setTransactionTimeout(int)\n * @see javax.transaction.TransactionManager#begin()\n * @see javax.transaction.TransactionManager#getTransaction()\n */\npublic class SimpleTransactionFactory implements TransactionFactory {\n\n\tprivate final TransactionManager transactionManager;\n\n\n\t/**\n\t * Create a new SimpleTransactionFactory for the given TransactionManager.\n\t * @param transactionManager the JTA TransactionManager to wrap\n\t */\n\tpublic SimpleTransactionFactory(TransactionManager transactionManager) {\n\t\tAssert.notNull(transactionManager, \"TransactionManager must not be null\");\n\t\tthis.transactionManager = transactionManager;\n\t}\n\n\n<fim_suffix>\t@Override\n\tpublic Transaction createTransaction(@Nullable String name, int timeout) throws NotSupportedException, SystemException {\n\t\tif (timeout >= 0) {\n\t\t\tthis.transactionManager.setTransactionTimeout(timeout);\n\t\t}\n\t\tthis.transactionManager.begin();\n\t\treturn new ManagedTransactionAdapter(this.transactionManager);\n\t}\n\n\t@Override\n\tpublic boolean supportsResourceAdapterManagedTransactions() {\n\t\treturn false;\n\t}\n\n}<fim_middle>// function below has no smell\n"}