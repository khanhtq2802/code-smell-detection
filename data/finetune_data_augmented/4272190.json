{"text": "<fim_prefix>/*\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.apache.commons.validator.routines.checkdigit;\n\n/**\n * Modulus 10 <b>Luhn</b> Check Digit calculation/validation.\n *\n * Luhn check digits are used, for example, by:\n * <ul>\n *    <li><a href=\"http://en.wikipedia.org/wiki/Credit_card\">Credit Card Numbers</a></li>\n *    <li><a href=\"http://en.wikipedia.org/wiki/IMEI\">IMEI Numbers</a> - International\n *        Mobile Equipment Identity Numbers</li>\n * </ul>\n * Check digit calculation is based on <i>modulus 10</i> with digits in\n * an <i>odd</i> position (from right to left) being weighted 1 and <i>even</i>\n * position digits being weighted 2 (weighted values greater than 9 have 9 subtracted).\n *\n * <p>\n * See <a href=\"http://en.wikipedia.org/wiki/Luhn_algorithm\">Wikipedia</a>\n * for more details.\n * </p>\n *\n * @version $Revision$\n * @since Validator 1.4\n */\n<fim_suffix>public final class LuhnCheckDigit extends ModulusCheckDigit {\n\n    private static final long serialVersionUID = -2976900113942875999L;\n\n    /** Singleton Luhn Check Digit instance */\n    public static final CheckDigit LUHN_CHECK_DIGIT = new LuhnCheckDigit();\n\n    /** weighting given to digits depending on their right position */\n    private static final int[] POSITION_WEIGHT = new int[] {2, 1};\n\n    /**\n     * Construct a modulus 10 Luhn Check Digit routine.\n     */\n    public LuhnCheckDigit() {\n        super(10); // CHECKSTYLE IGNORE MagicNumber\n    }\n\n    /**\n     * <p>Calculates the <i>weighted</i> value of a charcter in the\n     * code at a specified position.</p>\n     *\n     * <p>For Luhn (from right to left) <b>odd</b> digits are weighted\n     * with a factor of <b>one</b> and <b>even</b> digits with a factor\n     * of <b>two</b>. Weighted values &gt; 9, have 9 subtracted</p>\n     *\n     * @param charValue The numeric value of the character.\n     * @param leftPos The position of the character in the code, counting from left to right\n     * @param rightPos The positionof the character in the code, counting from right to left\n     * @return The weighted value of the character.\n     */\n    @Override\n    protected int weightedValue(int charValue, int leftPos, int rightPos) {\n        int weight = POSITION_WEIGHT[rightPos % 2]; // CHECKSTYLE IGNORE MagicNumber\n        int weightedValue = charValue * weight;\n        return weightedValue > 9 ? (weightedValue - 9) : weightedValue; // CHECKSTYLE IGNORE MagicNumber\n    }\n}<fim_middle>// class below has no smell\n"}