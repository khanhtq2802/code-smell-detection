{"text": "<fim_prefix>/*\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n * \n *     http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.apache.cocoon.core.container.spring.avalon;\n\nimport org.apache.avalon.framework.service.ServiceException;\nimport org.apache.avalon.framework.service.ServiceManager;\nimport org.springframework.beans.BeansException;\nimport org.springframework.beans.factory.BeanFactory;\nimport org.springframework.beans.factory.BeanFactoryAware;\n\n/**\n * This bean acts like a Avalon {@link ServiceManager}.\n * It just delegates to the underlying bean factory.\n *\n * @since 2.2\n * @version $Id$\n */\n<fim_suffix>final public class AvalonServiceManager\n    implements ServiceManager, BeanFactoryAware {\n\n    /** The bean factory this service manager is defined in. */\n    protected BeanFactory beanFactory;\n\n    /**\n     * @see org.springframework.beans.factory.BeanFactoryAware#setBeanFactory(org.springframework.beans.factory.BeanFactory)\n     */\n    public void setBeanFactory(BeanFactory beanFactory) throws BeansException {\n        this.beanFactory = beanFactory;\n    }\n\n    /**\n     * @see org.apache.avalon.framework.service.ServiceManager#hasService(java.lang.String)\n     */\n    public boolean hasService(String role) {\n        return this.beanFactory.containsBean(role);\n    }\n\n    /**\n     * @see org.apache.avalon.framework.service.ServiceManager#lookup(java.lang.String)\n     */\n    public Object lookup(String role) throws ServiceException {\n        if ( !this.hasService(role) ) {\n            throw new ServiceException(\"AvalonServiceManager\",\n                                       \"Component with '\" + role + \"' is not defined in this service manager.\");\n        }\n        try {\n            return this.beanFactory.getBean(role);\n        } catch (BeansException be) {\n            throw new ServiceException(\"AvalonServiceManager\",\n                                       \"Exception during lookup of component with '\" + role + \"'.\", be);\n        }\n    }\n\n    /**\n     * @see org.apache.avalon.framework.service.ServiceManager#release(java.lang.Object)\n     */\n    public void release(Object component) {\n        if ( component instanceof AvalonPoolable ) {\n            ((AvalonPoolable)component).putBackIntoAvalonPool();\n        }\n    }\n}<fim_middle>// class below has no smell\n"}