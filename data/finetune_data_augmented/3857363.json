{"text": "<fim_prefix>      static {\n        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {\n          byName.put(field.getFieldName(), field);\n        }\n      }\n      /**\n       * Find the _Fields constant that matches fieldId, or null if its not found.\n       */\n      @org.apache.thrift.annotation.Nullable\n      public static _Fields findByThriftId(int fieldId) {\n        switch(fieldId) {\n          case 0: // SUCCESS\n            return SUCCESS;\n          case 1: // SEC\n            return SEC;\n          case 2: // NSTE\n            return NSTE;\n          case 3: // TMFE\n            return TMFE;\n          case 4: // TSNPE\n            return TSNPE;\n          default:\n            return null;\n        }\n      }\n      /**\n       * Find the _Fields constant that matches fieldId, throwing an exception\n       * if it is not found.\n       */\n      public static _Fields findByThriftIdOrThrow(int fieldId) {\n        _Fields fields = findByThriftId(fieldId);\n        if (fields == null) throw new java.lang.IllegalArgumentException(\"Field \" + fieldId + \" doesn't exist!\");\n        return fields;\n      }\n      /**\n       * Find the _Fields constant that matches name, or null if its not found.\n       */\n      @org.apache.thrift.annotation.Nullable\n      public static _Fields findByName(java.lang.String name) {\n        return byName.get(name);\n      }\n      private final short _thriftId;\n      private final java.lang.String _fieldName;\n      _Fields(short thriftId, java.lang.String fieldName) {\n        _thriftId = thriftId;\n        _fieldName = fieldName;\n      }\n      public short getThriftFieldId() {\n        return _thriftId;\n      }\n      public java.lang.String getFieldName() {\n        return _fieldName;\n      }\n    }\n    // isset id assignments\n    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;\n    static {\n      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);\n      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData(\"success\", org.apache.thrift.TFieldRequirementType.DEFAULT, \n          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, org.apache.accumulo.core.dataImpl.thrift.InitialScan.class)));\n      tmpMap.put(_Fields.SEC, new org.apache.thrift.meta_data.FieldMetaData(\"sec\", org.apache.thrift.TFieldRequirementType.DEFAULT, \n          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, org.apache.accumulo.core.clientImpl.thrift.ThriftSecurityException.class)));\n      tmpMap.put(_Fields.NSTE, new org.apache.thrift.meta_data.FieldMetaData(\"nste\", org.apache.thrift.TFieldRequirementType.DEFAULT, \n          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, NotServingTabletException.class)));\n      tmpMap.put(_Fields.TMFE, new org.apache.thrift.meta_data.FieldMetaData(\"tmfe\", org.apache.thrift.TFieldRequirementType.DEFAULT, \n          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, TooManyFilesException.class)));\n      tmpMap.put(_Fields.TSNPE, new org.apache.thrift.meta_data.FieldMetaData(\"tsnpe\", org.apache.thrift.TFieldRequirementType.DEFAULT, \n          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, TSampleNotPresentException.class)));\n      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);\n      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(startScan_result.class, metaDataMap);\n    }\n    public startScan_result() {\n    }\n    public startScan_result(\n      org.apache.accumulo.core.dataImpl.thrift.InitialScan success,\n      org.apache.accumulo.core.clientImpl.thrift.ThriftSecurityException sec,\n      NotServingTabletException nste,\n      TooManyFilesException tmfe,\n      TSampleNotPresentException tsnpe)\n    {\n      this();\n      this.success = success;\n      this.sec = sec;\n      this.nste = nste;\n      this.tmfe = tmfe;\n      this.tsnpe = tsnpe;\n    }\n    /**\n     * Performs a deep copy on <i>other</i>.\n     */\n    public startScan_result(startScan_result other) {\n      if (other.isSetSuccess()) {\n        this.success = new org.apache.accumulo.core.dataImpl.thrift.InitialScan(other.success);\n      }\n      if (other.isSetSec()) {\n        this.sec = new org.apache.accumulo.core.clientImpl.thrift.ThriftSecurityException(other.sec);\n      }\n      if (other.isSetNste()) {\n        this.nste = new NotServingTabletException(other.nste);\n      }\n      if (other.isSetTmfe()) {\n        this.tmfe = new TooManyFilesException(other.tmfe);\n      }\n      if (other.isSetTsnpe()) {\n        this.tsnpe = new TSampleNotPresentException(other.tsnpe);\n      }\n    }\n    public startScan_result deepCopy() {\n      return new startScan_result(this);\n    }\n    @Override\n    public void clear() {\n      this.success = null;\n      this.sec = null;\n      this.nste = null;\n      this.tmfe = null;\n      this.tsnpe = null;\n    }\n    @org.apache.thrift.annotation.Nullable\n    public org.apache.accumulo.core.dataImpl.thrift.InitialScan getSuccess() {\n      return this.success;\n    }\n    public startScan_result setSuccess(@org.apache.thrift.annotation.Nullable org.apache.accumulo.core.dataImpl.thrift.InitialScan success) {\n      this.success = success;\n      return this;\n    }\n    public void unsetSuccess() {\n      this.success = null;\n    }\n    /** Returns true if field success is set (has been assigned a value) and false otherwise */\n    public boolean isSetSuccess() {\n      return this.success != null;\n    }\n    public void setSuccessIsSet(boolean value) {\n      if (!value) {\n        this.success = null;\n      }\n    }\n    @org.apache.thrift.annotation.Nullable\n    public org.apache.accumulo.core.clientImpl.thrift.ThriftSecurityException getSec() {\n      return this.sec;\n    }\n    public startScan_result setSec(@org.apache.thrift.annotation.Nullable org.apache.accumulo.core.clientImpl.thrift.ThriftSecurityException sec) {\n      this.sec = sec;\n      return this;\n    }\n    public void unsetSec() {\n      this.sec = null;\n    }\n    /** Returns true if field sec is set (has been assigned a value) and false otherwise */\n    public boolean isSetSec() {\n      return this.sec != null;\n    }\n    public void setSecIsSet(boolean value) {\n      if (!value) {\n        this.sec = null;\n      }\n    }\n    @org.apache.thrift.annotation.Nullable\n    public NotServingTabletException getNste() {\n      return this.nste;\n    }\n    public startScan_result setNste(@org.apache.thrift.annotation.Nullable NotServingTabletException nste) {\n      this.nste = nste;\n      return this;\n    }\n    public void unsetNste() {\n      this.nste = null;\n    }\n    /** Returns true if field nste is set (has been assigned a value) and false otherwise */\n    public boolean isSetNste() {\n      return this.nste != null;\n    }\n    public void setNsteIsSet(boolean value) {\n      if (!value) {\n        this.nste = null;\n      }\n    }\n    @org.apache.thrift.annotation.Nullable\n    public TooManyFilesException getTmfe() {\n      return this.tmfe;\n    }\n    public startScan_result setTmfe(@org.apache.thrift.annotation.Nullable TooManyFilesException tmfe) {\n      this.tmfe = tmfe;\n      return this;\n    }\n    public void unsetTmfe() {\n      this.tmfe = null;\n    }\n    /** Returns true if field tmfe is set (has been assigned a value) and false otherwise */\n    public boolean isSetTmfe() {\n      return this.tmfe != null;\n    }\n<fim_suffix>    public void setTmfeIsSet(boolean value) {\n      if (!value) {\n        this.tmfe = null;\n      }\n    }<fim_middle>// function below has no smell\n"}