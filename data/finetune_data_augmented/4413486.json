{"text": "<fim_prefix>        \"http://schemas.xmlsoap.org/wsdl/soap/http\",\n        \"http://www.w3.org/2003/05/soap/bindings/HTTP/\",\n        \"http://www.w3.org/2010/soapjms/\"\n    ));\n    public static final String SOAP_11_BINDING = \"http://schemas.xmlsoap.org/wsdl/soap/\";\n    public static final String SOAP_12_BINDING = \"http://schemas.xmlsoap.org/wsdl/soap12/\";\n    public static final String HEADER = \"messagepart.isheader\";\n    public static final String OUT_OF_BAND_HEADER = \"messagepart.is_out_of_band_header\";\n    public SoapBindingFactory() {\n    }\n    public SoapBindingFactory(Bus b) {\n        super(b, DEFAULT_NAMESPACES);\n    }\n    public BindingInfo createBindingInfo(ServiceInfo si, String bindingid, Object conf) {\n        SoapBindingConfiguration config;\n        if (conf instanceof SoapBindingConfiguration) {\n            config = (SoapBindingConfiguration)conf;\n        } else {\n            config = new SoapBindingConfiguration();\n        }\n        if (WSDLConstants.NS_SOAP12.equals(bindingid)\n            || WSDLConstants.NS_SOAP12_HTTP_BINDING.equals(bindingid)) {\n            config.setVersion(Soap12.getInstance());\n            config.setTransportURI(WSDLConstants.NS_SOAP_HTTP_TRANSPORT);\n        }\n        SoapBindingInfo info = new SoapBindingInfo(si,\n                                                   bindingid,\n                                                   config.getVersion());\n        info.setName(config.getBindingName(si));\n        info.setStyle(config.getStyle());\n        info.setTransportURI(config.getTransportURI());\n        if (config.isMtomEnabled()) {\n            info.setProperty(Message.MTOM_ENABLED, Boolean.TRUE);\n        }\n        for (OperationInfo op : si.getInterface().getOperations()) {\n            SoapOperationInfo sop = new SoapOperationInfo();\n            sop.setAction(config.getSoapAction(op));\n            sop.setStyle(config.getStyle(op));\n            BindingOperationInfo bop =\n                info.buildOperation(op.getName(), op.getInputName(), op.getOutputName());\n            bop.addExtensor(sop);\n            info.addOperation(bop);\n            BindingMessageInfo bInput = bop.getInput();\n            if (bInput != null) {\n                MessageInfo input = null;\n                BindingMessageInfo unwrappedMsg = bInput;\n                if (bop.isUnwrappedCapable()) {\n                    input = bop.getOperationInfo().getUnwrappedOperation().getInput();\n                    unwrappedMsg = bop.getUnwrappedOperation().getInput();\n                } else {\n                    input = bop.getOperationInfo().getInput();\n                }\n                setupHeaders(bop, bInput, unwrappedMsg, input, config);\n            }\n            BindingMessageInfo bOutput = bop.getOutput();\n            if (bOutput != null) {\n                MessageInfo output = null;\n                BindingMessageInfo unwrappedMsg = bOutput;\n                if (bop.isUnwrappedCapable()) {\n                    output = bop.getOperationInfo().getUnwrappedOperation().getOutput();\n                    unwrappedMsg = bop.getUnwrappedOperation().getOutput();\n                } else {\n                    output = bop.getOperationInfo().getOutput();\n                }\n                setupHeaders(bop, bOutput, unwrappedMsg, output, config);\n            }\n        }\n        try {\n            createSoapBinding(info);\n        } catch (WSDLException e) {\n            e.printStackTrace();\n        }\n        return info;\n    }\n    private void createSoapBinding(final SoapBindingInfo bi) throws WSDLException {\n        boolean isSoap12 = bi.getSoapVersion() instanceof Soap12;\n        Bus bs = getBus();\n        WSDLManager m = bs.getExtension(WSDLManager.class);\n        ExtensionRegistry extensionRegistry = m.getExtensionRegistry();\n        SoapBinding soapBinding = SOAPBindingUtil.createSoapBinding(extensionRegistry, isSoap12);\n        soapBinding.setStyle(bi.getStyle());\n        soapBinding.setTransportURI(bi.getTransportURI());\n        bi.addExtensor(soapBinding);\n        for (BindingOperationInfo b : bi.getOperations()) {\n            for (BindingFaultInfo faultInfo : b.getFaults()) {\n                SoapFault soapFault = SOAPBindingUtil.createSoapFault(extensionRegistry, isSoap12);\n                soapFault.setUse(\"literal\");\n                soapFault.setName(faultInfo.getFaultInfo().getFaultName().getLocalPart());\n                faultInfo.addExtensor(soapFault);\n            }\n            SoapOperationInfo soi = b.getExtensor(SoapOperationInfo.class);\n            SoapOperation soapOperation = SOAPBindingUtil.createSoapOperation(extensionRegistry,\n                                                                              isSoap12);\n            soapOperation.setSoapActionURI(soi.getAction());\n            soapOperation.setStyle(soi.getStyle());\n            boolean isRpc = \"rpc\".equals(soapOperation.getStyle());\n            b.addExtensor(soapOperation);\n            if (b.getInput() != null) {\n                List<String> bodyParts = null;\n                List<SoapHeaderInfo> headerInfos = b.getInput().getExtensors(SoapHeaderInfo.class);\n                if (headerInfos != null && !headerInfos.isEmpty()) {\n                    bodyParts = new ArrayList<>();\n                    for (MessagePartInfo part : b.getInput().getMessageParts()) {\n                        bodyParts.add(part.getName().getLocalPart());\n                    }\n                    for (SoapHeaderInfo headerInfo : headerInfos) {\n                        SoapHeader soapHeader = SOAPBindingUtil.createSoapHeader(extensionRegistry,\n                                                                                 BindingInput.class,\n                                                                                 isSoap12);\n                        soapHeader.setMessage(b.getInput().getMessageInfo().getName());\n                        soapHeader.setPart(headerInfo.getPart().getName().getLocalPart());\n                        soapHeader.setUse(\"literal\");\n                        bodyParts.remove(headerInfo.getPart().getName().getLocalPart());\n                        headerInfo.getPart().setProperty(HEADER, true);\n                        b.getInput().addExtensor(soapHeader);\n                    }\n                }\n                SoapBody body = SOAPBindingUtil.createSoapBody(extensionRegistry,\n                                                               BindingInput.class,\n                                                               isSoap12);\n                body.setUse(\"literal\");\n                if (isRpc) {\n                    body.setNamespaceURI(b.getName().getNamespaceURI());\n                }\n                if (bodyParts != null) {\n                    body.setParts(bodyParts);\n                }\n                b.getInput().addExtensor(body);\n            }\n            if (b.getOutput() != null) {\n                List<String> bodyParts = null;\n                List<SoapHeaderInfo> headerInfos = b.getOutput().getExtensors(SoapHeaderInfo.class);\n                if (headerInfos != null && !headerInfos.isEmpty()) {\n                    bodyParts = new ArrayList<>();\n                    for (MessagePartInfo part : b.getOutput().getMessageParts()) {\n                        bodyParts.add(part.getName().getLocalPart());\n                    }\n                    for (SoapHeaderInfo headerInfo : headerInfos) {\n                        SoapHeader soapHeader = SOAPBindingUtil.createSoapHeader(extensionRegistry,\n                                                                             BindingOutput.class,\n                                                                             isSoap12);\n                        soapHeader.setMessage(b.getOutput().getMessageInfo().getName());\n                        soapHeader.setPart(headerInfo.getPart().getName().getLocalPart());\n                        soapHeader.setUse(\"literal\");\n                        bodyParts.remove(headerInfo.getPart().getName().getLocalPart());\n                        b.getOutput().addExtensor(soapHeader);\n                    }\n                }\n                SoapBody body = SOAPBindingUtil.createSoapBody(extensionRegistry,\n                                                               BindingOutput.class,\n                                                               isSoap12);\n                body.setUse(\"literal\");\n                if (isRpc) {\n                    body.setNamespaceURI(b.getName().getNamespaceURI());\n                }\n                if (bodyParts != null) {\n                    body.setParts(bodyParts);\n                }\n                b.getOutput().addExtensor(body);\n            }\n        }\n    }\n<fim_suffix>    private void setupHeaders(BindingOperationInfo op,\n                              BindingMessageInfo bMsg,\n                              BindingMessageInfo unwrappedBMsg,\n                              MessageInfo msg,\n                              SoapBindingConfiguration config) {\n        List<MessagePartInfo> parts = new ArrayList<>();\n        for (MessagePartInfo part : msg.getMessageParts()) {\n            if (config.isHeader(op, part)) {\n                SoapHeaderInfo headerInfo = new SoapHeaderInfo();\n                headerInfo.setPart(part);\n                headerInfo.setUse(config.getUse());\n                bMsg.addExtensor(headerInfo);\n            } else {\n                parts.add(part);\n            }\n        }\n        unwrappedBMsg.setMessageParts(parts);\n    }<fim_middle>// function below has no smell\n"}