{"text": "<fim_prefix>/*\n * ====================================================================\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n * ====================================================================\n *\n * This software consists of voluntary contributions made by many\n * individuals on behalf of the Apache Software Foundation.  For more\n * information on the Apache Software Foundation, please see\n * <http://www.apache.org/>.\n *\n */\n\npackage org.apache.hc.core5.http.impl;\n\nimport java.nio.charset.Charset;\nimport java.nio.charset.CharsetDecoder;\nimport java.nio.charset.CharsetEncoder;\nimport java.nio.charset.CodingErrorAction;\n\nimport org.apache.hc.core5.http.config.CharCodingConfig;\n\n<fim_suffix>public final class CharCodingSupport {\n\n    private CharCodingSupport() {\n    }\n\n    public static CharsetDecoder createDecoder(final CharCodingConfig cconfig) {\n        if (cconfig == null) {\n            return null;\n        }\n        final Charset charset = cconfig.getCharset();\n        final CodingErrorAction malformed = cconfig.getMalformedInputAction();\n        final CodingErrorAction unmappable = cconfig.getUnmappableInputAction();\n        if (charset != null) {\n            return charset.newDecoder()\n                    .onMalformedInput(malformed != null ? malformed : CodingErrorAction.REPORT)\n                    .onUnmappableCharacter(unmappable != null ? unmappable: CodingErrorAction.REPORT);\n        }\n        return null;\n    }\n\n    public static CharsetEncoder createEncoder(final CharCodingConfig cconfig) {\n        if (cconfig == null) {\n            return null;\n        }\n        final Charset charset = cconfig.getCharset();\n        if (charset != null) {\n            final CodingErrorAction malformed = cconfig.getMalformedInputAction();\n            final CodingErrorAction unmappable = cconfig.getUnmappableInputAction();\n            return charset.newEncoder()\n                    .onMalformedInput(malformed != null ? malformed : CodingErrorAction.REPORT)\n                    .onUnmappableCharacter(unmappable != null ? unmappable: CodingErrorAction.REPORT);\n        }\n        return null;\n    }\n\n}<fim_middle>// class below has no smell\n"}