{"text": "<fim_prefix>// Copyright (c) Microsoft. All rights reserved.\n// Licensed under the MIT license. See License.txt in the repository root.\n\n /*\n * This file was automatically generated by com.microsoft.tfs.core.ws.generator.Generator\n * from the /complexType.vm template.\n */\npackage ms.tfs.workitemtracking.clientservices._03;\n\nimport com.microsoft.tfs.core.ws.runtime.*;\nimport com.microsoft.tfs.core.ws.runtime.serialization.*;\nimport com.microsoft.tfs.core.ws.runtime.types.*;\nimport com.microsoft.tfs.core.ws.runtime.util.*;\nimport com.microsoft.tfs.core.ws.runtime.xml.*;\n\nimport ms.tfs.workitemtracking.clientservices._03._ClientService4Soap_GetMetadataEx2;\nimport ms.tfs.workitemtracking.clientservices._03._MetadataTableHaveEntry;\n\nimport java.lang.String;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\nimport javax.xml.stream.XMLStreamConstants;\nimport javax.xml.stream.XMLStreamException;\nimport javax.xml.stream.XMLStreamReader;\nimport javax.xml.stream.XMLStreamWriter;\n\n/**\n * Automatically generated complex type class.\n */\n<fim_suffix>public class _ClientService4Soap_GetMetadataEx2\n    implements ElementSerializable\n{\n    // No attributes    \n\n    // Elements\n    protected _MetadataTableHaveEntry[] metadataHave;\n    protected boolean useMaster;\n\n    public _ClientService4Soap_GetMetadataEx2()\n    {\n        super();\n    }\n\n    public _ClientService4Soap_GetMetadataEx2(\n        final _MetadataTableHaveEntry[] metadataHave,\n        final boolean useMaster)\n    {\n        // TODO : Call super() instead of setting all fields directly?\n        setMetadataHave(metadataHave);\n        setUseMaster(useMaster);\n    }\n\n    public _MetadataTableHaveEntry[] getMetadataHave()\n    {\n        return this.metadataHave;\n    }\n\n    public void setMetadataHave(_MetadataTableHaveEntry[] value)\n    {\n        this.metadataHave = value;\n    }\n\n    public boolean isUseMaster()\n    {\n        return this.useMaster;\n    }\n\n    public void setUseMaster(boolean value)\n    {\n        this.useMaster = value;\n    }\n\n    public void writeAsElement(\n        final XMLStreamWriter writer,\n        final String name)\n        throws XMLStreamException\n    {\n        writer.writeStartElement(name);\n\n        // Elements\n        if (this.metadataHave != null)\n        {\n            /*\n             * The element type is an array.\n             */\n            writer.writeStartElement(\"metadataHave\");\n\n            for (int iterator0 = 0; iterator0 < this.metadataHave.length; iterator0++)\n            {\n                this.metadataHave[iterator0].writeAsElement(\n                    writer,\n                    \"MetadataTableHaveEntry\");\n            }\n\n            writer.writeEndElement();\n        }\n\n        XMLStreamWriterHelper.writeElement(\n            writer,\n            \"useMaster\",\n            this.useMaster);\n\n        writer.writeEndElement();\n    }\n}<fim_middle>// class below has no smell\n"}