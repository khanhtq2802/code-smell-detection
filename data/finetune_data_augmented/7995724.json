{"text": "<fim_prefix> *   <li>{@link org.eclipse.xtext.ui.tests.editor.contentassist.bug347012TestLanguage.impl.MyBindingImpl#getType <em>Type</em>}</li>\n *   <li>{@link org.eclipse.xtext.ui.tests.editor.contentassist.bug347012TestLanguage.impl.MyBindingImpl#getExpression <em>Expression</em>}</li>\n * </ul>\n *\n * @generated\n */\npublic class MyBindingImpl extends MinimalEObjectImpl.Container implements MyBinding\n{\n  /**\n   * The default value of the '{@link #getName() <em>Name</em>}' attribute.\n   * <!-- begin-user-doc -->\n   * <!-- end-user-doc -->\n   * @see #getName()\n   * @generated\n   * @ordered\n   */\n  protected static final String NAME_EDEFAULT = null;\n  /**\n   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.\n   * <!-- begin-user-doc -->\n   * <!-- end-user-doc -->\n   * @see #getName()\n   * @generated\n   * @ordered\n   */\n  protected String name = NAME_EDEFAULT;\n  /**\n   * The default value of the '{@link #getType() <em>Type</em>}' attribute.\n   * <!-- begin-user-doc -->\n   * <!-- end-user-doc -->\n   * @see #getType()\n   * @generated\n   * @ordered\n   */\n  protected static final String TYPE_EDEFAULT = null;\n  /**\n   * The cached value of the '{@link #getType() <em>Type</em>}' attribute.\n   * <!-- begin-user-doc -->\n   * <!-- end-user-doc -->\n   * @see #getType()\n   * @generated\n   * @ordered\n   */\n  protected String type = TYPE_EDEFAULT;\n  /**\n   * The cached value of the '{@link #getExpression() <em>Expression</em>}' containment reference.\n   * <!-- begin-user-doc -->\n   * <!-- end-user-doc -->\n   * @see #getExpression()\n   * @generated\n   * @ordered\n   */\n  protected MyPrimary expression;\n  /**\n   * <!-- begin-user-doc -->\n   * <!-- end-user-doc -->\n   * @generated\n   */\n  protected MyBindingImpl()\n  {\n    super();\n  }\n  /**\n   * <!-- begin-user-doc -->\n   * <!-- end-user-doc -->\n   * @generated\n   */\n  @Override\n  protected EClass eStaticClass()\n  {\n    return Bug347012TestLanguagePackage.Literals.MY_BINDING;\n  }\n  /**\n   * <!-- begin-user-doc -->\n   * <!-- end-user-doc -->\n   * @generated\n   */\n  public String getName()\n  {\n    return name;\n  }\n  /**\n   * <!-- begin-user-doc -->\n   * <!-- end-user-doc -->\n   * @generated\n   */\n  public void setName(String newName)\n  {\n    String oldName = name;\n    name = newName;\n    if (eNotificationRequired())\n      eNotify(new ENotificationImpl(this, Notification.SET, Bug347012TestLanguagePackage.MY_BINDING__NAME, oldName, name));\n  }\n  /**\n   * <!-- begin-user-doc -->\n   * <!-- end-user-doc -->\n   * @generated\n   */\n  public String getType()\n  {\n    return type;\n  }\n  /**\n   * <!-- begin-user-doc -->\n   * <!-- end-user-doc -->\n   * @generated\n   */\n  public void setType(String newType)\n  {\n    String oldType = type;\n    type = newType;\n    if (eNotificationRequired())\n      eNotify(new ENotificationImpl(this, Notification.SET, Bug347012TestLanguagePackage.MY_BINDING__TYPE, oldType, type));\n  }\n  /**\n   * <!-- begin-user-doc -->\n   * <!-- end-user-doc -->\n   * @generated\n   */\n  public MyPrimary getExpression()\n  {\n    return expression;\n  }\n  /**\n   * <!-- begin-user-doc -->\n   * <!-- end-user-doc -->\n   * @generated\n   */\n  public NotificationChain basicSetExpression(MyPrimary newExpression, NotificationChain msgs)\n  {\n    MyPrimary oldExpression = expression;\n    expression = newExpression;\n    if (eNotificationRequired())\n    {\n      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, Bug347012TestLanguagePackage.MY_BINDING__EXPRESSION, oldExpression, newExpression);\n      if (msgs == null) msgs = notification; else msgs.add(notification);\n    }\n    return msgs;\n  }\n  /**\n   * <!-- begin-user-doc -->\n   * <!-- end-user-doc -->\n   * @generated\n   */\n  public void setExpression(MyPrimary newExpression)\n  {\n    if (newExpression != expression)\n    {\n      NotificationChain msgs = null;\n      if (expression != null)\n        msgs = ((InternalEObject)expression).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - Bug347012TestLanguagePackage.MY_BINDING__EXPRESSION, null, msgs);\n      if (newExpression != null)\n        msgs = ((InternalEObject)newExpression).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - Bug347012TestLanguagePackage.MY_BINDING__EXPRESSION, null, msgs);\n      msgs = basicSetExpression(newExpression, msgs);\n      if (msgs != null) msgs.dispatch();\n    }\n    else if (eNotificationRequired())\n      eNotify(new ENotificationImpl(this, Notification.SET, Bug347012TestLanguagePackage.MY_BINDING__EXPRESSION, newExpression, newExpression));\n  }\n  /**\n   * <!-- begin-user-doc -->\n   * <!-- end-user-doc -->\n   * @generated\n   */\n  @Override\n  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)\n  {\n    switch (featureID)\n    {\n      case Bug347012TestLanguagePackage.MY_BINDING__EXPRESSION:\n        return basicSetExpression(null, msgs);\n    }\n    return super.eInverseRemove(otherEnd, featureID, msgs);\n  }\n  /**\n   * <!-- begin-user-doc -->\n   * <!-- end-user-doc -->\n   * @generated\n   */\n  @Override\n  public Object eGet(int featureID, boolean resolve, boolean coreType)\n  {\n    switch (featureID)\n    {\n      case Bug347012TestLanguagePackage.MY_BINDING__NAME:\n        return getName();\n      case Bug347012TestLanguagePackage.MY_BINDING__TYPE:\n        return getType();\n      case Bug347012TestLanguagePackage.MY_BINDING__EXPRESSION:\n        return getExpression();\n    }\n    return super.eGet(featureID, resolve, coreType);\n  }\n  /**\n   * <!-- begin-user-doc -->\n   * <!-- end-user-doc -->\n   * @generated\n   */\n  @Override\n  public void eSet(int featureID, Object newValue)\n  {\n    switch (featureID)\n    {\n      case Bug347012TestLanguagePackage.MY_BINDING__NAME:\n        setName((String)newValue);\n        return;\n      case Bug347012TestLanguagePackage.MY_BINDING__TYPE:\n        setType((String)newValue);\n        return;\n      case Bug347012TestLanguagePackage.MY_BINDING__EXPRESSION:\n        setExpression((MyPrimary)newValue);\n        return;\n    }\n    super.eSet(featureID, newValue);\n  }\n  /**\n   * <!-- begin-user-doc -->\n   * <!-- end-user-doc -->\n   * @generated\n   */\n  @Override\n  public void eUnset(int featureID)\n  {\n    switch (featureID)\n    {\n      case Bug347012TestLanguagePackage.MY_BINDING__NAME:\n        setName(NAME_EDEFAULT);\n        return;\n      case Bug347012TestLanguagePackage.MY_BINDING__TYPE:\n        setType(TYPE_EDEFAULT);\n        return;\n      case Bug347012TestLanguagePackage.MY_BINDING__EXPRESSION:\n        setExpression((MyPrimary)null);\n        return;\n    }\n    super.eUnset(featureID);\n  }\n  /**\n   * <!-- begin-user-doc -->\n   * <!-- end-user-doc -->\n   * @generated\n   */\n<fim_suffix>  @Override\n  public boolean eIsSet(int featureID)\n  {\n    switch (featureID)\n    {\n      case Bug347012TestLanguagePackage.MY_BINDING__NAME:\n        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);\n      case Bug347012TestLanguagePackage.MY_BINDING__TYPE:\n        return TYPE_EDEFAULT == null ? type != null : !TYPE_EDEFAULT.equals(type);\n      case Bug347012TestLanguagePackage.MY_BINDING__EXPRESSION:\n        return expression != null;\n    }\n    return super.eIsSet(featureID);\n  }<fim_middle>// function below has no smell\n"}