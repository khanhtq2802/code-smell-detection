{"text": "<fim_prefix>/**\n *  Licensed to the Apache Software Foundation (ASF) under one\n *  or more contributor license agreements.  See the NOTICE file\n *  distributed with this work for additional information\n *  regarding copyright ownership.  The ASF licenses this file\n *  to you under the Apache License, Version 2.0 (the\n *  \"License\"); you may not use this file except in compliance\n *  with the License.  You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing,\n *  software distributed under the License is distributed on an\n *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n *  KIND, either express or implied.  See the License for the\n *  specific language governing permissions and limitations\n *  under the License.\n *\n */\npackage org.apache.kerby.x509.type;\n\nimport org.apache.kerby.asn1.Asn1FieldInfo;\nimport org.apache.kerby.asn1.EnumType;\nimport org.apache.kerby.asn1.type.Asn1Boolean;\nimport org.apache.kerby.asn1.type.Asn1Integer;\nimport org.apache.kerby.asn1.type.Asn1SequenceType;\n\nimport java.math.BigInteger;\n\n/**\n * <pre>\n * BasicConstraints := SEQUENCE {\n *    cA                  BOOLEAN DEFAULT FALSE,\n *    pathLenConstraint   INTEGER (0..MAX) OPTIONAL\n * }\n * </pre>\n */\npublic class BasicConstraints extends Asn1SequenceType {\n    protected enum BasicConstraintsField implements EnumType {\n        CA,\n        PATH_LEN_CONSTRAINT;\n\n<fim_suffix>        @Override\n        public int getValue() {\n            return ordinal();\n        }\n\n        @Override\n        public String getName() {\n            return name();\n        }\n    }\n\n    static Asn1FieldInfo[] fieldInfos = new Asn1FieldInfo[] {\n        new Asn1FieldInfo(BasicConstraintsField.CA, Asn1Boolean.class),\n        new Asn1FieldInfo(BasicConstraintsField.PATH_LEN_CONSTRAINT, Asn1Integer.class)\n    };\n\n    public BasicConstraints() {\n        super(fieldInfos);\n    }\n\n    public boolean isCA() {\n        return false;\n    }\n\n    public boolean getCA() {\n        return getFieldAs(BasicConstraintsField.CA, Asn1Boolean.class).getValue();\n    }\n\n    public void setCA(Asn1Boolean isCA) {\n        setFieldAs(BasicConstraintsField.CA, isCA);\n    }\n\n    public BigInteger getPathLenConstraint() {\n        return getFieldAs(BasicConstraintsField.PATH_LEN_CONSTRAINT, Asn1Integer.class).getValue();\n    }\n\n    public void setPathLenConstraint(Asn1Integer pathLenConstraint) {\n        setFieldAs(BasicConstraintsField.PATH_LEN_CONSTRAINT, pathLenConstraint);\n    }\n}<fim_middle>// function below has no smell\n"}