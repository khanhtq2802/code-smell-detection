{"text": "<fim_prefix>/* Copyright 2016 ESRI\n *\n * All rights reserved under the copyright laws of the United States\n * and applicable international laws, treaties, and conventions.\n *\n * You may freely redistribute and use this sample code, with or\n * without modification, provided you include the original copyright\n * notice and use restrictions.\n *\n * See the Sample code usage restrictions document for further information.\n *\n */\n\npackage com.esri.arcgisruntime.samples.featurelayerdefinitionexpression;\n\nimport android.os.Bundle;\nimport android.support.v7.app.AppCompatActivity;\nimport android.support.v7.widget.Toolbar;\nimport android.view.MenuItem;\n\nimport com.esri.arcgisruntime.data.ServiceFeatureTable;\nimport com.esri.arcgisruntime.geometry.Point;\nimport com.esri.arcgisruntime.geometry.SpatialReferences;\nimport com.esri.arcgisruntime.layers.FeatureLayer;\nimport com.esri.arcgisruntime.mapping.ArcGISMap;\nimport com.esri.arcgisruntime.mapping.Basemap;\nimport com.esri.arcgisruntime.mapping.view.MapView;\n\n<fim_suffix>public class MainActivity extends AppCompatActivity {\n\n  MapView mMapView;\n  FeatureLayer mFeatureLayer;\n\n  boolean applyActive;\n\n  @Override\n  protected void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n    setContentView(R.layout.activity_main);\n\n    // set up the bottom toolbar\n    createBottomToolbar();\n\n    // inflate MapView from layout\n    mMapView = (MapView) findViewById(R.id.mapView);\n\n    // create a map with the topographic basemap\n    ArcGISMap map = new ArcGISMap(Basemap.createTopographic());\n\n    // create feature layer with its service feature table\n    // create the service feature table\n    ServiceFeatureTable serviceFeatureTable = new ServiceFeatureTable(\n        getResources().getString(R.string.sample_service_url));\n\n    // create the feature layer using the service feature table\n    mFeatureLayer = new FeatureLayer(serviceFeatureTable);\n\n    // add the layer to the map\n    map.getOperationalLayers().add(mFeatureLayer);\n\n    // set the map to be displayed in the mapview\n    mMapView.setMap(map);\n\n    // zoom to a view point of the USA\n    mMapView.setViewpointCenterAsync(new Point(-13630845, 4544861, SpatialReferences.getWebMercator()), 600000);\n\n  }\n\n  private void applyDefinitionExpression() {\n    // apply a definition expression on the feature layer\n    // if this is called before the layer is loaded, it will be applied to the loaded layer\n    mFeatureLayer.setDefinitionExpression(\"req_Type = 'Tree Maintenance or Damage'\");\n  }\n\n  private void resetDefinitionExpression() {\n    // set the definition expression to nothing (empty string, null also works)\n    mFeatureLayer.setDefinitionExpression(\"\");\n  }\n\n  private void createBottomToolbar() {\n\n    Toolbar bottomToolbar = (Toolbar) findViewById(R.id.bottomToolbar);\n    bottomToolbar.inflateMenu(R.menu.menu_main);\n\n    bottomToolbar.setOnMenuItemClickListener(new Toolbar.OnMenuItemClickListener() {\n      @Override\n      public boolean onMenuItemClick(MenuItem item) {\n        // handle action bar item clicks\n        int itemId = item.getItemId();\n        // if statement is used because this sample is used elsewhere as a Library module\n        if (itemId == R.id.action_def_exp) {\n          // check the state of the menu item\n          if (!applyActive) {\n            applyDefinitionExpression();\n            // change the text to reset\n            applyActive = true;\n            item.setTitle(R.string.action_reset);\n          } else {\n            resetDefinitionExpression();\n            // change the text to apply\n            applyActive = false;\n            item.setTitle(R.string.action_def_exp);\n          }\n        }\n        return true;\n      }\n    });\n  }\n\n  @Override\n  protected void onPause() {\n    super.onPause();\n    // pause MapView\n    mMapView.pause();\n  }\n\n  @Override\n  protected void onResume() {\n    super.onResume();\n    // resume MapView\n    mMapView.resume();\n  }\n\n  @Override\n  protected void onDestroy() {\n    super.onDestroy();\n    mMapView.dispose();\n  }\n}<fim_middle>// class below has no smell\n"}