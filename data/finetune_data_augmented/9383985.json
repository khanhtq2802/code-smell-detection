{"text": "<fim_prefix>/*\n * Copyright (c) 1998, 2014, Oracle and/or its affiliates. All rights reserved.\n * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n *\n * This code is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License version 2 only, as\n * published by the Free Software Foundation.  Oracle designates this\n * particular file as subject to the \"Classpath\" exception as provided\n * by Oracle in the LICENSE file that accompanied this code.\n *\n * This code is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n * version 2 for more details (a copy is included in the LICENSE file that\n * accompanied this code).\n *\n * You should have received a copy of the GNU General Public License version\n * 2 along with this work; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n *\n * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n * or visit www.oracle.com if you need additional information or have any\n * questions.\n */\n\npackage javax.swing.plaf.basic;\n\nimport java.awt.*;\nimport javax.swing.*;\nimport javax.swing.border.*;\nimport javax.swing.plaf.*;\nimport java.awt.*;\nimport java.awt.event.*;\n\n\n/**\n * BasicPanel implementation\n *\n * @author Steve Wilson\n */\n<fim_suffix>public class BasicPanelUI extends PanelUI {\n\n    // Shared UI object\n    private static PanelUI panelUI;\n\n    /**\n     * Returns an instance of {@code BasicPanelUI}.\n     *\n     * @param c a component\n     * @return an instance of {@code BasicPanelUI}\n     */\n    public static ComponentUI createUI(JComponent c) {\n        if(panelUI == null) {\n            panelUI = new BasicPanelUI();\n        }\n        return panelUI;\n    }\n\n    public void installUI(JComponent c) {\n        JPanel p = (JPanel)c;\n        super.installUI(p);\n        installDefaults(p);\n    }\n\n    public void uninstallUI(JComponent c) {\n        JPanel p = (JPanel)c;\n        uninstallDefaults(p);\n        super.uninstallUI(c);\n    }\n\n    /**\n     * Method for installing panel properties.\n     *\n     * @param p an instance of {@code JPanel}\n     */\n    protected void installDefaults(JPanel p) {\n        LookAndFeel.installColorsAndFont(p,\n                                         \"Panel.background\",\n                                         \"Panel.foreground\",\n                                         \"Panel.font\");\n        LookAndFeel.installBorder(p,\"Panel.border\");\n        LookAndFeel.installProperty(p, \"opaque\", Boolean.TRUE);\n    }\n\n    /**\n     * Method for uninstalling panel properties.\n     *\n     * @param p an instance of {@code JPanel}\n     */\n    protected void uninstallDefaults(JPanel p) {\n        LookAndFeel.uninstallBorder(p);\n    }\n\n\n    /**\n     * Returns the baseline.\n     *\n     * @throws NullPointerException {@inheritDoc}\n     * @throws IllegalArgumentException {@inheritDoc}\n     * @see javax.swing.JComponent#getBaseline(int, int)\n     * @since 1.6\n     */\n    public int getBaseline(JComponent c, int width, int height) {\n        super.getBaseline(c, width, height);\n        Border border = c.getBorder();\n        if (border instanceof AbstractBorder) {\n            return ((AbstractBorder)border).getBaseline(c, width, height);\n        }\n        return -1;\n    }\n\n    /**\n     * Returns an enum indicating how the baseline of the component\n     * changes as the size changes.\n     *\n     * @throws NullPointerException {@inheritDoc}\n     * @see javax.swing.JComponent#getBaseline(int, int)\n     * @since 1.6\n     */\n    public Component.BaselineResizeBehavior getBaselineResizeBehavior(\n            JComponent c) {\n        super.getBaselineResizeBehavior(c);\n        Border border = c.getBorder();\n        if (border instanceof AbstractBorder) {\n            return ((AbstractBorder)border).getBaselineResizeBehavior(c);\n        }\n        return Component.BaselineResizeBehavior.OTHER;\n    }\n}<fim_middle>// class below has no smell\n"}