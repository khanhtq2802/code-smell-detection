{"text": "<fim_prefix>/*\n * Copyright 1999-2018 Alibaba Group Holding Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage com.alibaba.druid.stat;\nimport java.util.ArrayList;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\nimport com.alibaba.druid.sql.SQLUtils;\nimport com.alibaba.druid.sql.ast.SQLExpr;\nimport com.alibaba.druid.sql.ast.expr.SQLPropertyExpr;\nimport com.alibaba.druid.support.json.JSONUtils;\nimport com.alibaba.druid.util.FnvHash;\nimport com.alibaba.druid.util.JdbcConstants;\npublic class TableStat {\n    int selectCount      = 0;\n    int updateCount      = 0;\n    int deleteCount      = 0;\n    int insertCount      = 0;\n    int dropCount        = 0;\n    int mergeCount       = 0;\n    int createCount      = 0;\n    int alterCount       = 0;\n    int createIndexCount = 0;\n    int dropIndexCount   = 0;\n    int referencedCount  = 0;\n    public int getReferencedCount() {\n        return referencedCount;\n    }\n    public void incrementReferencedCount() {\n        referencedCount++;\n    }\n    public int getDropIndexCount() {\n        return dropIndexCount;\n    }\n    public void incrementDropIndexCount() {\n        this.dropIndexCount++;\n    }\n    public int getCreateIndexCount() {\n        return createIndexCount;\n    }\n    public void incrementCreateIndexCount() {\n        createIndexCount++;\n    }\n    public int getAlterCount() {\n        return alterCount;\n    }\n    public void incrementAlterCount() {\n        this.alterCount++;\n    }\n    public int getCreateCount() {\n        return createCount;\n    }\n    public void incrementCreateCount() {\n        this.createCount++;\n    }\n    public int getMergeCount() {\n        return mergeCount;\n    }\n    public void incrementMergeCount() {\n        this.mergeCount++;\n    }\n    public int getDropCount() {\n        return dropCount;\n    }\n    public void incrementDropCount() {\n        dropCount++;\n    }\n    public void setDropCount(int dropCount) {\n        this.dropCount = dropCount;\n    }\n    public int getSelectCount() {\n        return selectCount;\n    }\n    public void incrementSelectCount() {\n        selectCount++;\n    }\n    public void setSelectCount(int selectCount) {\n        this.selectCount = selectCount;\n    }\n    public int getUpdateCount() {\n        return updateCount;\n    }\n    public void incrementUpdateCount() {\n        updateCount++;\n    }\n    public void setUpdateCount(int updateCount) {\n        this.updateCount = updateCount;\n    }\n    public int getDeleteCount() {\n        return deleteCount;\n    }\n    public void incrementDeleteCount() {\n        this.deleteCount++;\n    }\n    public void setDeleteCount(int deleteCount) {\n        this.deleteCount = deleteCount;\n    }\n    public void incrementInsertCount() {\n        this.insertCount++;\n    }\n    public int getInsertCount() {\n        return insertCount;\n    }\n    public void setInsertCount(int insertCount) {\n        this.insertCount = insertCount;\n    }\n    public String toString() {\n        StringBuilder buf = new StringBuilder(4);\n        if (mergeCount > 0) {\n            buf.append(\"Merge\");\n        }\n        if (insertCount > 0) {\n            buf.append(\"Insert\");\n        }\n        if (updateCount > 0) {\n            buf.append(\"Update\");\n        }\n        if (selectCount > 0) {\n            buf.append(\"Select\");\n        }\n        if (deleteCount > 0) {\n            buf.append(\"Delete\");\n        }\n        if (dropCount > 0) {\n            buf.append(\"Drop\");\n        }\n        if (createCount > 0) {\n            buf.append(\"Create\");\n        }\n        if (alterCount > 0) {\n            buf.append(\"Alter\");\n        }\n        if (createIndexCount > 0) {\n            buf.append(\"CreateIndex\");\n        }\n        if (dropIndexCount > 0) {\n            buf.append(\"DropIndex\");\n        }\n        return buf.toString();\n    }\n    public static class Name {\n        private final String name;\n        private final long   hashCode64;\n        public Name(String name){\n            this(name, FnvHash.hashCode64(name));\n        }\n        public Name(String name, long hashCode64){\n            this.name  = name;\n            this.hashCode64 = hashCode64;\n        }\n        public String getName() {\n            return this.name;\n        }\n        public int hashCode() {\n            long value = hashCode64();\n            return (int)(value ^ (value >>> 32));\n        }\n        public long hashCode64() {\n            return hashCode64;\n        }\n        public boolean equals(Object o) {\n            if (!(o instanceof Name)) {\n                return false;\n            }\n            Name other = (Name) o;\n            return this.hashCode64 == other.hashCode64;\n        }\n        public String toString() {\n            return SQLUtils.normalize(this.name);\n        }\n    }\n    public static class Relationship {\n        private Column left;\n        private Column right;\n        private String operator;\n        public Relationship(Column left, Column right, String operator) {\n            this.left = left;\n            this.right = right;\n            this.operator = operator;\n        }\n        public Column getLeft() {\n            return left;\n        }\n        public Column getRight() {\n            return right;\n        }\n        public String getOperator() {\n            return operator;\n        }\n        @Override\n        public int hashCode() {\n            final int prime = 31;\n            int result = 1;\n            result = prime * result + ((left == null) ? 0 : left.hashCode());\n            result = prime * result + ((operator == null) ? 0 : operator.hashCode());\n            result = prime * result + ((right == null) ? 0 : right.hashCode());\n            return result;\n        }\n        @Override\n        public boolean equals(Object obj) {\n            if (this == obj) {\n                return true;\n            }\n            if (obj == null) {\n                return false;\n            }\n            if (getClass() != obj.getClass()) {\n                return false;\n            }\n            Relationship other = (Relationship) obj;\n            if (left == null) {\n                if (other.left != null) {\n                    return false;\n                }\n            } else if (!left.equals(other.left)) {\n                return false;\n            }\n            if (operator == null) {\n                if (other.operator != null) {\n                    return false;\n                }\n            } else if (!operator.equals(other.operator)) {\n                return false;\n            }\n            if (right == null) {\n                if (other.right != null) {\n                    return false;\n                }\n            } else if (!right.equals(other.right)) {\n                return false;\n            }\n            return true;\n        }\n        @Override\n        public String toString() {\n            return left + \" \" + operator + \" \" + right;\n        }\n    }\n    public static class Condition {\n        private final Column       column;\n        private final String       operator;\n        private final List<Object> values = new ArrayList<Object>();\n        public Condition(Column column, String operator) {\n            this.column = column;\n            this.operator = operator;\n        }\n        public Column getColumn() {\n            return column;\n        }\n        public String getOperator() {\n            return operator;\n        }\n        public List<Object> getValues() {\n            return values;\n        }\n<fim_suffix>        public void addValue(Object value) {\n            this.values.add(value);\n        }\n        @Override\n        public int hashCode() {\n            final int prime = 31;\n            int result = 1;\n            result = prime * result + ((column == null) ? 0 : column.hashCode());\n            result = prime * result + ((operator == null) ? 0 : operator.hashCode());\n            return result;\n        }\n        @Override\n        public boolean equals(Object obj) {\n            if (this == obj) {\n                return true;\n            }\n            if (obj == null) {\n                return false;\n            }\n            if (getClass() != obj.getClass()) {\n                return false;\n            }\n            Condition other = (Condition) obj;\n            if (column == null) {\n                if (other.column != null) {\n                    return false;\n                }\n            } else if (!column.equals(other.column)) {\n                return false;\n            }\n            if (operator == null) {\n                if (other.operator != null) {\n                    return false;\n                }\n            } else if (!operator.equals(other.operator)) {<fim_middle>// function below has no smell\n"}