{"text": "<fim_prefix>        this(\n                authenticationDetailsProvider,\n                configuration,\n                clientConfigurator,\n                new com.oracle.bmc.http.signing.internal.DefaultRequestSignerFactory(\n                        com.oracle.bmc.http.signing.SigningStrategy.STANDARD));\n    }\n    /**\n     * Creates a new service instance using the given authentication provider and client configuration.  Additionally,\n     * a Consumer can be provided that will be invoked whenever a REST Client is created to allow for additional configuration/customization.\n     * <p>\n     * This is an advanced constructor for clients that want to take control over how requests are signed.\n     * @param authenticationDetailsProvider The authentication details provider, required.\n     * @param configuration The client configuration, optional.\n     * @param clientConfigurator ClientConfigurator that will be invoked for additional configuration of a REST client, optional.\n     * @param defaultRequestSignerFactory The request signer factory used to create the request signer for this service.\n     */\n    public MonitoringAsyncClient(\n            com.oracle.bmc.auth.AbstractAuthenticationDetailsProvider authenticationDetailsProvider,\n            com.oracle.bmc.ClientConfiguration configuration,\n            com.oracle.bmc.http.ClientConfigurator clientConfigurator,\n            com.oracle.bmc.http.signing.RequestSignerFactory defaultRequestSignerFactory) {\n        this(\n                authenticationDetailsProvider,\n                configuration,\n                clientConfigurator,\n                defaultRequestSignerFactory,\n                new java.util.ArrayList<com.oracle.bmc.http.ClientConfigurator>());\n    }\n    /**\n     * Creates a new service instance using the given authentication provider and client configuration.  Additionally,\n     * a Consumer can be provided that will be invoked whenever a REST Client is created to allow for additional configuration/customization.\n     * <p>\n     * This is an advanced constructor for clients that want to take control over how requests are signed.\n     * @param authenticationDetailsProvider The authentication details provider, required.\n     * @param configuration The client configuration, optional.\n     * @param clientConfigurator ClientConfigurator that will be invoked for additional configuration of a REST client, optional.\n     * @param defaultRequestSignerFactory The request signer factory used to create the request signer for this service.\n     * @param additionalClientConfigurators Additional client configurators to be run after the primary configurator.\n     */\n    public MonitoringAsyncClient(\n            com.oracle.bmc.auth.AbstractAuthenticationDetailsProvider authenticationDetailsProvider,\n            com.oracle.bmc.ClientConfiguration configuration,\n            com.oracle.bmc.http.ClientConfigurator clientConfigurator,\n            com.oracle.bmc.http.signing.RequestSignerFactory defaultRequestSignerFactory,\n            java.util.List<com.oracle.bmc.http.ClientConfigurator> additionalClientConfigurators) {\n        this(\n                authenticationDetailsProvider,\n                configuration,\n                clientConfigurator,\n                defaultRequestSignerFactory,\n                additionalClientConfigurators,\n                null);\n    }\n    /**\n     * Creates a new service instance using the given authentication provider and client configuration.  Additionally,\n     * a Consumer can be provided that will be invoked whenever a REST Client is created to allow for additional configuration/customization.\n     * <p>\n     * This is an advanced constructor for clients that want to take control over how requests are signed.\n     * @param authenticationDetailsProvider The authentication details provider, required.\n     * @param configuration The client configuration, optional.\n     * @param clientConfigurator ClientConfigurator that will be invoked for additional configuration of a REST client, optional.\n     * @param defaultRequestSignerFactory The request signer factory used to create the request signer for this service.\n     * @param additionalClientConfigurators Additional client configurators to be run after the primary configurator.\n     * @param endpoint Endpoint, or null to leave unset (note, may be overridden by {@code authenticationDetailsProvider})\n     */\n    public MonitoringAsyncClient(\n            com.oracle.bmc.auth.AbstractAuthenticationDetailsProvider authenticationDetailsProvider,\n            com.oracle.bmc.ClientConfiguration configuration,\n            com.oracle.bmc.http.ClientConfigurator clientConfigurator,\n            com.oracle.bmc.http.signing.RequestSignerFactory defaultRequestSignerFactory,\n            java.util.List<com.oracle.bmc.http.ClientConfigurator> additionalClientConfigurators,\n            String endpoint) {\n        this(\n                authenticationDetailsProvider,\n                configuration,\n                clientConfigurator,\n                defaultRequestSignerFactory,\n                com.oracle.bmc.http.signing.internal.DefaultRequestSignerFactory\n                        .createDefaultRequestSignerFactories(),\n                additionalClientConfigurators,\n                endpoint);\n    }\n    /**\n     * Creates a new service instance using the given authentication provider and client configuration.  Additionally,\n     * a Consumer can be provided that will be invoked whenever a REST Client is created to allow for additional configuration/customization.\n     * <p>\n     * This is an advanced constructor for clients that want to take control over how requests are signed.\n     * @param authenticationDetailsProvider The authentication details provider, required.\n     * @param configuration The client configuration, optional.\n     * @param clientConfigurator ClientConfigurator that will be invoked for additional configuration of a REST client, optional.\n     * @param defaultRequestSignerFactory The request signer factory used to create the request signer for this service.\n     * @param signingStrategyRequestSignerFactories The request signer factories for each signing strategy used to create the request signer\n     * @param additionalClientConfigurators Additional client configurators to be run after the primary configurator.\n     * @param endpoint Endpoint, or null to leave unset (note, may be overridden by {@code authenticationDetailsProvider})\n     */\n    public MonitoringAsyncClient(\n            com.oracle.bmc.auth.AbstractAuthenticationDetailsProvider authenticationDetailsProvider,\n            com.oracle.bmc.ClientConfiguration configuration,\n            com.oracle.bmc.http.ClientConfigurator clientConfigurator,\n            com.oracle.bmc.http.signing.RequestSignerFactory defaultRequestSignerFactory,\n            java.util.Map<\n                            com.oracle.bmc.http.signing.SigningStrategy,\n                            com.oracle.bmc.http.signing.RequestSignerFactory>\n                    signingStrategyRequestSignerFactories,\n            java.util.List<com.oracle.bmc.http.ClientConfigurator> additionalClientConfigurators,\n            String endpoint) {\n        this.authenticationDetailsProvider = authenticationDetailsProvider;\n        com.oracle.bmc.http.internal.RestClientFactory restClientFactory =\n                com.oracle.bmc.http.internal.RestClientFactoryBuilder.builder()\n                        .clientConfigurator(clientConfigurator)\n                        .additionalClientConfigurators(additionalClientConfigurators)\n                        .build();\n        com.oracle.bmc.http.signing.RequestSigner defaultRequestSigner =\n                defaultRequestSignerFactory.createRequestSigner(\n                        SERVICE, this.authenticationDetailsProvider);\n        java.util.Map<\n                        com.oracle.bmc.http.signing.SigningStrategy,\n                        com.oracle.bmc.http.signing.RequestSigner>\n                requestSigners = new java.util.HashMap<>();\n        if (this.authenticationDetailsProvider\n                instanceof com.oracle.bmc.auth.BasicAuthenticationDetailsProvider) {\n            for (com.oracle.bmc.http.signing.SigningStrategy s :\n                    com.oracle.bmc.http.signing.SigningStrategy.values()) {\n                requestSigners.put(\n                        s,\n                        signingStrategyRequestSignerFactories\n                                .get(s)\n                                .createRequestSigner(SERVICE, authenticationDetailsProvider));\n            }\n        }\n        this.client = restClientFactory.create(defaultRequestSigner, requestSigners, configuration);\n        if (this.authenticationDetailsProvider instanceof com.oracle.bmc.auth.RegionProvider) {\n            com.oracle.bmc.auth.RegionProvider provider =\n                    (com.oracle.bmc.auth.RegionProvider) this.authenticationDetailsProvider;\n            if (provider.getRegion() != null) {\n                this.setRegion(provider.getRegion());\n                if (endpoint != null) {\n                    LOG.info(\n                            \"Authentication details provider configured for region '{}', but endpoint specifically set to '{}'. Using endpoint setting instead of region.\",\n                            provider.getRegion(),\n                            endpoint);\n                }\n            }\n        }\n        if (endpoint != null) {\n            setEndpoint(endpoint);\n        }\n    }\n    /**\n     * Create a builder for this client.\n     * @return builder\n     */\n    public static Builder builder() {\n        return new Builder(SERVICE);\n    }\n    /**\n     * Builder class for this client. The \"authenticationDetailsProvider\" is required and must be passed to the\n     * {@link #build(AbstractAuthenticationDetailsProvider)} method.\n     */\n<fim_suffix>    public static class Builder\n            extends com.oracle.bmc.common.RegionalClientBuilder<Builder, MonitoringAsyncClient> {\n        private Builder(com.oracle.bmc.Service service) {\n            super(service);\n            requestSignerFactory =\n                    new com.oracle.bmc.http.signing.internal.DefaultRequestSignerFactory(\n                            com.oracle.bmc.http.signing.SigningStrategy.STANDARD);\n        }\n        /**\n         * Build the client.\n         * @param authenticationDetailsProvider authentication details provider\n         * @return the client\n         */\n        public MonitoringAsyncClient build(\n                @lombok.NonNull\n                com.oracle.bmc.auth.AbstractAuthenticationDetailsProvider\n                        authenticationDetailsProvider) {\n            return new MonitoringAsyncClient(\n                    authenticationDetailsProvider,\n                    configuration,\n                    clientConfigurator,\n                    requestSignerFactory,\n                    additionalClientConfigurators,\n                    endpoint);\n        }\n    }<fim_middle>// class below has no smell\n"}