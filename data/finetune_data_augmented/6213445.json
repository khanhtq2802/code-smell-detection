{"text": "<fim_prefix>/*\n * Copyright (c) 2012-2018 Red Hat, Inc.\n * This program and the accompanying materials are made\n * available under the terms of the Eclipse Public License 2.0\n * which is available at https://www.eclipse.org/legal/epl-2.0/\n *\n * SPDX-License-Identifier: EPL-2.0\n *\n * Contributors:\n *   Red Hat, Inc. - initial API and implementation\n */\npackage org.eclipse.che.plugin.jdb.server.model;\n\nimport com.sun.jdi.LocalVariable;\nimport com.sun.jdi.StackFrame;\nimport com.sun.jdi.Value;\nimport org.eclipse.che.api.debug.shared.model.SimpleValue;\nimport org.eclipse.che.api.debug.shared.model.Variable;\nimport org.eclipse.che.api.debug.shared.model.VariablePath;\nimport org.eclipse.che.api.debug.shared.model.impl.VariablePathImpl;\n\n/**\n * {@link org.eclipse.che.api.debug.shared.model.Variable} implementation for Java Debugger.\n *\n * @author Anatolii Bazko\n */\n<fim_suffix>public class JdbVariable implements Variable {\n  private final LocalVariable jdiVariable;\n  private final SimpleValue value;\n\n  public JdbVariable(StackFrame jdiStackFrame, LocalVariable jdiVariable) {\n    Value jdiValue = jdiStackFrame.getValue(jdiVariable);\n\n    this.jdiVariable = jdiVariable;\n    this.value = jdiValue == null ? new JdbNullValue() : new JdbValue(jdiValue, getVariablePath());\n  }\n\n  public JdbVariable(SimpleValue value, LocalVariable jdiVariable) {\n    this.jdiVariable = jdiVariable;\n    this.value = value;\n  }\n\n  @Override\n  public String getName() {\n    return jdiVariable.name();\n  }\n\n  @Override\n  public boolean isPrimitive() {\n    return JdbType.isPrimitive(jdiVariable.signature());\n  }\n\n  @Override\n  public SimpleValue getValue() {\n    return value;\n  }\n\n  @Override\n  public String getType() {\n    return jdiVariable.typeName();\n  }\n\n  @Override\n  public VariablePath getVariablePath() {\n    return new VariablePathImpl(getName());\n  }\n}<fim_middle>// class below is data class\n"}