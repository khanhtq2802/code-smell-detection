{"text": "<fim_prefix>            this.max = dfa_50;\n            this.accept = dfa_51;\n            this.special = dfa_52;\n            this.transition = dfa_53;\n        }\n        public String getDescription() {\n            return \"11704:2: ( rule__Unit__UnorderedGroup_7__0 )?\";\n        }\n        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {\n            TokenStream input = (TokenStream)_input;\n        \tint _s = s;\n            switch ( s ) {\n                    case 0 : \n                        int LA94_0 = input.LA(1);\n                        int index94_0 = input.index();\n                        input.rewind();\n                        s = -1;\n                        if ( LA94_0 == 40 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 0) ) {s = 1;}\n                        else if ( LA94_0 == 39 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 1) ) {s = 2;}\n                        else if ( LA94_0 == 51 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 2) ) {s = 3;}\n                        else if ( LA94_0 == 52 && ( getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 3) || getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 4) ) ) {s = 4;}\n                        else if ( LA94_0 == RULE_DOCUMENTATION && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 5) ) {s = 5;}\n                        else if ( LA94_0 == RULE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 5) ) {s = 6;}\n                        else if ( LA94_0 == 74 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 5) ) {s = 7;}\n                        else if ( LA94_0 == 59 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 5) ) {s = 8;}\n                        else if ( (LA94_0==45) ) {s = 9;}\n                        input.seek(index94_0);\n                        if ( s>=0 ) return s;\n                        break;\n            }\n            if (state.backtracking>0) {state.failed=true; return -1;}\n            NoViableAltException nvae =\n                new NoViableAltException(getDescription(), 94, _s, input);\n            error(nvae);\n            throw nvae;\n        }\n    }\n    static final String dfa_54s = \"\\1\\7\\2\\uffff\\1\\0\\10\\uffff\";\n    static final String dfa_55s = \"\\1\\112\\2\\uffff\\1\\0\\10\\uffff\";\n    static final String dfa_56s = \"\\3\\uffff\\1\\0\\10\\uffff}>\";\n    static final String[] dfa_57s = {\n            \"\\2\\1\\36\\uffff\\2\\1\\4\\uffff\\1\\1\\5\\uffff\\1\\3\\1\\1\\6\\uffff\\1\\1\\16\\uffff\\1\\1\",\n            \"\",\n            \"\",\n            \"\\1\\uffff\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\"\n    };\n    static final char[] dfa_54 = DFA.unpackEncodedStringToUnsignedChars(dfa_54s);\n    static final char[] dfa_55 = DFA.unpackEncodedStringToUnsignedChars(dfa_55s);\n    static final short[] dfa_56 = DFA.unpackEncodedString(dfa_56s);\n    static final short[][] dfa_57 = unpackEncodedStringArray(dfa_57s);\n    class DFA95 extends DFA {\n        public DFA95(BaseRecognizer recognizer) {\n            this.recognizer = recognizer;\n            this.decisionNumber = 95;\n            this.eot = dfa_27;\n            this.eof = dfa_28;\n            this.min = dfa_54;\n            this.max = dfa_55;\n            this.accept = dfa_31;\n            this.special = dfa_56;\n            this.transition = dfa_57;\n        }\n        public String getDescription() {\n            return \"()* loopback of 11765:7: ( ( rule__Unit__Group_7_2__0 )=> rule__Unit__Group_7_2__0 )*\";\n        }\n        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {\n            TokenStream input = (TokenStream)_input;\n        \tint _s = s;\n            switch ( s ) {\n                    case 0 : \n                        int LA95_3 = input.LA(1);\n                        int index95_3 = input.index();\n                        input.rewind();\n                        s = -1;\n                        if ( (synpred126_InternalBeeLangTestLanguage()) ) {s = 11;}\n                        else if ( (true) ) {s = 1;}\n                        input.seek(index95_3);\n                        if ( s>=0 ) return s;\n                        break;\n            }\n            if (state.backtracking>0) {state.failed=true; return -1;}\n            NoViableAltException nvae =\n                new NoViableAltException(getDescription(), 95, _s, input);\n            error(nvae);\n            throw nvae;\n        }\n    }\n    static final String dfa_58s = \"\\1\\7\\3\\uffff\\1\\0\\7\\uffff\";\n    static final String dfa_59s = \"\\1\\112\\3\\uffff\\1\\0\\7\\uffff\";\n    static final String dfa_60s = \"\\4\\uffff\\1\\0\\7\\uffff}>\";\n    static final String[] dfa_61s = {\n            \"\\2\\1\\36\\uffff\\2\\1\\4\\uffff\\1\\1\\5\\uffff\\1\\1\\1\\4\\6\\uffff\\1\\1\\16\\uffff\\1\\1\",\n            \"\",\n            \"\",\n            \"\",\n            \"\\1\\uffff\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\"\n    };\n    static final char[] dfa_58 = DFA.unpackEncodedStringToUnsignedChars(dfa_58s);\n    static final char[] dfa_59 = DFA.unpackEncodedStringToUnsignedChars(dfa_59s);\n    static final short[] dfa_60 = DFA.unpackEncodedString(dfa_60s);\n    static final short[][] dfa_61 = unpackEncodedStringArray(dfa_61s);\n<fim_suffix>    class DFA96 extends DFA {\n        public DFA96(BaseRecognizer recognizer) {\n            this.recognizer = recognizer;\n            this.decisionNumber = 96;\n            this.eot = dfa_27;\n            this.eof = dfa_28;\n            this.min = dfa_58;\n            this.max = dfa_59;\n            this.accept = dfa_31;\n            this.special = dfa_60;\n            this.transition = dfa_61;\n        }\n        public String getDescription() {\n            return \"()* loopback of 11787:7: ( ( rule__Unit__Group_7_3__0 )=> rule__Unit__Group_7_3__0 )*\";\n        }\n        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {\n            TokenStream input = (TokenStream)_input;\n        \tint _s = s;\n            switch ( s ) {\n                    case 0 : \n                        int LA96_4 = input.LA(1);\n                        int index96_4 = input.index();\n                        input.rewind();\n                        s = -1;\n                        if ( (synpred128_InternalBeeLangTestLanguage()) ) {s = 11;}\n                        else if ( (true) ) {s = 1;}\n                        input.seek(index96_4);\n                        if ( s>=0 ) return s;\n                        break;\n            }\n            if (state.backtracking>0) {state.failed=true; return -1;}\n            NoViableAltException nvae =\n                new NoViableAltException(getDescription(), 96, _s, input);\n            error(nvae);\n            throw nvae;\n        }\n    }<fim_middle>// class below has no smell\n"}