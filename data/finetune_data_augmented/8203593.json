{"text": "<fim_prefix>        }\n        boolean success = !state.failed;\n        input.rewind(start);\n        state.backtracking--;\n        state.failed=false;\n        return success;\n    }\n    public final boolean synpred99_PsiInternalSimpleBeeLangTestLanguage() {\n        state.backtracking++;\n        int start = input.mark();\n        try {\n            synpred99_PsiInternalSimpleBeeLangTestLanguage_fragment(); // can never throw exception\n        } catch (RecognitionException re) {\n            System.err.println(\"impossible: \"+re);\n        }\n        boolean success = !state.failed;\n        input.rewind(start);\n        state.backtracking--;\n        state.failed=false;\n        return success;\n    }\n    public final boolean synpred87_PsiInternalSimpleBeeLangTestLanguage() {\n        state.backtracking++;\n        int start = input.mark();\n        try {\n            synpred87_PsiInternalSimpleBeeLangTestLanguage_fragment(); // can never throw exception\n        } catch (RecognitionException re) {\n            System.err.println(\"impossible: \"+re);\n        }\n        boolean success = !state.failed;\n        input.rewind(start);\n        state.backtracking--;\n        state.failed=false;\n        return success;\n    }\n    public final boolean synpred85_PsiInternalSimpleBeeLangTestLanguage() {\n        state.backtracking++;\n        int start = input.mark();\n        try {\n            synpred85_PsiInternalSimpleBeeLangTestLanguage_fragment(); // can never throw exception\n        } catch (RecognitionException re) {\n            System.err.println(\"impossible: \"+re);\n        }\n        boolean success = !state.failed;\n        input.rewind(start);\n        state.backtracking--;\n        state.failed=false;\n        return success;\n    }\n    public final boolean synpred113_PsiInternalSimpleBeeLangTestLanguage() {\n        state.backtracking++;\n        int start = input.mark();\n        try {\n            synpred113_PsiInternalSimpleBeeLangTestLanguage_fragment(); // can never throw exception\n        } catch (RecognitionException re) {\n            System.err.println(\"impossible: \"+re);\n        }\n        boolean success = !state.failed;\n        input.rewind(start);\n        state.backtracking--;\n        state.failed=false;\n        return success;\n    }\n    public final boolean synpred127_PsiInternalSimpleBeeLangTestLanguage() {\n        state.backtracking++;\n        int start = input.mark();\n        try {\n            synpred127_PsiInternalSimpleBeeLangTestLanguage_fragment(); // can never throw exception\n        } catch (RecognitionException re) {\n            System.err.println(\"impossible: \"+re);\n        }\n        boolean success = !state.failed;\n        input.rewind(start);\n        state.backtracking--;\n        state.failed=false;\n        return success;\n    }\n    public final boolean synpred12_PsiInternalSimpleBeeLangTestLanguage() {\n        state.backtracking++;\n        int start = input.mark();\n        try {\n            synpred12_PsiInternalSimpleBeeLangTestLanguage_fragment(); // can never throw exception\n        } catch (RecognitionException re) {\n            System.err.println(\"impossible: \"+re);\n        }\n        boolean success = !state.failed;\n        input.rewind(start);\n        state.backtracking--;\n        state.failed=false;\n        return success;\n    }\n    public final boolean synpred106_PsiInternalSimpleBeeLangTestLanguage() {\n        state.backtracking++;\n        int start = input.mark();\n        try {\n            synpred106_PsiInternalSimpleBeeLangTestLanguage_fragment(); // can never throw exception\n        } catch (RecognitionException re) {\n            System.err.println(\"impossible: \"+re);\n        }\n        boolean success = !state.failed;\n        input.rewind(start);\n        state.backtracking--;\n        state.failed=false;\n        return success;\n    }\n    public final boolean synpred17_PsiInternalSimpleBeeLangTestLanguage() {\n        state.backtracking++;\n        int start = input.mark();\n        try {\n            synpred17_PsiInternalSimpleBeeLangTestLanguage_fragment(); // can never throw exception\n        } catch (RecognitionException re) {\n            System.err.println(\"impossible: \"+re);\n        }\n        boolean success = !state.failed;\n        input.rewind(start);\n        state.backtracking--;\n        state.failed=false;\n        return success;\n    }\n    public final boolean synpred101_PsiInternalSimpleBeeLangTestLanguage() {\n        state.backtracking++;\n        int start = input.mark();\n        try {\n            synpred101_PsiInternalSimpleBeeLangTestLanguage_fragment(); // can never throw exception\n        } catch (RecognitionException re) {\n            System.err.println(\"impossible: \"+re);\n        }\n        boolean success = !state.failed;\n        input.rewind(start);\n        state.backtracking--;\n        state.failed=false;\n        return success;\n    }\n    public final boolean synpred89_PsiInternalSimpleBeeLangTestLanguage() {\n        state.backtracking++;\n        int start = input.mark();\n        try {\n            synpred89_PsiInternalSimpleBeeLangTestLanguage_fragment(); // can never throw exception\n        } catch (RecognitionException re) {\n            System.err.println(\"impossible: \"+re);\n        }\n        boolean success = !state.failed;\n        input.rewind(start);\n        state.backtracking--;\n        state.failed=false;\n        return success;\n    }\n    public final boolean synpred32_PsiInternalSimpleBeeLangTestLanguage() {\n        state.backtracking++;\n        int start = input.mark();\n        try {\n            synpred32_PsiInternalSimpleBeeLangTestLanguage_fragment(); // can never throw exception\n        } catch (RecognitionException re) {\n            System.err.println(\"impossible: \"+re);\n        }\n        boolean success = !state.failed;\n        input.rewind(start);\n        state.backtracking--;\n        state.failed=false;\n        return success;\n    }\n    public final boolean synpred27_PsiInternalSimpleBeeLangTestLanguage() {\n        state.backtracking++;\n        int start = input.mark();\n        try {\n            synpred27_PsiInternalSimpleBeeLangTestLanguage_fragment(); // can never throw exception\n        } catch (RecognitionException re) {\n            System.err.println(\"impossible: \"+re);\n        }\n        boolean success = !state.failed;\n        input.rewind(start);\n        state.backtracking--;\n        state.failed=false;\n        return success;\n    }\n    public final boolean synpred14_PsiInternalSimpleBeeLangTestLanguage() {\n        state.backtracking++;\n        int start = input.mark();\n        try {\n            synpred14_PsiInternalSimpleBeeLangTestLanguage_fragment(); // can never throw exception\n        } catch (RecognitionException re) {\n            System.err.println(\"impossible: \"+re);\n        }\n        boolean success = !state.failed;\n        input.rewind(start);\n        state.backtracking--;\n        state.failed=false;\n        return success;\n    }\n    public final boolean synpred29_PsiInternalSimpleBeeLangTestLanguage() {\n        state.backtracking++;\n        int start = input.mark();\n        try {\n            synpred29_PsiInternalSimpleBeeLangTestLanguage_fragment(); // can never throw exception\n        } catch (RecognitionException re) {\n            System.err.println(\"impossible: \"+re);\n        }\n        boolean success = !state.failed;\n        input.rewind(start);\n        state.backtracking--;\n        state.failed=false;\n        return success;\n    }\n    public final boolean synpred21_PsiInternalSimpleBeeLangTestLanguage() {\n        state.backtracking++;\n        int start = input.mark();\n        try {\n            synpred21_PsiInternalSimpleBeeLangTestLanguage_fragment(); // can never throw exception\n        } catch (RecognitionException re) {\n            System.err.println(\"impossible: \"+re);\n        }\n        boolean success = !state.failed;\n        input.rewind(start);\n        state.backtracking--;\n        state.failed=false;\n        return success;\n    }\n    public final boolean synpred18_PsiInternalSimpleBeeLangTestLanguage() {\n        state.backtracking++;\n        int start = input.mark();\n        try {\n            synpred18_PsiInternalSimpleBeeLangTestLanguage_fragment(); // can never throw exception\n        } catch (RecognitionException re) {\n            System.err.println(\"impossible: \"+re);\n        }\n        boolean success = !state.failed;\n        input.rewind(start);\n        state.backtracking--;\n        state.failed=false;\n        return success;\n    }\n<fim_suffix>    public final boolean synpred9_PsiInternalSimpleBeeLangTestLanguage() {\n        state.backtracking++;\n        int start = input.mark();\n        try {\n            synpred9_PsiInternalSimpleBeeLangTestLanguage_fragment(); // can never throw exception\n        } catch (RecognitionException re) {\n            System.err.println(\"impossible: \"+re);\n        }\n        boolean success = !state.failed;\n        input.rewind(start);\n        state.backtracking--;\n        state.failed=false;\n        return success;\n    }<fim_middle>// function below has no smell\n"}