{"text": "<fim_prefix>/*\n * Copyright (c) 2019 the Eclipse Milo Authors\n *\n * This program and the accompanying materials are made\n * available under the terms of the Eclipse Public License 2.0\n * which is available at https://www.eclipse.org/legal/epl-2.0/\n *\n * SPDX-License-Identifier: EPL-2.0\n */\npackage org.eclipse.milo.opcua.sdk.server.model.nodes.objects;\nimport java.util.Optional;\nimport org.eclipse.milo.opcua.sdk.server.api.nodes.VariableNode;\nimport org.eclipse.milo.opcua.sdk.server.model.nodes.variables.PropertyNode;\nimport org.eclipse.milo.opcua.sdk.server.model.types.objects.OperationLimitsType;\nimport org.eclipse.milo.opcua.sdk.server.nodes.UaNodeContext;\nimport org.eclipse.milo.opcua.stack.core.types.builtin.LocalizedText;\nimport org.eclipse.milo.opcua.stack.core.types.builtin.NodeId;\nimport org.eclipse.milo.opcua.stack.core.types.builtin.QualifiedName;\nimport org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UByte;\nimport org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger;\npublic class OperationLimitsNode extends FolderNode implements OperationLimitsType {\n    public OperationLimitsNode(UaNodeContext context, NodeId nodeId, QualifiedName browseName,\n                               LocalizedText displayName, LocalizedText description, UInteger writeMask,\n                               UInteger userWriteMask) {\n        super(context, nodeId, browseName, displayName, description, writeMask, userWriteMask);\n    }\n    public OperationLimitsNode(UaNodeContext context, NodeId nodeId, QualifiedName browseName,\n                               LocalizedText displayName, LocalizedText description, UInteger writeMask,\n                               UInteger userWriteMask, UByte eventNotifier) {\n        super(context, nodeId, browseName, displayName, description, writeMask, userWriteMask, eventNotifier);\n    }\n    @Override\n    public PropertyNode getMaxMonitoredItemsPerCallNode() {\n        Optional<VariableNode> propertyNode = getPropertyNode(OperationLimitsType.MAX_MONITORED_ITEMS_PER_CALL);\n        return (PropertyNode) propertyNode.orElse(null);\n    }\n    @Override\n    public UInteger getMaxMonitoredItemsPerCall() {\n        Optional<UInteger> propertyValue = getProperty(OperationLimitsType.MAX_MONITORED_ITEMS_PER_CALL);\n        return propertyValue.orElse(null);\n    }\n    @Override\n    public void setMaxMonitoredItemsPerCall(UInteger value) {\n        setProperty(OperationLimitsType.MAX_MONITORED_ITEMS_PER_CALL, value);\n    }\n    @Override\n    public PropertyNode getMaxNodesPerTranslateBrowsePathsToNodeIdsNode() {\n        Optional<VariableNode> propertyNode = getPropertyNode(OperationLimitsType.MAX_NODES_PER_TRANSLATE_BROWSE_PATHS_TO_NODE_IDS);\n        return (PropertyNode) propertyNode.orElse(null);\n    }\n    @Override\n    public UInteger getMaxNodesPerTranslateBrowsePathsToNodeIds() {\n        Optional<UInteger> propertyValue = getProperty(OperationLimitsType.MAX_NODES_PER_TRANSLATE_BROWSE_PATHS_TO_NODE_IDS);\n        return propertyValue.orElse(null);\n    }\n    @Override\n    public void setMaxNodesPerTranslateBrowsePathsToNodeIds(UInteger value) {\n        setProperty(OperationLimitsType.MAX_NODES_PER_TRANSLATE_BROWSE_PATHS_TO_NODE_IDS, value);\n    }\n    @Override\n    public PropertyNode getMaxNodesPerNodeManagementNode() {\n        Optional<VariableNode> propertyNode = getPropertyNode(OperationLimitsType.MAX_NODES_PER_NODE_MANAGEMENT);\n        return (PropertyNode) propertyNode.orElse(null);\n    }\n    @Override\n    public UInteger getMaxNodesPerNodeManagement() {\n        Optional<UInteger> propertyValue = getProperty(OperationLimitsType.MAX_NODES_PER_NODE_MANAGEMENT);\n        return propertyValue.orElse(null);\n    }\n    @Override\n    public void setMaxNodesPerNodeManagement(UInteger value) {\n        setProperty(OperationLimitsType.MAX_NODES_PER_NODE_MANAGEMENT, value);\n    }\n    @Override\n    public PropertyNode getMaxNodesPerHistoryUpdateEventsNode() {\n        Optional<VariableNode> propertyNode = getPropertyNode(OperationLimitsType.MAX_NODES_PER_HISTORY_UPDATE_EVENTS);\n        return (PropertyNode) propertyNode.orElse(null);\n    }\n    @Override\n    public UInteger getMaxNodesPerHistoryUpdateEvents() {\n        Optional<UInteger> propertyValue = getProperty(OperationLimitsType.MAX_NODES_PER_HISTORY_UPDATE_EVENTS);\n        return propertyValue.orElse(null);\n    }\n    @Override\n    public void setMaxNodesPerHistoryUpdateEvents(UInteger value) {\n        setProperty(OperationLimitsType.MAX_NODES_PER_HISTORY_UPDATE_EVENTS, value);\n    }\n    @Override\n    public PropertyNode getMaxNodesPerWriteNode() {\n        Optional<VariableNode> propertyNode = getPropertyNode(OperationLimitsType.MAX_NODES_PER_WRITE);\n        return (PropertyNode) propertyNode.orElse(null);\n    }\n    @Override\n    public UInteger getMaxNodesPerWrite() {\n        Optional<UInteger> propertyValue = getProperty(OperationLimitsType.MAX_NODES_PER_WRITE);\n        return propertyValue.orElse(null);\n    }\n    @Override\n    public void setMaxNodesPerWrite(UInteger value) {\n        setProperty(OperationLimitsType.MAX_NODES_PER_WRITE, value);\n    }\n    @Override\n    public PropertyNode getMaxNodesPerReadNode() {\n        Optional<VariableNode> propertyNode = getPropertyNode(OperationLimitsType.MAX_NODES_PER_READ);\n        return (PropertyNode) propertyNode.orElse(null);\n    }\n    @Override\n    public UInteger getMaxNodesPerRead() {\n        Optional<UInteger> propertyValue = getProperty(OperationLimitsType.MAX_NODES_PER_READ);\n        return propertyValue.orElse(null);\n    }\n    @Override\n    public void setMaxNodesPerRead(UInteger value) {\n        setProperty(OperationLimitsType.MAX_NODES_PER_READ, value);\n    }\n    @Override\n    public PropertyNode getMaxNodesPerHistoryReadEventsNode() {\n        Optional<VariableNode> propertyNode = getPropertyNode(OperationLimitsType.MAX_NODES_PER_HISTORY_READ_EVENTS);\n        return (PropertyNode) propertyNode.orElse(null);\n    }\n    @Override\n    public UInteger getMaxNodesPerHistoryReadEvents() {\n        Optional<UInteger> propertyValue = getProperty(OperationLimitsType.MAX_NODES_PER_HISTORY_READ_EVENTS);\n        return propertyValue.orElse(null);\n    }\n    @Override\n    public void setMaxNodesPerHistoryReadEvents(UInteger value) {\n        setProperty(OperationLimitsType.MAX_NODES_PER_HISTORY_READ_EVENTS, value);\n    }\n<fim_suffix>    @Override\n    public PropertyNode getMaxNodesPerHistoryUpdateDataNode() {\n        Optional<VariableNode> propertyNode = getPropertyNode(OperationLimitsType.MAX_NODES_PER_HISTORY_UPDATE_DATA);\n        return (PropertyNode) propertyNode.orElse(null);\n    }\n    @Override\n    public UInteger getMaxNodesPerHistoryUpdateData() {\n        Optional<UInteger> propertyValue = getProperty(OperationLimitsType.MAX_NODES_PER_HISTORY_UPDATE_DATA);\n        return propertyValue.orElse(null);\n    }\n    @Override\n    public void setMaxNodesPerHistoryUpdateData(UInteger value) {\n        setProperty(OperationLimitsType.MAX_NODES_PER_HISTORY_UPDATE_DATA, value);\n    }\n    @Override\n    public PropertyNode getMaxNodesPerMethodCallNode() {\n        Optional<VariableNode> propertyNode = getPropertyNode(OperationLimitsType.MAX_NODES_PER_METHOD_CALL);\n        return (PropertyNode) propertyNode.orElse(null);\n    }\n    @Override\n    public UInteger getMaxNodesPerMethodCall() {\n        Optional<UInteger> propertyValue = getProperty(OperationLimitsType.MAX_NODES_PER_METHOD_CALL);\n        return propertyValue.orElse(null);\n    }\n    @Override\n    public void setMaxNodesPerMethodCall(UInteger value) {\n        setProperty(OperationLimitsType.MAX_NODES_PER_METHOD_CALL, value);\n    }\n    @Override\n    public PropertyNode getMaxNodesPerHistoryReadDataNode() {\n        Optional<VariableNode> propertyNode = getPropertyNode(OperationLimitsType.MAX_NODES_PER_HISTORY_READ_DATA);\n        return (PropertyNode) propertyNode.orElse(null);\n    }\n    @Override\n    public UInteger getMaxNodesPerHistoryReadData() {\n        Optional<UInteger> propertyValue = getProperty(OperationLimitsType.MAX_NODES_PER_HISTORY_READ_DATA);\n        return propertyValue.orElse(null);\n    }\n    @Override\n    public void setMaxNodesPerHistoryReadData(UInteger value) {\n        setProperty(OperationLimitsType.MAX_NODES_PER_HISTORY_READ_DATA, value);\n    }\n    @Override\n    public PropertyNode getMaxNodesPerRegisterNodesNode() {<fim_middle>// function below has no smell\n"}