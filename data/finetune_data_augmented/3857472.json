{"text": "<fim_prefix>/*\n *  Licensed to the Apache Software Foundation (ASF) under one or more\n *  contributor license agreements.  See the NOTICE file distributed with\n *  this work for additional information regarding copyright ownership.\n *  The ASF licenses this file to You under the Apache License, Version 2.0\n *  (the \"License\"); you may not use this file except in compliance with\n *  the License.  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n *\n */\npackage org.apache.ivy.core.module.descriptor;\n\nimport java.net.URL;\nimport java.util.Date;\nimport java.util.Map;\n\nimport org.apache.ivy.core.module.id.ArtifactRevisionId;\nimport org.apache.ivy.core.module.id.ModuleRevisionId;\n\n/**\n *\n */\n<fim_suffix>public class DefaultArtifact extends AbstractArtifact {\n\n    public static Artifact newIvyArtifact(ModuleRevisionId mrid, Date pubDate) {\n        return new DefaultArtifact(mrid, pubDate, \"ivy\", \"ivy\", \"xml\", true);\n    }\n\n    public static Artifact newPomArtifact(ModuleRevisionId mrid, Date pubDate) {\n        return new DefaultArtifact(mrid, pubDate, mrid.getName(), \"pom\", \"pom\", true);\n    }\n\n    public static Artifact cloneWithAnotherExt(Artifact artifact, String newExt) {\n        return cloneWithAnotherTypeAndExt(artifact, artifact.getType(), newExt);\n    }\n\n    public static Artifact cloneWithAnotherType(Artifact artifact, String newType) {\n        return cloneWithAnotherTypeAndExt(artifact, newType, artifact.getExt());\n    }\n\n    public static Artifact cloneWithAnotherTypeAndExt(Artifact artifact, String newType,\n            String newExt) {\n        return new DefaultArtifact(ArtifactRevisionId.newInstance(artifact.getModuleRevisionId(),\n            artifact.getName(), newType, newExt, artifact.getQualifiedExtraAttributes()),\n                artifact.getPublicationDate(), artifact.getUrl(), artifact.isMetadata());\n    }\n\n    public static Artifact cloneWithAnotherName(Artifact artifact, String name) {\n        return new DefaultArtifact(ArtifactRevisionId.newInstance(artifact.getModuleRevisionId(),\n            name, artifact.getType(), artifact.getExt(), artifact.getQualifiedExtraAttributes()),\n                artifact.getPublicationDate(), artifact.getUrl(), artifact.isMetadata());\n    }\n\n    public static Artifact cloneWithAnotherMrid(Artifact artifact, ModuleRevisionId mrid) {\n        return new DefaultArtifact(ArtifactRevisionId.newInstance(mrid, artifact.getName(),\n            artifact.getType(), artifact.getExt(), artifact.getQualifiedExtraAttributes()),\n                artifact.getPublicationDate(), artifact.getUrl(), artifact.isMetadata());\n    }\n\n    private Date publicationDate;\n\n    private ArtifactRevisionId arid;\n\n    private URL url;\n\n    private boolean isMetadata = false;\n\n    public DefaultArtifact(ModuleRevisionId mrid, Date publicationDate, String name, String type,\n            String ext) {\n        this(mrid, publicationDate, name, type, ext, null, null);\n    }\n\n    public DefaultArtifact(ModuleRevisionId mrid, Date publicationDate, String name, String type,\n            String ext, boolean isMetadata) {\n        this(mrid, publicationDate, name, type, ext, null, null);\n        this.isMetadata = isMetadata;\n    }\n\n    public DefaultArtifact(ModuleRevisionId mrid, Date publicationDate, String name, String type,\n            String ext, Map<String, String> extraAttributes) {\n        this(mrid, publicationDate, name, type, ext, null, extraAttributes);\n    }\n\n    public DefaultArtifact(ModuleRevisionId mrid, Date publicationDate, String name, String type,\n            String ext, URL url, Map<String, String> extraAttributes) {\n        this(ArtifactRevisionId.newInstance(mrid, name, type, ext, extraAttributes),\n                publicationDate, url, false);\n    }\n\n    public DefaultArtifact(ArtifactRevisionId arid, Date publicationDate, URL url,\n            boolean isMetadata) {\n        if (arid == null) {\n            throw new NullPointerException(\"null arid not allowed\");\n        }\n        if (publicationDate == null) {\n            publicationDate = new Date();\n        }\n        this.publicationDate = publicationDate;\n        this.arid = arid;\n        this.url = url;\n        this.isMetadata = isMetadata;\n    }\n\n    public ModuleRevisionId getModuleRevisionId() {\n        return arid.getModuleRevisionId();\n    }\n\n    public String getName() {\n        return arid.getName();\n    }\n\n    public Date getPublicationDate() {\n        return publicationDate;\n    }\n\n    public String getType() {\n        return arid.getType();\n    }\n\n    public String getExt() {\n        return arid.getExt();\n    }\n\n    public ArtifactRevisionId getId() {\n        return arid;\n    }\n\n    public String[] getConfigurations() {\n        return new String[0];\n    }\n\n    public URL getUrl() {\n        return url;\n    }\n\n    public boolean isMetadata() {\n        return isMetadata;\n    }\n}<fim_middle>// class below is data class\n"}