{"text": "<fim_prefix>/*\n * Copyright (C) 2017 The Android Open Source Project\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage com.google.android.exoplayer2.testutil;\n\nimport android.os.Looper;\nimport com.google.android.exoplayer2.BasePlayer;\nimport com.google.android.exoplayer2.ExoPlaybackException;\nimport com.google.android.exoplayer2.ExoPlayer;\nimport com.google.android.exoplayer2.PlaybackParameters;\nimport com.google.android.exoplayer2.Player;\nimport com.google.android.exoplayer2.PlayerMessage;\nimport com.google.android.exoplayer2.SeekParameters;\nimport com.google.android.exoplayer2.Timeline;\nimport com.google.android.exoplayer2.source.MediaSource;\nimport com.google.android.exoplayer2.source.TrackGroupArray;\nimport com.google.android.exoplayer2.trackselection.TrackSelectionArray;\n\n/**\n * An abstract {@link ExoPlayer} implementation that throws {@link UnsupportedOperationException}\n * from every method.\n */\npublic abstract class StubExoPlayer extends BasePlayer implements ExoPlayer {\n\n  @Override\n  public AudioComponent getAudioComponent() {\n    throw new UnsupportedOperationException();\n  }\n\n  @Override\n  public VideoComponent getVideoComponent() {\n    throw new UnsupportedOperationException();\n  }\n\n  @Override\n  public TextComponent getTextComponent() {\n    throw new UnsupportedOperationException();\n  }\n\n  @Override\n  public MetadataComponent getMetadataComponent() {\n    throw new UnsupportedOperationException();\n  }\n\n  @Override\n  public Looper getPlaybackLooper() {\n    throw new UnsupportedOperationException();\n  }\n\n  @Override\n  public Looper getApplicationLooper() {\n    throw new UnsupportedOperationException();\n  }\n\n  @Override\n  public void addListener(Player.EventListener listener) {\n    throw new UnsupportedOperationException();\n  }\n\n  @Override\n  public void removeListener(Player.EventListener listener) {\n    throw new UnsupportedOperationException();\n  }\n\n  @Override\n  public int getPlaybackState() {\n    throw new UnsupportedOperationException();\n  }\n\n  @Override\n  public ExoPlaybackException getPlaybackError() {\n    throw new UnsupportedOperationException();\n  }\n\n  @Override\n  public void retry() {\n    throw new UnsupportedOperationException();\n  }\n\n  @Override\n  public void prepare(MediaSource mediaSource) {\n    throw new UnsupportedOperationException();\n  }\n\n<fim_suffix>  @Override\n  public void prepare(MediaSource mediaSource, boolean resetPosition, boolean resetState) {\n    throw new UnsupportedOperationException();\n  }\n\n  @Override\n  public void setPlayWhenReady(boolean playWhenReady) {\n    throw new UnsupportedOperationException();\n  }\n\n  @Override\n  public boolean getPlayWhenReady() {\n    throw new UnsupportedOperationException();\n  }\n\n  @Override\n  public void setRepeatMode(@RepeatMode int repeatMode) {\n    throw new UnsupportedOperationException();\n  }\n\n  @Override\n  public int getRepeatMode() {\n    throw new UnsupportedOperationException();\n  }\n\n  @Override\n  public void setShuffleModeEnabled(boolean shuffleModeEnabled) {\n    throw new UnsupportedOperationException();\n  }\n\n  @Override\n  public boolean getShuffleModeEnabled() {\n    throw new UnsupportedOperationException();\n  }\n\n  @Override\n  public boolean isLoading() {\n    throw new UnsupportedOperationException();\n  }\n\n  @Override\n  public void seekTo(int windowIndex, long positionMs) {\n    throw new UnsupportedOperationException();\n  }\n\n  @Override\n  public void setPlaybackParameters(PlaybackParameters playbackParameters) {\n    throw new UnsupportedOperationException();\n  }\n\n  @Override\n  public PlaybackParameters getPlaybackParameters() {\n    throw new UnsupportedOperationException();\n  }\n\n  @Override\n  public void setSeekParameters(SeekParameters seekParameters) {\n    throw new UnsupportedOperationException();\n  }\n\n  @Override\n  public SeekParameters getSeekParameters() {\n    throw new UnsupportedOperationException();\n  }\n\n  @Override\n  public void stop(boolean resetStateAndPosition) {\n    throw new UnsupportedOperationException();\n  }\n\n  @Override\n  public void release() {\n    throw new UnsupportedOperationException();\n  }\n\n  @Override\n  public PlayerMessage createMessage(PlayerMessage.Target target) {\n    throw new UnsupportedOperationException();\n  }\n\n  @Override\n  @Deprecated\n  @SuppressWarnings(\"deprecation\")\n  public void sendMessages(ExoPlayerMessage... messages) {\n    throw new UnsupportedOperationException();\n  }\n\n  @Override\n  @Deprecated\n  @SuppressWarnings(\"deprecation\")\n  public void blockingSendMessages(ExoPlayerMessage... messages) {\n    throw new UnsupportedOperationException();\n  }\n\n  @Override\n  public int getRendererCount() {\n    throw new UnsupportedOperationException();\n  }\n\n  @Override\n  public int getRendererType(int index) {\n    throw new UnsupportedOperationException();\n  }\n\n  @Override\n  public TrackGroupArray getCurrentTrackGroups() {\n    throw new UnsupportedOperationException();\n  }\n\n  @Override\n  public TrackSelectionArray getCurrentTrackSelections() {\n    throw new UnsupportedOperationException();\n  }\n\n  @Override\n  public Object getCurrentManifest() {\n    throw new UnsupportedOperationException();\n  }\n\n  @Override\n  public Timeline getCurrentTimeline() {\n    throw new UnsupportedOperationException();\n  }\n\n  @Override\n  public int getCurrentPeriodIndex() {\n    throw new UnsupportedOperationException();\n  }\n\n  @Override\n  public int getCurrentWindowIndex() {\n    throw new UnsupportedOperationException();\n  }\n\n  @Override\n  public long getDuration() {\n    throw new UnsupportedOperationException();\n  }\n\n  @Override\n  public long getCurrentPosition() {\n    throw new UnsupportedOperationException();\n  }\n\n  @Override\n  public long getBufferedPosition() {\n    throw new UnsupportedOperationException();\n  }\n\n  @Override\n  public long getTotalBufferedDuration() {\n    throw new UnsupportedOperationException();\n  }\n\n  @Override\n  public boolean isPlayingAd() {\n    throw new UnsupportedOperationException();\n  }\n\n  @Override\n  public int getCurrentAdGroupIndex() {\n    throw new UnsupportedOperationException();\n  }\n\n  @Override\n  public int getCurrentAdIndexInAdGroup() {\n    throw new UnsupportedOperationException();\n  }\n\n  @Override\n  public long getContentPosition() {\n    throw new UnsupportedOperationException();\n  }\n\n  @Override\n  public long getContentBufferedPosition() {\n    throw new UnsupportedOperationException();\n  }\n}<fim_middle>// function below has no smell\n"}