{"text": "<fim_prefix>/*\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.jclouds.cloudstack.features;\n\nimport java.util.Set;\n\nimport javax.inject.Named;\nimport javax.ws.rs.Consumes;\nimport javax.ws.rs.GET;\nimport javax.ws.rs.QueryParam;\nimport javax.ws.rs.core.MediaType;\n\nimport org.jclouds.Fallbacks.EmptySetOnNotFoundOr404;\nimport org.jclouds.Fallbacks.NullOnNotFoundOr404;\nimport org.jclouds.cloudstack.domain.AsyncCreateResponse;\nimport org.jclouds.cloudstack.domain.PublicIPAddress;\nimport org.jclouds.cloudstack.filters.AuthenticationFilter;\nimport org.jclouds.cloudstack.functions.CloudStackFallbacks.VoidOnNotFoundOr404OrUnableToFindAccountOwner;\nimport org.jclouds.cloudstack.options.AssociateIPAddressOptions;\nimport org.jclouds.cloudstack.options.ListPublicIPAddressesOptions;\nimport org.jclouds.rest.annotations.Fallback;\nimport org.jclouds.rest.annotations.OnlyElement;\nimport org.jclouds.rest.annotations.QueryParams;\nimport org.jclouds.rest.annotations.RequestFilters;\nimport org.jclouds.rest.annotations.SelectJson;\nimport org.jclouds.rest.annotations.Unwrap;\n\n/**\n * Provides synchronous access to cloudstack via their REST API.\n * <p/>\n * \n * @see <a href=\"http://download.cloud.com/releases/2.2.0/api_2.2.12/TOC_User.html\" />\n */\n<fim_suffix>@RequestFilters(AuthenticationFilter.class)\n@QueryParams(keys = \"response\", values = \"json\")\npublic interface AddressApi {\n\n   /**\n    * Lists IPAddresses\n    * \n    * @param options\n    *           if present, how to constrain the list.\n    * @return IPAddresses matching query, or empty set, if no IPAddresses are\n    *         found\n    */\n   @Named(\"listPublicIpAddresses\")\n   @GET\n   @QueryParams(keys = { \"command\", \"listAll\" }, values = { \"listPublicIpAddresses\", \"true\" })\n   @SelectJson(\"publicipaddress\")\n   @Consumes(MediaType.APPLICATION_JSON)\n   @Fallback(EmptySetOnNotFoundOr404.class)\n   Set<PublicIPAddress> listPublicIPAddresses(ListPublicIPAddressesOptions... options);\n\n   /**\n    * get a specific IPAddress by id\n    * \n    * @param id\n    *           IPAddress to get\n    * @return IPAddress or null if not found\n    */\n   @Named(\"listPublicIpAddresses\")\n   @GET\n   @QueryParams(keys = { \"command\", \"listAll\" }, values = { \"listPublicIpAddresses\", \"true\" })\n   @SelectJson(\"publicipaddress\")\n   @OnlyElement\n   @Consumes(MediaType.APPLICATION_JSON)\n   @Fallback(NullOnNotFoundOr404.class)\n   PublicIPAddress getPublicIPAddress(@QueryParam(\"id\") String id);\n\n   /**\n    * Acquires and associates a public IP to an account.\n    * \n    * @param zoneId\n    *           the ID of the availability zone you want to acquire an public IP\n    *           address from\n    * @return IPAddress\n    */\n   @Named(\"associateIpAddress\")\n   @GET\n   @QueryParams(keys = \"command\", values = \"associateIpAddress\")\n   @Unwrap\n   @Consumes(MediaType.APPLICATION_JSON)\n   AsyncCreateResponse associateIPAddressInZone(@QueryParam(\"zoneid\") String zoneId,\n         AssociateIPAddressOptions... options);\n\n   /**\n    * Disassociates an ip address from the account.\n    * \n    * @param id\n    *           the id of the public ip address to disassociate\n    */\n   @Named(\"disassociateIpAddress\")\n   @GET\n   @QueryParams(keys = \"command\", values = \"disassociateIpAddress\")\n   @Fallback(VoidOnNotFoundOr404OrUnableToFindAccountOwner.class)\n   void disassociateIPAddress(@QueryParam(\"id\") String id);\n   \n}<fim_middle>// class below has no smell\n"}