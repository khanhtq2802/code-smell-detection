{"text": "<fim_prefix>/*\n * Copyright (c) 2012-2018 Red Hat, Inc.\n * This program and the accompanying materials are made\n * available under the terms of the Eclipse Public License 2.0\n * which is available at https://www.eclipse.org/legal/epl-2.0/\n *\n * SPDX-License-Identifier: EPL-2.0\n *\n * Contributors:\n *   Red Hat, Inc. - initial API and implementation\n */\npackage org.eclipse.che.core.metrics;\n\nimport java.io.IOException;\nimport javax.inject.Inject;\nimport javax.inject.Singleton;\nimport javax.servlet.Filter;\nimport javax.servlet.FilterChain;\nimport javax.servlet.FilterConfig;\nimport javax.servlet.ServletException;\nimport javax.servlet.ServletRequest;\nimport javax.servlet.ServletResponse;\nimport javax.servlet.http.HttpServletResponse;\n\n/**\n * Filter for tracking all HTTP requests through {@link ApiResponseCounter}\n *\n * @author Mykhailo Kuznietsov\n */\n@Singleton\npublic class ApiResponseMetricFilter implements Filter {\n\n  private ApiResponseCounter apiResponseCounter;\n\n  @Inject\n  public void setApiResponseCounter(ApiResponseCounter counter) {\n    this.apiResponseCounter = counter;\n  }\n\n<fim_suffix>  @Override\n  public void init(FilterConfig filterConfig) throws ServletException {}\n\n  @Override\n  public void doFilter(ServletRequest request, ServletResponse response, FilterChain filterChain)\n      throws IOException, ServletException {\n    filterChain.doFilter(request, response);\n    if (response instanceof HttpServletResponse) {\n      apiResponseCounter.handleStatus(((HttpServletResponse) response).getStatus());\n    }\n  }\n\n  @Override\n  public void destroy() {}\n}<fim_middle>// function below has no smell\n"}