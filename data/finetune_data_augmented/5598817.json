{"text": "<fim_prefix>/* ====================================================================\n   Licensed to the Apache Software Foundation (ASF) under one or more\n   contributor license agreements.  See the NOTICE file distributed with\n   this work for additional information regarding copyright ownership.\n   The ASF licenses this file to You under the Apache License, Version 2.0\n   (the \"License\"); you may not use this file except in compliance with\n   the License.  You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n==================================================================== */\n\npackage org.apache.poi.hslf.extractor;\n\n\nimport java.util.List;\n\nimport junit.framework.TestCase;\n\nimport org.apache.poi.POIDataSamples;\nimport org.apache.poi.util.StringUtil;\n\n/**\n * Tests that the QuickButCruddyTextExtractor works correctly\n *\n * @author Nick Burch (nick at torchbox dot com)\n */\n<fim_suffix>public final class TestCruddyExtractor extends TestCase {\n\t// Extractor primed on the test data\n\tprivate final QuickButCruddyTextExtractor te;\n\t// All the text to be found in the file\n\tString[] allTheText = new String[] {\n\t\t\"This is a test title\",\n\t\t\"This is a test subtitle\\nThis is on page 1\",\n\t\t\"Click to edit Master title style\",\n\t\t\"Click to edit Master text styles\\nSecond level\\nThird level\\nFourth level\\nFifth level\",\n\t\t\"*\",\n\t\t\"*\",\n\t\t\"*\",\n\t\t\"*\",\n\t\t\"*\",\n\t\t\"Click to edit Master text styles\\nSecond level\\nThird level\\nFourth level\\nFifth level\",\n\t\t\"*\",\n\t\t\"*\",\n\t\t\"These are the notes for page 1\",\n\t\t\"This is a test title\",\n\t\t\"This is a test subtitle\\nThis is on page 1\",\n\t\t\"This is the title on page 2\",\n\t\t\"This is page two\\nIt has several blocks of text\\nNone of them have formattingT\",\n\t\t\"These are the notes on page two, again lacking formatting\",\n\t\t\"This is a test title\",\n\t\t\"This is a test subtitle\\nThis is on page 1\",\n\t\t\"This is the title on page 2\",\n\t\t\"This is page two\\nIt has several blocks of text\\nNone of them have formatting\",\n\t};\n\n    public TestCruddyExtractor() throws Exception {\n        POIDataSamples slTests = POIDataSamples.getSlideShowInstance();\n\t\tte = new QuickButCruddyTextExtractor(slTests.openResourceAsStream(\"basic_test_ppt_file.ppt\"));\n    }\n\n    public void testReadAsVector() {\n\t\t// Extract the text from the file as a vector\n\t\tList<String> foundTextV = te.getTextAsVector();\n\n\t\t// Ensure they match\n\t\tassertEquals(allTheText.length,foundTextV.size());\n\t\tfor(int i=0; i<allTheText.length; i++) {\n\t\t\tString foundText = foundTextV.get(i);\n\t\t\tassertEquals(allTheText[i],foundText);\n\t\t}\n\t}\n\n\tpublic void testReadAsString() {\n\t\t// Extract the text as a String\n\t\tString foundText = te.getTextAsString();\n\n\t\t// Turn the string array into a single string\n\t\tString expectText = StringUtil.join(allTheText, \"\\n\") + \"\\n\";\n\n\t\t// Ensure they match\n\t\tassertEquals(expectText,foundText);\n\t}\n}<fim_middle>// class below has no smell\n"}