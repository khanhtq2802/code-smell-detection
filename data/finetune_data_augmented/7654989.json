{"text": "<fim_prefix>/*\n * Copyright 2014 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.springframework.social.linkedin.api.impl.json;\n\nimport java.io.IOException;\nimport java.util.List;\n\nimport org.springframework.social.linkedin.api.MemberGroup;\nimport org.springframework.social.linkedin.api.UrlResource;\n\nimport com.fasterxml.jackson.annotation.JsonCreator;\nimport com.fasterxml.jackson.annotation.JsonIgnoreProperties;\nimport com.fasterxml.jackson.annotation.JsonProperty;\nimport com.fasterxml.jackson.core.JsonParser;\nimport com.fasterxml.jackson.core.JsonProcessingException;\nimport com.fasterxml.jackson.core.type.TypeReference;\nimport com.fasterxml.jackson.databind.DeserializationContext;\nimport com.fasterxml.jackson.databind.JsonDeserializer;\nimport com.fasterxml.jackson.databind.JsonNode;\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport com.fasterxml.jackson.databind.annotation.JsonDeserialize;\n\n<fim_suffix>@JsonIgnoreProperties(ignoreUnknown = true)\nabstract class UpdateContentGroupMixin extends LinkedInObjectMixin {\n\n\t@JsonCreator\n\tUpdateContentGroupMixin (\n\t\t@JsonProperty(\"id\") String id, \n\t\t@JsonProperty(\"firstName\") String firstName, \n\t\t@JsonProperty(\"lastName\") String lastName, \n\t\t@JsonProperty(\"headline\") String headline, \n\t\t@JsonProperty(\"industry\") String industry, \n\t\t@JsonProperty(\"publicProfileUrl\") String publicProfileUrl, \n\t\t@JsonProperty(\"siteStandardProfileRequest\") UrlResource siteStandardProfileRequest, \n\t\t@JsonProperty(\"pictureUrl\") String profilePictureUrl) {}\n\t\n\t@JsonProperty(\"memberGroups\")\n\t@JsonDeserialize(using=MemberGroupsListDeserializer.class)\n\tList<MemberGroup> memberGroups;\n\t\n\tprivate static class MemberGroupsListDeserializer extends JsonDeserializer<List<MemberGroup>> {\n\t\t@SuppressWarnings(\"unchecked\")\n\t\t@Override\n\t\tpublic List<MemberGroup> deserialize(JsonParser jp, DeserializationContext ctxt) throws IOException, JsonProcessingException {\n\t\t\tObjectMapper mapper = new ObjectMapper();\n\t\t\tmapper.registerModule(new LinkedInModule());\n\t\t\tjp.setCodec(mapper);\n\t\t\tif(jp.hasCurrentToken()) {\n\t\t\t\tJsonNode dataNode = jp.readValueAs(JsonNode.class).get(\"values\");\n\t\t\t\treturn (List<MemberGroup>) mapper.reader(new TypeReference<List<MemberGroup>>() {}).readValue(dataNode);\n\t\t\t}\n\t\t\t\n\t\t\treturn null;\n\t\t}\n\t}\n\n}<fim_middle>// class below has no smell\n"}