{"text": "<fim_prefix>    x-amz-request-id: 656c76696e6727732072657175657374\n    Date: Tue, 20 Sep 2012 20:34:56 GMT\n    Content-Length: xxx\n    Connection: keep-alive\n    Server: AmazonS3\n  <LifecycleConfiguration>\n      <Rule>\n          <ID>logs-rule</ID>\n          <Prefix>logs/</Prefix>\n          <Status>Enabled</Status>\n          <Filter>\n                <Prefix>logs/</Prefix>\n                <Tag>\n                    <Key>key1</Key>\n                    <Value>value1</Value>\n                </Tag>\n                <And>\n                    <Prefix>logs/</Prefix>\n                    <Tag>\n                        <Key>key1</Key>\n                        <Value>value1</Value>\n                    </Tag>\n                    <Tag>\n                        <Key>key1</Key>\n                        <Value>value1</Value>\n                    </Tag>\n                </And>\n          </Filter>\n          <Transition>\n              <Days>30</Days>\n              <StorageClass>STANDARD_IA</StorageClass>\n          </Transition>\n          <Transition>\n              <Days>90</Days>\n              <StorageClass>GLACIER</StorageClass>\n          </Transition>\n          <Expiration>\n              <Days>365</Days>\n          </Expiration>\n          <NoncurrentVersionTransition>\n              <NoncurrentDays>7</NoncurrentDays>\n              <StorageClass>STANDARD_IA</StorageClass>\n          </NoncurrentVersionTransition>\n          <NoncurrentVersionTransition>\n              <NoncurrentDays>14</NoncurrentDays>\n              <StorageClass>GLACIER</StorageClass>\n          </NoncurrentVersionTransition>\n          <NoncurrentVersionExpiration>\n              <NoncurrentDays>365</NoncurrentDays>\n          </NoncurrentVersionExpiration>\n     </Rule>\n     <Rule>\n         <ID>image-rule</ID>\n         <Prefix>image/</Prefix>\n         <Status>Enabled</Status>\n         <Transition>\n             <Date>2012-12-31T00:00:00.000Z</Date>\n             <StorageClass>GLACIER</StorageClass>\n         </Transition>\n         <Expiration>\n             <Date>2020-12-31T00:00:00.000Z</Date>\n         </Expiration>\n        <AbortIncompleteMultipartUpload>\n            <DaysAfterInitiation>10</DaysAfterInitiation>\n        </AbortIncompleteMultipartUpload>\n     </Rule>\n  </LifecycleConfiguration>\n     */\n<fim_suffix>    public static class BucketLifecycleConfigurationHandler extends AbstractHandler {\n        private final BucketLifecycleConfiguration configuration =\n                new BucketLifecycleConfiguration(new ArrayList<Rule>());\n        private Rule currentRule;\n        private Transition currentTransition;\n        private NoncurrentVersionTransition currentNcvTransition;\n        private AbortIncompleteMultipartUpload abortIncompleteMultipartUpload;\n        private LifecycleFilter currentFilter;\n        private List<LifecycleFilterPredicate> andOperandsList;\n        private String currentTagKey;\n        private String currentTagValue;\n        public BucketLifecycleConfiguration getConfiguration() {\n            return configuration;\n        }\n        @Override\n        protected void doStartElement(\n                String uri,\n                String name,\n                String qName,\n                Attributes attrs) {\n            if (in(\"LifecycleConfiguration\")) {\n                if (name.equals(\"Rule\")) {\n                    currentRule = new Rule();\n                }\n            } else if (in(\"LifecycleConfiguration\", \"Rule\")) {\n                if (name.equals(\"Transition\")) {\n                    currentTransition = new Transition();\n                } else if (name.equals(\"NoncurrentVersionTransition\")) {\n                    currentNcvTransition = new NoncurrentVersionTransition();\n                } else if (name.equals(\"AbortIncompleteMultipartUpload\")) {\n                    abortIncompleteMultipartUpload = new\n                            AbortIncompleteMultipartUpload();\n                } else if (name.equals(\"Filter\")) {\n                    currentFilter = new LifecycleFilter();\n                }\n            } else if (in(\"LifecycleConfiguration\", \"Rule\", \"Filter\")) {\n                if (name.equals(\"And\")) {\n                    andOperandsList = new ArrayList<LifecycleFilterPredicate>();\n                }\n            }\n        }\n        @Override\n        protected void doEndElement(String uri, String name, String qName) {\n            if (in(\"LifecycleConfiguration\")) {\n                if (name.equals(\"Rule\")) {\n                    configuration.getRules().add(currentRule);\n                    currentRule = null;\n                }\n            }\n            else if (in(\"LifecycleConfiguration\", \"Rule\")) {\n                if ( name.equals(\"ID\") ) {\n                    currentRule.setId(getText());\n                } else if ( name.equals(\"Prefix\") ) {\n                    currentRule.setPrefix(getText());\n                } else if ( name.equals(\"Status\") ) {\n                    currentRule.setStatus(getText());\n                } else if (name.equals(\"Transition\")) {\n                    currentRule.addTransition(currentTransition);\n                    currentTransition = null;\n                } else if (name.equals(\"NoncurrentVersionTransition\")) {\n                    currentRule.addNoncurrentVersionTransition(\n                            currentNcvTransition);\n                    currentNcvTransition = null;\n                } else if (name.equals(\"AbortIncompleteMultipartUpload\")) {\n                    currentRule.setAbortIncompleteMultipartUpload(abortIncompleteMultipartUpload);\n                    abortIncompleteMultipartUpload = null;\n                } else if (name.equals(\"Filter\")) {\n                    currentRule.setFilter(currentFilter);\n                    currentFilter = null;\n                }\n            }\n            else if (in(\"LifecycleConfiguration\", \"Rule\", \"Expiration\")) {\n                if (name.equals(\"Date\")) {\n                    currentRule.setExpirationDate(ServiceUtils.parseIso8601Date(getText()));\n                } else if (name.equals(\"Days\")) {\n                    currentRule.setExpirationInDays(Integer.parseInt(getText()));\n                } else if (name.equals(\"ExpiredObjectDeleteMarker\")) {\n                    if (\"true\".equals(getText())) {\n                        currentRule.setExpiredObjectDeleteMarker(true);\n                    }\n                }\n            }\n            else if (in(\"LifecycleConfiguration\", \"Rule\", \"Transition\")) {\n                if (name.equals(\"StorageClass\")) {\n                    currentTransition.setStorageClass(getText());\n                } else if (name.equals(\"Date\")) {\n                    currentTransition.setDate(\n                            ServiceUtils.parseIso8601Date(getText()));\n                } else if (name.equals(\"Days\")) {\n                    currentTransition.setDays(Integer.parseInt(getText()));\n                }\n            }\n            else if (in(\"LifecycleConfiguration\", \"Rule\", \"NoncurrentVersionExpiration\")) {\n                if (name.equals(\"NoncurrentDays\")) {\n                    currentRule.setNoncurrentVersionExpirationInDays(\n                            Integer.parseInt(getText()));\n                }\n            }\n            else if (in(\"LifecycleConfiguration\", \"Rule\", \"NoncurrentVersionTransition\")) {\n                if (name.equals(\"StorageClass\")) {\n                    currentNcvTransition.setStorageClass(getText());\n                } else if (name.equals(\"NoncurrentDays\")) {\n                    currentNcvTransition.setDays(Integer.parseInt(getText()));\n                }\n            }\n            else if (in(\"LifecycleConfiguration\", \"Rule\", \"AbortIncompleteMultipartUpload\")) {\n                if (name.equals(\"DaysAfterInitiation\")) {\n                    abortIncompleteMultipartUpload.setDaysAfterInitiation\n                            (Integer.parseInt(getText()));\n                }\n            }\n            else if (in(\"LifecycleConfiguration\", \"Rule\", \"Filter\")) {\n                if (name.equals(\"Prefix\")) {\n                    currentFilter.setPredicate(new LifecyclePrefixPredicate(getText()));\n                } else if (name.equals(\"Tag\")) {\n                    currentFilter.setPredicate(new LifecycleTagPredicate(new Tag(currentTagKey, currentTagValue)));\n                    currentTagKey = null;\n                    currentTagValue = null;\n                } else if (name.equals(\"And\")) {\n                    currentFilter.setPredicate(new LifecycleAndOperator(andOperandsList));\n                    andOperandsList = null;\n                }\n            }\n            else if (in(\"LifecycleConfiguration\", \"Rule\", \"Filter\", \"Tag\")) {\n                if (name.equals(\"Key\")) {\n                    currentTagKey = getText();\n                } else if (name.equals(\"Value\")) {\n                    currentTagValue = getText();\n                }\n            }\n            else if (in(\"LifecycleConfiguration\", \"Rule\", \"Filter\", \"And\")) {\n                if (name.equals(\"Prefix\")) {\n                    andOperandsList.add(new LifecyclePrefixPredicate(getText()));\n                } else if (name.equals(\"Tag\")) {\n                    andOperandsList.add(new LifecycleTagPredicate(new Tag(currentTagKey, currentTagValue)));\n                    currentTagKey = null;\n                    currentTagValue = null;\n                }\n            }\n            else if (in(\"LifecycleConfiguration\", \"Rule\", \"Filter\", \"And\", \"Tag\")) {\n                if (name.equals(\"Key\")) {\n                    currentTagKey = getText();\n                } else if (name.equals(\"Value\")) {\n                    currentTagValue = getText();\n                }\n            }\n        }\n    }<fim_middle>// class below has no smell\n"}