{"text": "<fim_prefix>\t\tpromptTextEditor.setText( UIUtil.convertToGUIString( inputParameterGroup.getPromptText( ) ) );\n\t\tif ( DesignChoiceConstants.DATA_SET_MODE_MULTIPLE.equals( inputParameterGroup.getDataSetMode( ) ) )\n\t\t{\n\t\t\tmultiDataSet.setSelection( true );\n\t\t}\n\t\telse\n\t\t{\n\t\t\tsingleDataSet.setSelection( true );\n\t\t}\n\t\tvalueTable.setInput( inputParameterGroup );\n\t\tinitSorttingArea( );\n\t\tupdateButtons( );\n\t\trefreshParameterProperties( );\n\t\tPoint size = mainContent.computeSize( SWT.DEFAULT, SWT.DEFAULT );\n\t\tmainContent.setSize( size );\n\t\treturn true;\n\t}\n\tprivate void validateDefaultValues( ) throws BirtException\n\t{\n\t\tArrayList elementsList = new ArrayList( inputParameterGroup.getParameters( )\n\t\t\t\t.getContents( ) );\n\t\tif ( elementsList == null || elementsList.size( ) == 0 )\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\tfor ( Iterator iter = elementsList.iterator( ); iter.hasNext( ); )\n\t\t{\n\t\t\tScalarParameterHandle handle = (ScalarParameterHandle) iter.next( );\n\t\t\tString tempDefaultValue = handle.getDefaultValue( );\n\t\t\tString tempType = handle.getDataType( );\n\t\t\tif ( DesignChoiceConstants.PARAM_TYPE_STRING.endsWith( tempType )\n\t\t\t\t\t|| DesignChoiceConstants.PARAM_TYPE_BOOLEAN.endsWith( tempType ) )\n\t\t\t{\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif ( !( ( DesignChoiceConstants.PARAM_TYPE_STRING.endsWith( tempType ) ) || ( DesignChoiceConstants.PARAM_TYPE_BOOLEAN.endsWith( tempType ) ) ) )\n\t\t\t{\n\t\t\t\tif ( DesignChoiceConstants.PARAM_TYPE_DATETIME.equals( tempType ) )\n\t\t\t\t{\n\t\t\t\t\ttempDefaultValue = convertToStandardFormat( DataTypeUtil.toDate( tempDefaultValue ) );\n\t\t\t\t}\n\t\t\t\telse if ( DesignChoiceConstants.PARAM_TYPE_DATE.equals( tempType ) )\n\t\t\t\t{\n\t\t\t\t\ttempDefaultValue = convertToStandardFormat( DataTypeUtil.toSqlDate( tempDefaultValue ) );\n\t\t\t\t}\n\t\t\t\telse if ( DesignChoiceConstants.PARAM_TYPE_TIME.equals( tempType ) )\n\t\t\t\t{\n\t\t\t\t\ttempDefaultValue = convertToStandardFormat( DataTypeUtil.toSqlTime( tempDefaultValue ) );\n\t\t\t\t}\n\t\t\t\tParameterValidationUtil.validate( tempType,\n\t\t\t\t\t\tSTANDARD_DATE_TIME_PATTERN,\n\t\t\t\t\t\ttempDefaultValue,\n\t\t\t\t\t\tULocale.getDefault( ) );\n\t\t\t}\n\t\t}\n\t}\n\t// ok pressed\n\tprotected void okPressed( )\n\t{\n\t\ttry\n\t\t{\n\t\t\tsaveParameterProperties( );\n\t\t\tsaveSortingProperties( );\n\t\t\t// Validate default value first -- begin -- bug 164765\n\t\t\tvalidateDefaultValues( );\n\t\t\t// Validate default value first -- end --\n\t\t\tinputParameterGroup.setName( UIUtil.convertToModelString( cascadingNameEditor.getText( ),\n\t\t\t\t\ttrue ) );\n\t\t\tinputParameterGroup.setPromptText( promptTextEditor.getText( ) );\n\t\t\tif ( isSingle( ) )\n\t\t\t{\n\t\t\t\tinputParameterGroup.setDataSetMode( DesignChoiceConstants.DATA_SET_MODE_SINGLE );\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tinputParameterGroup.setDataSetMode( DesignChoiceConstants.DATA_SET_MODE_MULTIPLE );\n\t\t\t}\n\t\t}\n\t\tcatch ( BirtException e )\n\t\t{\n\t\t\tExceptionHandler.handle( e );\n\t\t\trefreshParameterProperties( );\n\t\t\tinitSorttingArea( );\n\t\t\treturn;\n\t\t}\n\t\tsetResult( inputParameterGroup );\n\t\tsuper.okPressed( );\n\t}\n\tprivate void deleteRow( )\n\t{\n\t\tint index = valueTable.getTable( ).getSelectionIndex( );\n\t\tboolean setBtnEnable = true;\n\t\tif ( index == -1 )\n\t\t{\n\t\t\tsetBtnEnable = false;\n\t\t}\n\t\teditBtn.setEnabled( setBtnEnable );\n\t\tdelBtn.setEnabled( setBtnEnable );\n\t\tScalarParameterHandle choice = (ScalarParameterHandle) ( (IStructuredSelection) valueTable.getSelection( ) ).getFirstElement( );\n\t\tif ( choice == null )\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\ttry\n\t\t{\n\t\t\tinputParameterGroup.getParameters( ).drop( choice );\n\t\t}\n\t\tcatch ( SemanticException e )\n\t\t{\n\t\t\tExceptionHandler.handle( e );\n\t\t\treturn;\n\t\t}\n\t\trefreshValueTable( );\n\t\tindex--;\n\t\tif ( index < 0 && valueTable.getTable( ).getItemCount( ) > 1 )\n\t\t{\n\t\t\tindex = 0;\n\t\t}\n\t\tStructuredSelection selection = null;\n\t\tif ( index != -1 )\n\t\t{\n\t\t\tselection = new StructuredSelection( valueTable.getTable( )\n\t\t\t\t\t.getItem( index )\n\t\t\t\t\t.getData( ) );\n\t\t\tthis.selectedParameter = (ScalarParameterHandle) ( (IStructuredSelection) valueTable.getSelection( ) ).getFirstElement( );\n\t\t}\n\t\telse\n\t\t{\n\t\t\tselection = StructuredSelection.EMPTY;\n\t\t\tthis.selectedParameter = null;\n\t\t}\n\t\tvalueTable.setSelection( selection );\n\t\trefreshParameterProperties( );\n\t\tinitSorttingArea( );\n\t\tupdateButtons( );\n\t}\n\tprivate String[] getDataSetColumns( ScalarParameterHandle handle,\n\t\t\tboolean needFilter )\n\t{\n\t\tDataSetHandle dataSet = getDataSet( handle );\n\t\tif ( dataSet == null )\n\t\t{\n\t\t\treturn new String[0];\n\t\t}\n\t\tCachedMetaDataHandle metaHandle = dataSet.getCachedMetaDataHandle( );\n\t\tif ( metaHandle == null )\n\t\t{\n\t\t\ttry\n\t\t\t{\n\t\t\t\tmetaHandle = DataSetUIUtil.getCachedMetaDataHandle( dataSet );\n\t\t\t}\n\t\t\tcatch ( SemanticException e )\n\t\t\t{\n\t\t\t\tExceptionHandler.handle( e );\n\t\t\t\treturn new String[0];\n\t\t\t}\n\t\t}\n\t\tif ( metaHandle == null || metaHandle.getResultSet( ) == null )\n\t\t{\n\t\t\treturn new String[0];\n\t\t}\n\t\tArrayList valueList = new ArrayList( );\n\t\tList dataTypeList = new ArrayList( );\n\t\tfor ( Iterator iter = metaHandle.getResultSet( ).iterator( ); iter.hasNext( ); )\n\t\t{\n\t\t\tResultSetColumnHandle columnHandle = (ResultSetColumnHandle) iter.next( );\n\t\t\tif ( !needFilter || matchDataType( handle, columnHandle ) )\n\t\t\t{\n\t\t\t\tvalueList.add( columnHandle.getColumnName( ) );\n\t\t\t\tdataTypeList.add( columnHandle.getDataType( ) );\n\t\t\t}\n\t\t}\n\t\treturn (String[]) valueList.toArray( new String[0] );\n\t}\n<fim_suffix>\tprivate DataSetHandle getDataSet( ScalarParameterHandle handle )\n\t{\n\t\tif ( !isSingle( ) )\n\t\t{\n\t\t\tif ( handle != null && handle.getDataSet( ) != null )\n\t\t\t{\n\t\t\t\treturn handle.getDataSet( );\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\t\treturn inputParameterGroup.getDataSet( );\n\t}<fim_middle>// function below has no smell\n"}