{"text": "<fim_prefix>/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements. See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership. The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.apache.marmotta.platform.core.logging;\n\nimport ch.qos.logback.classic.Level;\nimport com.google.common.collect.ImmutableSet;\nimport org.apache.marmotta.platform.core.api.logging.LoggingModule;\n\nimport javax.enterprise.context.ApplicationScoped;\nimport java.util.Collection;\n\n/**\n * Logging module for system-related information (startup, shutdown, ...).\n *\n * @author Sebastian Schaffert (sschaffert@apache.org)\n */\n<fim_suffix>@ApplicationScoped\npublic class SystemLoggingModule extends BaseLoggingModule implements LoggingModule {\n\n    /**\n     * Return the default (logback) level used by this logging module. Should in most cases be INFO or WARN.\n     *\n     * @return\n     */\n    @Override\n    public Level getDefaultLevel() {\n        return Level.INFO;\n    }\n\n    /**\n     * Return a unique identifier for this logging module. This identifier will e.g. be used in the configuration file\n     * to store the configuration for this module. For this reason it should only consist of alpha-numeric characters\n     * plus _ and _.\n     *\n     * @return a unique identifier for the module, suitable for use in the configuration file\n     */\n    @Override\n    public String getId() {\n        return \"system\";\n    }\n\n    /**\n     * Return a human-readable name for this logging module. This name is used for displaying information about the\n     * module to the user, e.g. in a configuration interface.\n     *\n     * @return a human-readable name for the module, suitable for displaying in a user interface\n     */\n    @Override\n    public String getName() {\n        return \"System\";\n    }\n\n    /**\n     * Return a collection of packages covered by this logging module. This method should be used to group together\n     * those packages that conceptually make up the functionality described by the logging module (e.g. \"SPARQL\").\n     *\n     * @return a collection of package names\n     */\n    @Override\n    public Collection<String> getPackages() {\n        return ImmutableSet.of(\n                \"org.apache.marmotta.platform.core.filters\",\n                \"org.apache.marmotta.platform.core.startup\",\n                \"org.apache.marmotta.platform.core.servlet\",\n                \"org.apache.marmotta.platform.core.services.modules\",\n                \"org.apache.marmotta.platform.core.webservices.system\",\n                \"org.apache.marmotta.platform.core.jndi\",\n                \"org.apache.marmotta.platform.core.jaxrs\",\n                \"org.apache.marmotta.platform.core.util\"\n        );\n    }\n}<fim_middle>// class below has no smell\n"}