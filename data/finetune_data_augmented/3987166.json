{"text": "<fim_prefix>/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\npackage org.apache.polygene.library.appbrowser.json;\n\nimport org.json.JSONException;\nimport org.json.JSONWriter;\nimport org.apache.polygene.library.appbrowser.Formatter;\n\npublic abstract class AbstractJsonFormatter<NODE,LEAF>\n    implements Formatter<NODE, LEAF>\n{\n    private final JSONWriter writer;\n\n    public AbstractJsonFormatter( JSONWriter writer )\n    {\n        this.writer = writer;\n    }\n\n    protected void field( String name, String value )\n        throws JSONException\n    {\n        writer.key( name ).value(value);\n    }\n\n    protected void field( String name, boolean value )\n        throws JSONException\n    {\n        writer.key( name ).value(value);\n    }\n\n    protected void array( String name )\n        throws JSONException\n    {\n        writer.key(name);\n        writer.array();\n    }\n\n    protected void endArray()\n        throws JSONException\n    {\n        writer.endArray();\n    }\n\n    protected void object()\n        throws JSONException\n    {\n        writer.object();\n    }\n\n    protected void object(String name)\n        throws JSONException\n    {\n        writer.key(name);\n        writer.object();\n    }\n\n<fim_suffix>    protected void endObject()\n        throws JSONException\n    {\n        writer.endObject();\n    }\n\n    protected void value( Object value )\n        throws JSONException\n    {\n        writer.value( value );\n    }\n\n}<fim_middle>// function below has no smell\n"}