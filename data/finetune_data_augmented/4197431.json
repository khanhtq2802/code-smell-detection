{"text": "<fim_prefix>/*****************************************************************\n *   Licensed to the Apache Software Foundation (ASF) under one\n *  or more contributor license agreements.  See the NOTICE file\n *  distributed with this work for additional information\n *  regarding copyright ownership.  The ASF licenses this file\n *  to you under the Apache License, Version 2.0 (the\n *  \"License\"); you may not use this file except in compliance\n *  with the License.  You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing,\n *  software distributed under the License is distributed on an\n *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n *  KIND, either express or implied.  See the License for the\n *  specific language governing permissions and limitations\n *  under the License.\n ****************************************************************/\n\npackage org.apache.cayenne.dbsync.reverse.dbload;\n\nimport org.apache.cayenne.dbsync.reverse.filters.TableFilter;\nimport org.apache.cayenne.dbsync.reverse.filters.FiltersConfig;\nimport org.apache.cayenne.dbsync.reverse.filters.PatternFilter;\n\n/**\n * @since 4.0\n */\npublic class DbLoaderConfiguration {\n\n    private Boolean skipRelationshipsLoading;\n    private Boolean skipPrimaryKeyLoading;\n    private String[] tableTypes;\n    private FiltersConfig filtersConfig;\n\n    public String[] getTableTypes() {\n        return tableTypes;\n    }\n\n    public void setTableTypes(String[] tableTypes) {\n        this.tableTypes = tableTypes;\n    }\n\n    public FiltersConfig getFiltersConfig() {\n        if (filtersConfig == null) {\n            // this case is used often in tests where config not initialized properly\n            return FiltersConfig.create(null, null, TableFilter.everything(), PatternFilter.INCLUDE_NOTHING);\n        }\n        return filtersConfig;\n    }\n\n    public void setFiltersConfig(FiltersConfig filtersConfig) {\n        this.filtersConfig = filtersConfig;\n    }\n\n<fim_suffix>    public boolean isSkipRelationshipsLoading() {\n        return skipRelationshipsLoading != null && skipRelationshipsLoading;\n    }\n\n    public void setSkipRelationshipsLoading(Boolean skipRelationshipsLoading) {\n        this.skipRelationshipsLoading = skipRelationshipsLoading;\n    }\n\n    public boolean isSkipPrimaryKeyLoading() {\n        return skipPrimaryKeyLoading != null && skipPrimaryKeyLoading;\n    }\n\n    public void setSkipPrimaryKeyLoading(Boolean skipPrimaryKeyLoading) {\n        this.skipPrimaryKeyLoading = skipPrimaryKeyLoading;\n    }\n\n    @Override\n    public String toString() {\n        String res = \"EntitiesFilters: \" + getFiltersConfig();\n        if (isSkipRelationshipsLoading()) {\n            res += \"\\n Skip Loading Relationships! \\n\";\n        }\n\n        if (isSkipPrimaryKeyLoading()) {\n            res += \"\\n Skip Loading PrimaryKeys! \\n\";\n        }\n\n        return res;\n    }\n}<fim_middle>// function below has no smell\n"}