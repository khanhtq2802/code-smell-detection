{"text": "<fim_prefix>        return false;\n      boolean this_present_principal_name = true && this.isSetPrincipal_name();\n      boolean that_present_principal_name = true && that.isSetPrincipal_name();\n      if (this_present_principal_name || that_present_principal_name) {\n        if (!(this_present_principal_name && that_present_principal_name))\n          return false;\n        if (!this.principal_name.equals(that.principal_name))\n          return false;\n      }\n      boolean this_present_principal_type = true && this.isSetPrincipal_type();\n      boolean that_present_principal_type = true && that.isSetPrincipal_type();\n      if (this_present_principal_type || that_present_principal_type) {\n        if (!(this_present_principal_type && that_present_principal_type))\n          return false;\n        if (!this.principal_type.equals(that.principal_type))\n          return false;\n      }\n      return true;\n    }\n    @Override\n    public int hashCode() {\n      List<Object> list = new ArrayList<Object>();\n      boolean present_principal_name = true && (isSetPrincipal_name());\n      list.add(present_principal_name);\n      if (present_principal_name)\n        list.add(principal_name);\n      boolean present_principal_type = true && (isSetPrincipal_type());\n      list.add(present_principal_type);\n      if (present_principal_type)\n        list.add(principal_type.getValue());\n      return list.hashCode();\n    }\n    @Override\n    public int compareTo(list_roles_args other) {\n      if (!getClass().equals(other.getClass())) {\n        return getClass().getName().compareTo(other.getClass().getName());\n      }\n      int lastComparison = 0;\n      lastComparison = Boolean.valueOf(isSetPrincipal_name()).compareTo(other.isSetPrincipal_name());\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n      if (isSetPrincipal_name()) {\n        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.principal_name, other.principal_name);\n        if (lastComparison != 0) {\n          return lastComparison;\n        }\n      }\n      lastComparison = Boolean.valueOf(isSetPrincipal_type()).compareTo(other.isSetPrincipal_type());\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n      if (isSetPrincipal_type()) {\n        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.principal_type, other.principal_type);\n        if (lastComparison != 0) {\n          return lastComparison;\n        }\n      }\n      return 0;\n    }\n    public _Fields fieldForId(int fieldId) {\n      return _Fields.findByThriftId(fieldId);\n    }\n    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {\n      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);\n    }\n    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {\n      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);\n    }\n    @Override\n    public String toString() {\n      StringBuilder sb = new StringBuilder(\"list_roles_args(\");\n      boolean first = true;\n      sb.append(\"principal_name:\");\n      if (this.principal_name == null) {\n        sb.append(\"null\");\n      } else {\n        sb.append(this.principal_name);\n      }\n      first = false;\n      if (!first) sb.append(\", \");\n      sb.append(\"principal_type:\");\n      if (this.principal_type == null) {\n        sb.append(\"null\");\n      } else {\n        sb.append(this.principal_type);\n      }\n      first = false;\n      sb.append(\")\");\n      return sb.toString();\n    }\n    public void validate() throws org.apache.thrift.TException {\n      // check for required fields\n      // check for sub-struct validity\n    }\n    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {\n      try {\n        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));\n      } catch (org.apache.thrift.TException te) {\n        throw new java.io.IOException(te);\n      }\n    }\n    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {\n      try {\n        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));\n      } catch (org.apache.thrift.TException te) {\n        throw new java.io.IOException(te);\n      }\n    }\n    private static class list_roles_argsStandardSchemeFactory implements SchemeFactory {\n      public list_roles_argsStandardScheme getScheme() {\n        return new list_roles_argsStandardScheme();\n      }\n    }\n    private static class list_roles_argsStandardScheme extends StandardScheme<list_roles_args> {\n      public void read(org.apache.thrift.protocol.TProtocol iprot, list_roles_args struct) throws org.apache.thrift.TException {\n        org.apache.thrift.protocol.TField schemeField;\n        iprot.readStructBegin();\n        while (true)\n        {\n          schemeField = iprot.readFieldBegin();\n          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { \n            break;\n          }\n          switch (schemeField.id) {\n            case 1: // PRINCIPAL_NAME\n              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {\n                struct.principal_name = iprot.readString();\n                struct.setPrincipal_nameIsSet(true);\n              } else { \n                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);\n              }\n              break;\n            case 2: // PRINCIPAL_TYPE\n              if (schemeField.type == org.apache.thrift.protocol.TType.I32) {\n                struct.principal_type = org.apache.hadoop.hive.metastore.api.PrincipalType.findByValue(iprot.readI32());\n                struct.setPrincipal_typeIsSet(true);\n              } else { \n                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);\n              }\n              break;\n            default:\n              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);\n          }\n          iprot.readFieldEnd();\n        }\n        iprot.readStructEnd();\n        struct.validate();\n      }\n      public void write(org.apache.thrift.protocol.TProtocol oprot, list_roles_args struct) throws org.apache.thrift.TException {\n        struct.validate();\n        oprot.writeStructBegin(STRUCT_DESC);\n        if (struct.principal_name != null) {\n          oprot.writeFieldBegin(PRINCIPAL_NAME_FIELD_DESC);\n          oprot.writeString(struct.principal_name);\n          oprot.writeFieldEnd();\n        }\n        if (struct.principal_type != null) {\n          oprot.writeFieldBegin(PRINCIPAL_TYPE_FIELD_DESC);\n          oprot.writeI32(struct.principal_type.getValue());\n          oprot.writeFieldEnd();\n        }\n        oprot.writeFieldStop();\n        oprot.writeStructEnd();\n      }\n    }\n    private static class list_roles_argsTupleSchemeFactory implements SchemeFactory {\n      public list_roles_argsTupleScheme getScheme() {\n        return new list_roles_argsTupleScheme();\n      }\n    }\n<fim_suffix>    private static class list_roles_argsTupleScheme extends TupleScheme<list_roles_args> {\n      @Override\n      public void write(org.apache.thrift.protocol.TProtocol prot, list_roles_args struct) throws org.apache.thrift.TException {\n        TTupleProtocol oprot = (TTupleProtocol) prot;\n        BitSet optionals = new BitSet();\n        if (struct.isSetPrincipal_name()) {\n          optionals.set(0);\n        }\n        if (struct.isSetPrincipal_type()) {\n          optionals.set(1);\n        }\n        oprot.writeBitSet(optionals, 2);\n        if (struct.isSetPrincipal_name()) {\n          oprot.writeString(struct.principal_name);\n        }\n        if (struct.isSetPrincipal_type()) {\n          oprot.writeI32(struct.principal_type.getValue());\n        }\n      }\n      @Override\n      public void read(org.apache.thrift.protocol.TProtocol prot, list_roles_args struct) throws org.apache.thrift.TException {\n        TTupleProtocol iprot = (TTupleProtocol) prot;\n        BitSet incoming = iprot.readBitSet(2);\n        if (incoming.get(0)) {\n          struct.principal_name = iprot.readString();\n          struct.setPrincipal_nameIsSet(true);\n        }\n        if (incoming.get(1)) {\n          struct.principal_type = org.apache.hadoop.hive.metastore.api.PrincipalType.findByValue(iprot.readI32());\n          struct.setPrincipal_typeIsSet(true);\n        }\n      }\n    }<fim_middle>// class below has no smell\n"}