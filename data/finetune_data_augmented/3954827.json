{"text": "<fim_prefix>/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\npackage org.apache.apex.malhar.lib.db.jdbc;\n\nimport org.apache.apex.malhar.lib.util.FieldInfo;\n\n/**\n * A {@link FieldInfo} object for Jdbc. <br/>\n * Includes an SQL type for each field. <br/>\n * An {@link FieldInfo} object used for JDBC output sources must have the SQL data types.\n * This is needed to create correct getters and setters for the POJO,\n * as well as setting the right parameter types in the JDBC prepared statement.\n *\n * @since 3.5.0\n */\n<fim_suffix>public class JdbcFieldInfo extends FieldInfo\n{\n  private int sqlType;\n\n  public JdbcFieldInfo()\n  {\n  }\n\n  public JdbcFieldInfo(String columnName, String pojoFieldExpression, SupportType type, int sqlType)\n  {\n    super(columnName, pojoFieldExpression, type);\n\n    this.sqlType = sqlType;\n  }\n\n  public int getSqlType()\n  {\n    return sqlType;\n  }\n\n  /**\n   * Set the sql data type for this {@link JdbcFieldInfo}\n   * @param sqlType\n   */\n  public void setSqlType(int sqlType)\n  {\n    this.sqlType = sqlType;\n  }\n}<fim_middle>// class below is data class\n"}