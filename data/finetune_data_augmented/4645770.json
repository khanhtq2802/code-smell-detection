{"text": "<fim_prefix>/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage org.apache.flink.graph.drivers.input;\n\nimport org.apache.flink.api.java.ExecutionEnvironment;\nimport org.apache.flink.graph.Graph;\nimport org.apache.flink.graph.drivers.parameter.LongParameter;\nimport org.apache.flink.types.LongValue;\nimport org.apache.flink.types.NullValue;\n\nimport static org.apache.flink.graph.generator.CompleteGraph.MINIMUM_VERTEX_COUNT;\n\n/**\n * Generate a {@link org.apache.flink.graph.generator.CompleteGraph}.\n */\n<fim_suffix>public class CompleteGraph\nextends GeneratedGraph {\n\n\tprivate LongParameter vertexCount = new LongParameter(this, \"vertex_count\")\n\t\t.setMinimumValue(MINIMUM_VERTEX_COUNT);\n\n\t@Override\n\tpublic String getIdentity() {\n\t\treturn getName() + \" (\" + vertexCount.getValue() + \")\";\n\t}\n\n\t@Override\n\tprotected long vertexCount() {\n\t\treturn vertexCount.getValue();\n\t}\n\n\t@Override\n\tpublic Graph<LongValue, NullValue, NullValue> create(ExecutionEnvironment env) throws Exception {\n\t\treturn new org.apache.flink.graph.generator.CompleteGraph(env, vertexCount.getValue())\n\t\t\t.setParallelism(parallelism.getValue().intValue())\n\t\t\t.generate();\n\t}\n}<fim_middle>// class below has no smell\n"}