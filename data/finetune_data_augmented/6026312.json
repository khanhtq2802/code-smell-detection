{"text": "<fim_prefix>/*\n * Copyright (c) 2017 the original author or authors.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n */\n\npackage org.eclipse.buildship.core.internal.workspace;\n\nimport java.util.ArrayList;\nimport java.util.Collection;\nimport java.util.Objects;\n\nimport org.gradle.tooling.BuildAction;\nimport org.gradle.tooling.BuildController;\nimport org.gradle.tooling.model.gradle.GradleBuild;\n\n/**\n * Build action to query a model for all participants in a composite.\n *\n * @param <T> The requested model type\n * @author Donat Csikos\n */\n<fim_suffix>public final class CompositeModelQuery<T> implements BuildAction<Collection<T>> {\n\n    private static final long serialVersionUID = 1L;\n\n    private final Class<T> modelType;\n\n    public CompositeModelQuery(Class<T> modelType) {\n        this.modelType = modelType;\n    }\n\n    @Override\n    public Collection<T> execute(BuildController controller) {\n        Collection<T> models = new ArrayList<>();\n        collectRootModels(controller, controller.getBuildModel(), models);\n        return models;\n    }\n\n    private void collectRootModels(BuildController controller, GradleBuild build, Collection<T> models) {\n        models.add(controller.getModel(build.getRootProject(), this.modelType));\n\n        for (GradleBuild includedBuild : build.getIncludedBuilds()) {\n            collectRootModels(controller, includedBuild, models);\n        }\n    }\n\n    @Override\n    public int hashCode() {\n        return Objects.hash(this.modelType);\n    }\n\n    @Override\n    public boolean equals(Object obj) {\n        if (this == obj) {\n            return true;\n        }\n        if (obj == null) {\n            return false;\n        }\n        if (getClass() != obj.getClass()) {\n            return false;\n        }\n        CompositeModelQuery<?> other = (CompositeModelQuery<?>) obj;\n        return Objects.equals(this.modelType, other.modelType);\n    }\n\n\n}<fim_middle>// class below has no smell\n"}