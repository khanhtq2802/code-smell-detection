{"text": "<fim_prefix>/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.apache.knox.gateway.shell.yarn;\n\nimport com.jayway.jsonpath.JsonPath;\nimport org.apache.knox.gateway.shell.AbstractRequest;\nimport org.apache.knox.gateway.shell.BasicResponse;\nimport org.apache.knox.gateway.shell.KnoxSession;\nimport org.apache.http.HttpResponse;\nimport org.apache.http.client.methods.HttpPost;\nimport org.apache.http.client.utils.URIBuilder;\n\nimport java.io.IOException;\nimport java.util.concurrent.Callable;\n\npublic class NewApp {\n\n    public static class Request extends AbstractRequest<Response> {\n\n        protected Request(KnoxSession session) {\n            super(session);\n        }\n\n        @Override\n        protected Callable<Response> callable() {\n            return new Callable<Response>() {\n                @Override\n                public Response call() throws Exception {\n                    URIBuilder uri = uri( Yarn.SERVICE_PATH, \"/v1/cluster/apps/new-application\");\n                    HttpPost request = new HttpPost( uri.build() );\n                    return new Response( execute( request ) );\n                }\n            };\n        }\n    }\n\n<fim_suffix>    public static class Response extends BasicResponse {\n\n        public Response(HttpResponse response) {\n            super(response);\n        }\n\n        public String getAppId() throws IOException {\n            return JsonPath.read(getString(), \"$.application-id\");\n        }\n    }\n}<fim_middle>// class below has no smell\n"}