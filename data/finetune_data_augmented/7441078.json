{"text": "<fim_prefix>/*\n * Copyright (c) 2007, 2018, Oracle and/or its affiliates. All rights reserved.\n * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n *\n * This code is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License version 2 only, as\n * published by the Free Software Foundation.  Oracle designates this\n * particular file as subject to the \"Classpath\" exception as provided\n * by Oracle in the LICENSE file that accompanied this code.\n *\n * This code is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n * version 2 for more details (a copy is included in the LICENSE file that\n * accompanied this code).\n *\n * You should have received a copy of the GNU General Public License version\n * 2 along with this work; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n *\n * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n * or visit www.oracle.com if you need additional information or have any\n * questions.\n */\npackage org.graalvm.compiler.jtt.reflect;\n\nimport org.junit.Test;\n\nimport org.graalvm.compiler.jtt.JTTTest;\n\n/*\n */\n<fim_suffix>@SuppressWarnings(\"unused\")\npublic class Method_getParameterTypes01 extends JTTTest {\n\n    public static int test(int arg) throws NoSuchMethodException {\n        if (arg == 0) {\n            return Method_getParameterTypes01.class.getMethod(\"method1\").getParameterTypes().length;\n        } else if (arg == 1) {\n            return Method_getParameterTypes01.class.getMethod(\"method2\", int.class).getParameterTypes().length;\n        } else if (arg == 2) {\n            return Method_getParameterTypes01.class.getMethod(\"method3\", int.class, Object.class).getParameterTypes().length;\n        }\n        return -1;\n    }\n\n    public int method1() {\n        return 0;\n    }\n\n    public void method2(int arg1) {\n    }\n\n    public void method3(int arg1, Object arg2) {\n    }\n\n    @Test\n    public void run0() throws Throwable {\n        runTest(\"test\", 0);\n    }\n\n    @Test\n    public void run1() throws Throwable {\n        runTest(\"test\", 1);\n    }\n\n    @Test\n    public void run2() throws Throwable {\n        runTest(\"test\", 2);\n    }\n\n    @Test\n    public void run3() throws Throwable {\n        runTest(\"test\", 3);\n    }\n\n}<fim_middle>// class below has no smell\n"}