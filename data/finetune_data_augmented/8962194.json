{"text": "<fim_prefix>\n<fim_suffix>    public static final class Builder extends\n        com.google.protobuf.GeneratedMessage.Builder<Builder>\n       implements org.apache.hadoop.hive.llap.daemon.rpc.LlapDaemonProtocolProtos.SignableVertexSpecOrBuilder {\n      public static final com.google.protobuf.Descriptors.Descriptor\n          getDescriptor() {\n        return org.apache.hadoop.hive.llap.daemon.rpc.LlapDaemonProtocolProtos.internal_static_SignableVertexSpec_descriptor;\n      }\n      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable\n          internalGetFieldAccessorTable() {\n        return org.apache.hadoop.hive.llap.daemon.rpc.LlapDaemonProtocolProtos.internal_static_SignableVertexSpec_fieldAccessorTable\n            .ensureFieldAccessorsInitialized(\n                org.apache.hadoop.hive.llap.daemon.rpc.LlapDaemonProtocolProtos.SignableVertexSpec.class, org.apache.hadoop.hive.llap.daemon.rpc.LlapDaemonProtocolProtos.SignableVertexSpec.Builder.class);\n      }\n      // Construct using org.apache.hadoop.hive.llap.daemon.rpc.LlapDaemonProtocolProtos.SignableVertexSpec.newBuilder()\n      private Builder() {\n        maybeForceBuilderInitialization();\n      }\n      private Builder(\n          com.google.protobuf.GeneratedMessage.BuilderParent parent) {\n        super(parent);\n        maybeForceBuilderInitialization();\n      }\n      private void maybeForceBuilderInitialization() {\n        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {\n          getQueryIdentifierFieldBuilder();\n          getProcessorDescriptorFieldBuilder();\n          getInputSpecsFieldBuilder();\n          getOutputSpecsFieldBuilder();\n          getGroupedInputSpecsFieldBuilder();\n        }\n      }\n      private static Builder create() {\n        return new Builder();\n      }\n      public Builder clear() {\n        super.clear();\n        user_ = \"\";\n        bitField0_ = (bitField0_ & ~0x00000001);\n        signatureKeyId_ = 0L;\n        bitField0_ = (bitField0_ & ~0x00000002);\n        if (queryIdentifierBuilder_ == null) {\n          queryIdentifier_ = org.apache.hadoop.hive.llap.daemon.rpc.LlapDaemonProtocolProtos.QueryIdentifierProto.getDefaultInstance();\n        } else {\n          queryIdentifierBuilder_.clear();\n        }\n        bitField0_ = (bitField0_ & ~0x00000004);\n        hiveQueryId_ = \"\";\n        bitField0_ = (bitField0_ & ~0x00000008);\n        dagName_ = \"\";\n        bitField0_ = (bitField0_ & ~0x00000010);\n        vertexName_ = \"\";\n        bitField0_ = (bitField0_ & ~0x00000020);\n        vertexIndex_ = 0;\n        bitField0_ = (bitField0_ & ~0x00000040);\n        tokenIdentifier_ = \"\";\n        bitField0_ = (bitField0_ & ~0x00000080);\n        if (processorDescriptorBuilder_ == null) {\n          processorDescriptor_ = org.apache.hadoop.hive.llap.daemon.rpc.LlapDaemonProtocolProtos.EntityDescriptorProto.getDefaultInstance();\n        } else {\n          processorDescriptorBuilder_.clear();\n        }\n        bitField0_ = (bitField0_ & ~0x00000100);\n        if (inputSpecsBuilder_ == null) {\n          inputSpecs_ = java.util.Collections.emptyList();\n          bitField0_ = (bitField0_ & ~0x00000200);\n        } else {\n          inputSpecsBuilder_.clear();\n        }\n        if (outputSpecsBuilder_ == null) {\n          outputSpecs_ = java.util.Collections.emptyList();\n          bitField0_ = (bitField0_ & ~0x00000400);\n        } else {\n          outputSpecsBuilder_.clear();\n        }\n        if (groupedInputSpecsBuilder_ == null) {\n          groupedInputSpecs_ = java.util.Collections.emptyList();\n          bitField0_ = (bitField0_ & ~0x00000800);\n        } else {\n          groupedInputSpecsBuilder_.clear();\n        }\n        vertexParallelism_ = 0;\n        bitField0_ = (bitField0_ & ~0x00001000);\n        isExternalSubmission_ = false;\n        bitField0_ = (bitField0_ & ~0x00002000);\n        return this;\n      }\n      public Builder clone() {\n        return create().mergeFrom(buildPartial());\n      }\n      public com.google.protobuf.Descriptors.Descriptor\n          getDescriptorForType() {\n        return org.apache.hadoop.hive.llap.daemon.rpc.LlapDaemonProtocolProtos.internal_static_SignableVertexSpec_descriptor;\n      }\n      public org.apache.hadoop.hive.llap.daemon.rpc.LlapDaemonProtocolProtos.SignableVertexSpec getDefaultInstanceForType() {\n        return org.apache.hadoop.hive.llap.daemon.rpc.LlapDaemonProtocolProtos.SignableVertexSpec.getDefaultInstance();\n      }\n      public org.apache.hadoop.hive.llap.daemon.rpc.LlapDaemonProtocolProtos.SignableVertexSpec build() {\n        org.apache.hadoop.hive.llap.daemon.rpc.LlapDaemonProtocolProtos.SignableVertexSpec result = buildPartial();\n        if (!result.isInitialized()) {\n          throw newUninitializedMessageException(result);\n        }\n        return result;\n      }\n      public org.apache.hadoop.hive.llap.daemon.rpc.LlapDaemonProtocolProtos.SignableVertexSpec buildPartial() {\n        org.apache.hadoop.hive.llap.daemon.rpc.LlapDaemonProtocolProtos.SignableVertexSpec result = new org.apache.hadoop.hive.llap.daemon.rpc.LlapDaemonProtocolProtos.SignableVertexSpec(this);\n        int from_bitField0_ = bitField0_;\n        int to_bitField0_ = 0;\n        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {\n          to_bitField0_ |= 0x00000001;\n        }\n        result.user_ = user_;\n        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {\n          to_bitField0_ |= 0x00000002;\n        }\n        result.signatureKeyId_ = signatureKeyId_;\n        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {\n          to_bitField0_ |= 0x00000004;\n        }\n        if (queryIdentifierBuilder_ == null) {\n          result.queryIdentifier_ = queryIdentifier_;\n        } else {\n          result.queryIdentifier_ = queryIdentifierBuilder_.build();\n        }\n        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {\n          to_bitField0_ |= 0x00000008;\n        }\n        result.hiveQueryId_ = hiveQueryId_;\n        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {\n          to_bitField0_ |= 0x00000010;\n        }\n        result.dagName_ = dagName_;\n        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {\n          to_bitField0_ |= 0x00000020;\n        }\n        result.vertexName_ = vertexName_;\n        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {\n          to_bitField0_ |= 0x00000040;\n        }\n        result.vertexIndex_ = vertexIndex_;\n        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {\n          to_bitField0_ |= 0x00000080;\n        }\n        result.tokenIdentifier_ = tokenIdentifier_;\n        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {\n          to_bitField0_ |= 0x00000100;\n        }\n        if (processorDescriptorBuilder_ == null) {\n          result.processorDescriptor_ = processorDescriptor_;\n        } else {\n          result.processorDescriptor_ = processorDescriptorBuilder_.build();\n        }\n        if (inputSpecsBuilder_ == null) {\n          if (((bitField0_ & 0x00000200) == 0x00000200)) {\n            inputSpecs_ = java.util.Collections.unmodifiableList(inputSpecs_);<fim_middle>// class below is blob\n"}