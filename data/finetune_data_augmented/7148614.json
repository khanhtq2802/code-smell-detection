{"text": "<fim_prefix>package com.microsoft.intellij;\n\nimport com.intellij.openapi.components.*;\nimport com.intellij.util.xmlb.XmlSerializerUtil;\nimport org.jetbrains.annotations.Nullable;\n\nimport java.util.HashMap;\nimport java.util.Map;\n\n@State(\n        name = \"HDInsightSettings\",\n        storages = {\n                @Storage(file = \"$APP_CONFIG$/azure.application.settings.xml\")\n        })\npublic class ApplicationSettings implements PersistentStateComponent<ApplicationSettings.State> {\n    private State myState = new State();\n\n    public static ApplicationSettings getInstance() {\n        return ServiceManager.getService(ApplicationSettings.class);\n    }\n\n    public void setProperty(String name, String value) {\n        myState.properties.put(name, value);\n    }\n\n    public String getProperty(String name) {\n        return myState.properties.get(name);\n    }\n\n    public void unsetProperty(String name) {\n        myState.properties.remove(name);\n        myState.array_properties.remove(name);\n    }\n\n    public boolean isPropertySet(String name) {\n        return myState.properties.containsKey(name) || myState.array_properties.containsKey(name);\n    }\n\n    public String[] getProperties(String name) {\n        return myState.array_properties.get(name);\n    }\n\n    public void setProperties(String name, String[] value) {\n        myState.array_properties.put(name, value);\n    }\n\n    @Nullable\n    @Override\n    public State getState() {\n        return myState;\n    }\n\n    @Override\n    public void loadState(State state) {\n        XmlSerializerUtil.copyBean(state, myState);\n    }\n\n<fim_suffix>    public static class State {\n        public Map<String, String> properties = new HashMap<String, String>();\n        public Map<String, String[]> array_properties = new HashMap<String, String[]>();\n    }\n}<fim_middle>// class below has no smell\n"}