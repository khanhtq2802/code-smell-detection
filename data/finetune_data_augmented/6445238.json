{"text": "<fim_prefix>/*\n * Copyright (c) 2019 the Eclipse Milo Authors\n *\n * This program and the accompanying materials are made\n * available under the terms of the Eclipse Public License 2.0\n * which is available at https://www.eclipse.org/legal/epl-2.0/\n *\n * SPDX-License-Identifier: EPL-2.0\n */\n\npackage org.eclipse.milo.opcua.stack.core.types.structured;\n\nimport com.google.common.base.MoreObjects;\nimport org.eclipse.milo.opcua.stack.core.Identifiers;\nimport org.eclipse.milo.opcua.stack.core.UaSerializationException;\nimport org.eclipse.milo.opcua.stack.core.serialization.UaDecoder;\nimport org.eclipse.milo.opcua.stack.core.serialization.UaEncoder;\nimport org.eclipse.milo.opcua.stack.core.serialization.UaStructure;\nimport org.eclipse.milo.opcua.stack.core.serialization.codecs.BuiltinDataTypeCodec;\nimport org.eclipse.milo.opcua.stack.core.types.builtin.ByteString;\nimport org.eclipse.milo.opcua.stack.core.types.builtin.NodeId;\n\n<fim_suffix>public class OptionSet implements UaStructure {\n\n    public static final NodeId TypeId = Identifiers.OptionSet;\n    public static final NodeId BinaryEncodingId = Identifiers.OptionSet_Encoding_DefaultBinary;\n    public static final NodeId XmlEncodingId = Identifiers.OptionSet_Encoding_DefaultXml;\n\n    protected final ByteString value;\n    protected final ByteString validBits;\n\n    public OptionSet() {\n        this.value = null;\n        this.validBits = null;\n    }\n\n    public OptionSet(ByteString value, ByteString validBits) {\n        this.value = value;\n        this.validBits = validBits;\n    }\n\n    public ByteString getValue() { return value; }\n\n    public ByteString getValidBits() { return validBits; }\n\n    @Override\n    public NodeId getTypeId() { return TypeId; }\n\n    @Override\n    public NodeId getBinaryEncodingId() { return BinaryEncodingId; }\n\n    @Override\n    public NodeId getXmlEncodingId() { return XmlEncodingId; }\n\n    @Override\n    public String toString() {\n        return MoreObjects.toStringHelper(this)\n            .add(\"Value\", value)\n            .add(\"ValidBits\", validBits)\n            .toString();\n    }\n\n    public static class Codec extends BuiltinDataTypeCodec<OptionSet> {\n\n        @Override\n        public Class<OptionSet> getType() {\n            return OptionSet.class;\n        }\n\n        @Override\n        public OptionSet decode(UaDecoder decoder) throws UaSerializationException {\n            ByteString value = decoder.readByteString(\"Value\");\n            ByteString validBits = decoder.readByteString(\"ValidBits\");\n\n            return new OptionSet(value, validBits);\n        }\n\n        @Override\n        public void encode(OptionSet value, UaEncoder encoder) throws UaSerializationException {\n            encoder.writeByteString(\"Value\", value.value);\n            encoder.writeByteString(\"ValidBits\", value.validBits);\n        }\n    }\n\n}<fim_middle>// class below is data class\n"}