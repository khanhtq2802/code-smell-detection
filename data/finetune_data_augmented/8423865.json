{"text": "<fim_prefix>/*\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.apache.camel.component.consul.springboot;\nimport java.math.BigInteger;\nimport java.util.List;\nimport java.util.Set;\nimport javax.annotation.Generated;\nimport com.orbitz.consul.Consul;\nimport com.orbitz.consul.option.ConsistencyMode;\nimport org.apache.camel.spring.boot.ComponentConfigurationPropertiesCommon;\nimport org.apache.camel.support.jsse.SSLContextParameters;\nimport org.springframework.boot.context.properties.ConfigurationProperties;\nimport org.springframework.boot.context.properties.DeprecatedConfigurationProperty;\n/**\n * The camel consul component allows you to work with Consul, a distributed,\n * highly available, datacenter-aware, service discovery and configuration\n * system.\n * \n * Generated by camel-package-maven-plugin - do not edit this file!\n */\n@Generated(\"org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo\")\n@ConfigurationProperties(prefix = \"camel.component.consul\")\npublic class ConsulComponentConfiguration\n        extends\n            ComponentConfigurationPropertiesCommon {\n    /**\n     * Whether to enable auto configuration of the consul component. This is\n     * enabled by default.\n     */\n    private Boolean enabled;\n    /**\n     * The Consul agent URL\n     */\n    private String url;\n    /**\n     * The data center\n     */\n    private String datacenter;\n    /**\n     * SSL configuration using an\n     * org.apache.camel.support.jsse.SSLContextParameters instance. The option\n     * is a org.apache.camel.support.jsse.SSLContextParameters type.\n     */\n    private String sslContextParameters;\n    /**\n     * Enable usage of global SSL context parameters.\n     */\n    private Boolean useGlobalSslContextParameters = false;\n    /**\n     * Sets the ACL token to be used with Consul\n     */\n    private String aclToken;\n    /**\n     * Sets the username to be used for basic authentication\n     */\n    private String userName;\n    /**\n     * Sets the password to be used for basic authentication\n     */\n    private String password;\n    /**\n     * Sets the common configuration shared among endpoints\n     */\n    private ConsulConfigurationNestedConfiguration configuration;\n    /**\n     * Whether the component should resolve property placeholders on itself when\n     * starting. Only properties which are of String type can use property\n     * placeholders.\n     */\n    private Boolean resolvePropertyPlaceholders = true;\n    public String getUrl() {\n        return url;\n    }\n    public void setUrl(String url) {\n        this.url = url;\n    }\n    public String getDatacenter() {\n        return datacenter;\n    }\n    public void setDatacenter(String datacenter) {\n        this.datacenter = datacenter;\n    }\n    public String getSslContextParameters() {\n        return sslContextParameters;\n    }\n<fim_suffix>    public void setSslContextParameters(String sslContextParameters) {\n        this.sslContextParameters = sslContextParameters;\n    }\n    public Boolean getUseGlobalSslContextParameters() {\n        return useGlobalSslContextParameters;\n    }\n    public void setUseGlobalSslContextParameters(\n            Boolean useGlobalSslContextParameters) {\n        this.useGlobalSslContextParameters = useGlobalSslContextParameters;\n    }\n    public String getAclToken() {\n        return aclToken;\n    }\n    public void setAclToken(String aclToken) {\n        this.aclToken = aclToken;\n    }\n    public String getUserName() {\n        return userName;\n    }\n    public void setUserName(String userName) {\n        this.userName = userName;\n    }\n    public String getPassword() {\n        return password;\n    }\n    public void setPassword(String password) {\n        this.password = password;\n    }\n    public ConsulConfigurationNestedConfiguration getConfiguration() {\n        return configuration;\n    }\n    public void setConfiguration(\n            ConsulConfigurationNestedConfiguration configuration) {\n        this.configuration = configuration;\n    }\n    public Boolean getResolvePropertyPlaceholders() {\n        return resolvePropertyPlaceholders;\n    }\n    public void setResolvePropertyPlaceholders(\n            Boolean resolvePropertyPlaceholders) {\n        this.resolvePropertyPlaceholders = resolvePropertyPlaceholders;\n    }\n    public static class ConsulConfigurationNestedConfiguration {\n        public static final Class CAMEL_NESTED_CLASS = org.apache.camel.component.consul.ConsulConfiguration.class;\n        /**\n         * The default action. Can be overridden by CamelConsulAction\n         */\n        private String action;\n        /**\n         * Default to transform values retrieved from Consul i.e. on KV endpoint\n         * to string.\n         */\n        private Boolean valueAsString;\n        /**\n         * The default key. Can be overridden by CamelConsulKey\n         */\n        private String key;\n        /**\n         * Reference to a `com.orbitz.consul.Consul` in the registry.\n         */\n        private Consul consulClient;\n        /**\n         * The Consul agent URL\n         */\n        private String url;\n        /**\n         * The data center\n         */\n        @Deprecated\n        private String dc;\n        /**\n         * The data center\n         */\n        private String datacenter;\n        /**\n         * The near node to use for queries.\n         */\n        private String nearNode;\n        /**\n         * The note meta-data to use for queries.\n         */\n        private List nodeMeta;\n        /**\n         * The consistencyMode used for queries, default ConsistencyMode.DEFAULT\n         */\n        private ConsistencyMode consistencyMode;\n        /**\n         * Set tags. You can separate multiple tags by comma.\n         */\n        private Set tags;\n        /**\n         * SSL configuration using an\n         * org.apache.camel.support.jsse.SSLContextParameters instance.\n         */\n        private SSLContextParameters sslContextParameters;\n        /**\n         * Sets the ACL token to be used with Consul\n         */\n        private String aclToken;\n        /**\n         * Sets the username to be used for basic authentication\n         */\n        private String userName;\n        /**\n         * Sets the password to be used for basic authentication\n         */\n        private String password;\n        /**\n         * Connect timeout for OkHttpClient\n         */\n        private Long connectTimeoutMillis;\n        /**\n         * Read timeout for OkHttpClient\n         */\n        private Long readTimeoutMillis;\n        /**\n         * Write timeout for OkHttpClient\n         */\n        private Long writeTimeoutMillis;\n        /**\n         * Configure if the AgentClient should attempt a ping before returning\n         * the Consul instance\n         */\n        private Boolean pingInstance;\n        /**\n         * The second to wait for a watch event, default 10 seconds\n         */\n        private Integer blockSeconds;\n        /**\n         * The first index for watch for, default 0\n         */\n        private BigInteger firstIndex;\n        /**\n         * Recursively watch, default false\n         */\n        private Boolean recursive;\n        public String getAction() {\n            return action;\n        }\n        public void setAction(String action) {\n            this.action = action;\n        }\n        public Boolean getValueAsString() {\n            return valueAsString;\n        }\n        public void setValueAsString(Boolean valueAsString) {\n            this.valueAsString = valueAsString;\n        }\n        public String getKey() {\n            return key;\n        }\n        public void setKey(String key) {\n            this.key = key;\n        }\n        public Consul getConsulClient() {\n            return consulClient;\n        }\n        public void setConsulClient(Consul consulClient) {\n            this.consulClient = consulClient;\n        }\n        public String getUrl() {\n            return url;\n        }\n        public void setUrl(String url) {\n            this.url = url;\n        }\n        @Deprecated\n        @DeprecatedConfigurationProperty\n        public String getDc() {\n            return dc;\n        }\n        @Deprecated\n        public void setDc(String dc) {\n            this.dc = dc;\n        }\n        public String getDatacenter() {\n            return datacenter;\n        }\n        public void setDatacenter(String datacenter) {\n            this.datacenter = datacenter;\n        }\n        public String getNearNode() {\n            return nearNode;\n        }\n        public void setNearNode(String nearNode) {\n            this.nearNode = nearNode;\n        }\n        public List getNodeMeta() {\n            return nodeMeta;\n        }\n        public void setNodeMeta(List nodeMeta) {\n            this.nodeMeta = nodeMeta;\n        }\n        public ConsistencyMode getConsistencyMode() {\n            return consistencyMode;\n        }\n        public void setConsistencyMode(ConsistencyMode consistencyMode) {\n            this.consistencyMode = consistencyMode;\n        }\n        public Set getTags() {\n            return tags;\n        }\n        public void setTags(Set tags) {\n            this.tags = tags;\n        }\n        public SSLContextParameters getSslContextParameters() {\n            return sslContextParameters;\n        }\n        public void setSslContextParameters(<fim_middle>// function below has no smell\n"}