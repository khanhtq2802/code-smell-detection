{"text": "<fim_prefix>/*\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.apache.ranger.view;\n\nimport java.util.HashMap;\nimport java.util.Map;\nimport javax.xml.bind.annotation.XmlAccessType;\nimport javax.xml.bind.annotation.XmlAccessorType;\nimport javax.xml.bind.annotation.XmlRootElement;\nimport org.codehaus.jackson.annotate.JsonAutoDetect;\nimport org.codehaus.jackson.annotate.JsonAutoDetect.Visibility;\nimport org.codehaus.jackson.map.annotate.JsonSerialize;\n\n<fim_suffix>@JsonAutoDetect(getterVisibility=Visibility.NONE, setterVisibility=Visibility.NONE, fieldVisibility=Visibility.ANY)\n@JsonSerialize(include=JsonSerialize.Inclusion.NON_NULL )\n@XmlRootElement\n@XmlAccessorType(XmlAccessType.FIELD)\npublic class VXMetricPolicyCount implements java.io.Serializable {\n\tprivate static final long serialVersionUID = 1L;\n\t\n\tprotected Map<String,VXMetricServiceCount> policyCountList = new HashMap<String,VXMetricServiceCount>();\n\tprotected long totalCount;\n\t\n\t/**\n\t * Default constructor. This will set all the attributes to default value.\n\t */\n\tpublic VXMetricPolicyCount() {\t\n\t}\t\n\n\t/**\n\t * @return the policyCountList\n\t */\n\tpublic Map<String, VXMetricServiceCount> getPolicyCountList() {\n\t\treturn policyCountList;\n\t}\n\n\t/**\n\t * @param policyCountList the policyCountList to set\n\t */\n\tpublic void setPolicyCountList(Map<String, VXMetricServiceCount> policyCountList) {\n\t\tthis.policyCountList = policyCountList;\n\t}\n\n\t/**\n\t * @return the totalCount\n\t */\n\tpublic long getTotalCount() {\n\t\treturn totalCount;\n\t}\n\n\t/**\n\t * @param totalCount the totalCount to set\n\t */\n\tpublic void setTotalCount(long totalCount) {\n\t\tthis.totalCount = totalCount;\n\t}\n\n\t@Override\n\tpublic String toString() {\n\t\treturn \"VXMetricPolicyCount={totalCount=\"\n\t\t\t\t+ totalCount +\", vXMetricServiceCount=[\"\n\t\t\t\t+ policyCountList.toString()\n\t\t\t\t + \"]}\";\n\t}\n}<fim_middle>// class below has no smell\n"}