{"text": "<fim_prefix>/*******************************************************************************\n * Copyright (c) 2015 IBH SYSTEMS GmbH.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     IBH SYSTEMS GmbH - initial API and implementation\n *******************************************************************************/\npackage org.eclipse.packagedrone.sec.service.apm.model;\n\nimport java.util.Collection;\nimport java.util.Collections;\nimport java.util.HashMap;\nimport java.util.Map;\nimport java.util.Optional;\n\npublic class UserWriteModel\n{\n    private final Map<String, UserEntity> userMap;\n\n    private final Map<String, UserEntity> userMailMap;\n\n    private boolean changed;\n\n    public UserWriteModel ()\n    {\n        this.userMap = new HashMap<> ();\n        this.userMailMap = new HashMap<> ();\n    }\n\n    public UserWriteModel ( final Collection<UserEntity> users, final boolean clone )\n    {\n        this.userMap = new HashMap<> ( users.size () );\n        this.userMailMap = new HashMap<> ( users.size () );\n\n        for ( final UserEntity user : users )\n        {\n            final UserEntity newUser = clone ? new UserEntity ( user ) : user;\n            this.userMap.put ( user.getId (), newUser );\n\n            if ( newUser.getEmail () != null )\n            {\n                this.userMailMap.put ( newUser.getEmail (), newUser );\n            }\n        }\n    }\n\n    public UserWriteModel ( final UserWriteModel other )\n    {\n        this ( other.userMap.values (), true );\n    }\n\n    public boolean isChanged ()\n    {\n        return this.changed;\n    }\n\n    public Collection<UserEntity> asCollection ()\n    {\n        return Collections.unmodifiableCollection ( this.userMap.values () );\n    }\n\n    public Map<String, UserEntity> getAll ()\n    {\n        return Collections.unmodifiableMap ( this.userMap );\n    }\n\n<fim_suffix>    public Optional<UserEntity> getUser ( final String userId )\n    {\n        return Optional.ofNullable ( this.userMap.get ( userId ) );\n    }\n\n    public Optional<UserEntity> findByEmail ( final String email )\n    {\n        return Optional.ofNullable ( this.userMailMap.get ( email ) );\n    }\n\n    public UserEntity getCheckedUser ( final String userId )\n    {\n        return getUser ( userId ).orElseThrow ( () -> new UserNotFoundException () );\n    }\n\n    public void putUser ( final UserEntity user )\n    {\n        if ( user.getId () == null )\n        {\n            throw new IllegalArgumentException ( \"User has no ID assigned\" );\n        }\n\n        this.changed = true;\n\n        this.userMap.put ( user.getId (), user );\n        if ( user.getEmail () != null )\n        {\n            this.userMailMap.put ( user.getEmail (), user );\n        }\n    }\n\n    public boolean removeUser ( final String userId )\n    {\n        this.changed = true;\n\n        return this.userMap.remove ( userId ) != null;\n    }\n}<fim_middle>// function below has no smell\n"}