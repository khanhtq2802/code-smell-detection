{"text": "<fim_prefix>/*\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.apache.camel.component.redis;\n\nimport java.util.HashMap;\nimport java.util.Map;\n\nimport org.apache.camel.Processor;\n\npublic class AllRedisProcessorsCreator implements RedisProcessorsCreator {\n\n    private final Map<Command, Processor> processors = new HashMap<>();\n\n<fim_suffix>    public AllRedisProcessorsCreator(RedisClient redisClient, ExchangeConverter exchangeConverter) {\n        this.processors.putAll(new ConnectionRedisProcessorsCreator().getProcessors(redisClient, exchangeConverter));\n        this.processors.putAll(new HashesRedisProcessorsCreator().getProcessors(redisClient, exchangeConverter));\n        this.processors.putAll(new KeysRedisProcessorsCreator().getProcessors(redisClient, exchangeConverter));\n        this.processors.putAll(new ListsRedisProcessorsCreator().getProcessors(redisClient, exchangeConverter));\n        this.processors.putAll(new PubSubRedisProcessorsCreator().getProcessors(redisClient, exchangeConverter));\n        this.processors.putAll(new SetsRedisProcessorsCreator().getProcessors(redisClient, exchangeConverter));\n        this.processors.putAll(new SortedSetsRedisProcessorsCreator().getProcessors(redisClient, exchangeConverter));\n        this.processors.putAll(new StringsRedisProcessorsCreator().getProcessors(redisClient, exchangeConverter));\n        this.processors.putAll(new TransactionRedisProcessorsCreator().getProcessors(redisClient, exchangeConverter));\n        this.processors.putAll(new GeoRedisProcessorsCreator().getProcessors(redisClient, exchangeConverter));\n    }\n\n    public Map<Command, Processor> getRedisProcessors() {\n        return processors;\n    }\n\n}<fim_middle>// function below has no smell\n"}