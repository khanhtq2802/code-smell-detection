{"text": "<fim_prefix>/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements. See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership. The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\npackage org.apache.fineract.integrationtests.common.accounting;\n\nimport java.util.HashMap;\n\nimport org.apache.fineract.integrationtests.common.Utils;\n\nimport com.google.gson.Gson;\nimport com.jayway.restassured.specification.RequestSpecification;\nimport com.jayway.restassured.specification.ResponseSpecification;\n\n<fim_suffix>public class PeriodicAccrualAccountingHelper {\n\n    private static final String PERIODIC_ACCRUAL_URL = \"/fineract-provider/api/v1/runaccruals\";\n    private final RequestSpecification requestSpec;\n    private final ResponseSpecification responseSpec;\n\n    public PeriodicAccrualAccountingHelper(final RequestSpecification requestSpec, final ResponseSpecification responseSpec) {\n        this.requestSpec = requestSpec;\n        this.responseSpec = responseSpec;\n    }\n\n    public Object runPeriodicAccrualAccounting(String date) {\n        String json = getRunPeriodicAccrual(date);\n        return Utils.performServerPost(this.requestSpec, this.responseSpec, PERIODIC_ACCRUAL_URL + \"?\" + Utils.TENANT_IDENTIFIER, json, \"\");\n    }\n\n    private String getRunPeriodicAccrual(String date) {\n        final HashMap<String, String> map = new HashMap<>();\n        map.put(\"dateFormat\", \"dd MMMM yyyy\");\n        map.put(\"locale\", \"en_GB\");\n        map.put(\"tillDate\", date);\n        return new Gson().toJson(map);\n    }\n\n}<fim_middle>// class below has no smell\n"}