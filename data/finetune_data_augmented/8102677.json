{"text": "<fim_prefix>            // InternalXtext.g:8522:3: ( ruleRuleID )\n            {\n             before(grammarAccess.getGrammarAccess().getHiddenTokensAbstractRuleCrossReference_3_2_0_0()); \n            // InternalXtext.g:8523:3: ( ruleRuleID )\n            // InternalXtext.g:8524:4: ruleRuleID\n            {\n             before(grammarAccess.getGrammarAccess().getHiddenTokensAbstractRuleRuleIDParserRuleCall_3_2_0_0_1()); \n            pushFollow(FollowSets000.FOLLOW_2);\n            ruleRuleID();\n            state._fsp--;\n             after(grammarAccess.getGrammarAccess().getHiddenTokensAbstractRuleRuleIDParserRuleCall_3_2_0_0_1()); \n            }\n             after(grammarAccess.getGrammarAccess().getHiddenTokensAbstractRuleCrossReference_3_2_0_0()); \n            }\n            }\n        }\n        catch (RecognitionException re) {\n            reportError(re);\n            recover(input,re);\n        }\n        finally {\n            \trestoreStackSize(stackSize);\n        }\n        return ;\n    }\n    // $ANTLR end \"rule__Grammar__HiddenTokensAssignment_3_2_0\"\n    // $ANTLR start \"rule__Grammar__HiddenTokensAssignment_3_2_1_1\"\n    // InternalXtext.g:8535:1: rule__Grammar__HiddenTokensAssignment_3_2_1_1 : ( ( ruleRuleID ) ) ;\n    public final void rule__Grammar__HiddenTokensAssignment_3_2_1_1() throws RecognitionException {\n        \t\tint stackSize = keepStackSize();\n        try {\n            // InternalXtext.g:8539:1: ( ( ( ruleRuleID ) ) )\n            // InternalXtext.g:8540:2: ( ( ruleRuleID ) )\n            {\n            // InternalXtext.g:8540:2: ( ( ruleRuleID ) )\n            // InternalXtext.g:8541:3: ( ruleRuleID )\n            {\n             before(grammarAccess.getGrammarAccess().getHiddenTokensAbstractRuleCrossReference_3_2_1_1_0()); \n            // InternalXtext.g:8542:3: ( ruleRuleID )\n            // InternalXtext.g:8543:4: ruleRuleID\n            {\n             before(grammarAccess.getGrammarAccess().getHiddenTokensAbstractRuleRuleIDParserRuleCall_3_2_1_1_0_1()); \n            pushFollow(FollowSets000.FOLLOW_2);\n            ruleRuleID();\n            state._fsp--;\n             after(grammarAccess.getGrammarAccess().getHiddenTokensAbstractRuleRuleIDParserRuleCall_3_2_1_1_0_1()); \n            }\n             after(grammarAccess.getGrammarAccess().getHiddenTokensAbstractRuleCrossReference_3_2_1_1_0()); \n            }\n            }\n        }\n        catch (RecognitionException re) {\n            reportError(re);\n            recover(input,re);\n        }\n        finally {\n            \trestoreStackSize(stackSize);\n        }\n        return ;\n    }\n    // $ANTLR end \"rule__Grammar__HiddenTokensAssignment_3_2_1_1\"\n    // $ANTLR start \"rule__Grammar__MetamodelDeclarationsAssignment_4\"\n    // InternalXtext.g:8554:1: rule__Grammar__MetamodelDeclarationsAssignment_4 : ( ruleAbstractMetamodelDeclaration ) ;\n    public final void rule__Grammar__MetamodelDeclarationsAssignment_4() throws RecognitionException {\n        \t\tint stackSize = keepStackSize();\n        try {\n            // InternalXtext.g:8558:1: ( ( ruleAbstractMetamodelDeclaration ) )\n            // InternalXtext.g:8559:2: ( ruleAbstractMetamodelDeclaration )\n            {\n            // InternalXtext.g:8559:2: ( ruleAbstractMetamodelDeclaration )\n            // InternalXtext.g:8560:3: ruleAbstractMetamodelDeclaration\n            {\n             before(grammarAccess.getGrammarAccess().getMetamodelDeclarationsAbstractMetamodelDeclarationParserRuleCall_4_0()); \n            pushFollow(FollowSets000.FOLLOW_2);\n            ruleAbstractMetamodelDeclaration();\n            state._fsp--;\n             after(grammarAccess.getGrammarAccess().getMetamodelDeclarationsAbstractMetamodelDeclarationParserRuleCall_4_0()); \n            }\n            }\n        }\n        catch (RecognitionException re) {\n            reportError(re);\n            recover(input,re);\n        }\n        finally {\n            \trestoreStackSize(stackSize);\n        }\n        return ;\n    }\n    // $ANTLR end \"rule__Grammar__MetamodelDeclarationsAssignment_4\"\n    // $ANTLR start \"rule__Grammar__RulesAssignment_5\"\n    // InternalXtext.g:8569:1: rule__Grammar__RulesAssignment_5 : ( ruleAbstractRule ) ;\n    public final void rule__Grammar__RulesAssignment_5() throws RecognitionException {\n        \t\tint stackSize = keepStackSize();\n        try {\n            // InternalXtext.g:8573:1: ( ( ruleAbstractRule ) )\n            // InternalXtext.g:8574:2: ( ruleAbstractRule )\n            {\n            // InternalXtext.g:8574:2: ( ruleAbstractRule )\n            // InternalXtext.g:8575:3: ruleAbstractRule\n            {\n             before(grammarAccess.getGrammarAccess().getRulesAbstractRuleParserRuleCall_5_0()); \n            pushFollow(FollowSets000.FOLLOW_2);\n            ruleAbstractRule();\n            state._fsp--;\n             after(grammarAccess.getGrammarAccess().getRulesAbstractRuleParserRuleCall_5_0()); \n            }\n            }\n        }\n        catch (RecognitionException re) {\n            reportError(re);\n            recover(input,re);\n        }\n        finally {\n            \trestoreStackSize(stackSize);\n        }\n        return ;\n    }\n    // $ANTLR end \"rule__Grammar__RulesAssignment_5\"\n    // $ANTLR start \"rule__GeneratedMetamodel__NameAssignment_1\"\n    // InternalXtext.g:8584:1: rule__GeneratedMetamodel__NameAssignment_1 : ( ruleValidID ) ;\n    public final void rule__GeneratedMetamodel__NameAssignment_1() throws RecognitionException {\n        \t\tint stackSize = keepStackSize();\n        try {\n            // InternalXtext.g:8588:1: ( ( ruleValidID ) )\n            // InternalXtext.g:8589:2: ( ruleValidID )\n            {\n            // InternalXtext.g:8589:2: ( ruleValidID )\n            // InternalXtext.g:8590:3: ruleValidID\n            {\n             before(grammarAccess.getGeneratedMetamodelAccess().getNameValidIDParserRuleCall_1_0()); \n            pushFollow(FollowSets000.FOLLOW_2);\n            ruleValidID();\n            state._fsp--;\n             after(grammarAccess.getGeneratedMetamodelAccess().getNameValidIDParserRuleCall_1_0()); \n            }\n            }\n        }\n        catch (RecognitionException re) {\n            reportError(re);\n            recover(input,re);\n        }\n        finally {\n            \trestoreStackSize(stackSize);\n        }\n        return ;\n    }\n    // $ANTLR end \"rule__GeneratedMetamodel__NameAssignment_1\"\n    // $ANTLR start \"rule__GeneratedMetamodel__EPackageAssignment_2\"\n    // InternalXtext.g:8599:1: rule__GeneratedMetamodel__EPackageAssignment_2 : ( ( RULE_STRING ) ) ;\n<fim_suffix>    public final void rule__GeneratedMetamodel__EPackageAssignment_2() throws RecognitionException {\n        \t\tint stackSize = keepStackSize();\n        try {\n            // InternalXtext.g:8603:1: ( ( ( RULE_STRING ) ) )\n            // InternalXtext.g:8604:2: ( ( RULE_STRING ) )\n            {\n            // InternalXtext.g:8604:2: ( ( RULE_STRING ) )\n            // InternalXtext.g:8605:3: ( RULE_STRING )\n            {\n             before(grammarAccess.getGeneratedMetamodelAccess().getEPackageEPackageCrossReference_2_0()); \n            // InternalXtext.g:8606:3: ( RULE_STRING )\n            // InternalXtext.g:8607:4: RULE_STRING\n            {\n             before(grammarAccess.getGeneratedMetamodelAccess().getEPackageEPackageSTRINGTerminalRuleCall_2_0_1()); \n            match(input,RULE_STRING,FollowSets000.FOLLOW_2); \n             after(grammarAccess.getGeneratedMetamodelAccess().getEPackageEPackageSTRINGTerminalRuleCall_2_0_1()); \n            }\n             after(grammarAccess.getGeneratedMetamodelAccess().getEPackageEPackageCrossReference_2_0()); \n            }\n            }\n        }\n        catch (RecognitionException re) {\n            reportError(re);\n            recover(input,re);\n        }\n        finally {\n            \trestoreStackSize(stackSize);\n        }\n        return ;\n    }<fim_middle>// function below has no smell\n"}