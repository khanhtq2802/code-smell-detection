{"text": "<fim_prefix>      } else {\n        out.value = org.apache.drill.exec.expr.fn.impl.HashHelper.hash64(in.start, in.end, in.buffer, seed.value);\n      }\n    }\n  }\n  @FunctionTemplate(names = {\"hash64\", \"hash64AsDouble\"}, scope = FunctionScope.SIMPLE, nulls = FunctionTemplate.NullHandling.INTERNAL )\n  public static class NullableVarCharHash implements DrillSimpleFunc {\n    @Param NullableVarCharHolder in;\n    @Param BigIntHolder seed;\n    @Output BigIntHolder out;\n    public void setup() {\n    }\n    public void eval() {\n      if (in.isSet == 0) {\n        out.value = seed.value;\n      } else {\n        out.value = org.apache.drill.exec.expr.fn.impl.HashHelper.hash64(in.start, in.end, in.buffer, seed.value);\n      }\n    }\n  }\n  @FunctionTemplate(names = {\"hash64\", \"hash64AsDouble\"}, scope = FunctionScope.SIMPLE, nulls = FunctionTemplate.NullHandling.INTERNAL )\n  public static class NullableVar16CharHash implements DrillSimpleFunc {\n    @Param NullableVar16CharHolder in;\n    @Param BigIntHolder seed;\n    @Output BigIntHolder out;\n    public void setup() {\n    }\n    public void eval() {\n      if (in.isSet == 0) {\n        out.value = seed.value;\n      } else {\n        out.value = org.apache.drill.exec.expr.fn.impl.HashHelper.hash64(in.start, in.end, in.buffer, seed.value);\n      }\n    }\n  }\n  @FunctionTemplate(name = \"hash64\", scope = FunctionScope.SIMPLE, nulls = FunctionTemplate.NullHandling.INTERNAL)\n  public static class NullableBigIntHash implements DrillSimpleFunc {\n    @Param NullableBigIntHolder in;\n    @Param BigIntHolder seed;\n    @Output BigIntHolder out;\n    public void setup() {\n    }\n    public void eval() {\n      if (in.isSet == 0) {\n        out.value = seed.value;\n      }\n      else {\n        out.value = org.apache.drill.exec.expr.fn.impl.HashHelper.hash64(in.value, seed.value);\n      }\n    }\n  }\n  @FunctionTemplate(name = \"hash64\", scope = FunctionScope.SIMPLE, nulls = FunctionTemplate.NullHandling.INTERNAL)\n  public static class NullableIntHash implements DrillSimpleFunc {\n    @Param NullableIntHolder in;\n    @Param BigIntHolder seed;\n    @Output BigIntHolder out;\n    public void setup() {\n    }\n    public void eval() {\n      if (in.isSet == 0) {\n        out.value = seed.value;\n      }\n      else {\n        out.value = org.apache.drill.exec.expr.fn.impl.HashHelper.hash64(in.value, seed.value);\n      }\n    }\n  }\n  @FunctionTemplate(names = {\"hash64\", \"hash64AsDouble\"}, scope = FunctionScope.SIMPLE, nulls = FunctionTemplate.NullHandling.INTERNAL)\n  public static class VarBinaryHash implements DrillSimpleFunc {\n    @Param VarBinaryHolder in;\n    @Param BigIntHolder seed;\n    @Output BigIntHolder out;\n    public void setup() {\n    }\n    public void eval() {\n      out.value = org.apache.drill.exec.expr.fn.impl.HashHelper.hash64(in.start, in.end, in.buffer, seed.value);\n    }\n  }\n  @FunctionTemplate(names = {\"hash64\", \"hash64AsDouble\"}, scope = FunctionScope.SIMPLE, nulls = FunctionTemplate.NullHandling.INTERNAL)\n  public static class VarCharHash implements DrillSimpleFunc {\n    @Param VarCharHolder in;\n    @Param BigIntHolder seed;\n    @Output BigIntHolder out;\n    public void setup() {\n    }\n    public void eval() {\n      out.value = org.apache.drill.exec.expr.fn.impl.HashHelper.hash64(in.start, in.end, in.buffer, seed.value);\n    }\n  }\n  @FunctionTemplate(names = {\"hash64\", \"hash64AsDouble\"}, scope = FunctionScope.SIMPLE, nulls = FunctionTemplate.NullHandling.INTERNAL)\n  public static class Var16CharHash implements DrillSimpleFunc {\n    @Param Var16CharHolder in;\n    @Param BigIntHolder seed;\n    @Output BigIntHolder out;\n    public void setup() {\n    }\n    public void eval() {\n      out.value = org.apache.drill.exec.expr.fn.impl.HashHelper.hash64(in.start, in.end, in.buffer, seed.value);\n    }\n  }\n  @FunctionTemplate(name = \"hash64\", scope = FunctionScope.SIMPLE, nulls = FunctionTemplate.NullHandling.INTERNAL)\n  public static class BigIntHash implements DrillSimpleFunc {\n    @Param BigIntHolder in;\n    @Param BigIntHolder seed;\n    @Output BigIntHolder out;\n    public void setup() {\n    }\n    public void eval() {\n      out.value = org.apache.drill.exec.expr.fn.impl.HashHelper.hash64(in.value, seed.value);\n    }\n  }\n  @FunctionTemplate(name = \"hash64\", scope = FunctionScope.SIMPLE, nulls = FunctionTemplate.NullHandling.INTERNAL)\n  public static class IntHash implements DrillSimpleFunc {\n    @Param IntHolder in;\n    @Param BigIntHolder seed;\n    @Output BigIntHolder out;\n    public void setup() {\n    }\n    public void eval() {\n      // TODO: implement hash function for other types\n      out.value = org.apache.drill.exec.expr.fn.impl.HashHelper.hash64(in.value, seed.value);\n    }\n  }\n  @FunctionTemplate(names = {\"hash64\", \"hash64AsDouble\"}, scope = FunctionScope.SIMPLE, nulls = FunctionTemplate.NullHandling.INTERNAL)\n  public static class DateHash implements DrillSimpleFunc {\n    @Param  DateHolder in;\n    @Param BigIntHolder seed;\n    @Output BigIntHolder out;\n    public void setup() {\n    }\n    public void eval() {\n      out.value = org.apache.drill.exec.expr.fn.impl.HashHelper.hash64(in.value, seed.value);\n    }\n  }\n  @FunctionTemplate(names = {\"hash64\", \"hash64AsDouble\"}, scope = FunctionScope.SIMPLE, nulls = FunctionTemplate.NullHandling.INTERNAL)\n  public static class NullableDateHash implements DrillSimpleFunc {\n    @Param  NullableDateHolder in;\n    @Param BigIntHolder seed;\n    @Output BigIntHolder out;\n    public void setup() {\n    }\n    public void eval() {\n      if (in.isSet == 0) {\n        out.value = seed.value;\n      } else {\n        out.value = org.apache.drill.exec.expr.fn.impl.HashHelper.hash64(in.value, seed.value);\n      }\n    }\n  }\n  @FunctionTemplate(names = {\"hash64\", \"hash64AsDouble\"}, scope = FunctionScope.SIMPLE, nulls = FunctionTemplate.NullHandling.INTERNAL)\n  public static class TimeStampHash implements DrillSimpleFunc {\n    @Param  TimeStampHolder in;\n    @Param BigIntHolder seed;\n    @Output BigIntHolder out;\n    public void setup() {\n    }\n    public void eval() {\n      out.value = org.apache.drill.exec.expr.fn.impl.HashHelper.hash64(in.value, seed.value);\n    }\n  }\n  @FunctionTemplate(names = {\"hash64\", \"hash64AsDouble\"}, scope = FunctionScope.SIMPLE, nulls = FunctionTemplate.NullHandling.INTERNAL)\n  public static class NullableTimeStampHash implements DrillSimpleFunc {\n    @Param  NullableTimeStampHolder in;\n    @Param BigIntHolder seed;\n    @Output BigIntHolder out;\n    public void setup() {\n    }\n    public void eval() {\n      if (in.isSet == 0) {\n        out.value = seed.value;\n      } else {\n        out.value = org.apache.drill.exec.expr.fn.impl.HashHelper.hash64(in.value, seed.value);\n      }\n    }\n  }\n<fim_suffix>  @FunctionTemplate(names = {\"hash64\", \"hash64AsDouble\"}, scope = FunctionScope.SIMPLE, nulls = FunctionTemplate.NullHandling.INTERNAL)\n  public static class TimeHash implements DrillSimpleFunc {\n    @Param  TimeHolder in;\n    @Param BigIntHolder seed;\n    @Output BigIntHolder out;\n    public void setup() {\n    }\n    public void eval() {\n      out.value = org.apache.drill.exec.expr.fn.impl.HashHelper.hash64(in.value, seed.value);\n    }\n  }<fim_middle>// class below has no smell\n"}