{"text": "<fim_prefix>/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.apache.metron.common.utils;\n\nimport org.apache.commons.codec.digest.DigestUtils;\nimport org.json.simple.JSONObject;\n\nimport java.util.Collection;\nimport java.util.List;\nimport java.util.stream.Collectors;\n\nimport static java.nio.charset.StandardCharsets.UTF_8;\n\n/**\n * A set of utilities for converted a message to a SHA-256 hex-encoded hash string. Can be applied\n * to JSON messages (or a subset of fields of a JSON message), or raw bytes.\n */\npublic class HashUtils {\n\n  /**\n   * Produces a hash of a JSON message from a subset of the fields.\n   *\n   * @param message The JSON message to be hashed\n   * @param hashFields The fields to hash\n   * @return A string containing the resulting hash\n   */\n<fim_suffix>  public static String getMessageHash(JSONObject message, Collection<String> hashFields) {\n    List<String> hashElements = hashFields.stream().map(errorField ->\n            String.format(\"%s-%s\", errorField, message.get(errorField))).collect(Collectors.toList());\n    return DigestUtils.sha256Hex(String.join(\"|\", hashElements).getBytes(UTF_8));\n  }\n\n  public static String getMessageHash(JSONObject message) {\n    return DigestUtils.sha256Hex(message.toJSONString().getBytes(UTF_8));\n  }\n\n  public static String getMessageHash(byte[] bytes) {\n    return DigestUtils.sha256Hex(bytes);\n  }\n}<fim_middle>// function below has no smell\n"}