{"text": "<fim_prefix>/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\npackage org.apache.brooklyn.camp.server.dto;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\nimport org.apache.brooklyn.camp.server.rest.util.DtoFactory;\nimport org.apache.brooklyn.camp.spi.ApplicationComponent;\nimport org.apache.brooklyn.camp.spi.Link;\nimport org.apache.brooklyn.camp.spi.PlatformComponent;\n\nimport com.fasterxml.jackson.annotation.JsonInclude;\nimport com.fasterxml.jackson.annotation.JsonInclude.Include;\n\npublic class ApplicationComponentDto extends ResourceDto {\n\n    protected ApplicationComponentDto() {}\n    protected ApplicationComponentDto(DtoFactory dtoFactory, ApplicationComponent x) {\n        super(dtoFactory, x);\n        \n        platformComponents = new ArrayList<LinkDto>();\n        for (Link<PlatformComponent> t: x.getPlatformComponents().links()) {\n            platformComponents.add(LinkDto.newInstance(dtoFactory, PlatformComponent.class, t));\n        }\n        \n        applicationComponents = new ArrayList<LinkDto>();\n        for (Link<ApplicationComponent> t: x.getApplicationComponents().links()) {\n            applicationComponents.add(LinkDto.newInstance(dtoFactory, ApplicationComponent.class, t));\n        }\n    }\n \n    private List<LinkDto> platformComponents;\n    private List<LinkDto> applicationComponents;\n\n<fim_suffix>    @JsonInclude(Include.NON_EMPTY)\n    public List<LinkDto> getPlatformComponents() {\n        return platformComponents;\n    }\n    \n    @JsonInclude(Include.NON_EMPTY)\n    public List<LinkDto> getApplicationComponents() {\n        return applicationComponents;\n    }\n    \n    // --- building ---\n\n    public static ApplicationComponentDto newInstance(DtoFactory dtoFactory, ApplicationComponent x) {\n        return new ApplicationComponentDto(dtoFactory, x);\n    }\n    \n}<fim_middle>// function below has no smell\n"}