{"text": "<fim_prefix>    public final void synpred119_InternalBacktrackingContentAssistTestLanguage_fragment() throws RecognitionException {   \n        EObject this_RoundBracketExp_0 = null;\n        // InternalBacktrackingContentAssistTestLanguage.g:4665:3: (this_RoundBracketExp_0= ruleRoundBracketExp )\n        // InternalBacktrackingContentAssistTestLanguage.g:4665:3: this_RoundBracketExp_0= ruleRoundBracketExp\n        {\n        if ( state.backtracking==0 ) {\n          \t\t\t/* */\n        }\n        pushFollow(FollowSets000.FOLLOW_2);\n        this_RoundBracketExp_0=ruleRoundBracketExp();\n        state._fsp--;\n        if (state.failed) return ;\n        }\n    }\n    // $ANTLR end synpred119_InternalBacktrackingContentAssistTestLanguage\n    // $ANTLR start synpred120_InternalBacktrackingContentAssistTestLanguage\n    public final void synpred120_InternalBacktrackingContentAssistTestLanguage_fragment() throws RecognitionException {   \n        EObject this_SquareBracketExp_1 = null;\n        // InternalBacktrackingContentAssistTestLanguage.g:4677:3: (this_SquareBracketExp_1= ruleSquareBracketExp )\n        // InternalBacktrackingContentAssistTestLanguage.g:4677:3: this_SquareBracketExp_1= ruleSquareBracketExp\n        {\n        if ( state.backtracking==0 ) {\n          \t\t\t/* */\n        }\n        pushFollow(FollowSets000.FOLLOW_2);\n        this_SquareBracketExp_1=ruleSquareBracketExp();\n        state._fsp--;\n        if (state.failed) return ;\n        }\n    }\n    // $ANTLR end synpred120_InternalBacktrackingContentAssistTestLanguage\n    // $ANTLR start synpred121_InternalBacktrackingContentAssistTestLanguage\n    public final void synpred121_InternalBacktrackingContentAssistTestLanguage_fragment() throws RecognitionException {   \n        EObject this_PreExp_2 = null;\n        // InternalBacktrackingContentAssistTestLanguage.g:4689:3: (this_PreExp_2= rulePreExp )\n        // InternalBacktrackingContentAssistTestLanguage.g:4689:3: this_PreExp_2= rulePreExp\n        {\n        if ( state.backtracking==0 ) {\n          \t\t\t/* */\n        }\n        pushFollow(FollowSets000.FOLLOW_2);\n        this_PreExp_2=rulePreExp();\n        state._fsp--;\n        if (state.failed) return ;\n        }\n    }\n    // $ANTLR end synpred121_InternalBacktrackingContentAssistTestLanguage\n    // Delegated rules\n    public final boolean synpred89_InternalBacktrackingContentAssistTestLanguage() {\n        state.backtracking++;\n        int start = input.mark();\n        try {\n            synpred89_InternalBacktrackingContentAssistTestLanguage_fragment(); // can never throw exception\n        } catch (RecognitionException re) {\n            System.err.println(\"impossible: \"+re);\n        }\n        boolean success = !state.failed;\n        input.rewind(start);\n        state.backtracking--;\n        state.failed=false;\n        return success;\n    }\n    public final boolean synpred96_InternalBacktrackingContentAssistTestLanguage() {\n        state.backtracking++;\n        int start = input.mark();\n        try {\n            synpred96_InternalBacktrackingContentAssistTestLanguage_fragment(); // can never throw exception\n        } catch (RecognitionException re) {\n            System.err.println(\"impossible: \"+re);\n        }\n        boolean success = !state.failed;\n        input.rewind(start);\n        state.backtracking--;\n        state.failed=false;\n        return success;\n    }\n    public final boolean synpred115_InternalBacktrackingContentAssistTestLanguage() {\n        state.backtracking++;\n        int start = input.mark();\n        try {\n            synpred115_InternalBacktrackingContentAssistTestLanguage_fragment(); // can never throw exception\n        } catch (RecognitionException re) {\n            System.err.println(\"impossible: \"+re);\n        }\n        boolean success = !state.failed;\n        input.rewind(start);\n        state.backtracking--;\n        state.failed=false;\n        return success;\n    }\n    public final boolean synpred110_InternalBacktrackingContentAssistTestLanguage() {\n        state.backtracking++;\n        int start = input.mark();\n        try {\n            synpred110_InternalBacktrackingContentAssistTestLanguage_fragment(); // can never throw exception\n        } catch (RecognitionException re) {\n            System.err.println(\"impossible: \"+re);\n        }\n        boolean success = !state.failed;\n        input.rewind(start);\n        state.backtracking--;\n        state.failed=false;\n        return success;\n    }\n    public final boolean synpred91_InternalBacktrackingContentAssistTestLanguage() {\n        state.backtracking++;\n        int start = input.mark();\n        try {\n            synpred91_InternalBacktrackingContentAssistTestLanguage_fragment(); // can never throw exception\n        } catch (RecognitionException re) {\n            System.err.println(\"impossible: \"+re);\n        }\n        boolean success = !state.failed;\n        input.rewind(start);\n        state.backtracking--;\n        state.failed=false;\n        return success;\n    }\n    public final boolean synpred104_InternalBacktrackingContentAssistTestLanguage() {\n        state.backtracking++;\n        int start = input.mark();\n        try {\n            synpred104_InternalBacktrackingContentAssistTestLanguage_fragment(); // can never throw exception\n        } catch (RecognitionException re) {\n            System.err.println(\"impossible: \"+re);\n        }\n        boolean success = !state.failed;\n        input.rewind(start);\n        state.backtracking--;\n        state.failed=false;\n        return success;\n    }\n    public final boolean synpred116_InternalBacktrackingContentAssistTestLanguage() {\n        state.backtracking++;\n        int start = input.mark();\n        try {\n            synpred116_InternalBacktrackingContentAssistTestLanguage_fragment(); // can never throw exception\n        } catch (RecognitionException re) {\n            System.err.println(\"impossible: \"+re);\n        }\n        boolean success = !state.failed;\n        input.rewind(start);\n        state.backtracking--;\n        state.failed=false;\n        return success;\n    }\n    public final boolean synpred107_InternalBacktrackingContentAssistTestLanguage() {\n        state.backtracking++;\n        int start = input.mark();\n        try {\n            synpred107_InternalBacktrackingContentAssistTestLanguage_fragment(); // can never throw exception\n        } catch (RecognitionException re) {\n            System.err.println(\"impossible: \"+re);\n        }\n        boolean success = !state.failed;\n        input.rewind(start);\n        state.backtracking--;\n        state.failed=false;\n        return success;\n    }\n    public final boolean synpred119_InternalBacktrackingContentAssistTestLanguage() {\n        state.backtracking++;\n        int start = input.mark();\n        try {\n            synpred119_InternalBacktrackingContentAssistTestLanguage_fragment(); // can never throw exception\n        } catch (RecognitionException re) {\n            System.err.println(\"impossible: \"+re);\n        }\n        boolean success = !state.failed;\n        input.rewind(start);\n        state.backtracking--;\n        state.failed=false;\n        return success;\n    }\n    public final boolean synpred9_InternalBacktrackingContentAssistTestLanguage() {\n        state.backtracking++;\n        int start = input.mark();\n        try {\n            synpred9_InternalBacktrackingContentAssistTestLanguage_fragment(); // can never throw exception\n        } catch (RecognitionException re) {\n            System.err.println(\"impossible: \"+re);\n        }\n        boolean success = !state.failed;\n        input.rewind(start);\n        state.backtracking--;\n        state.failed=false;\n        return success;\n    }\n    public final boolean synpred111_InternalBacktrackingContentAssistTestLanguage() {\n        state.backtracking++;\n        int start = input.mark();\n        try {\n            synpred111_InternalBacktrackingContentAssistTestLanguage_fragment(); // can never throw exception\n        } catch (RecognitionException re) {\n            System.err.println(\"impossible: \"+re);\n        }\n        boolean success = !state.failed;\n        input.rewind(start);\n        state.backtracking--;\n        state.failed=false;\n        return success;\n    }\n<fim_suffix>    public final boolean synpred87_InternalBacktrackingContentAssistTestLanguage() {\n        state.backtracking++;\n        int start = input.mark();\n        try {\n            synpred87_InternalBacktrackingContentAssistTestLanguage_fragment(); // can never throw exception\n        } catch (RecognitionException re) {\n            System.err.println(\"impossible: \"+re);\n        }\n        boolean success = !state.failed;\n        input.rewind(start);\n        state.backtracking--;\n        state.failed=false;\n        return success;\n    }<fim_middle>// function below has no smell\n"}