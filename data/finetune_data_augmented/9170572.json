{"text": "<fim_prefix>/*******************************************************************************\n * Copyright (c) 2004, 2005 Actuate Corporation.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *  Actuate Corporation  - initial API and implementation\n *******************************************************************************/\n\npackage org.eclipse.birt.report.data.adapter.group;\n\nimport java.util.Date;\n\nimport org.eclipse.birt.core.exception.BirtException;\n\nimport com.ibm.icu.util.TimeZone;\nimport com.ibm.icu.util.ULocale;\n\n/**\n * This calculator is used to calculate a year group key basing group interval.\n */\nclass YearGroupCalculator extends DateGroupCalculator\n{\n\n\n\tpublic YearGroupCalculator( Object intervalStart, double intervalRange,\n\t\t\tULocale locale, TimeZone timeZone ) throws BirtException\n\t{\n\t\tsuper( intervalStart, intervalRange, locale, timeZone );\n\t}\n\n\t/*\n\t * (non-Javadoc)\n\t * \n\t * @see org.eclipse.birt.data.engine.impl.group.DateGroupCalculator#calculate(java.lang.Object)\n\t */\n<fim_suffix>\tpublic Object calculate( Object value )\n\t{\n\t\tif ( value == null )\n\t\t{\n\t\t\treturn new Double( -1 );\n\t\t}\n\n\t\tif ( intervalStart == null )\n\t\t{\n\t\t\treturn new Double( Math.floor( this.dateTimeUtil.diffYear( defaultStart,\n\t\t\t\t\t(Date) value )\n\t\t\t\t\t/ getDateIntervalRange( ) ) );\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif ( this.dateTimeUtil.diffYear( (Date) intervalStart, (Date) value ) < 0 )\n\t\t\t{\n\t\t\t\treturn new Double( -1 );\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn new Double( Math.floor( this.dateTimeUtil.diffYear( (Date) intervalStart,\n\t\t\t\t\t\t(Date) value )\n\t\t\t\t\t\t/ getDateIntervalRange( ) ) );\n\t\t\t}\n\t\t}\n\t}\n}<fim_middle>// function below has no smell\n"}