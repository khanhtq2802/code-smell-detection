{"text": "<fim_prefix>/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.apache.drill.common.collections;\n\nimport java.util.Map;\n\nimport org.apache.drill.shaded.guava.com.google.common.base.Objects;\nimport org.apache.drill.shaded.guava.com.google.common.base.Preconditions;\n\n<fim_suffix>public class ImmutableEntry<K, V> implements Map.Entry<K, V>  {\n  private final K key;\n  private final V value;\n\n  public ImmutableEntry(final K key, final V value) {\n    this.key = Preconditions.checkNotNull(key, \"key is required\");\n    this.value = Preconditions.checkNotNull(value, \"value is required\");\n  }\n\n  @Override\n  public K getKey() {\n    return key;\n  }\n\n  @Override\n  public V getValue() {\n    return value;\n  }\n\n  @Override\n  public V setValue(final V value) {\n    throw new UnsupportedOperationException(\"entry is immutable\");\n  }\n\n  @Override\n  public boolean equals(final Object other) {\n    if (other instanceof ImmutableEntry && other.getClass() == getClass()) {\n      final ImmutableEntry<K, V> entry = (ImmutableEntry<K, V>)other;\n      return Objects.equal(key, entry.key) && Objects.equal(value, entry.value);\n    }\n    return false;\n  }\n\n  @Override\n  public int hashCode() {\n    return Objects.hashCode(key, value);\n  }\n}<fim_middle>// class below has no smell\n"}