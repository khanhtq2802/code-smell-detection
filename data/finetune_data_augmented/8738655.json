{"text": "<fim_prefix>      metaDataMap = Collections.unmodifiableMap(tmpMap);\n      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(updateWorkflow_args.class, metaDataMap);\n    }\n    public updateWorkflow_args() {\n    }\n    public updateWorkflow_args(\n      String workflowTemplateId,\n      org.apache.airavata.model.WorkflowModel workflow)\n    {\n      this();\n      this.workflowTemplateId = workflowTemplateId;\n      this.workflow = workflow;\n    }\n    /**\n     * Performs a deep copy on <i>other</i>.\n     */\n    public updateWorkflow_args(updateWorkflow_args other) {\n      if (other.isSetWorkflowTemplateId()) {\n        this.workflowTemplateId = other.workflowTemplateId;\n      }\n      if (other.isSetWorkflow()) {\n        this.workflow = new org.apache.airavata.model.WorkflowModel(other.workflow);\n      }\n    }\n    public updateWorkflow_args deepCopy() {\n      return new updateWorkflow_args(this);\n    }\n    @Override\n    public void clear() {\n      this.workflowTemplateId = null;\n      this.workflow = null;\n    }\n    public String getWorkflowTemplateId() {\n      return this.workflowTemplateId;\n    }\n    public updateWorkflow_args setWorkflowTemplateId(String workflowTemplateId) {\n      this.workflowTemplateId = workflowTemplateId;\n      return this;\n    }\n    public void unsetWorkflowTemplateId() {\n      this.workflowTemplateId = null;\n    }\n    /** Returns true if field workflowTemplateId is set (has been assigned a value) and false otherwise */\n    public boolean isSetWorkflowTemplateId() {\n      return this.workflowTemplateId != null;\n    }\n    public void setWorkflowTemplateIdIsSet(boolean value) {\n      if (!value) {\n        this.workflowTemplateId = null;\n      }\n    }\n    public org.apache.airavata.model.WorkflowModel getWorkflow() {\n      return this.workflow;\n    }\n    public updateWorkflow_args setWorkflow(org.apache.airavata.model.WorkflowModel workflow) {\n      this.workflow = workflow;\n      return this;\n    }\n    public void unsetWorkflow() {\n      this.workflow = null;\n    }\n    /** Returns true if field workflow is set (has been assigned a value) and false otherwise */\n    public boolean isSetWorkflow() {\n      return this.workflow != null;\n    }\n    public void setWorkflowIsSet(boolean value) {\n      if (!value) {\n        this.workflow = null;\n      }\n    }\n    public void setFieldValue(_Fields field, Object value) {\n      switch (field) {\n      case WORKFLOW_TEMPLATE_ID:\n        if (value == null) {\n          unsetWorkflowTemplateId();\n        } else {\n          setWorkflowTemplateId((String)value);\n        }\n        break;\n      case WORKFLOW:\n        if (value == null) {\n          unsetWorkflow();\n        } else {\n          setWorkflow((org.apache.airavata.model.WorkflowModel)value);\n        }\n        break;\n      }\n    }\n    public Object getFieldValue(_Fields field) {\n      switch (field) {\n      case WORKFLOW_TEMPLATE_ID:\n        return getWorkflowTemplateId();\n      case WORKFLOW:\n        return getWorkflow();\n      }\n      throw new IllegalStateException();\n    }\n    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */\n    public boolean isSet(_Fields field) {\n      if (field == null) {\n        throw new IllegalArgumentException();\n      }\n      switch (field) {\n      case WORKFLOW_TEMPLATE_ID:\n        return isSetWorkflowTemplateId();\n      case WORKFLOW:\n        return isSetWorkflow();\n      }\n      throw new IllegalStateException();\n    }\n    @Override\n    public boolean equals(Object that) {\n      if (that == null)\n        return false;\n      if (that instanceof updateWorkflow_args)\n        return this.equals((updateWorkflow_args)that);\n      return false;\n    }\n    public boolean equals(updateWorkflow_args that) {\n      if (that == null)\n        return false;\n      boolean this_present_workflowTemplateId = true && this.isSetWorkflowTemplateId();\n      boolean that_present_workflowTemplateId = true && that.isSetWorkflowTemplateId();\n      if (this_present_workflowTemplateId || that_present_workflowTemplateId) {\n        if (!(this_present_workflowTemplateId && that_present_workflowTemplateId))\n          return false;\n        if (!this.workflowTemplateId.equals(that.workflowTemplateId))\n          return false;\n      }\n      boolean this_present_workflow = true && this.isSetWorkflow();\n      boolean that_present_workflow = true && that.isSetWorkflow();\n      if (this_present_workflow || that_present_workflow) {\n        if (!(this_present_workflow && that_present_workflow))\n          return false;\n        if (!this.workflow.equals(that.workflow))\n          return false;\n      }\n      return true;\n    }\n    @Override\n    public int hashCode() {\n      List<Object> list = new ArrayList<Object>();\n      boolean present_workflowTemplateId = true && (isSetWorkflowTemplateId());\n      list.add(present_workflowTemplateId);\n      if (present_workflowTemplateId)\n        list.add(workflowTemplateId);\n      boolean present_workflow = true && (isSetWorkflow());\n      list.add(present_workflow);\n      if (present_workflow)\n        list.add(workflow);\n      return list.hashCode();\n    }\n    @Override\n    public int compareTo(updateWorkflow_args other) {\n      if (!getClass().equals(other.getClass())) {\n        return getClass().getName().compareTo(other.getClass().getName());\n      }\n      int lastComparison = 0;\n      lastComparison = Boolean.valueOf(isSetWorkflowTemplateId()).compareTo(other.isSetWorkflowTemplateId());\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n      if (isSetWorkflowTemplateId()) {\n        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.workflowTemplateId, other.workflowTemplateId);\n        if (lastComparison != 0) {\n          return lastComparison;\n        }\n      }\n      lastComparison = Boolean.valueOf(isSetWorkflow()).compareTo(other.isSetWorkflow());\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n      if (isSetWorkflow()) {\n        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.workflow, other.workflow);\n        if (lastComparison != 0) {\n          return lastComparison;\n        }\n      }\n      return 0;\n    }\n    public _Fields fieldForId(int fieldId) {\n      return _Fields.findByThriftId(fieldId);\n    }\n    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {\n      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);\n    }\n    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {\n      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);\n    }\n    @Override\n    public String toString() {\n      StringBuilder sb = new StringBuilder(\"updateWorkflow_args(\");\n      boolean first = true;\n      sb.append(\"workflowTemplateId:\");\n      if (this.workflowTemplateId == null) {\n        sb.append(\"null\");\n      } else {\n        sb.append(this.workflowTemplateId);\n      }\n      first = false;\n      if (!first) sb.append(\", \");\n      sb.append(\"workflow:\");\n      if (this.workflow == null) {\n        sb.append(\"null\");\n      } else {\n        sb.append(this.workflow);\n      }\n      first = false;\n      sb.append(\")\");\n      return sb.toString();\n    }\n    public void validate() throws org.apache.thrift.TException {\n      // check for required fields\n      if (workflowTemplateId == null) {\n        throw new org.apache.thrift.protocol.TProtocolException(\"Required field 'workflowTemplateId' was not present! Struct: \" + toString());\n      }\n      if (workflow == null) {\n        throw new org.apache.thrift.protocol.TProtocolException(\"Required field 'workflow' was not present! Struct: \" + toString());\n      }\n      // check for sub-struct validity\n      if (workflow != null) {\n        workflow.validate();\n      }\n    }\n    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {\n      try {\n        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));\n      } catch (org.apache.thrift.TException te) {\n        throw new java.io.IOException(te);\n      }\n    }\n    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {\n      try {\n        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));\n      } catch (org.apache.thrift.TException te) {\n        throw new java.io.IOException(te);\n      }\n    }\n<fim_suffix>    private static class updateWorkflow_argsStandardSchemeFactory implements SchemeFactory {\n      public updateWorkflow_argsStandardScheme getScheme() {\n        return new updateWorkflow_argsStandardScheme();\n      }\n    }<fim_middle>// class below has no smell\n"}