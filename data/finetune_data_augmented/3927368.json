{"text": "<fim_prefix>        return this.equals((cancelCompaction_args)that);\n      return false;\n    }\n    public boolean equals(cancelCompaction_args that) {\n      if (that == null)\n        return false;\n      if (this == that)\n        return true;\n      boolean this_present_login = true && this.isSetLogin();\n      boolean that_present_login = true && that.isSetLogin();\n      if (this_present_login || that_present_login) {\n        if (!(this_present_login && that_present_login))\n          return false;\n        if (!this.login.equals(that.login))\n          return false;\n      }\n      boolean this_present_tableName = true && this.isSetTableName();\n      boolean that_present_tableName = true && that.isSetTableName();\n      if (this_present_tableName || that_present_tableName) {\n        if (!(this_present_tableName && that_present_tableName))\n          return false;\n        if (!this.tableName.equals(that.tableName))\n          return false;\n      }\n      return true;\n    }\n    @Override\n    public int hashCode() {\n      int hashCode = 1;\n      hashCode = hashCode * 8191 + ((isSetLogin()) ? 131071 : 524287);\n      if (isSetLogin())\n        hashCode = hashCode * 8191 + login.hashCode();\n      hashCode = hashCode * 8191 + ((isSetTableName()) ? 131071 : 524287);\n      if (isSetTableName())\n        hashCode = hashCode * 8191 + tableName.hashCode();\n      return hashCode;\n    }\n    @Override\n    public int compareTo(cancelCompaction_args other) {\n      if (!getClass().equals(other.getClass())) {\n        return getClass().getName().compareTo(other.getClass().getName());\n      }\n      int lastComparison = 0;\n      lastComparison = java.lang.Boolean.valueOf(isSetLogin()).compareTo(other.isSetLogin());\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n      if (isSetLogin()) {\n        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.login, other.login);\n        if (lastComparison != 0) {\n          return lastComparison;\n        }\n      }\n      lastComparison = java.lang.Boolean.valueOf(isSetTableName()).compareTo(other.isSetTableName());\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n      if (isSetTableName()) {\n        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.tableName, other.tableName);\n        if (lastComparison != 0) {\n          return lastComparison;\n        }\n      }\n      return 0;\n    }\n    @org.apache.thrift.annotation.Nullable\n    public _Fields fieldForId(int fieldId) {\n      return _Fields.findByThriftId(fieldId);\n    }\n    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {\n      scheme(iprot).read(iprot, this);\n    }\n    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {\n      scheme(oprot).write(oprot, this);\n    }\n    @Override\n    public java.lang.String toString() {\n      java.lang.StringBuilder sb = new java.lang.StringBuilder(\"cancelCompaction_args(\");\n      boolean first = true;\n      sb.append(\"login:\");\n      if (this.login == null) {\n        sb.append(\"null\");\n      } else {\n        org.apache.thrift.TBaseHelper.toString(this.login, sb);\n      }\n      first = false;\n      if (!first) sb.append(\", \");\n      sb.append(\"tableName:\");\n      if (this.tableName == null) {\n        sb.append(\"null\");\n      } else {\n        sb.append(this.tableName);\n      }\n      first = false;\n      sb.append(\")\");\n      return sb.toString();\n    }\n    public void validate() throws org.apache.thrift.TException {\n      // check for required fields\n      // check for sub-struct validity\n    }\n    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {\n      try {\n        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));\n      } catch (org.apache.thrift.TException te) {\n        throw new java.io.IOException(te);\n      }\n    }\n    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {\n      try {\n        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));\n      } catch (org.apache.thrift.TException te) {\n        throw new java.io.IOException(te);\n      }\n    }\n    private static class cancelCompaction_argsStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {\n      public cancelCompaction_argsStandardScheme getScheme() {\n        return new cancelCompaction_argsStandardScheme();\n      }\n    }\n    private static class cancelCompaction_argsStandardScheme extends org.apache.thrift.scheme.StandardScheme<cancelCompaction_args> {\n      public void read(org.apache.thrift.protocol.TProtocol iprot, cancelCompaction_args struct) throws org.apache.thrift.TException {\n        org.apache.thrift.protocol.TField schemeField;\n        iprot.readStructBegin();\n        while (true)\n        {\n          schemeField = iprot.readFieldBegin();\n          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { \n            break;\n          }\n          switch (schemeField.id) {\n            case 1: // LOGIN\n              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {\n                struct.login = iprot.readBinary();\n                struct.setLoginIsSet(true);\n              } else { \n                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);\n              }\n              break;\n            case 2: // TABLE_NAME\n              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {\n                struct.tableName = iprot.readString();\n                struct.setTableNameIsSet(true);\n              } else { \n                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);\n              }\n              break;\n            default:\n              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);\n          }\n          iprot.readFieldEnd();\n        }\n        iprot.readStructEnd();\n        // check for required fields of primitive type, which can't be checked in the validate method\n        struct.validate();\n      }\n      public void write(org.apache.thrift.protocol.TProtocol oprot, cancelCompaction_args struct) throws org.apache.thrift.TException {\n        struct.validate();\n        oprot.writeStructBegin(STRUCT_DESC);\n        if (struct.login != null) {\n          oprot.writeFieldBegin(LOGIN_FIELD_DESC);\n          oprot.writeBinary(struct.login);\n          oprot.writeFieldEnd();\n        }\n        if (struct.tableName != null) {\n          oprot.writeFieldBegin(TABLE_NAME_FIELD_DESC);\n          oprot.writeString(struct.tableName);\n          oprot.writeFieldEnd();\n        }\n        oprot.writeFieldStop();\n        oprot.writeStructEnd();\n      }\n    }\n    private static class cancelCompaction_argsTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {\n      public cancelCompaction_argsTupleScheme getScheme() {\n        return new cancelCompaction_argsTupleScheme();\n      }\n    }\n    private static class cancelCompaction_argsTupleScheme extends org.apache.thrift.scheme.TupleScheme<cancelCompaction_args> {\n      @Override\n      public void write(org.apache.thrift.protocol.TProtocol prot, cancelCompaction_args struct) throws org.apache.thrift.TException {\n        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;\n        java.util.BitSet optionals = new java.util.BitSet();\n        if (struct.isSetLogin()) {\n          optionals.set(0);\n        }\n        if (struct.isSetTableName()) {\n          optionals.set(1);\n        }\n        oprot.writeBitSet(optionals, 2);\n        if (struct.isSetLogin()) {\n          oprot.writeBinary(struct.login);\n        }\n        if (struct.isSetTableName()) {\n          oprot.writeString(struct.tableName);\n        }\n      }\n<fim_suffix>      @Override\n      public void read(org.apache.thrift.protocol.TProtocol prot, cancelCompaction_args struct) throws org.apache.thrift.TException {\n        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;\n        java.util.BitSet incoming = iprot.readBitSet(2);\n        if (incoming.get(0)) {\n          struct.login = iprot.readBinary();\n          struct.setLoginIsSet(true);\n        }\n        if (incoming.get(1)) {\n          struct.tableName = iprot.readString();\n          struct.setTableNameIsSet(true);\n        }\n      }<fim_middle>// function below is feature envy\n"}