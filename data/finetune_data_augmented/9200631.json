{"text": "<fim_prefix>/*******************************************************************************\n * Copyright (c) 2010 Actuate Corporation.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *  Actuate Corporation  - initial API and implementation\n *******************************************************************************/\npackage org.eclipse.birt.report.engine.emitter.config.odt;\n\nimport org.eclipse.birt.report.engine.api.IRenderOption;\nimport org.eclipse.birt.report.engine.api.RenderOption;\nimport org.eclipse.birt.report.engine.emitter.config.AbstractConfigurableOptionObserver;\nimport org.eclipse.birt.report.engine.emitter.config.AbstractEmitterDescriptor;\nimport org.eclipse.birt.report.engine.emitter.config.ConfigurableOption;\nimport org.eclipse.birt.report.engine.emitter.config.IConfigurableOption;\nimport org.eclipse.birt.report.engine.emitter.config.IConfigurableOptionObserver;\nimport org.eclipse.birt.report.engine.emitter.config.IOptionValue;\nimport org.eclipse.birt.report.engine.emitter.config.odt.i18n.Messages;\n\n/**\n * This class is a descriptor of word emitter.\n */\npublic class OdtEmitterDescriptor extends AbstractEmitterDescriptor\n{\n\tprotected static final String CHART_DPI = \"ChartDpi\";\n\n\tprotected void initOptions( )\n\t{\n\t\tloadDefaultValues( \"org.eclipse.birt.report.engine.emitter.config.odt\" );\n\t\t// Initializes the option for chart DPI.\n\t\tConfigurableOption chartDpi = new ConfigurableOption( CHART_DPI );\n\t\tchartDpi.setDisplayName( getMessage( \"OptionDisplayValue.ChartDpi\" ) ); //$NON-NLS-1$\n\t\tchartDpi.setDataType( IConfigurableOption.DataType.INTEGER );\n\t\tchartDpi.setDisplayType( IConfigurableOption.DisplayType.TEXT );\n\t\tchartDpi.setDefaultValue( new Integer( 192 ) );\n\t\tchartDpi\n\t\t\t\t.setToolTip( \"The DPI which chart engine uses to generate charts. For example, 192.\" );\n\t\tchartDpi.setDescription( getMessage( \"OptionDescription.ChartDpi\" ) ); //$NON-NLS-1$\n\n\t\toptions = new IConfigurableOption[]{chartDpi};\n\t\tapplyDefaultValues( );\n\t}\n\n\tprivate String getMessage( String key )\n\t{\n\t\treturn Messages.getString( key, locale );\n\t}\n\n\t@Override\n\tpublic IConfigurableOptionObserver createOptionObserver( )\n\t{\n\t\treturn new WordOptionObserver( );\n\t}\n\n\t/*\n\t * (non-Javadoc)\n\t * \n\t * @seeorg.eclipse.birt.report.engine.emitter.config.IEmitterDescriptor#\n\t * getDescription()\n\t */\n\tpublic String getDescription( )\n\t{\n\t\treturn getMessage( \"OdtEmitter.Description\" ); //$NON-NLS-1$\n\t}\n\n\t/*\n\t * (non-Javadoc)\n\t * \n\t * @seeorg.eclipse.birt.report.engine.emitter.config.IEmitterDescriptor#\n\t * getDisplayName()\n\t */\n\tpublic String getDisplayName( )\n\t{\n\t\treturn getMessage( \"OdtEmitter.DisplayName\" ); //$NON-NLS-1$\n\t}\n\n\t/*\n\t * (non-Javadoc)\n\t * \n\t * @see\n\t * org.eclipse.birt.report.engine.emitter.config.IEmitterDescriptor#getID()\n\t */\n\tpublic String getID( )\n\t{\n\t\treturn \"org.eclipse.birt.report.engine.emitter.odt\"; //$NON-NLS-1$\n\t}\n\t\n\tpublic String getRenderOptionName( String name )\n\t{\n\t\tassert name != null;\n\t\tif ( CHART_DPI.equals( name ) )\n\t\t{\n\t\t\treturn IRenderOption.CHART_DPI;\n\t\t}\n\t\treturn name;\n\t}\n\n<fim_suffix>\tclass WordOptionObserver extends AbstractConfigurableOptionObserver\n\t{\n\n\t\t@Override\n\t\tpublic IConfigurableOption[] getOptions( )\n\t\t{\n\t\t\treturn options;\n\t\t}\n\n\t\t@Override\n\t\tpublic IRenderOption getPreferredRenderOption( )\n\t\t{\n\t\t\tRenderOption renderOption = new RenderOption( );\n\n\t\t\trenderOption.setEmitterID( getID( ) );\n\t\t\trenderOption.setOutputFormat( \"odt\" ); //$NON-NLS-1$\n\n\t\t\tif ( values != null && values.length > 0 )\n\t\t\t{\n\t\t\t\tfor ( IOptionValue optionValue : values )\n\t\t\t\t{\n\t\t\t\t\tif ( optionValue != null )\n\t\t\t\t\t{\n\t\t\t\t\t\trenderOption.setOption(\n\t\t\t\t\t\t\t\tgetRenderOptionName( optionValue.getName( ) ),\n\t\t\t\t\t\t\t\toptionValue.getValue( ) );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn renderOption;\n\t\t}\n\t}\n\n}<fim_middle>// class below has no smell\n"}