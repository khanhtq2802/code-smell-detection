{"text": "<fim_prefix>      return lastResponse;\n    }\n    public static final String[] PARAMS = {\n      \"metric_key\",\n      \"period\",\n      \"since\",\n      \"until\",\n      \"breakdowns\",\n      \"aggregateBy\",\n      \"event_name\",\n      \"ecosystem\",\n      \"intervals_to_aggregate\",\n    };\n    public static final String[] FIELDS = {\n    };\n    @Override\n    public APINodeList<APINode> parseResponse(String response, String header) throws APIException {\n      return APINode.parseResponse(response, getContext(), this, header);\n    }\n    @Override\n    public APINodeList<APINode> execute() throws APIException {\n      return execute(new HashMap<String, Object>());\n    }\n    @Override\n    public APINodeList<APINode> execute(Map<String, Object> extraParams) throws APIException {\n      ResponseWrapper rw = executeInternal(extraParams);\n      lastResponse = parseResponse(rw.getBody(),rw.getHeader());\n      return lastResponse;\n    }\n    public ListenableFuture<APINodeList<APINode>> executeAsync() throws APIException {\n      return executeAsync(new HashMap<String, Object>());\n    };\n    public ListenableFuture<APINodeList<APINode>> executeAsync(Map<String, Object> extraParams) throws APIException {\n      return Futures.transform(\n        executeAsyncInternal(extraParams),\n        new Function<ResponseWrapper, APINodeList<APINode>>() {\n           public APINodeList<APINode> apply(ResponseWrapper result) {\n             try {\n               return APIRequestGetAppInsights.this.parseResponse(result.getBody(), result.getHeader());\n             } catch (Exception e) {\n               throw new RuntimeException(e);\n             }\n           }\n         }\n      );\n    };\n    public APIRequestGetAppInsights(String nodeId, APIContext context) {\n      super(context, nodeId, \"/app_insights\", \"GET\", Arrays.asList(PARAMS));\n    }\n    @Override\n    public APIRequestGetAppInsights setParam(String param, Object value) {\n      setParamInternal(param, value);\n      return this;\n    }\n    @Override\n    public APIRequestGetAppInsights setParams(Map<String, Object> params) {\n      setParamsInternal(params);\n      return this;\n    }\n    public APIRequestGetAppInsights setMetricKey (String metricKey) {\n      this.setParam(\"metric_key\", metricKey);\n      return this;\n    }\n    public APIRequestGetAppInsights setPeriod (EnumPeriod period) {\n      this.setParam(\"period\", period);\n      return this;\n    }\n    public APIRequestGetAppInsights setPeriod (String period) {\n      this.setParam(\"period\", period);\n      return this;\n    }\n    public APIRequestGetAppInsights setSince (String since) {\n      this.setParam(\"since\", since);\n      return this;\n    }\n    public APIRequestGetAppInsights setUntil (String until) {\n      this.setParam(\"until\", until);\n      return this;\n    }\n    public APIRequestGetAppInsights setBreakdowns (List<String> breakdowns) {\n      this.setParam(\"breakdowns\", breakdowns);\n      return this;\n    }\n    public APIRequestGetAppInsights setBreakdowns (String breakdowns) {\n      this.setParam(\"breakdowns\", breakdowns);\n      return this;\n    }\n    public APIRequestGetAppInsights setAggregateby (EnumAggregateby aggregateby) {\n      this.setParam(\"aggregateBy\", aggregateby);\n      return this;\n    }\n    public APIRequestGetAppInsights setAggregateby (String aggregateby) {\n      this.setParam(\"aggregateBy\", aggregateby);\n      return this;\n    }\n    public APIRequestGetAppInsights setEventName (String eventName) {\n      this.setParam(\"event_name\", eventName);\n      return this;\n    }\n    public APIRequestGetAppInsights setEcosystem (EnumEcosystem ecosystem) {\n      this.setParam(\"ecosystem\", ecosystem);\n      return this;\n    }\n    public APIRequestGetAppInsights setEcosystem (String ecosystem) {\n      this.setParam(\"ecosystem\", ecosystem);\n      return this;\n    }\n    public APIRequestGetAppInsights setIntervalsToAggregate (Long intervalsToAggregate) {\n      this.setParam(\"intervals_to_aggregate\", intervalsToAggregate);\n      return this;\n    }\n    public APIRequestGetAppInsights setIntervalsToAggregate (String intervalsToAggregate) {\n      this.setParam(\"intervals_to_aggregate\", intervalsToAggregate);\n      return this;\n    }\n    public APIRequestGetAppInsights requestAllFields () {\n      return this.requestAllFields(true);\n    }\n    public APIRequestGetAppInsights requestAllFields (boolean value) {\n      for (String field : FIELDS) {\n        this.requestField(field, value);\n      }\n      return this;\n    }\n    @Override\n    public APIRequestGetAppInsights requestFields (List<String> fields) {\n      return this.requestFields(fields, true);\n    }\n    @Override\n    public APIRequestGetAppInsights requestFields (List<String> fields, boolean value) {\n      for (String field : fields) {\n        this.requestField(field, value);\n      }\n      return this;\n    }\n    @Override\n    public APIRequestGetAppInsights requestField (String field) {\n      this.requestField(field, true);\n      return this;\n    }\n    @Override\n    public APIRequestGetAppInsights requestField (String field, boolean value) {\n      this.requestFieldInternal(field, value);\n      return this;\n    }\n  }\n  public static class APIRequestGetAppInstalledGroups extends APIRequest<Group> {\n    APINodeList<Group> lastResponse = null;\n    @Override\n    public APINodeList<Group> getLastResponse() {\n      return lastResponse;\n    }\n    public static final String[] PARAMS = {\n      \"group_id\",\n    };\n    public static final String[] FIELDS = {\n      \"archived\",\n      \"cover\",\n      \"created_time\",\n      \"description\",\n      \"email\",\n      \"icon\",\n      \"id\",\n      \"link\",\n      \"member_count\",\n      \"member_request_count\",\n      \"name\",\n      \"owner\",\n      \"parent\",\n      \"permissions\",\n      \"privacy\",\n      \"purpose\",\n      \"subdomain\",\n      \"updated_time\",\n      \"venue\",\n    };\n    @Override\n    public APINodeList<Group> parseResponse(String response, String header) throws APIException {\n      return Group.parseResponse(response, getContext(), this, header);\n    }\n    @Override\n    public APINodeList<Group> execute() throws APIException {\n      return execute(new HashMap<String, Object>());\n    }\n    @Override\n    public APINodeList<Group> execute(Map<String, Object> extraParams) throws APIException {\n      ResponseWrapper rw = executeInternal(extraParams);\n      lastResponse = parseResponse(rw.getBody(),rw.getHeader());\n      return lastResponse;\n    }\n    public ListenableFuture<APINodeList<Group>> executeAsync() throws APIException {\n      return executeAsync(new HashMap<String, Object>());\n    };\n    public ListenableFuture<APINodeList<Group>> executeAsync(Map<String, Object> extraParams) throws APIException {\n      return Futures.transform(\n        executeAsyncInternal(extraParams),\n        new Function<ResponseWrapper, APINodeList<Group>>() {\n           public APINodeList<Group> apply(ResponseWrapper result) {\n             try {\n               return APIRequestGetAppInstalledGroups.this.parseResponse(result.getBody(), result.getHeader());\n             } catch (Exception e) {\n               throw new RuntimeException(e);\n             }\n           }\n         }\n      );\n    };\n    public APIRequestGetAppInstalledGroups(String nodeId, APIContext context) {\n      super(context, nodeId, \"/app_installed_groups\", \"GET\", Arrays.asList(PARAMS));\n    }\n    @Override\n    public APIRequestGetAppInstalledGroups setParam(String param, Object value) {\n      setParamInternal(param, value);\n      return this;\n    }\n    @Override\n    public APIRequestGetAppInstalledGroups setParams(Map<String, Object> params) {\n      setParamsInternal(params);\n      return this;\n    }\n    public APIRequestGetAppInstalledGroups setGroupId (String groupId) {\n      this.setParam(\"group_id\", groupId);\n      return this;\n    }\n    public APIRequestGetAppInstalledGroups requestAllFields () {\n      return this.requestAllFields(true);\n    }\n    public APIRequestGetAppInstalledGroups requestAllFields (boolean value) {\n      for (String field : FIELDS) {\n        this.requestField(field, value);\n      }\n      return this;\n    }\n    @Override\n    public APIRequestGetAppInstalledGroups requestFields (List<String> fields) {\n      return this.requestFields(fields, true);\n    }\n<fim_suffix>    @Override\n    public APIRequestGetAppInstalledGroups requestFields (List<String> fields, boolean value) {\n      for (String field : fields) {\n        this.requestField(field, value);\n      }\n      return this;\n    }<fim_middle>// function below has no smell\n"}