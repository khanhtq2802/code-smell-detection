{"text": "<fim_prefix>      public static _Fields findByName(java.lang.String name) {\n        return byName.get(name);\n      }\n      private final short _thriftId;\n      private final java.lang.String _fieldName;\n      _Fields(short thriftId, java.lang.String fieldName) {\n        _thriftId = thriftId;\n        _fieldName = fieldName;\n      }\n      public short getThriftFieldId() {\n        return _thriftId;\n      }\n      public java.lang.String getFieldName() {\n        return _fieldName;\n      }\n    }\n    // isset id assignments\n    private static final int __TIMESTAMP_ISSET_ID = 0;\n    private byte __isset_bitfield = 0;\n    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;\n    static {\n      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);\n      tmpMap.put(_Fields.TABLE_NAME, new org.apache.thrift.meta_data.FieldMetaData(\"tableName\", org.apache.thrift.TFieldRequirementType.DEFAULT, \n          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING          , \"Text\")));\n      tmpMap.put(_Fields.START_ROW, new org.apache.thrift.meta_data.FieldMetaData(\"startRow\", org.apache.thrift.TFieldRequirementType.DEFAULT, \n          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING          , \"Text\")));\n      tmpMap.put(_Fields.COLUMNS, new org.apache.thrift.meta_data.FieldMetaData(\"columns\", org.apache.thrift.TFieldRequirementType.DEFAULT, \n          new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, \n              new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING              , \"Text\"))));\n      tmpMap.put(_Fields.TIMESTAMP, new org.apache.thrift.meta_data.FieldMetaData(\"timestamp\", org.apache.thrift.TFieldRequirementType.DEFAULT, \n          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));\n      tmpMap.put(_Fields.ATTRIBUTES, new org.apache.thrift.meta_data.FieldMetaData(\"attributes\", org.apache.thrift.TFieldRequirementType.DEFAULT, \n          new org.apache.thrift.meta_data.MapMetaData(org.apache.thrift.protocol.TType.MAP, \n              new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING              , \"Text\"), \n              new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING              , \"Text\"))));\n      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);\n      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(scannerOpenTs_args.class, metaDataMap);\n    }\n    public scannerOpenTs_args() {\n    }\n    public scannerOpenTs_args(\n      java.nio.ByteBuffer tableName,\n      java.nio.ByteBuffer startRow,\n      java.util.List<java.nio.ByteBuffer> columns,\n      long timestamp,\n      java.util.Map<java.nio.ByteBuffer,java.nio.ByteBuffer> attributes)\n    {\n      this();\n      this.tableName = org.apache.thrift.TBaseHelper.copyBinary(tableName);\n      this.startRow = org.apache.thrift.TBaseHelper.copyBinary(startRow);\n      this.columns = columns;\n      this.timestamp = timestamp;\n      setTimestampIsSet(true);\n      this.attributes = attributes;\n    }\n    /**\n     * Performs a deep copy on <i>other</i>.\n     */\n    public scannerOpenTs_args(scannerOpenTs_args other) {\n      __isset_bitfield = other.__isset_bitfield;\n      if (other.isSetTableName()) {\n        this.tableName = org.apache.thrift.TBaseHelper.copyBinary(other.tableName);\n      }\n      if (other.isSetStartRow()) {\n        this.startRow = org.apache.thrift.TBaseHelper.copyBinary(other.startRow);\n      }\n      if (other.isSetColumns()) {\n        java.util.List<java.nio.ByteBuffer> __this__columns = new java.util.ArrayList<java.nio.ByteBuffer>(other.columns.size());\n        for (java.nio.ByteBuffer other_element : other.columns) {\n          __this__columns.add(org.apache.thrift.TBaseHelper.copyBinary(other_element));\n        }\n        this.columns = __this__columns;\n      }\n      this.timestamp = other.timestamp;\n      if (other.isSetAttributes()) {\n        java.util.Map<java.nio.ByteBuffer,java.nio.ByteBuffer> __this__attributes = new java.util.HashMap<java.nio.ByteBuffer,java.nio.ByteBuffer>(other.attributes.size());\n        for (java.util.Map.Entry<java.nio.ByteBuffer, java.nio.ByteBuffer> other_element : other.attributes.entrySet()) {\n          java.nio.ByteBuffer other_element_key = other_element.getKey();\n          java.nio.ByteBuffer other_element_value = other_element.getValue();\n          java.nio.ByteBuffer __this__attributes_copy_key = org.apache.thrift.TBaseHelper.copyBinary(other_element_key);\n          java.nio.ByteBuffer __this__attributes_copy_value = org.apache.thrift.TBaseHelper.copyBinary(other_element_value);\n          __this__attributes.put(__this__attributes_copy_key, __this__attributes_copy_value);\n        }\n        this.attributes = __this__attributes;\n      }\n    }\n    public scannerOpenTs_args deepCopy() {\n      return new scannerOpenTs_args(this);\n    }\n    @Override\n    public void clear() {\n      this.tableName = null;\n      this.startRow = null;\n      this.columns = null;\n      setTimestampIsSet(false);\n      this.timestamp = 0;\n      this.attributes = null;\n    }\n    /**\n     * name of table\n     */\n    public byte[] getTableName() {\n      setTableName(org.apache.thrift.TBaseHelper.rightSize(tableName));\n      return tableName == null ? null : tableName.array();\n    }\n    public java.nio.ByteBuffer bufferForTableName() {\n      return org.apache.thrift.TBaseHelper.copyBinary(tableName);\n    }\n    /**\n     * name of table\n     */\n    public scannerOpenTs_args setTableName(byte[] tableName) {\n      this.tableName = tableName == null ? (java.nio.ByteBuffer)null     : java.nio.ByteBuffer.wrap(tableName.clone());\n      return this;\n    }\n    public scannerOpenTs_args setTableName(@org.apache.thrift.annotation.Nullable java.nio.ByteBuffer tableName) {\n      this.tableName = org.apache.thrift.TBaseHelper.copyBinary(tableName);\n      return this;\n    }\n    public void unsetTableName() {\n      this.tableName = null;\n    }\n    /** Returns true if field tableName is set (has been assigned a value) and false otherwise */\n    public boolean isSetTableName() {\n      return this.tableName != null;\n    }\n    public void setTableNameIsSet(boolean value) {\n      if (!value) {\n        this.tableName = null;\n      }\n    }\n    /**\n     * Starting row in table to scan.\n     * Send \"\" (empty string) to start at the first row.\n     */\n    public byte[] getStartRow() {\n      setStartRow(org.apache.thrift.TBaseHelper.rightSize(startRow));\n      return startRow == null ? null : startRow.array();\n    }\n    public java.nio.ByteBuffer bufferForStartRow() {\n      return org.apache.thrift.TBaseHelper.copyBinary(startRow);\n    }\n    /**\n     * Starting row in table to scan.\n     * Send \"\" (empty string) to start at the first row.\n     */\n    public scannerOpenTs_args setStartRow(byte[] startRow) {\n      this.startRow = startRow == null ? (java.nio.ByteBuffer)null     : java.nio.ByteBuffer.wrap(startRow.clone());\n      return this;\n    }\n    public scannerOpenTs_args setStartRow(@org.apache.thrift.annotation.Nullable java.nio.ByteBuffer startRow) {\n      this.startRow = org.apache.thrift.TBaseHelper.copyBinary(startRow);\n      return this;\n    }\n    public void unsetStartRow() {\n      this.startRow = null;\n    }\n    /** Returns true if field startRow is set (has been assigned a value) and false otherwise */\n    public boolean isSetStartRow() {\n      return this.startRow != null;\n    }\n<fim_suffix>    public void setStartRowIsSet(boolean value) {\n      if (!value) {\n        this.startRow = null;\n      }\n    }<fim_middle>// function below has no smell\n"}