{"text": "<fim_prefix>/**\n * Copyright (c) 2016, 2019, Oracle and/or its affiliates. All rights reserved.\n */\nimport com.oracle.bmc.Region;\nimport com.oracle.bmc.auth.AuthenticationDetailsProvider;\nimport com.oracle.bmc.auth.ConfigFileAuthenticationDetailsProvider;\nimport com.oracle.bmc.database.DatabaseClient;\nimport com.oracle.bmc.database.DatabaseWaiters;\nimport com.oracle.bmc.database.model.AutonomousDataWarehouse;\nimport com.oracle.bmc.database.model.CreateAutonomousDataWarehouseDetails;\nimport com.oracle.bmc.database.model.GenerateAutonomousDataWarehouseWalletDetails;\nimport com.oracle.bmc.database.model.UpdateAutonomousDataWarehouseDetails;\nimport com.oracle.bmc.database.requests.CreateAutonomousDataWarehouseRequest;\nimport com.oracle.bmc.database.requests.DeleteAutonomousDataWarehouseRequest;\nimport com.oracle.bmc.database.requests.GetAutonomousDataWarehouseRequest;\nimport com.oracle.bmc.database.requests.StartAutonomousDataWarehouseRequest;\nimport com.oracle.bmc.database.requests.StopAutonomousDataWarehouseRequest;\nimport com.oracle.bmc.database.requests.UpdateAutonomousDataWarehouseRequest;\nimport com.oracle.bmc.database.responses.CreateAutonomousDataWarehouseResponse;\nimport com.oracle.bmc.database.responses.GetAutonomousDataWarehouseResponse;\nimport com.oracle.bmc.database.responses.UpdateAutonomousDataWarehouseResponse;\nimport com.oracle.bmc.database.responses.GenerateAutonomousDataWarehouseWalletResponse;\nimport com.oracle.bmc.database.requests.GenerateAutonomousDataWarehouseWalletRequest;\nimport java.util.zip.ZipInputStream;\nimport java.io.InputStream;\nimport java.util.Random;\npublic class AutonomousDatawarehouseExample {\n    public static void main(String[] args) throws Exception {\n        String configurationFilePath = \"~/.oci/config\";\n        String profile = \"DEFAULT\";\n        // TODO: Fill in these values\n        String compartmentId = args[0];\n        String password = args[1];\n        AuthenticationDetailsProvider provider =\n                new ConfigFileAuthenticationDetailsProvider(configurationFilePath, profile);\n        DatabaseClient dbClient = new DatabaseClient(provider);\n        dbClient.setRegion(Region.US_PHOENIX_1);\n        // Create\n        CreateAutonomousDataWarehouseDetails createRequest = createAdwRequest(compartmentId);\n        System.out.println(\"Creating Autonomous Datawarehouse with request : \" + createRequest);\n        AutonomousDataWarehouse adw = createADW(dbClient, createRequest);\n        System.out.println(\"ADW instance is provisioning : \" + adw);\n        adw = waitForInstanceToBecomeAvailable(dbClient, adw.getId());\n        System.out.println(\"Instance is provisioned:\" + adw);\n        // Get\n        adw =\n                dbClient.getAutonomousDataWarehouse(\n                                GetAutonomousDataWarehouseRequest.builder()\n                                        .autonomousDataWarehouseId(adw.getId())\n                                        .build())\n                        .getAutonomousDataWarehouse();\n        System.out.println(\"GET request returned :\" + adw);\n        // Scale\n        UpdateAutonomousDataWarehouseDetails updateRequest = scaleAdwRequest();\n        System.out.println(\"Updating Autonomous Datawarehouse with request : \" + updateRequest);\n        AutonomousDataWarehouse updatedAdw = updateADW(dbClient, updateRequest, adw.getId());\n        System.out.println(\"ADW instance is scaling : \" + updatedAdw);\n        updatedAdw = waitForInstanceToBecomeAvailable(dbClient, adw.getId());\n        System.out.println(\"Instance is updated:\" + updatedAdw);\n        // Update Display Name\n        updateRequest = updateDisplayNameAdwRequest();\n        System.out.println(\"Updating Autonomous Datawarehouse with request : \" + updateRequest);\n        updatedAdw = updateADW(dbClient, updateRequest, adw.getId());\n        System.out.println(\"Instance is updated:\" + updatedAdw);\n        // Stop\n        System.out.println(\"Stopping Autonomous Datawarehouse Shared : \" + updatedAdw);\n        adw =\n                dbClient.stopAutonomousDataWarehouse(\n                                StopAutonomousDataWarehouseRequest.builder()\n                                        .autonomousDataWarehouseId(updatedAdw.getId())\n                                        .build())\n                        .getAutonomousDataWarehouse();\n        adw = waitForInstanceToBeStopped(dbClient, adw.getId());\n        System.out.println(\"Stopped Autonomous Datawarehouse Shared : \" + adw);\n        // Start\n        System.out.println(\"Starting Autonomous Datawarehouse Shared : \" + adw);\n        adw =\n                dbClient.startAutonomousDataWarehouse(\n                                StartAutonomousDataWarehouseRequest.builder()\n                                        .autonomousDataWarehouseId(updatedAdw.getId())\n                                        .build())\n                        .getAutonomousDataWarehouse();\n        adw = waitForInstanceToBecomeAvailable(dbClient, adw.getId());\n        System.out.println(\"Started Autonomous Datawarehouse Shared : \" + adw);\n        //download wallet\n        System.out.println(\"Downloading wallet for  : \" + adw);\n        GenerateAutonomousDataWarehouseWalletDetails adwWalletDetails =\n                createAdwWalletDetails(password);\n        GenerateAutonomousDataWarehouseWalletResponse adwWalletResponse =\n                generateADWWallet(dbClient, adwWalletDetails, adw.getId());\n        System.out.println(\n                \"Autonomous data warehouse downloaded wallet content length is : \"\n                        + adwWalletResponse.getContentLength());\n        ZipInputStream zin = new ZipInputStream(adwWalletResponse.getInputStream());\n        // Delete\n        System.out.println(\"Deleting Autonomous Datawarehouse Shared : \" + adw);\n        dbClient.deleteAutonomousDataWarehouse(\n                DeleteAutonomousDataWarehouseRequest.builder()\n                        .autonomousDataWarehouseId(updatedAdw.getId())\n                        .build());\n        DatabaseWaiters waiter = dbClient.getWaiters();\n        GetAutonomousDataWarehouseResponse response =\n                waiter.forAutonomousDataWarehouse(\n                                GetAutonomousDataWarehouseRequest.builder()\n                                        .autonomousDataWarehouseId(adw.getId())\n                                        .build(),\n                                AutonomousDataWarehouse.LifecycleState.Terminated)\n                        .execute();\n        dbClient.close();\n    }\n    public static AutonomousDataWarehouse createADW(\n            DatabaseClient dbClient, CreateAutonomousDataWarehouseDetails request) {\n        CreateAutonomousDataWarehouseResponse response =\n                dbClient.createAutonomousDataWarehouse(\n                        CreateAutonomousDataWarehouseRequest.builder()\n                                .createAutonomousDataWarehouseDetails(request)\n                                .build());\n        return response.getAutonomousDataWarehouse();\n    }\n    private static AutonomousDataWarehouse waitForInstanceToBecomeAvailable(\n            DatabaseClient dbClient, String id) throws Exception {\n        DatabaseWaiters waiter = dbClient.getWaiters();\n        GetAutonomousDataWarehouseResponse response =\n                waiter.forAutonomousDataWarehouse(\n                                GetAutonomousDataWarehouseRequest.builder()\n                                        .autonomousDataWarehouseId(id)\n                                        .build(),\n                                AutonomousDataWarehouse.LifecycleState.Available)\n                        .execute();\n        return response.getAutonomousDataWarehouse();\n    }\n    private static AutonomousDataWarehouse updateADW(\n            DatabaseClient dbClient,\n            UpdateAutonomousDataWarehouseDetails updateRequest,\n            String adwId) {\n        UpdateAutonomousDataWarehouseResponse response =\n                dbClient.updateAutonomousDataWarehouse(\n                        UpdateAutonomousDataWarehouseRequest.builder()\n                                .updateAutonomousDataWarehouseDetails(updateRequest)\n                                .autonomousDataWarehouseId(adwId)\n                                .build());\n        return response.getAutonomousDataWarehouse();\n    }\n    private static GenerateAutonomousDataWarehouseWalletResponse generateADWWallet(\n            DatabaseClient dbClient,\n            GenerateAutonomousDataWarehouseWalletDetails adwWalletDetails,\n            String adwId) {\n        GenerateAutonomousDataWarehouseWalletResponse response =\n                dbClient.generateAutonomousDataWarehouseWallet(\n                        GenerateAutonomousDataWarehouseWalletRequest.builder()\n                                .generateAutonomousDataWarehouseWalletDetails(adwWalletDetails)\n                                .autonomousDataWarehouseId(adwId)\n                                .build());\n        return response;\n    }\n<fim_suffix>    private static GenerateAutonomousDataWarehouseWalletDetails createAdwWalletDetails(\n            String password) {\n        return GenerateAutonomousDataWarehouseWalletDetails.builder().password(password).build();\n    }\n    private static AutonomousDataWarehouse waitForInstanceToBeStopped(\n            DatabaseClient dbClient, String id) throws Exception {\n        DatabaseWaiters waiter = dbClient.getWaiters();\n        GetAutonomousDataWarehouseResponse response =\n                waiter.forAutonomousDataWarehouse(\n                                GetAutonomousDataWarehouseRequest.builder()\n                                        .autonomousDataWarehouseId(id)\n                                        .build(),\n                                AutonomousDataWarehouse.LifecycleState.Stopped)\n                        .execute();\n        return response.getAutonomousDataWarehouse();\n    }\n    private static CreateAutonomousDataWarehouseDetails createAdwRequest(String compartmentId) {\n        Random rand = new Random();\n        return CreateAutonomousDataWarehouseDetails.builder()\n                .cpuCoreCount(1)\n                .dataStorageSizeInTBs(1)\n                .displayName(\"javaSdkExample\")\n                .adminPassword(\"DBaaS12345_#\")<fim_middle>// function below has no smell\n"}