{"text": "<fim_prefix>/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\npackage org.apache.tinkerpop.gremlin.process.traversal.step.sideEffect;\n\nimport org.apache.tinkerpop.gremlin.process.traversal.Traversal;\nimport org.apache.tinkerpop.gremlin.process.traversal.Traverser;\nimport org.apache.tinkerpop.gremlin.process.traversal.step.util.AbstractStep;\n\n/**\n * @author Marko A. Rodriguez (http://markorodriguez.com)\n */\n<fim_suffix>public abstract class SideEffectStep<S> extends AbstractStep<S, S> {\n\n    public SideEffectStep(final Traversal.Admin traversal) {\n        super(traversal);\n    }\n\n    protected abstract void sideEffect(final Traverser.Admin<S> traverser);\n\n    @Override\n    protected Traverser.Admin<S> processNextStart() {\n        final Traverser.Admin<S> traverser = this.starts.next();\n        this.sideEffect(traverser);\n        return traverser;\n    }\n}<fim_middle>// class below has no smell\n"}