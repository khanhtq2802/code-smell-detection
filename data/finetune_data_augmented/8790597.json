{"text": "<fim_prefix>        }\n        break;\n      }\n    }\n    public Object getFieldValue(_Fields field) {\n      switch (field) {\n      case AUTHZ_TOKEN:\n        return getAuthzToken();\n      case STORAGE_RESOURCE_DESCRIPTION:\n        return getStorageResourceDescription();\n      }\n      throw new IllegalStateException();\n    }\n    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */\n    public boolean isSet(_Fields field) {\n      if (field == null) {\n        throw new IllegalArgumentException();\n      }\n      switch (field) {\n      case AUTHZ_TOKEN:\n        return isSetAuthzToken();\n      case STORAGE_RESOURCE_DESCRIPTION:\n        return isSetStorageResourceDescription();\n      }\n      throw new IllegalStateException();\n    }\n    @Override\n    public boolean equals(Object that) {\n      if (that == null)\n        return false;\n      if (that instanceof registerStorageResource_args)\n        return this.equals((registerStorageResource_args)that);\n      return false;\n    }\n    public boolean equals(registerStorageResource_args that) {\n      if (that == null)\n        return false;\n      boolean this_present_authzToken = true && this.isSetAuthzToken();\n      boolean that_present_authzToken = true && that.isSetAuthzToken();\n      if (this_present_authzToken || that_present_authzToken) {\n        if (!(this_present_authzToken && that_present_authzToken))\n          return false;\n        if (!this.authzToken.equals(that.authzToken))\n          return false;\n      }\n      boolean this_present_storageResourceDescription = true && this.isSetStorageResourceDescription();\n      boolean that_present_storageResourceDescription = true && that.isSetStorageResourceDescription();\n      if (this_present_storageResourceDescription || that_present_storageResourceDescription) {\n        if (!(this_present_storageResourceDescription && that_present_storageResourceDescription))\n          return false;\n        if (!this.storageResourceDescription.equals(that.storageResourceDescription))\n          return false;\n      }\n      return true;\n    }\n    @Override\n    public int hashCode() {\n      List<Object> list = new ArrayList<Object>();\n      boolean present_authzToken = true && (isSetAuthzToken());\n      list.add(present_authzToken);\n      if (present_authzToken)\n        list.add(authzToken);\n      boolean present_storageResourceDescription = true && (isSetStorageResourceDescription());\n      list.add(present_storageResourceDescription);\n      if (present_storageResourceDescription)\n        list.add(storageResourceDescription);\n      return list.hashCode();\n    }\n    @Override\n    public int compareTo(registerStorageResource_args other) {\n      if (!getClass().equals(other.getClass())) {\n        return getClass().getName().compareTo(other.getClass().getName());\n      }\n      int lastComparison = 0;\n      lastComparison = Boolean.valueOf(isSetAuthzToken()).compareTo(other.isSetAuthzToken());\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n      if (isSetAuthzToken()) {\n        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.authzToken, other.authzToken);\n        if (lastComparison != 0) {\n          return lastComparison;\n        }\n      }\n      lastComparison = Boolean.valueOf(isSetStorageResourceDescription()).compareTo(other.isSetStorageResourceDescription());\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n      if (isSetStorageResourceDescription()) {\n        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.storageResourceDescription, other.storageResourceDescription);\n        if (lastComparison != 0) {\n          return lastComparison;\n        }\n      }\n      return 0;\n    }\n    public _Fields fieldForId(int fieldId) {\n      return _Fields.findByThriftId(fieldId);\n    }\n    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {\n      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);\n    }\n    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {\n      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);\n    }\n    @Override\n    public String toString() {\n      StringBuilder sb = new StringBuilder(\"registerStorageResource_args(\");\n      boolean first = true;\n      sb.append(\"authzToken:\");\n      if (this.authzToken == null) {\n        sb.append(\"null\");\n      } else {\n        sb.append(this.authzToken);\n      }\n      first = false;\n      if (!first) sb.append(\", \");\n      sb.append(\"storageResourceDescription:\");\n      if (this.storageResourceDescription == null) {\n        sb.append(\"null\");\n      } else {\n        sb.append(this.storageResourceDescription);\n      }\n      first = false;\n      sb.append(\")\");\n      return sb.toString();\n    }\n    public void validate() throws org.apache.thrift.TException {\n      // check for required fields\n      if (authzToken == null) {\n        throw new org.apache.thrift.protocol.TProtocolException(\"Required field 'authzToken' was not present! Struct: \" + toString());\n      }\n      if (storageResourceDescription == null) {\n        throw new org.apache.thrift.protocol.TProtocolException(\"Required field 'storageResourceDescription' was not present! Struct: \" + toString());\n      }\n      // check for sub-struct validity\n      if (authzToken != null) {\n        authzToken.validate();\n      }\n      if (storageResourceDescription != null) {\n        storageResourceDescription.validate();\n      }\n    }\n    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {\n      try {\n        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));\n      } catch (org.apache.thrift.TException te) {\n        throw new java.io.IOException(te);\n      }\n    }\n    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {\n      try {\n        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));\n      } catch (org.apache.thrift.TException te) {\n        throw new java.io.IOException(te);\n      }\n    }\n    private static class registerStorageResource_argsStandardSchemeFactory implements SchemeFactory {\n      public registerStorageResource_argsStandardScheme getScheme() {\n        return new registerStorageResource_argsStandardScheme();\n      }\n    }\n<fim_suffix>    private static class registerStorageResource_argsStandardScheme extends StandardScheme<registerStorageResource_args> {\n      public void read(org.apache.thrift.protocol.TProtocol iprot, registerStorageResource_args struct) throws org.apache.thrift.TException {\n        org.apache.thrift.protocol.TField schemeField;\n        iprot.readStructBegin();\n        while (true)\n        {\n          schemeField = iprot.readFieldBegin();\n          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { \n            break;\n          }\n          switch (schemeField.id) {\n            case 1: // AUTHZ_TOKEN\n              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {\n                struct.authzToken = new org.apache.airavata.model.security.AuthzToken();\n                struct.authzToken.read(iprot);\n                struct.setAuthzTokenIsSet(true);\n              } else { \n                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);\n              }\n              break;\n            case 2: // STORAGE_RESOURCE_DESCRIPTION\n              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {\n                struct.storageResourceDescription = new org.apache.airavata.model.appcatalog.storageresource.StorageResourceDescription();\n                struct.storageResourceDescription.read(iprot);\n                struct.setStorageResourceDescriptionIsSet(true);\n              } else { \n                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);\n              }\n              break;\n            default:\n              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);\n          }\n          iprot.readFieldEnd();\n        }\n        iprot.readStructEnd();\n        // check for required fields of primitive type, which can't be checked in the validate method\n        struct.validate();\n      }\n      public void write(org.apache.thrift.protocol.TProtocol oprot, registerStorageResource_args struct) throws org.apache.thrift.TException {\n        struct.validate();\n        oprot.writeStructBegin(STRUCT_DESC);\n        if (struct.authzToken != null) {\n          oprot.writeFieldBegin(AUTHZ_TOKEN_FIELD_DESC);\n          struct.authzToken.write(oprot);\n          oprot.writeFieldEnd();\n        }\n        if (struct.storageResourceDescription != null) {\n          oprot.writeFieldBegin(STORAGE_RESOURCE_DESCRIPTION_FIELD_DESC);\n          struct.storageResourceDescription.write(oprot);\n          oprot.writeFieldEnd();\n        }\n        oprot.writeFieldStop();\n        oprot.writeStructEnd();\n      }\n    }<fim_middle>// class below has no smell\n"}