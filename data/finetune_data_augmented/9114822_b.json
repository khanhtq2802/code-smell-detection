{"text": "<fim_prefix>\n<fim_suffix>public class TextAndButtonSection extends Section\n{\n\tpublic TextAndButtonSection( String labelText, Composite parent,\n\t\t\tboolean isFormStyle )\n\t{\n\t\tsuper( labelText, parent, isFormStyle );\n\t}\n\tprotected int width = -1;\n\tprotected boolean fillText = false;\n\tprotected TextPropertyDescriptor textField;\n\tpublic void createSection( )\n\t{\n\t\tif ( selectList == null )\n\t\t\tselectList = new ArrayList( );\n\t\tgetLabelControl( parent );\n\t\tgetTextControl( parent );\n\t\tgetButtonControl( parent );\n\t\tgetGridPlaceholder( parent );\n\t}\n\tpublic void layout( )\n\t{\n\t\tGridData gd = (GridData) textField.getControl( ).getLayoutData( );\n\t\tif ( getLayoutNum( ) > 0 )\n\t\t\tgd.horizontalSpan = getLayoutNum( ) - 2 - placeholder;\n\t\telse\n\t\t\tgd.horizontalSpan = ( (GridLayout) parent.getLayout( ) ).numColumns\n\t\t\t\t\t- 2\n\t\t\t\t\t- placeholder;\n\t\tif ( width > -1 )\n\t\t{\n\t\t\tgd.widthHint = width;\n\t\t\tgd.grabExcessHorizontalSpace = false;\n\t\t}\n\t\telse\n\t\t\tgd.grabExcessHorizontalSpace = fillText;\n\t\tgd = (GridData) button.getLayoutData( );\n\t\tif ( buttonWidth > -1 )\n\t\t{\n\t\t\tif ( !isComputeSize )\n\t\t\t\tgd.widthHint = Math.max( button.computeSize( -1, -1 ).x,\n\t\t\t\t\t\tbuttonWidth );\n\t\t\telse\n\t\t\t\tgd.widthHint = button.computeSize( -1, -1 ).x;\n\t\t}\n\t}\n\tpublic TextPropertyDescriptor getTextControl( )\n\t{\n\t\treturn textField;\n\t}\n\tprotected TextPropertyDescriptor getTextControl( Composite parent )\n\t{\n\t\tif ( textField == null )\n\t\t{\n\t\t\ttextField = DescriptorToolkit.createTextPropertyDescriptor( true );\n\t\t\tif ( getProvider( ) != null )\n\t\t\t\ttextField.setDescriptorProvider( getProvider( ) );\n\t\t\ttextField.createControl( parent );\n\t\t\ttextField.getControl( ).setLayoutData( new GridData( ) );\n\t\t\ttextField.getControl( ).addDisposeListener( new DisposeListener( ) {\n\t\t\t\tpublic void widgetDisposed( DisposeEvent event )\n\t\t\t\t{\n\t\t\t\t\ttextField = null;\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\t\telse\n\t\t{\n\t\t\tcheckParent( textField.getControl( ), parent );\n\t\t}\n\t\treturn textField;\n\t}\n\tprotected Button button;\n\tpublic Button getButtonControl( )\n\t{\n\t\treturn button;\n\t}\n\tprotected Button getButtonControl( Composite parent )\n\t{\n\t\tif ( button == null )\n\t\t{\n\t\t\tbutton = FormWidgetFactory.getInstance( ).createButton( parent,\n\t\t\t\t\tSWT.PUSH,\n\t\t\t\t\tisFormStyle );\n\t\t\tbutton.setFont( parent.getFont( ) );\n\t\t\tbutton.setLayoutData( new GridData( ) );\n\t\t\tString text = getButtonText( );\n\t\t\tif ( text != null )\n\t\t\t{\n\t\t\t\tbutton.setText( text );\n\t\t\t}\n\t\t\ttext = getButtonTooltipText( );\n\t\t\tif ( text != null )\n\t\t\t{\n\t\t\t\tbutton.setToolTipText( text );\n\t\t\t}\n\t\t\tbutton.addDisposeListener( new DisposeListener( ) {\n\t\t\t\tpublic void widgetDisposed( DisposeEvent event )\n\t\t\t\t{\n\t\t\t\t\tbutton = null;\n\t\t\t\t}\n\t\t\t} );\n\t\t\tif ( !selectList.isEmpty( ) )\n\t\t\t\tbutton.addSelectionListener( (SelectionListener) selectList.get( 0 ) );\n\t\t\telse\n\t\t\t{\n\t\t\t\tSelectionListener listener = new SelectionAdapter( ) {\n\t\t\t\t\tpublic void widgetSelected( SelectionEvent e )\n\t\t\t\t\t{\n\t\t\t\t\t\tonClickButton( );\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tselectList.add( listener );\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tcheckParent( button, parent );\n\t\t}\n\t\treturn button;\n\t}\n\tprivate String buttonText;\n\tIDescriptorProvider provider;\n\tpublic IDescriptorProvider getProvider( )\n\t{\n\t\treturn provider;\n\t}\n\tpublic void setProvider( IDescriptorProvider provider )\n\t{\n\t\tthis.provider = provider;\n\t\tif ( textField != null )\n\t\t\ttextField.setDescriptorProvider( provider );\n\t}\n\tprotected List selectList = new ArrayList( );\n\t/**\n\t * if use this method , you couldn't use the onClickButton method.\n\t */\n\tpublic void addSelectionListener( SelectionListener listener )\n\t{\n\t\tif ( !selectList.contains( listener ) )\n\t\t{\n\t\t\tif ( !selectList.isEmpty( ) )\n\t\t\t\tremoveSelectionListener( (SelectionListener) selectList.get( 0 ) );\n\t\t\tselectList.add( listener );\n\t\t\tif ( button != null )\n\t\t\t\tbutton.addSelectionListener( listener );\n\t\t}\n\t}\n\tpublic void removeSelectionListener( SelectionListener listener )\n\t{\n\t\tif ( selectList.contains( listener ) )\n\t\t{\n\t\t\tselectList.remove( listener );\n\t\t\tif ( button != null )\n\t\t\t\tbutton.removeSelectionListener( listener );\n\t\t}\n\t}\n\tprotected void onClickButton( )\n\t{\n\t};\n\tpublic void forceFocus( )\n\t{\n\t\ttextField.getControl( ).forceFocus( );\n\t}\n\tpublic void setInput( Object input )\n\t{\n\t\ttextField.setInput( input );\n\t}\n\tpublic void load( )\n\t{\n\t\tif ( textField != null && !textField.getControl( ).isDisposed( ) )\n\t\t\ttextField.load( );\n\t\tif ( button != null && !button.isDisposed( ) )\n\t\t\tbutton.setEnabled( !isReadOnly( ) );\n\t}\n\tprotected int buttonWidth = 60;\n\tpublic void setButtonWidth( int buttonWidth )\n\t{\n\t\tthis.buttonWidth = buttonWidth;\n\t\tif ( button != null )\n\t\t{\n\t\t\tGridData data = new GridData( );\n\t\t\tdata.widthHint = Math.max( button.computeSize( -1, -1 ).x,\n\t\t\t\t\tbuttonWidth );;\n\t\t\tdata.grabExcessHorizontalSpace = false;\n\t\t\tbutton.setLayoutData( data );\n\t\t}\n\t}\n\tprotected boolean isComputeSize = false;\n\tpublic int getWidth( )\n\t{\n\t\treturn width;\n\t}\n\tpublic void setWidth( int width )\n\t{\n\t\tthis.width = width;\n\t}\n\tpublic int getButtonWidth( )\n\t{\n\t\treturn buttonWidth;\n\t}\n\tprivate String oldValue;\n\tpublic void setStringValue( String value )\n\t{\n\t\tif ( textField != null )\n\t\t{\n\t\t\tif ( value == null )\n\t\t\t{\n\t\t\t\tvalue = \"\";//$NON-NLS-1$\n\t\t\t}\n\t\t\toldValue = textField.getText( );\n\t\t\tif ( !oldValue.equals( value ) )\n\t\t\t{\n\t\t\t\ttextField.setText( value );\n\t\t\t}\n\t\t}\n\t}\n\tpublic boolean isFillText( )\n\t{\n\t\treturn fillText;\n\t}\n\tpublic void setFillText( boolean fillText )\n\t{\n\t\tthis.fillText = fillText;\n\t}\n\tpublic void setHidden( boolean isHidden )\n\t{\n\t\tif ( displayLabel != null )\n\t\t\tWidgetUtil.setExcludeGridData( displayLabel, isHidden );\n\t\tif ( textField != null )\n\t\t\ttextField.setHidden( isHidden );\n\t\tif ( button != null )\n\t\t\tWidgetUtil.setExcludeGridData( button, isHidden );\n\t\tif ( placeholderLabel != null )\n\t\t\tWidgetUtil.setExcludeGridData( placeholderLabel, isHidden );\n\t}\n\tpublic void setVisible( boolean isVisible )\n\t{\n\t\tif ( displayLabel != null )\n\t\t\tdisplayLabel.setVisible( isVisible );\n\t\tif ( textField != null )\n\t\t\ttextField.setVisible( isVisible );\n\t\tif ( button != null )\n\t\t\tbutton.setVisible( isVisible );\n\t\tif ( placeholderLabel != null )\n\t\t\tplaceholderLabel.setVisible( isVisible );\n\t}\n\tprivate String buttonTooltipText;\n\tpublic void setButtonTooltipText( String string )\n\t{\n\t\tthis.buttonTooltipText = string;\n\t\tif ( button != null )\n\t\t\tbutton.setText( buttonTooltipText );\n\t}\n\tpublic String getButtonText( )\n\t{\n\t\treturn buttonText;\n\t}\n\tpublic void setButtonText( String buttonText )\n\t{\n\t\tthis.buttonText = buttonText;\n\t\tif ( button != null )\n\t\t\tbutton.setText( buttonText );\n\t}\n\tpublic String getButtonTooltipText( )\n\t{\n\t\treturn buttonTooltipText;\n\t}\n\tpublic boolean buttonIsComputeSize( )\n\t{\n\t\treturn isComputeSize;\n\t}<fim_middle>// class below is data class and blob\n"}