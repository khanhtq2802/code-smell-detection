{"text": "<fim_prefix>/*\n * generated by Xtext\n */\npackage org.eclipse.xtext.ui.tests.editor.contentassist.tests;\n\nimport com.google.inject.Guice;\nimport com.google.inject.Injector;\nimport org.eclipse.xtext.testing.GlobalRegistries;\nimport org.eclipse.xtext.testing.GlobalRegistries.GlobalStateMemento;\nimport org.eclipse.xtext.testing.IInjectorProvider;\nimport org.eclipse.xtext.testing.IRegistryConfigurator;\nimport org.eclipse.xtext.ui.tests.editor.contentassist.Bug288734TestLanguageRuntimeModule;\nimport org.eclipse.xtext.ui.tests.editor.contentassist.Bug288734TestLanguageStandaloneSetup;\n\npublic class Bug288734TestLanguageInjectorProvider implements IInjectorProvider, IRegistryConfigurator {\n\n\tprotected GlobalStateMemento stateBeforeInjectorCreation;\n\tprotected GlobalStateMemento stateAfterInjectorCreation;\n\tprotected Injector injector;\n\n\tstatic {\n\t\tGlobalRegistries.initializeDefaults();\n\t}\n\n\t@Override\n\tpublic Injector getInjector() {\n\t\tif (injector == null) {\n\t\t\tstateBeforeInjectorCreation = GlobalRegistries.makeCopyOfGlobalState();\n\t\t\tthis.injector = internalCreateInjector();\n\t\t\tstateAfterInjectorCreation = GlobalRegistries.makeCopyOfGlobalState();\n\t\t}\n\t\treturn injector;\n\t}\n\n\tprotected Injector internalCreateInjector() {\n\t\treturn new Bug288734TestLanguageStandaloneSetup() {\n\t\t\t@Override\n\t\t\tpublic Injector createInjector() {\n\t\t\t\treturn Guice.createInjector(createRuntimeModule());\n\t\t\t}\n\t\t}.createInjectorAndDoEMFRegistration();\n\t}\n\n<fim_suffix>\tprotected Bug288734TestLanguageRuntimeModule createRuntimeModule() {\n\t\t// make it work also with Maven/Tycho and OSGI\n\t\t// see https://bugs.eclipse.org/bugs/show_bug.cgi?id=493672\n\t\treturn new Bug288734TestLanguageRuntimeModule() {\n\t\t\t@Override\n\t\t\tpublic ClassLoader bindClassLoaderToInstance() {\n\t\t\t\treturn Bug288734TestLanguageInjectorProvider.class\n\t\t\t\t\t\t.getClassLoader();\n\t\t\t}\n\t\t};\n\t}\n\n\t@Override\n\tpublic void restoreRegistry() {\n\t\tstateBeforeInjectorCreation.restoreGlobalState();\n\t}\n\n\t@Override\n\tpublic void setupRegistry() {\n\t\tgetInjector();\n\t\tstateAfterInjectorCreation.restoreGlobalState();\n\t}\n}<fim_middle>// function below has no smell\n"}