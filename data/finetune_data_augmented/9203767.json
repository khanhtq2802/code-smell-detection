{"text": "<fim_prefix>\t\t\t{\n\t\t\t\tadjustFiscalYear( current, start );\n\t\t\t\t// Fiscal year should return next year of first day, except\n\t\t\t\t// Jan. 1\n\t\t\t\treturn current.get( Calendar.YEAR ) + 1;\n\t\t\t}\n\t\t\treturn current.get( Calendar.YEAR );\n\t\t}\n\t}\n\tprivate static class Function_FiscalQuarter extends Function_temp\n\t{\n\t\tprivate static final long serialVersionUID = 1L;\n\t\tFunction_FiscalQuarter( )\n\t\t{\n\t\t\tminParamCount = 1;\n\t\t\tmaxParamCount = 2;\n\t\t}\n\t\tprotected Object getValue( Object[] args, IScriptFunctionContext context ) throws BirtException\n\t\t{\n\t\t\tif ( existNullValue( args ) )\n\t\t\t{\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tCalendar current = getCalendar( DataTypeUtil.toDate( args[0] ) );\n\t\t\tCalendar start = getFiscalYearStateDate( context, args );\n\t\t\t// Quarter starts with 1\n\t\t\tadjustFiscalYear( current, start );\n\t\t\treturn current.get( Calendar.MONTH ) / 3 + 1;\n\t\t}\n\t}\n\tprivate static class Function_FiscalMonth extends Function_temp\n\t{\n\t\tprivate static final long serialVersionUID = 1L;\n\t\tFunction_FiscalMonth( )\n\t\t{\n\t\t\tminParamCount = 1;\n\t\t\tmaxParamCount = 2;\n\t\t}\n\t\tprotected Object getValue( Object[] args, IScriptFunctionContext context ) throws BirtException\n\t\t{\n\t\t\tif ( existNullValue( args ) )\n\t\t\t{\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tCalendar current = getCalendar( DataTypeUtil.toDate( args[0] ) );\n\t\t\tCalendar start = getFiscalYearStateDate( context, args );\n\t\t\t// Month starts with 1\n\t\t\tadjustFiscalYear( current, start );\n\t\t\treturn current.get( Calendar.MONTH ) + 1;\n\t\t}\n\t}\n\tprivate static class Function_FiscalWeek extends Function_temp\n\t{\n\t\tprivate static final long serialVersionUID = 1L;\n\t\tFunction_FiscalWeek( )\n\t\t{\n\t\t\tminParamCount = 1;\n\t\t\tmaxParamCount = 2;\n\t\t}\n\t\tprotected Object getValue( Object[] args, IScriptFunctionContext context ) throws BirtException\n\t\t{\n\t\t\tif ( existNullValue( args ) )\n\t\t\t{\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tCalendar current = getCalendar( DataTypeUtil.toDate( args[0] ) );\n\t\t\tint currentWeek = current.get( Calendar.WEEK_OF_YEAR );\n\t\t\tCalendar start = getFiscalYearStateDate( context, args );\n\t\t\tstart.set( Calendar.YEAR, current.get( Calendar.YEAR ) );\n\t\t\tint startWeek = start.get( Calendar.WEEK_OF_YEAR );\n\t\t\tif ( currentWeek >= startWeek )\n\t\t\t{\n\t\t\t\treturn currentWeek - startWeek + 1;\n\t\t\t}\n\t\t\t// Go to last year to add weeks together\n\t\t\tstart.set( Calendar.YEAR, current.get( Calendar.YEAR ) - 1 );\n\t\t\tCalendar lastYearLastWeek = getCalendar( new Date( start.get( Calendar.YEAR ) - 1,\n\t\t\t\t\t11,\n\t\t\t\t\t31 ) );\n\t\t\t// Last week may return 1 as week of year\n\t\t\twhile ( lastYearLastWeek.get( Calendar.WEEK_OF_YEAR ) == 1 )\n\t\t\t{\n\t\t\t\tlastYearLastWeek.add( Calendar.DAY_OF_MONTH, -1 );\n\t\t\t}\n\t\t\treturn lastYearLastWeek.get( Calendar.WEEK_OF_YEAR )\n\t\t\t\t\t- start.get( Calendar.WEEK_OF_YEAR ) + 1 + currentWeek;\n\t\t}\n\t}\n\tprivate static class Function_FiscalDay extends Function_temp\n\t{\n\t\tprivate static final long serialVersionUID = 1L;\n\t\tFunction_FiscalDay( )\n\t\t{\n\t\t\tminParamCount = 1;\n\t\t\tmaxParamCount = 2;\n\t\t}\n\t\tprotected Object getValue( Object[] args, IScriptFunctionContext context ) throws BirtException\n\t\t{\n\t\t\tif ( existNullValue( args ) )\n\t\t\t{\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tCalendar current = getCalendar( DataTypeUtil.toDate( args[0] ) );\n\t\t\tCalendar start = getFiscalYearStateDate( context, args );\n\t\t\tadjustFiscalYear( current, start );\n\t\t\treturn current.get( Calendar.DAY_OF_YEAR );\n\t\t}\n\t}\n\tprivate static class Function_FirstDayOfFiscalMonth extends Function_temp\n\t{\n\t\tprivate static final long serialVersionUID = 1L;\n\t\tFunction_FirstDayOfFiscalMonth( )\n\t\t{\n\t\t\tminParamCount = 1;\n\t\t\tmaxParamCount = 2;\n\t\t}\n\t\tprotected Object getValue( Object[] args, IScriptFunctionContext context ) throws BirtException\n\t\t{\n\t\t\tif ( existNullValue( args ) )\n\t\t\t{\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tCalendar current;\n\t\t\tif ( args[0] instanceof Number )\n\t\t\t{\n\t\t\t\tcurrent = getFiscalYearStateDate( context, args );\n\t\t\t\t// Month starts with 1\n\t\t\t\tcurrent.add( Calendar.MONTH,\n\t\t\t\t\t\t( (Number) args[0] ).intValue( ) - 1 );\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tcurrent = getCalendar( DataTypeUtil.toDate( args[0] ) );\n\t\t\t\tCalendar start = getFiscalYearStateDate( context, args );\n\t\t\t\tadjustFiscalMonth( current, start );\n\t\t\t\t// Do not exceed the max days of current month\n\t\t\t\tcurrent.set( Calendar.DATE,\n\t\t\t\t\t\tMath.min( start.get( Calendar.DATE ),\n\t\t\t\t\t\t\t\tcurrent.getActualMaximum( Calendar.DATE ) ) );\n\t\t\t}\n\t\t\treturn current.getTime( );\n\t\t}\n\t}\n<fim_suffix>\tprivate static class Function_FirstDayOfFiscalQuarter extends Function_temp\n\t{\n\t\tprivate static final long serialVersionUID = 1L;\n\t\tFunction_FirstDayOfFiscalQuarter( )\n\t\t{\n\t\t\tminParamCount = 1;\n\t\t\tmaxParamCount = 2;\n\t\t}\n\t\tprotected Object getValue( Object[] args, IScriptFunctionContext context ) throws BirtException\n\t\t{\n\t\t\tif ( existNullValue( args ) )\n\t\t\t{\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tCalendar current;\n\t\t\tif ( args[0] instanceof Number )\n\t\t\t{\n\t\t\t\tcurrent = getFiscalYearStateDate( context, args );\n\t\t\t\t// Quarter starts with 1\n\t\t\t\tcurrent.add( Calendar.MONTH,\n\t\t\t\t\t\t( ( (Number) args[0] ).intValue( ) - 1 ) * 3 );\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tcurrent = getCalendar( DataTypeUtil.toDate( args[0] ) );\n\t\t\t\tCalendar start = getFiscalYearStateDate( context, args );\n\t\t\t\tadjustFiscalMonth( current, start );\n\t\t\t\tint monthRemaindary = ( current.get( Calendar.MONTH )\n\t\t\t\t\t\t- start.get( Calendar.MONTH ) + 12 ) % 3;\n\t\t\t\tcurrent.add( Calendar.MONTH, -monthRemaindary );\n\t\t\t\t// Do not exceed the max days of current month\n\t\t\t\tcurrent.set( Calendar.DATE,\n\t\t\t\t\t\tMath.min( start.get( Calendar.DATE ),\n\t\t\t\t\t\t\t\tcurrent.getActualMaximum( Calendar.DATE ) ) );\n\t\t\t}\n\t\t\treturn current.getTime( );\n\t\t}\n\t}<fim_middle>// class below has no smell\n"}