{"text": "<fim_prefix>/**\n * Copyright (c) 2016 NumberFour AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n * \n * Contributors:\n *   NumberFour AG - Initial API and implementation\n */\npackage org.eclipse.n4js.ts.typeRefs;\n\n\n/**\n * <!-- begin-user-doc -->\n * A representation of the model object '<em><b>Unknown Type Ref</b></em>'.\n * <!-- end-user-doc -->\n *\n * <!-- begin-model-doc -->\n * Unknown type references are the result of an unresolved link or other form of error.\n * No follow up errors should be produced for such unknown type references.\n * <pre>\n * var x = doesNotExist // error here; type of x will be UnknownTypeRef\n * x.cannotKnowIfThisExists // no error here\n * var s: String = x // no error here, either\n * x = s // nor here\n * </pre>\n * Because {@code UnknownTypeRef}s suppress consequential errors, they must never\n * appear in an N4JSResource that does not have any original parse or validation errors!\n * <!-- end-model-doc -->\n *\n *\n * @see org.eclipse.n4js.ts.typeRefs.TypeRefsPackage#getUnknownTypeRef()\n * @model\n * @generated\n */\n<fim_suffix>public interface UnknownTypeRef extends TypeRef {\n\t/**\n\t * <!-- begin-user-doc -->\n\t * <!-- end-user-doc -->\n\t * <!-- begin-model-doc -->\n\t * Overrides {@link TypeRef#getTypeRefAsString()}\n\t * <!-- end-model-doc -->\n\t * @model kind=\"operation\" unique=\"false\"\n\t * @generated\n\t */\n\tString getTypeRefAsString();\n\n} // UnknownTypeRef<fim_middle>// class below has no smell\n"}