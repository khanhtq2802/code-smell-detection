{"text": "<fim_prefix>/*\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License. You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.apache.kafka.connect.data;\n\nimport java.util.Objects;\n\n<fim_suffix>public class SchemaAndValue {\n    private final Schema schema;\n    private final Object value;\n\n    public static final SchemaAndValue NULL = new SchemaAndValue(null, null);\n\n    public SchemaAndValue(Schema schema, Object value) {\n        this.value = value;\n        this.schema = schema;\n    }\n\n    public Schema schema() {\n        return schema;\n    }\n\n    public Object value() {\n        return value;\n    }\n\n    @Override\n    public boolean equals(Object o) {\n        if (this == o) return true;\n        if (o == null || getClass() != o.getClass()) return false;\n        SchemaAndValue that = (SchemaAndValue) o;\n        return Objects.equals(schema, that.schema) &&\n                Objects.equals(value, that.value);\n    }\n\n    @Override\n    public int hashCode() {\n        return Objects.hash(schema, value);\n    }\n\n    @Override\n    public String toString() {\n        return \"SchemaAndValue{\" +\n                \"schema=\" + schema +\n                \", value=\" + value +\n                '}';\n    }\n}<fim_middle>// class below is data class\n"}