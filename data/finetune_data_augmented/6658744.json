{"text": "<fim_prefix>      return Futures.transform(\n        executeAsyncInternal(extraParams),\n        new Function<ResponseWrapper, Link>() {\n           public Link apply(ResponseWrapper result) {\n             try {\n               return APIRequestCreateLike.this.parseResponse(result.getBody(), result.getHeader());\n             } catch (Exception e) {\n               throw new RuntimeException(e);\n             }\n           }\n         }\n      );\n    };\n    public APIRequestCreateLike(String nodeId, APIContext context) {\n      super(context, nodeId, \"/likes\", \"POST\", Arrays.asList(PARAMS));\n    }\n    @Override\n    public APIRequestCreateLike setParam(String param, Object value) {\n      setParamInternal(param, value);\n      return this;\n    }\n    @Override\n    public APIRequestCreateLike setParams(Map<String, Object> params) {\n      setParamsInternal(params);\n      return this;\n    }\n    public APIRequestCreateLike setTracking (String tracking) {\n      this.setParam(\"tracking\", tracking);\n      return this;\n    }\n    public APIRequestCreateLike setNectarModule (String nectarModule) {\n      this.setParam(\"nectar_module\", nectarModule);\n      return this;\n    }\n    public APIRequestCreateLike setNotify (Boolean notify) {\n      this.setParam(\"notify\", notify);\n      return this;\n    }\n    public APIRequestCreateLike setNotify (String notify) {\n      this.setParam(\"notify\", notify);\n      return this;\n    }\n    public APIRequestCreateLike setFeedbackSource (String feedbackSource) {\n      this.setParam(\"feedback_source\", feedbackSource);\n      return this;\n    }\n    public APIRequestCreateLike requestAllFields () {\n      return this.requestAllFields(true);\n    }\n    public APIRequestCreateLike requestAllFields (boolean value) {\n      for (String field : FIELDS) {\n        this.requestField(field, value);\n      }\n      return this;\n    }\n    @Override\n    public APIRequestCreateLike requestFields (List<String> fields) {\n      return this.requestFields(fields, true);\n    }\n    @Override\n    public APIRequestCreateLike requestFields (List<String> fields, boolean value) {\n      for (String field : fields) {\n        this.requestField(field, value);\n      }\n      return this;\n    }\n    @Override\n    public APIRequestCreateLike requestField (String field) {\n      this.requestField(field, true);\n      return this;\n    }\n    @Override\n    public APIRequestCreateLike requestField (String field, boolean value) {\n      this.requestFieldInternal(field, value);\n      return this;\n    }\n  }\n  public static class APIRequestGetReactions extends APIRequest<Profile> {\n    APINodeList<Profile> lastResponse = null;\n    @Override\n    public APINodeList<Profile> getLastResponse() {\n      return lastResponse;\n    }\n    public static final String[] PARAMS = {\n      \"type\",\n    };\n    public static final String[] FIELDS = {\n      \"can_post\",\n      \"id\",\n      \"link\",\n      \"name\",\n      \"pic\",\n      \"pic_crop\",\n      \"pic_large\",\n      \"pic_small\",\n      \"pic_square\",\n      \"profile_type\",\n      \"username\",\n    };\n    @Override\n    public APINodeList<Profile> parseResponse(String response, String header) throws APIException {\n      return Profile.parseResponse(response, getContext(), this, header);\n    }\n    @Override\n    public APINodeList<Profile> execute() throws APIException {\n      return execute(new HashMap<String, Object>());\n    }\n    @Override\n    public APINodeList<Profile> execute(Map<String, Object> extraParams) throws APIException {\n      ResponseWrapper rw = executeInternal(extraParams);\n      lastResponse = parseResponse(rw.getBody(),rw.getHeader());\n      return lastResponse;\n    }\n    public ListenableFuture<APINodeList<Profile>> executeAsync() throws APIException {\n      return executeAsync(new HashMap<String, Object>());\n    };\n    public ListenableFuture<APINodeList<Profile>> executeAsync(Map<String, Object> extraParams) throws APIException {\n      return Futures.transform(\n        executeAsyncInternal(extraParams),\n        new Function<ResponseWrapper, APINodeList<Profile>>() {\n           public APINodeList<Profile> apply(ResponseWrapper result) {\n             try {\n               return APIRequestGetReactions.this.parseResponse(result.getBody(), result.getHeader());\n             } catch (Exception e) {\n               throw new RuntimeException(e);\n             }\n           }\n         }\n      );\n    };\n    public APIRequestGetReactions(String nodeId, APIContext context) {\n      super(context, nodeId, \"/reactions\", \"GET\", Arrays.asList(PARAMS));\n    }\n    @Override\n    public APIRequestGetReactions setParam(String param, Object value) {\n      setParamInternal(param, value);\n      return this;\n    }\n    @Override\n    public APIRequestGetReactions setParams(Map<String, Object> params) {\n      setParamsInternal(params);\n      return this;\n    }\n    public APIRequestGetReactions setType (Profile.EnumType type) {\n      this.setParam(\"type\", type);\n      return this;\n    }\n    public APIRequestGetReactions setType (String type) {\n      this.setParam(\"type\", type);\n      return this;\n    }\n    public APIRequestGetReactions requestAllFields () {\n      return this.requestAllFields(true);\n    }\n    public APIRequestGetReactions requestAllFields (boolean value) {\n      for (String field : FIELDS) {\n        this.requestField(field, value);\n      }\n      return this;\n    }\n    @Override\n    public APIRequestGetReactions requestFields (List<String> fields) {\n      return this.requestFields(fields, true);\n    }\n    @Override\n    public APIRequestGetReactions requestFields (List<String> fields, boolean value) {\n      for (String field : fields) {\n        this.requestField(field, value);\n      }\n      return this;\n    }\n    @Override\n    public APIRequestGetReactions requestField (String field) {\n      this.requestField(field, true);\n      return this;\n    }\n    @Override\n    public APIRequestGetReactions requestField (String field, boolean value) {\n      this.requestFieldInternal(field, value);\n      return this;\n    }\n    public APIRequestGetReactions requestCanPostField () {\n      return this.requestCanPostField(true);\n    }\n    public APIRequestGetReactions requestCanPostField (boolean value) {\n      this.requestField(\"can_post\", value);\n      return this;\n    }\n    public APIRequestGetReactions requestIdField () {\n      return this.requestIdField(true);\n    }\n    public APIRequestGetReactions requestIdField (boolean value) {\n      this.requestField(\"id\", value);\n      return this;\n    }\n    public APIRequestGetReactions requestLinkField () {\n      return this.requestLinkField(true);\n    }\n    public APIRequestGetReactions requestLinkField (boolean value) {\n      this.requestField(\"link\", value);\n      return this;\n    }\n    public APIRequestGetReactions requestNameField () {\n      return this.requestNameField(true);\n    }\n    public APIRequestGetReactions requestNameField (boolean value) {\n      this.requestField(\"name\", value);\n      return this;\n    }\n    public APIRequestGetReactions requestPicField () {\n      return this.requestPicField(true);\n    }\n    public APIRequestGetReactions requestPicField (boolean value) {\n      this.requestField(\"pic\", value);\n      return this;\n    }\n    public APIRequestGetReactions requestPicCropField () {\n      return this.requestPicCropField(true);\n    }\n    public APIRequestGetReactions requestPicCropField (boolean value) {\n      this.requestField(\"pic_crop\", value);\n      return this;\n    }\n    public APIRequestGetReactions requestPicLargeField () {\n      return this.requestPicLargeField(true);\n    }\n    public APIRequestGetReactions requestPicLargeField (boolean value) {\n      this.requestField(\"pic_large\", value);\n      return this;\n    }\n    public APIRequestGetReactions requestPicSmallField () {\n      return this.requestPicSmallField(true);\n    }\n    public APIRequestGetReactions requestPicSmallField (boolean value) {\n      this.requestField(\"pic_small\", value);\n      return this;\n    }\n    public APIRequestGetReactions requestPicSquareField () {\n      return this.requestPicSquareField(true);\n    }\n    public APIRequestGetReactions requestPicSquareField (boolean value) {\n      this.requestField(\"pic_square\", value);\n      return this;\n    }\n    public APIRequestGetReactions requestProfileTypeField () {\n      return this.requestProfileTypeField(true);\n    }\n<fim_suffix>    public APIRequestGetReactions requestProfileTypeField (boolean value) {\n      this.requestField(\"profile_type\", value);\n      return this;\n    }<fim_middle>// function below has no smell\n"}