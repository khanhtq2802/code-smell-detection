{"text": "<fim_prefix>/*\n * generated by Xtext\n */\npackage org.eclipse.xtext.ui.tests.editor.contentassist.services;\n\nimport com.google.inject.Inject;\nimport com.google.inject.Singleton;\nimport java.util.List;\nimport org.eclipse.xtext.Assignment;\nimport org.eclipse.xtext.CrossReference;\nimport org.eclipse.xtext.Grammar;\nimport org.eclipse.xtext.GrammarUtil;\nimport org.eclipse.xtext.Group;\nimport org.eclipse.xtext.Keyword;\nimport org.eclipse.xtext.ParserRule;\nimport org.eclipse.xtext.RuleCall;\nimport org.eclipse.xtext.TerminalRule;\nimport org.eclipse.xtext.common.services.TerminalsGrammarAccess;\nimport org.eclipse.xtext.service.AbstractElementFinder.AbstractGrammarElementFinder;\nimport org.eclipse.xtext.service.GrammarProvider;\n\n@Singleton\npublic class TwoContextsTestLanguageGrammarAccess extends AbstractGrammarElementFinder {\n\t\n\tpublic class MainModelElements extends AbstractParserRuleElementFinder {\n\t\tprivate final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), \"org.eclipse.xtext.ui.tests.editor.contentassist.TwoContextsTestLanguage.MainModel\");\n\t\tprivate final Assignment cElementsAssignment = (Assignment)rule.eContents().get(1);\n\t\tprivate final RuleCall cElementsAnElementParserRuleCall_0 = (RuleCall)cElementsAssignment.eContents().get(0);\n\t\t\n\t\t//MainModel:\n\t\t//\telements+=AnElement*;\n\t\t@Override public ParserRule getRule() { return rule; }\n\t\t\n\t\t//elements+=AnElement*\n\t\tpublic Assignment getElementsAssignment() { return cElementsAssignment; }\n\t\t\n\t\t//AnElement\n\t\tpublic RuleCall getElementsAnElementParserRuleCall_0() { return cElementsAnElementParserRuleCall_0; }\n\t}\n<fim_suffix>\tpublic class AnElementElements extends AbstractParserRuleElementFinder {\n\t\tprivate final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), \"org.eclipse.xtext.ui.tests.editor.contentassist.TwoContextsTestLanguage.AnElement\");\n\t\tprivate final Group cGroup = (Group)rule.eContents().get(1);\n\t\tprivate final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);\n\t\tprivate final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);\n\t\tprivate final Group cGroup_1 = (Group)cGroup.eContents().get(1);\n\t\tprivate final Keyword cRefersToKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);\n\t\tprivate final Assignment cReferredAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);\n\t\tprivate final CrossReference cReferredAnElementCrossReference_1_1_0 = (CrossReference)cReferredAssignment_1_1.eContents().get(0);\n\t\tprivate final RuleCall cReferredAnElementIDTerminalRuleCall_1_1_0_1 = (RuleCall)cReferredAnElementCrossReference_1_1_0.eContents().get(1);\n\t\tprivate final Keyword cSemicolonKeyword_2 = (Keyword)cGroup.eContents().get(2);\n\t\t\n\t\t//AnElement:\n\t\t//\tname=ID ('refersTo' referred=[AnElement])? ';';\n\t\t@Override public ParserRule getRule() { return rule; }\n\t\t\n\t\t//name=ID ('refersTo' referred=[AnElement])? ';'\n\t\tpublic Group getGroup() { return cGroup; }\n\t\t\n\t\t//name=ID\n\t\tpublic Assignment getNameAssignment_0() { return cNameAssignment_0; }\n\t\t\n\t\t//ID\n\t\tpublic RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }\n\t\t\n\t\t//('refersTo' referred=[AnElement])?\n\t\tpublic Group getGroup_1() { return cGroup_1; }\n\t\t\n\t\t//'refersTo'\n\t\tpublic Keyword getRefersToKeyword_1_0() { return cRefersToKeyword_1_0; }\n\t\t\n\t\t//referred=[AnElement]\n\t\tpublic Assignment getReferredAssignment_1_1() { return cReferredAssignment_1_1; }\n\t\t\n\t\t//[AnElement]\n\t\tpublic CrossReference getReferredAnElementCrossReference_1_1_0() { return cReferredAnElementCrossReference_1_1_0; }\n\t\t\n\t\t//ID\n\t\tpublic RuleCall getReferredAnElementIDTerminalRuleCall_1_1_0_1() { return cReferredAnElementIDTerminalRuleCall_1_1_0_1; }\n\t\t\n\t\t//';'\n\t\tpublic Keyword getSemicolonKeyword_2() { return cSemicolonKeyword_2; }\n\t}\n\t\n\t\n\tprivate final MainModelElements pMainModel;\n\tprivate final AnElementElements pAnElement;\n\t\n\tprivate final Grammar grammar;\n\t\n\tprivate final TerminalsGrammarAccess gaTerminals;\n\n\t@Inject\n\tpublic TwoContextsTestLanguageGrammarAccess(GrammarProvider grammarProvider,\n\t\t\tTerminalsGrammarAccess gaTerminals) {\n\t\tthis.grammar = internalFindGrammar(grammarProvider);\n\t\tthis.gaTerminals = gaTerminals;\n\t\tthis.pMainModel = new MainModelElements();\n\t\tthis.pAnElement = new AnElementElements();\n\t}\n\t\n\tprotected Grammar internalFindGrammar(GrammarProvider grammarProvider) {\n\t\tGrammar grammar = grammarProvider.getGrammar(this);\n\t\twhile (grammar != null) {\n\t\t\tif (\"org.eclipse.xtext.ui.tests.editor.contentassist.TwoContextsTestLanguage\".equals(grammar.getName())) {\n\t\t\t\treturn grammar;\n\t\t\t}\n\t\t\tList<Grammar> grammars = grammar.getUsedGrammars();\n\t\t\tif (!grammars.isEmpty()) {\n\t\t\t\tgrammar = grammars.iterator().next();\n\t\t\t} else {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t\treturn grammar;\n\t}\n\t\n\t@Override\n\tpublic Grammar getGrammar() {\n\t\treturn grammar;\n\t}\n\t\n\t\n\tpublic TerminalsGrammarAccess getTerminalsGrammarAccess() {\n\t\treturn gaTerminals;\n\t}\n\n\t\n\t//MainModel:\n\t//\telements+=AnElement*;\n\tpublic MainModelElements getMainModelAccess() {\n\t\treturn pMainModel;\n\t}\n\t\n\tpublic ParserRule getMainModelRule() {\n\t\treturn getMainModelAccess().getRule();\n\t}\n\t\n\t//AnElement:\n\t//\tname=ID ('refersTo' referred=[AnElement])? ';';\n\tpublic AnElementElements getAnElementAccess() {\n\t\treturn pAnElement;\n\t}\n\t\n\tpublic ParserRule getAnElementRule() {\n\t\treturn getAnElementAccess().getRule();\n\t}\n\t\n\t//terminal ID:\n\t//\t'^'? ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;\n\tpublic TerminalRule getIDRule() {\n\t\treturn gaTerminals.getIDRule();\n\t}\n\t\n\t//terminal INT returns ecore::EInt:\n\t//\t'0'..'9'+;\n\tpublic TerminalRule getINTRule() {\n\t\treturn gaTerminals.getINTRule();\n\t}\n\t\n\t//terminal STRING:\n\t//\t'\"' ('\\\\' . | !('\\\\' | '\"'))* '\"' |\n\t//\t\"'\" ('\\\\' . | !('\\\\' | \"'\"))* \"'\";\n\tpublic TerminalRule getSTRINGRule() {\n\t\treturn gaTerminals.getSTRINGRule();\n\t}\n\t\n\t//terminal ML_COMMENT:\n\t//\t'/*'->'*/';\n\tpublic TerminalRule getML_COMMENTRule() {\n\t\treturn gaTerminals.getML_COMMENTRule();\n\t}\n\t\n\t//terminal SL_COMMENT:\n\t//\t'//' !('\\n' | '\\r')* ('\\r'? '\\n')?;\n\tpublic TerminalRule getSL_COMMENTRule() {\n\t\treturn gaTerminals.getSL_COMMENTRule();\n\t}\n\t\n\t//terminal WS:\n\t//\t' ' | '\\t' | '\\r' | '\\n'+;\n\tpublic TerminalRule getWSRule() {\n\t\treturn gaTerminals.getWSRule();\n\t}\n\t\n\t//terminal ANY_OTHER:\n\t//\t.;\n\tpublic TerminalRule getANY_OTHERRule() {\n\t\treturn gaTerminals.getANY_OTHERRule();\n\t}\n}<fim_middle>// class below is data class\n"}