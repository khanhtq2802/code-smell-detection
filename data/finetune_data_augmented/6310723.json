{"text": "<fim_prefix>/*******************************************************************************\n * Copyright (c) 2011, 2018 Eurotech and/or its affiliates\n *\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     Eurotech\n *******************************************************************************/\npackage org.eclipse.kura.core.ssl;\n\nimport java.util.Arrays;\n\npublic class ConnectionSslOptions {\n\n    private final SslManagerServiceOptions sslManagerOpts;\n    private String protocol;\n    private String ciphers;\n    private String trustStore;\n    private String keyStore;\n    private char[] keyStorePassword;\n    private String alias;\n    private boolean hostnameVerification;\n\n    public ConnectionSslOptions(SslManagerServiceOptions sslManagerOpts) {\n        this.sslManagerOpts = sslManagerOpts;\n    }\n\n    public SslManagerServiceOptions getSslManagerOpts() {\n        return this.sslManagerOpts;\n    }\n\n    public String getProtocol() {\n        return this.protocol;\n    }\n\n    public void setProtocol(String protocol) {\n        if (protocol == null || \"\".equals(protocol.trim())) {\n            this.protocol = this.sslManagerOpts.getSslProtocol();\n        } else {\n            this.protocol = protocol;\n        }\n    }\n\n    public String getCiphers() {\n        return this.ciphers;\n    }\n\n    public void setCiphers(String ciphers) {\n        if (ciphers == null || \"\".equals(ciphers.trim())) {\n            this.ciphers = this.sslManagerOpts.getSslCiphers();\n        } else {\n            this.ciphers = ciphers;\n        }\n    }\n\n    public String getTrustStore() {\n        return this.trustStore;\n    }\n\n    public void setTrustStore(String trustStore) {\n        if (trustStore == null || \"\".equals(trustStore.trim())) {\n            this.trustStore = this.sslManagerOpts.getSslKeyStore();\n        } else {\n            this.trustStore = trustStore;\n        }\n    }\n\n    public String getKeyStore() {\n        return this.keyStore;\n    }\n\n    public void setKeyStore(String keyStore) {\n        if (keyStore == null || \"\".equals(keyStore.trim())) {\n            this.keyStore = this.sslManagerOpts.getSslKeyStore();\n        } else {\n            this.keyStore = keyStore;\n        }\n    }\n\n    public char[] getKeyStorePassword() {\n        return this.keyStorePassword;\n    }\n\n    public void setKeyStorePassword(char[] keyStorePassword) {\n        this.keyStorePassword = keyStorePassword;\n    }\n\n    public String getAlias() {\n        return this.alias;\n    }\n\n    public void setAlias(String alias) {\n        this.alias = alias;\n    }\n\n    public boolean getHostnameVerification() {\n        return this.hostnameVerification;\n    }\n\n    public void setHostnameVerification(boolean hostnameVerification) {\n        this.hostnameVerification = hostnameVerification;\n    }\n\n<fim_suffix>    @Override\n    public int hashCode() {\n        final int prime = 31;\n        int result = 1;\n        result = prime * result + (this.alias == null ? 0 : this.alias.hashCode());\n        result = prime * result + (this.ciphers == null ? 0 : this.ciphers.hashCode());\n        result = prime * result + (this.hostnameVerification ? 1231 : 1237);\n        result = prime * result + (this.keyStore == null ? 0 : this.keyStore.hashCode());\n        result = prime * result + Arrays.hashCode(this.keyStorePassword);\n        result = prime * result + (this.protocol == null ? 0 : this.protocol.hashCode());\n        result = prime * result + (this.sslManagerOpts == null ? 0 : this.sslManagerOpts.hashCode());\n        result = prime * result + (this.trustStore == null ? 0 : this.trustStore.hashCode());\n        return result;\n    }\n\n    @Override\n    public boolean equals(Object obj) {\n        if (this == obj) {\n            return true;\n        }\n        if (obj == null) {\n            return false;\n        }\n        if (!(obj instanceof ConnectionSslOptions)) {\n            return false;\n        }\n        ConnectionSslOptions other = (ConnectionSslOptions) obj;\n        if (this.alias == null) {\n            if (other.alias != null) {\n                return false;\n            }\n        } else if (!this.alias.equals(other.alias)) {\n            return false;\n        }\n        if (this.ciphers == null) {\n            if (other.ciphers != null) {\n                return false;\n            }\n        } else if (!this.ciphers.equals(other.ciphers)) {\n            return false;\n        }\n        if (this.hostnameVerification != other.hostnameVerification) {\n            return false;\n        }\n        if (this.keyStore == null) {\n            if (other.keyStore != null) {\n                return false;\n            }\n        } else if (!this.keyStore.equals(other.keyStore)) {\n            return false;\n        }\n        if (!Arrays.equals(this.keyStorePassword, other.keyStorePassword)) {\n            return false;\n        }\n        if (this.protocol == null) {\n            if (other.protocol != null) {\n                return false;\n            }\n        } else if (!this.protocol.equals(other.protocol)) {\n            return false;\n        }\n        if (this.sslManagerOpts == null) {\n            if (other.sslManagerOpts != null) {\n                return false;\n            }\n        } else if (!this.sslManagerOpts.equals(other.sslManagerOpts)) {\n            return false;\n        }\n        if (this.trustStore == null) {\n            if (other.trustStore != null) {\n                return false;\n            }\n        } else if (!this.trustStore.equals(other.trustStore)) {\n            return false;\n        }\n        return true;\n    }\n}<fim_middle>// function below has no smell\n"}