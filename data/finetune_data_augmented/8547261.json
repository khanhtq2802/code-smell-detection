{"text": "<fim_prefix>\n<fim_suffix>public class BaremetalPingPxeResource extends BaremetalPxeResourceBase {\n    private static final Logger s_logger = Logger.getLogger(BaremetalPingPxeResource.class);\n    private static final String Name = \"BaremetalPingPxeResource\";\n    String _storageServer;\n    String _pingDir;\n    String _share;\n    String _dir;\n    String _tftpDir;\n    String _cifsUserName;\n    String _cifsPassword;\n    @Override\n    public boolean configure(String name, Map<String, Object> params) throws ConfigurationException {\n        super.configure(name, params);\n        _storageServer = (String)params.get(BaremetalPxeService.PXE_PARAM_PING_STORAGE_SERVER_IP);\n        _pingDir = (String)params.get(BaremetalPxeService.PXE_PARAM_PING_ROOT_DIR);\n        _tftpDir = (String)params.get(BaremetalPxeService.PXE_PARAM_TFTP_DIR);\n        _cifsUserName = (String)params.get(BaremetalPxeService.PXE_PARAM_PING_STORAGE_SERVER_USERNAME);\n        _cifsPassword = (String)params.get(BaremetalPxeService.PXE_PARAM_PING_STORAGE_SERVER_PASSWORD);\n        if (_podId == null) {\n            throw new ConfigurationException(\"No Pod specified\");\n        }\n        if (_storageServer == null) {\n            throw new ConfigurationException(\"No stroage server specified\");\n        }\n        if (_tftpDir == null) {\n            throw new ConfigurationException(\"No tftp directory specified\");\n        }\n        if (_pingDir == null) {\n            throw new ConfigurationException(\"No PING directory specified\");\n        }\n        if (_cifsUserName == null || _cifsUserName.equalsIgnoreCase(\"\")) {\n            _cifsUserName = \"xxx\";\n        }\n        if (_cifsPassword == null || _cifsPassword.equalsIgnoreCase(\"\")) {\n            _cifsPassword = \"xxx\";\n        }\n        String pingDirs[] = _pingDir.split(\"/\");\n        if (pingDirs.length != 2) {\n            throw new ConfigurationException(\"PING dir should have format like myshare/direcotry, eg: windows/64bit\");\n        }\n        _share = pingDirs[0];\n        _dir = pingDirs[1];\n        com.trilead.ssh2.Connection sshConnection = new com.trilead.ssh2.Connection(_ip, 22);\n        s_logger.debug(String.format(\"Trying to connect to PING PXE server(IP=%1$s, username=%2$s, password=%3$s\", _ip, _username, \"******\"));\n        try {\n            sshConnection.connect(null, 60000, 60000);\n            if (!sshConnection.authenticateWithPassword(_username, _password)) {\n                s_logger.debug(\"SSH Failed to authenticate\");\n                throw new ConfigurationException(String.format(\"Cannot connect to PING PXE server(IP=%1$s, username=%2$s, password=%3$s\", _ip, _username, \"******\"));\n            }\n            String cmd = String.format(\"[ -f /%1$s/pxelinux.0 ] && [ -f /%2$s/kernel ] && [ -f /%3$s/initrd.gz ] \", _tftpDir, _tftpDir, _tftpDir);\n            if (!SSHCmdHelper.sshExecuteCmd(sshConnection, cmd)) {\n                throw new ConfigurationException(\"Miss files in TFTP directory at \" + _tftpDir + \" check if pxelinux.0, kernel initrd.gz are here\");\n            }\n            SCPClient scp = new SCPClient(sshConnection);\n            String prepareScript = \"scripts/network/ping/prepare_tftp_bootfile.py\";\n            String prepareScriptPath = Script.findScript(\"\", prepareScript);\n            if (prepareScriptPath == null) {\n                throw new ConfigurationException(\"Can not find prepare_tftp_bootfile.py at \" + prepareScriptPath);\n            }\n            scp.put(prepareScriptPath, \"/usr/bin/\", \"0755\");\n            String userDataScript = \"scripts/network/ping/baremetal_user_data.py\";\n            String userDataScriptPath = Script.findScript(\"\", userDataScript);\n            if (userDataScriptPath == null) {\n                throw new ConfigurationException(\"Can not find baremetal_user_data.py at \" + userDataScriptPath);\n            }\n            scp.put(userDataScriptPath, \"/usr/bin/\", \"0755\");\n            return true;\n        } catch (Exception e) {\n            throw new ConfigurationException(e.getMessage());\n        } finally {\n            if (sshConnection != null) {\n                sshConnection.close();\n            }\n        }\n    }\n    @Override\n    public PingCommand getCurrentStatus(long id) {\n        com.trilead.ssh2.Connection sshConnection = SSHCmdHelper.acquireAuthorizedConnection(_ip, _username, _password);\n        if (sshConnection == null) {\n            return null;\n        } else {\n            SSHCmdHelper.releaseSshConnection(sshConnection);\n            return new PingRoutingCommand(getType(), id, new HashMap<String, HostVmStateReportEntry>());\n        }\n    }\n    protected PreparePxeServerAnswer execute(PreparePxeServerCommand cmd) {\n        com.trilead.ssh2.Connection sshConnection = new com.trilead.ssh2.Connection(_ip, 22);\n        try {\n            sshConnection.connect(null, 60000, 60000);\n            if (!sshConnection.authenticateWithPassword(_username, _password)) {\n                s_logger.debug(\"SSH Failed to authenticate\");\n                throw new ConfigurationException(String.format(\"Cannot connect to PING PXE server(IP=%1$s, username=%2$s, password=%3$s\", _ip, _username, _password));\n            }\n            String script =\n                String.format(\"python /usr/bin/prepare_tftp_bootfile.py restore %1$s %2$s %3$s %4$s %5$s %6$s %7$s %8$s %9$s %10$s %11$s\", _tftpDir, cmd.getMac(),\n                    _storageServer, _share, _dir, cmd.getTemplate(), _cifsUserName, _cifsPassword, cmd.getIp(), cmd.getNetMask(), cmd.getGateWay());\n            if (!SSHCmdHelper.sshExecuteCmd(sshConnection, script)) {\n                return new PreparePxeServerAnswer(cmd, \"prepare PING at \" + _ip + \" failed, command:\" + script);\n            }\n            s_logger.debug(\"Prepare Ping PXE server successfully\");\n            return new PreparePxeServerAnswer(cmd);\n        } catch (Exception e) {\n            s_logger.debug(\"Prepare PING pxe server failed\", e);\n            return new PreparePxeServerAnswer(cmd, e.getMessage());\n        } finally {\n            if (sshConnection != null) {\n                sshConnection.close();\n            }\n        }\n    }\n    protected Answer execute(PrepareCreateTemplateCommand cmd) {\n        com.trilead.ssh2.Connection sshConnection = new com.trilead.ssh2.Connection(_ip, 22);\n        try {\n            sshConnection.connect(null, 60000, 60000);\n            if (!sshConnection.authenticateWithPassword(_username, _password)) {\n                s_logger.debug(\"SSH Failed to authenticate\");\n                throw new ConfigurationException(String.format(\"Cannot connect to PING PXE server(IP=%1$s, username=%2$s, password=%3$s\", _ip, _username, _password));\n            }\n            String script =\n                String.format(\"python /usr/bin/prepare_tftp_bootfile.py backup %1$s %2$s %3$s %4$s %5$s %6$s %7$s %8$s %9$s %10$s %11$s\", _tftpDir, cmd.getMac(),\n                    _storageServer, _share, _dir, cmd.getTemplate(), _cifsUserName, _cifsPassword, cmd.getIp(), cmd.getNetMask(), cmd.getGateWay());\n            if (!SSHCmdHelper.sshExecuteCmd(sshConnection, script)) {\n                return new Answer(cmd, false, \"prepare for creating template failed, command:\" + script);\n            }\n            s_logger.debug(\"Prepare for creating template successfully\");\n            return new Answer(cmd, true, \"Success\");\n        } catch (Exception e) {\n            s_logger.debug(\"Prepare for creating baremetal template failed\", e);\n            return new Answer(cmd, false, e.getMessage());\n        } finally {\n            if (sshConnection != null) {\n                sshConnection.close();\n            }\n        }\n    }\n    @Override\n    public Answer executeRequest(Command cmd) {\n        if (cmd instanceof PreparePxeServerCommand) {<fim_middle>// class below has no smell\n"}