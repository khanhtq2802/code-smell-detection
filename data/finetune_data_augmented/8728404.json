{"text": "<fim_prefix>            return ACE;\n          case 3: // ASE\n            return ASE;\n          case 4: // AE\n            return AE;\n          default:\n            return null;\n        }\n      }\n      /**\n       * Find the _Fields constant that matches fieldId, throwing an exception\n       * if it is not found.\n       */\n      public static _Fields findByThriftIdOrThrow(int fieldId) {\n        _Fields fields = findByThriftId(fieldId);\n        if (fields == null) throw new IllegalArgumentException(\"Field \" + fieldId + \" doesn't exist!\");\n        return fields;\n      }\n      /**\n       * Find the _Fields constant that matches name, or null if its not found.\n       */\n      public static _Fields findByName(String name) {\n        return byName.get(name);\n      }\n      private final short _thriftId;\n      private final String _fieldName;\n      _Fields(short thriftId, String fieldName) {\n        _thriftId = thriftId;\n        _fieldName = fieldName;\n      }\n      public short getThriftFieldId() {\n        return _thriftId;\n      }\n      public String getFieldName() {\n        return _fieldName;\n      }\n    }\n    // isset id assignments\n    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;\n    static {\n      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);\n      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData(\"success\", org.apache.thrift.TFieldRequirementType.DEFAULT, \n          new org.apache.thrift.meta_data.MapMetaData(org.apache.thrift.protocol.TType.MAP, \n              new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING), \n              new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING))));\n      tmpMap.put(_Fields.IRE, new org.apache.thrift.meta_data.FieldMetaData(\"ire\", org.apache.thrift.TFieldRequirementType.DEFAULT, \n          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRUCT)));\n      tmpMap.put(_Fields.ACE, new org.apache.thrift.meta_data.FieldMetaData(\"ace\", org.apache.thrift.TFieldRequirementType.DEFAULT, \n          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRUCT)));\n      tmpMap.put(_Fields.ASE, new org.apache.thrift.meta_data.FieldMetaData(\"ase\", org.apache.thrift.TFieldRequirementType.DEFAULT, \n          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRUCT)));\n      tmpMap.put(_Fields.AE, new org.apache.thrift.meta_data.FieldMetaData(\"ae\", org.apache.thrift.TFieldRequirementType.DEFAULT, \n          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRUCT)));\n      metaDataMap = Collections.unmodifiableMap(tmpMap);\n      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(getAllApplicationInterfaceNames_result.class, metaDataMap);\n    }\n    public getAllApplicationInterfaceNames_result() {\n    }\n    public getAllApplicationInterfaceNames_result(\n      Map<String,String> success,\n      org.apache.airavata.model.error.InvalidRequestException ire,\n      org.apache.airavata.model.error.AiravataClientException ace,\n      org.apache.airavata.model.error.AiravataSystemException ase,\n      org.apache.airavata.model.error.AuthorizationException ae)\n    {\n      this();\n      this.success = success;\n      this.ire = ire;\n      this.ace = ace;\n      this.ase = ase;\n      this.ae = ae;\n    }\n    /**\n     * Performs a deep copy on <i>other</i>.\n     */\n    public getAllApplicationInterfaceNames_result(getAllApplicationInterfaceNames_result other) {\n      if (other.isSetSuccess()) {\n        Map<String,String> __this__success = new HashMap<String,String>(other.success);\n        this.success = __this__success;\n      }\n      if (other.isSetIre()) {\n        this.ire = new org.apache.airavata.model.error.InvalidRequestException(other.ire);\n      }\n      if (other.isSetAce()) {\n        this.ace = new org.apache.airavata.model.error.AiravataClientException(other.ace);\n      }\n      if (other.isSetAse()) {\n        this.ase = new org.apache.airavata.model.error.AiravataSystemException(other.ase);\n      }\n      if (other.isSetAe()) {\n        this.ae = new org.apache.airavata.model.error.AuthorizationException(other.ae);\n      }\n    }\n    public getAllApplicationInterfaceNames_result deepCopy() {\n      return new getAllApplicationInterfaceNames_result(this);\n    }\n    @Override\n    public void clear() {\n      this.success = null;\n      this.ire = null;\n      this.ace = null;\n      this.ase = null;\n      this.ae = null;\n    }\n    public int getSuccessSize() {\n      return (this.success == null) ? 0 : this.success.size();\n    }\n    public void putToSuccess(String key, String val) {\n      if (this.success == null) {\n        this.success = new HashMap<String,String>();\n      }\n      this.success.put(key, val);\n    }\n    public Map<String,String> getSuccess() {\n      return this.success;\n    }\n    public getAllApplicationInterfaceNames_result setSuccess(Map<String,String> success) {\n      this.success = success;\n      return this;\n    }\n    public void unsetSuccess() {\n      this.success = null;\n    }\n    /** Returns true if field success is set (has been assigned a value) and false otherwise */\n    public boolean isSetSuccess() {\n      return this.success != null;\n    }\n    public void setSuccessIsSet(boolean value) {\n      if (!value) {\n        this.success = null;\n      }\n    }\n    public org.apache.airavata.model.error.InvalidRequestException getIre() {\n      return this.ire;\n    }\n    public getAllApplicationInterfaceNames_result setIre(org.apache.airavata.model.error.InvalidRequestException ire) {\n      this.ire = ire;\n      return this;\n    }\n    public void unsetIre() {\n      this.ire = null;\n    }\n    /** Returns true if field ire is set (has been assigned a value) and false otherwise */\n    public boolean isSetIre() {\n      return this.ire != null;\n    }\n    public void setIreIsSet(boolean value) {\n      if (!value) {\n        this.ire = null;\n      }\n    }\n    public org.apache.airavata.model.error.AiravataClientException getAce() {\n      return this.ace;\n    }\n    public getAllApplicationInterfaceNames_result setAce(org.apache.airavata.model.error.AiravataClientException ace) {\n      this.ace = ace;\n      return this;\n    }\n    public void unsetAce() {\n      this.ace = null;\n    }\n    /** Returns true if field ace is set (has been assigned a value) and false otherwise */\n    public boolean isSetAce() {\n      return this.ace != null;\n    }\n    public void setAceIsSet(boolean value) {\n      if (!value) {\n        this.ace = null;\n      }\n    }\n    public org.apache.airavata.model.error.AiravataSystemException getAse() {\n      return this.ase;\n    }\n    public getAllApplicationInterfaceNames_result setAse(org.apache.airavata.model.error.AiravataSystemException ase) {\n      this.ase = ase;\n      return this;\n    }\n    public void unsetAse() {\n      this.ase = null;\n    }\n    /** Returns true if field ase is set (has been assigned a value) and false otherwise */\n    public boolean isSetAse() {\n      return this.ase != null;\n    }\n    public void setAseIsSet(boolean value) {\n      if (!value) {\n        this.ase = null;\n      }\n    }\n    public org.apache.airavata.model.error.AuthorizationException getAe() {\n      return this.ae;\n    }\n    public getAllApplicationInterfaceNames_result setAe(org.apache.airavata.model.error.AuthorizationException ae) {\n      this.ae = ae;\n      return this;\n    }\n    public void unsetAe() {\n      this.ae = null;\n    }\n    /** Returns true if field ae is set (has been assigned a value) and false otherwise */\n    public boolean isSetAe() {\n      return this.ae != null;\n    }\n<fim_suffix>    public void setAeIsSet(boolean value) {\n      if (!value) {\n        this.ae = null;\n      }\n    }<fim_middle>// function below has no smell\n"}