{"text": "<fim_prefix>/*\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.apache.tomcat.util.descriptor.web;\n\n\n\n/**\n * Representation of a resource link for a web application, as\n * represented in a <code>&lt;ResourceLink&gt;</code> element in the\n * server configuration file.\n *\n * @author Remy Maucherat\n * @author Peter Rossbach (Peter Rossbach (pero@apache.org))\n */\npublic class ContextResourceLink extends ResourceBase {\n\n    private static final long serialVersionUID = 1L;\n\n    // ------------------------------------------------------------- Properties\n\n   /**\n     * The global name of this resource.\n     */\n    private String global = null;\n    /**\n     * The factory to be used for creating the object\n     */\n    private String factory = null;\n\n    public String getGlobal() {\n        return this.global;\n    }\n\n    public void setGlobal(String global) {\n        this.global = global;\n    }\n\n    public String getFactory() {\n        return factory;\n    }\n\n    public void setFactory(String factory) {\n        this.factory = factory;\n    }\n    // --------------------------------------------------------- Public Methods\n\n\n    /**\n     * Return a String representation of this object.\n     */\n    @Override\n    public String toString() {\n\n        StringBuilder sb = new StringBuilder(\"ContextResourceLink[\");\n        sb.append(\"name=\");\n        sb.append(getName());\n        if (getType() != null) {\n            sb.append(\", type=\");\n            sb.append(getType());\n        }\n        if (getGlobal() != null) {\n            sb.append(\", global=\");\n            sb.append(getGlobal());\n        }\n        sb.append(\"]\");\n        return sb.toString();\n    }\n\n\n    @Override\n    public int hashCode() {\n        final int prime = 31;\n        int result = super.hashCode();\n        result = prime * result + ((factory == null) ? 0 : factory.hashCode());\n        result = prime * result + ((global == null) ? 0 : global.hashCode());\n        return result;\n    }\n\n\n<fim_suffix>    @Override\n    public boolean equals(Object obj) {\n        if (this == obj) {\n            return true;\n        }\n        if (!super.equals(obj)) {\n            return false;\n        }\n        if (getClass() != obj.getClass()) {\n            return false;\n        }\n        ContextResourceLink other = (ContextResourceLink) obj;\n        if (factory == null) {\n            if (other.factory != null) {\n                return false;\n            }\n        } else if (!factory.equals(other.factory)) {\n            return false;\n        }\n        if (global == null) {\n            if (other.global != null) {\n                return false;\n            }\n        } else if (!global.equals(other.global)) {\n            return false;\n        }\n        return true;\n    }\n}<fim_middle>// function below has no smell\n"}