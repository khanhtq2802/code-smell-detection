{"text": "<fim_prefix>/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\npackage org.apache.druid.security.basic.authentication;\n\nimport org.apache.druid.java.util.http.client.response.ClientResponse;\nimport org.apache.druid.java.util.http.client.response.FullResponseHolder;\nimport org.apache.druid.java.util.http.client.response.HttpResponseHandler;\nimport org.jboss.netty.buffer.ChannelBuffer;\nimport org.jboss.netty.handler.codec.http.HttpChunk;\nimport org.jboss.netty.handler.codec.http.HttpResponse;\n\npublic class BytesFullResponseHandler implements HttpResponseHandler<FullResponseHolder, FullResponseHolder>\n{\n  @Override\n  public ClientResponse<FullResponseHolder> handleResponse(HttpResponse response, TrafficCop trafficCop)\n  {\n    BytesFullResponseHolder holder = new BytesFullResponseHolder(\n        response.getStatus(),\n        response,\n        null\n    );\n\n    holder.addChunk(getContentBytes(response.getContent()));\n\n    return ClientResponse.unfinished(\n        holder\n    );\n  }\n\n<fim_suffix>  @Override\n  public ClientResponse<FullResponseHolder> handleChunk(\n      ClientResponse<FullResponseHolder> response,\n      HttpChunk chunk,\n      long chunkNum\n  )\n  {\n    BytesFullResponseHolder holder = (BytesFullResponseHolder) response.getObj();\n\n    if (holder == null) {\n      return ClientResponse.finished(null);\n    }\n\n    holder.addChunk(getContentBytes(chunk.getContent()));\n    return response;\n  }\n\n  @Override\n  public ClientResponse<FullResponseHolder> done(ClientResponse<FullResponseHolder> response)\n  {\n    return ClientResponse.finished(response.getObj());\n  }\n\n  @Override\n  public void exceptionCaught(ClientResponse<FullResponseHolder> clientResponse, Throwable e)\n  {\n    // Its safe to Ignore as the ClientResponse returned in handleChunk were unfinished\n  }\n\n  private byte[] getContentBytes(ChannelBuffer content)\n  {\n    byte[] contentBytes = new byte[content.readableBytes()];\n    content.readBytes(contentBytes);\n    return contentBytes;\n  }\n}<fim_middle>// function below has no smell\n"}