{"text": "<fim_prefix>/**\n * Copyright (c) 2014,2019 Contributors to the Eclipse Foundation\n *\n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0\n *\n * SPDX-License-Identifier: EPL-2.0\n */\npackage org.eclipse.smarthome.binding.meteoblue.internal.json;\n\nimport com.google.gson.annotations.SerializedName;\n\n/**\n * {@link JsonDataDay} models the 'data_day' portion of the JSON\n * response to a weather request.\n *\n * @author Chris Carman - Initial contribution\n */\npublic class JsonDataDay {\n\n    private String[] time;\n    private Integer[] pictocode;\n\n    @SerializedName(\"uvindex\")\n    private Integer[] uvIndex;\n\n    @SerializedName(\"temperature_max\")\n    private Double[] temperatureMax;\n\n    @SerializedName(\"temperature_min\")\n    private Double[] temperatureMin;\n\n    @SerializedName(\"temperature_mean\")\n    private Double[] temperatureMean;\n\n    @SerializedName(\"felttemperature_max\")\n    private Double[] feltTemperatureMax;\n\n    @SerializedName(\"felttemperature_min\")\n    private Double[] feltTemperatureMin;\n\n    @SerializedName(\"winddirection\")\n    private Integer[] windDirection;\n\n    @SerializedName(\"precipitation_probability\")\n    private Integer[] precipitationProbability;\n\n    private String[] rainspot;\n\n    @SerializedName(\"predictability_class\")\n    private Integer[] predictabilityClass;\n\n    private Integer[] predictability;\n\n    private Double[] precipitation;\n\n    @SerializedName(\"snowfraction\")\n    private Double[] snowFraction;\n\n    @SerializedName(\"sealevelpressure_max\")\n    private Integer[] seaLevelPressureMax;\n\n    @SerializedName(\"sealevelpressure_min\")\n    private Integer[] seaLevelPressureMin;\n\n    @SerializedName(\"sealevelpressure_mean\")\n    private Integer[] seaLevelPressureMean;\n\n    @SerializedName(\"windspeed_max\")\n    private Double[] windSpeedMax;\n\n    @SerializedName(\"windspeed_mean\")\n    private Double[] windSpeedMean;\n\n    @SerializedName(\"windspeed_min\")\n    private Double[] windSpeedMin;\n\n    @SerializedName(\"relativehumidity_max\")\n    private Integer[] relativeHumidityMax;\n\n    @SerializedName(\"relativehumidity_min\")\n    private Integer[] relativeHumidityMin;\n\n    @SerializedName(\"relativehumidity_mean\")\n    private Integer[] relativeHumidityMean;\n\n    @SerializedName(\"convective_precipitation\")\n    private Double[] convectivePrecipitation;\n\n    @SerializedName(\"precipitation_hours\")\n    private Double[] precipitationHours;\n\n    @SerializedName(\"humiditygreater90_hours\")\n    private Double[] humidityGreater90Hours;\n\n    public JsonDataDay() {\n    }\n\n    public String[] getTime() {\n        return time;\n    }\n\n    public Integer[] getPictocode() {\n        return pictocode;\n    }\n\n    public Integer[] getUVIndex() {\n        return uvIndex;\n    }\n\n    public Double[] getTemperatureMax() {\n        return temperatureMax;\n    }\n\n    public Double[] getTemperatureMin() {\n        return temperatureMin;\n    }\n\n    public Double[] getTemperatureMean() {\n        return temperatureMean;\n    }\n\n    public Double[] getFeltTemperatureMax() {\n        return feltTemperatureMax;\n    }\n\n    public Double[] getFeltTemperatureMin() {\n        return feltTemperatureMin;\n    }\n\n    public Integer[] getWindDirection() {\n        return windDirection;\n    }\n\n    public Integer[] getPrecipitationProbability() {\n        return precipitationProbability;\n    }\n\n    public String[] getRainspot() {\n        return rainspot;\n    }\n\n    public Integer[] getPredictabilityClass() {\n        return predictabilityClass;\n    }\n\n    public Integer[] getPredictability() {\n        return predictability;\n    }\n\n<fim_suffix>    public Double[] getPrecipitation() {\n        return precipitation;\n    }\n\n    public Double[] getSnowFraction() {\n        return snowFraction;\n    }\n\n    public Integer[] getSeaLevelPressureMax() {\n        return seaLevelPressureMax;\n    }\n\n    public Integer[] getSeaLevelPressureMin() {\n        return seaLevelPressureMin;\n    }\n\n    public Integer[] getSeaLevelPressureMean() {\n        return seaLevelPressureMean;\n    }\n\n    public Double[] getWindSpeedMax() {\n        return windSpeedMax;\n    }\n\n    public Double[] getWindSpeedMean() {\n        return windSpeedMean;\n    }\n\n    public Double[] getWindSpeedMin() {\n        return windSpeedMin;\n    }\n\n    public Integer[] getRelativeHumidityMax() {\n        return relativeHumidityMax;\n    }\n\n    public Integer[] getRelativeHumidityMin() {\n        return relativeHumidityMin;\n    }\n\n    public Integer[] getRelativeHumidityMean() {\n        return relativeHumidityMean;\n    }\n\n    public Double[] getConvectivePrecipitation() {\n        return convectivePrecipitation;\n    }\n\n    public Double[] getPrecipitationHours() {\n        return precipitationHours;\n    }\n\n    public Double[] getHumidityGreater90Hours() {\n        return humidityGreater90Hours;\n    }\n}<fim_middle>// function below has no smell\n"}