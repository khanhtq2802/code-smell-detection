{"text": "<fim_prefix>/*\n * Copyright (c) 2003, 2006, Oracle and/or its affiliates. All rights reserved.\n */\n\n/* Copyright  (c) 2002 Graz University of Technology. All rights reserved.\n *\n * Redistribution and use in  source and binary forms, with or without\n * modification, are permitted  provided that the following conditions are met:\n *\n * 1. Redistributions of  source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n *\n * 2. Redistributions in  binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * 3. The end-user documentation included with the redistribution, if any, must\n *    include the following acknowledgment:\n *\n *    \"This product includes software developed by IAIK of Graz University of\n *     Technology.\"\n *\n *    Alternately, this acknowledgment may appear in the software itself, if\n *    and wherever such third-party acknowledgments normally appear.\n *\n * 4. The names \"Graz University of Technology\" and \"IAIK of Graz University of\n *    Technology\" must not be used to endorse or promote products derived from\n *    this software without prior written permission.\n *\n * 5. Products derived from this software may not be called\n *    \"IAIK PKCS Wrapper\", nor may \"IAIK\" appear in their name, without prior\n *    written permission of Graz University of Technology.\n *\n *  THIS SOFTWARE IS PROVIDED \"AS IS\" AND ANY EXPRESSED OR IMPLIED\n *  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n *  PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE LICENSOR BE\n *  LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,\n *  OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n *  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\n *  OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n *  ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n *  OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY\n *  OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY  OF SUCH DAMAGE.\n */\n\npackage sun.security.pkcs11.wrapper;\n\n\n\n/**\n * class CK_ECDH1_DERIVE_PARAMS provides the parameters to the\n * CKM_ECDH1_DERIVE and CKM_ECDH1_COFACTOR_DERIVE mechanisms.<p>\n * <B>PKCS#11 structure:</B>\n * <PRE>\n * typedef struct CK_ECDH1_DERIVE_PARAMS {\n *   CK_EC_KDF_TYPE kdf;\n *   CK_ULONG ulSharedDataLen;\n *   CK_BYTE_PTR pSharedData;\n *   CK_ULONG ulPublicDataLen;\n *   CK_BYTE_PTR pPublicData;\n * } CK_ECDH1_DERIVE_PARAMS;\n * </PRE>\n *\n * @author Karl Scheibelhofer <Karl.Scheibelhofer@iaik.at>\n */\npublic class CK_ECDH1_DERIVE_PARAMS {\n\n    /**\n     * <B>PKCS#11:</B>\n     * <PRE>\n     *   CK_EC_KDF_TYPE kdf;\n     * </PRE>\n     */\n    public long kdf;\n\n    /**\n     * <B>PKCS#11:</B>\n     * <PRE>\n     *   CK_ULONG ulSharedDataLen;\n     *   CK_BYTE_PTR pSharedData;\n     * </PRE>\n     */\n    public byte[] pSharedData;\n\n    /**\n     * <B>PKCS#11:</B>\n     * <PRE>\n     *   CK_ULONG ulPublicDataLen;\n     *   CK_BYTE_PTR pPublicData;\n     * </PRE>\n     */\n    public byte[] pPublicData;\n\n    public CK_ECDH1_DERIVE_PARAMS(long kdf, byte[] pSharedData, byte[] pPublicData) {\n        this.kdf = kdf;\n        this.pSharedData = pSharedData;\n        this.pPublicData = pPublicData;\n    }\n\n    /**\n     * Returns the string representation of CK_PKCS5_PBKD2_PARAMS.\n     *\n     * @return the string representation of CK_PKCS5_PBKD2_PARAMS\n     */\n<fim_suffix>    public String toString() {\n        StringBuilder sb = new StringBuilder();\n\n        sb.append(Constants.INDENT);\n        sb.append(\"kdf: 0x\");\n        sb.append(Functions.toFullHexString(kdf));\n        sb.append(Constants.NEWLINE);\n\n        sb.append(Constants.INDENT);\n        sb.append(\"pSharedDataLen: \");\n        sb.append(pSharedData.length);\n        sb.append(Constants.NEWLINE);\n\n        sb.append(Constants.INDENT);\n        sb.append(\"pSharedData: \");\n        sb.append(Functions.toHexString(pSharedData));\n        sb.append(Constants.NEWLINE);\n\n        sb.append(Constants.INDENT);\n        sb.append(\"pPublicDataLen: \");\n        sb.append(pPublicData.length);\n        sb.append(Constants.NEWLINE);\n\n        sb.append(Constants.INDENT);\n        sb.append(\"pPublicData: \");\n        sb.append(Functions.toHexString(pPublicData));\n        //buffer.append(Constants.NEWLINE);\n\n        return sb.toString();\n    }\n\n}<fim_middle>// function below is long method\n"}