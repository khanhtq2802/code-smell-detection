{"text": "<fim_prefix>/**\n * Copyright (c) 2016, 2019, Oracle and/or its affiliates. All rights reserved.\n */\npackage com.oracle.bmc.objectstorage.requests;\n\nimport com.oracle.bmc.objectstorage.model.*;\n\n<fim_suffix>@javax.annotation.Generated(value = \"OracleSDKGenerator\", comments = \"API Version: 20160918\")\n@lombok.Builder(builderClassName = \"Builder\", buildMethodName = \"buildWithoutInvocationCallback\")\n@lombok.Getter\npublic class AbortMultipartUploadRequest extends com.oracle.bmc.requests.BmcRequest {\n\n    /**\n     * The top-level namespace used for the request.\n     */\n    private String namespaceName;\n\n    /**\n     * The name of the bucket. Avoid entering confidential information.\n     * Example: `my-new-bucket1`\n     *\n     */\n    private String bucketName;\n\n    /**\n     * The name of the object. Avoid entering confidential information.\n     * Example: `test/object1.log`\n     *\n     */\n    private String objectName;\n\n    /**\n     * The upload ID for a multipart upload.\n     */\n    private String uploadId;\n\n    /**\n     * The client request ID for tracing.\n     */\n    private String opcClientRequestId;\n\n    public static class Builder {\n        private com.oracle.bmc.util.internal.Consumer<javax.ws.rs.client.Invocation.Builder>\n                invocationCallback = null;\n\n        /**\n         * Set the invocation callback for the request to be built.\n         * @param invocationCallback the invocation callback to be set for the request\n         * @return this builder instance\n         */\n        public Builder invocationCallback(\n                com.oracle.bmc.util.internal.Consumer<javax.ws.rs.client.Invocation.Builder>\n                        invocationCallback) {\n            this.invocationCallback = invocationCallback;\n            return this;\n        }\n\n        /**\n         * Copy method to populate the builder with values from the given instance.\n         * @return this builder instance\n         */\n        public Builder copy(AbortMultipartUploadRequest o) {\n            namespaceName(o.getNamespaceName());\n            bucketName(o.getBucketName());\n            objectName(o.getObjectName());\n            uploadId(o.getUploadId());\n            opcClientRequestId(o.getOpcClientRequestId());\n            invocationCallback(o.getInvocationCallback());\n            return this;\n        }\n\n        /**\n         * Build the instance of AbortMultipartUploadRequest as configured by this builder\n         *\n         * Note that this method takes calls to {@link Builder#invocationCallback(com.oracle.bmc.util.internal.Consumer)} into account,\n         * while the method {@link Builder#buildWithoutInvocationCallback} does not.\n         *\n         * This is the preferred method to build an instance.\n         *\n         * @return instance of AbortMultipartUploadRequest\n         */\n        public AbortMultipartUploadRequest build() {\n            AbortMultipartUploadRequest request = buildWithoutInvocationCallback();\n            request.setInvocationCallback(invocationCallback);\n            return request;\n        }\n    }\n}<fim_middle>// class below has no smell\n"}