{"text": "<fim_prefix>// Copyright (c) Microsoft. All rights reserved.\n// Licensed under the MIT license. See License.txt in the repository root.\n\n /*\n * This file was automatically generated by com.microsoft.tfs.core.ws.generator.Generator\n * from the /complexType.vm template.\n */\npackage ms.tfs.versioncontrol.clientservices._03;\n\nimport com.microsoft.tfs.core.ws.runtime.*;\nimport com.microsoft.tfs.core.ws.runtime.serialization.*;\nimport com.microsoft.tfs.core.ws.runtime.types.*;\nimport com.microsoft.tfs.core.ws.runtime.util.*;\nimport com.microsoft.tfs.core.ws.runtime.xml.*;\n\nimport ms.tfs.versioncontrol.clientservices._03._ChangeType;\nimport ms.tfs.versioncontrol.clientservices._03._Failure;\nimport ms.tfs.versioncontrol.clientservices._03._ItemType;\nimport ms.tfs.versioncontrol.clientservices._03._LockLevel;\nimport ms.tfs.versioncontrol.clientservices._03._MergeSource;\nimport ms.tfs.versioncontrol.clientservices._03._PendingChange;\nimport ms.tfs.versioncontrol.clientservices._03._PropertyValue;\nimport ms.tfs.versioncontrol.clientservices._03._RepositorySoap_QueryPendingChangesForWorkspaceResponse;\nimport ms.tfs.versioncontrol.clientservices._03._RequestType;\nimport ms.tfs.versioncontrol.clientservices._03._SeverityType;\nimport ms.tfs.versioncontrol.clientservices._03._Warning;\nimport ms.tfs.versioncontrol.clientservices._03._WarningType;\n\nimport java.lang.Object;\nimport java.lang.String;\n\nimport java.util.ArrayList;\nimport java.util.Calendar;\nimport java.util.List;\n\nimport javax.xml.stream.XMLStreamConstants;\nimport javax.xml.stream.XMLStreamException;\nimport javax.xml.stream.XMLStreamReader;\nimport javax.xml.stream.XMLStreamWriter;\n\n/**\n * Automatically generated complex type class.\n */\npublic class _RepositorySoap_QueryPendingChangesForWorkspaceResponse\n    implements ElementDeserializable\n{\n    // No attributes    \n\n    // Elements\n    protected _PendingChange[] queryPendingChangesForWorkspaceResult;\n    protected _Failure[] failures;\n\n    public _RepositorySoap_QueryPendingChangesForWorkspaceResponse()\n    {\n        super();\n    }\n\n    public _RepositorySoap_QueryPendingChangesForWorkspaceResponse(\n        final _PendingChange[] queryPendingChangesForWorkspaceResult,\n        final _Failure[] failures)\n    {\n        // TODO : Call super() instead of setting all fields directly?\n        setQueryPendingChangesForWorkspaceResult(queryPendingChangesForWorkspaceResult);\n        setFailures(failures);\n    }\n\n    public _PendingChange[] getQueryPendingChangesForWorkspaceResult()\n    {\n        return this.queryPendingChangesForWorkspaceResult;\n    }\n\n    public void setQueryPendingChangesForWorkspaceResult(_PendingChange[] value)\n    {\n        this.queryPendingChangesForWorkspaceResult = value;\n    }\n\n<fim_suffix>    public _Failure[] getFailures()\n    {\n        return this.failures;\n    }\n\n    public void setFailures(_Failure[] value)\n    {\n        this.failures = value;\n    }\n\n    public void readFromElement(final XMLStreamReader reader)\n        throws XMLStreamException\n    {\n        String localName;\n\n        // This object uses no attributes\n\n        // Elements\n        int event;\n\n        do\n        {\n            event = reader.next();\n\n            if (event == XMLStreamConstants.START_ELEMENT)\n            {\n                localName = reader.getLocalName();\n\n                if (localName.equalsIgnoreCase(\"QueryPendingChangesForWorkspaceResult\"))\n                {\n                    /*\n                     * The element type is an array.\n                     */\n                    int event0;\n                    final List list0 = new ArrayList();\n\n                    do\n                    {\n                        event0 = reader.nextTag();\n\n                        if (event0 == XMLStreamConstants.START_ELEMENT)\n                        {\n                            _PendingChange complexObject0 = new _PendingChange();\n                            complexObject0.readFromElement(reader);\n                            list0.add(complexObject0);\n                        }\n                    }\n                    while (event0 != XMLStreamConstants.END_ELEMENT);\n\n                    this.queryPendingChangesForWorkspaceResult = (_PendingChange[]) list0.toArray(\n                                new _PendingChange[list0.size()]);\n                }\n                else if (localName.equalsIgnoreCase(\"failures\"))\n                {\n                    /*\n                     * The element type is an array.\n                     */\n                    int event0;\n                    final List list0 = new ArrayList();\n\n                    do\n                    {\n                        event0 = reader.nextTag();\n\n                        if (event0 == XMLStreamConstants.START_ELEMENT)\n                        {\n                            _Failure complexObject0 = new _Failure();\n                            complexObject0.readFromElement(reader);\n                            list0.add(complexObject0);\n                        }\n                    }\n                    while (event0 != XMLStreamConstants.END_ELEMENT);\n\n                    this.failures = (_Failure[]) list0.toArray(new _Failure[list0.size()]);\n                }\n                else\n                {\n                    // Read the unknown child element until its end\n                    XMLStreamReaderHelper.readUntilElementEnd(reader);\n                }\n            }\n        }\n        while (event != XMLStreamConstants.END_ELEMENT);\n    }\n}<fim_middle>// function below has no smell\n"}