{"text": "<fim_prefix>\t\t\t\t\tif (root != null)\n\t\t\t\t\t {\n\t\t\t\t\t\treturn root.getPackageFragment(\"\"); //$NON-NLS-1$\n\t\t\t\t\t}\n\t\t\t\t} catch (JavaModelException e) {\n\t\t\t\t\t// fall through\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn (IPackageFragment) javaDest.getAncestor(IJavaElement.PACKAGE_FRAGMENT);\n\t\t}\n\t\t@Override\n\t\tpublic final IJavaElement[] getJavaElements() {\n\t\t\treturn fCus;\n\t\t}\n\t\tprivate IPackageFragment getResourceDestinationAsPackageFragment(IResource resource) {\n\t\t\tif (resource instanceof IFile) {\n\t\t\t\treturn getJavaDestinationAsPackageFragment(JavaCore.create(resource.getParent()));\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\t\t@Override\n\t\tpublic final IResource[] getResources() {\n\t\t\treturn ReorgUtils.union(fFiles, fFolders);\n\t\t}\n\t\tprivate IProject getSingleProject() {\n\t\t\tIProject result= null;\n\t\t\tfor (int index= 0; index < fFiles.length; index++) {\n\t\t\t\tif (result == null) {\n\t\t\t\t\tresult= fFiles[index].getProject();\n\t\t\t\t} else if (!result.equals(fFiles[index].getProject())) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (int index= 0; index < fFolders.length; index++) {\n\t\t\t\tif (result == null) {\n\t\t\t\t\tresult= fFolders[index].getProject();\n\t\t\t\t} else if (!result.equals(fFolders[index].getProject())) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (int index= 0; index < fCus.length; index++) {\n\t\t\t\tif (result == null) {\n\t\t\t\t\tresult= fCus[index].getJavaProject().getProject();\n\t\t\t\t} else if (!result.equals(fCus[index].getJavaProject().getProject())) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\t\t@Override\n\t\tpublic RefactoringStatus initialize(JavaRefactoringArguments arguments) {\n\t\t\tRefactoringStatus status= new RefactoringStatus();\n\t\t\tint fileCount= 0;\n\t\t\tint folderCount= 0;\n\t\t\tint unitCount= 0;\n\t\t\tString value= arguments.getAttribute(ATTRIBUTE_FILES);\n\t\t\tif (value != null && !\"\".equals(value)) {//$NON-NLS-1$\n\t\t\t\ttry {\n\t\t\t\t\tfileCount= Integer.parseInt(value);\n\t\t\t\t} catch (NumberFormatException exception) {\n\t\t\t\t\treturn RefactoringStatus.createFatalErrorStatus(Messages.format(RefactoringCoreMessages.InitializableRefactoring_argument_not_exist, ATTRIBUTE_FILES));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn RefactoringStatus.createFatalErrorStatus(Messages.format(RefactoringCoreMessages.InitializableRefactoring_argument_not_exist, ATTRIBUTE_FILES));\n\t\t\t}\n\t\t\tvalue= arguments.getAttribute(ATTRIBUTE_FOLDERS);\n\t\t\tif (value != null && !\"\".equals(value)) {//$NON-NLS-1$\n\t\t\t\ttry {\n\t\t\t\t\tfolderCount= Integer.parseInt(value);\n\t\t\t\t} catch (NumberFormatException exception) {\n\t\t\t\t\treturn RefactoringStatus.createFatalErrorStatus(Messages.format(RefactoringCoreMessages.InitializableRefactoring_argument_not_exist, ATTRIBUTE_FOLDERS));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn RefactoringStatus.createFatalErrorStatus(Messages.format(RefactoringCoreMessages.InitializableRefactoring_argument_not_exist, ATTRIBUTE_FOLDERS));\n\t\t\t}\n\t\t\tvalue= arguments.getAttribute(ATTRIBUTE_UNITS);\n\t\t\tif (value != null && !\"\".equals(value)) {//$NON-NLS-1$\n\t\t\t\ttry {\n\t\t\t\t\tunitCount= Integer.parseInt(value);\n\t\t\t\t} catch (NumberFormatException exception) {\n\t\t\t\t\treturn RefactoringStatus.createFatalErrorStatus(Messages.format(RefactoringCoreMessages.InitializableRefactoring_argument_not_exist, ATTRIBUTE_UNITS));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn RefactoringStatus.createFatalErrorStatus(Messages.format(RefactoringCoreMessages.InitializableRefactoring_argument_not_exist, ATTRIBUTE_UNITS));\n\t\t\t}\n\t\t\tString handle= null;\n\t\t\tList<IAdaptable> elements= new ArrayList<>();\n\t\t\tfor (int index= 0; index < fileCount; index++) {\n\t\t\t\tfinal String attribute= JavaRefactoringDescriptorUtil.ATTRIBUTE_ELEMENT + (index + 1);\n\t\t\t\thandle= arguments.getAttribute(attribute);\n\t\t\t\tif (handle != null && !\"\".equals(handle)) { //$NON-NLS-1$\n\t\t\t\t\tfinal IResource resource= JavaRefactoringDescriptorUtil.handleToResource(arguments.getProject(), handle);\n\t\t\t\t\tif (resource == null || !resource.exists()) {\n\t\t\t\t\t\tstatus.merge(JavaRefactoringDescriptorUtil.createInputWarningStatus(resource, getProcessorId(), getRefactoringId()));\n\t\t\t\t\t} else {\n\t\t\t\t\t\telements.add(resource);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\treturn RefactoringStatus.createFatalErrorStatus(Messages.format(RefactoringCoreMessages.InitializableRefactoring_argument_not_exist, attribute));\n\t\t\t\t}\n\t\t\t}\n\t\t\tfFiles= elements.toArray(new IFile[elements.size()]);\n\t\t\telements= new ArrayList<>();\n\t\t\tfor (int index= 0; index < folderCount; index++) {\n\t\t\t\tfinal String attribute= JavaRefactoringDescriptorUtil.ATTRIBUTE_ELEMENT + (fileCount + index + 1);\n\t\t\t\thandle= arguments.getAttribute(attribute);\n\t\t\t\tif (handle != null && !\"\".equals(handle)) { //$NON-NLS-1$\n\t\t\t\t\tfinal IResource resource= JavaRefactoringDescriptorUtil.handleToResource(arguments.getProject(), handle);\n\t\t\t\t\tif (resource == null || !resource.exists()) {\n\t\t\t\t\t\tstatus.merge(JavaRefactoringDescriptorUtil.createInputWarningStatus(resource, getProcessorId(), getRefactoringId()));\n\t\t\t\t\t} else {\n\t\t\t\t\t\telements.add(resource);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\treturn RefactoringStatus.createFatalErrorStatus(Messages.format(RefactoringCoreMessages.InitializableRefactoring_argument_not_exist, attribute));\n\t\t\t\t}\n\t\t\t}\n\t\t\tfFolders= elements.toArray(new IFolder[elements.size()]);\n\t\t\telements= new ArrayList<>();\n\t\t\tfor (int index= 0; index < unitCount; index++) {\n\t\t\t\tfinal String attribute= JavaRefactoringDescriptorUtil.ATTRIBUTE_ELEMENT + (folderCount + fileCount + index + 1);\n\t\t\t\thandle= arguments.getAttribute(attribute);\n\t\t\t\tif (handle != null && !\"\".equals(handle)) { //$NON-NLS-1$\n\t\t\t\t\tfinal IJavaElement element= JavaRefactoringDescriptorUtil.handleToElement(arguments.getProject(), handle, false);\n\t\t\t\t\tif (element == null || !element.exists() || element.getElementType() != IJavaElement.COMPILATION_UNIT) {\n\t\t\t\t\t\tstatus.merge(JavaRefactoringDescriptorUtil.createInputWarningStatus(element, getProcessorId(), getRefactoringId()));\n\t\t\t\t\t} else {\n\t\t\t\t\t\telements.add(element);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\treturn RefactoringStatus.createFatalErrorStatus(Messages.format(RefactoringCoreMessages.InitializableRefactoring_argument_not_exist, attribute));\n\t\t\t\t}\n\t\t\t}\n\t\t\tfCus= elements.toArray(new ICompilationUnit[elements.size()]);\n\t\t\tstatus.merge(super.initialize(arguments));\n\t\t\treturn status;\n\t\t}\n<fim_suffix>\t\tprivate boolean isChildOfOrEqualToAnyFolder(IResource resource) {\n\t\t\tfor (int i= 0; i < fFolders.length; i++) {\n\t\t\t\tIFolder folder= fFolders[i];\n\t\t\t\tif (folder.equals(resource) || ParentChecker.isDescendantOf(resource, folder)) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t}<fim_middle>// function below has no smell\n"}