{"text": "<fim_prefix>/*\n * Copyright 2002-2007 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage com.baidu.jprotobuf.pbrpc.data;\nimport java.io.IOException;\nimport com.baidu.bjf.remoting.protobuf.Codec;\nimport com.baidu.bjf.remoting.protobuf.FieldType;\nimport com.baidu.bjf.remoting.protobuf.ProtobufProxy;\nimport com.baidu.bjf.remoting.protobuf.annotation.Protobuf;\n/**\n * RPC meta data.\n *\n * @author xiemalin\n * @see RpcRequestMeta\n * @see RpcResponseMeta\n * @since 1.0\n */\npublic class RpcMeta implements Readable, Writerable, Cloneable {\n    /** The Constant COMPRESS_NO. */\n    public static final int COMPRESS_NO = 0;\n    /** The Constant COMPRESS_SNAPPY. */\n    public static final int COMPRESS_SNAPPY = 1;\n    /** The Constant COMPERESS_GZIP. */\n    public static final int COMPERESS_GZIP = 2;\n    /** Decode and encode handler. */\n    private static final Codec<RpcMeta> CODEC = ProtobufProxy.create(RpcMeta.class);\n    /** \u8bf7\u6c42\u5305\u5143\u6570\u636e. */\n    @Protobuf(fieldType = FieldType.OBJECT, order = 1)\n    private RpcRequestMeta request;\n    /** \u54cd\u5e94\u5305\u5143\u6570\u636e. */\n    @Protobuf(fieldType = FieldType.OBJECT, order = 2)\n    private RpcResponseMeta response;\n    /**\n     * 0 \u4e0d\u538b\u7f29 1 \u4f7f\u7528Snappy 1.0.5 2 \u4f7f\u7528gzip\n     */\n    @Protobuf(order = 3)\n    private Integer compressType;\n    /**\n     * \u8bf7\u6c42\u5305\u4e2d\u7684\u8be5\u57df\u7531\u8bf7\u6c42\u65b9\u8bbe\u7f6e\uff0c\u7528\u4e8e\u552f\u4e00\u6807\u8bc6\u4e00\u4e2aRPC\u8bf7\u6c42\u3002<br>\n     * \u8bf7\u6c42\u65b9\u6709\u4e49\u52a1\u4fdd\u8bc1\u5176\u552f\u4e00\u6027\uff0c\u534f\u8bae\u672c\u8eab\u5bf9\u6b64\u4e0d\u505a\u4efb\u4f55\u68c0\u67e5\u3002 <br>\n     * \u54cd\u5e94\u65b9\u9700\u8981\u5728\u5bf9\u5e94\u7684\u54cd\u5e94\u5305\u91cc\u9762\u5c06correlation_id\u8bbe\u4e3a\u540c\u6837\u7684\u503c\u3002.\n     * \n     */\n    @Protobuf(order = 4)\n    private Long correlationId;\n    /** \u9644\u4ef6\u5927\u5c0f. */\n    @Protobuf(order = 5)\n    private Integer attachmentSize;\n    /** Chunk\u6a21\u5f0f\u672c\u8d28\u4e0a\u662f\u5c06\u4e00\u4e2a\u5927\u7684\u6570\u636e\u6d41\u62c6\u5206\u6210\u4e00\u4e2a\u4e2a\u5c0f\u7684Chunk\u5305\u6309\u5e8f\u8fdb\u884c\u53d1\u9001\u3002\u5982\u4f55\u62c6\u5206\u8fd8\u539f\u7531\u901a\u4fe1\u53cc\u65b9\u786e\u5b9a. */\n    @Protobuf(order = 6)\n    private ChunkInfo chunkInfo;\n    /** \u7528\u4e8e\u5b58\u653e\u8eab\u4efd\u8ba4\u8bc1\u76f8\u5173\u4fe1\u606f. */\n    @Protobuf(fieldType = FieldType.BYTES, order = 7)\n    private byte[] authenticationData;\n    /**\n     * Gets the \u8bf7\u6c42\u5305\u5143\u6570\u636e.\n     *\n     * @return the \u8bf7\u6c42\u5305\u5143\u6570\u636e\n     */\n    public RpcRequestMeta getRequest() {\n        return request;\n    }\n    /**\n     * Sets the \u8bf7\u6c42\u5305\u5143\u6570\u636e.\n     *\n     * @param request the new \u8bf7\u6c42\u5305\u5143\u6570\u636e\n     */\n    public void setRequest(RpcRequestMeta request) {\n        this.request = request;\n    }\n    /**\n     * Gets the \u54cd\u5e94\u5305\u5143\u6570\u636e.\n     *\n     * @return the \u54cd\u5e94\u5305\u5143\u6570\u636e\n     */\n    public RpcResponseMeta getResponse() {\n        return response;\n    }\n    /**\n     * Sets the \u54cd\u5e94\u5305\u5143\u6570\u636e.\n     *\n     * @param response the new \u54cd\u5e94\u5305\u5143\u6570\u636e\n     */\n    public void setResponse(RpcResponseMeta response) {\n        this.response = response;\n    }\n    /**\n     * Gets the 0 \u4e0d\u538b\u7f29 1 \u4f7f\u7528Snappy 1.\n     *\n     * @return the 0 \u4e0d\u538b\u7f29 1 \u4f7f\u7528Snappy 1\n     */\n<fim_suffix>    public Integer getCompressType() {\n        if (compressType == null) {\n            compressType = 0;\n        }\n        return compressType;\n    }\n    /**\n     * Sets the 0 \u4e0d\u538b\u7f29 1 \u4f7f\u7528Snappy 1.\n     *\n     * @param compressType the new 0 \u4e0d\u538b\u7f29 1 \u4f7f\u7528Snappy 1\n     */\n    public void setCompressType(Integer compressType) {\n        this.compressType = compressType;\n    }\n    /**\n     * Gets the \u8bf7\u6c42\u5305\u4e2d\u7684\u8be5\u57df\u7531\u8bf7\u6c42\u65b9\u8bbe\u7f6e\uff0c\u7528\u4e8e\u552f\u4e00\u6807\u8bc6\u4e00\u4e2aRPC\u8bf7\u6c42\u3002<br>\n     * \u8bf7\u6c42\u65b9\u6709\u4e49\u52a1\u4fdd\u8bc1\u5176\u552f\u4e00\u6027\uff0c\u534f\u8bae\u672c\u8eab\u5bf9\u6b64\u4e0d\u505a\u4efb\u4f55\u68c0\u67e5\u3002<br>\n     * \u54cd\u5e94\u65b9\u9700\u8981\u5728\u5bf9\u5e94\u7684\u54cd\u5e94\u5305\u91cc\u9762\u5c06correlation_id\u8bbe\u4e3a\u540c\u6837\u7684\u503c\u3002.\n     *\n     * @return the \u8bf7\u6c42\u5305\u4e2d\u7684\u8be5\u57df\u7531\u8bf7\u6c42\u65b9\u8bbe\u7f6e\uff0c\u7528\u4e8e\u552f\u4e00\u6807\u8bc6\u4e00\u4e2aRPC\u8bf7\u6c42\u3002<br>\n     *         \u8bf7\u6c42\u65b9\u6709\u4e49\u52a1\u4fdd\u8bc1\u5176\u552f\u4e00\u6027\uff0c\u534f\u8bae\u672c\u8eab\u5bf9\u6b64\u4e0d\u505a\u4efb\u4f55\u68c0\u67e5\u3002<br>\n     *         \u54cd\u5e94\u65b9\u9700\u8981\u5728\u5bf9\u5e94\u7684\u54cd\u5e94\u5305\u91cc\u9762\u5c06correlation_id\u8bbe\u4e3a\u540c\u6837\u7684\u503c\u3002\n     */\n    public Long getCorrelationId() {\n        if (correlationId == null) {\n            correlationId = 0L;\n        }\n        return correlationId;\n    }\n    /**\n     * Sets the \u8bf7\u6c42\u5305\u4e2d\u7684\u8be5\u57df\u7531\u8bf7\u6c42\u65b9\u8bbe\u7f6e\uff0c\u7528\u4e8e\u552f\u4e00\u6807\u8bc6\u4e00\u4e2aRPC\u8bf7\u6c42\u3002<br>\n     * \u8bf7\u6c42\u65b9\u6709\u4e49\u52a1\u4fdd\u8bc1\u5176\u552f\u4e00\u6027\uff0c\u534f\u8bae\u672c\u8eab\u5bf9\u6b64\u4e0d\u505a\u4efb\u4f55\u68c0\u67e5\u3002<br>\n     * \u54cd\u5e94\u65b9\u9700\u8981\u5728\u5bf9\u5e94\u7684\u54cd\u5e94\u5305\u91cc\u9762\u5c06correlation_id\u8bbe\u4e3a\u540c\u6837\u7684\u503c\u3002.\n     *\n     * @param correlationId the new \u8bf7\u6c42\u5305\u4e2d\u7684\u8be5\u57df\u7531\u8bf7\u6c42\u65b9\u8bbe\u7f6e\uff0c\u7528\u4e8e\u552f\u4e00\u6807\u8bc6\u4e00\u4e2aRPC\u8bf7\u6c42\u3002<br>\n     *            \u8bf7\u6c42\u65b9\u6709\u4e49\u52a1\u4fdd\u8bc1\u5176\u552f\u4e00\u6027\uff0c\u534f\u8bae\u672c\u8eab\u5bf9\u6b64\u4e0d\u505a\u4efb\u4f55\u68c0\u67e5\u3002<br>\n     *            \u54cd\u5e94\u65b9\u9700\u8981\u5728\u5bf9\u5e94\u7684\u54cd\u5e94\u5305\u91cc\u9762\u5c06correlation_id\u8bbe\u4e3a\u540c\u6837\u7684\u503c\u3002\n     */\n    public void setCorrelationId(Long correlationId) {\n        this.correlationId = correlationId;\n    }\n    /**\n     * Gets the \u9644\u4ef6\u5927\u5c0f.\n     *\n     * @return the \u9644\u4ef6\u5927\u5c0f\n     */\n    public Integer getAttachmentSize() {\n        if (attachmentSize == null) {\n            return 0;\n        }\n        return attachmentSize;\n    }\n    /**\n     * Sets the \u9644\u4ef6\u5927\u5c0f.\n     *\n     * @param attachmentSize the new \u9644\u4ef6\u5927\u5c0f\n     */\n    public void setAttachmentSize(Integer attachmentSize) {\n        this.attachmentSize = attachmentSize;\n    }\n    /**\n     * Gets the \u7528\u4e8e\u5b58\u653e\u8eab\u4efd\u8ba4\u8bc1\u76f8\u5173\u4fe1\u606f.\n     *\n     * @return the \u7528\u4e8e\u5b58\u653e\u8eab\u4efd\u8ba4\u8bc1\u76f8\u5173\u4fe1\u606f\n     */\n    public byte[] getAuthenticationData() {\n        return authenticationData;\n    }\n    /**\n     * Sets the \u7528\u4e8e\u5b58\u653e\u8eab\u4efd\u8ba4\u8bc1\u76f8\u5173\u4fe1\u606f.\n     *\n     * @param authenticationData the new \u7528\u4e8e\u5b58\u653e\u8eab\u4efd\u8ba4\u8bc1\u76f8\u5173\u4fe1\u606f\n     */\n    public void setAuthenticationData(byte[] authenticationData) {\n        this.authenticationData = authenticationData;\n    }\n    /*\n     * (non-Javadoc)\n     * \n     * @see com.baidu.jprotobuf.remoting.pbrpc.Writerable#write()\n     */\n    public byte[] write() {\n        try {\n            return CODEC.encode(this);\n        } catch (IOException e) {\n            throw new RuntimeException(e.getMessage(), e);\n        }\n    }\n    /*\n     * (non-Javadoc)\n     * \n     * @see com.baidu.jprotobuf.remoting.pbrpc.Readable#read(byte[])\n     */\n    public void read(byte[] bytes) {\n        if (bytes == null) {\n            throw new IllegalArgumentException(\"param 'bytes' is null.\");\n        }\n        try {\n            RpcMeta meta = CODEC.decode(bytes);\n            copyReference(meta);\n        } catch (IOException e) {\n            throw new RuntimeException(e.getMessage(), e);\n        }\n    }\n    /**\n     * copy {@link RpcMeta}.\n     *\n     * @param meta the meta\n     */\n    private void copyReference(RpcMeta meta) {\n        if (meta == null) {\n            return;\n        }\n        setRequest(meta.getRequest());\n        setResponse(meta.getResponse());\n        setAttachmentSize(meta.getAttachmentSize());\n        setAuthenticationData(meta.getAuthenticationData());\n        setCompressType(meta.getCompressType());\n        setCorrelationId(meta.getCorrelationId());\n        setChunkInfo(meta.getChunkInfo());\n    }\n    /**\n     * Copy.\n     *\n     * @return the rpc meta\n     */\n    public RpcMeta copy() {\n        RpcMeta rpcMeta = new RpcMeta();\n        if (chunkInfo != null) {\n            rpcMeta.setChunkInfo(chunkInfo.copy());\n        }\n        if (request != null) {\n            rpcMeta.setRequest(request.copy());\n        }\n        if (response != null) {\n            rpcMeta.setResponse(response.copy());\n        }\n        rpcMeta.setAttachmentSize(attachmentSize);\n        rpcMeta.setAuthenticationData(authenticationData);\n        rpcMeta.setCompressType(compressType);<fim_middle>// function below has no smell\n"}