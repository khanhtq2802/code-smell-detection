{"text": "<fim_prefix>/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage org.apache.hadoop.yarn.server.nodemanager.recovery;\n\nimport java.io.IOException;\nimport java.io.Serializable;\nimport java.util.List;\n\nimport org.apache.hadoop.conf.Configuration;\nimport org.apache.hadoop.fs.Path;\nimport org.apache.hadoop.yarn.api.protocolrecords.StartContainerRequest;\nimport org.apache.hadoop.yarn.api.records.ApplicationAttemptId;\nimport org.apache.hadoop.yarn.api.records.ApplicationId;\nimport org.apache.hadoop.yarn.api.records.ContainerId;\nimport org.apache.hadoop.yarn.proto.YarnProtos.LocalResourceProto;\nimport org.apache.hadoop.yarn.proto.YarnServerNodemanagerRecoveryProtos.ContainerManagerApplicationProto;\nimport org.apache.hadoop.yarn.proto.YarnServerNodemanagerRecoveryProtos.DeletionServiceDeleteTaskProto;\nimport org.apache.hadoop.yarn.proto.YarnServerNodemanagerRecoveryProtos.LocalizedResourceProto;\nimport org.apache.hadoop.yarn.proto.YarnServerNodemanagerRecoveryProtos.LogDeleterProto;\nimport org.apache.hadoop.yarn.security.ContainerTokenIdentifier;\nimport org.apache.hadoop.yarn.server.api.records.MasterKey;\nimport org.apache.hadoop.yarn.server.nodemanager.containermanager.container.Container;\n\n// The state store to use when state isn't being stored\n<fim_suffix>public class NMNullStateStoreService extends NMStateStoreService {\n\n  public NMNullStateStoreService() {\n    super(NMNullStateStoreService.class.getName());\n  }\n\n  @Override\n  public boolean canRecover() {\n    return false;\n  }\n\n  @Override\n  public RecoveredApplicationsState loadApplicationsState() throws IOException {\n    throw new UnsupportedOperationException(\n        \"Recovery not supported by this state store\");\n  }\n\n  @Override\n  public void storeApplication(ApplicationId appId,\n      ContainerManagerApplicationProto p) throws IOException {\n  }\n\n  @Override\n  public void removeApplication(ApplicationId appId) throws IOException {\n  }\n\n  @Override\n  public RecoveryIterator<RecoveredContainerState> getContainerStateIterator()\n      throws IOException {\n    throw new UnsupportedOperationException(\n        \"Recovery not supported by this state store\");\n  }\n\n  @Override\n  public void storeContainer(ContainerId containerId, int version,\n      long startTime, StartContainerRequest startRequest) {\n  }\n\n  @Override\n  public void storeContainerQueued(ContainerId containerId) throws IOException {\n  }\n\n  @Override\n  public void storeContainerPaused(ContainerId containerId) throws IOException {\n  }\n\n  @Override\n  public void removeContainerPaused(ContainerId containerId)\n      throws IOException {\n  }\n\n  @Override\n  public void storeContainerDiagnostics(ContainerId containerId,\n      StringBuilder diagnostics) throws IOException {\n  }\n\n  @Override\n  public void storeContainerLaunched(ContainerId containerId)\n      throws IOException {\n  }\n\n  @Override\n  public void storeContainerUpdateToken(ContainerId containerId,\n      ContainerTokenIdentifier containerTokenIdentifier) throws IOException {\n  }\n\n  @Override\n  public void storeContainerKilled(ContainerId containerId)\n      throws IOException {\n  }\n\n  @Override\n  public void storeContainerCompleted(ContainerId containerId, int exitCode)\n      throws IOException {\n  }\n\n  @Override\n  public void storeContainerRemainingRetryAttempts(ContainerId containerId,\n      int remainingRetryAttempts) throws IOException {\n  }\n\n  @Override\n  public void storeContainerRestartTimes(ContainerId containerId,\n      List<Long> restartTimes) throws IOException {\n  }\n\n  @Override\n  public void storeContainerWorkDir(ContainerId containerId,\n      String workDir) throws IOException {\n  }\n\n  @Override\n  public void storeContainerLogDir(ContainerId containerId,\n      String logDir) throws IOException {\n  }\n\n  @Override\n  public void removeContainer(ContainerId containerId) throws IOException {\n  }\n\n  @Override\n  public RecoveredLocalizationState loadLocalizationState()\n      throws IOException {\n    throw new UnsupportedOperationException(\n        \"Recovery not supported by this state store\");\n  }\n\n  @Override\n  public void startResourceLocalization(String user, ApplicationId appId,\n      LocalResourceProto proto, Path localPath) throws IOException {\n  }\n\n  @Override\n  public void finishResourceLocalization(String user, ApplicationId appId,\n      LocalizedResourceProto proto) throws IOException {\n  }\n\n  @Override\n  public void removeLocalizedResource(String user, ApplicationId appId,\n      Path localPath) throws IOException {\n  }\n\n  @Override\n  public RecoveredDeletionServiceState loadDeletionServiceState()\n      throws IOException {\n    throw new UnsupportedOperationException(\n        \"Recovery not supported by this state store\");\n  }\n\n  @Override\n  public void storeDeletionTask(int taskId,\n      DeletionServiceDeleteTaskProto taskProto) throws IOException {\n  }\n\n  @Override\n  public void removeDeletionTask(int taskId) throws IOException {\n  }\n\n  @Override\n  public RecoveredNMTokensState loadNMTokensState() throws IOException {\n    throw new UnsupportedOperationException(\n        \"Recovery not supported by this state store\");\n  }\n\n  @Override\n  public void storeNMTokenCurrentMasterKey(MasterKey key)\n      throws IOException {\n  }\n\n  @Override\n  public void storeNMTokenPreviousMasterKey(MasterKey key)\n      throws IOException {\n  }\n\n  @Override\n  public void storeNMTokenApplicationMasterKey(ApplicationAttemptId attempt,\n      MasterKey key) throws IOException {\n  }\n\n  @Override\n  public void removeNMTokenApplicationMasterKey(ApplicationAttemptId attempt)\n      throws IOException {\n  }\n\n  @Override\n  public RecoveredContainerTokensState loadContainerTokensState()\n      throws IOException {\n    throw new UnsupportedOperationException(\n        \"Recovery not supported by this state store\");\n  }\n\n  @Override\n  public void storeContainerTokenCurrentMasterKey(MasterKey key)\n      throws IOException {\n  }\n\n  @Override\n  public void storeContainerTokenPreviousMasterKey(MasterKey key)\n      throws IOException {\n  }\n\n  @Override\n  public void storeContainerToken(ContainerId containerId,\n      Long expirationTime) throws IOException {\n  }\n\n  @Override\n  public void removeContainerToken(ContainerId containerId)\n      throws IOException {\n  }\n\n  @Override\n  public RecoveredLogDeleterState loadLogDeleterState() throws IOException {\n    throw new UnsupportedOperationException(\n        \"Recovery not supported by this state store\");\n  }\n\n  @Override\n  public void storeLogDeleter(ApplicationId appId, LogDeleterProto proto)\n      throws IOException {\n  }\n\n  @Override\n  public void removeLogDeleter(ApplicationId appId) throws IOException {\n  }\n\n  @Override\n  public RecoveredAMRMProxyState loadAMRMProxyState() throws IOException {\n    throw new UnsupportedOperationException(\n        \"Recovery not supported by this state store\");\n  }\n\n  @Override\n  public void storeAMRMProxyCurrentMasterKey(MasterKey key) throws IOException {\n  }\n\n  @Override\n  public void storeAMRMProxyNextMasterKey(MasterKey key) throws IOException {\n  }\n\n  @Override\n  public void storeAMRMProxyAppContextEntry(ApplicationAttemptId attempt,\n      String key, byte[] data) throws IOException {\n  }\n\n  @Override\n  public void removeAMRMProxyAppContextEntry(ApplicationAttemptId attempt,\n      String key) throws IOException {\n  }\n\n  @Override\n  public void removeAMRMProxyAppContext(ApplicationAttemptId attempt)\n      throws IOException {\n  }\n\n  @Override\n  public void storeAssignedResources(Container container,\n      String resourceType, List<Serializable> assignedResources)\n      throws IOException {\n    updateContainerResourceMapping(container, resourceType, assignedResources);\n  }\n\n  @Override\n  protected void initStorage(Configuration conf) throws IOException {\n  }\n\n  @Override\n  protected void startStorage() throws IOException {\n  }\n\n  @Override\n  protected void closeStorage() throws IOException {\n  }\n}<fim_middle>// class below has no smell\n"}