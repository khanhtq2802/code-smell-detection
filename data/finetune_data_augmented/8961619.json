{"text": "<fim_prefix>/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\npackage org.apache.hadoop.hive.metastore.messaging.json.gzip;\n\nimport org.apache.hadoop.hive.metastore.messaging.EventMessage;\nimport org.apache.hadoop.hive.metastore.messaging.MessageSerializer;\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\n\nimport java.io.ByteArrayOutputStream;\nimport java.io.IOException;\nimport java.nio.charset.StandardCharsets;\nimport java.util.Base64;\nimport java.util.zip.GZIPOutputStream;\n\nclass Serializer implements MessageSerializer {\n  private static final Logger LOG = LoggerFactory.getLogger(Serializer.class.getName());\n\n<fim_suffix>  @Override\n  public String serialize(EventMessage message) {\n    String messageAsString = MessageSerializer.super.serialize(message);\n    try (ByteArrayOutputStream baos = new ByteArrayOutputStream()) {\n      GZIPOutputStream gout = new GZIPOutputStream(baos);\n      gout.write(messageAsString.getBytes(StandardCharsets.UTF_8));\n      gout.close();\n      byte[] compressed = baos.toByteArray();\n      return new String(Base64.getEncoder().encode(compressed), StandardCharsets.UTF_8);\n    } catch (IOException e) {\n      LOG.error(\"could not use gzip output stream\", e);\n      LOG.debug(\"message \" + messageAsString);\n      throw new RuntimeException(\"could not use the gzip output Stream\", e);\n    }\n  }\n}<fim_middle>// function below has no smell\n"}