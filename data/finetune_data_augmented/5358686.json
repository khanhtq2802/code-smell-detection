{"text": "<fim_prefix> * \n * \n * <method>\n * \n * <ejb-name>EmployeeService</ejb-name>\n * \n * <method-name>create</method-name>\n * \n * <method-params>\n * \n * <method-param>java.lang.String</method-param>\n * \n * <method-param>java.lang.String</method-param>\n * \n * </method-params> </method>\n * \n * \n * \n * The following example illustrates a Style 3 element with more complex\n * parameter types. The method foobar(char s, int i, int[] iar,\n * mypackage.MyClass mycl, mypackage.MyClass[][] myclaar)\n * \n * would be specified as:\n * \n * \n * <method>\n * \n * <ejb-name>EmployeeService</ejb-name>\n * \n * <method-name>foobar</method-name>\n * \n * <method-params>\n * \n * <method-param>char</method-param>\n * \n * <method-param>int</method-param>\n * \n * <method-param>int[]</method-param>\n * \n * <method-param>mypackage.MyClass</method-param>\n * \n * <method-param>mypackage.MyClass[][]</method-param>\n * \n * </method-params> </method>\n * \n * \n * The optional method-intf element can be used when it becomes necessary to\n * differentiate between a method defined in the home interface and a method\n * with the same name and signature that is defined in the remote interface.\n * \n * For example, the method element\n * \n * \n * <method>\n * \n * <ejb-name>EmployeeService</ejb-name>\n * \n * <method-intf>Remote</method-intf>\n * \n * <method-name>create</method-name>\n * \n * <method-params>\n * \n * <method-param>java.lang.String</method-param>\n * \n * <method-param>java.lang.String</method-param>\n * \n * </method-params> </method>\n * \n * \n * can be used to differentiate the create(String, String) method defined in the\n * remote interface from the create(String, String) method defined in the home\n * interface, which would be defined as\n * \n * \n * <method>\n * \n * <ejb-name>EmployeeService</ejb-name>\n * \n * <method-intf>Home</method-intf>\n * \n * <method-name>create</method-name>\n * \n * <method-params>\n * \n * <method-param>java.lang.String</method-param>\n * \n * <method-param>java.lang.String</method-param>\n * \n * </method-params> </method>\n * \n * \n * <p>\n * Java class for MethodElement complex type.\n * \n * <p>\n * The following schema fragment specifies the expected content contained within\n * this class.\n * \n * <pre>\n * &lt;complexType name=\"MethodElement\">\n *   &lt;complexContent>\n *     &lt;restriction base=\"{http://www.w3.org/2001/XMLSchema}anyType\">\n *       &lt;choice>\n *         &lt;choice maxOccurs=\"unbounded\" minOccurs=\"0\">\n *           &lt;element name=\"enterpriseBean\" type=\"{ejb.xmi}EnterpriseBean\"/>\n *         &lt;/choice>\n *         &lt;choice maxOccurs=\"unbounded\" minOccurs=\"0\">\n *           &lt;element name=\"descriptions\" type=\"{common.xmi}Description\"/>\n *         &lt;/choice>\n *         &lt;choice maxOccurs=\"unbounded\" minOccurs=\"0\">\n *           &lt;element ref=\"{http://www.omg.org/XMI}Extension\"/>\n *         &lt;/choice>\n *       &lt;/choice>\n *       &lt;attGroup ref=\"{http://www.omg.org/XMI}ObjectAttribs\"/>\n *       &lt;attribute name=\"description\" type=\"{http://www.w3.org/2001/XMLSchema}string\" />\n *       &lt;attribute name=\"enterpriseBean\" type=\"{http://www.w3.org/2001/XMLSchema}string\" />\n *       &lt;attribute name=\"name\" type=\"{http://www.w3.org/2001/XMLSchema}string\" />\n *       &lt;attribute name=\"parms\" type=\"{http://www.w3.org/2001/XMLSchema}string\" />\n *       &lt;attribute name=\"type\" type=\"{ejb.xmi}MethodElementKind\" />\n *       &lt;attribute ref=\"{http://www.omg.org/XMI}id\"/>\n *     &lt;/restriction>\n *   &lt;/complexContent>\n * &lt;/complexType>\n * </pre>\n * \n * \n */\n@XmlAccessorType(XmlAccessType.FIELD)\n@XmlType(name = \"MethodElement\", propOrder = { \"enterpriseBeans\",\n\t\t\"descriptions\", \"extensions\" })\npublic class MethodElement {\n\t@XmlElement(name = \"enterpriseBean\")\n\tprotected List<EnterpriseBean> enterpriseBeans;\n\tprotected List<Description> descriptions;\n\t@XmlElement(name = \"Extension\", namespace = \"http://www.omg.org/XMI\")\n\tprotected List<Extension> extensions;\n\t@XmlAttribute\n\tprotected String description;\n\t@XmlAttribute\n\tprotected String enterpriseBean;\n\t@XmlAttribute\n\tprotected String name;\n\t@XmlAttribute\n\tprotected String parms;\n\t@XmlAttribute(name = \"type\")\n\tprotected MethodElementEnum methodElementType;\n\t@XmlAttribute(namespace = \"http://www.omg.org/XMI\")\n\t@XmlJavaTypeAdapter(CollapsedStringAdapter.class)\n\t@XmlID\n\tprotected String id;\n\t@XmlAttribute(namespace = \"http://www.omg.org/XMI\")\n\tprotected QName type;\n\t@XmlAttribute(namespace = \"http://www.omg.org/XMI\")\n\tprotected String version;\n\t@XmlAttribute\n\tprotected String href;\n\t@XmlAttribute(namespace = \"http://www.omg.org/XMI\")\n\t@XmlIDREF\n\tprotected Object idref;\n\t@XmlAttribute(namespace = \"http://www.omg.org/XMI\")\n\tprotected String label;\n\t@XmlAttribute(namespace = \"http://www.omg.org/XMI\")\n\tprotected String uuid;\n\t/**\n\t * Gets the value of the enterpriseBeans property.\n\t * \n\t * <p>\n\t * This accessor method returns a reference to the live list, not a\n\t * snapshot. Therefore any modification you make to the returned list will\n\t * be present inside the JAXB object. This is why there is not a\n\t * <CODE>set</CODE> method for the enterpriseBeans property.\n\t * \n\t * <p>\n\t * For example, to add a new item, do as follows:\n\t * \n\t * <pre>\n\t * getEnterpriseBeans().add(newItem);\n\t * </pre>\n\t * \n\t * \n\t * <p>\n\t * Objects of the following type(s) are allowed in the list\n\t * {@link EnterpriseBean }\n\t * \n\t * \n\t */\n\tpublic List<EnterpriseBean> getEnterpriseBeans() {\n\t\tif (enterpriseBeans == null) {\n\t\t\tenterpriseBeans = new ArrayList<EnterpriseBean>();\n\t\t}\n\t\treturn this.enterpriseBeans;\n\t}\n\t/**\n\t * Gets the value of the descriptions property.\n\t * \n\t * <p>\n\t * This accessor method returns a reference to the live list, not a\n\t * snapshot. Therefore any modification you make to the returned list will\n\t * be present inside the JAXB object. This is why there is not a\n\t * <CODE>set</CODE> method for the descriptions property.\n\t * \n\t * <p>\n\t * For example, to add a new item, do as follows:\n\t * \n\t * <pre>\n\t * getDescriptions().add(newItem);\n\t * </pre>\n\t * \n\t * \n\t * <p>\n\t * Objects of the following type(s) are allowed in the list\n\t * {@link Description }\n\t * \n\t * \n\t */\n<fim_suffix>\tpublic List<Description> getDescriptions() {\n\t\tif (descriptions == null) {\n\t\t\tdescriptions = new ArrayList<Description>();\n\t\t}\n\t\treturn this.descriptions;\n\t}<fim_middle>// function below has no smell\n"}