{"text": "<fim_prefix>/*\n * Copyright 2008 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage com.google.template.soy.soytree;\n\nimport com.google.template.soy.base.SourceLocation;\nimport com.google.template.soy.basetree.CopyState;\nimport com.google.template.soy.soytree.SoyNode.ConditionalBlockNode;\n\n/**\n * Node representing the 'else' block within an 'if' statement.\n *\n * <p>Important: Do not use outside of Soy code (treat as superpackage-private).\n *\n */\n<fim_suffix>public final class IfElseNode extends AbstractBlockCommandNode implements ConditionalBlockNode {\n\n  /**\n   * @param id The id for this node.\n   * @param sourceLocation The node's source location.\n   */\n  public IfElseNode(int id, SourceLocation sourceLocation) {\n    super(id, sourceLocation, \"else\");\n  }\n\n  /**\n   * Copy constructor.\n   *\n   * @param orig The node to copy.\n   */\n  private IfElseNode(IfElseNode orig, CopyState copyState) {\n    super(orig, copyState);\n  }\n\n  @Override\n  public Kind getKind() {\n    return Kind.IF_ELSE_NODE;\n  }\n\n  @Override\n  public String toSourceString() {\n    StringBuilder sb = new StringBuilder();\n    sb.append(getTagString());\n    appendSourceStringForChildren(sb);\n    // Note: No end tag.\n    return sb.toString();\n  }\n\n  @Override\n  public IfElseNode copy(CopyState copyState) {\n    return new IfElseNode(this, copyState);\n  }\n}<fim_middle>// class below has no smell\n"}