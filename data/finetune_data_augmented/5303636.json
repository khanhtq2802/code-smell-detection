{"text": "<fim_prefix>                args.add(curArgs);\n            else if (curCols.length > 1)\n                for (int j = 0; j < curCols.length; j++)\n                    args.add((curArgs == null) ? null\n                        : ((Object[]) curArgs)[j]);\n        }\n    }\n    /**\n     * Helper to convert an object value to its datastore equivalent.\n     *\n     * @param em state manager for embedded object\n     * @param vm owning value\n     * @param store store manager\n     * @param cols embedded columns\n     * @param rval return array if multiple columns\n     * @param idx index in columns array to start\n     */\n    protected Object toDataStoreValue(OpenJPAStateManager em, ValueMapping vm,\n            JDBCStore store, Column[] cols, Object rval, int idx) {\n        // This is a placeholder to hold the value generated in\n        // toDataStoreValue1. When this method is called from\n        // ElementEmbedValueHandler or ObjectIdValueHandler,\n        // if the dimension of cols > 1, rval is an array of the\n        // same dimension. If the dimension of cols is 1, rval is null.\n        // If rval is not null, it is an array of objects and this array\n        // will be populated in toDatastoreValue1. If rval is null,\n        // a new value will be added to rvals in toDataStoreValue1\n        // and return to the caller.\n        List rvals = new ArrayList();\n        if (rval != null)\n            rvals.add(rval);\n        toDataStoreValue1(em, vm, store, cols, rvals, idx);\n        return rvals.get(0);\n    }\n    protected int toDataStoreValue1(OpenJPAStateManager em, ValueMapping vm,\n        JDBCStore store, Column[] cols, List rvals, int idx) {\n        // set rest of columns from fields\n        FieldMapping[] fms = vm.getEmbeddedMapping().getFieldMappings();\n        Object cval;\n        Column[] ecols;\n        Embeddable embed;\n        for (int i = 0; i < fms.length; i++) {\n            if (fms[i].getManagement() != FieldMetaData.MANAGE_PERSISTENT)\n                continue;\n            // This recursive code is mainly to deal with situations\n            // where an entity contains a collection of embeddableA.\n            // The embeddableA element in the collection contains an\n            // embeddableB. The parameter vm to toDataStoreValue is\n            // embeddableA. If some field in embeddableA is of type\n            // embeddableB, recursive call is required to populate the\n            // value for embeddableB.\n            ValueMapping val = fms[i].getValueMapping();\n            if (val.getEmbeddedMapping() != null) {\n                cval = (em == null) ? null : em.fetch(i);\n                if (cval instanceof PersistenceCapable) {\n                    OpenJPAStateManager embedSm = (OpenJPAStateManager)\n                        ((PersistenceCapable)cval).pcGetStateManager();\n                    idx = toDataStoreValue1(embedSm, val, store, cols, rvals,\n                            idx);\n                } else if (cval instanceof ObjectIdStateManager) {\n                    idx = toDataStoreValue1((ObjectIdStateManager)cval, val,\n                            store, cols, rvals, idx);\n                } else if (cval == null) {\n                    idx = toDataStoreValue1(null, val, store, cols, rvals, idx);\n                }\n            }\n            embed = (Embeddable) fms[i].getStrategy();\n            ecols = embed.getColumns();\n            if (ecols.length == 0)\n                continue;\n            cval = (em == null) ? null : getValue(embed, em, i);\n            cval = embed.toEmbeddedDataStoreValue(cval, store);\n            if (cols.length == 1) {\n                // rvals is empty\n                rvals.add(cval); // save the return value\n            } else if (ecols.length == 1) {\n                Object rval = rvals.get(0);\n                ((Object[]) rval)[idx++] = cval;\n            } else {\n                Object rval = rvals.get(0);\n                System.arraycopy(cval, 0, rval, idx, ecols.length);\n                idx += ecols.length;\n            }\n        }\n        return idx;\n    }\n    private Object getValue(Embeddable embed, OpenJPAStateManager sm, int idx) {\n        if (embed instanceof MaxEmbeddedLobFieldStrategy) {\n            return ((MaxEmbeddedLobFieldStrategy)embed).getValue(sm);\n        }\n        return sm.fetch(idx);\n    }\n    /**\n     * Helper to convert a datastore value to its object equivalent.\n     *\n     * @param em state manager for embedded object\n     * @param vm owning value\n     * @param val datastore value\n     * @param store optional store manager\n     * @param fetch optional fetch configuration\n     * @param cols embedded columns\n     * @param idx index in columns array to start\n     */\n    protected void toObjectValue(OpenJPAStateManager em, ValueMapping vm,\n            Object val, JDBCStore store, JDBCFetchConfiguration fetch,\n            Column[] cols, int idx)\n            throws SQLException {\n        toObjectValue1(em, vm, val, store, fetch, cols, idx);\n    }\n    protected int toObjectValue1(OpenJPAStateManager em, ValueMapping vm,\n        Object val, JDBCStore store, JDBCFetchConfiguration fetch,\n        Column[] cols, int idx)\n        throws SQLException {\n        FieldMapping[] fms = vm.getEmbeddedMapping().getFieldMappings();\n        Embeddable embed;\n        Object cval;\n        Column[] ecols;\n        for (int i = 0; i < fms.length; i++) {\n            if (fms[i].getManagement() != FieldMetaData.MANAGE_PERSISTENT)\n                continue;\n            ValueMapping vm1 = fms[i].getValueMapping();\n            OpenJPAStateManager em1 = null;\n            embed = (Embeddable) fms[i].getStrategy();\n            if (vm1.getEmbeddedMapping() != null) {\n                if (em instanceof StateManagerImpl) {\n                em1 = store.getContext().embed(null, null, em, vm1);\n                idx = toObjectValue1(em1, vm1, val, store, fetch, cols, idx);\n                } else if (em instanceof ObjectIdStateManager) {\n                    em1 = new ObjectIdStateManager(null, null, vm1);\n                    idx = toObjectValue1(em1, vm1, val, store, null,\n                            getColumns(fms[i]), idx);\n                }\n                if (em1 != null) {\n                    cval = em1.getManagedInstance();\n                } else {\n                    cval = null;\n                }\n            } else {\n                ecols = embed.getColumns();\n                if (ecols.length == 0)\n                    cval = null;\n                else if (idx == 0 && ecols.length == cols.length)\n                    cval = val;\n                else if (ecols.length == 1)\n                    cval = ((Object[]) val)[idx++];\n                else {\n                    cval = new Object[ecols.length];\n                    System.arraycopy(val, idx, cval, 0, ecols.length);\n                    idx += ecols.length;\n                }\n            }\n            if (store != null && em instanceof StateManagerImpl)\n                embed.loadEmbedded(em, store, fetch, cval);\n            else {\n                if (!(em instanceof ObjectIdStateManager))\n                    cval = embed.toEmbeddedObjectValue(cval);\n                if (fms[i].getHandler() != null)\n                    cval = fms[i].getHandler().toObjectValue(fms[i], cval);\n                em.store(fms[i].getIndex(), cval);\n            }\n        }\n        return idx;\n    }\n    private Column[] getColumns(FieldMapping fm) {\n        List<Column> colList = new ArrayList<>();\n        getEmbeddedIdCols(fm, colList);\n        Column[] cols = new Column[colList.size()];\n        int i = 0;\n        for (Column col : colList) {\n            cols[i++] = col;\n        }\n        return cols;\n    }\n    public static void getEmbeddedIdCols(FieldMapping fmd, List cols) {\n        ClassMapping embed = fmd.getEmbeddedMapping();\n        FieldMapping[] fmds = embed.getFieldMappings();\n        for (int i = 0; i < fmds.length; i++) {\n            if (fmds[i].getValue().getEmbeddedMetaData() == null) {\n                getIdColumns(fmds[i], cols);\n            } else {\n                getEmbeddedIdCols(fmds[i], cols);\n            }\n        }\n    }\n<fim_suffix>    public static void getIdColumns(FieldMapping fmd, List cols) {\n        Column[] pkCols =  ((ValueMappingImpl)fmd.getValue()).getColumns();\n        for (int j = 0; j < pkCols.length; j++) {\n            Column newCol = new Column();\n            newCol.copy(pkCols[j]);\n            cols.add(newCol);\n        }\n    }<fim_middle>// function below has no smell\n"}