{"text": "<fim_prefix>/*******************************************************************************\n * Copyright (c) 2016, 2019 IBM Corp.\n *\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * and Eclipse Distribution License v1.0 which accompany this distribution. \n *\n * The Eclipse Public License is available at \n *    http://www.eclipse.org/legal/epl-v10.html\n * and the Eclipse Distribution License is available at \n *   http://www.eclipse.org/org/documents/edl-v10.php.\n *\n * Contributors:\n * \t  Dave Locke   - Original MQTTv3 implementation\n *    James Sutton - Initial MQTTv5 implementation\n */\npackage org.eclipse.paho.mqttv5.common.packet;\n\nimport java.io.ByteArrayInputStream;\nimport java.io.ByteArrayOutputStream;\nimport java.io.DataInputStream;\nimport java.io.DataOutputStream;\nimport java.io.IOException;\nimport java.util.ArrayList;\nimport java.util.Arrays;\n\nimport org.eclipse.paho.mqttv5.common.MqttException;\nimport org.eclipse.paho.mqttv5.common.packet.util.CountingInputStream;\n\npublic class MqttUnsubscribe extends MqttPersistableWireMessage{\n\t\n\tprivate static final Byte[] validProperties = { MqttProperties.USER_DEFINED_PAIR_IDENTIFIER };\n\n\t\n\t// Fields\n\tprivate String[] topics;\n\tprivate MqttProperties properties;\n\t\n\n\t\n\tpublic  MqttUnsubscribe(byte[] data) throws IOException, MqttException {\n\t\tsuper(MqttWireMessage.MESSAGE_TYPE_UNSUBSCRIBE);\n\t\tthis.properties = new MqttProperties(validProperties);\n\t\tByteArrayInputStream bais = new ByteArrayInputStream(data);\n\t\tCountingInputStream counter = new CountingInputStream(bais);\n\t\tDataInputStream inputStream = new DataInputStream(counter);\n\t\tmsgId = inputStream.readUnsignedShort();\n\t\t\n\t\tthis.properties.decodeProperties(inputStream);\n\t\t\n\t\tArrayList<String> topicList = new ArrayList<>();\n\t\t// Whilst we are reading data\n\t\twhile(counter.getCounter() < data.length){\n\t\t\ttopicList.add( MqttDataTypes.decodeUTF8(inputStream));\n\t\t}\n\t\ttopics = topicList.toArray(new String[topicList.size()]);\n\t\t\n\t\n\t\t\n\t\tinputStream.close();\n\t}\n\t\n\tpublic MqttUnsubscribe(String[] topics, MqttProperties properties){\n\t\tsuper(MqttWireMessage.MESSAGE_TYPE_UNSUBSCRIBE);\n\t\tthis.topics = topics;\n\t\tif (properties != null) {\n\t\t\tthis.properties = properties;\n\t\t} else {\n\t\t\tthis.properties = new MqttProperties();\n\t\t}\n\t\tthis.properties.setValidProperties(validProperties);\n\t}\n\t\n<fim_suffix>\t@Override\n\tprotected byte[] getVariableHeader() throws MqttException {\n\t\ttry {\n\t\t\tByteArrayOutputStream baos = new ByteArrayOutputStream();\n\t\t\tDataOutputStream outputStream = new DataOutputStream(baos);\n\n\t\t\t// Encode the Message ID\n\t\t\toutputStream.writeShort(msgId);\n\n\n\t\t\t// Write Identifier / Value Fields\n\t\t\tbyte[] identifierValueFieldsByteArray = this.properties.encodeProperties();\n\t\t\toutputStream.write(identifierValueFieldsByteArray);\n\t\t\toutputStream.flush();\n\t\t\treturn baos.toByteArray();\n\t\t} catch (IOException ioe) {\n\t\t\tthrow new MqttException(ioe);\n\t\t}\n\t}\n\t\n\t@Override\n\tpublic byte[] getPayload() throws MqttException {\n\t\ttry {\n\t\t\tByteArrayOutputStream baos = new ByteArrayOutputStream();\n\t\t\tDataOutputStream outputStream = new DataOutputStream(baos);\n\t\t\t\n\t\t\tfor(String topic : topics){\n\t\t\t\tMqttDataTypes.encodeUTF8(outputStream, topic);\n\t\t\t}\n\t\t\t\n\t\t\toutputStream.flush();\n\t\t\treturn baos.toByteArray();\n\t\t} catch (IOException ioe){\n\t\t\tthrow new MqttException(ioe);\n\t\t}\n\t}\n\t\n\n\t@Override\n\tprotected byte getMessageInfo() {\n\t\treturn (byte)( 2 | (this.duplicate ? 8 : 0));\n\t}\n\n\tpublic String[] getTopics() {\n\t\treturn topics;\n\t}\n\n\tpublic void setTopics(String[] topics) {\n\t\tthis.topics = topics;\n\t}\n\t\n\t@Override\n\tpublic MqttProperties getProperties() {\n\t\treturn this.properties;\n\t}\n\n\t@Override\n\tpublic String toString() {\n\t\treturn \"MqttUnsubscribe [topics=\" + Arrays.toString(topics) + \", properties=\" + properties + \"]\";\n\t}\n\t\n\t\n\n\t\n}<fim_middle>// function below has no smell\n"}