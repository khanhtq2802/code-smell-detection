{"text": "<fim_prefix>\n<fim_suffix>@SuppressWarnings({\"cast\", \"rawtypes\", \"serial\", \"unchecked\", \"unused\"})\n@javax.annotation.Generated(value = \"Autogenerated by Thrift Compiler (0.12.0)\")\npublic class Assignment implements org.apache.storm.thrift.TBase<Assignment, Assignment._Fields>, java.io.Serializable, Cloneable, Comparable<Assignment> {\n  private static final org.apache.storm.thrift.protocol.TStruct STRUCT_DESC = new org.apache.storm.thrift.protocol.TStruct(\"Assignment\");\n  private static final org.apache.storm.thrift.protocol.TField MASTER_CODE_DIR_FIELD_DESC = new org.apache.storm.thrift.protocol.TField(\"master_code_dir\", org.apache.storm.thrift.protocol.TType.STRING, (short)1);\n  private static final org.apache.storm.thrift.protocol.TField NODE_HOST_FIELD_DESC = new org.apache.storm.thrift.protocol.TField(\"node_host\", org.apache.storm.thrift.protocol.TType.MAP, (short)2);\n  private static final org.apache.storm.thrift.protocol.TField EXECUTOR_NODE_PORT_FIELD_DESC = new org.apache.storm.thrift.protocol.TField(\"executor_node_port\", org.apache.storm.thrift.protocol.TType.MAP, (short)3);\n  private static final org.apache.storm.thrift.protocol.TField EXECUTOR_START_TIME_SECS_FIELD_DESC = new org.apache.storm.thrift.protocol.TField(\"executor_start_time_secs\", org.apache.storm.thrift.protocol.TType.MAP, (short)4);\n  private static final org.apache.storm.thrift.protocol.TField WORKER_RESOURCES_FIELD_DESC = new org.apache.storm.thrift.protocol.TField(\"worker_resources\", org.apache.storm.thrift.protocol.TType.MAP, (short)5);\n  private static final org.apache.storm.thrift.protocol.TField TOTAL_SHARED_OFF_HEAP_FIELD_DESC = new org.apache.storm.thrift.protocol.TField(\"total_shared_off_heap\", org.apache.storm.thrift.protocol.TType.MAP, (short)6);\n  private static final org.apache.storm.thrift.protocol.TField OWNER_FIELD_DESC = new org.apache.storm.thrift.protocol.TField(\"owner\", org.apache.storm.thrift.protocol.TType.STRING, (short)7);\n  private static final org.apache.storm.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new AssignmentStandardSchemeFactory();\n  private static final org.apache.storm.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new AssignmentTupleSchemeFactory();\n  private @org.apache.storm.thrift.annotation.Nullable java.lang.String master_code_dir; // required\n  private @org.apache.storm.thrift.annotation.Nullable java.util.Map<java.lang.String,java.lang.String> node_host; // optional\n  private @org.apache.storm.thrift.annotation.Nullable java.util.Map<java.util.List<java.lang.Long>,NodeInfo> executor_node_port; // optional\n  private @org.apache.storm.thrift.annotation.Nullable java.util.Map<java.util.List<java.lang.Long>,java.lang.Long> executor_start_time_secs; // optional\n  private @org.apache.storm.thrift.annotation.Nullable java.util.Map<NodeInfo,WorkerResources> worker_resources; // optional\n  private @org.apache.storm.thrift.annotation.Nullable java.util.Map<java.lang.String,java.lang.Double> total_shared_off_heap; // optional\n  private @org.apache.storm.thrift.annotation.Nullable java.lang.String owner; // optional\n  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */\n  public enum _Fields implements org.apache.storm.thrift.TFieldIdEnum {\n    MASTER_CODE_DIR((short)1, \"master_code_dir\"),\n    NODE_HOST((short)2, \"node_host\"),\n    EXECUTOR_NODE_PORT((short)3, \"executor_node_port\"),\n    EXECUTOR_START_TIME_SECS((short)4, \"executor_start_time_secs\"),\n    WORKER_RESOURCES((short)5, \"worker_resources\"),\n    TOTAL_SHARED_OFF_HEAP((short)6, \"total_shared_off_heap\"),\n    OWNER((short)7, \"owner\");\n    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();\n    static {\n      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {\n        byName.put(field.getFieldName(), field);\n      }\n    }\n    /**\n     * Find the _Fields constant that matches fieldId, or null if its not found.\n     */\n    @org.apache.storm.thrift.annotation.Nullable\n    public static _Fields findByThriftId(int fieldId) {\n      switch(fieldId) {\n        case 1: // MASTER_CODE_DIR\n          return MASTER_CODE_DIR;\n        case 2: // NODE_HOST\n          return NODE_HOST;\n        case 3: // EXECUTOR_NODE_PORT\n          return EXECUTOR_NODE_PORT;\n        case 4: // EXECUTOR_START_TIME_SECS\n          return EXECUTOR_START_TIME_SECS;\n        case 5: // WORKER_RESOURCES\n          return WORKER_RESOURCES;\n        case 6: // TOTAL_SHARED_OFF_HEAP\n          return TOTAL_SHARED_OFF_HEAP;\n        case 7: // OWNER\n          return OWNER;\n        default:\n          return null;\n      }\n    }\n    /**\n     * Find the _Fields constant that matches fieldId, throwing an exception\n     * if it is not found.\n     */\n    public static _Fields findByThriftIdOrThrow(int fieldId) {\n      _Fields fields = findByThriftId(fieldId);\n      if (fields == null) throw new java.lang.IllegalArgumentException(\"Field \" + fieldId + \" doesn't exist!\");\n      return fields;\n    }\n    /**\n     * Find the _Fields constant that matches name, or null if its not found.\n     */\n    @org.apache.storm.thrift.annotation.Nullable\n    public static _Fields findByName(java.lang.String name) {\n      return byName.get(name);\n    }\n    private final short _thriftId;\n    private final java.lang.String _fieldName;\n    _Fields(short thriftId, java.lang.String fieldName) {\n      _thriftId = thriftId;\n      _fieldName = fieldName;\n    }\n    public short getThriftFieldId() {\n      return _thriftId;\n    }\n    public java.lang.String getFieldName() {\n      return _fieldName;\n    }\n  }\n  // isset id assignments\n  private static final _Fields optionals[] = {_Fields.NODE_HOST,_Fields.EXECUTOR_NODE_PORT,_Fields.EXECUTOR_START_TIME_SECS,_Fields.WORKER_RESOURCES,_Fields.TOTAL_SHARED_OFF_HEAP,_Fields.OWNER};\n  public static final java.util.Map<_Fields, org.apache.storm.thrift.meta_data.FieldMetaData> metaDataMap;\n  static {\n    java.util.Map<_Fields, org.apache.storm.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.storm.thrift.meta_data.FieldMetaData>(_Fields.class);\n    tmpMap.put(_Fields.MASTER_CODE_DIR, new org.apache.storm.thrift.meta_data.FieldMetaData(\"master_code_dir\", org.apache.storm.thrift.TFieldRequirementType.REQUIRED, \n        new org.apache.storm.thrift.meta_data.FieldValueMetaData(org.apache.storm.thrift.protocol.TType.STRING)));\n    tmpMap.put(_Fields.NODE_HOST, new org.apache.storm.thrift.meta_data.FieldMetaData(\"node_host\", org.apache.storm.thrift.TFieldRequirementType.OPTIONAL, \n        new org.apache.storm.thrift.meta_data.MapMetaData(org.apache.storm.thrift.protocol.TType.MAP, \n            new org.apache.storm.thrift.meta_data.FieldValueMetaData(org.apache.storm.thrift.protocol.TType.STRING), \n            new org.apache.storm.thrift.meta_data.FieldValueMetaData(org.apache.storm.thrift.protocol.TType.STRING))));\n    tmpMap.put(_Fields.EXECUTOR_NODE_PORT, new org.apache.storm.thrift.meta_data.FieldMetaData(\"executor_node_port\", org.apache.storm.thrift.TFieldRequirementType.OPTIONAL, \n        new org.apache.storm.thrift.meta_data.MapMetaData(org.apache.storm.thrift.protocol.TType.MAP, <fim_middle>// class below is data class and blob\n"}