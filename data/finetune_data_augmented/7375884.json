{"text": "<fim_prefix>/*\n * Copyright 2012-2018 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage org.springframework.boot.actuate.web.trace.servlet;\n\nimport java.util.ArrayList;\nimport java.util.LinkedHashMap;\nimport java.util.List;\nimport java.util.Map;\n\nimport javax.servlet.http.HttpServletResponse;\n\nimport org.springframework.boot.actuate.trace.http.TraceableResponse;\n\n/**\n * An adapter that exposes an {@link HttpServletResponse} as a {@link TraceableResponse}.\n *\n * @author Andy Wilkinson\n */\n<fim_suffix>final class TraceableHttpServletResponse implements TraceableResponse {\n\n\tprivate final HttpServletResponse delegate;\n\n\tTraceableHttpServletResponse(HttpServletResponse response) {\n\t\tthis.delegate = response;\n\t}\n\n\t@Override\n\tpublic int getStatus() {\n\t\treturn this.delegate.getStatus();\n\t}\n\n\t@Override\n\tpublic Map<String, List<String>> getHeaders() {\n\t\treturn extractHeaders();\n\t}\n\n\tprivate Map<String, List<String>> extractHeaders() {\n\t\tMap<String, List<String>> headers = new LinkedHashMap<>();\n\t\tfor (String name : this.delegate.getHeaderNames()) {\n\t\t\theaders.put(name, new ArrayList<>(this.delegate.getHeaders(name)));\n\t\t}\n\t\treturn headers;\n\t}\n\n}<fim_middle>// class below is data class\n"}