{"text": "<fim_prefix>   *\n   * @param geoRssBox geo bounding box as a georss:box or <code>null</code> to\n   *     reset\n   */\n  public void setGeoRssBox(GeoRssBox geoRssBox) {\n    if (geoRssBox == null) {\n      removeExtension(GeoRssBox.class);\n    } else {\n      setExtension(geoRssBox);\n    }\n  }\n  /**\n   * Returns whether it has the geo bounding box as a georss:box.\n   *\n   * @return whether it has the geo bounding box as a georss:box\n   */\n  public boolean hasGeoRssBox() {\n    return hasExtension(GeoRssBox.class);\n  }\n  /**\n   * Returns the geolocation as a georss:point.\n   *\n   * @return geolocation as a georss:point\n   */\n  public GeoRssPoint getGeoRssPoint() {\n    return getExtension(GeoRssPoint.class);\n  }\n  /**\n   * Sets the geolocation as a georss:point.\n   *\n   * @param geoRssPoint geolocation as a georss:point or <code>null</code> to\n   *     reset\n   */\n  public void setGeoRssPoint(GeoRssPoint geoRssPoint) {\n    if (geoRssPoint == null) {\n      removeExtension(GeoRssPoint.class);\n    } else {\n      setExtension(geoRssPoint);\n    }\n  }\n  /**\n   * Returns whether it has the geolocation as a georss:point.\n   *\n   * @return whether it has the geolocation as a georss:point\n   */\n  public boolean hasGeoRssPoint() {\n    return hasExtension(GeoRssPoint.class);\n  }\n  /**\n   * Returns the geolocation as a georss:where.\n   *\n   * @return geolocation as a georss:where\n   */\n  public GeoRssWhere getGeoRssWhere() {\n    return getExtension(GeoRssWhere.class);\n  }\n  /**\n   * Sets the geolocation as a georss:where.\n   *\n   * @param geoRssWhere geolocation as a georss:where or <code>null</code> to\n   *     reset\n   */\n  public void setGeoRssWhere(GeoRssWhere geoRssWhere) {\n    if (geoRssWhere == null) {\n      removeExtension(GeoRssWhere.class);\n    } else {\n      setExtension(geoRssWhere);\n    }\n  }\n  /**\n   * Returns whether it has the geolocation as a georss:where.\n   *\n   * @return whether it has the geolocation as a georss:where\n   */\n  public boolean hasGeoRssWhere() {\n    return hasExtension(GeoRssWhere.class);\n  }\n  /**\n   * Returns the geo bounding box as a gml:Envelope.\n   *\n   * @return geo bounding box as a gml:Envelope\n   */\n  public GmlEnvelope getGmlEnvelope() {\n    return getExtension(GmlEnvelope.class);\n  }\n  /**\n   * Sets the geo bounding box as a gml:Envelope.\n   *\n   * @param gmlEnvelope geo bounding box as a gml:Envelope or <code>null</code>\n   *     to reset\n   */\n  public void setGmlEnvelope(GmlEnvelope gmlEnvelope) {\n    if (gmlEnvelope == null) {\n      removeExtension(GmlEnvelope.class);\n    } else {\n      setExtension(gmlEnvelope);\n    }\n  }\n  /**\n   * Returns whether it has the geo bounding box as a gml:Envelope.\n   *\n   * @return whether it has the geo bounding box as a gml:Envelope\n   */\n  public boolean hasGmlEnvelope() {\n    return hasExtension(GmlEnvelope.class);\n  }\n  /**\n   * Returns the geolocation as a gml:point.\n   *\n   * @return geolocation as a gml:point\n   */\n  public GmlPoint getGmlPoint() {\n    return getExtension(GmlPoint.class);\n  }\n  /**\n   * Sets the geolocation as a gml:point.\n   *\n   * @param gmlPoint geolocation as a gml:point or <code>null</code> to reset\n   */\n  public void setGmlPoint(GmlPoint gmlPoint) {\n    if (gmlPoint == null) {\n      removeExtension(GmlPoint.class);\n    } else {\n      setExtension(gmlPoint);\n    }\n  }\n  /**\n   * Returns whether it has the geolocation as a gml:point.\n   *\n   * @return whether it has the geolocation as a gml:point\n   */\n  public boolean hasGmlPoint() {\n    return hasExtension(GmlPoint.class);\n  }\n  /**\n   * Returns the the height of the photo.\n   *\n   * @return the height of the photo\n   */\n  public GphotoHeight getHeightExt() {\n    return getExtension(GphotoHeight.class);\n  }\n  /**\n   * Sets the the height of the photo.\n   *\n   * @param heightExt the height of the photo or <code>null</code> to reset\n   */\n  public void setHeightExt(GphotoHeight heightExt) {\n    if (heightExt == null) {\n      removeExtension(GphotoHeight.class);\n    } else {\n      setExtension(heightExt);\n    }\n  }\n  /**\n   * Returns whether it has the the height of the photo.\n   *\n   * @return whether it has the the height of the photo\n   */\n  public boolean hasHeightExt() {\n    return hasExtension(GphotoHeight.class);\n  }\n  /**\n   * Returns the the version of the image bytes.\n   *\n   * @return the version of the image bytes\n   */\n  public GphotoImageVersion getImageVersionExt() {\n    return getExtension(GphotoImageVersion.class);\n  }\n  /**\n   * Sets the the version of the image bytes.\n   *\n   * @param imageVersionExt the version of the image bytes or <code>null</code>\n   *     to reset\n   */\n  public void setImageVersionExt(GphotoImageVersion imageVersionExt) {\n    if (imageVersionExt == null) {\n      removeExtension(GphotoImageVersion.class);\n    } else {\n      setExtension(imageVersionExt);\n    }\n  }\n  /**\n   * Returns whether it has the the version of the image bytes.\n   *\n   * @return whether it has the the version of the image bytes\n   */\n  public boolean hasImageVersionExt() {\n    return hasExtension(GphotoImageVersion.class);\n  }\n  /**\n   * Returns the mediarss group for media metadata.\n   *\n   * @return mediarss group for media metadata\n   */\n  public MediaGroup getMediaGroup() {\n    return getExtension(MediaGroup.class);\n  }\n  /**\n   * Sets the mediarss group for media metadata.\n   *\n   * @param mediaGroup mediarss group for media metadata or <code>null</code> to\n   *     reset\n   */\n  public void setMediaGroup(MediaGroup mediaGroup) {\n    if (mediaGroup == null) {\n      removeExtension(MediaGroup.class);\n    } else {\n      setExtension(mediaGroup);\n    }\n  }\n  /**\n   * Returns whether it has the mediarss group for media metadata.\n   *\n   * @return whether it has the mediarss group for media metadata\n   */\n  public boolean hasMediaGroup() {\n    return hasExtension(MediaGroup.class);\n  }\n  /**\n   * Returns the the properties of the original video.\n   *\n   * @return the properties of the original video\n   */\n  public GphotoOriginalVideo getOriginalVideo() {\n    return getExtension(GphotoOriginalVideo.class);\n  }\n  /**\n   * Sets the the properties of the original video.\n   *\n   * @param originalVideo the properties of the original video or\n   *     <code>null</code> to reset\n   */\n  public void setOriginalVideo(GphotoOriginalVideo originalVideo) {\n    if (originalVideo == null) {\n      removeExtension(GphotoOriginalVideo.class);\n    } else {\n      setExtension(originalVideo);\n    }\n  }\n  /**\n   * Returns whether it has the the properties of the original video.\n   *\n   * @return whether it has the the properties of the original video\n   */\n  public boolean hasOriginalVideo() {\n    return hasExtension(GphotoOriginalVideo.class);\n  }\n  /**\n   * Returns the position of the photo in its album.\n   *\n   * @return position of the photo in its album\n   */\n  public GphotoPosition getPositionExt() {\n    return getExtension(GphotoPosition.class);\n  }\n  /**\n   * Sets the position of the photo in its album.\n   *\n   * @param positionExt position of the photo in its album or <code>null</code>\n   *     to reset\n   */\n<fim_suffix>  public void setPositionExt(GphotoPosition positionExt) {\n    if (positionExt == null) {\n      removeExtension(GphotoPosition.class);\n    } else {\n      setExtension(positionExt);\n    }\n  }<fim_middle>// function below has no smell\n"}