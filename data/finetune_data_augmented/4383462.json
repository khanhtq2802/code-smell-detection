{"text": "<fim_prefix>/*\n *  Licensed to the Apache Software Foundation (ASF) under one\n *  or more contributor license agreements.  See the NOTICE file\n *  distributed with this work for additional information\n *  regarding copyright ownership.  The ASF licenses this file\n *  to you under the Apache License, Version 2.0 (the\n *  \"License\"); you may not use this file except in compliance\n *  with the License.  You may obtain a copy of the License at\n *  \n *    http://www.apache.org/licenses/LICENSE-2.0\n *  \n *  Unless required by applicable law or agreed to in writing,\n *  software distributed under the License is distributed on an\n *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n *  KIND, either express or implied.  See the License for the\n *  specific language governing permissions and limitations\n *  under the License. \n *  \n */\npackage org.apache.directory.studio.openldap.config.editor.dialogs;\nimport org.apache.directory.api.ldap.model.exception.LdapURLEncodingException;\nimport org.apache.directory.api.ldap.model.url.LdapUrl;\nimport org.apache.directory.studio.common.ui.AddEditDialog;\nimport org.apache.directory.studio.common.ui.widgets.BaseWidgetUtils;\nimport org.eclipse.jface.dialogs.IDialogConstants;\nimport org.eclipse.swt.SWT;\nimport org.eclipse.swt.events.ModifyListener;\nimport org.eclipse.swt.layout.GridData;\nimport org.eclipse.swt.layout.GridLayout;\nimport org.eclipse.swt.widgets.Button;\nimport org.eclipse.swt.widgets.Composite;\nimport org.eclipse.swt.widgets.Control;\nimport org.eclipse.swt.widgets.Display;\nimport org.eclipse.swt.widgets.Group;\nimport org.eclipse.swt.widgets.Shell;\nimport org.eclipse.swt.widgets.Text;\nimport org.apache.directory.studio.openldap.config.editor.wrappers.ServerIdWrapper;\n/**\n * The ServerIdDialog is used to edit a ServerID, which can be an integer, an hexadecimal number,\n * optionally followed by an URL. The dialog overlay is like :\n * \n * <pre>\n * +---------------------------------------+\n * |  ServerID Input                       |\n * | .-----------------------------------. |\n * | | ID  : [    ]                      | |\n * | | URL : [                         ] | |\n * | '-----------------------------------' |\n * | .-----------------------------------. |\n * | | ServerId : <////////////////////> | |\n * | '-----------------------------------' |\n * |                                       |\n * |  (cancel)                       (OK)  |\n * +---------------------------------------+\n * \n * </pre>\n * \n * @author <a href=\"mailto:dev@directory.apache.org\">Apache Directory Project</a>\n */\npublic class ServerIdDialog extends AddEditDialog<ServerIdWrapper>\n{\n    // UI widgets\n    /** The ID Text */\n    private Text idText;\n    /** The URL text */\n    private Text urlText;\n    /** The resulting serverID Text, or an error message */\n    private Text serverIdText;\n    /**\n     * Create a new instance of the ServerIdDialog\n     * \n     * @param parentShell The parent Shell\n     */\n    public ServerIdDialog( Shell parentShell )\n    {\n        super( parentShell );\n        super.setShellStyle( super.getShellStyle() | SWT.RESIZE );\n    }\n    /**\n     * The listener for the ID Text\n     */\n    private ModifyListener idTextListener = event ->\n        {\n            Display display = serverIdText.getDisplay();\n            Button okButton = getButton( IDialogConstants.OK_ID );\n            // This button might be null when the dialog is called.\n            if ( okButton == null )\n            {\n                return;\n            }\n            try\n            {\n                int idValue = Integer.parseInt( idText.getText() );\n                serverIdText.setText( getEditedElement().toString() );\n                // The value must be between 0 and 4095, and it must not already exists\n                if ( ( idValue < 0 ) || ( idValue > 4096 ) )\n                {\n                    serverIdText.setForeground( display.getSystemColor( SWT.COLOR_RED ) );\n                    okButton.setEnabled( false );\n                    return;\n                }\n                else\n                {\n                    // Be sure the value is not already taken\n                    for ( ServerIdWrapper serverIdWrapper : getElements() )\n                    {\n                        if ( serverIdWrapper.getServerId() == idValue )\n                        {\n                            serverIdText.setForeground( display.getSystemColor( SWT.COLOR_RED ) );\n                            okButton.setEnabled( false );\n                            return;\n                        }\n                    }\n                }\n                serverIdText.setText( idText.getText() + ' ' + urlText.getText() );\n                serverIdText.setForeground( display.getSystemColor( SWT.COLOR_BLACK ) );\n                getEditedElement().setServerId( idValue );\n                okButton.setEnabled( true );\n            }\n            catch ( NumberFormatException nfe )\n            {\n                // Not even a number\n                serverIdText.setText( getEditedElement().toString() );\n                serverIdText.setForeground( display.getSystemColor( SWT.COLOR_RED ) );\n                okButton.setEnabled( false );\n            }\n        };\n    /**\n     * The listener for the URL Text\n     */\n    private ModifyListener urlTextListener = event ->\n        {\n            Display display = serverIdText.getDisplay();\n            Button okButton = getButton( IDialogConstants.OK_ID );\n            // This button might be null when the dialog is called.\n            if ( okButton == null )\n            {\n                return;\n            }\n            try\n            {\n                String urlStr = urlText.getText();\n                new LdapUrl( urlStr );\n                getEditedElement().setUrl( urlStr );\n                serverIdText.setText( idText.getText() + ' ' + urlStr );\n                serverIdText.setForeground( display.getSystemColor( SWT.COLOR_BLACK ) );\n                okButton.setEnabled( true );\n            }\n            catch ( LdapURLEncodingException luee )\n            {\n                serverIdText.setForeground( display.getSystemColor( SWT.COLOR_RED ) );\n                okButton.setEnabled( false );\n            }\n        };\n    /**\n     * @see org.eclipse.jface.window.Window#configureShell(org.eclipse.swt.widgets.Shell)\n     */\n    @Override\n    protected void configureShell( Shell shell )\n    {\n        super.configureShell( shell );\n        shell.setText( \"ServerId\" );\n    }\n    /**\n     * Create the Dialog for ServerID :\n     * <pre>\n     * +---------------------------------------+\n     * |  ServerID                             |\n     * | .-----------------------------------. |\n     * | | ID  : [    ]                      | |\n     * | | URL : [                         ] | |\n     * | '-----------------------------------' |\n     * | .-----------------------------------. |\n     * | | ServerId : <////////////////////> | |\n     * | '-----------------------------------' |\n     * |                                       |\n     * |  (cancel)                       (OK)  |\n     * +---------------------------------------+\n     * @see org.eclipse.jface.dialogs.Dialog#createDialogArea(org.eclipse.swt.widgets.Composite)\n     */\n    @Override\n    protected Control createDialogArea( Composite parent )\n    {\n        Composite composite = ( Composite ) super.createDialogArea( parent );\n        GridData gd = new GridData( GridData.FILL_BOTH );\n        composite.setLayoutData( gd );\n        createServerIdEditGroup( composite );\n        createServerIdShowGroup( composite );\n        initDialog();\n        addListeners();\n        applyDialogFont( composite );\n        return composite;\n    }\n    /**\n     * Creates the ServerID input group. This is the part of the dialog\n     * where one can insert the ServerID values:\n     * \n     * <pre>\n     * ServerID Input\n     * .-----------------------------------.\n     * | ID  : [    ]                      |\n     * | URL : [                         ] |\n     * '-----------------------------------'\n     * </pre>\n     * @param parent the parent composite\n     */\n<fim_suffix>    private void createServerIdEditGroup( Composite parent )\n    {\n        // ServerID Group\n        Group serverIdGroup = BaseWidgetUtils.createGroup( parent, \"ServerID input\", 1 );\n        GridLayout serverIdGroupGridLayout = new GridLayout( 2, false );\n        serverIdGroup.setLayout( serverIdGroupGridLayout );\n        serverIdGroup.setLayoutData( new GridData( SWT.FILL, SWT.NONE, true, false ) );\n        // ServerID Text\n        BaseWidgetUtils.createLabel( serverIdGroup, \"ID:\", 1 );\n        idText = BaseWidgetUtils.createText( serverIdGroup, \"\", 1 );\n        idText.setLayoutData( new GridData( SWT.FILL, SWT.NONE, true, false ) );\n        // URL Text\n        BaseWidgetUtils.createLabel( serverIdGroup, \"URL:\", 1 );\n        urlText = BaseWidgetUtils.createText( serverIdGroup, \"\", 1 );\n        urlText.setLayoutData( new GridData( SWT.FILL, SWT.NONE, true, false ) );\n    }\n    /**\n     * Creates the ServerID show group. This is the part of the dialog<fim_middle>// function below has no smell\n"}