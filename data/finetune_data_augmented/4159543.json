{"text": "<fim_prefix>\n<fim_suffix>  public  static final class Signature extends\n      com.google.protobuf.GeneratedMessageV3 implements\n      // @@protoc_insertion_point(message_implements:Signature)\n      SignatureOrBuilder {\n  private static final long serialVersionUID = 0L;\n    // Use Signature.newBuilder() to construct.\n    private Signature(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {\n      super(builder);\n    }\n    private Signature() {\n      columns_ = java.util.Collections.emptyList();\n      sql_ = \"\";\n      parameters_ = java.util.Collections.emptyList();\n      statementType_ = 0;\n    }\n    @java.lang.Override\n    public final com.google.protobuf.UnknownFieldSet\n    getUnknownFields() {\n      return this.unknownFields;\n    }\n    private Signature(\n        com.google.protobuf.CodedInputStream input,\n        com.google.protobuf.ExtensionRegistryLite extensionRegistry)\n        throws com.google.protobuf.InvalidProtocolBufferException {\n      this();\n      if (extensionRegistry == null) {\n        throw new java.lang.NullPointerException();\n      }\n      int mutable_bitField0_ = 0;\n      com.google.protobuf.UnknownFieldSet.Builder unknownFields =\n          com.google.protobuf.UnknownFieldSet.newBuilder();\n      try {\n        boolean done = false;\n        while (!done) {\n          int tag = input.readTag();\n          switch (tag) {\n            case 0:\n              done = true;\n              break;\n            case 10: {\n              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {\n                columns_ = new java.util.ArrayList<org.apache.calcite.avatica.proto.Common.ColumnMetaData>();\n                mutable_bitField0_ |= 0x00000001;\n              }\n              columns_.add(\n                  input.readMessage(org.apache.calcite.avatica.proto.Common.ColumnMetaData.parser(), extensionRegistry));\n              break;\n            }\n            case 18: {\n              java.lang.String s = input.readStringRequireUtf8();\n              sql_ = s;\n              break;\n            }\n            case 26: {\n              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {\n                parameters_ = new java.util.ArrayList<org.apache.calcite.avatica.proto.Common.AvaticaParameter>();\n                mutable_bitField0_ |= 0x00000004;\n              }\n              parameters_.add(\n                  input.readMessage(org.apache.calcite.avatica.proto.Common.AvaticaParameter.parser(), extensionRegistry));\n              break;\n            }\n            case 34: {\n              org.apache.calcite.avatica.proto.Common.CursorFactory.Builder subBuilder = null;\n              if (cursorFactory_ != null) {\n                subBuilder = cursorFactory_.toBuilder();\n              }\n              cursorFactory_ = input.readMessage(org.apache.calcite.avatica.proto.Common.CursorFactory.parser(), extensionRegistry);\n              if (subBuilder != null) {\n                subBuilder.mergeFrom(cursorFactory_);\n                cursorFactory_ = subBuilder.buildPartial();\n              }\n              break;\n            }\n            case 40: {\n              int rawValue = input.readEnum();\n              statementType_ = rawValue;\n              break;\n            }\n            default: {\n              if (!parseUnknownFieldProto3(\n                  input, unknownFields, extensionRegistry, tag)) {\n                done = true;\n              }\n              break;\n            }\n          }\n        }\n      } catch (com.google.protobuf.InvalidProtocolBufferException e) {\n        throw e.setUnfinishedMessage(this);\n      } catch (java.io.IOException e) {\n        throw new com.google.protobuf.InvalidProtocolBufferException(\n            e).setUnfinishedMessage(this);\n      } finally {\n        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {\n          columns_ = java.util.Collections.unmodifiableList(columns_);\n        }\n        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {\n          parameters_ = java.util.Collections.unmodifiableList(parameters_);\n        }\n        this.unknownFields = unknownFields.build();\n        makeExtensionsImmutable();\n      }\n    }\n    public static final com.google.protobuf.Descriptors.Descriptor\n        getDescriptor() {\n      return org.apache.calcite.avatica.proto.Common.internal_static_Signature_descriptor;\n    }\n    @java.lang.Override\n    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable\n        internalGetFieldAccessorTable() {\n      return org.apache.calcite.avatica.proto.Common.internal_static_Signature_fieldAccessorTable\n          .ensureFieldAccessorsInitialized(\n              org.apache.calcite.avatica.proto.Common.Signature.class, org.apache.calcite.avatica.proto.Common.Signature.Builder.class);\n    }\n    private int bitField0_;\n    public static final int COLUMNS_FIELD_NUMBER = 1;\n    private java.util.List<org.apache.calcite.avatica.proto.Common.ColumnMetaData> columns_;\n    /**\n     * <code>repeated .ColumnMetaData columns = 1;</code>\n     */\n    public java.util.List<org.apache.calcite.avatica.proto.Common.ColumnMetaData> getColumnsList() {\n      return columns_;\n    }\n    /**\n     * <code>repeated .ColumnMetaData columns = 1;</code>\n     */\n    public java.util.List<? extends org.apache.calcite.avatica.proto.Common.ColumnMetaDataOrBuilder> \n        getColumnsOrBuilderList() {\n      return columns_;\n    }\n    /**\n     * <code>repeated .ColumnMetaData columns = 1;</code>\n     */\n    public int getColumnsCount() {\n      return columns_.size();\n    }\n    /**\n     * <code>repeated .ColumnMetaData columns = 1;</code>\n     */\n    public org.apache.calcite.avatica.proto.Common.ColumnMetaData getColumns(int index) {\n      return columns_.get(index);\n    }\n    /**\n     * <code>repeated .ColumnMetaData columns = 1;</code>\n     */\n    public org.apache.calcite.avatica.proto.Common.ColumnMetaDataOrBuilder getColumnsOrBuilder(\n        int index) {\n      return columns_.get(index);\n    }\n    public static final int SQL_FIELD_NUMBER = 2;\n    private volatile java.lang.Object sql_;\n    /**\n     * <code>string sql = 2;</code>\n     */\n    public java.lang.String getSql() {\n      java.lang.Object ref = sql_;\n      if (ref instanceof java.lang.String) {\n        return (java.lang.String) ref;\n      } else {\n        com.google.protobuf.ByteString bs = \n            (com.google.protobuf.ByteString) ref;\n        java.lang.String s = bs.toStringUtf8();\n        sql_ = s;\n        return s;\n      }\n    }\n    /**\n     * <code>string sql = 2;</code>\n     */\n    public com.google.protobuf.ByteString\n        getSqlBytes() {\n      java.lang.Object ref = sql_;\n      if (ref instanceof java.lang.String) {\n        com.google.protobuf.ByteString b = \n            com.google.protobuf.ByteString.copyFromUtf8(\n                (java.lang.String) ref);\n        sql_ = b;\n        return b;\n      } else {\n        return (com.google.protobuf.ByteString) ref;\n      }\n    }\n    public static final int PARAMETERS_FIELD_NUMBER = 3;\n    private java.util.List<org.apache.calcite.avatica.proto.Common.AvaticaParameter> parameters_;\n    /**\n     * <code>repeated .AvaticaParameter parameters = 3;</code>\n     */\n    public java.util.List<org.apache.calcite.avatica.proto.Common.AvaticaParameter> getParametersList() {\n      return parameters_;\n    }\n    /**\n     * <code>repeated .AvaticaParameter parameters = 3;</code>\n     */\n    public java.util.List<? extends org.apache.calcite.avatica.proto.Common.AvaticaParameterOrBuilder> \n        getParametersOrBuilderList() {\n      return parameters_;\n    }\n    /**\n     * <code>repeated .AvaticaParameter parameters = 3;</code>\n     */\n    public int getParametersCount() {\n      return parameters_.size();\n    }\n    /**\n     * <code>repeated .AvaticaParameter parameters = 3;</code>\n     */\n    public org.apache.calcite.avatica.proto.Common.AvaticaParameter getParameters(int index) {\n      return parameters_.get(index);\n    }\n    /**\n     * <code>repeated .AvaticaParameter parameters = 3;</code>\n     */\n    public org.apache.calcite.avatica.proto.Common.AvaticaParameterOrBuilder getParametersOrBuilder(\n        int index) {\n      return parameters_.get(index);\n    }\n    public static final int CURSOR_FACTORY_FIELD_NUMBER = 4;<fim_middle>// class below has no smell\n"}