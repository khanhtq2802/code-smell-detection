{"text": "<fim_prefix>/**\n * Copyright (c) 2017, 2018 Kichwa Coders Ltd. and others.\n * \n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0,\n * or the Eclipse Distribution License v. 1.0 which is available at\n * http://www.eclipse.org/org/documents/edl-v10.php.\n * \n * SPDX-License-Identifier: EPL-2.0 OR BSD-3-Clause\n */\npackage org.eclipse.lsp4j.debug;\n\nimport java.util.Arrays;\nimport org.eclipse.lsp4j.jsonrpc.validation.NonNull;\nimport org.eclipse.xtext.xbase.lib.Pure;\nimport org.eclipse.xtext.xbase.lib.util.ToStringBuilder;\n\n/**\n * Response to 'threads' request.\n */\n@SuppressWarnings(\"all\")\npublic class ThreadsResponse {\n  /**\n   * All threads.\n   */\n  @NonNull\n  private org.eclipse.lsp4j.debug.Thread[] threads;\n  \n  /**\n   * All threads.\n   */\n  @Pure\n  @NonNull\n  public org.eclipse.lsp4j.debug.Thread[] getThreads() {\n    return this.threads;\n  }\n  \n  /**\n   * All threads.\n   */\n  public void setThreads(@NonNull final org.eclipse.lsp4j.debug.Thread[] threads) {\n    if (threads == null) {\n      throw new IllegalArgumentException(\"Property must not be null: threads\");\n    }\n    this.threads = threads;\n  }\n  \n  @Override\n  @Pure\n  public String toString() {\n    ToStringBuilder b = new ToStringBuilder(this);\n    b.add(\"threads\", this.threads);\n    return b.toString();\n  }\n  \n  @Override\n  @Pure\n  public boolean equals(final Object obj) {\n    if (this == obj)\n      return true;\n    if (obj == null)\n      return false;\n    if (getClass() != obj.getClass())\n      return false;\n    ThreadsResponse other = (ThreadsResponse) obj;\n    if (this.threads == null) {\n      if (other.threads != null)\n        return false;\n    } else if (!Arrays.deepEquals(this.threads, other.threads))\n      return false;\n    return true;\n  }\n  \n<fim_suffix>  @Override\n  @Pure\n  public int hashCode() {\n    return 31 * 1 + ((this.threads== null) ? 0 : Arrays.deepHashCode(this.threads));\n  }\n}<fim_middle>// function below has no smell\n"}