{"text": "<fim_prefix>package com.linkedin.restli.server.config;\n\nimport com.linkedin.restli.common.ConfigValue;\n\nimport java.util.Objects;\n\n/**\n * Implementation class for {@link ResourceMethodConfig}. When there are more method level configuration introduced\n * in the future, we should consider introducing a ResourceMethodConfigBuilder.\n *\n * @author mnchen\n */\n<fim_suffix>class ResourceMethodConfigImpl implements ResourceMethodConfig\n{\n  private final ConfigValue<Long> _timeoutMs;\n\n  ResourceMethodConfigImpl(ConfigValue<Long> timeoutMs)\n  {\n    _timeoutMs = timeoutMs;\n  }\n\n  public ConfigValue<Long> getTimeoutMs()\n  {\n    return _timeoutMs;\n  }\n\n  @Override\n  public String toString()\n  {\n    return \"ResourceMethodConfigImpl{\" +\n            \"_timeoutMs=\" + _timeoutMs +\n            '}';\n  }\n\n  @Override\n  public boolean equals(Object o)\n  {\n    if (this == o) return true;\n    if (o == null || getClass() != o.getClass()) return false;\n    ResourceMethodConfigImpl that = (ResourceMethodConfigImpl) o;\n    return Objects.equals(_timeoutMs, that._timeoutMs);\n  }\n\n  @Override\n  public int hashCode()\n  {\n    return Objects.hash(_timeoutMs);\n  }\n}<fim_middle>// class below is data class\n"}