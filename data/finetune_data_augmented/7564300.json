{"text": "<fim_prefix>/*\n * Copyright 2002-2017 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage org.springframework.web.servlet.mvc.method.annotation;\n\nimport javax.servlet.http.Cookie;\nimport javax.servlet.http.HttpServletRequest;\n\nimport org.springframework.beans.factory.config.ConfigurableBeanFactory;\nimport org.springframework.core.MethodParameter;\nimport org.springframework.lang.Nullable;\nimport org.springframework.util.Assert;\nimport org.springframework.web.context.request.NativeWebRequest;\nimport org.springframework.web.method.annotation.AbstractCookieValueMethodArgumentResolver;\nimport org.springframework.web.util.UrlPathHelper;\nimport org.springframework.web.util.WebUtils;\n\n/**\n * An {@link org.springframework.web.method.annotation.AbstractCookieValueMethodArgumentResolver}\n * that resolves cookie values from an {@link HttpServletRequest}.\n *\n * @author Rossen Stoyanchev\n * @since 3.1\n */\n<fim_suffix>public class ServletCookieValueMethodArgumentResolver extends AbstractCookieValueMethodArgumentResolver {\n\n\tprivate UrlPathHelper urlPathHelper = new UrlPathHelper();\n\n\n\tpublic ServletCookieValueMethodArgumentResolver(@Nullable ConfigurableBeanFactory beanFactory) {\n\t\tsuper(beanFactory);\n\t}\n\n\n\tpublic void setUrlPathHelper(UrlPathHelper urlPathHelper) {\n\t\tthis.urlPathHelper = urlPathHelper;\n\t}\n\n\n\t@Override\n\t@Nullable\n\tprotected Object resolveName(String cookieName, MethodParameter parameter,\n\t\t\tNativeWebRequest webRequest) throws Exception {\n\n\t\tHttpServletRequest servletRequest = webRequest.getNativeRequest(HttpServletRequest.class);\n\t\tAssert.state(servletRequest != null, \"No HttpServletRequest\");\n\n\t\tCookie cookieValue = WebUtils.getCookie(servletRequest, cookieName);\n\t\tif (Cookie.class.isAssignableFrom(parameter.getNestedParameterType())) {\n\t\t\treturn cookieValue;\n\t\t}\n\t\telse if (cookieValue != null) {\n\t\t\treturn this.urlPathHelper.decodeRequestString(servletRequest, cookieValue.getValue());\n\t\t}\n\t\telse {\n\t\t\treturn null;\n\t\t}\n\t}\n\n}<fim_middle>// class below has no smell\n"}