{"text": "<fim_prefix>/*\n * Copyright (c) 2012-2018 Red Hat, Inc.\n * This program and the accompanying materials are made\n * available under the terms of the Eclipse Public License 2.0\n * which is available at https://www.eclipse.org/legal/epl-2.0/\n *\n * SPDX-License-Identifier: EPL-2.0\n *\n * Contributors:\n *   Red Hat, Inc. - initial API and implementation\n */\npackage org.eclipse.che.ide.api.workspace.event;\n\nimport com.google.gwt.event.shared.EventHandler;\nimport com.google.gwt.event.shared.GwtEvent;\nimport org.eclipse.che.ide.api.workspace.model.MachineImpl;\n\n/** Fired when some machine goes into a stopped state. */\n<fim_suffix>public class MachineStoppedEvent extends GwtEvent<MachineStoppedEvent.Handler> {\n\n  public static final Type<MachineStoppedEvent.Handler> TYPE = new Type<>();\n\n  private final MachineImpl machine;\n\n  public MachineStoppedEvent(MachineImpl machine) {\n    this.machine = machine;\n  }\n\n  /** Returns the stopped machine. */\n  public MachineImpl getMachine() {\n    return machine;\n  }\n\n  @Override\n  public Type<Handler> getAssociatedType() {\n    return TYPE;\n  }\n\n  @Override\n  protected void dispatch(Handler handler) {\n    handler.onMachineStopped(this);\n  }\n\n  public interface Handler extends EventHandler {\n    void onMachineStopped(MachineStoppedEvent event);\n  }\n}<fim_middle>// class below is data class\n"}