{"text": "<fim_prefix>/*\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage org.apache.servicecomb.foundation.common.part;\n\nimport java.io.File;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\n\nimport org.apache.commons.io.FileUtils;\n\npublic class FilePart extends AbstractPart implements FilePartForSend {\n  private File file;\n\n  private boolean deleteAfterFinished;\n\n  public FilePart(String name, String file) {\n    this(name, new File(file));\n  }\n\n  public FilePart(String name, File file) {\n    this.name = name;\n    this.file = file;\n    this.setSubmittedFileName(this.file.getName());\n  }\n\n<fim_suffix>  @Override\n  public InputStream getInputStream() throws IOException {\n    return new FileInputStream(file);\n  }\n\n  @Override\n  public long getSize() {\n    return file.length();\n  }\n\n  @Override\n  public void write(String fileName) throws IOException {\n    FileUtils.copyFile(file, new File(fileName));\n  }\n\n  @Override\n  public void delete() throws IOException {\n    file.delete();\n  }\n\n  @Override\n  public boolean isDeleteAfterFinished() {\n    return deleteAfterFinished;\n  }\n\n  public FilePart setDeleteAfterFinished(boolean deleteAfterFinished) {\n    this.deleteAfterFinished = deleteAfterFinished;\n    return this;\n  }\n\n  @Override\n  public String getAbsolutePath() {\n    return file.getAbsolutePath();\n  }\n}<fim_middle>// function below has no smell\n"}