{"text": "<fim_prefix>// Copyright (c) Microsoft. All rights reserved.\n// Licensed under the MIT license. See License.txt in the repository root.\n\n /*\n * This file was automatically generated by com.microsoft.tfs.core.ws.generator.Generator\n * from the /complexType.vm template.\n */\npackage ms.sql.reporting.reportingservices;\n\nimport com.microsoft.tfs.core.ws.runtime.*;\nimport com.microsoft.tfs.core.ws.runtime.serialization.*;\nimport com.microsoft.tfs.core.ws.runtime.types.*;\nimport com.microsoft.tfs.core.ws.runtime.util.*;\nimport com.microsoft.tfs.core.ws.runtime.xml.*;\n\nimport ms.sql.reporting.reportingservices._ParameterFieldReference;\n\nimport java.lang.String;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\nimport javax.xml.stream.XMLStreamConstants;\nimport javax.xml.stream.XMLStreamException;\nimport javax.xml.stream.XMLStreamReader;\nimport javax.xml.stream.XMLStreamWriter;\n\n/**\n * Automatically generated complex type class.\n */\n<fim_suffix>public class _ParameterFieldReference\n    extends _ParameterValueOrFieldReference\n    implements ElementSerializable, ElementDeserializable\n{\n    // No attributes    \n\n    // Elements\n    protected String parameterName;\n    protected String fieldAlias;\n\n    public _ParameterFieldReference()\n    {\n        super();\n    }\n\n    public _ParameterFieldReference(\n        final String parameterName,\n        final String fieldAlias)\n    {\n        // TODO : Call super() instead of setting all fields directly?\n        setParameterName(parameterName);\n        setFieldAlias(fieldAlias);\n    }\n\n    public String getParameterName()\n    {\n        return this.parameterName;\n    }\n\n    public void setParameterName(String value)\n    {\n        this.parameterName = value;\n    }\n\n    public String getFieldAlias()\n    {\n        return this.fieldAlias;\n    }\n\n    public void setFieldAlias(String value)\n    {\n        this.fieldAlias = value;\n    }\n\n    public void writeAsElement(\n        final XMLStreamWriter writer,\n        final String name)\n        throws XMLStreamException\n    {\n        writer.writeStartElement(name);\n\n        // Declare our type\n        writer.writeAttribute(\n            \"xsi\",\n            \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"type\",\n            \"ParameterFieldReference\");\n\n        // Elements\n        XMLStreamWriterHelper.writeElement(\n            writer,\n            \"ParameterName\",\n            this.parameterName);\n        XMLStreamWriterHelper.writeElement(\n            writer,\n            \"FieldAlias\",\n            this.fieldAlias);\n\n        writer.writeEndElement();\n    }\n\n    public void readFromElement(final XMLStreamReader reader)\n        throws XMLStreamException\n    {\n        String localName;\n\n        // This object uses no attributes\n\n        // Elements\n        int event;\n\n        do\n        {\n            event = reader.next();\n\n            if (event == XMLStreamConstants.START_ELEMENT)\n            {\n                localName = reader.getLocalName();\n\n                if (localName.equalsIgnoreCase(\"ParameterName\"))\n                {\n                    this.parameterName = reader.getElementText();\n                }\n                else if (localName.equalsIgnoreCase(\"FieldAlias\"))\n                {\n                    this.fieldAlias = reader.getElementText();\n                }\n                else\n                {\n                    // Read the unknown child element until its end\n                    XMLStreamReaderHelper.readUntilElementEnd(reader);\n                }\n            }\n        }\n        while (event != XMLStreamConstants.END_ELEMENT);\n    }\n}<fim_middle>// class below is data class\n"}