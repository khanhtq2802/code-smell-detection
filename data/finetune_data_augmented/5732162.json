{"text": "<fim_prefix>/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage org.apache.tajo.plan.joinorder;\n\nimport org.apache.tajo.algebra.JoinType;\nimport org.apache.tajo.catalog.Schema;\nimport org.apache.tajo.catalog.SchemaUtil;\nimport org.apache.tajo.plan.expr.EvalNode;\nimport org.apache.tajo.plan.logical.JoinSpec;\nimport org.apache.tajo.util.StringUtils;\n\nimport java.util.Set;\n\npublic class JoinEdge {\n  private final JoinSpec joinSpec;\n  private final JoinVertex leftVertex;\n  private final JoinVertex rightVertex;\n  private final Schema schema;\n\n  public JoinEdge(JoinSpec joinSpec, JoinVertex leftVertex, JoinVertex rightVertex) {\n    this.joinSpec = joinSpec;\n    this.leftVertex = leftVertex;\n    this.rightVertex = rightVertex;\n    this.schema = SchemaUtil.merge(leftVertex.getSchema(), rightVertex.getSchema());\n  }\n\n  public JoinType getJoinType() {\n    return joinSpec.getType();\n  }\n\n<fim_suffix>  public boolean hasJoinQual() {\n    return joinSpec.hasPredicates();\n  }\n\n  public void addJoinQual(EvalNode joinQual) {\n    this.joinSpec.addPredicate(joinQual);\n  }\n\n  public void addJoinPredicates(Set<EvalNode> predicates) {\n    this.joinSpec.addPredicates(predicates);\n  }\n\n  public Set<EvalNode> getJoinQual() {\n    return joinSpec.getPredicates();\n  }\n\n  public JoinSpec getJoinSpec() {\n    return this.joinSpec;\n  }\n\n  public EvalNode getSingletonJoinQual() {\n    return joinSpec.getSingletonPredicate();\n  }\n\n  public String toString() {\n    return leftVertex + \" \" + joinSpec.getType() + \" \" + rightVertex + \" ON \" +\n        StringUtils.join(joinSpec.getPredicates(), \", \");\n  }\n\n  public JoinVertex getLeftVertex() {\n    return leftVertex;\n  }\n\n  public JoinVertex getRightVertex() {\n    return rightVertex;\n  }\n\n  public Schema getSchema() {\n    return schema;\n  }\n}<fim_middle>// function below has no smell\n"}