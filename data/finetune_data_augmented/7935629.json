{"text": "<fim_prefix>/*******************************************************************************\n * Copyright (c) 2000, 2010 IBM Corporation and others.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     IBM Corporation - initial API and implementation\n *******************************************************************************/\npackage org.eclipse.draw2d.text;\n\nimport java.util.List;\n\nimport org.eclipse.draw2d.Figure;\n\n/**\n * A layout for FlowFigures with children.\n * \n * <P>\n * WARNING: This class is not intended to be subclassed by clients.\n * \n * @author hudsonr\n * @since 2.1\n */\n<fim_suffix>public abstract class FlowContainerLayout extends FlowFigureLayout implements\n\t\tFlowContext {\n\n\t/**\n\t * the current line\n\t */\n\tLineBox currentLine;\n\n\t/**\n\t * @see org.eclipse.draw2d.text.FlowFigureLayout#FlowFigureLayout(FlowFigure)\n\t */\n\tprotected FlowContainerLayout(FlowFigure flowFigure) {\n\t\tsuper(flowFigure);\n\t}\n\n\t/**\n\t * Adds the given box the current line and clears the context's state.\n\t * \n\t * @see org.eclipse.draw2d.text.FlowContext#addToCurrentLine(FlowBox)\n\t */\n\tpublic void addToCurrentLine(FlowBox child) {\n\t\tgetCurrentLine().add(child);\n\t\tsetContinueOnSameLine(false);\n\t}\n\n\t/**\n\t * Flush anything pending and free all temporary data used during layout.\n\t */\n\tprotected void cleanup() {\n\t\tcurrentLine = null;\n\t}\n\n\t/**\n\t * Used by getCurrentLine().\n\t */\n\tprotected abstract void createNewLine();\n\n\t/**\n\t * Called after {@link #layoutChildren()} when all children have been laid\n\t * out. This method exists to flush the last line.\n\t */\n\tprotected abstract void flush();\n\n\t/**\n\t * FlowBoxes shouldn't be added directly to the current line. Use\n\t * {@link #addToCurrentLine(FlowBox)} for that.\n\t * \n\t * @see org.eclipse.draw2d.text.FlowContext#getCurrentLine()\n\t */\n\tLineBox getCurrentLine() {\n\t\tif (currentLine == null)\n\t\t\tcreateNewLine();\n\t\treturn currentLine;\n\t}\n\n\t/**\n\t * @see FlowContext#getRemainingLineWidth()\n\t */\n\tpublic int getRemainingLineWidth() {\n\t\treturn getCurrentLine().getAvailableWidth();\n\t}\n\n\t/**\n\t * @see FlowContext#isCurrentLineOccupied()\n\t */\n\tpublic boolean isCurrentLineOccupied() {\n\t\treturn currentLine != null && currentLine.isOccupied();\n\t}\n\n\t/**\n\t * @see FlowFigureLayout#layout()\n\t */\n\tprotected void layout() {\n\t\tpreLayout();\n\t\tlayoutChildren();\n\t\tflush();\n\t\tcleanup();\n\t}\n\n\t/**\n\t * Layout all children.\n\t */\n\tprotected void layoutChildren() {\n\t\tList children = getFlowFigure().getChildren();\n\t\tfor (int i = 0; i < children.size(); i++) {\n\t\t\tFigure f = (Figure) children.get(i);\n\t\t\tif (forceChildInvalidation(f))\n\t\t\t\tf.invalidate();\n\t\t\tf.validate();\n\t\t}\n\t}\n\n\tboolean forceChildInvalidation(Figure f) {\n\t\treturn true;\n\t}\n\n\t/**\n\t * Called before layoutChildren() to setup any necessary state.\n\t */\n\tprotected abstract void preLayout();\n\n}<fim_middle>// class below has no smell\n"}