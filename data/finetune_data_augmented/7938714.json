{"text": "<fim_prefix>/*******************************************************************************\n * Copyright (c) 2000, 2010 IBM Corporation and others.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     IBM Corporation - initial API and implementation\n *******************************************************************************/\npackage org.eclipse.gef.handles;\n\nimport org.eclipse.draw2d.Locator;\nimport org.eclipse.draw2d.MidpointLocator;\nimport org.eclipse.draw2d.geometry.Dimension;\n\nimport org.eclipse.gef.ConnectionEditPart;\nimport org.eclipse.gef.DragTracker;\nimport org.eclipse.gef.RequestConstants;\nimport org.eclipse.gef.SharedCursors;\nimport org.eclipse.gef.tools.ConnectionBendpointTracker;\n\n/**\n * A BendpointHandle that is used to create a new bendpoint.\n */\n<fim_suffix>public class BendpointCreationHandle extends BendpointHandle {\n\n\t{\n\t\tsetCursor(SharedCursors.SIZEALL);\n\t\tsetPreferredSize(new Dimension(DEFAULT_HANDLE_SIZE - 2,\n\t\t\t\tDEFAULT_HANDLE_SIZE - 2));\n\t}\n\n\t/**\n\t * Creates a new BendpointCreationHandle.\n\t */\n\tpublic BendpointCreationHandle() {\n\t}\n\n\t/**\n\t * Creates a new BendpointCreationHandle, sets its owner to\n\t * <code>owner</code> and its index to <code>index</code>, and sets its\n\t * locator to a new {@link MidpointLocator}.\n\t * \n\t * @param owner\n\t *            the ConnectionEditPart owner\n\t * @param index\n\t *            the index\n\t */\n\tpublic BendpointCreationHandle(ConnectionEditPart owner, int index) {\n\t\tsetOwner(owner);\n\t\tsetIndex(index);\n\t\tsetLocator(new MidpointLocator(getConnection(), index));\n\t}\n\n\t/**\n\t * Creates a new BendpointCreationHandle, sets its owner to\n\t * <code>owner</code> and its index to <code>index</code>, and sets its\n\t * locator to a new {@link MidpointLocator} with the given\n\t * <code>locatorIndex</code>.\n\t * \n\t * @param owner\n\t *            the ConnectionEditPart owner\n\t * @param index\n\t *            the index\n\t * @param locatorIndex\n\t *            the locator index\n\t */\n\tpublic BendpointCreationHandle(ConnectionEditPart owner, int index,\n\t\t\tint locatorIndex) {\n\t\tsetOwner(owner);\n\t\tsetIndex(index);\n\t\tsetLocator(new MidpointLocator(getConnection(), locatorIndex));\n\t}\n\n\t/**\n\t * Creates a new BendpointCreationHandle and sets its owner to\n\t * <code>owner</code>, sets its index to <code>index</code>, and sets its\n\t * locator to <code>locator</code>.\n\t * \n\t * @param owner\n\t *            the ConnectionEditPart owner\n\t * @param index\n\t *            the index\n\t * @param locator\n\t *            the Locator\n\t */\n\tpublic BendpointCreationHandle(ConnectionEditPart owner, int index,\n\t\t\tLocator locator) {\n\t\tsetOwner(owner);\n\t\tsetIndex(index);\n\t\tsetLocator(locator);\n\t}\n\n\t/**\n\t * Creates and returns a new {@link ConnectionBendpointTracker}.\n\t * \n\t * @return the new ConnectionBendpointTracker\n\t */\n\tprotected DragTracker createDragTracker() {\n\t\tConnectionBendpointTracker tracker;\n\t\ttracker = new ConnectionBendpointTracker(\n\t\t\t\t(ConnectionEditPart) getOwner(), getIndex());\n\t\ttracker.setType(RequestConstants.REQ_CREATE_BENDPOINT);\n\t\ttracker.setDefaultCursor(getCursor());\n\t\treturn tracker;\n\t}\n\n}<fim_middle>// class below has no smell\n"}