{"text": "<fim_prefix>//\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n//\n\npackage com.cloud.hypervisor.xenserver.resource.wrapper.xenbase;\n\nimport org.apache.log4j.Logger;\nimport org.apache.xmlrpc.XmlRpcException;\n\nimport com.cloud.agent.api.Answer;\nimport com.cloud.agent.api.OvsSetTagAndFlowAnswer;\nimport com.cloud.agent.api.OvsSetTagAndFlowCommand;\nimport com.cloud.hypervisor.xenserver.resource.CitrixResourceBase;\nimport com.cloud.resource.CommandWrapper;\nimport com.cloud.resource.ResourceWrapper;\nimport com.xensource.xenapi.Connection;\nimport com.xensource.xenapi.Network;\nimport com.xensource.xenapi.Types.BadServerResponse;\nimport com.xensource.xenapi.Types.XenAPIException;\n\n<fim_suffix>@ResourceWrapper(handles =  OvsSetTagAndFlowCommand.class)\npublic final class CitrixOvsSetTagAndFlowCommandWrapper extends CommandWrapper<OvsSetTagAndFlowCommand, Answer, CitrixResourceBase> {\n\n    private static final Logger s_logger = Logger.getLogger(CitrixOvsSetTagAndFlowCommandWrapper.class);\n\n    @Override\n    public Answer execute(final OvsSetTagAndFlowCommand command, final CitrixResourceBase citrixResourceBase) {\n        citrixResourceBase.setIsOvs(true);\n\n        final Connection conn = citrixResourceBase.getConnection();\n        try {\n            final Network nw = citrixResourceBase.setupvSwitchNetwork(conn);\n            final String bridge = nw.getBridge(conn);\n\n            /*\n             * If VM is domainRouter, this will try to set flow and tag on its\n             * none guest network nic. don't worry, it will fail silently at\n             * host plugin side\n             */\n            final String result = citrixResourceBase.callHostPlugin(conn, \"ovsgre\", \"ovs_set_tag_and_flow\", \"bridge\", bridge, \"vmName\", command.getVmName(), \"tag\",\n                    command.getTag(), \"vlans\", command.getVlans(), \"seqno\", command.getSeqNo());\n            s_logger.debug(\"set flow for \" + command.getVmName() + \" \" + result);\n\n            if (result != null && result.equalsIgnoreCase(\"SUCCESS\")) {\n                return new OvsSetTagAndFlowAnswer(command, true, result);\n            } else {\n                return new OvsSetTagAndFlowAnswer(command, false, result);\n            }\n        } catch (final BadServerResponse e) {\n            s_logger.error(\"Failed to set tag and flow\", e);\n        } catch (final XenAPIException e) {\n            s_logger.error(\"Failed to set tag and flow\", e);\n        } catch (final XmlRpcException e) {\n            s_logger.error(\"Failed to set tag and flow\", e);\n        }\n\n        return new OvsSetTagAndFlowAnswer(command, false, \"EXCEPTION\");\n    }\n}<fim_middle>// class below has no smell\n"}