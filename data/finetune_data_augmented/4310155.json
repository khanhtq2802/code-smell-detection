{"text": "<fim_prefix>/*\n *  Licensed to the Apache Software Foundation (ASF) under one\n *  or more contributor license agreements.  See the NOTICE file\n *  distributed with this work for additional information\n *  regarding copyright ownership.  The ASF licenses this file\n *  to you under the Apache License, Version 2.0 (the\n *  \"License\"); you may not use this file except in compliance\n *  with the License.  You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing,\n *  software distributed under the License is distributed on an\n *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n *  KIND, either express or implied.  See the License for the\n *  specific language governing permissions and limitations\n *  under the License.\n *\n */\npackage org.apache.directory.api.ldap.codec.actions.request.search.filter;\n\n\nimport org.apache.directory.api.asn1.DecoderException;\nimport org.apache.directory.api.asn1.ber.grammar.GrammarAction;\nimport org.apache.directory.api.asn1.ber.tlv.TLV;\nimport org.apache.directory.api.i18n.I18n;\nimport org.apache.directory.api.ldap.codec.api.LdapMessageContainer;\nimport org.apache.directory.api.ldap.codec.search.SubstringFilter;\nimport org.apache.directory.api.ldap.model.message.SearchRequest;\nimport org.apache.directory.api.util.Strings;\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\n\n\n/**\n * The action used to store the Substring Filter type\n * <pre>\n * Filter ::= CHOICE {\n *     ...\n *     substrings  [4] SubstringFilter,\n *     ...\n *\n * SubstringFilter ::= SEQUENCE {\n *     type   AttributeDescription,\n *     ...\n * </pre>\n * @author <a href=\"mailto:dev@directory.apache.org\">Apache Directory Project</a>\n */\n<fim_suffix>public class StoreSubstringFilterType extends GrammarAction<LdapMessageContainer<SearchRequest>>\n{\n    /** The logger */\n    private static final Logger LOG = LoggerFactory.getLogger( StoreSubstringFilterType.class );\n\n\n    /**\n     * Instantiates a new action.\n     */\n    public StoreSubstringFilterType()\n    {\n        super( \"Store Substring filter type\" );\n    }\n\n\n    /**\n     * {@inheritDoc}\n     */\n    public void action( LdapMessageContainer<SearchRequest> container ) throws DecoderException\n    {\n        TLV tlv = container.getCurrentTLV();\n\n        // Store the value.\n        SubstringFilter substringFilter = ( SubstringFilter ) container.getTerminalFilter();\n\n        if ( tlv.getLength() == 0 )\n        {\n            String msg = I18n.err( I18n.ERR_05153_NULL_ATTRIBUTE_DESCRIPTION );\n            LOG.error( msg );\n            throw new DecoderException( msg );\n        }\n        else\n        {\n            String type = Strings.utf8ToString( tlv.getValue().getData() );\n            substringFilter.setType( type );\n\n            // We now have to get back to the nearest filter which\n            // is not terminal.\n            container.setTerminalFilter( substringFilter );\n        }\n    }\n}<fim_middle>// class below has no smell\n"}