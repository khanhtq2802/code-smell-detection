{"text": "<fim_prefix>/*\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage org.apache.gobblin.metrics.event;\n\nimport java.util.Map;\n\nimport com.google.common.collect.Maps;\n\n/**\n * Event to time actions in the program. Automatically reports start time, end time, and duration from the time\n * the {@link org.apache.gobblin.metrics.event.TimingEvent} was created to the time {@link #stop} is called.\n */\n<fim_suffix>public class TimingEvent {\n\n  public static class LauncherTimings {\n    public static final String FULL_JOB_EXECUTION = \"FullJobExecutionTimer\";\n    public static final String WORK_UNITS_CREATION = \"WorkUnitsCreationTimer\";\n    public static final String WORK_UNITS_PREPARATION = \"WorkUnitsPreparationTimer\";\n    public static final String JOB_ORCHESTRATED = \"JobOrchestrated\";\n    public static final String JOB_PREPARE = \"JobPrepareTimer\";\n    public static final String JOB_START = \"JobStartTimer\";\n    public static final String JOB_RUN = \"JobRunTimer\";\n    public static final String JOB_COMMIT = \"JobCommitTimer\";\n    public static final String JOB_CLEANUP = \"JobCleanupTimer\";\n    public static final String JOB_CANCEL = \"JobCancelTimer\";\n    public static final String JOB_COMPLETE = \"JobCompleteTimer\";\n    public static final String JOB_FAILED = \"JobFailedTimer\";\n    public static final String JOB_SUCCEEDED = \"JobSucceededTimer\";\n  }\n\n  public static class RunJobTimings {\n    public static final String JOB_LOCAL_SETUP = \"JobLocalSetupTimer\";\n    public static final String WORK_UNITS_RUN = \"WorkUnitsRunTimer\";\n    public static final String WORK_UNITS_PREPARATION = \"WorkUnitsPreparationTimer\";\n    public static final String MR_STAGING_DATA_CLEAN = \"JobMrStagingDataCleanTimer\";\n    public static final String MR_DISTRIBUTED_CACHE_SETUP = \"JobMrDistributedCacheSetupTimer\";\n    public static final String MR_JOB_SETUP = \"JobMrSetupTimer\";\n    public static final String MR_JOB_RUN = \"JobMrRunTimer\";\n    public static final String HELIX_JOB_SUBMISSION= \"JobHelixSubmissionTimer\";\n    public static final String HELIX_JOB_RUN = \"JobHelixRunTimer\";\n  }\n\n  public static class FlowTimings {\n    public static final String FLOW_COMPILED = \"FlowCompiled\";\n    public static final String FLOW_COMPILE_FAILED = \"FlowCompileFailed\";\n  }\n\n  public static class FlowEventConstants {\n    public static final String FLOW_NAME_FIELD = \"flowName\";\n    public static final String FLOW_GROUP_FIELD = \"flowGroup\";\n    public static final String FLOW_EXECUTION_ID_FIELD = \"flowExecutionId\";\n    public static final String JOB_NAME_FIELD = \"jobName\";\n    public static final String JOB_GROUP_FIELD = \"jobGroup\";\n    public static final String JOB_EXECUTION_ID_FIELD = \"jobExecutionId\";\n    public static final String SPEC_EXECUTOR_FIELD = \"specExecutor\";\n    public static final String LOW_WATERMARK_FIELD = \"lowWatermark\";\n    public static final String HIGH_WATERMARK_FIELD = \"highWatermark\";\n    public static final String PROCESSED_COUNT_FIELD = \"processedCount\";\n  }\n\n  public static final String METADATA_START_TIME = \"startTime\";\n  public static final String METADATA_END_TIME = \"endTime\";\n  public static final String METADATA_DURATION = \"durationMillis\";\n  public static final String METADATA_TIMING_EVENT = \"timingEvent\";\n  public static final String METADATA_MESSAGE = \"message\";\n\n  private final String name;\n  private final Long startTime;\n  private final EventSubmitter submitter;\n  private boolean stopped;\n\n  public TimingEvent(EventSubmitter submitter, String name) {\n    this.stopped = false;\n    this.name = name;\n    this.submitter = submitter;\n    this.startTime = System.currentTimeMillis();\n  }\n\n  /**\n   * Stop the timer and submit the event. If the timer was already stopped before, this is a no-op.\n   */\n  public void stop() {\n    stop(Maps.<String, String> newHashMap());\n  }\n\n  /**\n   * Stop the timer and submit the event, along with the additional metadata specified. If the timer was already stopped\n   * before, this is a no-op.\n   *\n   * @param additionalMetadata a {@link Map} of additional metadata that should be submitted along with this event\n   */\n  public void stop(Map<String, String> additionalMetadata) {\n    if (this.stopped) {\n      return;\n    }\n    this.stopped = true;\n    long endTime = System.currentTimeMillis();\n    long duration = endTime - this.startTime;\n\n    Map<String, String> finalMetadata = Maps.newHashMap();\n    finalMetadata.putAll(additionalMetadata);\n    finalMetadata.put(EventSubmitter.EVENT_TYPE, METADATA_TIMING_EVENT);\n    finalMetadata.put(METADATA_START_TIME, Long.toString(this.startTime));\n    finalMetadata.put(METADATA_END_TIME, Long.toString(endTime));\n    finalMetadata.put(METADATA_DURATION, Long.toString(duration));\n\n    this.submitter.submit(this.name, finalMetadata);\n  }\n}<fim_middle>// class below is blob\n"}