{"text": "<fim_prefix>/*\n * Copyright 2017-2019 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage org.springframework.integration.support.converter;\n\nimport org.springframework.messaging.Message;\nimport org.springframework.messaging.converter.StringMessageConverter;\n\n/**\n * A {@link StringMessageConverter} extension to convert any object to string.\n * <p>\n * Delegates to super when payload is {@code byte[]} or {@code String}.\n * Performs {@link Object#toString()} in other cases.\n *\n * @author Marius Bogoevici\n * @author Artem Bilan\n *\n * @since 5.0\n */\n<fim_suffix>public class ObjectStringMessageConverter extends StringMessageConverter {\n\n\t@Override\n\tprotected Object convertFromInternal(Message<?> message, Class<?> targetClass, Object conversionHint) {\n\t\tObject payload = message.getPayload();\n\t\tif (payload instanceof String || payload instanceof byte[]) {\n\t\t\treturn super.convertFromInternal(message, targetClass, conversionHint);\n\t\t}\n\t\telse {\n\t\t\treturn payload.toString();\n\t\t}\n\t}\n\n}<fim_middle>// class below has no smell\n"}