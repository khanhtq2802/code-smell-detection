{"text": "<fim_prefix>/*\n * Copyright 2012-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n * \n * http://aws.amazon.com/apache2.0\n * \n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\npackage com.ibm.cloud.objectstorage.services.kms.model.transform;\n\nimport javax.annotation.Generated;\n\nimport com.ibm.cloud.objectstorage.Request;\nimport com.ibm.cloud.objectstorage.SdkClientException;\nimport com.ibm.cloud.objectstorage.annotation.SdkInternalApi;\nimport com.ibm.cloud.objectstorage.http.HttpMethodName;\nimport com.ibm.cloud.objectstorage.protocol.*;\nimport com.ibm.cloud.objectstorage.services.kms.model.*;\nimport com.ibm.cloud.objectstorage.transform.Marshaller;\n\n/**\n * DescribeKeyRequest Marshaller\n */\n<fim_suffix>@Generated(\"com.amazonaws:aws-java-sdk-code-generator\")\n@SdkInternalApi\npublic class DescribeKeyRequestProtocolMarshaller implements Marshaller<Request<DescribeKeyRequest>, DescribeKeyRequest> {\n\n    private static final OperationInfo SDK_OPERATION_BINDING = OperationInfo.builder().protocol(Protocol.AWS_JSON).requestUri(\"/\")\n            .httpMethodName(HttpMethodName.POST).hasExplicitPayloadMember(false).hasPayloadMembers(true).operationIdentifier(\"TrentService.DescribeKey\")\n            .serviceName(\"AWSKMS\").build();\n\n    private final com.ibm.cloud.objectstorage.protocol.json.SdkJsonProtocolFactory protocolFactory;\n\n    public DescribeKeyRequestProtocolMarshaller(com.ibm.cloud.objectstorage.protocol.json.SdkJsonProtocolFactory protocolFactory) {\n        this.protocolFactory = protocolFactory;\n    }\n\n    public Request<DescribeKeyRequest> marshall(DescribeKeyRequest describeKeyRequest) {\n\n        if (describeKeyRequest == null) {\n            throw new SdkClientException(\"Invalid argument passed to marshall(...)\");\n        }\n\n        try {\n            final ProtocolRequestMarshaller<DescribeKeyRequest> protocolMarshaller = protocolFactory.createProtocolMarshaller(SDK_OPERATION_BINDING,\n                    describeKeyRequest);\n\n            protocolMarshaller.startMarshalling();\n            DescribeKeyRequestMarshaller.getInstance().marshall(describeKeyRequest, protocolMarshaller);\n            return protocolMarshaller.finishMarshalling();\n        } catch (Exception e) {\n            throw new SdkClientException(\"Unable to marshall request to JSON: \" + e.getMessage(), e);\n        }\n    }\n\n}<fim_middle>// class below has no smell\n"}