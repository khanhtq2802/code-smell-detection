{"text": "<fim_prefix>     *  {@link GroupGrantee#AllUsers} group, anonymous clients can call\n     *  {@link #getObject(String, String)} and\n     *  {@link #getObjectMetadata(String, String)} to pull object content and\n     *  metadata.</li>\n     *  <li>If a bucket has {@link Permission#Write} permission for the\n     *  {@link GroupGrantee#AllUsers} group, anonymous clients can upload objects\n     *  to the bucket.</li>\n     * </ul>\n     * </p>\n     *\n     * @param encryptionMaterials\n     *            The encryption materials to be used to encrypt and decrypt data.\n     * @deprecated use {@link AmazonS3EncryptionClientBuilder#withEncryptionMaterials(EncryptionMaterialsProvider)}\n     */\n    @Deprecated\n    public AmazonS3EncryptionClient(EncryptionMaterials encryptionMaterials) {\n        this(new StaticEncryptionMaterialsProvider(encryptionMaterials));\n    }\n    /**\n     * <p>\n     * Constructs a new Amazon S3 Encryption client that will make <b>anonymous</b>\n     * requests to Amazon S3.  If {@link #getObject(String, String)} is called,\n     * the object contents will be decrypted with the encryption materials provided.\n     * </p>\n     * <p>\n     * Only a subset of the Amazon S3 API will work with anonymous\n     * <i>(i.e. unsigned)</i> requests, but this can prove useful in some situations.\n     * For example:\n     * <ul>\n     *  <li>If an Amazon S3 bucket has {@link Permission#Read} permission for the\n     *  {@link GroupGrantee#AllUsers} group, anonymous clients can call\n     *  {@link #listObjects(String)} to see what objects are stored in a bucket.</li>\n     *  <li>If an object has {@link Permission#Read} permission for the\n     *  {@link GroupGrantee#AllUsers} group, anonymous clients can call\n     *  {@link #getObject(String, String)} and\n     *  {@link #getObjectMetadata(String, String)} to pull object content and\n     *  metadata.</li>\n     *  <li>If a bucket has {@link Permission#Write} permission for the\n     *  {@link GroupGrantee#AllUsers} group, anonymous clients can upload objects\n     *  to the bucket.</li>\n     * </ul>\n     * </p>\n     *\n     * @param encryptionMaterialsProvider\n     *            A provider for the encryption materials to be used to encrypt and decrypt data.\n     * @deprecated use {@link AmazonS3EncryptionClientBuilder#withEncryptionMaterials(EncryptionMaterialsProvider)}\n     */\n    @Deprecated\n    public AmazonS3EncryptionClient(\n            EncryptionMaterialsProvider encryptionMaterialsProvider) {\n        this(new StaticCredentialsProvider(new AnonymousAWSCredentials()),\n                encryptionMaterialsProvider,\n                configFactory.getConfig(), new CryptoConfiguration());\n    }\n    /**\n     * <p>\n     * Constructs a new Amazon S3 Encryption client that will make <b>anonymous</b>\n     * requests to Amazon S3.  If {@link #getObject(String, String)} is called,\n     * the object contents will be decrypted with the encryption materials provided.\n     * The encryption implementation of the provided crypto provider will be\n     * used to encrypt and decrypt data.\n     * </p>\n     * <p>\n     * Only a subset of the Amazon S3 API will work with anonymous\n     * <i>(i.e. unsigned)</i> requests, but this can prove useful in some situations.\n     * For example:\n     * <ul>\n     *  <li>If an Amazon S3 bucket has {@link Permission#Read} permission for the\n     *  {@link GroupGrantee#AllUsers} group, anonymous clients can call\n     *  {@link #listObjects(String)} to see what objects are stored in a bucket.</li>\n     *  <li>If an object has {@link Permission#Read} permission for the\n     *  {@link GroupGrantee#AllUsers} group, anonymous clients can call\n     *  {@link #getObject(String, String)} and\n     *  {@link #getObjectMetadata(String, String)} to pull object content and\n     *  metadata.</li>\n     *  <li>If a bucket has {@link Permission#Write} permission for the\n     *  {@link GroupGrantee#AllUsers} group, anonymous clients can upload objects\n     *  to the bucket.</li>\n     * </ul>\n     * </p>\n     *\n     * @param encryptionMaterials\n     *              The encryption materials to be used to encrypt and decrypt data.\n     * @param cryptoConfig\n     *                The crypto configuration whose parameters will be used to encrypt and decrypt data.\n     * @deprecated use {@link AmazonS3EncryptionClientBuilder#withEncryptionMaterials(EncryptionMaterialsProvider)} and\n     *                 {@link AmazonS3EncryptionClientBuilder#withCryptoConfiguration(CryptoConfiguration)}\n     */\n    @Deprecated\n    public AmazonS3EncryptionClient(EncryptionMaterials encryptionMaterials,\n            CryptoConfiguration cryptoConfig) {\n        this(new StaticEncryptionMaterialsProvider(encryptionMaterials),\n                cryptoConfig);\n    }\n    /**\n     * <p>\n     * Constructs a new Amazon S3 Encryption client that will make <b>anonymous</b>\n     * requests to Amazon S3.  If {@link #getObject(String, String)} is called,\n     * the object contents will be decrypted with the encryption materials provided.\n     * The encryption implementation of the provided crypto provider will be\n     * used to encrypt and decrypt data.\n     * </p>\n     * <p>\n     * Only a subset of the Amazon S3 API will work with anonymous\n     * <i>(i.e. unsigned)</i> requests, but this can prove useful in some situations.\n     * For example:\n     * <ul>\n     *  <li>If an Amazon S3 bucket has {@link Permission#Read} permission for the\n     *  {@link GroupGrantee#AllUsers} group, anonymous clients can call\n     *  {@link #listObjects(String)} to see what objects are stored in a bucket.</li>\n     *  <li>If an object has {@link Permission#Read} permission for the\n     *  {@link GroupGrantee#AllUsers} group, anonymous clients can call\n     *  {@link #getObject(String, String)} and\n     *  {@link #getObjectMetadata(String, String)} to pull object content and\n     *  metadata.</li>\n     *  <li>If a bucket has {@link Permission#Write} permission for the\n     *  {@link GroupGrantee#AllUsers} group, anonymous clients can upload objects\n     *  to the bucket.</li>\n     * </ul>\n     * </p>\n     *\n     * @param encryptionMaterialsProvider\n     *            A provider for the encryption materials to be used to encrypt and decrypt data.\n     * @param cryptoConfig\n     *            The crypto configuration whose parameters will be used to encrypt and decrypt data.\n     * @deprecated use {@link AmazonS3EncryptionClientBuilder#withEncryptionMaterials(EncryptionMaterialsProvider)} and\n     *                 {@link AmazonS3EncryptionClientBuilder#withCryptoConfiguration(CryptoConfiguration)}\n     */\n    @Deprecated\n    public AmazonS3EncryptionClient(\n            EncryptionMaterialsProvider encryptionMaterialsProvider,\n            CryptoConfiguration cryptoConfig) {\n        this(new StaticCredentialsProvider(new AnonymousAWSCredentials()),\n                encryptionMaterialsProvider,\n                configFactory.getConfig(), cryptoConfig);\n    }\n    /**\n     * <p>\n     * Constructs a new Amazon S3 Encryption client using the specified AWS credentials to\n     * access Amazon S3.  Object contents will be encrypted and decrypted with the encryption\n     * materials provided.\n     * </p>\n     *\n     * @param credentials\n     *            The AWS credentials to use when making requests to Amazon S3\n     *            with this client.\n     * @param encryptionMaterials\n     *            The encryption materials to be used to encrypt and decrypt data.\n     * @deprecated use {@link AmazonS3EncryptionClientBuilder#withEncryptionMaterials(EncryptionMaterialsProvider)} and\n     *                 {@link AmazonS3EncryptionClientBuilder#withCredentials(AWSCredentialsProvider)}\n     */\n    @Deprecated\n    public AmazonS3EncryptionClient(AWSCredentials credentials,\n            EncryptionMaterials encryptionMaterials) {\n        this(credentials, new StaticEncryptionMaterialsProvider(\n                encryptionMaterials));\n    }\n    /**\n     * <p>\n     * Constructs a new Amazon S3 Encryption client using the specified AWS credentials to\n     * access Amazon S3.  Object contents will be encrypted and decrypted with the encryption\n     * materials provided.\n     * </p>\n     *\n     * @param credentials\n     *            The AWS credentials to use when making requests to Amazon S3\n     *            with this client.\n     * @param encryptionMaterialsProvider\n     *            A provider for the encryption materials to be used to encrypt and decrypt data.\n     * @deprecated use {@link AmazonS3EncryptionClientBuilder#withEncryptionMaterials(EncryptionMaterialsProvider)} and\n     *                 {@link AmazonS3EncryptionClientBuilder#withCredentials(AWSCredentialsProvider)}\n     */\n<fim_suffix>    @Deprecated\n    public AmazonS3EncryptionClient(AWSCredentials credentials,\n            EncryptionMaterialsProvider encryptionMaterialsProvider) {\n        this(credentials, encryptionMaterialsProvider,\n                configFactory.getConfig(), new CryptoConfiguration());\n    }<fim_middle>// function below has no smell\n"}