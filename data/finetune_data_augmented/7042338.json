{"text": "<fim_prefix>/*\n * Copyright 2015-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\").\n * You may not use this file except in compliance with the License.\n * A copy of the License is located at\n *\n *  http://aws.amazon.com/apache2.0\n *\n * or in the \"license\" file accompanying this file. This file is distributed\n * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n * express or implied. See the License for the specific language governing\n * permissions and limitations under the License.\n */\npackage com.ibm.cloud.objectstorage.services.s3.model.transform;\n\nimport javax.xml.stream.events.XMLEvent;\n\nimport com.ibm.cloud.objectstorage.services.s3.model.Filter;\nimport com.ibm.cloud.objectstorage.transform.StaxUnmarshallerContext;\nimport com.ibm.cloud.objectstorage.transform.Unmarshaller;\n\n<fim_suffix>class FilterStaxUnmarshaller implements Unmarshaller<Filter, StaxUnmarshallerContext> {\n\n    private static FilterStaxUnmarshaller instance = new FilterStaxUnmarshaller();\n\n    public static FilterStaxUnmarshaller getInstance() {\n        return instance;\n    }\n\n    private FilterStaxUnmarshaller() {\n    }\n\n    @Override\n    public Filter unmarshall(StaxUnmarshallerContext context) throws Exception {\n        int originalDepth = context.getCurrentDepth();\n        int targetDepth = originalDepth + 1;\n\n        if (context.isStartOfDocument()) {\n            targetDepth += 1;\n        }\n\n        Filter filter = new Filter();\n\n        while (true) {\n            XMLEvent xmlEvent = context.nextEvent();\n            if (xmlEvent.isEndDocument()) {\n                return filter;\n            }\n\n            if (xmlEvent.isAttribute() || xmlEvent.isStartElement()) {\n                if (context.testExpression(\"S3Key\", targetDepth)) {\n                    filter.withS3KeyFilter(S3KeyFilterStaxUnmarshaller.getInstance().unmarshall(context));\n                }\n            } else if (xmlEvent.isEndElement()) {\n                if (context.getCurrentDepth() < originalDepth) {\n                    return filter;\n                }\n            }\n        }\n    }\n\n}<fim_middle>// class below has no smell\n"}