{"text": "<fim_prefix>      @Override\n      public void write(org.apache.thrift.protocol.TProtocol prot, createLocalUser_result struct) throws org.apache.thrift.TException {\n        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;\n        java.util.BitSet optionals = new java.util.BitSet();\n        if (struct.isSetSec()) {\n          optionals.set(0);\n        }\n        oprot.writeBitSet(optionals, 1);\n        if (struct.isSetSec()) {\n          struct.sec.write(oprot);\n        }\n      }\n      @Override\n      public void read(org.apache.thrift.protocol.TProtocol prot, createLocalUser_result struct) throws org.apache.thrift.TException {\n        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;\n        java.util.BitSet incoming = iprot.readBitSet(1);\n        if (incoming.get(0)) {\n          struct.sec = new ThriftSecurityException();\n          struct.sec.read(iprot);\n          struct.setSecIsSet(true);\n        }\n      }\n    }\n    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {\n      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();\n    }\n  }\n  public static class dropLocalUser_args implements org.apache.thrift.TBase<dropLocalUser_args, dropLocalUser_args._Fields>, java.io.Serializable, Cloneable, Comparable<dropLocalUser_args>   {\n    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct(\"dropLocalUser_args\");\n    private static final org.apache.thrift.protocol.TField TINFO_FIELD_DESC = new org.apache.thrift.protocol.TField(\"tinfo\", org.apache.thrift.protocol.TType.STRUCT, (short)3);\n    private static final org.apache.thrift.protocol.TField CREDENTIALS_FIELD_DESC = new org.apache.thrift.protocol.TField(\"credentials\", org.apache.thrift.protocol.TType.STRUCT, (short)4);\n    private static final org.apache.thrift.protocol.TField PRINCIPAL_FIELD_DESC = new org.apache.thrift.protocol.TField(\"principal\", org.apache.thrift.protocol.TType.STRING, (short)2);\n    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new dropLocalUser_argsStandardSchemeFactory();\n    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new dropLocalUser_argsTupleSchemeFactory();\n    public @org.apache.thrift.annotation.Nullable org.apache.accumulo.core.trace.thrift.TInfo tinfo; // required\n    public @org.apache.thrift.annotation.Nullable org.apache.accumulo.core.securityImpl.thrift.TCredentials credentials; // required\n    public @org.apache.thrift.annotation.Nullable java.lang.String principal; // required\n    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */\n    public enum _Fields implements org.apache.thrift.TFieldIdEnum {\n      TINFO((short)3, \"tinfo\"),\n      CREDENTIALS((short)4, \"credentials\"),\n      PRINCIPAL((short)2, \"principal\");\n      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();\n      static {\n        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {\n          byName.put(field.getFieldName(), field);\n        }\n      }\n      /**\n       * Find the _Fields constant that matches fieldId, or null if its not found.\n       */\n      @org.apache.thrift.annotation.Nullable\n      public static _Fields findByThriftId(int fieldId) {\n        switch(fieldId) {\n          case 3: // TINFO\n            return TINFO;\n          case 4: // CREDENTIALS\n            return CREDENTIALS;\n          case 2: // PRINCIPAL\n            return PRINCIPAL;\n          default:\n            return null;\n        }\n      }\n      /**\n       * Find the _Fields constant that matches fieldId, throwing an exception\n       * if it is not found.\n       */\n      public static _Fields findByThriftIdOrThrow(int fieldId) {\n        _Fields fields = findByThriftId(fieldId);\n        if (fields == null) throw new java.lang.IllegalArgumentException(\"Field \" + fieldId + \" doesn't exist!\");\n        return fields;\n      }\n      /**\n       * Find the _Fields constant that matches name, or null if its not found.\n       */\n      @org.apache.thrift.annotation.Nullable\n      public static _Fields findByName(java.lang.String name) {\n        return byName.get(name);\n      }\n      private final short _thriftId;\n      private final java.lang.String _fieldName;\n      _Fields(short thriftId, java.lang.String fieldName) {\n        _thriftId = thriftId;\n        _fieldName = fieldName;\n      }\n      public short getThriftFieldId() {\n        return _thriftId;\n      }\n      public java.lang.String getFieldName() {\n        return _fieldName;\n      }\n    }\n    // isset id assignments\n    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;\n    static {\n      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);\n      tmpMap.put(_Fields.TINFO, new org.apache.thrift.meta_data.FieldMetaData(\"tinfo\", org.apache.thrift.TFieldRequirementType.DEFAULT, \n          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, org.apache.accumulo.core.trace.thrift.TInfo.class)));\n      tmpMap.put(_Fields.CREDENTIALS, new org.apache.thrift.meta_data.FieldMetaData(\"credentials\", org.apache.thrift.TFieldRequirementType.DEFAULT, \n          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, org.apache.accumulo.core.securityImpl.thrift.TCredentials.class)));\n      tmpMap.put(_Fields.PRINCIPAL, new org.apache.thrift.meta_data.FieldMetaData(\"principal\", org.apache.thrift.TFieldRequirementType.DEFAULT, \n          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));\n      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);\n      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(dropLocalUser_args.class, metaDataMap);\n    }\n    public dropLocalUser_args() {\n    }\n    public dropLocalUser_args(\n      org.apache.accumulo.core.trace.thrift.TInfo tinfo,\n      org.apache.accumulo.core.securityImpl.thrift.TCredentials credentials,\n      java.lang.String principal)\n    {\n      this();\n      this.tinfo = tinfo;\n      this.credentials = credentials;\n      this.principal = principal;\n    }\n    /**\n     * Performs a deep copy on <i>other</i>.\n     */\n    public dropLocalUser_args(dropLocalUser_args other) {\n      if (other.isSetTinfo()) {\n        this.tinfo = new org.apache.accumulo.core.trace.thrift.TInfo(other.tinfo);\n      }\n      if (other.isSetCredentials()) {\n        this.credentials = new org.apache.accumulo.core.securityImpl.thrift.TCredentials(other.credentials);\n      }\n      if (other.isSetPrincipal()) {\n        this.principal = other.principal;\n      }\n    }\n    public dropLocalUser_args deepCopy() {\n      return new dropLocalUser_args(this);\n    }\n    @Override\n    public void clear() {\n      this.tinfo = null;\n      this.credentials = null;\n      this.principal = null;\n    }\n    @org.apache.thrift.annotation.Nullable\n    public org.apache.accumulo.core.trace.thrift.TInfo getTinfo() {\n      return this.tinfo;\n    }\n    public dropLocalUser_args setTinfo(@org.apache.thrift.annotation.Nullable org.apache.accumulo.core.trace.thrift.TInfo tinfo) {\n      this.tinfo = tinfo;\n      return this;\n    }\n<fim_suffix>    public void unsetTinfo() {\n      this.tinfo = null;\n    }<fim_middle>// function below has no smell\n"}