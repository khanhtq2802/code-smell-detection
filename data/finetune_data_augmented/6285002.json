{"text": "<fim_prefix>/*\n *\n *  Copyright (c) 2017 Ot\u00e1vio Santana and others\n *   All rights reserved. This program and the accompanying materials\n *   are made available under the terms of the Eclipse Public License v1.0\n *   and Apache License v2.0 which accompanies this distribution.\n *   The Eclipse Public License is available at http://www.eclipse.org/legal/epl-v10.html\n *   and the Apache License v2.0 is available at http://www.opensource.org/licenses/apache2.0.php.\n *\n *   You may elect to redistribute this code under either of these licenses.\n *\n *   Contributors:\n *\n *   Otavio Santana\n *\n */\npackage org.jnosql.diana.api.column;\n\n\nimport java.util.List;\nimport java.util.Optional;\n\n/**\n * An object that represents a precompiled Query statement.\n */\n<fim_suffix>public interface ColumnPreparedStatement {\n\n\n    /**\n     * Binds an argument to a positional parameter.\n     *\n     * @param name  the parameter name\n     * @param value the parameter value\n     * @return the same query instance\n     * @throws NullPointerException     when there is null parameter\n     */\n    ColumnPreparedStatement bind(String name, Object value);\n\n    /**\n     * Executes a query and return the result as List\n     *\n     * @return The result list, if delete it will return an empty list\n     */\n    List<ColumnEntity> getResultList();\n\n    /**\n     * Returns the result as a single element otherwise it will return an {@link Optional#empty()}\n     *\n     * @return the single result\n     * @throws org.jnosql.diana.api.NonUniqueResultException when the result has more than one entity\n     */\n    Optional<ColumnEntity> getSingleResult();\n\n}<fim_middle>// class below has no smell\n"}