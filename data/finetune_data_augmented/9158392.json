{"text": "<fim_prefix>/*******************************************************************************\n * Copyright (c) 2009 Actuate Corporation.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *  Actuate Corporation  - initial API and implementation\n *******************************************************************************/\n\npackage org.eclipse.birt.report.designer.internal.lib.providers;\n\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.List;\n\nimport org.eclipse.birt.report.designer.internal.lib.editparts.EmptyEditPart;\nimport org.eclipse.birt.report.designer.internal.ui.editors.breadcrumb.providers.DesignerBreadcrumbNodeProvider;\nimport org.eclipse.birt.report.designer.ui.views.INodeProvider;\nimport org.eclipse.birt.report.designer.ui.views.ProviderFactory;\nimport org.eclipse.birt.report.model.api.DesignElementHandle;\nimport org.eclipse.birt.report.model.api.LibraryHandle;\nimport org.eclipse.gef.EditPart;\nimport org.eclipse.swt.graphics.Image;\n\n/**\n * \n */\n\n<fim_suffix>public class LibraryBreadcrumbNodeProvider extends\n\t\tDesignerBreadcrumbNodeProvider\n{\n\n\tpublic boolean validate( Object element )\n\t{\n\t\tif ( getEditPart( element ) == null\n\t\t// || getEditPart( element ) instanceof EmptyEditPart\n\t\t)\n\t\t\treturn false;\n\t\treturn true;\n\t}\n\n\tpublic EditPart getEditPart( Object element )\n\t{\n\t\t// EditPart editPart = super.getEditPart( element );\n\t\t// if ( editPart == null || editPart instanceof EmptyEditPart )\n\t\t// return null;\n\t\treturn super.getEditPart( element );\n\t}\n\n\t@Override\n\tpublic Object[] getChildren( Object element )\n\t{\n\t\tif ( getRealModel( element ) instanceof LibraryHandle )\n\t\t{\n\t\t\treturn ( (LibraryHandle) getRealModel( element ) ).getComponents( )\n\t\t\t\t\t.getContents( )\n\t\t\t\t\t.toArray( );\n\t\t}\n\t\tList children = new ArrayList( );\n\t\tchildren.addAll( Arrays.asList( super.getChildren( element ) ) );\n\t\tfor ( int i = 0; i < children.size( ); i++ )\n\t\t{\n\t\t\tif ( children.get( i ) instanceof EmptyEditPart )\n\t\t\t{\n\t\t\t\tchildren.remove( i );\n\t\t\t\ti--;\n\t\t\t}\n\t\t}\n\t\treturn children.toArray( );\n\t}\n\n\t@Override\n\tpublic String getText( Object element )\n\t{\n\t\tObject object = getRealModel( element );\n\t\tif ( getEditPart( object ) == null )\n\t\t{\n\t\t\tif ( object instanceof DesignElementHandle\n\t\t\t\t\t&& ( (DesignElementHandle) object ).getContainer( ) instanceof LibraryHandle )\n\t\t\t{\n\t\t\t\tINodeProvider provider = ProviderFactory.createProvider( object );\n\t\t\t\tif ( provider == null )\n\t\t\t\t\treturn object.toString( );\n\t\t\t\treturn provider.getNodeDisplayName( object );\n\t\t\t}\n\t\t}\n\t\treturn super.getText( element );\n\t}\n\n\t@Override\n\tpublic Image getImage( Object element )\n\t{\n\t\tObject object = getRealModel( element );\n\t\tif ( getEditPart( object ) == null )\n\t\t{\n\t\t\tif ( object instanceof DesignElementHandle\n\t\t\t\t\t&& ( (DesignElementHandle) object ).getContainer( ) instanceof LibraryHandle )\n\t\t\t{\n\t\t\t\tINodeProvider provider = ProviderFactory.createProvider( object );\n\t\t\t\tif ( provider == null )\n\t\t\t\t\treturn null;\n\t\t\t\treturn provider.getNodeIcon( object );\n\t\t\t}\n\t\t}\n\t\treturn super.getImage( element );\n\t}\n\n\t@Override\n\tpublic String getTooltipText( Object element )\n\t{\n\t\tObject object = getRealModel( element );\n\t\tif ( getEditPart( object ) == null )\n\t\t{\n\t\t\tif ( object instanceof DesignElementHandle\n\t\t\t\t\t&& ( (DesignElementHandle) object ).getContainer( ) instanceof LibraryHandle )\n\t\t\t{\n\t\t\t\tINodeProvider provider = ProviderFactory.createProvider( object );\n\t\t\t\tif ( provider == null )\n\t\t\t\t\treturn object.toString( );\n\t\t\t\treturn provider.getNodeTooltip( object );\n\t\t\t}\n\t\t}\n\t\treturn super.getTooltipText( element );\n\t}\n}<fim_middle>// class below has no smell\n"}