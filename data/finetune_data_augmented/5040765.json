{"text": "<fim_prefix>/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage org.apache.jena.sparql.expr.nodevalue;\n\nimport org.apache.jena.graph.Node ;\nimport org.apache.jena.graph.NodeFactory ;\nimport org.apache.jena.sparql.expr.NodeValue ;\nimport org.apache.jena.sparql.util.FmtUtils ;\n\n\n<fim_suffix>public class NodeValueString extends NodeValue\n{\n    // A plain string, with no language tag, or an xsd:string.\n    \n    private String string ; \n    \n    public NodeValueString(String str)         { string = str ; } \n    public NodeValueString(String str, Node n) { super(n) ; string = str ; }\n    \n    @Override\n    public boolean isString() { return true ; }\n    \n    @Override\n    public String getString() { return string ; }\n\n    @Override\n    public String asString() { return string ; }\n    \n    @Override\n    public String toString()\n    { \n        if ( getNode() != null )\n        {\n            // Can be a plain string or an xsd:string.\n            return FmtUtils.stringForNode(getNode()) ;\n        }\n        return '\"'+string+'\"'  ;\n    }\n    \n    @Override\n    protected Node makeNode()\n    { return NodeFactory.createLiteral(string) ; }\n    \n    @Override\n    public void visit(NodeValueVisitor visitor) { visitor.visit(this) ; }\n}<fim_middle>// class below is data class\n"}