{"text": "<fim_prefix>      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = Boolean.valueOf(isSetTriggerName()).compareTo(other.isSetTriggerName());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetTriggerName()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.triggerName, other.triggerName);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = Boolean.valueOf(isSetTriggerExpression()).compareTo(other.isSetTriggerExpression());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetTriggerExpression()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.triggerExpression, other.triggerExpression);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = Boolean.valueOf(isSetActionExpression()).compareTo(other.isSetActionExpression());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetActionExpression()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.actionExpression, other.actionExpression);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = Boolean.valueOf(isSetIsInUnmanaged()).compareTo(other.isSetIsInUnmanaged());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetIsInUnmanaged()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.isInUnmanaged, other.isInUnmanaged);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = Boolean.valueOf(isSetNs()).compareTo(other.isSetNs());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetNs()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.ns, other.ns);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    return 0;\n  }\n  public _Fields fieldForId(int fieldId) {\n    return _Fields.findByThriftId(fieldId);\n  }\n  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {\n    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);\n  }\n  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {\n    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);\n  }\n  @Override\n  public String toString() {\n    StringBuilder sb = new StringBuilder(\"WMTrigger(\");\n    boolean first = true;\n    sb.append(\"resourcePlanName:\");\n    if (this.resourcePlanName == null) {\n      sb.append(\"null\");\n    } else {\n      sb.append(this.resourcePlanName);\n    }\n    first = false;\n    if (!first) sb.append(\", \");\n    sb.append(\"triggerName:\");\n    if (this.triggerName == null) {\n      sb.append(\"null\");\n    } else {\n      sb.append(this.triggerName);\n    }\n    first = false;\n    if (isSetTriggerExpression()) {\n      if (!first) sb.append(\", \");\n      sb.append(\"triggerExpression:\");\n      if (this.triggerExpression == null) {\n        sb.append(\"null\");\n      } else {\n        sb.append(this.triggerExpression);\n      }\n      first = false;\n    }\n    if (isSetActionExpression()) {\n      if (!first) sb.append(\", \");\n      sb.append(\"actionExpression:\");\n      if (this.actionExpression == null) {\n        sb.append(\"null\");\n      } else {\n        sb.append(this.actionExpression);\n      }\n      first = false;\n    }\n    if (isSetIsInUnmanaged()) {\n      if (!first) sb.append(\", \");\n      sb.append(\"isInUnmanaged:\");\n      sb.append(this.isInUnmanaged);\n      first = false;\n    }\n    if (isSetNs()) {\n      if (!first) sb.append(\", \");\n      sb.append(\"ns:\");\n      if (this.ns == null) {\n        sb.append(\"null\");\n      } else {\n        sb.append(this.ns);\n      }\n      first = false;\n    }\n    sb.append(\")\");\n    return sb.toString();\n  }\n  public void validate() throws org.apache.thrift.TException {\n    // check for required fields\n    if (!isSetResourcePlanName()) {\n      throw new org.apache.thrift.protocol.TProtocolException(\"Required field 'resourcePlanName' is unset! Struct:\" + toString());\n    }\n    if (!isSetTriggerName()) {\n      throw new org.apache.thrift.protocol.TProtocolException(\"Required field 'triggerName' is unset! Struct:\" + toString());\n    }\n    // check for sub-struct validity\n  }\n  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {\n    try {\n      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));\n    } catch (org.apache.thrift.TException te) {\n      throw new java.io.IOException(te);\n    }\n  }\n  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {\n    try {\n      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.\n      __isset_bitfield = 0;\n      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));\n    } catch (org.apache.thrift.TException te) {\n      throw new java.io.IOException(te);\n    }\n  }\n  private static class WMTriggerStandardSchemeFactory implements SchemeFactory {\n    public WMTriggerStandardScheme getScheme() {\n      return new WMTriggerStandardScheme();\n    }\n  }\n  private static class WMTriggerStandardScheme extends StandardScheme<WMTrigger> {\n<fim_suffix>    public void read(org.apache.thrift.protocol.TProtocol iprot, WMTrigger struct) throws org.apache.thrift.TException {\n      org.apache.thrift.protocol.TField schemeField;\n      iprot.readStructBegin();\n      while (true)\n      {\n        schemeField = iprot.readFieldBegin();\n        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { \n          break;\n        }\n        switch (schemeField.id) {\n          case 1: // RESOURCE_PLAN_NAME\n            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {\n              struct.resourcePlanName = iprot.readString();\n              struct.setResourcePlanNameIsSet(true);\n            } else { \n              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);\n            }\n            break;\n          case 2: // TRIGGER_NAME\n            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {\n              struct.triggerName = iprot.readString();\n              struct.setTriggerNameIsSet(true);\n            } else { \n              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);\n            }\n            break;\n          case 3: // TRIGGER_EXPRESSION\n            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {\n              struct.triggerExpression = iprot.readString();\n              struct.setTriggerExpressionIsSet(true);\n            } else { \n              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);\n            }\n            break;\n          case 4: // ACTION_EXPRESSION\n            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {\n              struct.actionExpression = iprot.readString();\n              struct.setActionExpressionIsSet(true);\n            } else { \n              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);\n            }\n            break;\n          case 5: // IS_IN_UNMANAGED\n            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {\n              struct.isInUnmanaged = iprot.readBool();\n              struct.setIsInUnmanagedIsSet(true);\n            } else { \n              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);\n            }\n            break;\n          case 6: // NS\n            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {\n              struct.ns = iprot.readString();\n              struct.setNsIsSet(true);\n            } else { \n              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);\n            }\n            break;\n          default:\n            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);\n        }\n        iprot.readFieldEnd();\n      }\n      iprot.readStructEnd();\n      struct.validate();\n    }<fim_middle>// function below is feature envy and long method\n"}