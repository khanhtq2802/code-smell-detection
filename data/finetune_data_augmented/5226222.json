{"text": "<fim_prefix>  public ODataResponse readEntitySet(final GetEntitySetUriInfo uriParserResultView, final String contentType)\n      throws ODataException {\n    ODataResponse oDataResponse = null;\n    try {\n      oDataJPAContext.setODataContext(getContext());\n      List<Object> jpaEntities = jpaProcessor.process(uriParserResultView);\n      oDataResponse =\n          responseBuilder.build(uriParserResultView, jpaEntities, contentType);\n    } finally {\n      close();\n    }\n    return oDataResponse;\n  }\n  @Override\n  public ODataResponse readEntity(final GetEntityUriInfo uriParserResultView, final String contentType)\n      throws ODataException {\n    ODataResponse oDataResponse = null;\n    try {\n      oDataJPAContext.setODataContext(getContext());\n      Object jpaEntity = jpaProcessor.process(uriParserResultView);\n      oDataResponse =\n          responseBuilder.build(uriParserResultView, jpaEntity, contentType);\n    } finally {\n      close();\n    }\n    return oDataResponse;\n  }\n  @Override\n  public ODataResponse countEntitySet(final GetEntitySetCountUriInfo uriParserResultView, final String contentType)\n      throws ODataException {\n    ODataResponse oDataResponse = null;\n    try {\n      oDataJPAContext.setODataContext(getContext());\n      long jpaEntityCount = jpaProcessor.process(uriParserResultView);\n      oDataResponse = responseBuilder.build(jpaEntityCount);\n    } finally {\n      close();\n    }\n    return oDataResponse;\n  }\n  @Override\n  public ODataResponse existsEntity(final GetEntityCountUriInfo uriInfo, final String contentType)\n      throws ODataException {\n    ODataResponse oDataResponse = null;\n    try {\n      oDataJPAContext.setODataContext(getContext());\n      long jpaEntityCount = jpaProcessor.process(uriInfo);\n      oDataResponse = responseBuilder.build(jpaEntityCount);\n    } finally {\n      close();\n    }\n    return oDataResponse;\n  }\n  @Override\n  public ODataResponse createEntity(final PostUriInfo uriParserResultView, final InputStream content,\n      final String requestContentType, final String contentType) throws ODataException {\n    ODataResponse oDataResponse = null;\n    try {\n      oDataJPAContext.setODataContext(getContext());\n      Object createdJpaEntity = jpaProcessor.process(uriParserResultView, content, requestContentType);\n      oDataResponse =\n          responseBuilder.build(uriParserResultView, createdJpaEntity, contentType);\n    } finally {\n      close();\n    }\n    return oDataResponse;\n  }\n  @Override\n  public ODataResponse updateEntity(final PutMergePatchUriInfo uriParserResultView, final InputStream content,\n      final String requestContentType, final boolean merge, final String contentType) throws ODataException {\n    ODataResponse oDataResponse = null;\n    try {\n      oDataJPAContext.setODataContext(getContext());\n      Object jpaEntity = jpaProcessor.process(uriParserResultView, content, requestContentType);\n      oDataResponse = responseBuilder.build(uriParserResultView, jpaEntity);\n    } finally {\n      close();\n    }\n    return oDataResponse;\n  }\n  @Override\n  public ODataResponse deleteEntity(final DeleteUriInfo uriParserResultView, final String contentType)\n      throws ODataException {\n    ODataResponse oDataResponse = null;\n    try {\n      oDataJPAContext.setODataContext(getContext());\n      Object deletedObj = jpaProcessor.process(uriParserResultView, contentType);\n      oDataResponse = responseBuilder.build(uriParserResultView, deletedObj);\n    } finally {\n      close();\n    }\n    return oDataResponse;\n  }\n  @Override\n  public ODataResponse executeFunctionImport(final GetFunctionImportUriInfo uriParserResultView,\n      final String contentType) throws ODataException {\n    ODataResponse oDataResponse = null;\n    try {\n      oDataJPAContext.setODataContext(getContext());\n      List<Object> resultEntity = jpaProcessor.process(uriParserResultView);\n      oDataResponse =\n          responseBuilder.build(uriParserResultView, resultEntity, contentType);\n    } finally {\n      close();\n    }\n    return oDataResponse;\n  }\n  @Override\n  public ODataResponse executeFunctionImportValue(final GetFunctionImportUriInfo uriParserResultView,\n      final String contentType) throws ODataException {\n    ODataResponse oDataResponse = null;\n    try {\n      oDataJPAContext.setODataContext(getContext());\n      List<Object> result = jpaProcessor.process(uriParserResultView);\n      oDataResponse =\n          responseBuilder.build(uriParserResultView, result.get(0));\n    } finally {\n      close();\n    }\n    return oDataResponse;\n  }\n  @Override\n  public ODataResponse readEntityLink(final GetEntityLinkUriInfo uriParserResultView, final String contentType)\n      throws ODataException {\n    ODataResponse oDataResponse = null;\n    try {\n      oDataJPAContext.setODataContext(getContext());\n      Object jpaEntity = jpaProcessor.process(uriParserResultView);\n      oDataResponse =\n          responseBuilder.build(uriParserResultView, jpaEntity, contentType);\n    } finally {\n      close();\n    }\n    return oDataResponse;\n  }\n  @Override\n  public ODataResponse readEntityLinks(final GetEntitySetLinksUriInfo uriParserResultView, final String contentType)\n      throws ODataException {\n    ODataResponse oDataResponse = null;\n    try {\n      oDataJPAContext.setODataContext(getContext());\n      List<Object> jpaEntity = jpaProcessor.process(uriParserResultView);\n      oDataResponse =\n          responseBuilder.build(uriParserResultView, jpaEntity, contentType);\n    } finally {\n      close();\n    }\n    return oDataResponse;\n  }\n  @Override\n  public ODataResponse createEntityLink(final PostUriInfo uriParserResultView, final InputStream content,\n      final String requestContentType, final String contentType) throws ODataException {\n    try {\n      oDataJPAContext.setODataContext(getContext());\n      jpaProcessor.process(uriParserResultView, content, requestContentType, contentType);\n      return ODataResponse.newBuilder().build();\n    } finally {\n      close();\n    }\n  }\n  @Override\n  public ODataResponse updateEntityLink(final PutMergePatchUriInfo uriParserResultView, final InputStream content,\n      final String requestContentType, final String contentType) throws ODataException {\n    try {\n      oDataJPAContext.setODataContext(getContext());\n      jpaProcessor.process(uriParserResultView, content, requestContentType, contentType);\n      return ODataResponse.newBuilder().build();\n    } finally {\n      close();\n    }\n  }\n  @Override\n  public ODataResponse deleteEntityLink(final DeleteUriInfo uriParserResultView, final String contentType)\n      throws ODataException {\n    try {\n      oDataJPAContext.setODataContext(getContext());\n      jpaProcessor.process(uriParserResultView, contentType);\n      return ODataResponse.newBuilder().build();\n    } finally {\n      close();\n    }\n  }\n  @Override\n  public ODataResponse executeBatch(final BatchHandler handler, final String contentType, final InputStream content)\n      throws ODataException {\n    try {\n      oDataJPAContext.setODataContext(getContext());\n      ODataResponse batchResponse;\n      List<BatchResponsePart> batchResponseParts = new ArrayList<BatchResponsePart>();\n      PathInfo pathInfo = getContext().getPathInfo();\n      EntityProviderBatchProperties batchProperties = EntityProviderBatchProperties.init().pathInfo(pathInfo).build();\n      List<BatchRequestPart> batchParts = EntityProvider.parseBatchRequest(contentType, content, batchProperties);\n      for (BatchRequestPart batchPart : batchParts) {\n        batchResponseParts.add(handler.handleBatchPart(batchPart));\n      }\n      batchResponse = EntityProvider.writeBatchResponse(batchResponseParts);\n      return batchResponse;\n    } finally {\n      close(true);\n    }\n  }\n<fim_suffix>  @Override\n  public BatchResponsePart executeChangeSet(final BatchHandler handler, final List<ODataRequest> requests)\n      throws ODataException {\n    List<ODataResponse> responses = new ArrayList<ODataResponse>();\n    try {\n      oDataJPAContext.getODataJPATransaction().begin();\n      for (ODataRequest request : requests) {\n        oDataJPAContext.setODataContext(getContext());\n        ODataResponse response = handler.handleRequest(request);\n        if (response.getStatus().getStatusCode() >= HttpStatusCodes.BAD_REQUEST.getStatusCode()) {\n          // Rollback\n          oDataJPAContext.getODataJPATransaction().rollback();\n          List<ODataResponse> errorResponses = new ArrayList<ODataResponse>(1);\n          errorResponses.add(response);\n          return BatchResponsePart.responses(errorResponses).changeSet(false).build();\n        }\n        responses.add(response);\n      }\n      oDataJPAContext.getODataJPATransaction().commit();\n      return BatchResponsePart.responses(responses).changeSet(true).build();\n    } catch (Exception e) {\n      throw new ODataException(\"Error on processing request content:\" + e.getMessage(), e);\n    } finally {\n      close(true);\n    }\n  }<fim_middle>// function below is feature envy\n"}