{"text": "<fim_prefix>/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.apache.hadoop.chukwa.inputtools.plugin.metrics;\n\n\nimport java.util.Timer;\nimport java.util.TimerTask;\nimport org.apache.commons.logging.Log;\nimport org.apache.commons.logging.LogFactory;\nimport org.apache.hadoop.chukwa.inputtools.plugin.IPlugin;\nimport org.json.simple.JSONObject;\n\npublic class Exec extends TimerTask {\n  private static Log log = LogFactory.getLog(Exec.class);\n  private String cmde = null;\n  private IPlugin plugin = null;\n\n  public Exec(String[] cmds) {\n    StringBuffer c = new StringBuffer();\n    for (String cmd : cmds) {\n      c.append(cmd);\n      c.append(\" \");\n    }\n    cmde = c.toString();\n    plugin = new ExecHelper(cmds);\n  }\n\n<fim_suffix>  public void run() {\n    try {\n      JSONObject result = plugin.execute();\n      int status = (Integer) result.get(\"status\");\n      if (status < 0) {\n        System.out.println(\"Error\");\n        log.warn(\"[ChukwaError]:\" + Exec.class + \", \"\n            + result.get(\"stderr\"));\n      } else {\n        log.info(result.get(\"stdout\"));\n      }\n    } catch (Exception e) {\n      log.error(\"Exec output unparsable:\" + this.cmde);\n    }\n  }\n\n  public String getCmde() {\n    return cmde;\n  }\n\n  public static void main(String[] args) {\n    int period = 60;\n    try {\n      if (System.getProperty(\"PERIOD\") != null) {\n        period = Integer.parseInt(System.getProperty(\"PERIOD\"));\n      }\n    } catch (NumberFormatException ex) {\n      ex.printStackTrace();\n      System.out\n          .println(\"Usage: java -DPERIOD=nn -DRECORD_TYPE=recordType Exec [cmd]\");\n      System.out.println(\"PERIOD should be numeric format of seconds.\");\n      return;\n    }\n    Timer timer = new Timer();\n    timer.schedule(new Exec(args), 0, period * 1000);\n  }\n}<fim_middle>// function below has no smell\n"}