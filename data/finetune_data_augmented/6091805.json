{"text": "<fim_prefix>/*******************************************************************************\n * Copyright (c) 2016 UT-Battelle, LLC.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *   Robert Smith\n *******************************************************************************/\npackage org.eclipse.eavp.tests.viz.service.javafx.geometry;\n\nimport org.eclipse.eavp.viz.service.javafx.geometry.FXGeometryAttachment;\nimport org.eclipse.eavp.viz.service.javafx.geometry.FXGeometryAttachmentManager;\nimport org.eclipse.january.geometry.Geometry;\nimport org.eclipse.january.geometry.GeometryFactory;\nimport org.eclipse.january.geometry.Sphere;\nimport org.junit.Test;\n\nimport javafx.scene.Group;\n\n/**\n * A class to test the functionality of FXGeometryAttachment.\n * \n * @author Robert Smith\n *\n */\n<fim_suffix>public class FXGeometryAttachmentTester {\n\n\t/**\n\t * Checks that the attachment handles updates correctly.\n\t */\n\t@Test\n\tpublic void checkUpdates() {\n\n\t\t// Create an attachment\n\t\tFXGeometryAttachment attachment = new FXGeometryAttachment(\n\t\t\t\tnew FXGeometryAttachmentManager());\n\n\t\t// Create a sphere shape\n\t\tSphere sphere = GeometryFactory.eINSTANCE.createSphere();\n\t\tsphere.setRadius(1);\n\n\t\tGeometry geometry = GeometryFactory.eINSTANCE.createGeometry();\n\t\tgeometry.addNode(sphere);\n\n\t\t// Set the shape to the attachment\n\t\tattachment.addGeometry(geometry);\n\n\t\t// The attachment's JavaFX node should now contain the shape's JavaFX\n\t\t// representation\n\t\t((Group) attachment.getFxNode().getChildren().get(0)).getChildren()\n\t\t\t\t.contains(attachment.getRender(sphere).getMesh());\n\t}\n}<fim_middle>// class below has no smell\n"}