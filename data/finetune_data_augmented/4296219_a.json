{"text": "<fim_prefix>\n<fim_suffix>public class ConstraintBasePanel extends FormComponentPanel\n{\n    /** Default serialVersionUID */\n    private static final long serialVersionUID = 1L;\n    private static final String CLS_NM = ConstraintPanel.class.getName();\n    private static final Logger log = Logger.getLogger( CLS_NM );\n    protected static final String TIMEOUT = \"timeout\";\n    protected static final String SUNDAY = \"sunday\";\n    protected static final String MONDAY = \"monday\";\n    protected static final String TUESDAY = \"tuesday\";\n    protected static final String WEDNESDAY = \"wednesday\";\n    protected static final String THURSDAY = \"thursday\";\n    protected static final String FRIDAY = \"friday\";\n    protected static final String SATURDAY = \"saturday\";\n    protected static final String BEGIN_TIME = \"beginTime\";\n    protected static final String END_TIME = \"endTime\";\n    protected static final String BEGIN_DATE = \"beginDate\";\n    protected static final String END_DATE = \"endDate\";\n    protected static final String BEGIN_LOCK_DATE = \"beginLockDate\";\n    protected static final String END_LOCK_DATE = \"endLockDate\";\n    protected static final String DAY1 = \"1\";\n    protected static final String DAY2 = \"2\";\n    protected static final String DAY3 = \"3\";\n    protected static final String DAY4 = \"4\";\n    protected static final String DAY5 = \"5\";\n    protected static final String DAY6 = \"6\";\n    protected static final String DAY7 = \"7\";\n    // These are used by this panel component's PropertyModel objects:\n    protected Date beginTime;\n    protected Date beginDate;\n    protected Date endTime;\n    protected Date endDate;\n    protected Date beginLockDate;\n    protected Date endLockDate;\n    // These are the actual Wicket JQuery controls to process the input:\n    protected TimePicker beginTimeTP;\n    protected TimePicker endTimeTP;\n    protected DatePicker beginDateDP;\n    protected DatePicker endDateDP;\n    protected DatePicker beginLockDateDP;\n    protected DatePicker endLockDateDP;\n    // The Wicket checkBoxes are used for constructing a {@link us.uts.fortress.rbac.User#dayMask} entity attribute into model model:\n    protected CheckBox sundayCB;\n    protected CheckBox mondayCB;\n    protected CheckBox tuesdayCB;\n    protected CheckBox wednesdayCB;\n    protected CheckBox thursdayCB;\n    protected CheckBox fridayCB;\n    protected CheckBox saturdayCB;\n    // These are used by CheckBox control to store the dayMask fields until mapped to {@link us.uts.fortress.rbac.User#dayMask} into model object:\n    protected Boolean sunday = false;\n    protected Boolean monday = false;\n    protected Boolean tuesday = false;\n    protected Boolean wednesday = false;\n    protected Boolean thursday = false;\n    protected Boolean friday = false;\n    protected Boolean saturday = false;\n    public ConstraintBasePanel( String id, final IModel constraint )\n    {\n        super( id, constraint );\n        final Spinner<Integer> timeout = new Spinner<>( TIMEOUT );\n        timeout.setRequired( false );\n        add( timeout );\n        // Add the dayMask's day of week CheckBoxes:\n        sundayCB = new CheckBox( SUNDAY, new PropertyModel<Boolean>( this, SUNDAY ) )\n        {\n            /** Default serialVersionUID */\n            private static final long serialVersionUID = 1L;\n            @Override\n            protected void onBeforeRender()\n            {\n                if ( this.getParent().getDefaultModelObject() != null )\n                {\n                    super.onBeforeRender();\n                    Constraint constraint = ( Constraint ) this.getParent().getDefaultModelObject();\n                    setSunday( isDayOfWeek( constraint, DAY1 ) );\n                }\n            }\n        };\n        add( sundayCB );\n        mondayCB = new CheckBox( \"monday\", new PropertyModel<Boolean>( this, MONDAY ) )\n        {\n            /** Default serialVersionUID */\n            private static final long serialVersionUID = 1L;\n            @Override\n            protected void onBeforeRender()\n            {\n                if ( this.getParent().getDefaultModelObject() != null )\n                {\n                    super.onBeforeRender();\n                    Constraint constraint = ( Constraint ) this.getParent().getDefaultModelObject();\n                    setMonday( isDayOfWeek( constraint, DAY2 ) );\n                }\n            }\n        };\n        add( mondayCB );\n        tuesdayCB = new CheckBox( TUESDAY, new PropertyModel<Boolean>( this, TUESDAY ) )\n        {\n            /** Default serialVersionUID */\n            private static final long serialVersionUID = 1L;\n            @Override\n            protected void onBeforeRender()\n            {\n                if ( this.getParent().getDefaultModelObject() != null )\n                {\n                    super.onBeforeRender();\n                    Constraint constraint = ( Constraint ) this.getParent().getDefaultModelObject();\n                    setTuesday( isDayOfWeek( constraint, DAY3 ) );\n                }\n            }\n        };\n        add( tuesdayCB );\n        wednesdayCB = new CheckBox( WEDNESDAY, new PropertyModel<Boolean>( this, WEDNESDAY ) )\n        {\n            /** Default serialVersionUID */\n            private static final long serialVersionUID = 1L;\n            @Override\n            protected void onBeforeRender()\n            {\n                if ( this.getParent().getDefaultModelObject() != null )\n                {\n                    super.onBeforeRender();\n                    Constraint constraint = ( Constraint ) this.getParent().getDefaultModelObject();\n                    setWednesday( isDayOfWeek( constraint, DAY4 ) );\n                }\n            }\n        };\n        add( wednesdayCB );\n        thursdayCB = new CheckBox( THURSDAY, new PropertyModel<Boolean>( this, THURSDAY ) )\n        {\n            /** Default serialVersionUID */\n            private static final long serialVersionUID = 1L;\n            @Override\n            protected void onBeforeRender()\n            {\n                if ( this.getParent().getDefaultModelObject() != null )\n                {\n                    super.onBeforeRender();\n                    Constraint constraint = ( Constraint ) this.getParent().getDefaultModelObject();\n                    setThursday( isDayOfWeek( constraint, DAY5 ) );\n                }\n            }\n        };\n        add( thursdayCB );\n        fridayCB = new CheckBox( FRIDAY, new PropertyModel<Boolean>( this, FRIDAY ) )\n        {\n            /** Default serialVersionUID */\n            private static final long serialVersionUID = 1L;\n            @Override\n            protected void onBeforeRender()\n            {\n                if ( this.getParent().getDefaultModelObject() != null )\n                {\n                    super.onBeforeRender();\n                    Constraint constraint = ( Constraint ) this.getParent().getDefaultModelObject();\n                    setFriday( isDayOfWeek( constraint, DAY6 ) );\n                }\n            }\n        };\n        add( fridayCB );\n        saturdayCB = new CheckBox( SATURDAY, new PropertyModel<Boolean>( this, SATURDAY ) )\n        {\n            /** Default serialVersionUID */\n            private static final long serialVersionUID = 1L;\n            @Override\n            protected void onBeforeRender()\n            {\n                if ( this.getParent().getDefaultModelObject() != null )\n                {\n                    super.onBeforeRender();\n                    Constraint constraint = ( Constraint ) this.getParent().getDefaultModelObject();\n                    setSaturday( isDayOfWeek( constraint, DAY7 ) );\n                }\n            }\n        };\n        add( saturdayCB );\n    }\n    /**\n     * This method is used to convert from the panel component model to the domain model:\n     */\n    @Override\n    public void convertInput()\n    {\n        Constraint constraint = ( Constraint ) getDefaultModelObject();\n        if ( constraint != null )\n        {\n            constraint.setBeginTime( convertTime( beginTimeTP ) );\n            constraint.setEndTime( convertTime( endTimeTP ) );\n            constraint.setBeginDate( convertDate( beginDateDP ) );\n            constraint.setEndDate( convertDate( endDateDP ) );\n            constraint.setBeginLockDate( convertDate( beginLockDateDP ) );\n            constraint.setEndLockDate( convertDate( endLockDateDP ) );\n            setSunday( sundayCB.getConvertedInput() );\n            setMonday( mondayCB.getConvertedInput() );\n            setTuesday( tuesdayCB.getConvertedInput() );\n            setWednesday( wednesdayCB.getConvertedInput() );\n            setThursday( thursdayCB.getConvertedInput() );\n            setFriday( fridayCB.getConvertedInput() );\n            setSaturday( saturdayCB.getConvertedInput() );\n            String szDayMask = \"\";\n            if ( sunday )\n                szDayMask += DAY1;\n            if ( monday )\n                szDayMask += DAY2;\n            if ( tuesday )\n                szDayMask += DAY3;\n            if ( wednesday )\n                szDayMask += DAY4;\n            if ( thursday )\n                szDayMask += DAY5;\n            if ( friday )\n                szDayMask += DAY6;\n            if ( saturday )\n                szDayMask += DAY7;\n            constraint.setDayMask( szDayMask );\n            setConvertedInput( constraint );\n        }\n        else\n        {\n            log.warn( \"constraint was null\" );\n        }\n    }\n    protected boolean isDayOfWeek( Constraint constraint, String szDay )\n    {\n        boolean isSet = false;\n        if ( constraint != null && constraint.getDayMask() != null\n            && ( constraint.getDayMask().contains( szDay ) || constraint.getDayMask().equals( \"all\" ) ) )\n        {\n            isSet = true;\n        }\n        return isSet;\n    }\n    protected String convertTime( TimePicker time )<fim_middle>// class below is blob and data class\n"}