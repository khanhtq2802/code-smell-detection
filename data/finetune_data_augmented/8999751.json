{"text": "<fim_prefix>                    new Among ( \"endo\", -1, 1, \"\", methodObject ),\n                    new Among ( \"Yamo\", -1, 1, \"\", methodObject ),\n                    new Among ( \"iamo\", -1, 1, \"\", methodObject ),\n                    new Among ( \"avamo\", -1, 1, \"\", methodObject ),\n                    new Among ( \"evamo\", -1, 1, \"\", methodObject ),\n                    new Among ( \"ivamo\", -1, 1, \"\", methodObject ),\n                    new Among ( \"eremo\", -1, 1, \"\", methodObject ),\n                    new Among ( \"iremo\", -1, 1, \"\", methodObject ),\n                    new Among ( \"assimo\", -1, 1, \"\", methodObject ),\n                    new Among ( \"ammo\", -1, 1, \"\", methodObject ),\n                    new Among ( \"emmo\", -1, 1, \"\", methodObject ),\n                    new Among ( \"eremmo\", 54, 1, \"\", methodObject ),\n                    new Among ( \"iremmo\", 54, 1, \"\", methodObject ),\n                    new Among ( \"immo\", -1, 1, \"\", methodObject ),\n                    new Among ( \"ano\", -1, 1, \"\", methodObject ),\n                    new Among ( \"iscano\", 58, 1, \"\", methodObject ),\n                    new Among ( \"avano\", 58, 1, \"\", methodObject ),\n                    new Among ( \"evano\", 58, 1, \"\", methodObject ),\n                    new Among ( \"ivano\", 58, 1, \"\", methodObject ),\n                    new Among ( \"eranno\", -1, 1, \"\", methodObject ),\n                    new Among ( \"iranno\", -1, 1, \"\", methodObject ),\n                    new Among ( \"ono\", -1, 1, \"\", methodObject ),\n                    new Among ( \"iscono\", 65, 1, \"\", methodObject ),\n                    new Among ( \"arono\", 65, 1, \"\", methodObject ),\n                    new Among ( \"erono\", 65, 1, \"\", methodObject ),\n                    new Among ( \"irono\", 65, 1, \"\", methodObject ),\n                    new Among ( \"erebbero\", -1, 1, \"\", methodObject ),\n                    new Among ( \"irebbero\", -1, 1, \"\", methodObject ),\n                    new Among ( \"assero\", -1, 1, \"\", methodObject ),\n                    new Among ( \"essero\", -1, 1, \"\", methodObject ),\n                    new Among ( \"issero\", -1, 1, \"\", methodObject ),\n                    new Among ( \"ato\", -1, 1, \"\", methodObject ),\n                    new Among ( \"ito\", -1, 1, \"\", methodObject ),\n                    new Among ( \"uto\", -1, 1, \"\", methodObject ),\n                    new Among ( \"avo\", -1, 1, \"\", methodObject ),\n                    new Among ( \"evo\", -1, 1, \"\", methodObject ),\n                    new Among ( \"ivo\", -1, 1, \"\", methodObject ),\n                    new Among ( \"ar\", -1, 1, \"\", methodObject ),\n                    new Among ( \"ir\", -1, 1, \"\", methodObject ),\n                    new Among ( \"er\\u00E0\", -1, 1, \"\", methodObject ),\n                    new Among ( \"ir\\u00E0\", -1, 1, \"\", methodObject ),\n                    new Among ( \"er\\u00F2\", -1, 1, \"\", methodObject ),\n                    new Among ( \"ir\\u00F2\", -1, 1, \"\", methodObject )\n                };\n                private static final char g_v[] = {17, 65, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 128, 8, 2, 1 };\n                private static final char g_AEIO[] = {17, 65, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 128, 8, 2 };\n                private static final char g_CG[] = {17 };\n        private int I_p2;\n        private int I_p1;\n        private int I_pV;\n                private void copy_from(ItalianStemmer other) {\n                    I_p2 = other.I_p2;\n                    I_p1 = other.I_p1;\n                    I_pV = other.I_pV;\n                    super.copy_from(other);\n                }\n<fim_suffix>                private boolean r_prelude() {\n            int among_var;\n            int v_1;\n            int v_2;\n            int v_3;\n            int v_4;\n            int v_5;\n                    // (, line 34\n                    // test, line 35\n                    v_1 = cursor;\n                    // repeat, line 35\n                    replab0: while(true)\n                    {\n                        v_2 = cursor;\n                        lab1: do {\n                            // (, line 35\n                            // [, line 36\n                            bra = cursor;\n                            // substring, line 36\n                            among_var = find_among(a_0, 7);\n                            if (among_var == 0)\n                            {\n                                break lab1;\n                            }\n                            // ], line 36\n                            ket = cursor;\n                            switch(among_var) {\n                                case 0:\n                                    break lab1;\n                                case 1:\n                                    // (, line 37\n                                    // <-, line 37\n                                    slice_from(\"\\u00E0\");\n                                    break;\n                                case 2:\n                                    // (, line 38\n                                    // <-, line 38\n                                    slice_from(\"\\u00E8\");\n                                    break;\n                                case 3:\n                                    // (, line 39\n                                    // <-, line 39\n                                    slice_from(\"\\u00EC\");\n                                    break;\n                                case 4:\n                                    // (, line 40\n                                    // <-, line 40\n                                    slice_from(\"\\u00F2\");\n                                    break;\n                                case 5:\n                                    // (, line 41\n                                    // <-, line 41\n                                    slice_from(\"\\u00F9\");\n                                    break;\n                                case 6:\n                                    // (, line 42\n                                    // <-, line 42\n                                    slice_from(\"qU\");\n                                    break;\n                                case 7:\n                                    // (, line 43\n                                    // next, line 43\n                                    if (cursor >= limit)\n                                    {\n                                        break lab1;\n                                    }\n                                    cursor++;\n                                    break;\n                            }\n                            continue replab0;\n                        } while (false);\n                        cursor = v_2;\n                        break replab0;\n                    }\n                    cursor = v_1;\n                    // repeat, line 46\n                    replab2: while(true)\n                    {\n                        v_3 = cursor;\n                        lab3: do {\n                            // goto, line 46\n                            golab4: while(true)\n                            {\n                                v_4 = cursor;\n                                lab5: do {\n                                    // (, line 46\n                                    if (!(in_grouping(g_v, 97, 249)))\n                                    {\n                                        break lab5;\n                                    }\n                                    // [, line 47\n                                    bra = cursor;\n                                    // or, line 47\n                                    lab6: do {\n                                        v_5 = cursor;\n                                        lab7: do {\n                                            // (, line 47\n                                            // literal, line 47\n                                            if (!(eq_s(1, \"u\")))\n                                            {\n                                                break lab7;\n                                            }\n                                            // ], line 47\n                                            ket = cursor;\n                                            if (!(in_grouping(g_v, 97, 249)))\n                                            {\n                                                break lab7;\n                                            }\n                                            // <-, line 47\n                                            slice_from(\"U\");\n                                            break lab6;\n                                        } while (false);\n                                        cursor = v_5;\n                                        // (, line 48\n                                        // literal, line 48\n                                        if (!(eq_s(1, \"i\")))\n                                        {\n                                            break lab5;\n                                        }\n                                        // ], line 48\n                                        ket = cursor;\n                                        if (!(in_grouping(g_v, 97, 249)))\n                                        {\n                                            break lab5;\n                                        }\n                                        // <-, line 48\n                                        slice_from(\"I\");\n                                    } while (false);\n                                    cursor = v_4;\n                                    break golab4;\n                                } while (false);\n                                cursor = v_4;\n                                if (cursor >= limit)\n                                {\n                                    break lab3;\n                                }\n                                cursor++;\n                            }\n                            continue replab2;\n                        } while (false);\n                        cursor = v_3;\n                        break replab2;\n                    }\n                    return true;\n                }<fim_middle>// function below is long method\n"}