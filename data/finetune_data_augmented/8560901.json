{"text": "<fim_prefix>      if (lastComparison != 0) {\n        return lastComparison;\n      }\n      if (isSetTableName()) {\n        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.tableName, other.tableName);\n        if (lastComparison != 0) {\n          return lastComparison;\n        }\n      }\n      lastComparison = java.lang.Boolean.valueOf(isSetRow()).compareTo(other.isSetRow());\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n      if (isSetRow()) {\n        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.row, other.row);\n        if (lastComparison != 0) {\n          return lastComparison;\n        }\n      }\n      lastComparison = java.lang.Boolean.valueOf(isSetTimestamp()).compareTo(other.isSetTimestamp());\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n      if (isSetTimestamp()) {\n        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.timestamp, other.timestamp);\n        if (lastComparison != 0) {\n          return lastComparison;\n        }\n      }\n      lastComparison = java.lang.Boolean.valueOf(isSetAttributes()).compareTo(other.isSetAttributes());\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n      if (isSetAttributes()) {\n        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.attributes, other.attributes);\n        if (lastComparison != 0) {\n          return lastComparison;\n        }\n      }\n      return 0;\n    }\n    @org.apache.thrift.annotation.Nullable\n    public _Fields fieldForId(int fieldId) {\n      return _Fields.findByThriftId(fieldId);\n    }\n    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {\n      scheme(iprot).read(iprot, this);\n    }\n    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {\n      scheme(oprot).write(oprot, this);\n    }\n    @Override\n    public java.lang.String toString() {\n      java.lang.StringBuilder sb = new java.lang.StringBuilder(\"getRowTs_args(\");\n      boolean first = true;\n      sb.append(\"tableName:\");\n      if (this.tableName == null) {\n        sb.append(\"null\");\n      } else {\n        org.apache.thrift.TBaseHelper.toString(this.tableName, sb);\n      }\n      first = false;\n      if (!first) sb.append(\", \");\n      sb.append(\"row:\");\n      if (this.row == null) {\n        sb.append(\"null\");\n      } else {\n        org.apache.thrift.TBaseHelper.toString(this.row, sb);\n      }\n      first = false;\n      if (!first) sb.append(\", \");\n      sb.append(\"timestamp:\");\n      sb.append(this.timestamp);\n      first = false;\n      if (!first) sb.append(\", \");\n      sb.append(\"attributes:\");\n      if (this.attributes == null) {\n        sb.append(\"null\");\n      } else {\n        sb.append(this.attributes);\n      }\n      first = false;\n      sb.append(\")\");\n      return sb.toString();\n    }\n    public void validate() throws org.apache.thrift.TException {\n      // check for required fields\n      // check for sub-struct validity\n    }\n    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {\n      try {\n        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));\n      } catch (org.apache.thrift.TException te) {\n        throw new java.io.IOException(te);\n      }\n    }\n    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {\n      try {\n        // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.\n        __isset_bitfield = 0;\n        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));\n      } catch (org.apache.thrift.TException te) {\n        throw new java.io.IOException(te);\n      }\n    }\n    private static class getRowTs_argsStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {\n      public getRowTs_argsStandardScheme getScheme() {\n        return new getRowTs_argsStandardScheme();\n      }\n    }\n<fim_suffix>    private static class getRowTs_argsStandardScheme extends org.apache.thrift.scheme.StandardScheme<getRowTs_args> {\n      public void read(org.apache.thrift.protocol.TProtocol iprot, getRowTs_args struct) throws org.apache.thrift.TException {\n        org.apache.thrift.protocol.TField schemeField;\n        iprot.readStructBegin();\n        while (true)\n        {\n          schemeField = iprot.readFieldBegin();\n          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { \n            break;\n          }\n          switch (schemeField.id) {\n            case 1: // TABLE_NAME\n              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {\n                struct.tableName = iprot.readBinary();\n                struct.setTableNameIsSet(true);\n              } else { \n                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);\n              }\n              break;\n            case 2: // ROW\n              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {\n                struct.row = iprot.readBinary();\n                struct.setRowIsSet(true);\n              } else { \n                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);\n              }\n              break;\n            case 3: // TIMESTAMP\n              if (schemeField.type == org.apache.thrift.protocol.TType.I64) {\n                struct.timestamp = iprot.readI64();\n                struct.setTimestampIsSet(true);\n              } else { \n                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);\n              }\n              break;\n            case 4: // ATTRIBUTES\n              if (schemeField.type == org.apache.thrift.protocol.TType.MAP) {\n                {\n                  org.apache.thrift.protocol.TMap _map182 = iprot.readMapBegin();\n                  struct.attributes = new java.util.HashMap<java.nio.ByteBuffer,java.nio.ByteBuffer>(2*_map182.size);\n                  @org.apache.thrift.annotation.Nullable java.nio.ByteBuffer _key183;\n                  @org.apache.thrift.annotation.Nullable java.nio.ByteBuffer _val184;\n                  for (int _i185 = 0; _i185 < _map182.size; ++_i185)\n                  {\n                    _key183 = iprot.readBinary();\n                    _val184 = iprot.readBinary();\n                    struct.attributes.put(_key183, _val184);\n                  }\n                  iprot.readMapEnd();\n                }\n                struct.setAttributesIsSet(true);\n              } else { \n                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);\n              }\n              break;\n            default:\n              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);\n          }\n          iprot.readFieldEnd();\n        }\n        iprot.readStructEnd();\n        // check for required fields of primitive type, which can't be checked in the validate method\n        struct.validate();\n      }\n      public void write(org.apache.thrift.protocol.TProtocol oprot, getRowTs_args struct) throws org.apache.thrift.TException {\n        struct.validate();\n        oprot.writeStructBegin(STRUCT_DESC);\n        if (struct.tableName != null) {\n          oprot.writeFieldBegin(TABLE_NAME_FIELD_DESC);\n          oprot.writeBinary(struct.tableName);\n          oprot.writeFieldEnd();\n        }\n        if (struct.row != null) {\n          oprot.writeFieldBegin(ROW_FIELD_DESC);\n          oprot.writeBinary(struct.row);\n          oprot.writeFieldEnd();\n        }\n        oprot.writeFieldBegin(TIMESTAMP_FIELD_DESC);\n        oprot.writeI64(struct.timestamp);\n        oprot.writeFieldEnd();\n        if (struct.attributes != null) {\n          oprot.writeFieldBegin(ATTRIBUTES_FIELD_DESC);\n          {\n            oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.STRING, struct.attributes.size()));\n            for (java.util.Map.Entry<java.nio.ByteBuffer, java.nio.ByteBuffer> _iter186 : struct.attributes.entrySet())\n            {\n              oprot.writeBinary(_iter186.getKey());\n              oprot.writeBinary(_iter186.getValue());\n            }\n            oprot.writeMapEnd();\n          }\n          oprot.writeFieldEnd();\n        }\n        oprot.writeFieldStop();\n        oprot.writeStructEnd();\n      }\n    }<fim_middle>// class below has no smell\n"}