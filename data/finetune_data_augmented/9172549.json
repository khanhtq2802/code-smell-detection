{"text": "<fim_prefix>/*******************************************************************************\n * Copyright (c) 2008 Actuate Corporation.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *  Actuate Corporation  - initial API and implementation\n *******************************************************************************/\npackage org.eclipse.birt.report.model.api.filterExtension;\nimport org.eclipse.birt.report.model.api.elements.DesignChoiceConstants;\nimport org.eclipse.birt.report.model.api.filterExtension.interfaces.IBirtFilterOperatorConstants;\nimport org.eclipse.birt.report.model.api.filterExtension.interfaces.IFilterExprDefinition;\nimport org.eclipse.birt.report.model.api.metadata.IChoice;\nimport org.eclipse.birt.report.model.api.metadata.IChoiceSet;\nimport org.eclipse.birt.report.model.metadata.MetaDataDictionary;\nimport com.ibm.icu.util.ULocale;\n/**\n * FilterExprDefinition\n */\npublic class FilterExprDefinition implements IFilterExprDefinition\n{\n\tprotected static final int UNDEFINED = -1;\n\t/**\n\t * Filter operator defined by BIRT.\n\t */\n\tprotected String birtFilterExprId = null;\n\t/**\n\t * BIRT predefined filter expression operator display name.\n\t */\n\tprotected String birtFilterDisplayName = null;\n\t/**\n\t * The min number of arguments that this filter operator required.\n\t */\n\tprotected int minArgs = UNDEFINED;\n\t/**\n\t * The max number of arguments that this filter operator required.\n\t */\n\tprotected int maxArgs = UNDEFINED;\n\t/**\n\t * Indicates if this filter operator expression support unlimited max number\n\t * of arguments.\n\t */\n\tprotected boolean supportUnboundedMaxArgs = false;\n\tpublic FilterExprDefinition( )\n\t{\n\t}\n\t/**\n\t * Constructor for FilterExprDefinition by BIRT predefined filter expression\n\t * operator id. The instance returned is not mapped to any external ODA\n\t * extension filter.\n\t * \n\t * @param birtFilterExpr\n\t *            BIRT predefined filter expression operator Id.\n\t */\n\tpublic FilterExprDefinition( String birtFilterExpr )\n\t\t\tthrows IllegalArgumentException\n\t{\n\t\tbirtFilterExprId = birtFilterExpr;\n\t\tinitBirtExpr( birtFilterExpr.toLowerCase( ).hashCode( ) );\n\t}\n\t/*\n\t * (non-Javadoc)\n\t * \n\t * @seeorg.eclipse.birt.report.model.api.filterExtension.interfaces.\n\t * IFilterExprDefinition#expressionSupportedType()\n\t */\n\tpublic int expressionSupportedType( )\n\t{\n\t\treturn BIRT_SUPPORT_ONLY;\n\t}\n\t/*\n\t * (non-Javadoc)\n\t * \n\t * @seeorg.eclipse.birt.report.model.api.filterExtension.interfaces.\n\t * IFilterExprDefinition#getBirtFilterExprId()\n\t */\n\tpublic String getBirtFilterExprId( )\n\t{\n\t\treturn birtFilterExprId;\n\t}\n\t/*\n\t * (non-Javadoc)\n\t * \n\t * @seeorg.eclipse.birt.report.model.api.filterExtension.interfaces.\n\t * IFilterExprDefinition#getBirtFilterExprDisplayName()\n\t */\n<fim_suffix>\tpublic String getBirtFilterExprDisplayName( )\n\t{\n\t\treturn birtFilterDisplayName;\n\t}\n\t/*\n\t * (non-Javadoc)\n\t * \n\t * @seeorg.eclipse.birt.report.model.api.filterExtension.interfaces.\n\t * IFilterExprDefinition#getExtFilterDisplayName()\n\t */\n\tpublic String getExtFilterDisplayName( )\n\t{\n\t\treturn null;\n\t}\n\t/*\n\t * (non-Javadoc)\n\t * \n\t * @seeorg.eclipse.birt.report.model.api.filterExtension.interfaces.\n\t * IFilterExprDefinition#getExtFilterExprId()\n\t */\n\tpublic String getExtFilterExprId( )\n\t{\n\t\treturn null;\n\t}\n\t/*\n\t * (non-Javadoc)\n\t * \n\t * @seeorg.eclipse.birt.report.model.api.filterExtension.interfaces.\n\t * IFilterExprDefinition#getMaxArguments()\n\t */\n\tpublic Integer getMaxArguments( )\n\t{\n\t\tif ( maxArgs == UNDEFINED )\n\t\t\treturn null;\n\t\treturn Integer.valueOf( maxArgs );\n\t}\n\t/*\n\t * (non-Javadoc)\n\t * \n\t * @seeorg.eclipse.birt.report.model.api.filterExtension.interfaces.\n\t * IFilterExprDefinition#getMinArguments()\n\t */\n\tpublic Integer getMinArguments( )\n\t{\n\t\tif ( minArgs == UNDEFINED )\n\t\t\treturn null;\n\t\treturn Integer.valueOf( minArgs );\n\t}\n\t/*\n\t * (non-Javadoc)\n\t * \n\t * @seeorg.eclipse.birt.report.model.api.filterExtension.interfaces.\n\t * IFilterExprDefinition#getProviderExtensionId()\n\t */\n\tpublic String getProviderExtensionId( )\n\t{\n\t\treturn null;\n\t}\n\t/*\n\t * (non-Javadoc)\n\t * \n\t * @seeorg.eclipse.birt.report.model.api.filterExtension.interfaces.\n\t * IFilterExprDefinition#supportsUnboundedMaxArguments()\n\t */\n\tpublic boolean supportsUnboundedMaxArguments( )\n\t{\n\t\treturn supportUnboundedMaxArgs;\n\t}\n\tprotected void initBirtExpr( int birtOperator )\n\t{\n\t\tif ( IBirtFilterOperatorConstants.FILTER_OPERATOR_BETWEEN == birtOperator )\n\t\t{\n\t\t\tbirtFilterExprId = DesignChoiceConstants.FILTER_OPERATOR_BETWEEN;\n\t\t\tmaxArgs = 2;\n\t\t\tminArgs = 2;\n\t\t\tsupportUnboundedMaxArgs = false;\n\t\t}\n\t\telse if ( IBirtFilterOperatorConstants.FILTER_OPERATOR_BOTTOM_N == birtOperator )\n\t\t{\n\t\t\tbirtFilterExprId = DesignChoiceConstants.FILTER_OPERATOR_BOTTOM_N;\n\t\t\tmaxArgs = 1;\n\t\t\tminArgs = 1;\n\t\t\tsupportUnboundedMaxArgs = false;\n\t\t}\n\t\telse if ( IBirtFilterOperatorConstants.FILTER_OPERATOR_BOTTOM_PERCENT == birtOperator )\n\t\t{\n\t\t\tbirtFilterExprId = DesignChoiceConstants.FILTER_OPERATOR_BOTTOM_PERCENT;\n\t\t\tmaxArgs = 1;\n\t\t\tminArgs = 1;\n\t\t\tsupportUnboundedMaxArgs = false;\n\t\t}\n\t\telse if ( IBirtFilterOperatorConstants.FILTER_OPERATOR_EQ == birtOperator )\n\t\t{\n\t\t\tbirtFilterExprId = DesignChoiceConstants.FILTER_OPERATOR_EQ;\n\t\t\tmaxArgs = 1;\n\t\t\tminArgs = 1;\n\t\t\tsupportUnboundedMaxArgs = false;\n\t\t}\n\t\telse if ( IBirtFilterOperatorConstants.FILTER_OPERATOR_FALSE == birtOperator )\n\t\t{\n\t\t\tbirtFilterExprId = DesignChoiceConstants.FILTER_OPERATOR_FALSE;\n\t\t\tmaxArgs = 0;\n\t\t\tminArgs = 0;\n\t\t\tsupportUnboundedMaxArgs = false;\n\t\t}\n\t\telse if ( IBirtFilterOperatorConstants.FILTER_OPERATOR_GE == birtOperator )\n\t\t{\n\t\t\tbirtFilterExprId = DesignChoiceConstants.FILTER_OPERATOR_GE;\n\t\t\tmaxArgs = 1;\n\t\t\tminArgs = 1;\n\t\t\tsupportUnboundedMaxArgs = false;\n\t\t}\n\t\telse if ( IBirtFilterOperatorConstants.FILTER_OPERATOR_GT == birtOperator )\n\t\t{\n\t\t\tbirtFilterExprId = DesignChoiceConstants.FILTER_OPERATOR_GT;\n\t\t\tmaxArgs = 1;\n\t\t\tminArgs = 1;\n\t\t\tsupportUnboundedMaxArgs = false;\n\t\t}\n\t\telse if ( IBirtFilterOperatorConstants.FILTER_OPERATOR_LE == birtOperator )\n\t\t{\n\t\t\tbirtFilterExprId = DesignChoiceConstants.FILTER_OPERATOR_LE;\n\t\t\tmaxArgs = 1;\n\t\t\tminArgs = 1;\n\t\t\tsupportUnboundedMaxArgs = false;\n\t\t}\n\t\telse if ( IBirtFilterOperatorConstants.FILTER_OPERATOR_LIKE == birtOperator )\n\t\t{\n\t\t\tbirtFilterExprId = DesignChoiceConstants.FILTER_OPERATOR_LIKE;\n\t\t\tmaxArgs = 1;\n\t\t\tminArgs = 1;\n\t\t\tsupportUnboundedMaxArgs = false;\n\t\t}\n\t\telse if ( IBirtFilterOperatorConstants.FILTER_OPERATOR_LT == birtOperator )\n\t\t{\n\t\t\tbirtFilterExprId = DesignChoiceConstants.FILTER_OPERATOR_LT;\n\t\t\tmaxArgs = 1;\n\t\t\tminArgs = 1;\n\t\t\tsupportUnboundedMaxArgs = false;\n\t\t}\n\t\telse if ( IBirtFilterOperatorConstants.FILTER_OPERATOR_NE == birtOperator )\n\t\t{<fim_middle>// function below has no smell\n"}