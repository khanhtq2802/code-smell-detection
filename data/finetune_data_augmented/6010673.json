{"text": "<fim_prefix>import org.cloudfoundry.reactor.client.v2.users.ReactorUsers;\nimport org.cloudfoundry.reactor.client.v3.applications.ReactorApplicationsV3;\nimport org.cloudfoundry.reactor.client.v3.builds.ReactorBuilds;\nimport org.cloudfoundry.reactor.client.v3.deployments.ReactorDeploymentsV3;\nimport org.cloudfoundry.reactor.client.v3.droplets.ReactorDroplets;\nimport org.cloudfoundry.reactor.client.v3.isolationsegments.ReactorIsolationSegments;\nimport org.cloudfoundry.reactor.client.v3.jobs.ReactorJobsV3;\nimport org.cloudfoundry.reactor.client.v3.organizations.ReactorOrganizationsV3;\nimport org.cloudfoundry.reactor.client.v3.packages.ReactorPackages;\nimport org.cloudfoundry.reactor.client.v3.processes.ReactorProcesses;\nimport org.cloudfoundry.reactor.client.v3.servicebindings.ReactorServiceBindingsV3;\nimport org.cloudfoundry.reactor.client.v3.serviceinstances.ReactorServiceInstancesV3;\nimport org.cloudfoundry.reactor.client.v3.spaces.ReactorSpacesV3;\nimport org.cloudfoundry.reactor.client.v3.tasks.ReactorTasks;\nimport org.immutables.value.Value;\nimport reactor.core.publisher.Mono;\nimport javax.annotation.PostConstruct;\n/**\n * The Reactor-based implementation of {@link CloudFoundryClient}\n */\n@Value.Immutable\nabstract class _ReactorCloudFoundryClient implements CloudFoundryClient {\n    @Override\n    @Value.Derived\n    public ApplicationUsageEvents applicationUsageEvents() {\n        return new ReactorApplicationUsageEvents(getConnectionContext(), getRootV2(), getTokenProvider());\n    }\n    @Override\n    @Value.Derived\n    public ApplicationsV2 applicationsV2() {\n        return new ReactorApplicationsV2(getConnectionContext(), getRootV2(), getTokenProvider());\n    }\n    @Override\n    @Value.Derived\n    public ApplicationsV3 applicationsV3() {\n        return new ReactorApplicationsV3(getConnectionContext(), getRootV3(), getTokenProvider());\n    }\n    @Override\n    @Value.Derived\n    public Blobstores blobstores() {\n        return new ReactorBlobstores(getConnectionContext(), getRootV2(), getTokenProvider());\n    }\n    @Override\n    @Value.Derived\n    public Buildpacks buildpacks() {\n        return new ReactorBuildpacks(getConnectionContext(), getRootV2(), getTokenProvider());\n    }\n    @Override\n    @Value.Derived\n    public Builds builds() {\n        return new ReactorBuilds(getConnectionContext(), getRootV3(), getTokenProvider());\n    }\n    @PostConstruct\n    public void checkCompatibility() {\n        new CloudFoundryClientCompatibilityChecker(info()).check();\n    }\n    @Override\n    @Value.Derived\n    public DeploymentsV3 deploymentsV3() {\n        return new ReactorDeploymentsV3(getConnectionContext(), getRootV3(), getTokenProvider());\n    }\n    @Override\n    @Value.Derived\n    public Domains domains() {\n        return new ReactorDomains(getConnectionContext(), getRootV2(), getTokenProvider());\n    }\n    @Override\n    @Value.Derived\n    public Droplets droplets() {\n        return new ReactorDroplets(getConnectionContext(), getRootV3(), getTokenProvider());\n    }\n    @Override\n    @Value.Derived\n    public EnvironmentVariableGroups environmentVariableGroups() {\n        return new ReactorEnvironmentVariableGroups(getConnectionContext(), getRootV2(), getTokenProvider());\n    }\n    @Override\n    @Value.Derived\n    public Events events() {\n        return new ReactorEvents(getConnectionContext(), getRootV2(), getTokenProvider());\n    }\n    @Override\n    @Value.Derived\n    public FeatureFlags featureFlags() {\n        return new ReactorFeatureFlags(getConnectionContext(), getRootV2(), getTokenProvider());\n    }\n    @Override\n    @Value.Derived\n    public Info info() {\n        return new ReactorInfo(getConnectionContext(), getRootV2(), getTokenProvider());\n    }\n    @Override\n    @Value.Derived\n    public IsolationSegments isolationSegments() {\n        return new ReactorIsolationSegments(getConnectionContext(), getRootV3(), getTokenProvider());\n    }\n    @Override\n    @Value.Derived\n    public Jobs jobs() {\n        return new ReactorJobs(getConnectionContext(), getRootV2(), getTokenProvider());\n    }\n    @Override\n    @Value.Derived\n    public JobsV3 jobsV3() {\n        return new ReactorJobsV3(getConnectionContext(), getRootV3(), getTokenProvider());\n    }\n    @Override\n    @Value.Derived\n    public OrganizationQuotaDefinitions organizationQuotaDefinitions() {\n        return new ReactorOrganizationQuotaDefinitions(getConnectionContext(), getRootV2(), getTokenProvider());\n    }\n    @Override\n    @Value.Derived\n    public Organizations organizations() {\n        return new ReactorOrganizations(getConnectionContext(), getRootV2(), getTokenProvider());\n    }\n    @Override\n    @Value.Derived\n    public OrganizationsV3 organizationsV3() {\n        return new ReactorOrganizationsV3(getConnectionContext(), getRootV3(), getTokenProvider());\n    }\n    @Override\n    @Value.Derived\n    public Packages packages() {\n        return new ReactorPackages(getConnectionContext(), getRootV3(), getTokenProvider());\n    }\n    @Override\n    @Value.Derived\n    public PrivateDomains privateDomains() {\n        return new ReactorPrivateDomains(getConnectionContext(), getRootV2(), getTokenProvider());\n    }\n    @Override\n    @Value.Derived\n    public Processes processes() {\n        return new ReactorProcesses(getConnectionContext(), getRootV3(), getTokenProvider());\n    }\n    @Override\n    @Value.Derived\n    public ResourceMatch resourceMatch() {\n        return new ReactorResourceMatch(getConnectionContext(), getRootV2(), getTokenProvider());\n    }\n    @Override\n    @Value.Derived\n    public RouteMappings routeMappings() {\n        return new ReactorRouteMappings(getConnectionContext(), getRootV2(), getTokenProvider());\n    }\n    @Override\n    @Value.Derived\n    public Routes routes() {\n        return new ReactorRoutes(getConnectionContext(), getRootV2(), getTokenProvider());\n    }\n    @Override\n    @Value.Derived\n    public SecurityGroups securityGroups() {\n        return new ReactorSecurityGroups(getConnectionContext(), getRootV2(), getTokenProvider());\n    }\n    @Override\n    @Value.Derived\n    public ServiceBindingsV2 serviceBindingsV2() {\n        return new ReactorServiceBindingsV2(getConnectionContext(), getRootV2(), getTokenProvider());\n    }\n    @Override\n    @Value.Derived\n    public ServiceBindingsV3 serviceBindingsV3() {\n        return new ReactorServiceBindingsV3(getConnectionContext(), getRootV3(), getTokenProvider());\n    }\n    @Override\n    @Value.Derived\n    public ServiceBrokers serviceBrokers() {\n        return new ReactorServiceBrokers(getConnectionContext(), getRootV2(), getTokenProvider());\n    }\n    @Override\n    @Value.Derived\n    public ServiceInstances serviceInstances() {\n        return new ReactorServiceInstances(getConnectionContext(), getRootV2(), getTokenProvider());\n    }\n    @Override\n    @Value.Derived\n    public ServiceInstancesV3 serviceInstancesV3() {\n        return new ReactorServiceInstancesV3(getConnectionContext(), getRootV3(), getTokenProvider());\n    }\n    @Override\n    @Value.Derived\n    public ServiceKeys serviceKeys() {\n        return new ReactorServiceKeys(getConnectionContext(), getRootV2(), getTokenProvider());\n    }\n    @Override\n    @Value.Derived\n    public ServicePlanVisibilities servicePlanVisibilities() {\n        return new ReactorServicePlanVisibilities(getConnectionContext(), getRootV2(), getTokenProvider());\n    }\n    @Override\n    @Value.Derived\n    public ServicePlans servicePlans() {\n        return new ReactorServicePlans(getConnectionContext(), getRootV2(), getTokenProvider());\n    }\n    @Override\n    @Value.Derived\n    public ServiceUsageEvents serviceUsageEvents() {\n        return new ReactorServiceUsageEvents(getConnectionContext(), getRootV2(), getTokenProvider());\n    }\n    @Override\n    @Value.Derived\n    public Services services() {\n        return new ReactorServices(getConnectionContext(), getRootV2(), getTokenProvider());\n    }\n    @Override\n    @Value.Derived\n    public SharedDomains sharedDomains() {\n        return new ReactorSharedDomains(getConnectionContext(), getRootV2(), getTokenProvider());\n    }\n    @Override\n    @Value.Derived\n    public SpaceQuotaDefinitions spaceQuotaDefinitions() {\n        return new ReactorSpaceQuotaDefinitions(getConnectionContext(), getRootV2(), getTokenProvider());\n    }\n    @Override\n    @Value.Derived\n    public Spaces spaces() {\n        return new ReactorSpaces(getConnectionContext(), getRootV2(), getTokenProvider());\n    }\n    @Override\n    @Value.Derived\n    public SpacesV3 spacesV3() {\n        return new ReactorSpacesV3(getConnectionContext(), getRootV3(), getTokenProvider());\n    }\n<fim_suffix>    @Override\n    @Value.Derived\n    public Stacks stacks() {\n        return new ReactorStacks(getConnectionContext(), getRootV2(), getTokenProvider());\n    }<fim_middle>// function below has no smell\n"}