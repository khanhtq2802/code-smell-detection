{"text": "<fim_prefix>package org.apache.maven.scm.provider.git.jgit.command.info;\n\n/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n\nimport java.io.File;\nimport java.util.Collections;\n\nimport org.apache.maven.scm.CommandParameters;\nimport org.apache.maven.scm.ScmException;\nimport org.apache.maven.scm.ScmFileSet;\nimport org.apache.maven.scm.ScmResult;\nimport org.apache.maven.scm.command.AbstractCommand;\nimport org.apache.maven.scm.command.info.InfoItem;\nimport org.apache.maven.scm.command.info.InfoScmResult;\nimport org.apache.maven.scm.provider.ScmProviderRepository;\nimport org.apache.maven.scm.provider.git.command.GitCommand;\nimport org.apache.maven.scm.provider.git.jgit.command.JGitUtils;\nimport org.codehaus.plexus.util.StringUtils;\nimport org.eclipse.jgit.api.Git;\nimport org.eclipse.jgit.lib.ObjectId;\n\n/**\n * @since 1.9.5\n */\n<fim_suffix>public class JGitInfoCommand\n    extends AbstractCommand\n    implements GitCommand\n{\n    @Override\n    protected ScmResult executeCommand( ScmProviderRepository repository, ScmFileSet fileSet,\n                                        CommandParameters parameters )\n        throws ScmException\n    {\n        Git git = null;\n        try\n        {\n            File basedir = fileSet.getBasedir();\n\n            git = Git.open( basedir );\n\n            ObjectId objectId = git.getRepository().resolve( \"HEAD\" );\n\n            InfoItem infoItem = new InfoItem();\n            infoItem.setRevision( StringUtils.trim( objectId.name() ) );\n            infoItem.setURL( basedir.toPath().toUri().toASCIIString() );\n\n            return new InfoScmResult( Collections.singletonList( infoItem ),\n                                      new ScmResult( \"JGit.resolve(HEAD)\", \"\", objectId.toString(), true ) );\n        }\n        catch ( Exception e )\n        {\n            throw new ScmException( \"JGit resolve failure!\", e );\n        }\n        finally\n        {\n            JGitUtils.closeRepo( git );\n        }\n    }\n}<fim_middle>// class below has no smell\n"}