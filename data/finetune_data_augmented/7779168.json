{"text": "<fim_prefix>/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\npackage org.apache.druid.segment.serde;\n\nimport com.google.common.base.Supplier;\nimport org.apache.druid.collections.bitmap.ImmutableBitmap;\nimport org.apache.druid.segment.column.DoublesColumn;\nimport org.apache.druid.segment.column.NumericColumn;\nimport org.apache.druid.segment.data.ColumnarDoubles;\n\n<fim_suffix>public class DoubleNumericColumnSupplier implements Supplier<NumericColumn>\n{\n  private final Supplier<ColumnarDoubles> column;\n  private final ImmutableBitmap nullValueBitmap;\n\n  DoubleNumericColumnSupplier(Supplier<ColumnarDoubles> column, ImmutableBitmap nullValueBitmap)\n  {\n    this.column = column;\n    this.nullValueBitmap = nullValueBitmap;\n  }\n\n  @Override\n  public NumericColumn get()\n  {\n    return DoublesColumn.create(column.get(), nullValueBitmap);\n  }\n}<fim_middle>// class below has no smell\n"}