{"text": "<fim_prefix>/*\n * Copyright (c) 2019 the Eclipse Milo Authors\n *\n * This program and the accompanying materials are made\n * available under the terms of the Eclipse Public License 2.0\n * which is available at https://www.eclipse.org/legal/epl-2.0/\n *\n * SPDX-License-Identifier: EPL-2.0\n */\n\npackage org.eclipse.milo.opcua.sdk.server.model.nodes.objects;\n\nimport java.util.Optional;\n\nimport org.eclipse.milo.opcua.sdk.core.Reference;\nimport org.eclipse.milo.opcua.sdk.server.api.nodes.VariableNode;\nimport org.eclipse.milo.opcua.sdk.server.model.nodes.variables.PropertyNode;\nimport org.eclipse.milo.opcua.sdk.server.model.nodes.variables.TwoStateVariableNode;\nimport org.eclipse.milo.opcua.sdk.server.model.types.objects.DialogConditionType;\nimport org.eclipse.milo.opcua.sdk.server.nodes.UaMethodNode;\nimport org.eclipse.milo.opcua.sdk.server.nodes.UaNode;\nimport org.eclipse.milo.opcua.sdk.server.nodes.UaNodeContext;\nimport org.eclipse.milo.opcua.stack.core.types.builtin.DataValue;\nimport org.eclipse.milo.opcua.stack.core.types.builtin.LocalizedText;\nimport org.eclipse.milo.opcua.stack.core.types.builtin.NodeId;\nimport org.eclipse.milo.opcua.stack.core.types.builtin.QualifiedName;\nimport org.eclipse.milo.opcua.stack.core.types.builtin.Variant;\nimport org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UByte;\nimport org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger;\n\npublic class DialogConditionNode extends ConditionNode implements DialogConditionType {\n    public DialogConditionNode(UaNodeContext context, NodeId nodeId, QualifiedName browseName,\n                               LocalizedText displayName, LocalizedText description, UInteger writeMask,\n                               UInteger userWriteMask) {\n        super(context, nodeId, browseName, displayName, description, writeMask, userWriteMask);\n    }\n\n    public DialogConditionNode(UaNodeContext context, NodeId nodeId, QualifiedName browseName,\n                               LocalizedText displayName, LocalizedText description, UInteger writeMask,\n                               UInteger userWriteMask, UByte eventNotifier) {\n        super(context, nodeId, browseName, displayName, description, writeMask, userWriteMask, eventNotifier);\n    }\n\n    @Override\n    public PropertyNode getLastResponseNode() {\n        Optional<VariableNode> propertyNode = getPropertyNode(DialogConditionType.LAST_RESPONSE);\n        return (PropertyNode) propertyNode.orElse(null);\n    }\n\n    @Override\n    public Integer getLastResponse() {\n        Optional<Integer> propertyValue = getProperty(DialogConditionType.LAST_RESPONSE);\n        return propertyValue.orElse(null);\n    }\n\n    @Override\n    public void setLastResponse(Integer value) {\n        setProperty(DialogConditionType.LAST_RESPONSE, value);\n    }\n\n    @Override\n    public PropertyNode getCancelResponseNode() {\n        Optional<VariableNode> propertyNode = getPropertyNode(DialogConditionType.CANCEL_RESPONSE);\n        return (PropertyNode) propertyNode.orElse(null);\n    }\n\n    @Override\n    public Integer getCancelResponse() {\n        Optional<Integer> propertyValue = getProperty(DialogConditionType.CANCEL_RESPONSE);\n        return propertyValue.orElse(null);\n    }\n\n    @Override\n    public void setCancelResponse(Integer value) {\n        setProperty(DialogConditionType.CANCEL_RESPONSE, value);\n    }\n\n    @Override\n    public PropertyNode getPromptNode() {\n        Optional<VariableNode> propertyNode = getPropertyNode(DialogConditionType.PROMPT);\n        return (PropertyNode) propertyNode.orElse(null);\n    }\n\n    @Override\n    public LocalizedText getPrompt() {\n        Optional<LocalizedText> propertyValue = getProperty(DialogConditionType.PROMPT);\n        return propertyValue.orElse(null);\n    }\n\n    @Override\n    public void setPrompt(LocalizedText value) {\n        setProperty(DialogConditionType.PROMPT, value);\n    }\n\n    @Override\n    public PropertyNode getOkResponseNode() {\n        Optional<VariableNode> propertyNode = getPropertyNode(DialogConditionType.OK_RESPONSE);\n        return (PropertyNode) propertyNode.orElse(null);\n    }\n\n<fim_suffix>    @Override\n    public Integer getOkResponse() {\n        Optional<Integer> propertyValue = getProperty(DialogConditionType.OK_RESPONSE);\n        return propertyValue.orElse(null);\n    }\n\n    @Override\n    public void setOkResponse(Integer value) {\n        setProperty(DialogConditionType.OK_RESPONSE, value);\n    }\n\n    @Override\n    public PropertyNode getResponseOptionSetNode() {\n        Optional<VariableNode> propertyNode = getPropertyNode(DialogConditionType.RESPONSE_OPTION_SET);\n        return (PropertyNode) propertyNode.orElse(null);\n    }\n\n    @Override\n    public LocalizedText[] getResponseOptionSet() {\n        Optional<LocalizedText[]> propertyValue = getProperty(DialogConditionType.RESPONSE_OPTION_SET);\n        return propertyValue.orElse(null);\n    }\n\n    @Override\n    public void setResponseOptionSet(LocalizedText[] value) {\n        setProperty(DialogConditionType.RESPONSE_OPTION_SET, value);\n    }\n\n    @Override\n    public PropertyNode getDefaultResponseNode() {\n        Optional<VariableNode> propertyNode = getPropertyNode(DialogConditionType.DEFAULT_RESPONSE);\n        return (PropertyNode) propertyNode.orElse(null);\n    }\n\n    @Override\n    public Integer getDefaultResponse() {\n        Optional<Integer> propertyValue = getProperty(DialogConditionType.DEFAULT_RESPONSE);\n        return propertyValue.orElse(null);\n    }\n\n    @Override\n    public void setDefaultResponse(Integer value) {\n        setProperty(DialogConditionType.DEFAULT_RESPONSE, value);\n    }\n\n    @Override\n    public UaMethodNode getRespondMethodNode() {\n        Optional<UaNode> methodNode = findNode(\"http://opcfoundation.org/UA/\", \"Respond\", node -> node instanceof UaMethodNode, Reference.HAS_COMPONENT_PREDICATE);\n        return (UaMethodNode) methodNode.orElse(null);\n    }\n\n    @Override\n    public TwoStateVariableNode getEnabledStateNode() {\n        Optional<VariableNode> component = getVariableComponent(\"http://opcfoundation.org/UA/\", \"EnabledState\");\n        return (TwoStateVariableNode) component.orElse(null);\n    }\n\n    @Override\n    public LocalizedText getEnabledState() {\n        Optional<VariableNode> component = getVariableComponent(\"EnabledState\");\n        return component.map(node -> (LocalizedText) node.getValue().getValue().getValue()).orElse(null);\n    }\n\n    @Override\n    public void setEnabledState(LocalizedText value) {\n        getVariableComponent(\"EnabledState\").ifPresent(n -> n.setValue(new DataValue(new Variant(value))));\n    }\n\n    @Override\n    public TwoStateVariableNode getDialogStateNode() {\n        Optional<VariableNode> component = getVariableComponent(\"http://opcfoundation.org/UA/\", \"DialogState\");\n        return (TwoStateVariableNode) component.orElse(null);\n    }\n\n    @Override\n    public LocalizedText getDialogState() {\n        Optional<VariableNode> component = getVariableComponent(\"DialogState\");\n        return component.map(node -> (LocalizedText) node.getValue().getValue().getValue()).orElse(null);\n    }\n\n    @Override\n    public void setDialogState(LocalizedText value) {\n        getVariableComponent(\"DialogState\").ifPresent(n -> n.setValue(new DataValue(new Variant(value))));\n    }\n}<fim_middle>// function below has no smell\n"}