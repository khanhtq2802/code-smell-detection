{"text": "<fim_prefix>/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\npackage org.apache.flume.sink.hbase;\n\nimport java.util.List;\n\nimport org.apache.flume.Event;\nimport org.apache.flume.conf.Configurable;\nimport org.apache.flume.conf.ConfigurableComponent;\nimport org.apache.hadoop.hbase.client.Increment;\nimport org.apache.hadoop.hbase.client.Row;\n\n/**\n * Interface for an event serializer which serializes the headers and body\n * of an event to write them to hbase. This is configurable, so any config\n * params required should be taken through this. Only the column family is\n * passed in. The columns should exist in the table and column family\n * specified in the configuration for the HbaseSink.\n */\n<fim_suffix>public interface HbaseEventSerializer extends Configurable, ConfigurableComponent {\n  /**\n   * Initialize the event serializer.\n   * @param event Event to be written to HBase\n   * @param columnFamily Column family to write to\n   */\n  public void initialize(Event event, byte[] columnFamily);\n\n  /**\n   * Get the actions that should be written out to hbase as a result of this\n   * event. This list is written to hbase using the HBase batch API.\n   * @return List of {@link org.apache.hadoop.hbase.client.Row} which\n   * are written as such to HBase.\n   *\n   * 0.92 increments do not implement Row, so this is not generic.\n   *\n   */\n  public List<Row> getActions();\n\n  public List<Increment> getIncrements();\n\n  /*\n   * Clean up any state. This will be called when the sink is being stopped.\n   */\n  public void close();\n}<fim_middle>// class below has no smell\n"}