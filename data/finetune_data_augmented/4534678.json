{"text": "<fim_prefix>/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements. See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership. The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\npackage org.apache.fineract.infrastructure.bulkimport.populator;\n\nimport org.apache.fineract.infrastructure.bulkimport.constants.TemplatePopulateImportConstants;\nimport org.apache.fineract.portfolio.client.data.ClientData;\nimport org.apache.fineract.portfolio.savings.data.SavingsAccountData;\nimport org.apache.fineract.template.domain.Template;\nimport org.apache.poi.ss.usermodel.Row;\nimport org.apache.poi.ss.usermodel.Sheet;\nimport org.apache.poi.ss.usermodel.Workbook;\n\nimport java.util.List;\nimport java.util.Map;\n\n<fim_suffix>public class SavingsAccountSheetPopulator extends AbstractWorkbookPopulator {\n\n   private List<SavingsAccountData> savingsAccountDataList;\n   private Map<ClientData,List<SavingsAccountData>> clientToSavingsMap;\n\n   private static final int SAVINGS_ACCOUNT_ID_COL=0;\n   private static final int SAVING_ACCOUNT_NO=1;\n   private static final int CURRENCY_COL=2;\n   private static final int CLIENT_NAME=3;\n\n\n    public SavingsAccountSheetPopulator(List<SavingsAccountData> savingsAccountDataList) {\n        this.savingsAccountDataList=savingsAccountDataList;\n    }\n\n    @Override\n    public void populate(Workbook workbook,String dateFormat) {\n        Sheet savingsSheet=workbook.createSheet(TemplatePopulateImportConstants.SAVINGS_ACCOUNTS_SHEET_NAME);\n        setLayout(savingsSheet);\n        populateSavingsSheet(savingsSheet);\n        savingsSheet.protectSheet(\"\");\n    }\n\n    private void populateSavingsSheet(Sheet savingsSheet) {\n        int rowIndex=1;\n        for (SavingsAccountData savings: savingsAccountDataList) {\n            Row row=savingsSheet.createRow(rowIndex++);\n            writeLong(SAVINGS_ACCOUNT_ID_COL,row,savings.id());\n            writeString(SAVING_ACCOUNT_NO,row,savings.getAccountNo());\n            writeString(CURRENCY_COL,row,savings.currency().code());\n            writeString(CLIENT_NAME,row,savings.getClientName());\n        }\n    }\n\n\n    private void setLayout(Sheet savingsSheet) {\n        Row rowHeader = savingsSheet.createRow(TemplatePopulateImportConstants.ROWHEADER_INDEX);\n        rowHeader.setHeight(TemplatePopulateImportConstants.ROW_HEADER_HEIGHT);\n\n        savingsSheet.setColumnWidth(SAVINGS_ACCOUNT_ID_COL,TemplatePopulateImportConstants.MEDIUM_COL_SIZE);\n        writeString(SAVINGS_ACCOUNT_ID_COL,rowHeader,\"Savings Account Id\");\n\n        savingsSheet.setColumnWidth(SAVING_ACCOUNT_NO,TemplatePopulateImportConstants.MEDIUM_COL_SIZE);\n        writeString(SAVING_ACCOUNT_NO,rowHeader,\"Savings Account No\");\n\n        savingsSheet.setColumnWidth(CURRENCY_COL,TemplatePopulateImportConstants.SMALL_COL_SIZE);\n        writeString(CURRENCY_COL,rowHeader,\"Currency Code\");\n\n        savingsSheet.setColumnWidth(CLIENT_NAME,TemplatePopulateImportConstants.SMALL_COL_SIZE);\n        writeString(CLIENT_NAME,rowHeader,\"Client Name\");\n\n    }\n}<fim_middle>// class below has no smell\n"}