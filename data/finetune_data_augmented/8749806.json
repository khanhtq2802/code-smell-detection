{"text": "<fim_prefix>/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage org.apache.hadoop.mapred;\n\nimport java.io.IOException;\n\nimport org.apache.hadoop.classification.InterfaceAudience;\nimport org.apache.hadoop.classification.InterfaceStability;\n\nimport org.apache.hadoop.mapred.Task.TaskReporter;\n\n@InterfaceAudience.LimitedPrivate({\"MapReduce\"})\n@InterfaceStability.Unstable\npublic interface MapOutputCollector<K, V> {\n  public void init(Context context\n                  ) throws IOException, ClassNotFoundException;\n  public void collect(K key, V value, int partition\n                     ) throws IOException, InterruptedException;\n  public void close() throws IOException, InterruptedException;\n    \n  public void flush() throws IOException, InterruptedException, \n                             ClassNotFoundException;\n\n<fim_suffix>  @InterfaceAudience.LimitedPrivate({\"MapReduce\"})\n  @InterfaceStability.Unstable\n  public static class Context {\n    private final MapTask mapTask;\n    private final JobConf jobConf;\n    private final TaskReporter reporter;\n\n    public Context(MapTask mapTask, JobConf jobConf, TaskReporter reporter) {\n      this.mapTask = mapTask;\n      this.jobConf = jobConf;\n      this.reporter = reporter;\n    }\n\n    public MapTask getMapTask() {\n      return mapTask;\n    }\n\n    public JobConf getJobConf() {\n      return jobConf;\n    }\n\n    public TaskReporter getReporter() {\n      return reporter;\n    }\n  }\n}<fim_middle>// class below is data class\n"}