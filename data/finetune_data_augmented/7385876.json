{"text": "<fim_prefix>/*\n * Copyright 2012-2019 the original author or authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.springframework.data.couchbase.repository.join;\n\nimport org.junit.Before;\nimport org.junit.Test;\nimport org.junit.runner.RunWith;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.data.couchbase.ContainerResourceRunner;\nimport org.springframework.data.couchbase.IntegrationTestApplicationConfig;\nimport org.springframework.data.couchbase.repository.config.RepositoryOperationsMapping;\nimport org.springframework.data.couchbase.repository.support.CouchbaseRepositoryFactory;\nimport org.springframework.data.couchbase.repository.support.IndexManager;\nimport org.springframework.data.repository.core.support.RepositoryFactorySupport;\nimport org.springframework.test.context.ContextConfiguration;\nimport org.springframework.test.context.TestExecutionListeners;\n\nimport static org.junit.Assert.*;\n\n/**\n * N1ql Join tests\n *\n * @author Subhashni Balakrishnan\n * @author Tayeb Chlyah\n */\n@RunWith(ContainerResourceRunner.class)\n@ContextConfiguration(classes = IntegrationTestApplicationConfig.class)\n@TestExecutionListeners(listeners = {AuthorAndBookPopulatorListener.class})\npublic class N1qlJoinTests {\n\n    @Autowired\n    private RepositoryOperationsMapping operationsMapping;\n\n    @Autowired\n    private IndexManager indexManager;\n\n    private BookRepository bookRepository;\n\n    private AuthorRepository authorRepository;\n\n    private AddressRepository addressRepository;\n\n<fim_suffix>    @Before\n    public void setup() throws Exception {\n        RepositoryFactorySupport factory = new CouchbaseRepositoryFactory(operationsMapping, indexManager);\n        bookRepository = factory.getRepository(BookRepository.class);\n        authorRepository = factory.getRepository(AuthorRepository.class);\n        addressRepository = factory.getRepository(AddressRepository.class);\n    }\n\n    @Test\n    public void testN1qlJoin() {\n        Author a = authorRepository.findById(\"Author\" + 1).get();\n        assertTrue(a.books.size() == 5);\n        for(Book b:a.books) {\n            assertEquals(\"Book Join on author name mismatch\", a.name, b.authorName);\n        }\n        assertNotNull(a.address);\n        assertEquals(\"Address Join on author name mismatch\", a.name, a.address.name);\n    }\n\n    @Test\n    public void testN1qlJoinWithNoResults() {\n        final String name = \"testN1qlJoinWithNoResults\";\n        Author a = new Author(name, name);\n        authorRepository.save(a);\n\n        Author saveda = authorRepository.findById(name).get();\n        assertTrue(saveda.books.isEmpty());\n        assertNull(saveda.address);\n    }\n}<fim_middle>// function below has no smell\n"}