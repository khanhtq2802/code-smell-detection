{"text": "<fim_prefix>    return ext == null ? null : ext.getValue();\n  }\n  /**\n   * Set the version of the photo this item is about.\n   *\n   * @param version the version of the photo.\n   */\n  public void setVersion(Long version) {\n    if (version != null) {\n      setExtension(new GphotoVersion(version));\n    } else {\n      removeExtension(GphotoVersion.class);\n    }\n  }\n  /**\n   * @return the gphoto:position of the photo.\n   */\n  public Float getPosition() {\n    GphotoPosition ext = getExtension(GphotoPosition.class);\n    return ext == null ? null : ext.getValue();\n  }\n  /**\n   * Set the position of the photo this item is about.  This is the photo's\n   * position in the album it is in (in the context of the feed).\n   *\n   * @param position the position of the photo in the album.\n   */\n  public void setPosition(Float position) {\n    if (position != null) {\n      setExtension(new GphotoPosition(position));\n    } else {\n      removeExtension(GphotoPosition.class);\n    }\n  }\n  /**\n   * @return the gphoto:albumId of the photo.\n   */\n  public String getAlbumId() {\n    return getSimpleValue(GphotoAlbumId.class);\n  }\n  /**\n   * Sets the album the photo is in.\n   */\n  public void setAlbumId(String albumId) {\n    if (albumId != null) {\n      setExtension(new GphotoAlbumId(albumId));\n    } else {\n      removeExtension(GphotoAlbumId.class);\n    }\n  }\n  /**\n   * Sets the album the photo is in.\n   */\n  public void setAlbumId(Long albumId) {\n    if (albumId != null) {\n      setExtension(new GphotoAlbumId(albumId.toString()));\n    } else {\n      removeExtension(GphotoAlbumId.class);\n    }\n  }\n  /**\n   * @return the access of the album that contains this photo.\n   */\n  public String getAlbumAccess() {\n    GphotoAccess access = getExtension(GphotoAccess.class);\n    return access == null ? null : access.getValue().toLowerCase();\n  }\n  /**\n   * Set the access for the album that contains this photo.\n   *\n   * @param access the access of the album.\n   */\n  public void setAlbumAccess(String access) {\n    if (access != null) {\n      setExtension(new GphotoAccess(access));\n    } else {\n      removeExtension(GphotoAccess.class);\n    }\n  }\n  /**\n   * @return the gphoto:videostatus of the video/photo.\n   */\n  public String getVideoStatus() {\n    return getSimpleValue(GphotoVideoStatus.class);\n  }\n  /**\n   * Sets the video status of the video/photo entry.\n   */\n  public void setVideoStatus(String videoStatus) {\n    if (videoStatus != null) {\n      setExtension(new GphotoVideoStatus(videoStatus));\n    } else {\n      removeExtension(GphotoVideoStatus.class);\n    }\n  }\n  /**\n   * @return the gphoto:width of the photo.\n   */\n  public Long getWidth() {\n    GphotoWidth ext = getExtension(GphotoWidth.class);\n    return ext == null ? null : ext.getValue();\n  }\n  /**\n   * Set the width of the photo this item is about.\n   *\n   * @param width the width of the photo.\n   */\n  public void setWidth(Long width) {\n    if (width != null) {\n      setExtension(new GphotoWidth(width));\n    } else {\n      removeExtension(GphotoWidth.class);\n    }\n  }\n  /**\n   * @return the gphoto:height of the photo.\n   */\n  public Long getHeight() {\n    GphotoHeight ext = getExtension(GphotoHeight.class);\n    return ext == null ? null : ext.getValue();\n  }\n  /**\n   * Set the height of the photo the item is about.\n   *\n   * @param height the height of the photo.\n   */\n  public void setHeight(Long height) {\n    if (height != null) {\n      setExtension(new GphotoHeight(height));\n    } else {\n      removeExtension(GphotoHeight.class);\n    }\n  }\n  /**\n   * @return the gphoto:rotation of the photo.\n   */\n  public Integer getRotation() {\n    GphotoRotation ext = getExtension(GphotoRotation.class);\n    return ext == null ? null : ext.getValue();\n  }\n  /**\n   * Set the rotation in degrees of the photo.\n   *\n   * @param rotation the rotation of the photo.\n   */\n  public void setRotation(Integer rotation) {\n    if (rotation != null) {\n      setExtension(new GphotoRotation(rotation));\n    } else {\n      removeExtension(GphotoRotation.class);\n    }\n  }\n  /**\n   * @return the gphoto:size of the photo.\n   */\n  public Long getSize() {\n    GphotoSize ext = getExtension(GphotoSize.class);\n    return ext == null ? null : ext.getValue();\n  }\n  /**\n   * Set the size of the photo this item is about.\n   *\n   * @param size the size of the photo.\n   */\n  public void setSize(Long size) {\n    if (size != null) {\n      setExtension(new GphotoSize(size));\n    } else {\n      removeExtension(GphotoSize.class);\n    }\n  }\n  /**\n   * @return the gphoto:client of the photo.\n   */\n  public String getClient() {\n    return getSimpleValue(GphotoClient.class);\n  }\n  /**\n   * Set the client of the photo this item is about.\n   *\n   * @param client the client that created the photo.\n   */\n  public void setClient(String client) {\n    if (client != null) {\n      setExtension(new GphotoClient(client));\n    } else {\n      removeExtension(GphotoClient.class);\n    }\n  }\n  /**\n   * @return the gphoto:checksum of the photo.\n   */\n  public String getChecksum() {\n    return getSimpleValue(GphotoChecksum.class);\n  }\n  /**\n   * Set the checksum of the photo this item is about.\n   *\n   * @param checksum the checksum on the photo.\n   */\n  public void setChecksum(String checksum) {\n    if (checksum != null) {\n      setExtension(new GphotoChecksum(checksum));\n    } else {\n      removeExtension(GphotoChecksum.class);\n    }\n  }\n  /**\n   * @return the gphoto:timestamp of the photo.\n   */\n  public Date getTimestamp() {\n    GphotoTimestamp ext = getExtension(GphotoTimestamp.class);\n    return ext == null ? null : new Date(ext.getValue());\n  }\n  /**\n   * Set the timestamp on the photo this item is about.\n   *\n   * @param timestamp the timestamp on the photo.\n   */\n  public void setTimestamp(Date timestamp) {\n    if (timestamp != null) {\n      setExtension(new GphotoTimestamp(timestamp));\n    } else {\n      removeExtension(GphotoTimestamp.class);\n    }\n  }\n  /**\n   * @return the exif:tags ExifTags for the photo.\n   */\n  public ExifTags getExifTags() {\n    return getExtension(ExifTags.class);\n  }\n  /**\n   * Set the exif tags on the photo this item is about.\n   *\n   * @param tags the exif tags for the photo.\n   */\n  public void setExifTags(ExifTags tags) {\n    if (tags != null) {\n      setExtension(tags);\n    } else {\n      removeExtension(ExifTags.class);\n    }\n  }\n  /**\n   * @return true if comments are enabled in the photo the item represents.\n   */\n  public Boolean getCommentsEnabled() {\n    GphotoCommentsEnabled ext = getExtension(GphotoCommentsEnabled.class);\n    return ext == null ? null : ext.getValue();\n  }\n  /**\n   * Set the whether comments are enabled in the photo this item represents.\n   *\n   * @param commentsEnabled true if comments are enabled in the photo.\n   */\n  public void setCommentsEnabled(Boolean commentsEnabled) {\n    if (commentsEnabled != null) {\n      setExtension(new GphotoCommentsEnabled(commentsEnabled));\n    } else {\n      removeExtension(GphotoCommentsEnabled.class);\n    }\n  }\n  /**\n   * @return the comment count on the photo this item represents.\n   */\n  public Integer getCommentCount() {\n    GphotoCommentCount ext = getExtension(GphotoCommentCount.class);\n    return ext == null ? null : ext.getValue();\n  }\n  /**\n   * Set the number of comments on the photo this item represents.\n   *\n   * @param commentCount the number of comments on the photo.\n   */\n<fim_suffix>  public void setCommentCount(Integer commentCount) {\n    if (commentCount != null) {\n      setExtension(new GphotoCommentCount(commentCount));\n    } else {\n      removeExtension(GphotoCommentCount.class);\n    }\n  }<fim_middle>// function below has no smell\n"}