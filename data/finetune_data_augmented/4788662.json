{"text": "<fim_prefix>    tmpMap.put(_Fields.ROLE_NAME, new org.apache.thrift.meta_data.FieldMetaData(\"roleName\", org.apache.thrift.TFieldRequirementType.REQUIRED, \n        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));\n    tmpMap.put(_Fields.AUTHORIZABLE_HIERARCHY, new org.apache.thrift.meta_data.FieldMetaData(\"authorizableHierarchy\", org.apache.thrift.TFieldRequirementType.OPTIONAL, \n        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, TSentryAuthorizable.class)));\n    metaDataMap = Collections.unmodifiableMap(tmpMap);\n    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(TListSentryPrivilegesRequest.class, metaDataMap);\n  }\n  public TListSentryPrivilegesRequest() {\n    this.protocol_version = 2;\n  }\n  public TListSentryPrivilegesRequest(\n    int protocol_version,\n    String requestorUserName,\n    String roleName)\n  {\n    this();\n    this.protocol_version = protocol_version;\n    setProtocol_versionIsSet(true);\n    this.requestorUserName = requestorUserName;\n    this.roleName = roleName;\n  }\n  /**\n   * Performs a deep copy on <i>other</i>.\n   */\n  public TListSentryPrivilegesRequest(TListSentryPrivilegesRequest other) {\n    __isset_bitfield = other.__isset_bitfield;\n    this.protocol_version = other.protocol_version;\n    if (other.isSetRequestorUserName()) {\n      this.requestorUserName = other.requestorUserName;\n    }\n    if (other.isSetRoleName()) {\n      this.roleName = other.roleName;\n    }\n    if (other.isSetAuthorizableHierarchy()) {\n      this.authorizableHierarchy = new TSentryAuthorizable(other.authorizableHierarchy);\n    }\n  }\n  public TListSentryPrivilegesRequest deepCopy() {\n    return new TListSentryPrivilegesRequest(this);\n  }\n  @Override\n  public void clear() {\n    this.protocol_version = 2;\n    this.requestorUserName = null;\n    this.roleName = null;\n    this.authorizableHierarchy = null;\n  }\n  public int getProtocol_version() {\n    return this.protocol_version;\n  }\n  public void setProtocol_version(int protocol_version) {\n    this.protocol_version = protocol_version;\n    setProtocol_versionIsSet(true);\n  }\n  public void unsetProtocol_version() {\n    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __PROTOCOL_VERSION_ISSET_ID);\n  }\n  /** Returns true if field protocol_version is set (has been assigned a value) and false otherwise */\n  public boolean isSetProtocol_version() {\n    return EncodingUtils.testBit(__isset_bitfield, __PROTOCOL_VERSION_ISSET_ID);\n  }\n  public void setProtocol_versionIsSet(boolean value) {\n    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __PROTOCOL_VERSION_ISSET_ID, value);\n  }\n  public String getRequestorUserName() {\n    return this.requestorUserName;\n  }\n  public void setRequestorUserName(String requestorUserName) {\n    this.requestorUserName = requestorUserName;\n  }\n  public void unsetRequestorUserName() {\n    this.requestorUserName = null;\n  }\n  /** Returns true if field requestorUserName is set (has been assigned a value) and false otherwise */\n  public boolean isSetRequestorUserName() {\n    return this.requestorUserName != null;\n  }\n  public void setRequestorUserNameIsSet(boolean value) {\n    if (!value) {\n      this.requestorUserName = null;\n    }\n  }\n  public String getRoleName() {\n    return this.roleName;\n  }\n  public void setRoleName(String roleName) {\n    this.roleName = roleName;\n  }\n  public void unsetRoleName() {\n    this.roleName = null;\n  }\n  /** Returns true if field roleName is set (has been assigned a value) and false otherwise */\n  public boolean isSetRoleName() {\n    return this.roleName != null;\n  }\n  public void setRoleNameIsSet(boolean value) {\n    if (!value) {\n      this.roleName = null;\n    }\n  }\n  public TSentryAuthorizable getAuthorizableHierarchy() {\n    return this.authorizableHierarchy;\n  }\n  public void setAuthorizableHierarchy(TSentryAuthorizable authorizableHierarchy) {\n    this.authorizableHierarchy = authorizableHierarchy;\n  }\n  public void unsetAuthorizableHierarchy() {\n    this.authorizableHierarchy = null;\n  }\n  /** Returns true if field authorizableHierarchy is set (has been assigned a value) and false otherwise */\n  public boolean isSetAuthorizableHierarchy() {\n    return this.authorizableHierarchy != null;\n  }\n  public void setAuthorizableHierarchyIsSet(boolean value) {\n    if (!value) {\n      this.authorizableHierarchy = null;\n    }\n  }\n  public void setFieldValue(_Fields field, Object value) {\n    switch (field) {\n    case PROTOCOL_VERSION:\n      if (value == null) {\n        unsetProtocol_version();\n      } else {\n        setProtocol_version((Integer)value);\n      }\n      break;\n    case REQUESTOR_USER_NAME:\n      if (value == null) {\n        unsetRequestorUserName();\n      } else {\n        setRequestorUserName((String)value);\n      }\n      break;\n    case ROLE_NAME:\n      if (value == null) {\n        unsetRoleName();\n      } else {\n        setRoleName((String)value);\n      }\n      break;\n    case AUTHORIZABLE_HIERARCHY:\n      if (value == null) {\n        unsetAuthorizableHierarchy();\n      } else {\n        setAuthorizableHierarchy((TSentryAuthorizable)value);\n      }\n      break;\n    }\n  }\n  public Object getFieldValue(_Fields field) {\n    switch (field) {\n    case PROTOCOL_VERSION:\n      return Integer.valueOf(getProtocol_version());\n    case REQUESTOR_USER_NAME:\n      return getRequestorUserName();\n    case ROLE_NAME:\n      return getRoleName();\n    case AUTHORIZABLE_HIERARCHY:\n      return getAuthorizableHierarchy();\n    }\n    throw new IllegalStateException();\n  }\n  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */\n  public boolean isSet(_Fields field) {\n    if (field == null) {\n      throw new IllegalArgumentException();\n    }\n    switch (field) {\n    case PROTOCOL_VERSION:\n      return isSetProtocol_version();\n    case REQUESTOR_USER_NAME:\n      return isSetRequestorUserName();\n    case ROLE_NAME:\n      return isSetRoleName();\n    case AUTHORIZABLE_HIERARCHY:\n      return isSetAuthorizableHierarchy();\n    }\n    throw new IllegalStateException();\n  }\n  @Override\n  public boolean equals(Object that) {\n    if (that == null)\n      return false;\n    if (that instanceof TListSentryPrivilegesRequest)\n      return this.equals((TListSentryPrivilegesRequest)that);\n    return false;\n  }\n<fim_suffix>  public boolean equals(TListSentryPrivilegesRequest that) {\n    if (that == null)\n      return false;\n    boolean this_present_protocol_version = true;\n    boolean that_present_protocol_version = true;\n    if (this_present_protocol_version || that_present_protocol_version) {\n      if (!(this_present_protocol_version && that_present_protocol_version))\n        return false;\n      if (this.protocol_version != that.protocol_version)\n        return false;\n    }\n    boolean this_present_requestorUserName = true && this.isSetRequestorUserName();\n    boolean that_present_requestorUserName = true && that.isSetRequestorUserName();\n    if (this_present_requestorUserName || that_present_requestorUserName) {\n      if (!(this_present_requestorUserName && that_present_requestorUserName))\n        return false;\n      if (!this.requestorUserName.equals(that.requestorUserName))\n        return false;\n    }\n    boolean this_present_roleName = true && this.isSetRoleName();\n    boolean that_present_roleName = true && that.isSetRoleName();\n    if (this_present_roleName || that_present_roleName) {\n      if (!(this_present_roleName && that_present_roleName))\n        return false;\n      if (!this.roleName.equals(that.roleName))\n        return false;\n    }\n    boolean this_present_authorizableHierarchy = true && this.isSetAuthorizableHierarchy();\n    boolean that_present_authorizableHierarchy = true && that.isSetAuthorizableHierarchy();\n    if (this_present_authorizableHierarchy || that_present_authorizableHierarchy) {\n      if (!(this_present_authorizableHierarchy && that_present_authorizableHierarchy))\n        return false;\n      if (!this.authorizableHierarchy.equals(that.authorizableHierarchy))\n        return false;\n    }\n    return true;\n  }<fim_middle>// function below is long method\n"}