{"text": "<fim_prefix>\n<fim_suffix>@Entity\n@Table(name=\"xa_access_audit\")\npublic class AuthzAuditEventDbObj implements Serializable {\n\tprivate static final Log LOG = LogFactory.getLog(AuthzAuditEventDbObj.class);\n\tprivate static final long serialVersionUID = 1L;\n\tstatic int MaxValueLengthAccessType = 255;\n\tstatic int MaxValueLengthAclEnforcer = 255;\n\tstatic int MaxValueLengthAgentId = 255;\n\tstatic int MaxValueLengthClientIp = 255;\n\tstatic int MaxValueLengthClientType = 255;\n\tstatic int MaxValueLengthRepoName = 255;\n\tstatic int MaxValueLengthResultReason = 255;\n\tstatic int MaxValueLengthSessionId = 255;\n\tstatic int MaxValueLengthRequestUser = 255;\n\tstatic int MaxValueLengthAction = 2000;\n\tstatic int MaxValueLengthRequestData = 4000;\n\tstatic int MaxValueLengthResourcePath = 4000;\n\tstatic int MaxValueLengthResourceType = 255;\n\tprivate long   auditId;\n\tprivate int    repositoryType;\n\tprivate String repositoryName;\n\tprivate String user;\n\tprivate Date   timeStamp;\n\tprivate String accessType;\n\tprivate String resourcePath;\n\tprivate String resourceType;\n\tprivate String action;\n\tprivate int    accessResult;\n\tprivate String agentId;\n\tprivate long   policyId;\n\tprivate String resultReason;\n\tprivate String aclEnforcer;\n\tprivate String sessionId;\n\tprivate String clientType;\n\tprivate String clientIP;\n\tprivate String requestData;\n\tprivate long seqNum;\n\tprivate long eventCount;\n\tprivate long eventDurationMS;\n\tprivate String tags;\n\tpublic static void init(Properties props)\n\t{\n\t\tLOG.info(\"AuthzAuditEventDbObj.init()\");\n\t\tfinal String AUDIT_DB_MAX_COLUMN_VALUE = \"xasecure.audit.destination.db.max.column.length\";\n\t\tMaxValueLengthAccessType = MiscUtil.getIntProperty(props, AUDIT_DB_MAX_COLUMN_VALUE + \".\" + \"access_type\", MaxValueLengthAccessType);\n\t\tlogMaxColumnValue(\"access_type\", MaxValueLengthAccessType);\n\t\tMaxValueLengthAclEnforcer = MiscUtil.getIntProperty(props, AUDIT_DB_MAX_COLUMN_VALUE + \".\" + \"acl_enforcer\", MaxValueLengthAclEnforcer);\n\t\tlogMaxColumnValue(\"acl_enforcer\", MaxValueLengthAclEnforcer);\n\t\tMaxValueLengthAction = MiscUtil.getIntProperty(props, AUDIT_DB_MAX_COLUMN_VALUE + \".\" + \"action\", MaxValueLengthAction);\n\t\tlogMaxColumnValue(\"action\", MaxValueLengthAction);\n\t\tMaxValueLengthAgentId = MiscUtil.getIntProperty(props, AUDIT_DB_MAX_COLUMN_VALUE + \".\" + \"agent_id\", MaxValueLengthAgentId);\n\t\tlogMaxColumnValue(\"agent_id\", MaxValueLengthAgentId);\n\t\tMaxValueLengthClientIp = MiscUtil.getIntProperty(props, AUDIT_DB_MAX_COLUMN_VALUE + \".\" + \"client_id\", MaxValueLengthClientIp);\n\t\tlogMaxColumnValue(\"client_id\", MaxValueLengthClientIp);\n\t\tMaxValueLengthClientType = MiscUtil.getIntProperty(props, AUDIT_DB_MAX_COLUMN_VALUE + \".\" + \"client_type\", MaxValueLengthClientType);\n\t\tlogMaxColumnValue(\"client_type\", MaxValueLengthClientType);\n\t\tMaxValueLengthRepoName = MiscUtil.getIntProperty(props, AUDIT_DB_MAX_COLUMN_VALUE + \".\" + \"repo_name\", MaxValueLengthRepoName);\n\t\tlogMaxColumnValue(\"repo_name\", MaxValueLengthRepoName);\n\t\tMaxValueLengthResultReason = MiscUtil.getIntProperty(props, AUDIT_DB_MAX_COLUMN_VALUE + \".\" + \"result_reason\", MaxValueLengthResultReason);\n\t\tlogMaxColumnValue(\"result_reason\", MaxValueLengthResultReason);\n\t\tMaxValueLengthSessionId = MiscUtil.getIntProperty(props, AUDIT_DB_MAX_COLUMN_VALUE + \".\" + \"session_id\", MaxValueLengthSessionId);\n\t\tlogMaxColumnValue(\"session_id\", MaxValueLengthSessionId);\n\t\tMaxValueLengthRequestUser = MiscUtil.getIntProperty(props, AUDIT_DB_MAX_COLUMN_VALUE + \".\" + \"request_user\", MaxValueLengthRequestUser);\n\t\tlogMaxColumnValue(\"request_user\", MaxValueLengthRequestUser);\n\t\tMaxValueLengthRequestData = MiscUtil.getIntProperty(props, AUDIT_DB_MAX_COLUMN_VALUE + \".\" + \"request_data\", MaxValueLengthRequestData);\n\t\tlogMaxColumnValue(\"request_data\", MaxValueLengthRequestData);\n\t\tMaxValueLengthResourcePath = MiscUtil.getIntProperty(props, AUDIT_DB_MAX_COLUMN_VALUE + \".\" + \"resource_path\", MaxValueLengthResourcePath);\n\t\tlogMaxColumnValue(\"resource_path\", MaxValueLengthResourcePath);\n\t\tMaxValueLengthResourceType = MiscUtil.getIntProperty(props, AUDIT_DB_MAX_COLUMN_VALUE + \".\" + \"resource_type\", MaxValueLengthResourceType);\n\t\tlogMaxColumnValue(\"resource_type\", MaxValueLengthResourceType);\n\t}\n\tpublic static void logMaxColumnValue(String columnName, int configuredMaxValueLength) {\n\t\tLOG.info(\"Setting max column value for column[\" + columnName + \"] to [\" + configuredMaxValueLength + \"].\");\n\t\tif (configuredMaxValueLength == 0) {\n\t\t\tLOG.info(\"Max length of column[\" + columnName + \"] was 0! Column will NOT be emitted in the audit.\");\n\t\t} else if (configuredMaxValueLength < 0) {\n\t\t\tLOG.info(\"Max length of column[\" + columnName + \"] was less than 0! Column value will never be truncated.\");\n\t\t}\n\t}\n\tpublic AuthzAuditEventDbObj() {\n\t\tsuper();\n\t}\n\tpublic AuthzAuditEventDbObj(AuthzAuditEvent event) {\n\t\tsuper();\n\t\tDate utcDate=null;\n\t\tif(event.getEventTime()!=null){\n\t\t\tutcDate=MiscUtil.getUTCDateForLocalDate(event.getEventTime());\n\t\t}else{\n\t\t\tutcDate=MiscUtil.getUTCDate();\n\t\t}\n\t\tthis.repositoryType = event.getRepositoryType();\n\t\tthis.repositoryName = event.getRepositoryName();\n\t\tthis.user           = event.getUser();\n\t\tthis.timeStamp      = utcDate;\n\t\tthis.accessType     = event.getAccessType();\n\t\tthis.resourcePath   = event.getResourcePath();\n\t\tthis.resourceType   = event.getResourceType();\n\t\tthis.action         = event.getAction();\n\t\tthis.accessResult   = event.getAccessResult();\n\t\tthis.agentId        = event.getAgentId();\n\t\tthis.policyId       = event.getPolicyId();\n\t\tthis.resultReason   = event.getResultReason();\n\t\tthis.aclEnforcer    = event.getAclEnforcer();\n\t\tthis.sessionId      = event.getSessionId();\n\t\tthis.clientType     = event.getClientType();\n\t\tthis.clientIP       = event.getClientIP();\n\t\tthis.requestData    = event.getRequestData();\n\t\tthis.seqNum         = event.getSeqNum();\n\t\tthis.eventCount     = event.getEventCount();\n\t\tthis.eventDurationMS= event.getEventDurationMS();\n\t\tthis.tags           = StringUtils.join(event.getTags(), \", \");\n\t}\n\t@Id\n\t@SequenceGenerator(name=\"XA_ACCESS_AUDIT_SEQ\",sequenceName=\"XA_ACCESS_AUDIT_SEQ\",allocationSize=1)\n\t@GeneratedValue(strategy=GenerationType.AUTO,generator=\"XA_ACCESS_AUDIT_SEQ\")\n\t@Column(name = \"id\", unique = true, nullable = false)\n\tpublic long getAuditId() {\n\t\treturn this.auditId;\n\t}\n\tpublic void setAuditId(long auditId) {\n\t\tthis.auditId = auditId;\n\t}\n\t@Column(name = \"repo_type\")\n\tpublic int getRepositoryType() {\n\t\treturn this.repositoryType;\n\t}<fim_middle>// class below is data class\n"}