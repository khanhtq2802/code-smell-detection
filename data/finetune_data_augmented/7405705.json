{"text": "<fim_prefix>/*\n * Copyright (c) 2016, 2018, Oracle and/or its affiliates. All rights reserved.\n * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n *\n * This code is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License version 2 only, as\n * published by the Free Software Foundation.  Oracle designates this\n * particular file as subject to the \"Classpath\" exception as provided\n * by Oracle in the LICENSE file that accompanied this code.\n *\n * This code is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n * version 2 for more details (a copy is included in the LICENSE file that\n * accompanied this code).\n *\n * You should have received a copy of the GNU General Public License version\n * 2 along with this work; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n *\n * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n * or visit www.oracle.com if you need additional information or have any\n * questions.\n */\npackage org.graalvm.compiler.core.common;\n\nimport jdk.vm.ci.code.CompilationRequest;\n\n/**\n * A unique identifier for a compilation. Compiled code can be mapped to a single compilation id.\n * The reverse is not true since the compiler might bailout in which case no code is installed.\n */\n<fim_suffix>public interface CompilationIdentifier {\n\n    enum Verbosity {\n        /**\n         * Only the unique identifier of the compilation.\n         */\n        ID,\n        /**\n         * Only the name of the compilation unit.\n         */\n        NAME,\n        /**\n         * {@link #ID} + a readable description.\n         */\n        DETAILED\n    }\n\n    CompilationRequestIdentifier INVALID_COMPILATION_ID = new CompilationRequestIdentifier() {\n\n        @Override\n        public String toString() {\n            return toString(Verbosity.DETAILED);\n        }\n\n        @Override\n        public String toString(Verbosity verbosity) {\n            return \"InvalidCompilationID\";\n        }\n\n        @Override\n        public CompilationRequest getRequest() {\n            return null;\n        }\n\n    };\n\n    /**\n     * This method is a shortcut for {@link #toString(Verbosity)} with {@link Verbosity#DETAILED}.\n     */\n    @Override\n    String toString();\n\n    /**\n     * Creates a String representation for this compilation identifier with a given\n     * {@link Verbosity}.\n     */\n    String toString(Verbosity verbosity);\n}<fim_middle>// class below has no smell\n"}