{"text": "<fim_prefix>/* Copyright (c) 2013 Pivotal Software, Inc. All rights reserved. */\npackage com.rabbitmq.jms.util;\n\nimport java.util.concurrent.ConcurrentLinkedQueue;\n\n/**\n * Bag of {@link Abortable}s which is itself an {@link Abortable}.\n * {@link Abortable} actions are propagated to elements.\n */\n<fim_suffix>public class AbortableHolder implements Abortable {\n    private final java.util.Queue<Abortable> abortableQueue = new ConcurrentLinkedQueue<Abortable>();\n    private final boolean[] flags = new boolean[] { false, false, false }; // to prevent infinite regress\n\n    private enum Action {\n        ABORT(0) { @Override void doit(Abortable a) throws Exception { a.abort(); } },\n        START(1) { @Override void doit(Abortable a) throws Exception { a.start(); } },\n        STOP(2)  { @Override void doit(Abortable a) throws Exception { a.stop();  } };\n        private final int ind;\n\n        Action(int ind) { this.ind = ind;  }\n\n        int index()     { return this.ind; }\n\n        abstract void doit(Abortable a) throws Exception;\n    };\n\n    /**\n     * @param a - abortable to hold\n     */\n    public void add(Abortable a) {\n        this.abortableQueue.add(a);\n    }\n\n    /**\n     * @param a - abortable to remove (once) if held\n     */\n    public void remove(Abortable a) {\n        this.abortableQueue.remove(a);\n    }\n\n    public void abort() throws Exception { act(Action.ABORT); }\n\n    public void start() throws Exception { act(Action.START); }\n\n    public void stop() throws Exception  { act(Action.STOP);  }\n\n    private void act(AbortableHolder.Action action) throws Exception {\n        if (this.flags[action.index()]) return; // prevent infinite\n        this.flags[action.index()] = true;      // regress\n\n        Abortable[] as = this.abortableQueue.toArray(new Abortable[this.abortableQueue.size()]);\n        for (Abortable a : as) { action.doit(a); }\n        this.flags[action.index()] = false;     // allow multiple invocations\n    }\n}<fim_middle>// class below has no smell\n"}