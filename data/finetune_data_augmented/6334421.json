{"text": "<fim_prefix>\n<fim_suffix>public class GwtDeviceServiceImpl extends KapuaRemoteServiceServlet implements GwtDeviceService {\n    private static final long serialVersionUID = -1391026997499175151L;\n    private static final KapuaLocator LOCATOR = KapuaLocator.getInstance();\n    private static final AuthorizationService AUTHORIZATION_SERVICE = LOCATOR.getService(AuthorizationService.class);\n    private static final PermissionFactory PERMISSION_FACTORY = LOCATOR.getFactory(PermissionFactory.class);\n    private boolean isSameId;\n    @Override\n    public GwtDevice findDevice(String scopeIdString, String deviceIdString)\n            throws GwtKapuaException {\n        GwtDevice gwtDevice = null;\n        try {\n            KapuaId scopeId = KapuaEid.parseCompactId(scopeIdString);\n            KapuaId deviceId = KapuaEid.parseCompactId(deviceIdString);\n            KapuaLocator locator = KapuaLocator.getInstance();\n            DeviceRegistryService deviceRegistryService = locator.getService(DeviceRegistryService.class);\n            Device device = deviceRegistryService.find(scopeId, deviceId);\n            gwtDevice = KapuaGwtDeviceModelConverter.convertDevice(device);\n        } catch (Throwable t) {\n            KapuaExceptionHandler.handle(t);\n        }\n        return gwtDevice;\n    }\n    @Override\n    public ListLoadResult<GwtGroupedNVPair> findDeviceProfile(String scopeIdString, String deviceIdString)\n            throws GwtKapuaException {\n        List<GwtGroupedNVPair> pairs = new ArrayList<GwtGroupedNVPair>();\n        KapuaLocator locator = KapuaLocator.getInstance();\n        DeviceRegistryService deviceRegistryService = locator.getService(DeviceRegistryService.class);\n        DeviceEventService deviceEventService = locator.getService(DeviceEventService.class);\n        final DeviceConnectionService deviceConnectionService = locator.getService(DeviceConnectionService.class);\n        GroupService groupService = locator.getService(GroupService.class);\n        final UserService userService = locator.getService(UserService.class);\n        try {\n            final KapuaId scopeId = KapuaEid.parseCompactId(scopeIdString);\n            KapuaId deviceId = KapuaEid.parseCompactId(deviceIdString);\n            final Device device = deviceRegistryService.find(scopeId, deviceId);\n            if (device != null) {\n                pairs.add(new GwtGroupedNVPair(\"devInfo\", \"devStatus\", device.getStatus().toString()));\n                final DeviceConnection deviceConnection;\n                if (device.getConnectionId() != null) {\n                    if (device.getConnection() != null) {\n                        deviceConnection = device.getConnection();\n                    } else {\n                        deviceConnection = KapuaSecurityUtils.doPrivileged(new Callable<DeviceConnection>() {\n                            @Override\n                            public DeviceConnection call() throws Exception {\n                                return deviceConnectionService.find(device.getScopeId(), device.getConnectionId());\n                            }\n                        });\n                    }\n                } else {\n                    deviceConnection = null;\n                }\n                if (deviceConnection != null) {\n                    User lastConnectedUser = KapuaSecurityUtils.doPrivileged(new Callable<User>() {\n                        @Override\n                        public User call() throws Exception {\n                            return userService.find(scopeId, deviceConnection.getUserId());\n                        }\n                    });\n                    User reservedUser = null;\n                    if (deviceConnection.getReservedUserId() != null) {\n                        reservedUser = KapuaSecurityUtils.doPrivileged(new Callable<User>() {\n                            @Override\n                            public User call() throws Exception {\n                                return userService.find(scopeId, deviceConnection.getReservedUserId());\n                            }\n                        });\n                    }\n                    pairs.add(new GwtGroupedNVPair(\"connInfo\", \"connConnectionStatus\", deviceConnection.getStatus().toString()));\n                    pairs.add(new GwtGroupedNVPair(\"connInfo\", \"connClientId\", device.getClientId()));\n                    pairs.add(new GwtGroupedNVPair(\"connInfo\", \"connUserName\", lastConnectedUser != null ? lastConnectedUser.getName() : null));\n                    if (AUTHORIZATION_SERVICE.isPermitted(PERMISSION_FACTORY.newPermission(new UserDomain(), Actions.read, scopeId))) {\n                        pairs.add(new GwtGroupedNVPair(\"connInfo\", \"connReservedUserId\", reservedUser != null ? reservedUser.getName() : null));\n                    }\n                    pairs.add(new GwtGroupedNVPair(\"connInfo\", \"connUserCouplingMode\", GwtConnectionUserCouplingMode.valueOf(deviceConnection.getUserCouplingMode().name()).getLabel()));\n                    pairs.add(new GwtGroupedNVPair(\"connInfo\", \"connClientIp\", deviceConnection.getClientIp()));\n                    pairs.add(new GwtGroupedNVPair(\"netInfo\", \"netConnIface\", device.getConnectionInterface()));\n                    pairs.add(new GwtGroupedNVPair(\"netInfo\", \"netConnIp\", deviceConnection.getClientIp()));\n                    pairs.add(new GwtGroupedNVPair(\"netInfo\", \"netConnIfaceIp\", device.getConnectionIp()));\n                    pairs.add(new GwtGroupedNVPair(\"devInfo\", \"devConnectionStatus\", deviceConnection.getStatus().toString()));\n                } else {\n                    pairs.add(new GwtGroupedNVPair(\"connInfo\", \"connConnectionStatus\", DeviceConnectionStatus.DISCONNECTED.toString()));\n                    pairs.add(new GwtGroupedNVPair(\"connInfo\", \"connClientId\", null));\n                    pairs.add(new GwtGroupedNVPair(\"connInfo\", \"connUserName\", null));\n                    if (AUTHORIZATION_SERVICE.isPermitted(PERMISSION_FACTORY.newPermission(new UserDomain(), Actions.read, scopeId))) {\n                        pairs.add(new GwtGroupedNVPair(\"connInfo\", \"connReservedUserId\", null));\n                    }\n                    pairs.add(new GwtGroupedNVPair(\"connInfo\", \"connUserCouplingMode\", null));\n                    pairs.add(new GwtGroupedNVPair(\"connInfo\", \"connClientIp\", null));\n                    pairs.add(new GwtGroupedNVPair(\"netInfo\", \"netConnIface\", null));\n                    pairs.add(new GwtGroupedNVPair(\"netInfo\", \"netConnIp\", null));\n                    pairs.add(new GwtGroupedNVPair(\"netInfo\", \"netConnIfaceIp\", null));\n                    pairs.add(new GwtGroupedNVPair(\"devInfo\", \"devConnectionStatus\", DeviceConnectionStatus.DISCONNECTED.toString()));\n                }\n                pairs.add(new GwtGroupedNVPair(\"devInfo\", \"devClientId\", device.getClientId()));\n                pairs.add(new GwtGroupedNVPair(\"devInfo\", \"devDisplayName\", device.getDisplayName()));\n                if (AUTHORIZATION_SERVICE.isPermitted(PERMISSION_FACTORY.newPermission(new GroupDomain(), Actions.read, device.getScopeId()))) {\n                    if (device.getGroupId() != null) {\n                        Group group = groupService.find(scopeId, device.getGroupId());\n                        if (group != null) {\n                            pairs.add(new GwtGroupedNVPair(\"devInfo\", \"devGroupName\", group.getName()));\n                        }\n                    } else {\n                        pairs.add(new GwtGroupedNVPair(\"devInfo\", \"devGroupName\", null));\n                    }\n                }\n                if (AUTHORIZATION_SERVICE.isPermitted(PERMISSION_FACTORY.newPermission(DeviceDomains.DEVICE_EVENT_DOMAIN, Actions.read, device.getScopeId()))) {\n                    if (device.getLastEventId() != null) {\n                        DeviceEvent lastEvent = deviceEventService.find(scopeId, device.getLastEventId());\n                        if (lastEvent != null) {\n                            pairs.add(new GwtGroupedNVPair(\"devInfo\", \"devLastEventType\", lastEvent.getResource()));\n                            pairs.add(new GwtGroupedNVPair(\"devInfo\", \"devLastEventOn\", lastEvent.getReceivedOn()));\n                        } else {\n                            pairs.add(new GwtGroupedNVPair(\"devInfo\", \"devLastEventType\", null));\n                            pairs.add(new GwtGroupedNVPair(\"devInfo\", \"devLastEventOn\", null));\n                        }\n                    } else {\n                        if (deviceConnection != null) {\n                            pairs.add(new GwtGroupedNVPair(\"devInfo\", \"devLastEventType\", deviceConnection.getStatus().name()));\n                            pairs.add(new GwtGroupedNVPair(\"devInfo\", \"devLastEventOn\", deviceConnection.getModifiedOn()));\n                        } else {\n                            pairs.add(new GwtGroupedNVPair(\"devInfo\", \"devLastEventType\", null));\n                            pairs.add(new GwtGroupedNVPair(\"devInfo\", \"devLastEventOn\", null));\n                        }\n                    }\n                }\n                pairs.add(new GwtGroupedNVPair(\"devInfo\", \"devApps\", device.getApplicationIdentifiers()));<fim_middle>// class below is blob\n"}