{"text": "<fim_prefix>/**\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.apache.activemq.apollo.mqtt.dto;\n\nimport org.apache.activemq.apollo.dto.ProtocolDTO;\nimport org.apache.activemq.apollo.dto.ProtocolFilterDTO;\n\nimport javax.xml.bind.annotation.*;\nimport java.util.ArrayList;\nimport java.util.List;\n\n/**\n * Allow you to customize the mqtt protocol implementation.\n *\n * @author <a href=\"http://hiramchirino.com\">Hiram Chirino</a>\n */\n<fim_suffix>@XmlRootElement(name=\"mqtt\")\n@XmlAccessorType(XmlAccessType.FIELD)\npublic class MqttDTO extends ProtocolDTO {\n\n    @XmlAttribute(name=\"max_message_length\")\n    public Integer max_message_length;\n\n    @XmlElementRef\n    public List<ProtocolFilterDTO> protocol_filters = new ArrayList<ProtocolFilterDTO>();\n\n    @XmlAttribute(name=\"queue_prefix\")\n    public String queue_prefix;\n\n    @XmlAttribute(name=\"path_separator\")\n    public String path_separator;\n\n    @XmlAttribute(name=\"any_child_wildcard\")\n    public String any_child_wildcard;\n\n    @XmlAttribute(name=\"any_descendant_wildcard\")\n    public String any_descendant_wildcard;\n\n    @XmlAttribute(name=\"regex_wildcard_start\")\n    public String regex_wildcard_start;\n\n    @XmlAttribute(name=\"regex_wildcard_end\")\n    public String regex_wildcard_end;\n\n    @XmlAttribute(name=\"part_pattern\")\n    public String part_pattern;\n\n    @XmlAttribute(name=\"die_delay\")\n    public Long die_delay;\n\n    @Override\n    public boolean equals(Object o) {\n        if (this == o) return true;\n        if (o == null || getClass() != o.getClass()) return false;\n        if (!super.equals(o)) return false;\n\n        MqttDTO mqttDTO = (MqttDTO) o;\n\n        if (any_child_wildcard != null ? !any_child_wildcard.equals(mqttDTO.any_child_wildcard) : mqttDTO.any_child_wildcard != null)\n            return false;\n        if (any_descendant_wildcard != null ? !any_descendant_wildcard.equals(mqttDTO.any_descendant_wildcard) : mqttDTO.any_descendant_wildcard != null)\n            return false;\n        if (max_message_length != null ? !max_message_length.equals(mqttDTO.max_message_length) : mqttDTO.max_message_length != null)\n            return false;\n        if (path_separator != null ? !path_separator.equals(mqttDTO.path_separator) : mqttDTO.path_separator != null)\n            return false;\n        if (protocol_filters != null ? !protocol_filters.equals(mqttDTO.protocol_filters) : mqttDTO.protocol_filters != null)\n            return false;\n        if (queue_prefix != null ? !queue_prefix.equals(mqttDTO.queue_prefix) : mqttDTO.queue_prefix != null)\n            return false;\n        if (regex_wildcard_end != null ? !regex_wildcard_end.equals(mqttDTO.regex_wildcard_end) : mqttDTO.regex_wildcard_end != null)\n            return false;\n        if (regex_wildcard_start != null ? !regex_wildcard_start.equals(mqttDTO.regex_wildcard_start) : mqttDTO.regex_wildcard_start != null)\n            return false;\n        if (part_pattern != null ? !part_pattern.equals(mqttDTO.part_pattern) : mqttDTO.part_pattern != null)\n            return false;\n\n        return true;\n    }\n\n    @Override\n    public int hashCode() {\n        int result = super.hashCode();\n        result = 31 * result + (max_message_length != null ? max_message_length.hashCode() : 0);\n        result = 31 * result + (protocol_filters != null ? protocol_filters.hashCode() : 0);\n        result = 31 * result + (queue_prefix != null ? queue_prefix.hashCode() : 0);\n        result = 31 * result + (part_pattern != null ? part_pattern.hashCode() : 0);\n        result = 31 * result + (path_separator != null ? path_separator.hashCode() : 0);\n        result = 31 * result + (any_child_wildcard != null ? any_child_wildcard.hashCode() : 0);\n        result = 31 * result + (any_descendant_wildcard != null ? any_descendant_wildcard.hashCode() : 0);\n        result = 31 * result + (regex_wildcard_start != null ? regex_wildcard_start.hashCode() : 0);\n        result = 31 * result + (regex_wildcard_end != null ? regex_wildcard_end.hashCode() : 0);\n        return result;\n    }\n}<fim_middle>// class below is blob and data class\n"}