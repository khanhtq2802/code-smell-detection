{"text": "<fim_prefix>/*\n * Copyright 2013 The Error Prone Authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage com.google.errorprone.refaster;\n\nimport static com.google.errorprone.refaster.Unifier.unifications;\n\nimport com.google.auto.value.AutoValue;\nimport com.sun.source.tree.Tree;\nimport com.sun.source.tree.TreeVisitor;\nimport com.sun.tools.javac.tree.JCTree.JCExpression;\nimport java.util.Set;\nimport javax.annotation.Nullable;\n\n/**\n * {@code UExpression} imposing a restriction on the kind of the matched expression.\n *\n * @author lowasser@google.com (Louis Wasserman)\n */\n<fim_suffix>@AutoValue\nabstract class UOfKind extends UExpression {\n  public static UOfKind create(UExpression expression, Set<Kind> allowed) {\n    return new AutoValue_UOfKind(expression, allowed);\n  }\n\n  abstract UExpression expression();\n\n  abstract Set<Kind> allowed();\n\n  @Override\n  public JCExpression inline(Inliner inliner) throws CouldNotResolveImportException {\n    return expression().inline(inliner);\n  }\n\n  @Override\n  public <R, D> R accept(TreeVisitor<R, D> visitor, D data) {\n    return expression().accept(visitor, data);\n  }\n\n  @Override\n  public Kind getKind() {\n    return expression().getKind();\n  }\n\n  @Override\n  @Nullable\n  protected Choice<Unifier> defaultAction(Tree tree, @Nullable Unifier unifier) {\n    return Choice.condition(allowed().contains(tree.getKind()), unifier)\n        .thenChoose(unifications(expression(), tree));\n  }\n}<fim_middle>// class below has no smell\n"}