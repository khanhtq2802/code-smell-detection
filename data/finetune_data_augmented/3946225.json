{"text": "<fim_prefix>/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\npackage org.apache.apex.malhar.lib.util;\n\nimport com.datatorrent.api.DefaultInputPort;\nimport com.datatorrent.api.DefaultOutputPort;\nimport com.datatorrent.api.annotation.InputPortFieldAnnotation;\nimport com.datatorrent.api.annotation.OutputPortFieldAnnotation;\nimport com.datatorrent.common.util.BaseOperator;\n\n/**\n * This is the base implementation of an operator, which consumes tuples.&nbsp;\n * If the tuples satisfy a specified filtering function, then they are emitted.&nbsp;\n * Subclasses should implement the filtering method.\n * <p></p>\n * @displayName Filter\n * @category Algorithmic\n * @tags filter\n * @since 0.3.4\n */\n<fim_suffix>public abstract class FilterOperator extends BaseOperator\n{\n  /**\n   * This is the input port on which tuples are received.\n   */\n  @InputPortFieldAnnotation(optional = false)\n  public final transient DefaultInputPort<Object> in = new DefaultInputPort<Object>()\n  {\n    @Override\n    public void process(Object tuple)\n    {\n      if (satisfiesFilter(tuple)) {\n        out.emit(tuple);\n      }\n    }\n\n  };\n\n  /**\n   * This is the output port, which emits tuples that satisfy the filter.\n   */\n  @OutputPortFieldAnnotation(optional = false)\n  public final transient DefaultOutputPort<Object> out = new DefaultOutputPort<Object>();\n\n  public abstract boolean satisfiesFilter(Object tuple);\n}<fim_middle>// class below has no smell\n"}