{"text": "<fim_prefix>/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage org.apache.falcon.regression.ui.pages;\n\n\nimport org.apache.falcon.entity.v0.EntityType;\nimport org.apache.falcon.regression.core.helpers.ColoHelper;\nimport org.apache.log4j.Logger;\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.TimeoutException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.support.ui.WebDriverWait;\n\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\n/**\n * Page with list of entities.\n */\npublic class EntitiesPage extends Page {\n\n    protected static final String ENTITIES_TABLE = \"//table[@id='entity-list']/tbody/tr\";\n\n    private static final Logger LOGGER = Logger.getLogger(EntitiesPage.class);\n    private static final String ACTIVE_NXT_BTN = \"//ul/li[not(@class)]/a[contains(text(),'\u00bb')]\";\n    private static final String PAGE_NUMBER = \"//ul[@class='pagination']/li[@class='active']/a\";\n\n    public EntitiesPage(WebDriver driver, ColoHelper helper, EntityType type) {\n        super(driver, helper);\n        url += \"/index.html?type=\" + type.toString().toLowerCase();\n\n        expectedElement = ENTITIES_TABLE;\n        notFoundMsg = String.format(\"No entities on %sS page\", type);\n    }\n\n    /**\n     * Returns status of defined entity.\n     * @param entityName name of entity\n     * @return status of defined entity\n     */\n    public EntityStatus getEntityStatus(String entityName) {\n        navigateTo();\n        while (true) {\n            String status = getEntitiesOnPage().get(entityName);\n            if (status != null) {\n                return EntityStatus.valueOf(status);\n            }\n            if (nextPagePresent()) {\n                goNextPage();\n            } else {\n                break;\n            }\n        }\n        return null;\n    }\n\n    /**\n     * Loads next page.\n     */\n<fim_suffix>    private void goNextPage() {\n        LOGGER.info(\"Navigating to next page...\");\n        WebElement nextButton = driver.findElement(By.xpath(ACTIVE_NXT_BTN));\n        nextButton.click();\n        waitForElement(expectedElement, DEFAULT_TIMEOUT, \"Next page didn't load\");\n    }\n\n\n    /**\n     * Checks if next page is present.\n     * @return true if next page is present\n     */\n\n    private boolean nextPagePresent() {\n        LOGGER.info(\"Checking if next page is present...\");\n        try {\n            new WebDriverWait(driver, DEFAULT_TIMEOUT).until(new Condition(ACTIVE_NXT_BTN, true));\n            return true;\n        } catch (TimeoutException e) {\n            return false;\n        }\n    }\n\n    /**\n     * Returns page number.\n     * @return page number\n     */\n    public int getPageNumber() {\n        String number = driver.findElement(By.xpath(PAGE_NUMBER)).getText();\n        return Integer.parseInt(number);\n    }\n\n    private Map<String, String> getEntitiesOnPage() {\n        LOGGER.info(\"Reading all entities on page...\");\n        List<WebElement> lines = driver.findElements(By.xpath(ENTITIES_TABLE));\n        Map<String, String> entities = new HashMap<>();\n        for (WebElement line : lines) {\n            WebElement name = line.findElement(By.xpath(\"./td[1]/a\"));\n            WebElement status = line.findElement(By.xpath(\"./td[2]\"));\n            entities.put(name.getText(), status.getText());\n        }\n        return entities;\n    }\n\n}<fim_middle>// function below has no smell\n"}