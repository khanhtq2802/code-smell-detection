{"text": "<fim_prefix>/*\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage org.apache.accumulo.core.crypto.streams;\n\nimport java.io.FilterOutputStream;\nimport java.io.IOException;\nimport java.io.OutputStream;\n\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\n\n<fim_suffix>public class DiscardCloseOutputStream extends FilterOutputStream {\n\n  private static final Logger log = LoggerFactory.getLogger(DiscardCloseOutputStream.class);\n\n  public DiscardCloseOutputStream(OutputStream out) {\n    super(out);\n  }\n\n  /**\n   * It is very important to override this method!! The underlying method from FilterOutputStream\n   * calls write a single byte at a time and will kill performance.\n   */\n  @Override\n  public void write(byte[] b, int off, int len) throws IOException {\n    out.write(b, off, len);\n  }\n\n  @Override\n  public void close() throws IOException {\n    // Discard\n    log.trace(\"Discarded close\");\n  }\n\n}<fim_middle>// class below has no smell\n"}