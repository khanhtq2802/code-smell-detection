{"text": "<fim_prefix>/*******************************************************************************\n * Copyright (c) 2017 the TeXlipse team and others.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     The TeXlipse team - initial API and implementation\n *******************************************************************************/\npackage org.eclipse.texlipse.viewer.util;\n\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\n\nimport org.eclipse.texlipse.builder.BuilderRegistry;\n\n\n/**\n * A helper class to read the viewer error stream if an error occurs.\n * \n * @author Kimmo Karlsson\n */\n<fim_suffix>public class ViewerErrorScanner implements Runnable {\n\n    // the process to monitor\n    private Process process;\n\n    public ViewerErrorScanner(Process process) {\n        this.process = process;\n    }\n    \n    /**\n     * Wait for the program to exit and read the status.\n     */\n    public void run() {\n        \n        BufferedReader in = new BufferedReader(new InputStreamReader(process.getErrorStream()));\n        \n        ArrayList buffer = new ArrayList();\n        String tmp = null;\n        try {\n            \n            // read the error output stream lines before the program exits\n            // the stream is not available anymore after the program has exit\n            while ((tmp = in.readLine()) != null) {\n                buffer.add(tmp);\n            }\n            in.close();\n            \n        } catch (IOException e) {\n        }\n        \n        int exitCode = 0;\n        try {\n            exitCode = process.waitFor();\n        } catch (InterruptedException e) {\n        }\n\n        // if there was an error, the viewer exited with non-zero status\n        if (exitCode != 0) {\n            // print the error messages\n            for (int i = 0; i < buffer.size(); i++) {\n                tmp = (String) buffer.get(i);\n                BuilderRegistry.printToConsole(\"viewer> \" + tmp);\n            }\n        }\n    }\n}<fim_middle>// class below has no smell\n"}