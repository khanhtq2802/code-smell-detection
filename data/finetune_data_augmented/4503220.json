{"text": "<fim_prefix>/*\n * Licensed to the Apache Software Foundation (ASF) under one or more contributor license\n * agreements. See the NOTICE file distributed with this work for additional information regarding\n * copyright ownership. The ASF licenses this file to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance with the License. You may obtain a\n * copy of the License at\n * \n * http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n */\n\npackage org.apache.fluo.core.metrics;\n\nimport com.google.common.base.Preconditions;\nimport org.apache.fluo.api.config.FluoConfiguration;\n\n<fim_suffix>public class MetricNames {\n\n  public static final String METRICS_REPORTER_ID_PROP =\n      FluoConfiguration.FLUO_PREFIX + \".metrics.reporter.id\";\n\n  // Metrics prefixes for 'default' metrics\n  public static final String CLASS_PREFIX = FluoConfiguration.FLUO_PREFIX + \".class\";\n  public static final String SYSTEM_PREFIX = FluoConfiguration.FLUO_PREFIX + \".system\";\n\n  // Metrics prefix for 'application' metrics\n  public static final String APPLICATION_PREFIX = FluoConfiguration.FLUO_PREFIX + \".app\";\n\n  private final String txLockWaitTime;\n  private final String txExecTime;\n  private final String txWithCollision;\n  private final String txCollisions;\n  private final String txEntriesSet;\n  private final String txEntriesRead;\n  private final String txLocksTimedOut;\n  private final String txLocksDead;\n  private final String txStatusPrefix;\n  private final String txCommitting;\n\n  private final String notificationsQueued;\n\n  private final String oracleResponseTime;\n  private final String oracleClientStamps;\n  private final String oracleServerStamps;\n\n  public MetricNames(String metricsReporterId, String appName) {\n    Preconditions.checkArgument(!appName.contains(\".\"),\n        \"Fluo App name should not contain '.': \" + appName);\n    Preconditions.checkArgument(!metricsReporterId.contains(\".\"),\n        \"Metrics Reporter ID should not contain '.': \" + metricsReporterId);\n\n    // Metrics reported for a specific class\n    // FORMAT: fluo.class.APPLICATION.REPORTER_ID.METRIC.CLASS\n    final String classMetric = CLASS_PREFIX + \".\" + appName + \".\" + metricsReporterId + \".\";\n    txLockWaitTime = classMetric + \"tx_lock_wait_time\";\n    txExecTime = classMetric + \"tx_execution_time\";\n    txWithCollision = classMetric + \"tx_with_collision\";\n    txCollisions = classMetric + \"tx_collisions\";\n    txEntriesSet = classMetric + \"tx_entries_set\";\n    txEntriesRead = classMetric + \"tx_entries_read\";\n    txLocksTimedOut = classMetric + \"tx_locks_timedout\";\n    txLocksDead = classMetric + \"tx_locks_dead\";\n    txStatusPrefix = classMetric + \"tx_status_\"; // status appended to metric name\n\n    // System-wide metrics\n    // FORMAT: fluo.system.APPLICATION.REPORTER_ID.METRIC\n    final String systemMetric = SYSTEM_PREFIX + \".\" + appName + \".\" + metricsReporterId + \".\";\n    txCommitting = systemMetric + \"transactor_committing\";\n    notificationsQueued = systemMetric + \"worker_notifications_queued\";\n    oracleResponseTime = systemMetric + \"oracle_response_time\";\n    oracleClientStamps = systemMetric + \"oracle_client_stamps\";\n    oracleServerStamps = systemMetric + \"oracle_server_stamps\";\n  }\n\n  public String getTxLockWaitTime(String className) {\n    return txLockWaitTime + \".\" + className;\n  }\n\n  public String getTxExecTime(String className) {\n    return txExecTime + \".\" + className;\n  }\n\n  public String getTxWithCollision(String className) {\n    return txWithCollision + \".\" + className;\n  }\n\n  public String getTxCollisions(String className) {\n    return txCollisions + \".\" + className;\n  }\n\n  public String getTxEntriesSet(String className) {\n    return txEntriesSet + \".\" + className;\n  }\n\n  public String getTxEntriesRead(String className) {\n    return txEntriesRead + \".\" + className;\n  }\n\n  public String getTxLocksTimedout(String className) {\n    return txLocksTimedOut + \".\" + className;\n  }\n\n  public String getTxLocksDead(String className) {\n    return txLocksDead + \".\" + className;\n  }\n\n  public String getTxStatus(String status, String className) {\n    return txStatusPrefix + status + \".\" + className;\n  }\n\n  public String getNotificationQueued() {\n    return notificationsQueued;\n  }\n\n  public String getOracleResponseTime() {\n    return oracleResponseTime;\n  }\n\n  public String getOracleClientStamps() {\n    return oracleClientStamps;\n  }\n\n  public String getOracleServerStamps() {\n    return oracleServerStamps;\n  }\n\n  public String getCommitsProcessing() {\n    return txCommitting;\n  }\n}<fim_middle>// class below has no smell\n"}