{"text": "<fim_prefix>\n<fim_suffix>@SuppressWarnings(\"InlinedApi\")\npublic final class C {\n  private C() {}\n  /**\n   * Special constant representing a time corresponding to the end of a source. Suitable for use in\n   * any time base.\n   */\n  public static final long TIME_END_OF_SOURCE = Long.MIN_VALUE;\n  /**\n   * Special constant representing an unset or unknown time or duration. Suitable for use in any\n   * time base.\n   */\n  public static final long TIME_UNSET = Long.MIN_VALUE + 1;\n  /**\n   * Represents an unset or unknown index.\n   */\n  public static final int INDEX_UNSET = -1;\n  /**\n   * Represents an unset or unknown position.\n   */\n  public static final int POSITION_UNSET = -1;\n  /**\n   * Represents an unset or unknown length.\n   */\n  public static final int LENGTH_UNSET = -1;\n  /** Represents an unset or unknown percentage. */\n  public static final int PERCENTAGE_UNSET = -1;\n  /**\n   * The number of microseconds in one second.\n   */\n  public static final long MICROS_PER_SECOND = 1000000L;\n  /**\n   * The number of nanoseconds in one second.\n   */\n  public static final long NANOS_PER_SECOND = 1000000000L;\n  /** The number of bits per byte. */\n  public static final int BITS_PER_BYTE = 8;\n  /** The number of bytes per float. */\n  public static final int BYTES_PER_FLOAT = 4;\n  /**\n   * The name of the ASCII charset.\n   */\n  public static final String ASCII_NAME = \"US-ASCII\";\n  /**\n   * The name of the UTF-8 charset.\n   */\n  public static final String UTF8_NAME = \"UTF-8\";\n  /**\n   * The name of the UTF-16 charset.\n   */\n  public static final String UTF16_NAME = \"UTF-16\";\n  /**\n   * The name of the serif font family.\n   */\n  public static final String SERIF_NAME = \"serif\";\n  /**\n   * The name of the sans-serif font family.\n   */\n  public static final String SANS_SERIF_NAME = \"sans-serif\";\n  /**\n   * Crypto modes for a codec. One of {@link #CRYPTO_MODE_UNENCRYPTED}, {@link #CRYPTO_MODE_AES_CTR}\n   * or {@link #CRYPTO_MODE_AES_CBC}.\n   */\n  @Documented\n  @Retention(RetentionPolicy.SOURCE)\n  @IntDef({CRYPTO_MODE_UNENCRYPTED, CRYPTO_MODE_AES_CTR, CRYPTO_MODE_AES_CBC})\n  public @interface CryptoMode {}\n  /**\n   * @see MediaCodec#CRYPTO_MODE_UNENCRYPTED\n   */\n  public static final int CRYPTO_MODE_UNENCRYPTED = MediaCodec.CRYPTO_MODE_UNENCRYPTED;\n  /**\n   * @see MediaCodec#CRYPTO_MODE_AES_CTR\n   */\n  public static final int CRYPTO_MODE_AES_CTR = MediaCodec.CRYPTO_MODE_AES_CTR;\n  /**\n   * @see MediaCodec#CRYPTO_MODE_AES_CBC\n   */\n  public static final int CRYPTO_MODE_AES_CBC = MediaCodec.CRYPTO_MODE_AES_CBC;\n  /**\n   * Represents an unset {@link android.media.AudioTrack} session identifier. Equal to\n   * {@link AudioManager#AUDIO_SESSION_ID_GENERATE}.\n   */\n  public static final int AUDIO_SESSION_ID_UNSET = AudioManager.AUDIO_SESSION_ID_GENERATE;\n  /**\n   * Represents an audio encoding, or an invalid or unset value. One of {@link Format#NO_VALUE},\n   * {@link #ENCODING_INVALID}, {@link #ENCODING_PCM_8BIT}, {@link #ENCODING_PCM_16BIT}, {@link\n   * #ENCODING_PCM_24BIT}, {@link #ENCODING_PCM_32BIT}, {@link #ENCODING_PCM_FLOAT}, {@link\n   * #ENCODING_PCM_MU_LAW}, {@link #ENCODING_PCM_A_LAW}, {@link #ENCODING_AC3}, {@link\n   * #ENCODING_E_AC3}, {@link #ENCODING_DTS}, {@link #ENCODING_DTS_HD} or {@link\n   * #ENCODING_DOLBY_TRUEHD}.\n   */\n  @Documented\n  @Retention(RetentionPolicy.SOURCE)\n  @IntDef({\n    Format.NO_VALUE,\n    ENCODING_INVALID,\n    ENCODING_PCM_8BIT,\n    ENCODING_PCM_16BIT,\n    ENCODING_PCM_24BIT,\n    ENCODING_PCM_32BIT,\n    ENCODING_PCM_FLOAT,\n    ENCODING_PCM_MU_LAW,\n    ENCODING_PCM_A_LAW,\n    ENCODING_AC3,\n    ENCODING_E_AC3,\n    ENCODING_DTS,\n    ENCODING_DTS_HD,\n    ENCODING_DOLBY_TRUEHD\n  })\n  public @interface Encoding {}\n  /**\n   * Represents a PCM audio encoding, or an invalid or unset value. One of {@link Format#NO_VALUE},\n   * {@link #ENCODING_INVALID}, {@link #ENCODING_PCM_8BIT}, {@link #ENCODING_PCM_16BIT}, {@link\n   * #ENCODING_PCM_24BIT}, {@link #ENCODING_PCM_32BIT}, {@link #ENCODING_PCM_FLOAT}, {@link\n   * #ENCODING_PCM_MU_LAW} or {@link #ENCODING_PCM_A_LAW}.\n   */\n  @Documented\n  @Retention(RetentionPolicy.SOURCE)\n  @IntDef({\n    Format.NO_VALUE,\n    ENCODING_INVALID,\n    ENCODING_PCM_8BIT,\n    ENCODING_PCM_16BIT,\n    ENCODING_PCM_24BIT,\n    ENCODING_PCM_32BIT,\n    ENCODING_PCM_FLOAT,\n    ENCODING_PCM_MU_LAW,\n    ENCODING_PCM_A_LAW\n  })\n  public @interface PcmEncoding {}\n  /** @see AudioFormat#ENCODING_INVALID */\n  public static final int ENCODING_INVALID = AudioFormat.ENCODING_INVALID;\n  /** @see AudioFormat#ENCODING_PCM_8BIT */\n  public static final int ENCODING_PCM_8BIT = AudioFormat.ENCODING_PCM_8BIT;\n  /** @see AudioFormat#ENCODING_PCM_16BIT */\n  public static final int ENCODING_PCM_16BIT = AudioFormat.ENCODING_PCM_16BIT;\n  /** PCM encoding with 24 bits per sample. */\n  public static final int ENCODING_PCM_24BIT = 0x80000000;\n  /** PCM encoding with 32 bits per sample. */\n  public static final int ENCODING_PCM_32BIT = 0x40000000;\n  /** @see AudioFormat#ENCODING_PCM_FLOAT */\n  public static final int ENCODING_PCM_FLOAT = AudioFormat.ENCODING_PCM_FLOAT;\n  /** Audio encoding for mu-law. */\n  public static final int ENCODING_PCM_MU_LAW = 0x10000000;\n  /** Audio encoding for A-law. */\n  public static final int ENCODING_PCM_A_LAW = 0x20000000;\n  /** @see AudioFormat#ENCODING_AC3 */\n  public static final int ENCODING_AC3 = AudioFormat.ENCODING_AC3;\n  /** @see AudioFormat#ENCODING_E_AC3 */\n  public static final int ENCODING_E_AC3 = AudioFormat.ENCODING_E_AC3;\n  /** @see AudioFormat#ENCODING_DTS */\n  public static final int ENCODING_DTS = AudioFormat.ENCODING_DTS;\n  /** @see AudioFormat#ENCODING_DTS_HD */\n  public static final int ENCODING_DTS_HD = AudioFormat.ENCODING_DTS_HD;\n  /** @see AudioFormat#ENCODING_DOLBY_TRUEHD */\n  public static final int ENCODING_DOLBY_TRUEHD = AudioFormat.ENCODING_DOLBY_TRUEHD;\n  /**\n   * Stream types for an {@link android.media.AudioTrack}. One of {@link #STREAM_TYPE_ALARM}, {@link\n   * #STREAM_TYPE_DTMF}, {@link #STREAM_TYPE_MUSIC}, {@link #STREAM_TYPE_NOTIFICATION}, {@link\n   * #STREAM_TYPE_RING}, {@link #STREAM_TYPE_SYSTEM}, {@link #STREAM_TYPE_VOICE_CALL} or {@link\n   * #STREAM_TYPE_USE_DEFAULT}.\n   */\n  @Documented\n  @Retention(RetentionPolicy.SOURCE)\n  @IntDef({\n    STREAM_TYPE_ALARM,\n    STREAM_TYPE_DTMF,\n    STREAM_TYPE_MUSIC,\n    STREAM_TYPE_NOTIFICATION,\n    STREAM_TYPE_RING,\n    STREAM_TYPE_SYSTEM,<fim_middle>// class below has no smell\n"}