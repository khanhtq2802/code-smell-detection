{"text": "<fim_prefix>/*******************************************************************************\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n *******************************************************************************/\npackage org.apache.ofbiz.entity.jdbc;\n\nimport org.apache.ofbiz.base.util.Debug;\nimport org.apache.ofbiz.entity.config.model.EntityConfig;\nimport org.apache.ofbiz.entity.connection.ConnectionFactory;\n\n/**\n * ConnectionFactoryLoader - utility class that loads the connection manager and provides to client code a reference to it (ConnectionFactory)\n *\n */\n<fim_suffix>public class ConnectionFactoryLoader {\n    // Debug module name\n    public static final String module = ConnectionFactoryLoader.class.getName();\n    private static final ConnectionFactory connFactory = createConnectionFactory();\n\n    private static ConnectionFactory createConnectionFactory() {\n        ConnectionFactory instance = null;\n        try {\n            if (EntityConfig.getInstance().getConnectionFactory() == null) {\n                return null;\n            }\n            String className = EntityConfig.getInstance().getConnectionFactory().getClassName();\n            if (className == null) {\n                throw new IllegalStateException(\"Could not find connection factory class name definition\");\n            }\n            ClassLoader loader = Thread.currentThread().getContextClassLoader();\n            Class<?> tfClass = loader.loadClass(className);\n            instance = (ConnectionFactory) tfClass.newInstance();\n        } catch (ClassNotFoundException cnfe) {\n            Debug.logError(cnfe, \"Could not find connection factory class\", module);\n        } catch (Exception e) {\n            Debug.logError(e, \"Unable to instantiate the connection factory\", module);\n        }\n        return instance;\n    }\n\n    public static ConnectionFactory getInstance() {\n        if (connFactory == null) {\n            throw new IllegalStateException(\"The Connection Factory is not initialized.\");\n        }\n        return connFactory;\n    }\n}<fim_middle>// class below has no smell\n"}