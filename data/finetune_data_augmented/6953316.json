{"text": "<fim_prefix>/**\n * Copyright (c) 2016 NumberFour AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n * \n * Contributors:\n *   NumberFour AG - Initial API and implementation\n */\npackage org.eclipse.n4js.jsdoc.dom.impl;\n\nimport org.eclipse.emf.common.notify.Notification;\nimport org.eclipse.emf.common.notify.NotificationChain;\n\nimport org.eclipse.emf.ecore.EClass;\nimport org.eclipse.emf.ecore.InternalEObject;\n\nimport org.eclipse.emf.ecore.impl.ENotificationImpl;\n\nimport org.eclipse.emf.ecore.util.EcoreUtil;\n\nimport org.eclipse.n4js.jsdoc.dom.Composite;\nimport org.eclipse.n4js.jsdoc.dom.ContentNode;\nimport org.eclipse.n4js.jsdoc.dom.DomPackage;\n\n/**\n * <!-- begin-user-doc -->\n * An implementation of the model object '<em><b>Content Node</b></em>'.\n * <!-- end-user-doc -->\n * <p>\n * The following features are implemented:\n * </p>\n * <ul>\n *   <li>{@link org.eclipse.n4js.jsdoc.dom.impl.ContentNodeImpl#getOwner <em>Owner</em>}</li>\n * </ul>\n *\n * @generated\n */\npublic abstract class ContentNodeImpl extends JSDocNodeImpl implements ContentNode {\n\t/**\n\t * <!-- begin-user-doc -->\n\t * <!-- end-user-doc -->\n\t * @generated\n\t */\n\tprotected ContentNodeImpl() {\n\t\tsuper();\n\t}\n\n\t/**\n\t * <!-- begin-user-doc -->\n\t * <!-- end-user-doc -->\n\t * @generated\n\t */\n\t@Override\n\tprotected EClass eStaticClass() {\n\t\treturn DomPackage.Literals.CONTENT_NODE;\n\t}\n\n\t/**\n\t * <!-- begin-user-doc -->\n\t * <!-- end-user-doc -->\n\t * @generated\n\t */\n\tpublic Composite getOwner() {\n\t\tif (eContainerFeatureID() != DomPackage.CONTENT_NODE__OWNER) return null;\n\t\treturn (Composite)eContainer();\n\t}\n\n\t/**\n\t * <!-- begin-user-doc -->\n\t * <!-- end-user-doc -->\n\t * @generated\n\t */\n\tpublic Composite basicGetOwner() {\n\t\tif (eContainerFeatureID() != DomPackage.CONTENT_NODE__OWNER) return null;\n\t\treturn (Composite)eInternalContainer();\n\t}\n\n\t/**\n\t * <!-- begin-user-doc -->\n\t * <!-- end-user-doc -->\n\t * @generated\n\t */\n\tpublic NotificationChain basicSetOwner(Composite newOwner, NotificationChain msgs) {\n\t\tmsgs = eBasicSetContainer((InternalEObject)newOwner, DomPackage.CONTENT_NODE__OWNER, msgs);\n\t\treturn msgs;\n\t}\n\n\t/**\n\t * <!-- begin-user-doc -->\n\t * <!-- end-user-doc -->\n\t * @generated\n\t */\n\tpublic void setOwner(Composite newOwner) {\n\t\tif (newOwner != eInternalContainer() || (eContainerFeatureID() != DomPackage.CONTENT_NODE__OWNER && newOwner != null)) {\n\t\t\tif (EcoreUtil.isAncestor(this, newOwner))\n\t\t\t\tthrow new IllegalArgumentException(\"Recursive containment not allowed for \" + toString());\n\t\t\tNotificationChain msgs = null;\n\t\t\tif (eInternalContainer() != null)\n\t\t\t\tmsgs = eBasicRemoveFromContainer(msgs);\n\t\t\tif (newOwner != null)\n\t\t\t\tmsgs = ((InternalEObject)newOwner).eInverseAdd(this, DomPackage.COMPOSITE__CONTENTS, Composite.class, msgs);\n\t\t\tmsgs = basicSetOwner(newOwner, msgs);\n\t\t\tif (msgs != null) msgs.dispatch();\n\t\t}\n\t\telse if (eNotificationRequired())\n\t\t\teNotify(new ENotificationImpl(this, Notification.SET, DomPackage.CONTENT_NODE__OWNER, newOwner, newOwner));\n\t}\n\n\t/**\n\t * <!-- begin-user-doc -->\n\t * <!-- end-user-doc -->\n\t * @generated\n\t */\n\t@Override\n\tpublic NotificationChain eInverseAdd(InternalEObject otherEnd, int featureID, NotificationChain msgs) {\n\t\tswitch (featureID) {\n\t\t\tcase DomPackage.CONTENT_NODE__OWNER:\n\t\t\t\tif (eInternalContainer() != null)\n\t\t\t\t\tmsgs = eBasicRemoveFromContainer(msgs);\n\t\t\t\treturn basicSetOwner((Composite)otherEnd, msgs);\n\t\t}\n\t\treturn super.eInverseAdd(otherEnd, featureID, msgs);\n\t}\n\n\t/**\n\t * <!-- begin-user-doc -->\n\t * <!-- end-user-doc -->\n\t * @generated\n\t */\n\t@Override\n\tpublic NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs) {\n\t\tswitch (featureID) {\n\t\t\tcase DomPackage.CONTENT_NODE__OWNER:\n\t\t\t\treturn basicSetOwner(null, msgs);\n\t\t}\n\t\treturn super.eInverseRemove(otherEnd, featureID, msgs);\n\t}\n\n\t/**\n\t * <!-- begin-user-doc -->\n\t * <!-- end-user-doc -->\n\t * @generated\n\t */\n\t@Override\n\tpublic NotificationChain eBasicRemoveFromContainerFeature(NotificationChain msgs) {\n\t\tswitch (eContainerFeatureID()) {\n\t\t\tcase DomPackage.CONTENT_NODE__OWNER:\n\t\t\t\treturn eInternalContainer().eInverseRemove(this, DomPackage.COMPOSITE__CONTENTS, Composite.class, msgs);\n\t\t}\n\t\treturn super.eBasicRemoveFromContainerFeature(msgs);\n\t}\n\n\t/**\n\t * <!-- begin-user-doc -->\n\t * <!-- end-user-doc -->\n\t * @generated\n\t */\n\t@Override\n\tpublic Object eGet(int featureID, boolean resolve, boolean coreType) {\n\t\tswitch (featureID) {\n\t\t\tcase DomPackage.CONTENT_NODE__OWNER:\n\t\t\t\tif (resolve) return getOwner();\n\t\t\t\treturn basicGetOwner();\n\t\t}\n\t\treturn super.eGet(featureID, resolve, coreType);\n\t}\n\n\t/**\n\t * <!-- begin-user-doc -->\n\t * <!-- end-user-doc -->\n\t * @generated\n\t */\n<fim_suffix>\t@Override\n\tpublic void eSet(int featureID, Object newValue) {\n\t\tswitch (featureID) {\n\t\t\tcase DomPackage.CONTENT_NODE__OWNER:\n\t\t\t\tsetOwner((Composite)newValue);\n\t\t\t\treturn;\n\t\t}\n\t\tsuper.eSet(featureID, newValue);\n\t}\n\n\t/**\n\t * <!-- begin-user-doc -->\n\t * <!-- end-user-doc -->\n\t * @generated\n\t */\n\t@Override\n\tpublic void eUnset(int featureID) {\n\t\tswitch (featureID) {\n\t\t\tcase DomPackage.CONTENT_NODE__OWNER:\n\t\t\t\tsetOwner((Composite)null);\n\t\t\t\treturn;\n\t\t}\n\t\tsuper.eUnset(featureID);\n\t}\n\n\t/**\n\t * <!-- begin-user-doc -->\n\t * <!-- end-user-doc -->\n\t * @generated\n\t */\n\t@Override\n\tpublic boolean eIsSet(int featureID) {\n\t\tswitch (featureID) {\n\t\t\tcase DomPackage.CONTENT_NODE__OWNER:\n\t\t\t\treturn basicGetOwner() != null;\n\t\t}\n\t\treturn super.eIsSet(featureID);\n\t}\n\n} //ContentNodeImpl<fim_middle>// function below has no smell\n"}