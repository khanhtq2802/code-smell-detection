{"text": "<fim_prefix>/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\npackage org.apache.syncope.core.persistence.jpa.entity.user;\n\nimport javax.persistence.Entity;\nimport javax.persistence.FetchType;\nimport javax.persistence.ManyToOne;\nimport javax.persistence.Table;\nimport javax.persistence.UniqueConstraint;\nimport org.apache.syncope.core.persistence.api.entity.MembershipType;\nimport org.apache.syncope.core.persistence.api.entity.RelationshipType;\nimport org.apache.syncope.core.persistence.api.entity.anyobject.AnyObject;\nimport org.apache.syncope.core.persistence.api.entity.user.URelationship;\nimport org.apache.syncope.core.persistence.api.entity.user.User;\nimport org.apache.syncope.core.persistence.jpa.entity.AbstractGeneratedKeyEntity;\nimport org.apache.syncope.core.persistence.jpa.entity.JPARelationshipType;\nimport org.apache.syncope.core.persistence.jpa.entity.anyobject.JPAAnyObject;\n\n<fim_suffix>@Entity\n@Table(name = JPAURelationship.TABLE, uniqueConstraints =\n        @UniqueConstraint(columnNames = { \"type_id\", \"user_id\", \"anyObject_id\" }))\npublic class JPAURelationship extends AbstractGeneratedKeyEntity implements URelationship {\n\n    private static final long serialVersionUID = 2778494939240083204L;\n\n    public static final String TABLE = \"URelationship\";\n\n    @ManyToOne(fetch = FetchType.EAGER, optional = false)\n    private JPARelationshipType type;\n\n    private User leftEnd;\n\n    private AnyObject rightEnd;\n\n    @Override\n    public RelationshipType getType() {\n        return type;\n    }\n\n    @Override\n    public void setType(final RelationshipType type) {\n        if (MembershipType.getInstance().getKey().equalsIgnoreCase(type.getKey())) {\n            throw new IllegalArgumentException(\"This is not a membership\");\n        }\n        checkType(type, JPARelationshipType.class);\n        this.type = (JPARelationshipType) type;\n    }\n\n    @Override\n    public User getLeftEnd() {\n        return leftEnd;\n    }\n\n    @Override\n    public void setLeftEnd(final User leftEnd) {\n        checkType(leftEnd, JPAUser.class);\n        this.leftEnd = (JPAUser) leftEnd;\n    }\n\n    @Override\n    public AnyObject getRightEnd() {\n        return rightEnd;\n    }\n\n    @Override\n    public void setRightEnd(final AnyObject rightEnd) {\n        checkType(rightEnd, JPAAnyObject.class);\n        this.rightEnd = (JPAAnyObject) rightEnd;\n    }\n}<fim_middle>// class below has no smell\n"}