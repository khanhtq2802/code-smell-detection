{"text": "<fim_prefix>        response.setCmsId(resourceConfiguration.nuageVspCmsId());\n        response.setObjectName(\"nuagevspdevice\");\n        return response;\n    }\n    @Override\n    public boolean deleteNuageVspDevice(DeleteNuageVspDeviceCmd cmd) {\n        Long nuageDeviceId = cmd.getNuageVspDeviceId();\n        NuageVspDeviceVO nuageVspDevice = _nuageVspDao.findById(nuageDeviceId);\n        if (nuageVspDevice == null) {\n            throw new InvalidParameterValueException(\"Could not find a Nuage Vsp device with id \" + nuageDeviceId);\n        }\n        // Find the physical network we work for\n        Long physicalNetworkId = nuageVspDevice.getPhysicalNetworkId();\n        PhysicalNetworkVO physicalNetwork = _physicalNetworkDao.findById(physicalNetworkId);\n        if (physicalNetwork != null) {\n            // Lets see if there are networks that use us\n            // Find the nuage networks on this physical network\n            List<NetworkVO> networkList = _networkDao.listByPhysicalNetwork(physicalNetworkId);\n            // Networks with broadcast type lswitch are ours\n            for (NetworkVO network : networkList) {\n                if (network.getBroadcastDomainType() == Networks.BroadcastDomainType.Vsp) {\n                    if ((network.getState() != Network.State.Shutdown) && (network.getState() != Network.State.Destroy)) {\n                        throw new CloudRuntimeException(\"This Nuage Vsp device can not be deleted as there are one or more logical networks provisioned by Cloudstack.\");\n                    }\n                }\n            }\n        }\n        NuageVspDeviceVO matchingNuageVspDevice = findMatchingNuageVspDevice(nuageVspDevice);\n        String nuageVspCmsId = findNuageVspCmsIdForDeviceOrHost(nuageVspDevice.getId(), nuageVspDevice.getHostId());\n        if (matchingNuageVspDevice == null) {\n            HostVO host = findNuageVspHost(nuageVspDevice.getHostId());\n            if (!auditDomainsOnVsp(host, false)) {\n                return false;\n            }\n            SyncNuageVspCmsIdCommand syncCmd = new SyncNuageVspCmsIdCommand(SyncType.UNREGISTER, nuageVspCmsId);\n            SyncNuageVspCmsIdAnswer answer = (SyncNuageVspCmsIdAnswer) _agentMgr.easySend(nuageVspDevice.getHostId(), syncCmd);\n            if (answer == null || !answer.getSuccess()) {\n                return false;\n            }\n        }\n        removeLegacyNuageVspDeviceCmsId(nuageVspDevice.getId());\n        HostVO nuageHost = _hostDao.findById(nuageVspDevice.getHostId());\n        Long hostId = nuageHost.getId();\n        nuageHost.setResourceState(ResourceState.Maintenance);\n        _hostDao.update(hostId, nuageHost);\n        _resourceMgr.deleteHost(hostId, false, false);\n        _nuageVspDao.remove(nuageDeviceId);\n        return true;\n    }\n    private NuageVspDeviceVO findMatchingNuageVspDevice(NuageVspDeviceVO nuageVspDevice) {\n        DetailVO nuageVspDeviceHost =  _hostDetailsDao.findDetail(nuageVspDevice.getHostId(), \"hostname\");\n        String nuageVspDeviceHostName = (nuageVspDeviceHost != null) ? nuageVspDeviceHost.getValue(): null;\n        List<NuageVspDeviceVO> otherNuageVspDevices = _nuageVspDao.listAll();\n        for (NuageVspDeviceVO otherNuageVspDevice : otherNuageVspDevices) {\n            if (otherNuageVspDevice.getId() == nuageVspDevice.getId()) continue;\n            DetailVO otherNuageVspDeviceHostName = _hostDetailsDao.findDetail(otherNuageVspDevice.getHostId(), \"hostname\");\n            if (otherNuageVspDeviceHostName != null && nuageVspDeviceHostName.equals(otherNuageVspDeviceHostName.getValue())) {\n                return otherNuageVspDevice;\n            }\n        }\n        return null;\n    }\n    @Override\n    public List<NuageVspDeviceVO> listNuageVspDevices(ListNuageVspDevicesCmd cmd) {\n        Long physicalNetworkId = cmd.getPhysicalNetworkId();\n        Long nuageVspDeviceId = cmd.getNuageVspDeviceId();\n        List<NuageVspDeviceVO> responseList = new ArrayList<NuageVspDeviceVO>();\n        if (physicalNetworkId == null && nuageVspDeviceId == null) {\n            throw new InvalidParameterValueException(\"Either physical network Id or Nuage device Id must be specified\");\n        }\n        if (nuageVspDeviceId != null) {\n            NuageVspDeviceVO nuageVspDevice = _nuageVspDao.findById(nuageVspDeviceId);\n            if (nuageVspDevice == null) {\n                throw new InvalidParameterValueException(\"Could not find Nuage Vsp device with id: \" + nuageVspDeviceId);\n            }\n            responseList.add(nuageVspDevice);\n        } else {\n            PhysicalNetworkVO physicalNetwork = _physicalNetworkDao.findById(physicalNetworkId);\n            if (physicalNetwork == null) {\n                throw new InvalidParameterValueException(\"Could not find a physical network with id: \" + physicalNetworkId);\n            }\n            responseList = _nuageVspDao.listByPhysicalNetwork(physicalNetworkId);\n        }\n        return responseList;\n    }\n    private void registerNewNuageVspDevice(long hostId, String cmsId) {\n        DetailVO detail = new DetailVO(hostId, \"nuagevspcmsid\", cmsId);\n        _hostDetailsDao.persist(detail);\n    }\n    @Deprecated\n    private void removeLegacyNuageVspDeviceCmsId(long deviceId) {\n        ConfigurationVO cmsIdConfig = _configDao.findByName(CMSID_CONFIG_KEY);\n        if (cmsIdConfig != null) {\n            if (!cmsIdConfig.getValue().contains(\";\") && cmsIdConfig.getValue().startsWith(deviceId + \":\")) {\n                _configDao.update(CMSID_CONFIG_KEY, \"Advanced\", \"\");\n            } else {\n                String newValue = cmsIdConfig.getValue().replace(String.format(\"(^|;)%d:[0-9a-f\\\\-]+;?\", deviceId), \";\");\n                _configDao.update(CMSID_CONFIG_KEY, \"Advanced\", newValue);\n            }\n        }\n    }\n<fim_suffix>    public boolean executeSyncCmsId(NuageVspDeviceVO nuageVspDevice, SyncType syncType) {\n        NuageVspDeviceVO matchingNuageVspDevice = findMatchingNuageVspDevice(nuageVspDevice);\n        if (syncType == SyncType.REGISTER && matchingNuageVspDevice != null) {\n            String cmsId = findNuageVspCmsIdForDeviceOrHost(matchingNuageVspDevice.getId(), matchingNuageVspDevice.getHostId());\n            registerNewNuageVspDevice(nuageVspDevice.getHostId(), cmsId);\n            return true;\n        }\n        String cmsId = findNuageVspCmsIdForDeviceOrHost(nuageVspDevice.getId(), nuageVspDevice.getHostId());\n        SyncNuageVspCmsIdCommand syncCmd = new SyncNuageVspCmsIdCommand(syncType, cmsId);\n        SyncNuageVspCmsIdAnswer answer = (SyncNuageVspCmsIdAnswer) _agentMgr.easySend(nuageVspDevice.getHostId(), syncCmd);\n        if (answer != null) {\n            if (answer.getSuccess()) {\n                if (syncType == SyncType.REGISTER || answer.getSyncType() == SyncType.REGISTER) {\n                    registerNewNuageVspDevice(nuageVspDevice.getHostId(), answer.getNuageVspCmsId());\n                } else if (syncType == SyncType.UNREGISTER) {\n                    removeLegacyNuageVspDeviceCmsId(nuageVspDevice.getId());\n                }\n            } else if (syncType == SyncType.AUDIT || syncType == SyncType.AUDIT_ONLY) {\n                s_logger.fatal(\"Nuage VSP Device with ID \" + nuageVspDevice.getId() + \" is configured with an unknown CMS ID!\");\n            }\n        }\n        return answer != null && answer.getSuccess();\n    }<fim_middle>// function below is long method and feature envy\n"}