{"text": "<fim_prefix>/*******************************************************************************\n * Copyright (c) 2012, 2018 itemis AG (http://www.itemis.eu) and others.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *******************************************************************************/\npackage org.eclipse.xtext.xbase.ui.launching;\n\nimport org.apache.log4j.Logger;\nimport org.eclipse.core.resources.IFile;\nimport org.eclipse.core.runtime.NullProgressMonitor;\nimport org.eclipse.jdt.core.IAnnotation;\nimport org.eclipse.jdt.core.ICompilationUnit;\nimport org.eclipse.jdt.core.IJavaElement;\nimport org.eclipse.jdt.core.IMethod;\nimport org.eclipse.jdt.core.IType;\nimport org.eclipse.jdt.core.ITypeHierarchy;\nimport org.eclipse.jdt.core.JavaCore;\nimport org.eclipse.jdt.core.JavaModelException;\nimport org.eclipse.jdt.core.Signature;\nimport org.eclipse.jdt.core.dom.Modifier;\n\npublic class JavaElementDelegateJunitLaunch extends JavaElementDelegate {\n\t\n\tprivate final static Logger log = Logger.getLogger(JavaElementDelegateJunitLaunch.class);\n\t\n\t@Override\n\tprotected boolean containsElementsSearchedFor(IFile file) {\n\t\tIJavaElement element = JavaCore.create(file);\n\t\tif (element == null || !element.exists() || ! (element instanceof ICompilationUnit)) {\n\t\t\treturn false;\n\t\t}\n\t\ttry {\n\t\t\tICompilationUnit cu = (ICompilationUnit) element;\n\t\t\t\n\t\t\tIType[] allTypes = cu.getAllTypes();\n\t\t\t\n\t\t\tfor (IType type : allTypes) {\n\t\t\t\tif(containsJUnitTestMethod(type)) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tfor (IType type : allTypes) {\n\t\t\t\tfor(IType superType : getAllSuperTypes(type)) {\n\t\t\t\t\tif(containsJUnitTestMethod(superType)) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t} catch (JavaModelException e) {\n\t\t\tlog.error(e.getMessage() ,e);\n\t\t}\n\t\treturn super.containsElementsSearchedFor(file);\n\t}\n\t\n\tprotected boolean containsJUnitTestMethod(IType type) throws JavaModelException {\n\t\tfor (IMethod method : type.getMethods()) {\n\t\t\tint flags = method.getFlags();\n\t\t\tif (Modifier.isPublic(flags) && !Modifier.isStatic(flags) &&\n\t\t\t\t\tmethod.getNumberOfParameters() == 0 && Signature.SIG_VOID.equals(method.getReturnType()) &&\n\t\t\t\t\tmethod.getElementName().startsWith(\"test\")) { //$NON-NLS-1$\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tIAnnotation annotation= method.getAnnotation(\"Test\"); //$NON-NLS-1$\n\t\t\tif (annotation.exists())\n\t\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\t\n<fim_suffix>\tprotected IType[] getAllSuperTypes(IType type) throws JavaModelException {\n\t\t/*\n\t\t * https://stackoverflow.com/questions/49611587/developing-a-eclipse-how-to-get-all-inherited-methods-from-a-icompilationunit\n\t\t */\n\t\tITypeHierarchy th = type.newTypeHierarchy(new NullProgressMonitor());\n\t\tIType[] superTypes = th.getAllSuperclasses(type);\n\t\treturn superTypes;\n\t}\n}<fim_middle>// function below has no smell\n"}