{"text": "<fim_prefix>      if (!(this_present_resourcePlanName && that_present_resourcePlanName))\n        return false;\n      if (!this.resourcePlanName.equals(that.resourcePlanName))\n        return false;\n    }\n    boolean this_present_poolPath = true && this.isSetPoolPath();\n    boolean that_present_poolPath = true && that.isSetPoolPath();\n    if (this_present_poolPath || that_present_poolPath) {\n      if (!(this_present_poolPath && that_present_poolPath))\n        return false;\n      if (!this.poolPath.equals(that.poolPath))\n        return false;\n    }\n    boolean this_present_ns = true && this.isSetNs();\n    boolean that_present_ns = true && that.isSetNs();\n    if (this_present_ns || that_present_ns) {\n      if (!(this_present_ns && that_present_ns))\n        return false;\n      if (!this.ns.equals(that.ns))\n        return false;\n    }\n    return true;\n  }\n  @Override\n  public int hashCode() {\n    List<Object> list = new ArrayList<Object>();\n    boolean present_resourcePlanName = true && (isSetResourcePlanName());\n    list.add(present_resourcePlanName);\n    if (present_resourcePlanName)\n      list.add(resourcePlanName);\n    boolean present_poolPath = true && (isSetPoolPath());\n    list.add(present_poolPath);\n    if (present_poolPath)\n      list.add(poolPath);\n    boolean present_ns = true && (isSetNs());\n    list.add(present_ns);\n    if (present_ns)\n      list.add(ns);\n    return list.hashCode();\n  }\n  @Override\n  public int compareTo(WMDropPoolRequest other) {\n    if (!getClass().equals(other.getClass())) {\n      return getClass().getName().compareTo(other.getClass().getName());\n    }\n    int lastComparison = 0;\n    lastComparison = Boolean.valueOf(isSetResourcePlanName()).compareTo(other.isSetResourcePlanName());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetResourcePlanName()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.resourcePlanName, other.resourcePlanName);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = Boolean.valueOf(isSetPoolPath()).compareTo(other.isSetPoolPath());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetPoolPath()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.poolPath, other.poolPath);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = Boolean.valueOf(isSetNs()).compareTo(other.isSetNs());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetNs()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.ns, other.ns);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    return 0;\n  }\n  public _Fields fieldForId(int fieldId) {\n    return _Fields.findByThriftId(fieldId);\n  }\n  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {\n    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);\n  }\n  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {\n    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);\n  }\n  @Override\n  public String toString() {\n    StringBuilder sb = new StringBuilder(\"WMDropPoolRequest(\");\n    boolean first = true;\n    if (isSetResourcePlanName()) {\n      sb.append(\"resourcePlanName:\");\n      if (this.resourcePlanName == null) {\n        sb.append(\"null\");\n      } else {\n        sb.append(this.resourcePlanName);\n      }\n      first = false;\n    }\n    if (isSetPoolPath()) {\n      if (!first) sb.append(\", \");\n      sb.append(\"poolPath:\");\n      if (this.poolPath == null) {\n        sb.append(\"null\");\n      } else {\n        sb.append(this.poolPath);\n      }\n      first = false;\n    }\n    if (isSetNs()) {\n      if (!first) sb.append(\", \");\n      sb.append(\"ns:\");\n      if (this.ns == null) {\n        sb.append(\"null\");\n      } else {\n        sb.append(this.ns);\n      }\n      first = false;\n    }\n    sb.append(\")\");\n    return sb.toString();\n  }\n  public void validate() throws org.apache.thrift.TException {\n    // check for required fields\n    // check for sub-struct validity\n  }\n  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {\n    try {\n      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));\n    } catch (org.apache.thrift.TException te) {\n      throw new java.io.IOException(te);\n    }\n  }\n  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {\n    try {\n      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));\n    } catch (org.apache.thrift.TException te) {\n      throw new java.io.IOException(te);\n    }\n  }\n  private static class WMDropPoolRequestStandardSchemeFactory implements SchemeFactory {\n    public WMDropPoolRequestStandardScheme getScheme() {\n      return new WMDropPoolRequestStandardScheme();\n    }\n  }\n  private static class WMDropPoolRequestStandardScheme extends StandardScheme<WMDropPoolRequest> {\n    public void read(org.apache.thrift.protocol.TProtocol iprot, WMDropPoolRequest struct) throws org.apache.thrift.TException {\n      org.apache.thrift.protocol.TField schemeField;\n      iprot.readStructBegin();\n      while (true)\n      {\n        schemeField = iprot.readFieldBegin();\n        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { \n          break;\n        }\n        switch (schemeField.id) {\n          case 1: // RESOURCE_PLAN_NAME\n            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {\n              struct.resourcePlanName = iprot.readString();\n              struct.setResourcePlanNameIsSet(true);\n            } else { \n              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);\n            }\n            break;\n          case 2: // POOL_PATH\n            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {\n              struct.poolPath = iprot.readString();\n              struct.setPoolPathIsSet(true);\n            } else { \n              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);\n            }\n            break;\n          case 3: // NS\n            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {\n              struct.ns = iprot.readString();\n              struct.setNsIsSet(true);\n            } else { \n              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);\n            }\n            break;\n          default:\n            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);\n        }\n        iprot.readFieldEnd();\n      }\n      iprot.readStructEnd();\n      struct.validate();\n    }\n    public void write(org.apache.thrift.protocol.TProtocol oprot, WMDropPoolRequest struct) throws org.apache.thrift.TException {\n      struct.validate();\n      oprot.writeStructBegin(STRUCT_DESC);\n      if (struct.resourcePlanName != null) {\n        if (struct.isSetResourcePlanName()) {\n          oprot.writeFieldBegin(RESOURCE_PLAN_NAME_FIELD_DESC);\n          oprot.writeString(struct.resourcePlanName);\n          oprot.writeFieldEnd();\n        }\n      }\n      if (struct.poolPath != null) {\n        if (struct.isSetPoolPath()) {\n          oprot.writeFieldBegin(POOL_PATH_FIELD_DESC);\n          oprot.writeString(struct.poolPath);\n          oprot.writeFieldEnd();\n        }\n      }\n      if (struct.ns != null) {\n        if (struct.isSetNs()) {\n          oprot.writeFieldBegin(NS_FIELD_DESC);\n          oprot.writeString(struct.ns);\n          oprot.writeFieldEnd();\n        }\n      }\n      oprot.writeFieldStop();\n      oprot.writeStructEnd();\n    }\n  }\n  private static class WMDropPoolRequestTupleSchemeFactory implements SchemeFactory {\n<fim_suffix>    public WMDropPoolRequestTupleScheme getScheme() {\n      return new WMDropPoolRequestTupleScheme();\n    }<fim_middle>// function below has no smell\n"}