{"text": "<fim_prefix>    private static final org.apache.thrift.protocol.TField UPDATES_FIELD_DESC = new org.apache.thrift.protocol.TField(\"updates\", org.apache.thrift.protocol.TType.MAP, (short)2);\n    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new updateRowsConditionally_argsStandardSchemeFactory();\n    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new updateRowsConditionally_argsTupleSchemeFactory();\n    public @org.apache.thrift.annotation.Nullable java.lang.String conditionalWriter; // required\n    public @org.apache.thrift.annotation.Nullable java.util.Map<java.nio.ByteBuffer,ConditionalUpdates> updates; // required\n    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */\n    public enum _Fields implements org.apache.thrift.TFieldIdEnum {\n      CONDITIONAL_WRITER((short)1, \"conditionalWriter\"),\n      UPDATES((short)2, \"updates\");\n      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();\n      static {\n        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {\n          byName.put(field.getFieldName(), field);\n        }\n      }\n      /**\n       * Find the _Fields constant that matches fieldId, or null if its not found.\n       */\n      @org.apache.thrift.annotation.Nullable\n      public static _Fields findByThriftId(int fieldId) {\n        switch(fieldId) {\n          case 1: // CONDITIONAL_WRITER\n            return CONDITIONAL_WRITER;\n          case 2: // UPDATES\n            return UPDATES;\n          default:\n            return null;\n        }\n      }\n      /**\n       * Find the _Fields constant that matches fieldId, throwing an exception\n       * if it is not found.\n       */\n      public static _Fields findByThriftIdOrThrow(int fieldId) {\n        _Fields fields = findByThriftId(fieldId);\n        if (fields == null) throw new java.lang.IllegalArgumentException(\"Field \" + fieldId + \" doesn't exist!\");\n        return fields;\n      }\n      /**\n       * Find the _Fields constant that matches name, or null if its not found.\n       */\n      @org.apache.thrift.annotation.Nullable\n      public static _Fields findByName(java.lang.String name) {\n        return byName.get(name);\n      }\n      private final short _thriftId;\n      private final java.lang.String _fieldName;\n      _Fields(short thriftId, java.lang.String fieldName) {\n        _thriftId = thriftId;\n        _fieldName = fieldName;\n      }\n      public short getThriftFieldId() {\n        return _thriftId;\n      }\n      public java.lang.String getFieldName() {\n        return _fieldName;\n      }\n    }\n    // isset id assignments\n    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;\n    static {\n      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);\n      tmpMap.put(_Fields.CONDITIONAL_WRITER, new org.apache.thrift.meta_data.FieldMetaData(\"conditionalWriter\", org.apache.thrift.TFieldRequirementType.DEFAULT, \n          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));\n      tmpMap.put(_Fields.UPDATES, new org.apache.thrift.meta_data.FieldMetaData(\"updates\", org.apache.thrift.TFieldRequirementType.DEFAULT, \n          new org.apache.thrift.meta_data.MapMetaData(org.apache.thrift.protocol.TType.MAP, \n              new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING              , true), \n              new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, ConditionalUpdates.class))));\n      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);\n      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(updateRowsConditionally_args.class, metaDataMap);\n    }\n    public updateRowsConditionally_args() {\n    }\n    public updateRowsConditionally_args(\n      java.lang.String conditionalWriter,\n      java.util.Map<java.nio.ByteBuffer,ConditionalUpdates> updates)\n    {\n      this();\n      this.conditionalWriter = conditionalWriter;\n      this.updates = updates;\n    }\n    /**\n     * Performs a deep copy on <i>other</i>.\n     */\n    public updateRowsConditionally_args(updateRowsConditionally_args other) {\n      if (other.isSetConditionalWriter()) {\n        this.conditionalWriter = other.conditionalWriter;\n      }\n      if (other.isSetUpdates()) {\n        java.util.Map<java.nio.ByteBuffer,ConditionalUpdates> __this__updates = new java.util.HashMap<java.nio.ByteBuffer,ConditionalUpdates>(other.updates.size());\n        for (java.util.Map.Entry<java.nio.ByteBuffer, ConditionalUpdates> other_element : other.updates.entrySet()) {\n          java.nio.ByteBuffer other_element_key = other_element.getKey();\n          ConditionalUpdates other_element_value = other_element.getValue();\n          java.nio.ByteBuffer __this__updates_copy_key = org.apache.thrift.TBaseHelper.copyBinary(other_element_key);\n          ConditionalUpdates __this__updates_copy_value = new ConditionalUpdates(other_element_value);\n          __this__updates.put(__this__updates_copy_key, __this__updates_copy_value);\n        }\n        this.updates = __this__updates;\n      }\n    }\n    public updateRowsConditionally_args deepCopy() {\n      return new updateRowsConditionally_args(this);\n    }\n    @Override\n    public void clear() {\n      this.conditionalWriter = null;\n      this.updates = null;\n    }\n    @org.apache.thrift.annotation.Nullable\n    public java.lang.String getConditionalWriter() {\n      return this.conditionalWriter;\n    }\n    public updateRowsConditionally_args setConditionalWriter(@org.apache.thrift.annotation.Nullable java.lang.String conditionalWriter) {\n      this.conditionalWriter = conditionalWriter;\n      return this;\n    }\n    public void unsetConditionalWriter() {\n      this.conditionalWriter = null;\n    }\n    /** Returns true if field conditionalWriter is set (has been assigned a value) and false otherwise */\n    public boolean isSetConditionalWriter() {\n      return this.conditionalWriter != null;\n    }\n    public void setConditionalWriterIsSet(boolean value) {\n      if (!value) {\n        this.conditionalWriter = null;\n      }\n    }\n    public int getUpdatesSize() {\n      return (this.updates == null) ? 0 : this.updates.size();\n    }\n    public void putToUpdates(java.nio.ByteBuffer key, ConditionalUpdates val) {\n      if (this.updates == null) {\n        this.updates = new java.util.HashMap<java.nio.ByteBuffer,ConditionalUpdates>();\n      }\n      this.updates.put(key, val);\n    }\n    @org.apache.thrift.annotation.Nullable\n    public java.util.Map<java.nio.ByteBuffer,ConditionalUpdates> getUpdates() {\n      return this.updates;\n    }\n    public updateRowsConditionally_args setUpdates(@org.apache.thrift.annotation.Nullable java.util.Map<java.nio.ByteBuffer,ConditionalUpdates> updates) {\n      this.updates = updates;\n      return this;\n    }\n    public void unsetUpdates() {\n      this.updates = null;\n    }\n    /** Returns true if field updates is set (has been assigned a value) and false otherwise */\n    public boolean isSetUpdates() {\n      return this.updates != null;\n    }\n    public void setUpdatesIsSet(boolean value) {\n      if (!value) {\n        this.updates = null;\n      }\n    }\n    public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {\n      switch (field) {\n      case CONDITIONAL_WRITER:\n        if (value == null) {\n          unsetConditionalWriter();\n        } else {\n          setConditionalWriter((java.lang.String)value);\n        }\n        break;\n      case UPDATES:\n        if (value == null) {\n          unsetUpdates();\n        } else {\n          setUpdates((java.util.Map<java.nio.ByteBuffer,ConditionalUpdates>)value);\n        }\n        break;\n      }\n    }\n<fim_suffix>    @org.apache.thrift.annotation.Nullable\n    public java.lang.Object getFieldValue(_Fields field) {\n      switch (field) {\n      case CONDITIONAL_WRITER:\n        return getConditionalWriter();\n      case UPDATES:\n        return getUpdates();\n      }\n      throw new java.lang.IllegalStateException();\n    }<fim_middle>// function below has no smell\n"}