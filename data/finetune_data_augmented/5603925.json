{"text": "<fim_prefix>\n<fim_suffix>public class HSSFSimpleShape extends HSSFShape implements SimpleShape\n{\n    // The commented out ones haven't been tested yet or aren't supported\n    // by HSSFSimpleShape.\n    public final static short       OBJECT_TYPE_LINE               = HSSFShapeTypes.Line;\n    public final static short       OBJECT_TYPE_RECTANGLE          = HSSFShapeTypes.Rectangle;\n    public final static short       OBJECT_TYPE_OVAL               = HSSFShapeTypes.Ellipse;\n    public final static short       OBJECT_TYPE_ARC                = HSSFShapeTypes.Arc;\n    //    public final static short       OBJECT_TYPE_CHART              = 5;\n//    public final static short       OBJECT_TYPE_TEXT               = 6;\n//    public final static short       OBJECT_TYPE_BUTTON             = 7;\n    public final static short       OBJECT_TYPE_PICTURE            = HSSFShapeTypes.PictureFrame;\n//    public final static short       OBJECT_TYPE_POLYGON            = 9;\n//    public final static short       OBJECT_TYPE_CHECKBOX           = 11;\n//    public final static short       OBJECT_TYPE_OPTION_BUTTON      = 12;\n//    public final static short       OBJECT_TYPE_EDIT_BOX           = 13;\n//    public final static short       OBJECT_TYPE_LABEL              = 14;\n//    public final static short       OBJECT_TYPE_DIALOG_BOX         = 15;\n//    public final static short       OBJECT_TYPE_SPINNER            = 16;\n//    public final static short       OBJECT_TYPE_SCROLL_BAR         = 17;\n//    public final static short       OBJECT_TYPE_LIST_BOX           = 18;\n//    public final static short       OBJECT_TYPE_GROUP_BOX          = 19;\n    public final static short       OBJECT_TYPE_COMBO_BOX          = HSSFShapeTypes.HostControl;\n    public final static short       OBJECT_TYPE_COMMENT            = HSSFShapeTypes.TextBox;\n    public final static short       OBJECT_TYPE_MICROSOFT_OFFICE_DRAWING = 30;\n    public final static int WRAP_SQUARE = 0;\n    public final static int WRAP_BY_POINTS = 1;\n    public final static int WRAP_NONE = 2;\n    private TextObjectRecord _textObjectRecord;\n    public HSSFSimpleShape(EscherContainerRecord spContainer, ObjRecord objRecord, TextObjectRecord textObjectRecord) {\n        super(spContainer, objRecord);\n        this._textObjectRecord = textObjectRecord;\n    }\n    public HSSFSimpleShape(EscherContainerRecord spContainer, ObjRecord objRecord) {\n        super(spContainer, objRecord);\n    }\n    public HSSFSimpleShape( HSSFShape parent, HSSFAnchor anchor)\n    {\n        super( parent, anchor );\n        _textObjectRecord = createTextObjRecord();\n    }\n    protected TextObjectRecord getTextObjectRecord() {\n        return _textObjectRecord;\n    }\n    protected TextObjectRecord createTextObjRecord(){\n        TextObjectRecord obj = new TextObjectRecord();\n        obj.setHorizontalTextAlignment(HORIZONTAL_TEXT_ALIGNMENT_CENTERED);\n        obj.setVerticalTextAlignment(VERTICAL_TEXT_ALIGNMENT_CENTER);\n        obj.setTextLocked(true);\n        obj.setTextOrientation(TextObjectRecord.TEXT_ORIENTATION_NONE);\n        obj.setStr(new HSSFRichTextString(\"\"));\n        return obj;\n    }\n    @Override\n    protected EscherContainerRecord createSpContainer() {\n        EscherContainerRecord spContainer = new EscherContainerRecord();\n        spContainer.setRecordId( EscherContainerRecord.SP_CONTAINER );\n        spContainer.setOptions( (short) 0x000F );\n        EscherSpRecord sp = new EscherSpRecord();\n        sp.setRecordId( EscherSpRecord.RECORD_ID );\n        sp.setFlags( EscherSpRecord.FLAG_HAVEANCHOR | EscherSpRecord.FLAG_HASSHAPETYPE );\n        sp.setVersion((short) 0x2);\n        EscherClientDataRecord clientData = new EscherClientDataRecord();\n        clientData.setRecordId( EscherClientDataRecord.RECORD_ID );\n        clientData.setOptions( (short) (0x0000) );\n        EscherOptRecord optRecord = new EscherOptRecord();\n        optRecord.setEscherProperty(new EscherSimpleProperty(EscherProperties.LINESTYLE__LINEDASHING, LINESTYLE_SOLID));\n        optRecord.setEscherProperty( new EscherBoolProperty( EscherProperties.LINESTYLE__NOLINEDRAWDASH, 0x00080008));\n//        optRecord.setEscherProperty(new EscherSimpleProperty(EscherProperties.LINESTYLE__LINEWIDTH, LINEWIDTH_DEFAULT));\n        optRecord.setEscherProperty(new EscherRGBProperty(EscherProperties.FILL__FILLCOLOR, FILL__FILLCOLOR_DEFAULT));\n        optRecord.setEscherProperty(new EscherRGBProperty(EscherProperties.LINESTYLE__COLOR, LINESTYLE__COLOR_DEFAULT));\n        optRecord.setEscherProperty(new EscherBoolProperty(EscherProperties.FILL__NOFILLHITTEST, NO_FILLHITTEST_FALSE));\n        optRecord.setEscherProperty( new EscherBoolProperty( EscherProperties.LINESTYLE__NOLINEDRAWDASH, 0x00080008));\n        optRecord.setEscherProperty( new EscherShapePathProperty( EscherProperties.GEOMETRY__SHAPEPATH, EscherShapePathProperty.COMPLEX ) );\n        optRecord.setEscherProperty(new EscherBoolProperty( EscherProperties.GROUPSHAPE__PRINT, 0x080000));\n        optRecord.setRecordId( EscherOptRecord.RECORD_ID );\n        EscherTextboxRecord escherTextbox = new EscherTextboxRecord();\n        escherTextbox.setRecordId(EscherTextboxRecord.RECORD_ID);\n        escherTextbox.setOptions((short) 0x0000);\n        spContainer.addChildRecord(sp);\n        spContainer.addChildRecord(optRecord);\n        spContainer.addChildRecord(getAnchor().getEscherAnchor());\n        spContainer.addChildRecord(clientData);\n        spContainer.addChildRecord(escherTextbox);\n        return spContainer;\n    }\n    @Override\n    protected ObjRecord createObjRecord() {\n        ObjRecord obj = new ObjRecord();\n        CommonObjectDataSubRecord c = new CommonObjectDataSubRecord();\n        c.setLocked(true);\n        c.setPrintable(true);\n        c.setAutofill(true);\n        c.setAutoline(true);\n        EndSubRecord e = new EndSubRecord();\n        obj.addSubRecord(c);\n        obj.addSubRecord(e);\n        return obj;\n    }\n    @Override\n    protected void afterRemove(HSSFPatriarch patriarch) {\n        patriarch.getBoundAggregate().removeShapeToObjRecord(getEscherContainer().getChildById(EscherClientDataRecord.RECORD_ID));\n        if (null != getEscherContainer().getChildById(EscherTextboxRecord.RECORD_ID)){\n            patriarch.getBoundAggregate().removeShapeToObjRecord(getEscherContainer().getChildById(EscherTextboxRecord.RECORD_ID));\n        }\n    }\n    /**\n     * @return the rich text string for this textbox.\n     */\n    public HSSFRichTextString getString() {\n        return _textObjectRecord.getStr();\n    }\n    /**\n     * @param string Sets the rich text string used by this object.\n     */\n    public void setString(RichTextString string) {\n        //TODO add other shape types which can not contain text\n        if (getShapeType() == 0 || getShapeType() == OBJECT_TYPE_LINE){\n            throw new IllegalStateException(\"Cannot set text for shape type: \"+getShapeType());\n        }\n        HSSFRichTextString rtr = (HSSFRichTextString) string;\n        // If font is not set we must set the default one\n        if (rtr.numFormattingRuns() == 0) rtr.applyFont((short) 0);\n        TextObjectRecord txo = getOrCreateTextObjRecord();\n        txo.setStr(rtr);\n        if (string.getString() != null){\n            setPropertyValue(new EscherSimpleProperty(EscherProperties.TEXT__TEXTID, string.getString().hashCode()));\n        }\n    }\n    @Override\n    void afterInsert(HSSFPatriarch patriarch){\n        EscherAggregate agg = patriarch.getBoundAggregate();\n        agg.associateShapeToObjRecord(getEscherContainer().getChildById(EscherClientDataRecord.RECORD_ID), getObjRecord());<fim_middle>// class below has no smell\n"}