{"text": "<fim_prefix>        writeOrderID_ = 0L;\n        bitField0_ = (bitField0_ & ~0x00000004);\n        return this;\n      }\n      public Builder clone() {\n        return create().mergeFrom(buildPartial());\n      }\n      public com.google.protobuf.Descriptors.Descriptor\n          getDescriptorForType() {\n        return org.apache.flume.channel.file.proto.ProtosFactory.internal_static_TransactionEventHeader_descriptor;\n      }\n      public org.apache.flume.channel.file.proto.ProtosFactory.TransactionEventHeader getDefaultInstanceForType() {\n        return org.apache.flume.channel.file.proto.ProtosFactory.TransactionEventHeader.getDefaultInstance();\n      }\n      public org.apache.flume.channel.file.proto.ProtosFactory.TransactionEventHeader build() {\n        org.apache.flume.channel.file.proto.ProtosFactory.TransactionEventHeader result = buildPartial();\n        if (!result.isInitialized()) {\n          throw newUninitializedMessageException(result);\n        }\n        return result;\n      }\n      public org.apache.flume.channel.file.proto.ProtosFactory.TransactionEventHeader buildPartial() {\n        org.apache.flume.channel.file.proto.ProtosFactory.TransactionEventHeader result = new org.apache.flume.channel.file.proto.ProtosFactory.TransactionEventHeader(this);\n        int from_bitField0_ = bitField0_;\n        int to_bitField0_ = 0;\n        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {\n          to_bitField0_ |= 0x00000001;\n        }\n        result.type_ = type_;\n        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {\n          to_bitField0_ |= 0x00000002;\n        }\n        result.transactionID_ = transactionID_;\n        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {\n          to_bitField0_ |= 0x00000004;\n        }\n        result.writeOrderID_ = writeOrderID_;\n        result.bitField0_ = to_bitField0_;\n        onBuilt();\n        return result;\n      }\n      public Builder mergeFrom(com.google.protobuf.Message other) {\n        if (other instanceof org.apache.flume.channel.file.proto.ProtosFactory.TransactionEventHeader) {\n          return mergeFrom((org.apache.flume.channel.file.proto.ProtosFactory.TransactionEventHeader)other);\n        } else {\n          super.mergeFrom(other);\n          return this;\n        }\n      }\n      public Builder mergeFrom(org.apache.flume.channel.file.proto.ProtosFactory.TransactionEventHeader other) {\n        if (other == org.apache.flume.channel.file.proto.ProtosFactory.TransactionEventHeader.getDefaultInstance()) return this;\n        if (other.hasType()) {\n          setType(other.getType());\n        }\n        if (other.hasTransactionID()) {\n          setTransactionID(other.getTransactionID());\n        }\n        if (other.hasWriteOrderID()) {\n          setWriteOrderID(other.getWriteOrderID());\n        }\n        this.mergeUnknownFields(other.getUnknownFields());\n        return this;\n      }\n      public final boolean isInitialized() {\n        if (!hasType()) {\n          return false;\n        }\n        if (!hasTransactionID()) {\n          return false;\n        }\n        if (!hasWriteOrderID()) {\n          return false;\n        }\n        return true;\n      }\n      public Builder mergeFrom(\n          com.google.protobuf.CodedInputStream input,\n          com.google.protobuf.ExtensionRegistryLite extensionRegistry)\n          throws java.io.IOException {\n        org.apache.flume.channel.file.proto.ProtosFactory.TransactionEventHeader parsedMessage = null;\n        try {\n          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);\n        } catch (com.google.protobuf.InvalidProtocolBufferException e) {\n          parsedMessage = (org.apache.flume.channel.file.proto.ProtosFactory.TransactionEventHeader) e.getUnfinishedMessage();\n          throw e;\n        } finally {\n          if (parsedMessage != null) {\n            mergeFrom(parsedMessage);\n          }\n        }\n        return this;\n      }\n      private int bitField0_;\n      // required sfixed32 type = 1;\n      private int type_ ;\n      /**\n       * <code>required sfixed32 type = 1;</code>\n       */\n      public boolean hasType() {\n        return ((bitField0_ & 0x00000001) == 0x00000001);\n      }\n      /**\n       * <code>required sfixed32 type = 1;</code>\n       */\n      public int getType() {\n        return type_;\n      }\n      /**\n       * <code>required sfixed32 type = 1;</code>\n       */\n      public Builder setType(int value) {\n        bitField0_ |= 0x00000001;\n        type_ = value;\n        onChanged();\n        return this;\n      }\n      /**\n       * <code>required sfixed32 type = 1;</code>\n       */\n      public Builder clearType() {\n        bitField0_ = (bitField0_ & ~0x00000001);\n        type_ = 0;\n        onChanged();\n        return this;\n      }\n      // required sfixed64 transactionID = 2;\n      private long transactionID_ ;\n      /**\n       * <code>required sfixed64 transactionID = 2;</code>\n       */\n      public boolean hasTransactionID() {\n        return ((bitField0_ & 0x00000002) == 0x00000002);\n      }\n      /**\n       * <code>required sfixed64 transactionID = 2;</code>\n       */\n      public long getTransactionID() {\n        return transactionID_;\n      }\n      /**\n       * <code>required sfixed64 transactionID = 2;</code>\n       */\n      public Builder setTransactionID(long value) {\n        bitField0_ |= 0x00000002;\n        transactionID_ = value;\n        onChanged();\n        return this;\n      }\n      /**\n       * <code>required sfixed64 transactionID = 2;</code>\n       */\n      public Builder clearTransactionID() {\n        bitField0_ = (bitField0_ & ~0x00000002);\n        transactionID_ = 0L;\n        onChanged();\n        return this;\n      }\n      // required sfixed64 writeOrderID = 3;\n      private long writeOrderID_ ;\n      /**\n       * <code>required sfixed64 writeOrderID = 3;</code>\n       */\n      public boolean hasWriteOrderID() {\n        return ((bitField0_ & 0x00000004) == 0x00000004);\n      }\n      /**\n       * <code>required sfixed64 writeOrderID = 3;</code>\n       */\n      public long getWriteOrderID() {\n        return writeOrderID_;\n      }\n      /**\n       * <code>required sfixed64 writeOrderID = 3;</code>\n       */\n      public Builder setWriteOrderID(long value) {\n        bitField0_ |= 0x00000004;\n        writeOrderID_ = value;\n        onChanged();\n        return this;\n      }\n      /**\n       * <code>required sfixed64 writeOrderID = 3;</code>\n       */\n      public Builder clearWriteOrderID() {\n        bitField0_ = (bitField0_ & ~0x00000004);\n        writeOrderID_ = 0L;\n        onChanged();\n        return this;\n      }\n      // @@protoc_insertion_point(builder_scope:TransactionEventHeader)\n    }\n    static {\n      defaultInstance = new TransactionEventHeader(true);\n      defaultInstance.initFields();\n    }\n    // @@protoc_insertion_point(class_scope:TransactionEventHeader)\n  }\n<fim_suffix>  public interface PutOrBuilder\n      extends com.google.protobuf.MessageOrBuilder {\n    // required .FlumeEvent event = 1;\n    /**\n     * <code>required .FlumeEvent event = 1;</code>\n     */\n    boolean hasEvent();\n    /**\n     * <code>required .FlumeEvent event = 1;</code>\n     */\n    org.apache.flume.channel.file.proto.ProtosFactory.FlumeEvent getEvent();\n    /**\n     * <code>required .FlumeEvent event = 1;</code>\n     */\n    org.apache.flume.channel.file.proto.ProtosFactory.FlumeEventOrBuilder getEventOrBuilder();\n    // optional sfixed64 checksum = 2;\n    /**\n     * <code>optional sfixed64 checksum = 2;</code>\n     */\n    boolean hasChecksum();\n    /**\n     * <code>optional sfixed64 checksum = 2;</code>\n     */\n    long getChecksum();\n  }<fim_middle>// class below has no smell\n"}