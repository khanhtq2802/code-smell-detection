{"text": "<fim_prefix>        LuaJavaCreate obj = new LuaJavaCreate(mRapidID, mRapidView);\n        return CoerceJavaToLua.coerce(obj.create(objName, args0, args1, args2, args3, args4, args5));\n    }\n    @Override\n    public boolean request(String url, IBytes data, LuaTable header, String method, LuaFunction succeedListener, LuaFunction failedListener){\n        LuaJavaRequest request = new LuaJavaRequest(mRapidID, mRapidView, url, data.getArrayByte(), header, method, succeedListener, failedListener);\n        return request.request();\n    }\n    @Override\n    public boolean request(String url, String data, LuaTable header, String method, LuaFunction succeedListener, LuaFunction failedListener){\n        LuaJavaRequest request = new LuaJavaRequest(mRapidID, mRapidView, url, data, header, method, succeedListener, failedListener);\n        return request.request();\n    }\n    @Override\n    public boolean request(String url, LuaTable data, LuaTable header, String method, LuaFunction succeedListener, LuaFunction failedListener){\n        LuaJavaRequest request = new LuaJavaRequest(mRapidID, mRapidView, url, data, header, method, succeedListener, failedListener);\n        return request.request();\n    }\n    @Override\n    public boolean request(int cmdID, LuaTable data, LuaTable params, LuaFunction listener){\n        LuaJavaTestEngine engine = new LuaJavaTestEngine(mRapidID, mRapidView);\n        return engine.request(cmdID, data, params, listener);\n    }\n    @Override\n    public IRapidFeedsCacheQueue createFeedsCacheQueue(int cacheCount, Object reqStub){\n        return new RapidFeedsCacheQueue(cacheCount, reqStub);\n    }\n    @Override\n    public void Log(String tag, String value){\n         XLog.d(tag, value);\n    }\n    @Override\n    public LuaValue addView(String xml, String parentID, String above, RapidDataBinder binder, Object data){\n        LuaJavaViewWrapper viewWrapper = new LuaJavaViewWrapper(mRapidID, mRapidView);\n        return viewWrapper.addView(xml, parentID, above, binder, data, null);\n    }\n    @Override\n    public LuaValue addView(String xml, String parentID, String above, RapidDataBinder binder, Object data, IRapidActionListener listener){\n        LuaJavaViewWrapper viewWrapper = new LuaJavaViewWrapper(mRapidID, mRapidView);\n        return viewWrapper.addView(xml, parentID, above, binder, data, listener);\n    }\n    @Override\n    public LuaValue loadView(String name, String params, Object data){\n        LuaJavaViewWrapper viewWrapper = new LuaJavaViewWrapper(mRapidID, mRapidView);\n        if( name == null || ( !name.contains(\".\") && mRapidView.getParser().isLimitLevel() ) ){\n            return null;\n        }\n        return viewWrapper.loadView(name, params, data, null);\n    }\n    @Override\n    public LuaValue loadView(String name, String params, Object data, IRapidActionListener listener){\n        LuaJavaViewWrapper viewWrapper = new LuaJavaViewWrapper(mRapidID, mRapidView);\n        if( name == null || ( !name.contains(\".\") && mRapidView.getParser().isLimitLevel() ) ){\n            return null;\n        }\n        return viewWrapper.loadView(name, params, data, listener);\n    }\n    @Override\n    public LuaValue removeView(String id){\n        LuaJavaViewWrapper viewWrapper = new LuaJavaViewWrapper(mRapidID, mRapidView);\n        return viewWrapper.removeView(id);\n    }\n    @Override\n    public IBytes decode(String str, String flags){\n        LuaJavaBase64 base64 = new LuaJavaBase64(mRapidID, mRapidView);\n        return base64.decode(str, flags);\n    }\n    @Override\n    public String encode(IBytes bytes, String flags){\n        LuaJavaBase64 base64 = new LuaJavaBase64(mRapidID, mRapidView);\n        return base64.encode(bytes, flags);\n    }\n    @Override\n    public void takePicture(LuaTable params, LuaFunction succeedListener, LuaFunction failedListener){\n        LuaJavaPicture pictureChooser = new LuaJavaPicture(mRapidID, mRapidView);\n        register(pictureChooser);\n        pictureChooser.takePicture(params, succeedListener, failedListener);\n    }\n    @Override\n    public void choosePicture(LuaTable params, LuaFunction succeedListener, LuaFunction failedListener){\n        LuaJavaPicture pictureChooser = new LuaJavaPicture(mRapidID, mRapidView);\n        register(pictureChooser);\n        pictureChooser.choosePicture(params, succeedListener, failedListener);\n    }\n    @Override\n    public Bitmap getBitmapFromBytes(IBytes bytes){\n        LuaJavaPicture pictureChooser = new LuaJavaPicture(mRapidID, mRapidView);\n        return pictureChooser.getBitmapFromBytes(bytes);\n    }\n    @Override\n    public IBytes getBytesFromBitmap(Bitmap bitmap){\n        LuaJavaPicture pictureChooser = new LuaJavaPicture(mRapidID, mRapidView);\n        return pictureChooser.getBytesFromBitmap(bitmap);\n    }\n    @Override\n    public void shareImageToWX(Bitmap bmp, String scene, LuaFunction succeedListener, LuaFunction failedListener){\n        LuaJavaShare shareWraper = new LuaJavaShare(mRapidID, mRapidView);\n        shareWraper.shareImageToWX(bmp, scene, succeedListener, failedListener);\n    }\n    @Override\n    public void shareTextToWX(String text, String scene, LuaFunction succeedListener, LuaFunction failedListener){\n        LuaJavaShare shareWraper = new LuaJavaShare(mRapidID, mRapidView);\n        shareWraper.shareTextToWX(text, scene, succeedListener, failedListener);\n    }\n    @Override\n    public void savePicture(Bitmap bitmap) {\n        LuaJavaPicture pictureChooser = new LuaJavaPicture(mRapidID, mRapidView);\n        pictureChooser.savePicture(bitmap);\n    }\n    @Override\n    public IBytes toMD5Bytes(String source){\n        LuaJavaMd5 md5 = new LuaJavaMd5(mRapidID, mRapidView);\n        return md5.toMD5Bytes(source);\n    }\n    @Override\n    public IBytes toMD5Bytes(IBytes source){\n        LuaJavaMd5 md5 = new LuaJavaMd5(mRapidID, mRapidView);\n        return md5.toMD5Bytes(source);\n    }\n    @Override\n    public String toMD5(String source){\n        LuaJavaMd5 md5 = new LuaJavaMd5(mRapidID, mRapidView);\n        return md5.toMD5(source);\n    }\n    @Override\n    public void finish(){\n        LuaJavaUIImpl finish = new LuaJavaUIImpl(mRapidID, mRapidView);\n        finish.finish();\n    }\n    @Override\n    public void startActivity(String xml, LuaTable params){\n        LuaJavaUIImpl activity = new LuaJavaUIImpl(mRapidID, mRapidView);\n        activity.startActivity(xml, params);\n    }\n    @Override\n    public void delayRun(long milliSec, LuaFunction function){\n        LuaJavaUIImpl runner = new LuaJavaUIImpl(mRapidID, mRapidView);\n        runner.delayRun(milliSec, function);\n    }\n    @Override\n    public void postRun( LuaFunction function){\n        LuaJavaUIImpl runner = new LuaJavaUIImpl(mRapidID, mRapidView);\n        runner.postRun(function);\n    }\n    @Override\n    public int dip2px(int dip){\n        LuaJavaUIImpl uiImpl = new LuaJavaUIImpl(mRapidID, mRapidView);\n        return uiImpl.dip2px(dip);\n    }\n    @Override\n    public int px2dip(int px){\n        LuaJavaUIImpl uiImpl = new LuaJavaUIImpl(mRapidID, mRapidView);\n        return uiImpl.px2dip(px);\n    }\n    @Override\n    public boolean isNetworkActive(){\n        LuaJavaNetworkState state = new LuaJavaNetworkState(mRapidID, mRapidView);\n        return state.isNetworkActive();\n    }\n    @Override\n    public boolean isWap(){\n        LuaJavaNetworkState state = new LuaJavaNetworkState(mRapidID, mRapidView);\n        return state.isNetworkActive();\n    }\n    @Override\n    public boolean isWifi(){\n        LuaJavaNetworkState state = new LuaJavaNetworkState(mRapidID, mRapidView);\n        return state.isNetworkActive();\n    }\n<fim_suffix>    @Override\n    public boolean is2G(){\n        LuaJavaNetworkState state = new LuaJavaNetworkState(mRapidID, mRapidView);\n        return state.isNetworkActive();\n    }<fim_middle>// function below has no smell\n"}