{"text": "<fim_prefix>/**\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.apache.bigtop.datagenerators.bigpetstore.generators.transaction;\n\nimport java.util.List;\n\nimport org.apache.commons.lang3.tuple.Pair;\n\nimport com.google.common.collect.Lists;\n\npublic class ProductCategoryUsageTrajectory\n{\n\tfinal private List<Pair<Double, Double>> trajectory;\n\n\tpublic ProductCategoryUsageTrajectory(double initialTime, double initialAmount)\n\t{\n\t\ttrajectory = Lists.newArrayList();\n\t\tthis.append(initialTime, initialAmount);\n\t}\n\n\tpublic void append(double time, double amount)\n\t{\n\t\ttrajectory.add(Pair.of(time, amount));\n\t}\n\n\tpublic double getLastAmount()\n\t{\n\t\treturn trajectory.get(trajectory.size() - 1).getValue();\n\t}\n\n\tpublic double getLastTime()\n\t{\n\t\treturn trajectory.get(trajectory.size() - 1).getKey();\n\t}\n\n\tpublic double amountAtTime(double time)\n\t{\n\t\tPair<Double, Double> previous = null;\n\t\tfor(Pair<Double, Double> entry : trajectory)\n\t\t{\n\t\t\tif(entry.getKey() > time)\n\t\t\t\tbreak;\n\t\t\tprevious = entry;\n\t\t}\n\n\t\tif(previous == null)\n\t\t\treturn 0.0;\n\n\t\treturn previous.getValue();\n\t}\n\n\tpublic Pair<Double, Double> getStep(int idx)\n\t{\n\t\treturn trajectory.get(idx);\n\t}\n\n<fim_suffix>\tpublic int size()\n\t{\n\t\treturn trajectory.size();\n\t}\n}<fim_middle>// function below has no smell\n"}