{"text": "<fim_prefix>package com.microsoft.Malmo.MissionHandlers;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\nimport net.minecraft.client.Minecraft;\nimport net.minecraft.util.MouseHelper;\n\nimport com.google.gson.JsonArray;\nimport com.google.gson.JsonObject;\nimport com.microsoft.Malmo.Client.MalmoModClient;\nimport com.microsoft.Malmo.MissionHandlerInterfaces.IObservationProducer;\nimport com.microsoft.Malmo.MissionHandlers.CommandForKey.KeyEventListener;\nimport com.microsoft.Malmo.Schemas.MissionInit;\n\npublic class ObservationFromHumanImplementation extends HandlerBase implements IObservationProducer\n{\n    private abstract class ObservationEvent\n    {\n    \tpublic long timestamp = 0;\n        public abstract JsonObject getJSON();\n        \n        ObservationEvent()\n        {\n        \tthis.timestamp = Minecraft.getMinecraft().world.getWorldTime();\n        }\n    }\n\n<fim_suffix>    private class MouseObservationEvent extends ObservationEvent\n    {\n        private int deltaX;\n        private int deltaY;\n        private int deltaZ;\n\n        public MouseObservationEvent(int deltaX, int deltaY, int deltaZ)\n        {\n            super();\n            this.deltaX = deltaX;\n            this.deltaY = deltaY;\n            this.deltaZ = deltaZ;\n        }\n\n        @Override\n        public JsonObject getJSON()\n        {\n            JsonObject jsonEvent = new JsonObject();\n            jsonEvent.addProperty(\"time\", this.timestamp);\n            jsonEvent.addProperty(\"type\", \"mouse\");\n            jsonEvent.addProperty(\"deltaX\", this.deltaX);\n            jsonEvent.addProperty(\"deltaY\", this.deltaY);\n            jsonEvent.addProperty(\"deltaZ\", this.deltaZ);\n            return jsonEvent;\n        }\n    }\n    \n    private class KeyObservationEvent extends ObservationEvent\n    {\n        private String commandString;\n        private boolean pressed;\n\n        KeyObservationEvent(String commandString, boolean pressed)\n        {\n            super();\n            this.commandString = commandString;\n            this.pressed = pressed;\n        }\n\n        @Override\n        public JsonObject getJSON()\n        {\n            JsonObject jsonEvent = new JsonObject();\n            jsonEvent.addProperty(\"time\", this.timestamp);\n            jsonEvent.addProperty(\"type\", \"key\");\n            jsonEvent.addProperty(\"command\", this.commandString);\n            jsonEvent.addProperty(\"pressed\", this.pressed);\n            return jsonEvent;\n        }\n    }\n\n    private class MouseObserver implements MalmoModClient.MouseEventListener, KeyEventListener\n    {\n        @Override\n        public void onXYZChange(int deltaX, int deltaY, int deltaZ)\n        {\n            System.out.println(\"Mouse observed: \" + deltaX + \", \" + deltaY + \", \" + deltaZ);\n            if (deltaX != 0 || deltaY != 0 || deltaZ != 0)\n                queueEvent(new MouseObservationEvent(deltaX, deltaY, deltaZ));\n        }\n\n        @Override\n        public void onKeyChange(String commandString, boolean pressed)\n        {\n            queueEvent(new KeyObservationEvent(commandString, pressed));\n        }\n    }\n\n    MouseObserver observer = new MouseObserver();\n    List<ObservationEvent> events = new ArrayList<ObservationEvent>();\n    List<CommandForKey> keys = null;\n\n    @Override\n    public void writeObservationsToJSON(JsonObject json, MissionInit missionInit)\n    {\n        synchronized(this.events)\n        {\n            if (this.events.size() > 0)\n            {\n                JsonArray jsonEvents = new JsonArray();\n                for (ObservationEvent event : this.events)\n                    jsonEvents.add(event.getJSON());\n                this.events.clear();\n                json.add(\"events\", jsonEvents);\n            }\n        }\n    }\n\n    public void queueEvent(ObservationEvent event)\n    {\n        synchronized(this.events)\n        {\n            this.events.add(event);\n        }\n    }\n\n    @Override\n    public void prepare(MissionInit missionInit)\n    {\n        MouseHelper mhelp = Minecraft.getMinecraft().mouseHelper;\n        if (!(mhelp instanceof MalmoModClient.MouseHook))\n        {\n            System.out.println(\"ERROR! MouseHook not installed - Malmo won't work correctly.\");\n            return;\n        }\n        ((MalmoModClient.MouseHook)mhelp).requestEvents(this.observer);\n        this.keys = HumanLevelCommandsImplementation.getKeyOverrides();\n        for (CommandForKey k : this.keys)\n        {\n            k.install(missionInit);\n            k.setKeyEventObserver(this.observer);\n        }\n    }\n\n    @Override\n    public void cleanup()\n    {\n        MouseHelper mhelp = Minecraft.getMinecraft().mouseHelper;\n        if (!(mhelp instanceof MalmoModClient.MouseHook))\n        {\n            System.out.println(\"ERROR! MouseHook not installed - Malmo won't work correctly.\");\n            return;\n        }\n        ((MalmoModClient.MouseHook)mhelp).requestEvents(null);\n        for (CommandForKey k : this.keys)\n        {\n            k.setKeyEventObserver(null);\n        }\n    }\n}<fim_middle>// class below has no smell\n"}