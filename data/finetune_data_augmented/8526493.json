{"text": "<fim_prefix>// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\npackage org.apache.cloudstack.engine.cloud.entity.api;\n\nimport java.lang.reflect.Method;\nimport java.util.Date;\nimport java.util.List;\nimport java.util.Map;\n\nimport javax.inject.Inject;\n\nimport org.springframework.stereotype.Component;\nimport org.apache.cloudstack.engine.cloud.entity.api.db.VMEntityVO;\n\nimport com.cloud.deploy.DeploymentPlan;\nimport com.cloud.deploy.DeploymentPlanner;\nimport com.cloud.deploy.DeploymentPlanner.ExcludeList;\nimport com.cloud.exception.AgentUnavailableException;\nimport com.cloud.exception.ConcurrentOperationException;\nimport com.cloud.exception.InsufficientCapacityException;\nimport com.cloud.exception.OperationTimedoutException;\nimport com.cloud.exception.ResourceUnavailableException;\nimport com.cloud.vm.VirtualMachineProfile;\n\n@Component\npublic class VirtualMachineEntityImpl implements VirtualMachineEntity {\n\n    @Inject\n    private VMEntityManager manager;\n\n    private VMEntityVO vmEntityVO;\n\n    public VirtualMachineEntityImpl() {\n    }\n\n    public void init(String vmId) {\n        this.vmEntityVO = this.manager.loadVirtualMachine(vmId);\n    }\n\n    public void init(String vmId, String owner, String hostName, String displayName, int cpu, int speed, long memory, List<String> computeTags,\n        List<String> rootDiskTags, List<String> networks) {\n        init(vmId);\n        this.vmEntityVO.setOwner(owner);\n        this.vmEntityVO.setHostname(hostName);\n        this.vmEntityVO.setDisplayname(displayName);\n        this.vmEntityVO.setComputeTags(computeTags);\n        this.vmEntityVO.setRootDiskTags(rootDiskTags);\n        this.vmEntityVO.setNetworkIds(networks);\n\n        manager.saveVirtualMachine(vmEntityVO);\n    }\n\n    public VirtualMachineEntityImpl(String vmId, VMEntityManager manager) {\n        this.manager = manager;\n        this.vmEntityVO = this.manager.loadVirtualMachine(vmId);\n    }\n\n    public VirtualMachineEntityImpl(String vmId, String owner, String hostName, String displayName, int cpu, int speed, long memory, List<String> computeTags,\n            List<String> rootDiskTags, List<String> networks, VMEntityManager manager) {\n        this(vmId, manager);\n        this.vmEntityVO.setOwner(owner);\n        this.vmEntityVO.setHostname(hostName);\n        this.vmEntityVO.setDisplayname(displayName);\n        this.vmEntityVO.setComputeTags(computeTags);\n        this.vmEntityVO.setRootDiskTags(rootDiskTags);\n        this.vmEntityVO.setNetworkIds(networks);\n\n        manager.saveVirtualMachine(vmEntityVO);\n    }\n\n    @Override\n    public String getUuid() {\n        return vmEntityVO.getUuid();\n    }\n\n    @Override\n    public long getId() {\n        return vmEntityVO.getId();\n    }\n\n<fim_suffix>    @Override\n    public String getCurrentState() {\n        // TODO Auto-generated method stub\n        return null;\n    }\n\n    @Override\n    public String getDesiredState() {\n        // TODO Auto-generated method stub\n        return null;\n    }\n\n    @Override\n    public Date getCreatedTime() {\n        return vmEntityVO.getCreated();\n    }\n\n    @Override\n    public Date getLastUpdatedTime() {\n        return vmEntityVO.getUpdateTime();\n    }\n\n    @Override\n    public String getOwner() {\n        // TODO Auto-generated method stub\n        return null;\n    }\n\n    @Override\n    public Map<String, String> getDetails() {\n        return vmEntityVO.getDetails();\n    }\n\n    @Override\n    public void addDetail(String name, String value) {\n        vmEntityVO.setDetail(name, value);\n    }\n\n    @Override\n    public void delDetail(String name, String value) {\n        // TODO Auto-generated method stub\n    }\n\n    @Override\n    public void updateDetail(String name, String value) {\n        // TODO Auto-generated method stub\n    }\n\n    @Override\n    public List<Method> getApplicableActions() {\n        // TODO Auto-generated method stub\n        return null;\n    }\n\n    @Override\n    public List<String> listVolumeIds() {\n        // TODO Auto-generated method stub\n        return null;\n    }\n\n    @Override\n    public List<VolumeEntity> listVolumes() {\n        // TODO Auto-generated method stub\n        return null;\n    }\n\n    @Override\n    public List<String> listNicUuids() {\n        // TODO Auto-generated method stub\n        return null;\n    }\n\n    @Override\n    public List<NicEntity> listNics() {\n        // TODO Auto-generated method stub\n        return null;\n    }\n\n    @Override\n    public TemplateEntity getTemplate() {\n        // TODO Auto-generated method stub\n        return null;\n    }\n\n    @Override\n    public List<String> listTags() {\n        // TODO Auto-generated method stub\n        return null;\n    }\n\n    @Override\n    public void addTag() {\n        // TODO Auto-generated method stub\n\n    }\n\n    @Override\n    public void delTag() {\n        // TODO Auto-generated method stub\n\n    }\n\n    @Override\n    public String reserve(DeploymentPlanner plannerToUse, DeploymentPlan plan, ExcludeList exclude, String caller) throws InsufficientCapacityException,\n        ResourceUnavailableException {\n        return manager.reserveVirtualMachine(this.vmEntityVO, plannerToUse, plan, exclude);\n    }\n\n    @Override\n    public void migrateTo(String reservationId, String caller) {\n        // TODO Auto-generated method stub\n\n    }\n\n    @Override\n    public void deploy(String reservationId, String caller, Map<VirtualMachineProfile.Param, Object> params, boolean deployOnGivenHost) throws InsufficientCapacityException,\n        ResourceUnavailableException {\n        manager.deployVirtualMachine(reservationId, this.vmEntityVO, caller, params, deployOnGivenHost);\n    }\n\n    @Override\n    public boolean stop(String caller) throws ResourceUnavailableException {\n        return manager.stopvirtualmachine(this.vmEntityVO, caller);\n    }\n\n    @Override\n    public boolean stopForced(String caller) throws ResourceUnavailableException {\n        return manager.stopvirtualmachineforced(this.vmEntityVO, caller);\n    }\n\n    @Override\n    public void cleanup() {\n        // TODO Auto-generated method stub\n\n    }\n\n    @Override\n    public boolean destroy(String caller, boolean expunge) throws AgentUnavailableException, OperationTimedoutException, ConcurrentOperationException {\n        return manager.destroyVirtualMachine(this.vmEntityVO, caller, expunge);\n    }\n\n    @Override\n    public VirtualMachineEntity duplicate(String externalId) {\n        // TODO Auto-generated method stub\n        return null;\n    }\n\n    @Override\n    public SnapshotEntity takeSnapshotOf() {\n        // TODO Auto-generated method stub\n        return null;\n    }\n\n    @Override\n    public void attach(VolumeEntity volume, short deviceId) {\n        // TODO Auto-generated method stub\n\n    }\n\n    @Override\n    public void detach(VolumeEntity volume) {\n        // TODO Auto-generated method stub\n\n    }\n\n    @Override\n    public void connectTo(NetworkEntity network, short nicId) {\n        // TODO Auto-generated method stub\n\n    }\n\n    @Override\n    public void disconnectFrom(NetworkEntity netowrk, short nicId) {\n        // TODO Auto-generated method stub\n\n    }\n\n}<fim_middle>// function below has no smell\n"}