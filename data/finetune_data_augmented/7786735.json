{"text": "<fim_prefix>/*\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.apache.wicket.markup.repeater.data;\n\nimport org.apache.wicket.markup.html.navigation.paging.IPageable;\nimport org.apache.wicket.markup.repeater.AbstractPageableView;\n\n/**\n * DataView is a basic implementation of {@link AbstractPageableView}.\n * \n * Data views aim to make it very simple to populate your repeating view from a database by\n * utilizing {@link IDataProvider} to act as an interface between the database and the dataview.\n * \n * \n * \n * <p>\n * Example:\n * \n * <pre>\n *     &lt;tbody&gt;\n *       &lt;tr wicket:id=&quot;rows&quot;&gt;\n *         &lt;td&gt;&lt;span wicket:id=&quot;id&quot;&gt;Test ID&lt;/span&gt;&lt;/td&gt;\n *         ...\n * </pre>\n * \n * <p>\n * Though this example is about a HTML table, DataView is not at all limited to HTML tables. Any\n * kind of list can be rendered using DataView.\n * <p>\n * And the related Java code:\n * \n * <pre>\n * add(new DataView&lt;UserDetails&gt;(&quot;rows&quot;, dataProvider)\n * {\n * \tpublic void populateItem(final Item&lt;UserDetails&gt; item)\n * \t{\n * \t\tfinal UserDetails user = item.getModelObject();\n * \t\titem.add(new Label(&quot;id&quot;, user.getId()));\n * \t}\n * });\n * </pre>\n * \n * @see IDataProvider\n * @see IPageable\n * \n * @author Igor Vaynberg (ivaynberg)\n * \n * @param <T>\n *            The Model type.\n */\n<fim_suffix>public abstract class DataView<T> extends DataViewBase<T>\n{\n\n\t/**\n\t * \n\t */\n\tprivate static final long serialVersionUID = 1L;\n\n\t/**\n\t * @param id\n\t *            component id\n\t * @param dataProvider\n\t *            data provider\n\t */\n\tprotected DataView(String id, IDataProvider<T> dataProvider)\n\t{\n\t\tsuper(id, dataProvider);\n\t}\n\n\t/**\n\t * @param id\n\t *            component id\n\t * @param dataProvider\n\t *            data provider\n\t * @param itemsPerPage\n\t *            items per page\n\t */\n\tprotected DataView(String id, IDataProvider<T> dataProvider, long itemsPerPage)\n\t{\n\t\tsuper(id, dataProvider);\n\t\tsetItemsPerPage(itemsPerPage);\n\t}\n\n\t/**\n\t * @return data provider\n\t */\n\tpublic IDataProvider<T> getDataProvider()\n\t{\n\t\treturn internalGetDataProvider();\n\t}\n\n}<fim_middle>// class below has no smell\n"}