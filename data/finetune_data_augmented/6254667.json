{"text": "<fim_prefix>/**\n * Copyright (c) 2015 Bosch Software Innovations GmbH and others.\n *\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n */\npackage org.eclipse.hawkbit.repository;\n\nimport java.util.Collection;\n\nimport org.eclipse.hawkbit.repository.model.DistributionSet;\nimport org.eclipse.hawkbit.repository.model.TargetUpdateStatus;\n\n/**\n * Encapsulates a set of filters that may be specified (optionally). Properties\n * that are not specified (e.g. <code>null</code> for simple properties) When\n * applied, these filters are AND-gated.\n *\n */\n<fim_suffix>public class FilterParams {\n\n    private final Collection<TargetUpdateStatus> filterByStatus;\n    private final Boolean overdueState;\n    private final String filterBySearchText;\n    private final Boolean selectTargetWithNoTag;\n    private final String[] filterByTagNames;\n    private final Long filterByDistributionId;\n\n    /**\n     * Constructor.\n     *\n     * @param filterByInstalledOrAssignedDistributionSetId\n     *            if set, a filter is added for the given\n     *            {@link DistributionSet#getId()}\n     * @param filterByStatus\n     *            if set, a filter is added for target states included by the\n     *            collection\n     * @param overdueState\n     *            if set, a filter is added for overdued devices\n     * @param filterBySearchText\n     *            if set, a filter is added for the given search text\n     * @param selectTargetWithNoTag\n     *            if set, tag-filtering is enabled\n     * @param filterByTagNames\n     *            if tag-filtering is enabled, a filter is added for the given\n     *            tag-names\n     */\n    public FilterParams(final Collection<TargetUpdateStatus> filterByStatus, final Boolean overdueState,\n            final String filterBySearchText, final Long filterByInstalledOrAssignedDistributionSetId,\n            final Boolean selectTargetWithNoTag, final String... filterByTagNames) {\n        this.filterByStatus = filterByStatus;\n        this.overdueState = overdueState;\n        this.filterBySearchText = filterBySearchText;\n        this.filterByDistributionId = filterByInstalledOrAssignedDistributionSetId;\n        this.selectTargetWithNoTag = selectTargetWithNoTag;\n        this.filterByTagNames = filterByTagNames;\n    }\n\n    /**\n     * Gets {@link DistributionSet#getId()} to filter the result. <br>\n     * If set to <code>null</code> this filter is disabled.\n     *\n     * @return {@link DistributionSet#getId()} to filter the result\n     */\n    public Long getFilterByDistributionId() {\n        return filterByDistributionId;\n    }\n\n    /**\n     * Gets a collection of target states to filter for. <br>\n     * If set to <code>null</code> this filter is disabled.\n     *\n     * @return collection of target states to filter for\n     */\n    public Collection<TargetUpdateStatus> getFilterByStatus() {\n        return filterByStatus;\n    }\n\n    /**\n     * Gets the flag for overdue filter; if set to <code>true</code>, the\n     * overdue filter is activated. Overdued targets a targets that did not\n     * respond during the configured intervals: poll_itvl + overdue_itvl. <br>\n     * If set to <code>null</code> this filter is disabled.\n     *\n     * @return flag for overdue filter activation\n     */\n    public Boolean getOverdueState() {\n        return overdueState;\n    }\n\n    /**\n     * Gets the search text to filter for. This is used to find targets having\n     * the text anywhere in name or description <br>\n     * If set to <code>null</code> this filter is disabled.\n     *\n     * @return the search text to filter for\n     */\n    public String getFilterBySearchText() {\n        return filterBySearchText;\n    }\n\n    /**\n     * Gets the flag indicating if tagging filter is used. <br>\n     * If set to <code>null</code> this filter is disabled.\n     *\n     * @return the flag indicating if tagging filter is used\n     */\n    public Boolean getSelectTargetWithNoTag() {\n        return selectTargetWithNoTag;\n    }\n\n    /**\n     * Gets the tags that are used to filter for. The activation of this filter\n     * is done by {@link #setSelectTargetWithNoTag(Boolean)}.\n     *\n     * @return the tags that are used to filter for\n     */\n    public String[] getFilterByTagNames() {\n        return filterByTagNames;\n    }\n}<fim_middle>// class below is data class\n"}