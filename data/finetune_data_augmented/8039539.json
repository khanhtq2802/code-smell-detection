{"text": "<fim_prefix>\tpublic ParameterElements getParameterAccess() {\n\t\treturn pParameter;\n\t}\n\tpublic ParserRule getParameterRule() {\n\t\treturn getParameterAccess().getRule();\n\t}\n\t//Post:\n\t//\t'post' constraintName=Identifier? ':' expression=Expression;\n\tpublic PostElements getPostAccess() {\n\t\treturn pPost;\n\t}\n\tpublic ParserRule getPostRule() {\n\t\treturn getPostAccess().getRule();\n\t}\n\t//Pre:\n\t//\t'pre' constraintName=Identifier? ':' expression=Expression;\n\tpublic PreElements getPreAccess() {\n\t\treturn pPre;\n\t}\n\tpublic ParserRule getPreRule() {\n\t\treturn getPreAccess().getRule();\n\t}\n\t//PropertyContextDecl:\n\t//\t'context' property=PropertyRef ':' type=TypeExp ((init=Init der=Der?)? | der=Der init=Init?);\n\tpublic PropertyContextDeclElements getPropertyContextDeclAccess() {\n\t\treturn pPropertyContextDecl;\n\t}\n\tpublic ParserRule getPropertyContextDeclRule() {\n\t\treturn getPropertyContextDeclAccess().getRule();\n\t}\n\t//PropertyRef:\n\t//\tQualifiedPropertyRef | SimplePropertyRef;\n\tpublic PropertyRefElements getPropertyRefAccess() {\n\t\treturn pPropertyRef;\n\t}\n\tpublic ParserRule getPropertyRefRule() {\n\t\treturn getPropertyRefAccess().getRule();\n\t}\n\t//QualifiedClassifierRef:\n\t//\tnamespace=Identifier\n\t//\t'::' element=ClassifierRef;\n\tpublic QualifiedClassifierRefElements getQualifiedClassifierRefAccess() {\n\t\treturn pQualifiedClassifierRef;\n\t}\n\tpublic ParserRule getQualifiedClassifierRefRule() {\n\t\treturn getQualifiedClassifierRefAccess().getRule();\n\t}\n\t//QualifiedOperationRef:\n\t//\tnamespace=Identifier\n\t//\t'::' element=OperationRef;\n\tpublic QualifiedOperationRefElements getQualifiedOperationRefAccess() {\n\t\treturn pQualifiedOperationRef;\n\t}\n\tpublic ParserRule getQualifiedOperationRefRule() {\n\t\treturn getQualifiedOperationRefAccess().getRule();\n\t}\n\t//QualifiedPropertyRef:\n\t//\tnamespace=Identifier\n\t//\t'::' element=PropertyRef;\n\tpublic QualifiedPropertyRefElements getQualifiedPropertyRefAccess() {\n\t\treturn pQualifiedPropertyRef;\n\t}\n\tpublic ParserRule getQualifiedPropertyRefRule() {\n\t\treturn getQualifiedPropertyRefAccess().getRule();\n\t}\n\t//QualifiedPackageRef:\n\t//\tnamespace=Identifier\n\t//\t'::' element=PackageRef;\n\tpublic QualifiedPackageRefElements getQualifiedPackageRefAccess() {\n\t\treturn pQualifiedPackageRef;\n\t}\n\tpublic ParserRule getQualifiedPackageRefRule() {\n\t\treturn getQualifiedPackageRefAccess().getRule();\n\t}\n\t//SimpleClassifierRef:\n\t//\tclassifier=Identifier;\n\tpublic SimpleClassifierRefElements getSimpleClassifierRefAccess() {\n\t\treturn pSimpleClassifierRef;\n\t}\n\tpublic ParserRule getSimpleClassifierRefRule() {\n\t\treturn getSimpleClassifierRefAccess().getRule();\n\t}\n\t//SimpleOperationRef:\n\t//\toperation=Identifier;\n\tpublic SimpleOperationRefElements getSimpleOperationRefAccess() {\n\t\treturn pSimpleOperationRef;\n\t}\n\tpublic ParserRule getSimpleOperationRefRule() {\n\t\treturn getSimpleOperationRefAccess().getRule();\n\t}\n\t//SimplePackageRef:\n\t//\tpackage=Identifier;\n\tpublic SimplePackageRefElements getSimplePackageRefAccess() {\n\t\treturn pSimplePackageRef;\n\t}\n\tpublic ParserRule getSimplePackageRefRule() {\n\t\treturn getSimplePackageRefAccess().getRule();\n\t}\n\t//SimplePropertyRef:\n\t//\tfeature=Identifier;\n\tpublic SimplePropertyRefElements getSimplePropertyRefAccess() {\n\t\treturn pSimplePropertyRef;\n\t}\n\tpublic ParserRule getSimplePropertyRefRule() {\n\t\treturn getSimplePropertyRefAccess().getRule();\n\t}\n\t////---------------------------------------------------------------------------------\n\t////\tEssentialOCL overrides\n\t////---------------------------------------------------------------------------------\n\t//NavigationExp Expression:\n\t//\tSubNavigationExp ({InfixExp.source=current} op=('.' | '->') argument=NavigatingExp | {OclMessage.source=current}\n\t//\top=('^^' | '^') messageName=Identifier\n\t//\t'(' (arguments+=OclMessageArg (',' arguments+=OclMessageArg)*)? ')')?;\n\tpublic NavigationExpElements getNavigationExpAccess() {\n\t\treturn pNavigationExp;\n\t}\n\tpublic ParserRule getNavigationExpRule() {\n\t\treturn getNavigationExpAccess().getRule();\n\t}\n\t//// Follows ., ->, ^\n\t//NavigatingExp:\n\t//\tSubNavigatingExp ({InfixExp.source=current} op=('.' | '->') argument=NavigatingExp | {OclMessage.source=current}\n\t//\top=('^^' | '^') messageName=Identifier\n\t//\t'(' (arguments+=OclMessageArg (',' arguments+=OclMessageArg)*)? ')')?;\n\tpublic NavigatingExpElements getNavigatingExpAccess() {\n\t\treturn pNavigatingExp;\n\t}\n\tpublic ParserRule getNavigatingExpRule() {\n\t\treturn getNavigatingExpAccess().getRule();\n\t}\n\t//// FIXME @pre\n\t//OclMessageArg:\n\t//\t{OclMessageArg} '?' (':' type=TypeExp)? | Expression;\n\tpublic OclMessageArgElements getOclMessageArgAccess() {\n\t\treturn pOclMessageArg;\n\t}\n\tpublic ParserRule getOclMessageArgRule() {\n\t\treturn getOclMessageArgAccess().getRule();\n\t}\n\t//NUMBER_LITERAL:\n\t//\tINT ('.' INT)? (('e' | 'E') ('+' | '-')? INT)?;\n\tpublic NUMBER_LITERALElements getNUMBER_LITERALAccess() {\n\t\treturn pNUMBER_LITERAL;\n\t}\n\tpublic ParserRule getNUMBER_LITERALRule() {\n\t\treturn getNUMBER_LITERALAccess().getRule();\n\t}\n\t//EssentialOCLRestrictedKeywords:\n\t//\t'e'\n\t//\t| 'E';\n\tpublic EssentialOCLRestrictedKeywordsElements getEssentialOCLRestrictedKeywordsAccess() {\n\t\treturn pEssentialOCLRestrictedKeywords;\n\t}\n\tpublic ParserRule getEssentialOCLRestrictedKeywordsRule() {\n\t\treturn getEssentialOCLRestrictedKeywordsAccess().getRule();\n\t}\n\t//RestrictedKeywords:\n\t//\tEssentialOCLRestrictedKeywords;\n\tpublic RestrictedKeywordsElements getRestrictedKeywordsAccess() {\n\t\treturn pRestrictedKeywords;\n\t}\n\tpublic ParserRule getRestrictedKeywordsRule() {\n\t\treturn getRestrictedKeywordsAccess().getRule();\n\t}\n\t//Identifier:\n\t//\tID\n\t//\t| RestrictedKeywords;\n\tpublic IdentifierElements getIdentifierAccess() {\n\t\treturn pIdentifier;\n\t}\n\tpublic ParserRule getIdentifierRule() {\n\t\treturn getIdentifierAccess().getRule();\n\t}\n\t//StringLiteral:\n\t//\tSTRING;\n\tpublic StringLiteralElements getStringLiteralAccess() {\n\t\treturn pStringLiteral;\n\t}\n\tpublic ParserRule getStringLiteralRule() {\n\t\treturn getStringLiteralAccess().getRule();\n\t}\n\t//SimpleName:\n\t//\tIdentifier;\n\tpublic SimpleNameElements getSimpleNameAccess() {\n\t\treturn pSimpleName;\n\t}\n\tpublic ParserRule getSimpleNameRule() {\n\t\treturn getSimpleNameAccess().getRule();\n\t}\n\t//PrimitiveTypeIdentifier:\n\t//\t'Boolean'\n\t//\t| 'Integer'\n\t//\t| 'Real'\n\t//\t| 'String'\n\t//\t| 'UnlimitedNatural'\n\t//\t| 'OclAny'\n\t//\t| 'OclInvalid'\n\t//\t| 'OclVoid';\n\tpublic PrimitiveTypeIdentifierElements getPrimitiveTypeIdentifierAccess() {\n\t\treturn pPrimitiveTypeIdentifier;\n\t}\n\tpublic ParserRule getPrimitiveTypeIdentifierRule() {\n\t\treturn getPrimitiveTypeIdentifierAccess().getRule();\n\t}\n\t//PrimitiveType:\n\t//\tname=PrimitiveTypeIdentifier;\n\tpublic PrimitiveTypeElements getPrimitiveTypeAccess() {\n\t\treturn pPrimitiveType;\n\t}\n\tpublic ParserRule getPrimitiveTypeRule() {\n\t\treturn getPrimitiveTypeAccess().getRule();\n\t}\n\t//CollectionTypeIdentifier:\n\t//\t'Set'\n\t//\t| 'Bag'\n\t//\t| 'Sequence'\n\t//\t| 'Collection'\n\t//\t| 'OrderedSet';\n\tpublic CollectionTypeIdentifierElements getCollectionTypeIdentifierAccess() {\n\t\treturn pCollectionTypeIdentifier;\n\t}\n<fim_suffix>\tpublic ParserRule getCollectionTypeIdentifierRule() {\n\t\treturn getCollectionTypeIdentifierAccess().getRule();\n\t}<fim_middle>// function below has no smell\n"}