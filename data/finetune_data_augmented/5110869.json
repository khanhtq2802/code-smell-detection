{"text": "<fim_prefix>    throws ManifoldCFException, IOException\n  {\n    Map<String,Object> velocityContext = new HashMap<String,Object>();\n    velocityContext.put(\"TabName\",tabName);\n    fillInDomainControllerTab(velocityContext,out,parameters);\n    fillInCacheTab(velocityContext, out, parameters);\n    Messages.outputResourceWithVelocity(out, locale, \"editADConfiguration_DomainController.html\", velocityContext);\n    Messages.outputResourceWithVelocity(out,locale,\"editADConfiguration_Cache.html\",velocityContext);\n  }\n  protected static void fillInDomainControllerTab(Map<String,Object> velocityContext, IPasswordMapperActivity mapper, ConfigParams parameters)\n  {\n    List<Map<String,String>> domainControllers = new ArrayList<Map<String,String>>();\n    // Go through nodes looking for DC nodes\n    for (int i = 0; i < parameters.getChildCount(); i++)\n    {\n      ConfigNode cn = parameters.getChild(i);\n      if (cn.getType().equals(SharePointConfig.NODE_DOMAINCONTROLLER))\n      {\n        // Grab the info\n        String dcSuffix = cn.getAttributeValue(SharePointConfig.ATTR_SUFFIX);\n        String dcDomainController = cn.getAttributeValue(SharePointConfig.ATTR_DOMAINCONTROLLER);\n        String dcUserName = cn.getAttributeValue(SharePointConfig.ATTR_USERNAME);\n        String dcPassword = deobfuscate(cn.getAttributeValue(SharePointConfig.ATTR_PASSWORD));\n        String dcAuthentication = cn.getAttributeValue(SharePointConfig.ATTR_AUTHENTICATION);\n        String dcUserACLsUsername = cn.getAttributeValue(SharePointConfig.ATTR_USERACLsUSERNAME);\n        domainControllers.add(createDomainControllerMap(mapper,dcSuffix,dcDomainController,dcUserName,dcPassword,dcAuthentication,dcUserACLsUsername));\n      }\n    }\n    velocityContext.put(\"DOMAINCONTROLLERS\", domainControllers);\n  }\n  protected static Map<String,String> createDomainControllerMap(IPasswordMapperActivity mapper, String suffix, String domainControllerName,\n    String userName, String password, String authentication, String userACLsUsername)\n  {\n    Map<String,String> defaultMap = new HashMap<String,String>();\n    if (suffix != null)\n      defaultMap.put(\"SUFFIX\",suffix);\n    if (domainControllerName != null)\n      defaultMap.put(\"DOMAINCONTROLLER\",domainControllerName);\n    if (userName != null)\n      defaultMap.put(\"USERNAME\",userName);\n    if (password != null)\n      defaultMap.put(\"PASSWORD\",mapper.mapPasswordToKey(password));\n    if (authentication != null)\n      defaultMap.put(\"AUTHENTICATION\",authentication);\n    if (userACLsUsername != null)\n      defaultMap.put(\"USERACLsUSERNAME\",userACLsUsername);\n    return defaultMap;\n  }\n  protected static void fillInCacheTab(Map<String,Object> velocityContext, IPasswordMapperActivity mapper, ConfigParams parameters)\n  {\n    String cacheLifetime = parameters.getParameter(SharePointConfig.PARAM_CACHELIFETIME);\n    if (cacheLifetime == null)\n      cacheLifetime = \"1\";\n    velocityContext.put(\"CACHELIFETIME\",cacheLifetime);\n    String cacheLRUsize = parameters.getParameter(SharePointConfig.PARAM_CACHELRUSIZE);\n    if (cacheLRUsize == null)\n      cacheLRUsize = \"1000\";\n    velocityContext.put(\"CACHELRUSIZE\",cacheLRUsize);\n  }\n  /** Process a configuration post.\n  * This method is called at the start of the authority connector's configuration page, whenever there is a possibility that form data for a connection has been\n  * posted.  Its purpose is to gather form information and modify the configuration parameters accordingly.\n  * The name of the posted form is \"editconnection\".\n  *@param threadContext is the local thread context.\n  *@param variableContext is the set of variables available from the post, including binary file post information.\n  *@param parameters are the configuration parameters, as they currently exist, for this connection being configured.\n  *@return null if all is well, or a string error message if there is an error that should prevent saving of the connection (and cause a redirection to an error page).\n  */\n  @Override\n  public String processConfigurationPost(IThreadContext threadContext, IPostParameters variableContext, Locale locale, ConfigParams parameters)\n    throws ManifoldCFException\n  {\n    String x = variableContext.getParameter(\"dcrecord_count\");\n    if (x != null)\n    {\n      // Delete old nodes\n      int i = 0;\n      while (i < parameters.getChildCount())\n      {\n        ConfigNode cn = parameters.getChild(i);\n        if (cn.getType().equals(SharePointConfig.NODE_DOMAINCONTROLLER))\n          parameters.removeChild(i);\n        else\n          i++;\n      }\n      // Scan form fields and apply operations\n      int count = Integer.parseInt(x);\n      i = 0;\n      String op;\n      Set<String> seenDomains = new HashSet<String>();\n      while (i < count)\n      {\n        op = variableContext.getParameter(\"dcrecord_op_\"+i);\n        if (op != null && op.equals(\"Insert\"))\n        {\n          // Insert a new record right here\n          addDomainController(seenDomains,parameters,\n            variableContext.getParameter(\"dcrecord_suffix\"),\n            variableContext.getParameter(\"dcrecord_domaincontrollername\"),\n            variableContext.getParameter(\"dcrecord_username\"),\n            variableContext.mapKeyToPassword(variableContext.getParameter(\"dcrecord_password\")),\n            variableContext.getParameter(\"dcrecord_authentication\"),\n            variableContext.getParameter(\"dcrecord_userACLsUsername\"));\n        }\n        if (op == null || !op.equals(\"Delete\"))\n        {\n          // Add this record back in\n          addDomainController(seenDomains,parameters,\n            variableContext.getParameter(\"dcrecord_suffix_\"+i),\n            variableContext.getParameter(\"dcrecord_domaincontrollername_\"+i),\n            variableContext.getParameter(\"dcrecord_username_\"+i),\n            variableContext.mapKeyToPassword(variableContext.getParameter(\"dcrecord_password_\"+i)),\n            variableContext.getParameter(\"dcrecord_authentication_\"+i),\n            variableContext.getParameter(\"dcrecord_userACLsUsername_\"+i));\n        }\n        i++;\n      }\n      op = variableContext.getParameter(\"dcrecord_op\");\n      if (op != null && op.equals(\"Add\"))\n      {\n        // Insert a new record right here\n        addDomainController(seenDomains,parameters,\n          variableContext.getParameter(\"dcrecord_suffix\"),\n          variableContext.getParameter(\"dcrecord_domaincontrollername\"),\n          variableContext.getParameter(\"dcrecord_username\"),\n          variableContext.getParameter(\"dcrecord_password\"),\n          variableContext.getParameter(\"dcrecord_authentication\"),\n          variableContext.getParameter(\"dcrecord_userACLsUsername\"));\n      }\n    }\n    // Cache parameters\n    String cacheLifetime = variableContext.getParameter(\"cachelifetime\");\n    if (cacheLifetime != null)\n      parameters.setParameter(SharePointConfig.PARAM_CACHELIFETIME,cacheLifetime);\n    String cacheLRUsize = variableContext.getParameter(\"cachelrusize\");\n    if (cacheLRUsize != null)\n      parameters.setParameter(SharePointConfig.PARAM_CACHELRUSIZE,cacheLRUsize);\n    return null;\n  }\n  protected static void addDomainController(Set<String> seenDomains, ConfigParams parameters,\n    String suffix, String domainControllerName, String userName, String password, String authentication,\n    String userACLsUsername)\n    throws ManifoldCFException\n  {\n    if (!seenDomains.contains(domainControllerName))\n    {\n      ConfigNode cn = new ConfigNode(SharePointConfig.NODE_DOMAINCONTROLLER);\n      cn.setAttribute(SharePointConfig.ATTR_SUFFIX,suffix);\n      cn.setAttribute(SharePointConfig.ATTR_DOMAINCONTROLLER,domainControllerName);\n      cn.setAttribute(SharePointConfig.ATTR_USERNAME,userName);\n      cn.setAttribute(SharePointConfig.ATTR_PASSWORD,ManifoldCF.obfuscate(password));\n      cn.setAttribute(SharePointConfig.ATTR_AUTHENTICATION,authentication);\n      cn.setAttribute(SharePointConfig.ATTR_USERACLsUSERNAME,userACLsUsername);\n      parameters.addChild(parameters.getChildCount(),cn);\n      seenDomains.add(domainControllerName);\n    }\n  }\n  /** View configuration.\n  * This method is called in the body section of the authority connector's view configuration page.  Its purpose is to present the connection information to the user.\n  * The coder can presume that the HTML that is output from this configuration will be within appropriate <html> and <body> tags.\n  *@param threadContext is the local thread context.\n  *@param out is the output to which any HTML should be sent.\n  *@param parameters are the configuration parameters, as they currently exist, for this connection being configured.\n  */\n<fim_suffix>  @Override\n  public void viewConfiguration(IThreadContext threadContext, IHTTPOutput out, Locale locale, ConfigParams parameters)\n    throws ManifoldCFException, IOException\n  {\n    Map<String,Object> velocityContext = new HashMap<String,Object>();\n    fillInDomainControllerTab(velocityContext,out,parameters);\n    fillInCacheTab(velocityContext,out,parameters);\n    Messages.outputResourceWithVelocity(out,locale,\"viewADConfiguration.html\",velocityContext);\n  }<fim_middle>// function below has no smell\n"}