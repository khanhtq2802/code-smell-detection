{"text": "<fim_prefix>          oprot.writeString(struct.tbl_name);\n        }\n        if (struct.isSetNew_part()) {\n          struct.new_part.write(oprot);\n        }\n        if (struct.isSetEnvironment_context()) {\n          struct.environment_context.write(oprot);\n        }\n      }\n      @Override\n      public void read(org.apache.thrift.protocol.TProtocol prot, alter_partition_with_environment_context_args struct) throws org.apache.thrift.TException {\n        TTupleProtocol iprot = (TTupleProtocol) prot;\n        BitSet incoming = iprot.readBitSet(4);\n        if (incoming.get(0)) {\n          struct.db_name = iprot.readString();\n          struct.setDb_nameIsSet(true);\n        }\n        if (incoming.get(1)) {\n          struct.tbl_name = iprot.readString();\n          struct.setTbl_nameIsSet(true);\n        }\n        if (incoming.get(2)) {\n          struct.new_part = new Partition();\n          struct.new_part.read(iprot);\n          struct.setNew_partIsSet(true);\n        }\n        if (incoming.get(3)) {\n          struct.environment_context = new EnvironmentContext();\n          struct.environment_context.read(iprot);\n          struct.setEnvironment_contextIsSet(true);\n        }\n      }\n    }\n  }\n  @org.apache.hadoop.classification.InterfaceAudience.Public @org.apache.hadoop.classification.InterfaceStability.Stable public static class alter_partition_with_environment_context_result implements org.apache.thrift.TBase<alter_partition_with_environment_context_result, alter_partition_with_environment_context_result._Fields>, java.io.Serializable, Cloneable, Comparable<alter_partition_with_environment_context_result>   {\n    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct(\"alter_partition_with_environment_context_result\");\n    private static final org.apache.thrift.protocol.TField O1_FIELD_DESC = new org.apache.thrift.protocol.TField(\"o1\", org.apache.thrift.protocol.TType.STRUCT, (short)1);\n    private static final org.apache.thrift.protocol.TField O2_FIELD_DESC = new org.apache.thrift.protocol.TField(\"o2\", org.apache.thrift.protocol.TType.STRUCT, (short)2);\n    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();\n    static {\n      schemes.put(StandardScheme.class, new alter_partition_with_environment_context_resultStandardSchemeFactory());\n      schemes.put(TupleScheme.class, new alter_partition_with_environment_context_resultTupleSchemeFactory());\n    }\n    private InvalidOperationException o1; // required\n    private MetaException o2; // required\n    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */\n    public enum _Fields implements org.apache.thrift.TFieldIdEnum {\n      O1((short)1, \"o1\"),\n      O2((short)2, \"o2\");\n      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();\n      static {\n        for (_Fields field : EnumSet.allOf(_Fields.class)) {\n          byName.put(field.getFieldName(), field);\n        }\n      }\n      /**\n       * Find the _Fields constant that matches fieldId, or null if its not found.\n       */\n      public static _Fields findByThriftId(int fieldId) {\n        switch(fieldId) {\n          case 1: // O1\n            return O1;\n          case 2: // O2\n            return O2;\n          default:\n            return null;\n        }\n      }\n      /**\n       * Find the _Fields constant that matches fieldId, throwing an exception\n       * if it is not found.\n       */\n      public static _Fields findByThriftIdOrThrow(int fieldId) {\n        _Fields fields = findByThriftId(fieldId);\n        if (fields == null) throw new IllegalArgumentException(\"Field \" + fieldId + \" doesn't exist!\");\n        return fields;\n      }\n      /**\n       * Find the _Fields constant that matches name, or null if its not found.\n       */\n      public static _Fields findByName(String name) {\n        return byName.get(name);\n      }\n      private final short _thriftId;\n      private final String _fieldName;\n      _Fields(short thriftId, String fieldName) {\n        _thriftId = thriftId;\n        _fieldName = fieldName;\n      }\n      public short getThriftFieldId() {\n        return _thriftId;\n      }\n      public String getFieldName() {\n        return _fieldName;\n      }\n    }\n    // isset id assignments\n    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;\n    static {\n      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);\n      tmpMap.put(_Fields.O1, new org.apache.thrift.meta_data.FieldMetaData(\"o1\", org.apache.thrift.TFieldRequirementType.DEFAULT, \n          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRUCT)));\n      tmpMap.put(_Fields.O2, new org.apache.thrift.meta_data.FieldMetaData(\"o2\", org.apache.thrift.TFieldRequirementType.DEFAULT, \n          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRUCT)));\n      metaDataMap = Collections.unmodifiableMap(tmpMap);\n      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(alter_partition_with_environment_context_result.class, metaDataMap);\n    }\n    public alter_partition_with_environment_context_result() {\n    }\n    public alter_partition_with_environment_context_result(\n      InvalidOperationException o1,\n      MetaException o2)\n    {\n      this();\n      this.o1 = o1;\n      this.o2 = o2;\n    }\n    /**\n     * Performs a deep copy on <i>other</i>.\n     */\n    public alter_partition_with_environment_context_result(alter_partition_with_environment_context_result other) {\n      if (other.isSetO1()) {\n        this.o1 = new InvalidOperationException(other.o1);\n      }\n      if (other.isSetO2()) {\n        this.o2 = new MetaException(other.o2);\n      }\n    }\n    public alter_partition_with_environment_context_result deepCopy() {\n      return new alter_partition_with_environment_context_result(this);\n    }\n    @Override\n    public void clear() {\n      this.o1 = null;\n      this.o2 = null;\n    }\n    public InvalidOperationException getO1() {\n      return this.o1;\n    }\n    public void setO1(InvalidOperationException o1) {\n      this.o1 = o1;\n    }\n    public void unsetO1() {\n      this.o1 = null;\n    }\n    /** Returns true if field o1 is set (has been assigned a value) and false otherwise */\n    public boolean isSetO1() {\n      return this.o1 != null;\n    }\n    public void setO1IsSet(boolean value) {\n      if (!value) {\n        this.o1 = null;\n      }\n    }\n    public MetaException getO2() {\n      return this.o2;\n    }\n    public void setO2(MetaException o2) {\n      this.o2 = o2;\n    }\n    public void unsetO2() {\n      this.o2 = null;\n    }\n    /** Returns true if field o2 is set (has been assigned a value) and false otherwise */\n    public boolean isSetO2() {\n      return this.o2 != null;\n    }\n    public void setO2IsSet(boolean value) {\n      if (!value) {\n        this.o2 = null;\n      }\n    }\n    public void setFieldValue(_Fields field, Object value) {\n      switch (field) {\n      case O1:\n        if (value == null) {\n          unsetO1();\n        } else {\n          setO1((InvalidOperationException)value);\n        }\n        break;\n      case O2:\n        if (value == null) {\n          unsetO2();\n        } else {\n          setO2((MetaException)value);\n        }\n        break;\n      }\n    }\n    public Object getFieldValue(_Fields field) {\n      switch (field) {\n      case O1:\n        return getO1();\n      case O2:\n        return getO2();\n      }\n      throw new IllegalStateException();\n    }\n    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */\n<fim_suffix>    public boolean isSet(_Fields field) {\n      if (field == null) {\n        throw new IllegalArgumentException();\n      }\n      switch (field) {\n      case O1:\n        return isSetO1();\n      case O2:\n        return isSetO2();\n      }\n      throw new IllegalStateException();\n    }<fim_middle>// function below has no smell\n"}