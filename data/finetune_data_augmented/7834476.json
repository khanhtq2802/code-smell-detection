{"text": "<fim_prefix>/*\n * Licensed to the Apache Software Foundation (ASF) under one or more contributor license\n * agreements. See the NOTICE file distributed with this work for additional information regarding\n * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance with the License. You may obtain a\n * copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n *\n */\n\npackage org.apache.geode.internal.cache.tier.sockets;\n\nimport java.io.ByteArrayInputStream;\nimport java.io.DataInputStream;\n\npublic class AuthIds {\n  private long connectionId;\n  private long uniqueId;\n\n  public AuthIds(byte[] bytes) throws Exception {\n    DataInputStream dis = new DataInputStream(new ByteArrayInputStream(bytes));\n    if (bytes.length == 8) {\n      // only connectionid\n      connectionId = dis.readLong();\n    } else if (bytes.length == 16) {\n      // first connectionId and then uniqueID\n      connectionId = dis.readLong();\n      uniqueId = dis.readLong();\n    } else {\n      throw new Exception(\"Auth ids are not in right form\");\n    }\n  }\n\n\n<fim_suffix>  public long getConnectionId() {\n    return connectionId;\n  }\n\n  public long getUniqueId() {\n    return this.uniqueId;\n  }\n}<fim_middle>// function below has no smell\n"}