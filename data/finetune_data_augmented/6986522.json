{"text": "<fim_prefix>/*\n * Copyright 2015 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n * use this file except in compliance with the License. You may obtain a copy of\n * the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations under\n * the License.\n */\npackage com.google.j2cl.ast;\n\nimport static com.google.common.base.Preconditions.checkNotNull;\n\nimport com.google.j2cl.ast.annotations.Visitable;\nimport com.google.j2cl.common.SourcePosition;\n\n/**\n * Synchronized statement.\n */\n@Visitable\npublic class SynchronizedStatement extends Statement {\n  @Visitable Expression expression;\n  @Visitable Block body;\n\n<fim_suffix>  public SynchronizedStatement(SourcePosition sourcePosition, Expression expression, Block body) {\n    super(sourcePosition);\n    this.expression = checkNotNull(expression);\n    this.body = checkNotNull(body);\n  }\n\n  public Expression getExpression() {\n    return expression;\n  }\n\n  public Block getBody() {\n    return body;\n  }\n\n  @Override\n  public SynchronizedStatement clone() {\n    return new SynchronizedStatement(getSourcePosition(), expression.clone(), body.clone());\n  }\n\n  @Override\n  public Node accept(Processor processor) {\n    return Visitor_SynchronizedStatement.visit(processor, this);\n  }\n}<fim_middle>// function below has no smell\n"}