{"text": "<fim_prefix>            error(nvae);\n            throw nvae;\n        }\n    }\n    static final String[] dfa_57s = {\n            \"\\5\\2\\5\\uffff\\1\\1\\3\\uffff\\2\\2\\6\\uffff\\1\\2\\14\\uffff\\1\\2\\2\\uffff\\2\\2\\4\\uffff\\1\\2\\6\\uffff\\1\\2\\3\\uffff\\1\\2\\1\\uffff\\1\\2\\3\\uffff\\3\\2\\2\\uffff\\15\\2\\1\\uffff\\1\\2\",\n            \"\\1\\uffff\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\"\n    };\n    static final short[][] dfa_57 = unpackEncodedStringArray(dfa_57s);\n    class DFA61 extends DFA {\n        public DFA61(BaseRecognizer recognizer) {\n            this.recognizer = recognizer;\n            this.decisionNumber = 61;\n            this.eot = dfa_7;\n            this.eof = dfa_7;\n            this.min = dfa_8;\n            this.max = dfa_9;\n            this.accept = dfa_10;\n            this.special = dfa_11;\n            this.transition = dfa_57;\n        }\n        public String getDescription() {\n            return \"3480:3: ( ( ( ( ( '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> (otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_switch_5_0= ruleXExpression ) ) otherlv_6= ')' ) | ( ( ( ( ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= ':' ) )? ( (lv_switch_9_0= ruleXExpression ) ) ) )\";\n        }\n        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {\n            TokenStream input = (TokenStream)_input;\n        \tint _s = s;\n            switch ( s ) {\n                    case 0 : \n                        int LA61_1 = input.LA(1);\n                        int index61_1 = input.index();\n                        input.rewind();\n                        s = -1;\n                        if ( (synpred32_InternalXbaseWithAnnotations()) ) {s = 34;}\n                        else if ( (true) ) {s = 2;}\n                        input.seek(index61_1);\n                        if ( s>=0 ) return s;\n                        break;\n            }\n            if (state.backtracking>0) {state.failed=true; return -1;}\n            NoViableAltException nvae =\n                new NoViableAltException(getDescription(), 61, _s, input);\n            error(nvae);\n            throw nvae;\n        }\n    }\n    static final String dfa_58s = \"\\42\\uffff\";\n    static final String dfa_59s = \"\\1\\4\\2\\0\\37\\uffff\";\n    static final String dfa_60s = \"\\1\\124\\2\\0\\37\\uffff\";\n    static final String dfa_61s = \"\\3\\uffff\\1\\1\\1\\2\\35\\uffff\";\n    static final String dfa_62s = \"\\1\\0\\1\\1\\1\\2\\37\\uffff}>\";\n    static final String[] dfa_63s = {\n            \"\\4\\4\\1\\1\\5\\uffff\\1\\2\\3\\uffff\\2\\4\\6\\uffff\\1\\4\\14\\uffff\\1\\3\\2\\uffff\\2\\4\\4\\uffff\\1\\4\\6\\uffff\\1\\4\\3\\uffff\\1\\4\\1\\uffff\\1\\4\\3\\uffff\\3\\4\\2\\uffff\\15\\4\\1\\uffff\\1\\4\",\n            \"\\1\\uffff\",\n            \"\\1\\uffff\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\"\n    };\n    static final short[] dfa_58 = DFA.unpackEncodedString(dfa_58s);\n    static final char[] dfa_59 = DFA.unpackEncodedStringToUnsignedChars(dfa_59s);\n    static final char[] dfa_60 = DFA.unpackEncodedStringToUnsignedChars(dfa_60s);\n    static final short[] dfa_61 = DFA.unpackEncodedString(dfa_61s);\n    static final short[] dfa_62 = DFA.unpackEncodedString(dfa_62s);\n    static final short[][] dfa_63 = unpackEncodedStringArray(dfa_63s);\n    class DFA60 extends DFA {\n        public DFA60(BaseRecognizer recognizer) {\n            this.recognizer = recognizer;\n            this.decisionNumber = 60;\n            this.eot = dfa_58;\n            this.eof = dfa_58;\n            this.min = dfa_59;\n            this.max = dfa_60;\n            this.accept = dfa_61;\n            this.special = dfa_62;\n            this.transition = dfa_63;\n        }\n        public String getDescription() {\n            return \"3549:5: ( ( ( ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= ':' ) )?\";\n        }\n<fim_suffix>        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {\n            TokenStream input = (TokenStream)_input;\n        \tint _s = s;\n            switch ( s ) {\n                    case 0 : \n                        int LA60_0 = input.LA(1);\n                        int index60_0 = input.index();\n                        input.rewind();\n                        s = -1;\n                        if ( (LA60_0==RULE_ID) ) {s = 1;}\n                        else if ( (LA60_0==14) ) {s = 2;}\n                        else if ( (LA60_0==39) && (synpred33_InternalXbaseWithAnnotations())) {s = 3;}\n                        else if ( ((LA60_0>=RULE_STRING && LA60_0<=RULE_DECIMAL)||(LA60_0>=18 && LA60_0<=19)||LA60_0==26||(LA60_0>=42 && LA60_0<=43)||LA60_0==48||LA60_0==55||LA60_0==59||LA60_0==61||(LA60_0>=65 && LA60_0<=67)||(LA60_0>=70 && LA60_0<=82)||LA60_0==84) ) {s = 4;}\n                        input.seek(index60_0);\n                        if ( s>=0 ) return s;\n                        break;\n                    case 1 : \n                        int LA60_1 = input.LA(1);\n                        int index60_1 = input.index();\n                        input.rewind();\n                        s = -1;\n                        if ( (synpred33_InternalXbaseWithAnnotations()) ) {s = 3;}\n                        else if ( (true) ) {s = 4;}\n                        input.seek(index60_1);\n                        if ( s>=0 ) return s;\n                        break;\n                    case 2 : \n                        int LA60_2 = input.LA(1);\n                        int index60_2 = input.index();\n                        input.rewind();\n                        s = -1;\n                        if ( (synpred33_InternalXbaseWithAnnotations()) ) {s = 3;}\n                        else if ( (true) ) {s = 4;}\n                        input.seek(index60_2);\n                        if ( s>=0 ) return s;\n                        break;\n            }\n            if (state.backtracking>0) {state.failed=true; return -1;}\n            NoViableAltException nvae =\n                new NoViableAltException(getDescription(), 60, _s, input);\n            error(nvae);\n            throw nvae;\n        }<fim_middle>// function below is long method and feature envy\n"}