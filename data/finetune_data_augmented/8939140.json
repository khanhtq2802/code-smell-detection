{"text": "<fim_prefix>            {\n              _elem1538 = new Role();\n              _elem1538.read(iprot);\n              struct.success.add(_elem1538);\n            }\n          }\n          struct.setSuccessIsSet(true);\n        }\n        if (incoming.get(1)) {\n          struct.o1 = new MetaException();\n          struct.o1.read(iprot);\n          struct.setO1IsSet(true);\n        }\n      }\n    }\n  }\n  @org.apache.hadoop.classification.InterfaceAudience.Public @org.apache.hadoop.classification.InterfaceStability.Stable public static class grant_revoke_role_args implements org.apache.thrift.TBase<grant_revoke_role_args, grant_revoke_role_args._Fields>, java.io.Serializable, Cloneable, Comparable<grant_revoke_role_args>   {\n    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct(\"grant_revoke_role_args\");\n    private static final org.apache.thrift.protocol.TField REQUEST_FIELD_DESC = new org.apache.thrift.protocol.TField(\"request\", org.apache.thrift.protocol.TType.STRUCT, (short)1);\n    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();\n    static {\n      schemes.put(StandardScheme.class, new grant_revoke_role_argsStandardSchemeFactory());\n      schemes.put(TupleScheme.class, new grant_revoke_role_argsTupleSchemeFactory());\n    }\n    private GrantRevokeRoleRequest request; // required\n    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */\n    public enum _Fields implements org.apache.thrift.TFieldIdEnum {\n      REQUEST((short)1, \"request\");\n      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();\n      static {\n        for (_Fields field : EnumSet.allOf(_Fields.class)) {\n          byName.put(field.getFieldName(), field);\n        }\n      }\n      /**\n       * Find the _Fields constant that matches fieldId, or null if its not found.\n       */\n      public static _Fields findByThriftId(int fieldId) {\n        switch(fieldId) {\n          case 1: // REQUEST\n            return REQUEST;\n          default:\n            return null;\n        }\n      }\n      /**\n       * Find the _Fields constant that matches fieldId, throwing an exception\n       * if it is not found.\n       */\n      public static _Fields findByThriftIdOrThrow(int fieldId) {\n        _Fields fields = findByThriftId(fieldId);\n        if (fields == null) throw new IllegalArgumentException(\"Field \" + fieldId + \" doesn't exist!\");\n        return fields;\n      }\n      /**\n       * Find the _Fields constant that matches name, or null if its not found.\n       */\n      public static _Fields findByName(String name) {\n        return byName.get(name);\n      }\n      private final short _thriftId;\n      private final String _fieldName;\n      _Fields(short thriftId, String fieldName) {\n        _thriftId = thriftId;\n        _fieldName = fieldName;\n      }\n      public short getThriftFieldId() {\n        return _thriftId;\n      }\n      public String getFieldName() {\n        return _fieldName;\n      }\n    }\n    // isset id assignments\n    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;\n    static {\n      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);\n      tmpMap.put(_Fields.REQUEST, new org.apache.thrift.meta_data.FieldMetaData(\"request\", org.apache.thrift.TFieldRequirementType.DEFAULT, \n          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, GrantRevokeRoleRequest.class)));\n      metaDataMap = Collections.unmodifiableMap(tmpMap);\n      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(grant_revoke_role_args.class, metaDataMap);\n    }\n    public grant_revoke_role_args() {\n    }\n    public grant_revoke_role_args(\n      GrantRevokeRoleRequest request)\n    {\n      this();\n      this.request = request;\n    }\n    /**\n     * Performs a deep copy on <i>other</i>.\n     */\n    public grant_revoke_role_args(grant_revoke_role_args other) {\n      if (other.isSetRequest()) {\n        this.request = new GrantRevokeRoleRequest(other.request);\n      }\n    }\n    public grant_revoke_role_args deepCopy() {\n      return new grant_revoke_role_args(this);\n    }\n    @Override\n    public void clear() {\n      this.request = null;\n    }\n    public GrantRevokeRoleRequest getRequest() {\n      return this.request;\n    }\n    public void setRequest(GrantRevokeRoleRequest request) {\n      this.request = request;\n    }\n    public void unsetRequest() {\n      this.request = null;\n    }\n    /** Returns true if field request is set (has been assigned a value) and false otherwise */\n    public boolean isSetRequest() {\n      return this.request != null;\n    }\n    public void setRequestIsSet(boolean value) {\n      if (!value) {\n        this.request = null;\n      }\n    }\n    public void setFieldValue(_Fields field, Object value) {\n      switch (field) {\n      case REQUEST:\n        if (value == null) {\n          unsetRequest();\n        } else {\n          setRequest((GrantRevokeRoleRequest)value);\n        }\n        break;\n      }\n    }\n    public Object getFieldValue(_Fields field) {\n      switch (field) {\n      case REQUEST:\n        return getRequest();\n      }\n      throw new IllegalStateException();\n    }\n    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */\n    public boolean isSet(_Fields field) {\n      if (field == null) {\n        throw new IllegalArgumentException();\n      }\n      switch (field) {\n      case REQUEST:\n        return isSetRequest();\n      }\n      throw new IllegalStateException();\n    }\n    @Override\n    public boolean equals(Object that) {\n      if (that == null)\n        return false;\n      if (that instanceof grant_revoke_role_args)\n        return this.equals((grant_revoke_role_args)that);\n      return false;\n    }\n    public boolean equals(grant_revoke_role_args that) {\n      if (that == null)\n        return false;\n      boolean this_present_request = true && this.isSetRequest();\n      boolean that_present_request = true && that.isSetRequest();\n      if (this_present_request || that_present_request) {\n        if (!(this_present_request && that_present_request))\n          return false;\n        if (!this.request.equals(that.request))\n          return false;\n      }\n      return true;\n    }\n    @Override\n    public int hashCode() {\n      List<Object> list = new ArrayList<Object>();\n      boolean present_request = true && (isSetRequest());\n      list.add(present_request);\n      if (present_request)\n        list.add(request);\n      return list.hashCode();\n    }\n    @Override\n    public int compareTo(grant_revoke_role_args other) {\n      if (!getClass().equals(other.getClass())) {\n        return getClass().getName().compareTo(other.getClass().getName());\n      }\n      int lastComparison = 0;\n      lastComparison = Boolean.valueOf(isSetRequest()).compareTo(other.isSetRequest());\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n      if (isSetRequest()) {\n        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.request, other.request);\n        if (lastComparison != 0) {\n          return lastComparison;\n        }\n      }\n      return 0;\n    }\n    public _Fields fieldForId(int fieldId) {\n      return _Fields.findByThriftId(fieldId);\n    }\n    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {\n      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);\n    }\n    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {\n      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);\n    }\n    @Override\n    public String toString() {\n      StringBuilder sb = new StringBuilder(\"grant_revoke_role_args(\");\n      boolean first = true;\n      sb.append(\"request:\");\n      if (this.request == null) {\n        sb.append(\"null\");\n      } else {\n        sb.append(this.request);\n      }\n      first = false;\n      sb.append(\")\");\n      return sb.toString();\n    }\n<fim_suffix>    public void validate() throws org.apache.thrift.TException {\n      // check for required fields\n      // check for sub-struct validity\n      if (request != null) {\n        request.validate();\n      }\n    }<fim_middle>// function below has no smell\n"}