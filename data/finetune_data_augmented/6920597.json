{"text": "<fim_prefix>/* Copyright (c) 2008 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\npackage com.google.gdata.data.analytics;\n\nimport com.google.gdata.data.BaseFeed;\nimport com.google.gdata.data.ExtensionProfile;\n\nimport java.util.List;\n\n/**\n * Feed element in account feed.\n *\n * \n */\npublic class AccountFeed extends BaseFeed<AccountFeed, AccountEntry> {\n\n  /**\n   * Default mutable constructor.\n   */\n  public AccountFeed() {\n    super(AccountEntry.class);\n    setKind(\"analytics#accounts\");\n  }\n\n  /**\n   * Constructs a new instance by doing a shallow copy of data from an existing\n   * {@link BaseFeed} instance.\n   *\n   * @param sourceFeed source feed\n   */\n  public AccountFeed(BaseFeed<?, ?> sourceFeed) {\n    super(AccountEntry.class, sourceFeed);\n  }\n\n  @Override\n  public void declareExtensions(ExtensionProfile extProfile) {\n    if (extProfile.isDeclared(AccountFeed.class)) {\n      return;\n    }\n    super.declareExtensions(extProfile);\n    extProfile.declare(AccountFeed.class, Segment.getDefaultDescription(false,\n        true));\n    new Segment().declareExtensions(extProfile);\n  }\n\n  /**\n   * Returns the segments.\n   *\n   * @return segments\n   */\n  public List<Segment> getSegments() {\n    return getRepeatingExtension(Segment.class);\n  }\n\n  /**\n   * Adds a new segment.\n   *\n   * @param segment segment\n   */\n<fim_suffix>  public void addSegment(Segment segment) {\n    getSegments().add(segment);\n  }\n\n  /**\n   * Returns whether it has the segments.\n   *\n   * @return whether it has the segments\n   */\n  public boolean hasSegments() {\n    return hasRepeatingExtension(Segment.class);\n  }\n\n  @Override\n  protected void validate() {\n  }\n\n  @Override\n  public String toString() {\n    return \"{AccountFeed \" + super.toString() + \"}\";\n  }\n\n}\n<fim_middle>// function below has no smell\n"}