{"text": "<fim_prefix>/*\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage org.apache.rocketmq.mysql;\n\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.lang.reflect.Method;\nimport java.util.Properties;\n\n\n<fim_suffix>public class Config {\n\n    public String mysqlAddr;\n    public Integer mysqlPort;\n    public String mysqlUsername;\n    public String mysqlPassword;\n\n    public String mqNamesrvAddr;\n    public String mqTopic;\n\n    public String startType = \"DEFAULT\";\n    public String binlogFilename;\n    public Long nextPosition;\n    public Integer maxTransactionRows = 100;\n\n    public void load() throws IOException {\n\n        InputStream in = Config.class.getClassLoader().getResourceAsStream(\"rocketmq_mysql.conf\");\n        Properties properties = new Properties();\n        properties.load(in);\n\n        properties2Object(properties, this);\n\n    }\n\n    private void properties2Object(final Properties p, final Object object) {\n        Method[] methods = object.getClass().getMethods();\n        for (Method method : methods) {\n            String mn = method.getName();\n            if (mn.startsWith(\"set\")) {\n                try {\n                    String tmp = mn.substring(4);\n                    String first = mn.substring(3, 4);\n\n                    String key = first.toLowerCase() + tmp;\n                    String property = p.getProperty(key);\n                    if (property != null) {\n                        Class<?>[] pt = method.getParameterTypes();\n                        if (pt != null && pt.length > 0) {\n                            String cn = pt[0].getSimpleName();\n                            Object arg;\n                            if (cn.equals(\"int\") || cn.equals(\"Integer\")) {\n                                arg = Integer.parseInt(property);\n                            } else if (cn.equals(\"long\") || cn.equals(\"Long\")) {\n                                arg = Long.parseLong(property);\n                            } else if (cn.equals(\"double\") || cn.equals(\"Double\")) {\n                                arg = Double.parseDouble(property);\n                            } else if (cn.equals(\"boolean\") || cn.equals(\"Boolean\")) {\n                                arg = Boolean.parseBoolean(property);\n                            } else if (cn.equals(\"float\") || cn.equals(\"Float\")) {\n                                arg = Float.parseFloat(property);\n                            } else if (cn.equals(\"String\")) {\n                                arg = property;\n                            } else {\n                                continue;\n                            }\n                            method.invoke(object, arg);\n                        }\n                    }\n                } catch (Throwable ignored) {\n                }\n            }\n        }\n    }\n\n    public void setMysqlAddr(String mysqlAddr) {\n        this.mysqlAddr = mysqlAddr;\n    }\n\n    public void setMysqlPort(Integer mysqlPort) {\n        this.mysqlPort = mysqlPort;\n    }\n\n    public void setMysqlUsername(String mysqlUsername) {\n        this.mysqlUsername = mysqlUsername;\n    }\n\n    public void setMysqlPassword(String mysqlPassword) {\n        this.mysqlPassword = mysqlPassword;\n    }\n\n    public void setBinlogFilename(String binlogFilename) {\n        this.binlogFilename = binlogFilename;\n    }\n\n    public void setNextPosition(Long nextPosition) {\n        this.nextPosition = nextPosition;\n    }\n\n    public void setMaxTransactionRows(Integer maxTransactionRows) {\n        this.maxTransactionRows = maxTransactionRows;\n    }\n\n    public void setMqNamesrvAddr(String mqNamesrvAddr) {\n        this.mqNamesrvAddr = mqNamesrvAddr;\n    }\n\n    public void setMqTopic(String mqTopic) {\n        this.mqTopic = mqTopic;\n    }\n\n    public void setStartType(String startType) {\n        this.startType = startType;\n    }\n}<fim_middle>// class below is data class\n"}