{"text": "<fim_prefix>/*\n *  Licensed to the Apache Software Foundation (ASF) under one\n *  or more contributor license agreements.  See the NOTICE file\n *  distributed with this work for additional information\n *  regarding copyright ownership.  The ASF licenses this file\n *  to you under the Apache License, Version 2.0 (the\n *  \"License\"); you may not use this file except in compliance\n *  with the License.  You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing,\n *  software distributed under the License is distributed on an\n *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n *  KIND, either express or implied.  See the License for the\n *  specific language governing permissions and limitations\n *  under the License.\n */\npackage org.apache.isis.viewer.wicket.ui.errors;\n\nimport com.google.common.base.Strings;\n\nimport org.apache.wicket.Component;\nimport org.apache.wicket.ajax.AbstractDefaultAjaxBehavior;\nimport org.apache.wicket.ajax.AjaxRequestTarget;\nimport org.apache.wicket.markup.head.IHeaderResponse;\nimport org.apache.wicket.markup.head.JavaScriptHeaderItem;\nimport org.apache.wicket.markup.head.OnDomReadyHeaderItem;\nimport org.apache.wicket.request.resource.JavaScriptResourceReference;\n\nimport org.apache.isis.applib.RecoverableException;\nimport org.apache.isis.core.commons.authentication.MessageBroker;\nimport org.apache.isis.core.runtime.system.context.IsisContext;\nimport org.apache.isis.core.runtime.system.session.IsisSessionFactory;\n\n/**\n * Attach to any Ajax button that might trigger a notification (ie calls\n * {@link MessageBroker#addMessage(String)}, {@link MessageBroker#addWarning(String)},\n * {@link MessageBroker#setApplicationError(String)} or throws an {@link RecoverableException}). \n * \n * <p>\n * Attach using the standard Wicket code:\n * <pre>\n * Button editButton = new AjaxButton(ID_EDIT_BUTTON, Model.of(\"Edit\")) { ... }\n * editButton.add(new JGrowlBehaviour());\n * </pre>\n */\npublic class JGrowlBehaviour extends AbstractDefaultAjaxBehavior {\n\n    private static final long serialVersionUID = 1L;\n\n    @Override\n    protected void respond(AjaxRequestTarget target) {\n        String feedbackMsg = JGrowlUtil.asJGrowlCalls(getMessageBroker());\n        if(!Strings.isNullOrEmpty(feedbackMsg)) {\n            target.appendJavaScript(feedbackMsg);\n        }\n    }\n\n<fim_suffix>    @Override\n    public void renderHead(Component component, IHeaderResponse response) {\n        super.renderHead(component, response);\n\n        renderFeedbackMessages(response);\n    }\n\n    public void renderFeedbackMessages(IHeaderResponse response) {\n        response.render(JavaScriptHeaderItem.forReference(new JavaScriptResourceReference(JGrowlBehaviour.class, \"js/bootstrap-growl.js\")));\n\n        String feedbackMsg = JGrowlUtil.asJGrowlCalls(getMessageBroker());\n        if(!Strings.isNullOrEmpty(feedbackMsg)) {\n            response.render(OnDomReadyHeaderItem.forScript(feedbackMsg));\n        }\n    }\n\n\n    protected MessageBroker getMessageBroker() {\n        return getIsisSessionFactory().getCurrentSession().getAuthenticationSession().getMessageBroker();\n    }\n\n    IsisSessionFactory getIsisSessionFactory() {\n        return IsisContext.getSessionFactory();\n    }\n\n}<fim_middle>// function below has no smell\n"}