{"text": "<fim_prefix>/**\n * Copyright (c) 2015 Bosch Software Innovations GmbH and others.\n *\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n */\npackage org.eclipse.hawkbit;\n\nimport org.springframework.boot.context.properties.ConfigurationProperties;\n\n/**\n * Properties for the server e.g. the server's URL which must be configured.\n * \n */\n@ConfigurationProperties(\"hawkbit.server\")\npublic class HawkbitServerProperties {\n    /**\n     * Defines under which URI the update server can be reached. Used to\n     * calculate download URLs for DMF transmitted update actions.\n     */\n    private String url = \"http://localhost:8080\";\n\n    private final Anonymous anonymous = new Anonymous();\n\n    private final Build build = new Build();\n\n    public Anonymous getAnonymous() {\n        return anonymous;\n    }\n\n    public Build getBuild() {\n        return build;\n    }\n\n    /**\n     * Properties for anonymous API access by Devices/Controllers.\n     *\n     */\n    public static class Anonymous {\n        private final Download download = new Download();\n\n        public Download getDownload() {\n            return download;\n        }\n\n        /**\n         * Properties for artifact download under anonymous API access by\n         * Devices/Controllers.\n         *\n         */\n        public static class Download {\n\n            /**\n             * Unauthenticated artifact download possible if true.\n             */\n            private boolean enabled;\n\n            public boolean isEnabled() {\n                return enabled;\n            }\n\n            public void setEnabled(final boolean enabled) {\n                this.enabled = enabled;\n            }\n\n        }\n    }\n\n    /**\n     * Build information of the hawkBit instance. Influenced by maven.\n     *\n     */\n<fim_suffix>    public static class Build {\n\n        /**\n         * Project version.\n         */\n        private String version = \"\";\n\n        public String getVersion() {\n            return version;\n        }\n\n        public void setVersion(final String version) {\n            this.version = version;\n        }\n\n    }\n\n    public String getUrl() {\n        return url;\n    }\n\n    public void setUrl(final String url) {\n        this.url = url;\n    }\n}<fim_middle>// class below is data class\n"}