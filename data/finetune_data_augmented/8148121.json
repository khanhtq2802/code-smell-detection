{"text": "<fim_prefix>/*\n * Copyright 1999-2012 Alibaba Group.\n *  \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *  \n *      http://www.apache.org/licenses/LICENSE-2.0\n *  \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage com.alibaba.cobar.server.parser;\nimport com.alibaba.cobar.parser.util.ParseUtil;\n/**\n * @author xianmao.hexm 2011-5-7 \u4e0b\u534801:22:57\n */\npublic final class ServerParseSet {\n    public static final int OTHER = -1;\n    public static final int AUTOCOMMIT_ON = 1;\n    public static final int AUTOCOMMIT_OFF = 2;\n    public static final int TX_READ_UNCOMMITTED = 3;\n    public static final int TX_READ_COMMITTED = 4;\n    public static final int TX_REPEATED_READ = 5;\n    public static final int TX_SERIALIZABLE = 6;\n    public static final int NAMES = 7;\n    public static final int CHARACTER_SET_CLIENT = 8;\n    public static final int CHARACTER_SET_CONNECTION = 9;\n    public static final int CHARACTER_SET_RESULTS = 10;\n    public static int parse(String stmt, int offset) {\n        int i = offset;\n        for (; i < stmt.length(); i++) {\n            switch (stmt.charAt(i)) {\n            case ' ':\n            case '\\r':\n            case '\\n':\n            case '\\t':\n                continue;\n            case '/':\n            case '#':\n                i = ParseUtil.comment(stmt, i);\n                continue;\n            case 'A':\n            case 'a':\n                return autocommit(stmt, i);\n            case 'C':\n            case 'c':\n                return characterSet(stmt, i, 0);\n            case 'N':\n            case 'n':\n                return names(stmt, i);\n            case 'S':\n            case 's':\n                return session(stmt, i);\n            case 'T':\n            case 't':\n                return transaction(stmt, i);\n            default:\n                return OTHER;\n            }\n        }\n        return OTHER;\n    }\n    // SET AUTOCOMMIT(' '=)\n    private static int autocommit(String stmt, int offset) {\n        if (stmt.length() > offset + 9) {\n            char c1 = stmt.charAt(++offset);\n            char c2 = stmt.charAt(++offset);\n            char c3 = stmt.charAt(++offset);\n            char c4 = stmt.charAt(++offset);\n            char c5 = stmt.charAt(++offset);\n            char c6 = stmt.charAt(++offset);\n            char c7 = stmt.charAt(++offset);\n            char c8 = stmt.charAt(++offset);\n            char c9 = stmt.charAt(++offset);\n            if ((c1 == 'U' || c1 == 'u') && (c2 == 'T' || c2 == 't') && (c3 == 'O' || c3 == 'o')\n                    && (c4 == 'C' || c4 == 'c') && (c5 == 'O' || c5 == 'o') && (c6 == 'M' || c6 == 'm')\n                    && (c7 == 'M' || c7 == 'm') && (c8 == 'I' || c8 == 'i') && (c9 == 'T' || c9 == 't')) {\n                while (stmt.length() > ++offset) {\n                    switch (stmt.charAt(offset)) {\n                    case ' ':\n                    case '\\r':\n                    case '\\n':\n                    case '\\t':\n                        continue;\n                    case '=':\n                        return autocommitValue(stmt, offset);\n                    default:\n                        return OTHER;\n                    }\n                }\n            }\n        }\n        return OTHER;\n    }\n    private static int autocommitValue(String stmt, int offset) {\n        for (;;) {\n            offset++;\n            if (stmt.length() <= offset) {\n                return OTHER;\n            }\n            switch (stmt.charAt(offset)) {\n            case ' ':\n            case '\\r':\n            case '\\n':\n            case '\\t':\n                continue;\n            case '1':\n                if (stmt.length() == ++offset || ParseUtil.isEOF(stmt.charAt(offset))) {\n                    return AUTOCOMMIT_ON;\n                } else {\n                    return OTHER;\n                }\n            case '0':\n                if (stmt.length() == ++offset || ParseUtil.isEOF(stmt.charAt(offset))) {\n                    return AUTOCOMMIT_OFF;\n                } else {\n                    return OTHER;\n                }\n            case 'O':\n            case 'o':\n                return autocommitOn(stmt, offset);\n            default:\n                return OTHER;\n            }\n        }\n    }\n    private static int autocommitOn(String stmt, int offset) {\n        if (stmt.length() > ++offset) {\n            switch (stmt.charAt(offset)) {\n            case 'N':\n            case 'n':\n                if (stmt.length() == ++offset || ParseUtil.isEOF(stmt.charAt(offset))) {\n                    return AUTOCOMMIT_ON;\n                } else {\n                    return OTHER;\n                }\n            case 'F':\n            case 'f':\n                return autocommitOff(stmt, offset);\n            default:\n                return OTHER;\n            }\n        }\n        return OTHER;\n    }\n    // SET AUTOCOMMIT = OFF\n    private static int autocommitOff(String stmt, int offset) {\n        if (stmt.length() > ++offset) {\n            switch (stmt.charAt(offset)) {\n            case 'F':\n            case 'f':\n                if (stmt.length() == ++offset || ParseUtil.isEOF(stmt.charAt(offset))) {\n                    return AUTOCOMMIT_OFF;\n                } else {\n                    return OTHER;\n                }\n            default:\n                return OTHER;\n            }\n        }\n        return OTHER;\n    }\n    // SET NAMES' '\n    private static int names(String stmt, int offset) {\n        if (stmt.length() > offset + 5) {\n            char c1 = stmt.charAt(++offset);\n            char c2 = stmt.charAt(++offset);\n            char c3 = stmt.charAt(++offset);\n            char c4 = stmt.charAt(++offset);\n            if ((c1 == 'A' || c1 == 'a') && (c2 == 'M' || c2 == 'm') && (c3 == 'E' || c3 == 'e')\n                    && (c4 == 'S' || c4 == 's') && stmt.charAt(++offset) == ' ') {\n                return (offset << 8) | NAMES;\n            }\n        }\n        return OTHER;\n    }\n    // SET CHARACTER_SET_\n<fim_suffix>    private static int characterSet(String stmt, int offset, int depth) {\n        if (stmt.length() > offset + 14) {\n            char c1 = stmt.charAt(++offset);\n            char c2 = stmt.charAt(++offset);\n            char c3 = stmt.charAt(++offset);\n            char c4 = stmt.charAt(++offset);\n            char c5 = stmt.charAt(++offset);\n            char c6 = stmt.charAt(++offset);\n            char c7 = stmt.charAt(++offset);\n            char c8 = stmt.charAt(++offset);\n            char c9 = stmt.charAt(++offset);\n            char c10 = stmt.charAt(++offset);\n            char c11 = stmt.charAt(++offset);\n            char c12 = stmt.charAt(++offset);\n            char c13 = stmt.charAt(++offset);\n            char c14 = stmt.charAt(++offset);\n            if ((c1 == 'H' || c1 == 'h') && (c2 == 'A' || c2 == 'a') && (c3 == 'R' || c3 == 'r')\n                    && (c4 == 'A' || c4 == 'a') && (c5 == 'C' || c5 == 'c') && (c6 == 'T' || c6 == 't')\n                    && (c7 == 'E' || c7 == 'e') && (c8 == 'R' || c8 == 'r') && (c9 == '_')\n                    && (c10 == 'S' || c10 == 's') && (c11 == 'E' || c11 == 'e') && (c12 == 'T' || c12 == 't')\n                    && (c13 == '_')) {\n                switch (c14) {\n                case 'R':\n                case 'r':\n                    return characterSetResults(stmt, offset);\n                case 'C':\n                case 'c':\n                    return characterSetC(stmt, offset);\n                default:\n                    return OTHER;\n                }\n            }\n        }\n        return OTHER;\n    }\n    // SET CHARACTER_SET_RESULTS =<fim_middle>// function below is long method\n"}