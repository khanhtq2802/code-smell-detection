{"text": "<fim_prefix>// Copyright 2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: MIT-0 (For details, see https://github.com/awsdocs/amazon-s3-developer-guide/blob/master/LICENSE-SAMPLECODE.)\n\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\n\nimport com.amazonaws.AmazonServiceException;\nimport com.amazonaws.SdkClientException;\nimport com.amazonaws.auth.profile.ProfileCredentialsProvider;\nimport com.amazonaws.services.s3.AmazonS3;\nimport com.amazonaws.services.s3.AmazonS3ClientBuilder;\nimport com.amazonaws.services.s3.model.GetObjectRequest;\nimport com.amazonaws.services.s3.model.ResponseHeaderOverrides;\nimport com.amazonaws.services.s3.model.S3Object;\n\n<fim_suffix>public class GetObject {\n\n    public static void main(String[] args) throws IOException {\n        String clientRegion = \"*** Client region ***\";\n        String bucketName = \"*** Bucket name ***\";\n        String key = \"*** Object key ***\";\n\n        S3Object fullObject = null, objectPortion = null, headerOverrideObject = null;\n        try {\n            AmazonS3 s3Client = AmazonS3ClientBuilder.standard()\n                    .withRegion(clientRegion)\n                    .withCredentials(new ProfileCredentialsProvider())\n                    .build();\n\n            // Get an object and print its contents.\n            System.out.println(\"Downloading an object\");\n            fullObject = s3Client.getObject(new GetObjectRequest(bucketName, key));\n            System.out.println(\"Content-Type: \" + fullObject.getObjectMetadata().getContentType());\n            System.out.println(\"Content: \");\n            displayTextInputStream(fullObject.getObjectContent());\n            \n            // Get a range of bytes from an object and print the bytes.\n            GetObjectRequest rangeObjectRequest = new GetObjectRequest(bucketName, key)\n                                                        .withRange(0,9);\n            objectPortion = s3Client.getObject(rangeObjectRequest);\n            System.out.println(\"Printing bytes retrieved.\");\n            displayTextInputStream(objectPortion.getObjectContent());\n            \n            // Get an entire object, overriding the specified response headers, and print the object's content.\n            ResponseHeaderOverrides headerOverrides = new ResponseHeaderOverrides()\n                                                            .withCacheControl(\"No-cache\")\n                                                            .withContentDisposition(\"attachment; filename=example.txt\");\n            GetObjectRequest getObjectRequestHeaderOverride = new GetObjectRequest(bucketName, key)\n                                                            .withResponseHeaders(headerOverrides);\n            headerOverrideObject = s3Client.getObject(getObjectRequestHeaderOverride);\n            displayTextInputStream(headerOverrideObject.getObjectContent());\n        }\n        catch(AmazonServiceException e) {\n            // The call was transmitted successfully, but Amazon S3 couldn't process \n            // it, so it returned an error response.\n            e.printStackTrace();\n        }\n        catch(SdkClientException e) {\n            // Amazon S3 couldn't be contacted for a response, or the client\n            // couldn't parse the response from Amazon S3.\n            e.printStackTrace();\n        }\n        finally {\n            // To ensure that the network connection doesn't remain open, close any open input streams.\n            if(fullObject != null) {\n                fullObject.close();\n            }\n            if(objectPortion != null) {\n                objectPortion.close();\n            }\n            if(headerOverrideObject != null) {\n                headerOverrideObject.close();\n            }\n        }\n    }\n\n    private static void displayTextInputStream(InputStream input) throws IOException {\n        // Read the text input stream one line at a time and display each line.\n        BufferedReader reader = new BufferedReader(new InputStreamReader(input));\n        String line = null;\n        while ((line = reader.readLine()) != null) {\n            System.out.println(line);\n        }\n        System.out.println();\n    }\n}<fim_middle>// class below has no smell\n"}