{"text": "<fim_prefix>/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\npackage org.apache.brooklyn.core.network;\n\nimport org.apache.brooklyn.api.catalog.Catalog;\nimport org.apache.brooklyn.api.entity.Entity;\nimport org.apache.brooklyn.api.location.MachineLocation;\nimport org.apache.brooklyn.config.ConfigKey;\nimport org.apache.brooklyn.core.config.ConfigKeys;\nimport org.apache.brooklyn.core.entity.Attributes;\nimport org.apache.brooklyn.util.text.Strings;\n\nimport com.google.common.annotations.Beta;\nimport com.google.common.base.Function;\nimport com.google.common.base.Optional;\nimport com.google.common.net.HostAndPort;\n\n/**\n * TODO This is a temporary measure while we discuss and implement the proposal \n * \"Working with Multiple Networks\": \n *     https://docs.google.com/document/d/1IrWLWunWSl_ScwY3MRICped8eJMjQEH1FbWZJcoK0Iw/edit#heading=h.gwaayi613qqk\n * \n * Can be added to an entity so that it advertises its subnet ports (by concatenating the subnet.address\n * and the port number).\n * \n * For example, to configure MySQL to publish \"datastore.url.mapped.subnet\":\n * <pre>\n * {@code\n * services:\n * - type: org.apache.brooklyn.entity.database.mysql.MySqlNode\n *   brooklyn.enrichers:\n *   - type: org.apache.brooklyn.core.network.OnSubnetNetworkEnricher\n *     brooklyn.config:\n *       sensor: datastore.url\n * }\n * </pre>\n */\n@Beta\n@Catalog(name = \"Subnet Network Advertiser\", description = \"Advertises entity's subnet mapped ports. This can be used with sensors of type URI, HostAndPort or plain integer port values\")\npublic class OnSubnetNetworkEnricher extends AbstractOnNetworkEnricher {\n\n    // TODO This is a temporary measure while we discuss and implement \n    // the proposal \"Working with Multiple Networks\": \n    // https://docs.google.com/document/d/1IrWLWunWSl_ScwY3MRICped8eJMjQEH1FbWZJcoK0Iw/edit#heading=h.gwaayi613qqk\n\n    public static ConfigKey<Function<? super String, String>> SENSOR_NAME_CONVERTER = ConfigKeys.newConfigKeyWithDefault(\n            AbstractOnNetworkEnricher.SENSOR_NAME_CONVERTER,\n            new SensorNameConverter(\"subnet\"));\n\n<fim_suffix>    @Override\n    protected Optional<HostAndPort> getMappedEndpoint(Entity source, MachineLocation machine, int port) {\n        String address = source.sensors().get(Attributes.SUBNET_ADDRESS);\n        if (Strings.isNonBlank(address)) {\n            return Optional.of(HostAndPort.fromParts(address, port));\n        } else {\n            return Optional.absent();\n        }\n    }\n}<fim_middle>// function below has no smell\n"}