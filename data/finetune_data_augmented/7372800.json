{"text": "<fim_prefix>// Copyright (c) Microsoft. All rights reserved.\n// Licensed under the MIT license. See License.txt in the repository root.\n\npackage com.microsoft.tfs.core.persistence;\n\nimport com.microsoft.tfs.util.TypesafeEnum;\n\n/**\n * Defines the lock modes used for serialization and deserialization with\n * {@link PersistenceStore}.\n *\n * @since TEE-SDK-10.1\n * @threadsafety immutable\n */\n<fim_suffix>public class LockMode extends TypesafeEnum {\n    private LockMode(final int value) {\n        super(value);\n    }\n\n    /**\n     * Do not perform any locking. Items are opened for read or write without\n     * regard to concurrent access by other processes.\n     */\n    public static final LockMode NONE = new LockMode(0);\n\n    /**\n     * Wait forever to acquire the lock (or until the thread is interrupted).\n     */\n    public static final LockMode WAIT_FOREVER = new LockMode(1);\n\n    /**\n     * Attempt to acquire the lock but return immediately if it could not be\n     * acquired.\n     */\n    public static final LockMode NO_WAIT = new LockMode(2);\n}<fim_middle>// class below is data class\n"}