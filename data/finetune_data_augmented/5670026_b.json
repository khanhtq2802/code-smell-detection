{"text": "<fim_prefix>/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\npackage org.apache.streams.core;\n\nimport org.apache.streams.pojo.json.Activity;\n\nimport org.joda.time.DateTime;\n\nimport java.io.Serializable;\nimport java.math.BigInteger;\nimport java.util.HashMap;\nimport java.util.Map;\n\n<fim_suffix>public class StreamsDatum implements Serializable {\n\n  public StreamsDatum(Object document) {\n    this(document, null, null, null, new HashMap<>());\n  }\n\n  public StreamsDatum(Object document, String id) {\n    this(document, id, null, null, new HashMap<>());\n  }\n\n  public StreamsDatum(Object document, BigInteger sequenceid) {\n    this(document, null, null, sequenceid);\n  }\n\n  public StreamsDatum(Object document, DateTime timestamp) {\n    this(document, null, timestamp, null);\n  }\n\n  public StreamsDatum(Object document, DateTime timestamp, BigInteger sequenceid) {\n    this(document, null, timestamp, sequenceid);\n  }\n\n  public StreamsDatum(Object document, DateTime timestamp, Map<String, Object> metadata) {\n    this(document, null, timestamp, null, metadata);\n  }\n\n  public StreamsDatum(Object document, String id, DateTime timestamp) {\n    this(document, id, timestamp, null, new HashMap<>());\n  }\n\n  public StreamsDatum(Object document, String id, Map<String, Object> metadata) {\n    this(document, id, null, null, metadata);\n  }\n\n  public StreamsDatum(Object document, String id, BigInteger sequenceid, Map<String, Object> metadata) {\n    this(document, id, null, sequenceid, metadata);\n  }\n\n  public StreamsDatum(Object document, String id, BigInteger sequenceid) {\n    this(document, id, sequenceid, new HashMap<>());\n  }\n\n  public StreamsDatum(Object document, String id, DateTime timestamp, BigInteger sequenceid) {\n    this.document = document;\n    this.id = id;\n    this.timestamp = timestamp;\n    this.sequenceid = sequenceid;\n    this.metadata = new HashMap<>();\n  }\n\n  public StreamsDatum(Object document, String id, DateTime timestamp, BigInteger sequenceid, Map<String, Object> metadata) {\n    this.document = document;\n    this.id = id;\n    this.timestamp = timestamp;\n    this.sequenceid = sequenceid;\n    this.metadata = metadata;\n  }\n\n  public DateTime timestamp;\n\n  public BigInteger sequenceid;\n\n  public Map<String, Object> metadata;\n\n  public Object document;\n\n  private String id;\n\n  public DateTime getTimestamp() {\n    return timestamp;\n  }\n\n  public void setTimestamp(DateTime timestamp) {\n    this.timestamp = timestamp;\n  }\n\n  public BigInteger getSequenceid() {\n    return sequenceid;\n  }\n\n  public void setSequenceid(BigInteger sequenceid) {\n    this.sequenceid = sequenceid;\n  }\n\n  public Map<String, Object> getMetadata() {\n    return metadata;\n  }\n\n  public void setMetadata(Map<String, Object> metadata) {\n    this.metadata = metadata;\n  }\n\n  public Object getDocument() {\n    return document;\n  }\n\n  public void setDocument(Object document) {\n    this.document = document;\n  }\n\n  public String getId() {\n    if (this.id == null && this.document instanceof Activity) {\n      return ((Activity)this.document).getId();\n    }\n    return id;\n  }\n\n  public void setId(String id) {\n    this.id = id;\n  }\n\n  @Override\n  public boolean equals(Object configurationObject) {\n    if (configurationObject instanceof StreamsDatum) {\n      StreamsDatum that = (StreamsDatum) configurationObject;\n      if (this.document != null && this.document.equals(that.document)) {\n        return (this.timestamp != null ? this.timestamp.equals(that.timestamp) : that.timestamp == null)\n            && (this.sequenceid != null ? this.sequenceid.equals(that.sequenceid) : that.sequenceid == null);\n      } else {\n        return that.document == null && this.document == null;\n      }\n    } else {\n      return false;\n    }\n  }\n\n  @Override\n  public String toString() {\n    return \"StreamsDatum{\"\n        + \"timestamp=\" + timestamp\n        + \", sequenceid=\" + sequenceid\n        + \", metadata=\" + metadata\n        + \", document=\" + document\n        + \", id='\" + id + '\\''\n        + '}';\n  }\n\n}<fim_middle>// class below is data class and blob\n"}