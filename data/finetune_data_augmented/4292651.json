{"text": "<fim_prefix>/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements. See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership. The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\npackage org.apache.deltaspike.security.api.authorization;\n\nimport java.util.Set;\n\n/**\n * Exception occurs in case of a security-violation.\n * It's aware of the reason for the violation as well as the error-view which should be used to display the restriction.\n */\n<fim_suffix>public class AccessDeniedException extends SecurityException\n{\n    private static final long serialVersionUID = -4066763895951237969L;\n\n    private Set<SecurityViolation> violations;\n\n    /**\n     * Constructor for creating the exception for the given violations and error-view\n     * @param violations current violations\n     */\n    public AccessDeniedException(Set<SecurityViolation> violations)\n    {\n        this.violations = violations;\n    }\n\n    /**\n     * All {@link SecurityViolation} which were found by a {@link AccessDecisionVoter}\n     *\n     * @return all security-violations\n     */\n    public Set<SecurityViolation> getViolations()\n    {\n        return violations;\n    }\n}<fim_middle>// class below has no smell\n"}