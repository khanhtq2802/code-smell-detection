{"text": "<fim_prefix>            // PsiInternalBeeLangTestLanguage.g:5212:2: ( () ( ( (lv_expressions_1_0= ruleTopLevelExpression ) ) otherlv_2= ';' )+ )\n            {\n            // PsiInternalBeeLangTestLanguage.g:5212:2: ( () ( ( (lv_expressions_1_0= ruleTopLevelExpression ) ) otherlv_2= ';' )+ )\n            // PsiInternalBeeLangTestLanguage.g:5213:3: () ( ( (lv_expressions_1_0= ruleTopLevelExpression ) ) otherlv_2= ';' )+\n            {\n            // PsiInternalBeeLangTestLanguage.g:5213:3: ()\n            // PsiInternalBeeLangTestLanguage.g:5214:4: \n            {\n            if ( state.backtracking==0 ) {\n              \t\t\t\t/* */\n            }\n            if ( state.backtracking==0 ) {\n              \t\t\t\tprecedeComposite(elementTypeProvider.getBlockExpressionWithoutBrackets_ChainedExpressionAction_0ElementType());\n              \t\t\t\tdoneComposite();\n              \t\t\t\tassociateWithSemanticElement();\n            }\n            }\n            // PsiInternalBeeLangTestLanguage.g:5223:3: ( ( (lv_expressions_1_0= ruleTopLevelExpression ) ) otherlv_2= ';' )+\n            int cnt92=0;\n            loop92:\n            do {\n                int alt92=2;\n                int LA92_0 = input.LA(1);\n                if ( (LA92_0==RULE_ID||LA92_0==RULE_STRING||LA92_0==13||(LA92_0>=17 && LA92_0<=18)||LA92_0==21||LA92_0==33||LA92_0==35||(LA92_0>=53 && LA92_0<=54)||LA92_0==56||LA92_0==60||(LA92_0>=64 && LA92_0<=66)||LA92_0==70||(LA92_0>=72 && LA92_0<=76)) ) {\n                    alt92=1;\n                }\n                switch (alt92) {\n            \tcase 1 :\n            \t    // PsiInternalBeeLangTestLanguage.g:5224:4: ( (lv_expressions_1_0= ruleTopLevelExpression ) ) otherlv_2= ';'\n            \t    {\n            \t    // PsiInternalBeeLangTestLanguage.g:5224:4: ( (lv_expressions_1_0= ruleTopLevelExpression ) )\n            \t    // PsiInternalBeeLangTestLanguage.g:5225:5: (lv_expressions_1_0= ruleTopLevelExpression )\n            \t    {\n            \t    // PsiInternalBeeLangTestLanguage.g:5225:5: (lv_expressions_1_0= ruleTopLevelExpression )\n            \t    // PsiInternalBeeLangTestLanguage.g:5226:6: lv_expressions_1_0= ruleTopLevelExpression\n            \t    {\n            \t    if ( state.backtracking==0 ) {\n            \t      \t\t\t\t\t\tmarkComposite(elementTypeProvider.getBlockExpressionWithoutBrackets_ExpressionsTopLevelExpressionParserRuleCall_1_0_0ElementType());\n            \t    }\n            \t    pushFollow(FOLLOW_14);\n            \t    lv_expressions_1_0=ruleTopLevelExpression();\n            \t    state._fsp--;\n            \t    if (state.failed) return current;\n            \t    if ( state.backtracking==0 ) {\n            \t      \t\t\t\t\t\tdoneComposite();\n            \t      \t\t\t\t\t\tif(!current) {\n            \t      \t\t\t\t\t\t\tassociateWithSemanticElement();\n            \t      \t\t\t\t\t\t\tcurrent = true;\n            \t      \t\t\t\t\t\t}\n            \t    }\n            \t    }\n            \t    }\n            \t    if ( state.backtracking==0 ) {\n            \t      \t\t\t\tmarkLeaf(elementTypeProvider.getBlockExpressionWithoutBrackets_SemicolonKeyword_1_1ElementType());\n            \t    }\n            \t    otherlv_2=(Token)match(input,20,FOLLOW_75); if (state.failed) return current;\n            \t    if ( state.backtracking==0 ) {\n            \t      \t\t\t\tdoneLeaf(otherlv_2);\n            \t    }\n            \t    }\n            \t    break;\n            \tdefault :\n            \t    if ( cnt92 >= 1 ) break loop92;\n            \t    if (state.backtracking>0) {state.failed=true; return current;}\n                        EarlyExitException eee =\n                            new EarlyExitException(92, input);\n                        throw eee;\n                }\n                cnt92++;\n            } while (true);\n            }\n            }\n        }\n        catch (RecognitionException re) {\n            reportError(re);\n            recover(input,re);\n        }\n        finally {\n            if ( state.backtracking>0 ) { memoize(input, 106, ruleBlockExpressionWithoutBrackets_StartIndex); }\n        }\n        return current;\n    }\n    // $ANTLR end \"ruleBlockExpressionWithoutBrackets\"\n    // $ANTLR start \"entryRuleValueLiteral\"\n    // PsiInternalBeeLangTestLanguage.g:5251:1: entryRuleValueLiteral returns [Boolean current=false] : iv_ruleValueLiteral= ruleValueLiteral EOF ;\n    public final Boolean entryRuleValueLiteral() throws RecognitionException {\n        Boolean current = false;\n        int entryRuleValueLiteral_StartIndex = input.index();\n        Boolean iv_ruleValueLiteral = null;\n        try {\n            if ( state.backtracking>0 && alreadyParsedRule(input, 107) ) { return current; }\n            // PsiInternalBeeLangTestLanguage.g:5251:54: (iv_ruleValueLiteral= ruleValueLiteral EOF )\n            // PsiInternalBeeLangTestLanguage.g:5252:2: iv_ruleValueLiteral= ruleValueLiteral EOF\n            {\n            if ( state.backtracking==0 ) {\n               markComposite(elementTypeProvider.getValueLiteralElementType()); \n            }\n            pushFollow(FOLLOW_1);\n            iv_ruleValueLiteral=ruleValueLiteral();\n            state._fsp--;\n            if (state.failed) return current;\n            if ( state.backtracking==0 ) {\n               current =iv_ruleValueLiteral; \n            }\n            match(input,EOF,FOLLOW_2); if (state.failed) return current;\n            }\n        }\n        catch (RecognitionException re) {\n            reportError(re);\n            recover(input,re);\n        }\n        finally {\n            if ( state.backtracking>0 ) { memoize(input, 107, entryRuleValueLiteral_StartIndex); }\n        }\n        return current;\n    }\n    // $ANTLR end \"entryRuleValueLiteral\"\n    // $ANTLR start \"ruleValueLiteral\"\n    // PsiInternalBeeLangTestLanguage.g:5258:1: ruleValueLiteral returns [Boolean current=false] : ( (lv_value_0_0= RULE_STRING ) ) ;\n<fim_suffix>    public final Boolean ruleValueLiteral() throws RecognitionException {\n        Boolean current = false;\n        int ruleValueLiteral_StartIndex = input.index();\n        Token lv_value_0_0=null;\n        try {\n            if ( state.backtracking>0 && alreadyParsedRule(input, 108) ) { return current; }\n            // PsiInternalBeeLangTestLanguage.g:5259:1: ( ( (lv_value_0_0= RULE_STRING ) ) )\n            // PsiInternalBeeLangTestLanguage.g:5260:2: ( (lv_value_0_0= RULE_STRING ) )\n            {\n            // PsiInternalBeeLangTestLanguage.g:5260:2: ( (lv_value_0_0= RULE_STRING ) )\n            // PsiInternalBeeLangTestLanguage.g:5261:3: (lv_value_0_0= RULE_STRING )\n            {\n            // PsiInternalBeeLangTestLanguage.g:5261:3: (lv_value_0_0= RULE_STRING )\n            // PsiInternalBeeLangTestLanguage.g:5262:4: lv_value_0_0= RULE_STRING\n            {\n            if ( state.backtracking==0 ) {\n              \t\t\t\tmarkLeaf(elementTypeProvider.getValueLiteral_ValueSTRINGTerminalRuleCall_0ElementType());\n            }\n            lv_value_0_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;\n            if ( state.backtracking==0 ) {\n              \t\t\t\tif(!current) {\n              \t\t\t\t\tassociateWithSemanticElement();\n              \t\t\t\t\tcurrent = true;\n              \t\t\t\t}\n            }\n            if ( state.backtracking==0 ) {\n              \t\t\t\tdoneLeaf(lv_value_0_0);\n            }\n            }\n            }\n            }\n        }\n        catch (RecognitionException re) {\n            reportError(re);\n            recover(input,re);\n        }\n        finally {\n            if ( state.backtracking>0 ) { memoize(input, 108, ruleValueLiteral_StartIndex); }\n        }\n        return current;\n    }<fim_middle>// function below has no smell\n"}