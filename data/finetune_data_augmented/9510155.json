{"text": "<fim_prefix>/**\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with this\n * work for additional information regarding copyright ownership.  The ASF\n * licenses this file to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * <p>\n * http://www.apache.org/licenses/LICENSE-2.0\n * <p>\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations under\n * the License.\n */\n\npackage org.apache.hadoop.ozone.om;\n\nimport org.apache.hadoop.net.NetUtils;\n\nimport java.net.InetAddress;\nimport java.net.InetSocketAddress;\n\n/**\n * This class stores OM node details.\n */\npublic final class OMNodeDetails {\n  private String omServiceId;\n  private String omNodeId;\n  private InetSocketAddress rpcAddress;\n  private int rpcPort;\n  private int ratisPort;\n\n  /**\n   * Constructs OMNodeDetails object.\n   */\n  private OMNodeDetails(String serviceId, String nodeId,\n      InetSocketAddress rpcAddr, int rpcPort, int ratisPort) {\n    this.omServiceId = serviceId;\n    this.omNodeId = nodeId;\n    this.rpcAddress = rpcAddr;\n    this.rpcPort = rpcPort;\n    this.ratisPort = ratisPort;\n  }\n\n  /**\n   * Builder class for OMNodeDetails.\n   */\n<fim_suffix>  public static class Builder {\n    private String omServiceId;\n    private String omNodeId;\n    private InetSocketAddress rpcAddress;\n    private int rpcPort;\n    private int ratisPort;\n\n    public Builder setRpcAddress(InetSocketAddress rpcAddr) {\n      this.rpcAddress = rpcAddr;\n      this.rpcPort = rpcAddress.getPort();\n      return this;\n    }\n\n    public Builder setRatisPort(int port) {\n      this.ratisPort = port;\n      return this;\n    }\n\n    public Builder setOMServiceId(String serviceId) {\n      this.omServiceId = serviceId;\n      return this;\n    }\n\n    public Builder setOMNodeId(String nodeId) {\n      this.omNodeId = nodeId;\n      return this;\n    }\n\n    public OMNodeDetails build() {\n      return new OMNodeDetails(omServiceId, omNodeId, rpcAddress, rpcPort,\n          ratisPort);\n    }\n  }\n\n  public String getOMServiceId() {\n    return omServiceId;\n  }\n\n  public String getOMNodeId() {\n    return omNodeId;\n  }\n\n  public InetSocketAddress getRpcAddress() {\n    return rpcAddress;\n  }\n\n  public InetAddress getAddress() {\n    return rpcAddress.getAddress();\n  }\n\n  public int getRatisPort() {\n    return ratisPort;\n  }\n\n  public int getRpcPort() {\n    return rpcPort;\n  }\n\n  public String getRpcAddressString() {\n    return NetUtils.getHostPortString(rpcAddress);\n  }\n}<fim_middle>// class below is data class\n"}