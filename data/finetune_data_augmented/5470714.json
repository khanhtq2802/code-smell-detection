{"text": "<fim_prefix>/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n *\n */\n\npackage org.apache.qpid.server.util;\n\nimport java.util.HashMap;\nimport java.util.Map;\nimport java.util.UUID;\n\npublic class CachingUUIDFactory\n{\n    private final Map<UUID, UUID> _uuids = new HashMap<>();\n\n    public UUID createUuidFromString(final String name)\n    {\n        UUID candidate = UUID.fromString(name);\n        return cacheIfNecessary(candidate);\n    }\n\n    public UUID createUuidFromBits(final long mostSigBits, final long leastSigBits)\n    {\n        UUID candidate = new UUID(mostSigBits, leastSigBits);\n        return cacheIfNecessary(candidate);\n    }\n\n<fim_suffix>    private UUID cacheIfNecessary(final UUID candidate)\n    {\n        UUID existing = _uuids.putIfAbsent(candidate, candidate);\n        return existing == null ? candidate : existing;\n    }\n}<fim_middle>// function below has no smell\n"}