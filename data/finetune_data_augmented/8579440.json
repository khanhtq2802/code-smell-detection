{"text": "<fim_prefix>        this.tableName = org.apache.thrift.TBaseHelper.copyBinary(other.tableName);\n      }\n      if (other.isSetRow()) {\n        this.row = org.apache.thrift.TBaseHelper.copyBinary(other.row);\n      }\n      if (other.isSetColumn()) {\n        this.column = org.apache.thrift.TBaseHelper.copyBinary(other.column);\n      }\n      if (other.isSetAttributes()) {\n        java.util.Map<java.nio.ByteBuffer,java.nio.ByteBuffer> __this__attributes = new java.util.HashMap<java.nio.ByteBuffer,java.nio.ByteBuffer>(other.attributes.size());\n        for (java.util.Map.Entry<java.nio.ByteBuffer, java.nio.ByteBuffer> other_element : other.attributes.entrySet()) {\n          java.nio.ByteBuffer other_element_key = other_element.getKey();\n          java.nio.ByteBuffer other_element_value = other_element.getValue();\n          java.nio.ByteBuffer __this__attributes_copy_key = org.apache.thrift.TBaseHelper.copyBinary(other_element_key);\n          java.nio.ByteBuffer __this__attributes_copy_value = org.apache.thrift.TBaseHelper.copyBinary(other_element_value);\n          __this__attributes.put(__this__attributes_copy_key, __this__attributes_copy_value);\n        }\n        this.attributes = __this__attributes;\n      }\n    }\n    public deleteAll_args deepCopy() {\n      return new deleteAll_args(this);\n    }\n    @Override\n    public void clear() {\n      this.tableName = null;\n      this.row = null;\n      this.column = null;\n      this.attributes = null;\n    }\n    /**\n     * name of table\n     */\n    public byte[] getTableName() {\n      setTableName(org.apache.thrift.TBaseHelper.rightSize(tableName));\n      return tableName == null ? null : tableName.array();\n    }\n    public java.nio.ByteBuffer bufferForTableName() {\n      return org.apache.thrift.TBaseHelper.copyBinary(tableName);\n    }\n    /**\n     * name of table\n     */\n    public deleteAll_args setTableName(byte[] tableName) {\n      this.tableName = tableName == null ? (java.nio.ByteBuffer)null     : java.nio.ByteBuffer.wrap(tableName.clone());\n      return this;\n    }\n    public deleteAll_args setTableName(@org.apache.thrift.annotation.Nullable java.nio.ByteBuffer tableName) {\n      this.tableName = org.apache.thrift.TBaseHelper.copyBinary(tableName);\n      return this;\n    }\n    public void unsetTableName() {\n      this.tableName = null;\n    }\n    /** Returns true if field tableName is set (has been assigned a value) and false otherwise */\n    public boolean isSetTableName() {\n      return this.tableName != null;\n    }\n    public void setTableNameIsSet(boolean value) {\n      if (!value) {\n        this.tableName = null;\n      }\n    }\n    /**\n     * Row to update\n     */\n    public byte[] getRow() {\n      setRow(org.apache.thrift.TBaseHelper.rightSize(row));\n      return row == null ? null : row.array();\n    }\n    public java.nio.ByteBuffer bufferForRow() {\n      return org.apache.thrift.TBaseHelper.copyBinary(row);\n    }\n    /**\n     * Row to update\n     */\n    public deleteAll_args setRow(byte[] row) {\n      this.row = row == null ? (java.nio.ByteBuffer)null     : java.nio.ByteBuffer.wrap(row.clone());\n      return this;\n    }\n    public deleteAll_args setRow(@org.apache.thrift.annotation.Nullable java.nio.ByteBuffer row) {\n      this.row = org.apache.thrift.TBaseHelper.copyBinary(row);\n      return this;\n    }\n    public void unsetRow() {\n      this.row = null;\n    }\n    /** Returns true if field row is set (has been assigned a value) and false otherwise */\n    public boolean isSetRow() {\n      return this.row != null;\n    }\n    public void setRowIsSet(boolean value) {\n      if (!value) {\n        this.row = null;\n      }\n    }\n    /**\n     * name of column whose value is to be deleted\n     */\n    public byte[] getColumn() {\n      setColumn(org.apache.thrift.TBaseHelper.rightSize(column));\n      return column == null ? null : column.array();\n    }\n    public java.nio.ByteBuffer bufferForColumn() {\n      return org.apache.thrift.TBaseHelper.copyBinary(column);\n    }\n    /**\n     * name of column whose value is to be deleted\n     */\n    public deleteAll_args setColumn(byte[] column) {\n      this.column = column == null ? (java.nio.ByteBuffer)null     : java.nio.ByteBuffer.wrap(column.clone());\n      return this;\n    }\n    public deleteAll_args setColumn(@org.apache.thrift.annotation.Nullable java.nio.ByteBuffer column) {\n      this.column = org.apache.thrift.TBaseHelper.copyBinary(column);\n      return this;\n    }\n    public void unsetColumn() {\n      this.column = null;\n    }\n    /** Returns true if field column is set (has been assigned a value) and false otherwise */\n    public boolean isSetColumn() {\n      return this.column != null;\n    }\n    public void setColumnIsSet(boolean value) {\n      if (!value) {\n        this.column = null;\n      }\n    }\n    public int getAttributesSize() {\n      return (this.attributes == null) ? 0 : this.attributes.size();\n    }\n    public void putToAttributes(java.nio.ByteBuffer key, java.nio.ByteBuffer val) {\n      if (this.attributes == null) {\n        this.attributes = new java.util.HashMap<java.nio.ByteBuffer,java.nio.ByteBuffer>();\n      }\n      this.attributes.put(key, val);\n    }\n    /**\n     * Delete attributes\n     */\n    @org.apache.thrift.annotation.Nullable\n    public java.util.Map<java.nio.ByteBuffer,java.nio.ByteBuffer> getAttributes() {\n      return this.attributes;\n    }\n    /**\n     * Delete attributes\n     */\n    public deleteAll_args setAttributes(@org.apache.thrift.annotation.Nullable java.util.Map<java.nio.ByteBuffer,java.nio.ByteBuffer> attributes) {\n      this.attributes = attributes;\n      return this;\n    }\n    public void unsetAttributes() {\n      this.attributes = null;\n    }\n    /** Returns true if field attributes is set (has been assigned a value) and false otherwise */\n    public boolean isSetAttributes() {\n      return this.attributes != null;\n    }\n    public void setAttributesIsSet(boolean value) {\n      if (!value) {\n        this.attributes = null;\n      }\n    }\n    public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {\n      switch (field) {\n      case TABLE_NAME:\n        if (value == null) {\n          unsetTableName();\n        } else {\n          if (value instanceof byte[]) {\n            setTableName((byte[])value);\n          } else {\n            setTableName((java.nio.ByteBuffer)value);\n          }\n        }\n        break;\n      case ROW:\n        if (value == null) {\n          unsetRow();\n        } else {\n          if (value instanceof byte[]) {\n            setRow((byte[])value);\n          } else {\n            setRow((java.nio.ByteBuffer)value);\n          }\n        }\n        break;\n      case COLUMN:\n        if (value == null) {\n          unsetColumn();\n        } else {\n          if (value instanceof byte[]) {\n            setColumn((byte[])value);\n          } else {\n            setColumn((java.nio.ByteBuffer)value);\n          }\n        }\n        break;\n      case ATTRIBUTES:\n        if (value == null) {\n          unsetAttributes();\n        } else {\n          setAttributes((java.util.Map<java.nio.ByteBuffer,java.nio.ByteBuffer>)value);\n        }\n        break;\n      }\n    }\n    @org.apache.thrift.annotation.Nullable\n    public java.lang.Object getFieldValue(_Fields field) {\n      switch (field) {\n      case TABLE_NAME:\n        return getTableName();\n      case ROW:\n        return getRow();\n      case COLUMN:\n        return getColumn();\n      case ATTRIBUTES:\n        return getAttributes();\n      }\n      throw new java.lang.IllegalStateException();\n    }\n    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */\n    public boolean isSet(_Fields field) {\n      if (field == null) {\n        throw new java.lang.IllegalArgumentException();\n      }\n      switch (field) {\n      case TABLE_NAME:\n        return isSetTableName();\n      case ROW:\n        return isSetRow();\n      case COLUMN:\n        return isSetColumn();\n      case ATTRIBUTES:\n        return isSetAttributes();\n      }\n      throw new java.lang.IllegalStateException();\n    }\n<fim_suffix>    @Override\n    public boolean equals(java.lang.Object that) {\n      if (that == null)\n        return false;\n      if (that instanceof deleteAll_args)\n        return this.equals((deleteAll_args)that);\n      return false;\n    }<fim_middle>// function below has no smell\n"}