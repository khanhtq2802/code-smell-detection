{"text": "<fim_prefix>        }\n        oprot.writeBitSet(optionals, 2);\n        if (struct.isSetUser_name()) {\n          oprot.writeString(struct.user_name);\n        }\n        if (struct.isSetGroup_names()) {\n          {\n            oprot.writeI32(struct.group_names.size());\n            for (String _iter1560 : struct.group_names)\n            {\n              oprot.writeString(_iter1560);\n            }\n          }\n        }\n      }\n      @Override\n      public void read(org.apache.thrift.protocol.TProtocol prot, set_ugi_args struct) throws org.apache.thrift.TException {\n        TTupleProtocol iprot = (TTupleProtocol) prot;\n        BitSet incoming = iprot.readBitSet(2);\n        if (incoming.get(0)) {\n          struct.user_name = iprot.readString();\n          struct.setUser_nameIsSet(true);\n        }\n        if (incoming.get(1)) {\n          {\n            org.apache.thrift.protocol.TList _list1561 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, iprot.readI32());\n            struct.group_names = new ArrayList<String>(_list1561.size);\n            String _elem1562;\n            for (int _i1563 = 0; _i1563 < _list1561.size; ++_i1563)\n            {\n              _elem1562 = iprot.readString();\n              struct.group_names.add(_elem1562);\n            }\n          }\n          struct.setGroup_namesIsSet(true);\n        }\n      }\n    }\n  }\n  @org.apache.hadoop.classification.InterfaceAudience.Public @org.apache.hadoop.classification.InterfaceStability.Stable public static class set_ugi_result implements org.apache.thrift.TBase<set_ugi_result, set_ugi_result._Fields>, java.io.Serializable, Cloneable, Comparable<set_ugi_result>   {\n    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct(\"set_ugi_result\");\n    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField(\"success\", org.apache.thrift.protocol.TType.LIST, (short)0);\n    private static final org.apache.thrift.protocol.TField O1_FIELD_DESC = new org.apache.thrift.protocol.TField(\"o1\", org.apache.thrift.protocol.TType.STRUCT, (short)1);\n    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();\n    static {\n      schemes.put(StandardScheme.class, new set_ugi_resultStandardSchemeFactory());\n      schemes.put(TupleScheme.class, new set_ugi_resultTupleSchemeFactory());\n    }\n    private List<String> success; // required\n    private MetaException o1; // required\n    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */\n    public enum _Fields implements org.apache.thrift.TFieldIdEnum {\n      SUCCESS((short)0, \"success\"),\n      O1((short)1, \"o1\");\n      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();\n      static {\n        for (_Fields field : EnumSet.allOf(_Fields.class)) {\n          byName.put(field.getFieldName(), field);\n        }\n      }\n      /**\n       * Find the _Fields constant that matches fieldId, or null if its not found.\n       */\n      public static _Fields findByThriftId(int fieldId) {\n        switch(fieldId) {\n          case 0: // SUCCESS\n            return SUCCESS;\n          case 1: // O1\n            return O1;\n          default:\n            return null;\n        }\n      }\n      /**\n       * Find the _Fields constant that matches fieldId, throwing an exception\n       * if it is not found.\n       */\n      public static _Fields findByThriftIdOrThrow(int fieldId) {\n        _Fields fields = findByThriftId(fieldId);\n        if (fields == null) throw new IllegalArgumentException(\"Field \" + fieldId + \" doesn't exist!\");\n        return fields;\n      }\n      /**\n       * Find the _Fields constant that matches name, or null if its not found.\n       */\n      public static _Fields findByName(String name) {\n        return byName.get(name);\n      }\n      private final short _thriftId;\n      private final String _fieldName;\n      _Fields(short thriftId, String fieldName) {\n        _thriftId = thriftId;\n        _fieldName = fieldName;\n      }\n      public short getThriftFieldId() {\n        return _thriftId;\n      }\n      public String getFieldName() {\n        return _fieldName;\n      }\n    }\n    // isset id assignments\n    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;\n    static {\n      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);\n      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData(\"success\", org.apache.thrift.TFieldRequirementType.DEFAULT, \n          new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, \n              new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING))));\n      tmpMap.put(_Fields.O1, new org.apache.thrift.meta_data.FieldMetaData(\"o1\", org.apache.thrift.TFieldRequirementType.DEFAULT, \n          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRUCT)));\n      metaDataMap = Collections.unmodifiableMap(tmpMap);\n      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(set_ugi_result.class, metaDataMap);\n    }\n    public set_ugi_result() {\n    }\n    public set_ugi_result(\n      List<String> success,\n      MetaException o1)\n    {\n      this();\n      this.success = success;\n      this.o1 = o1;\n    }\n    /**\n     * Performs a deep copy on <i>other</i>.\n     */\n    public set_ugi_result(set_ugi_result other) {\n      if (other.isSetSuccess()) {\n        List<String> __this__success = new ArrayList<String>(other.success);\n        this.success = __this__success;\n      }\n      if (other.isSetO1()) {\n        this.o1 = new MetaException(other.o1);\n      }\n    }\n    public set_ugi_result deepCopy() {\n      return new set_ugi_result(this);\n    }\n    @Override\n    public void clear() {\n      this.success = null;\n      this.o1 = null;\n    }\n    public int getSuccessSize() {\n      return (this.success == null) ? 0 : this.success.size();\n    }\n    public java.util.Iterator<String> getSuccessIterator() {\n      return (this.success == null) ? null : this.success.iterator();\n    }\n    public void addToSuccess(String elem) {\n      if (this.success == null) {\n        this.success = new ArrayList<String>();\n      }\n      this.success.add(elem);\n    }\n    public List<String> getSuccess() {\n      return this.success;\n    }\n    public void setSuccess(List<String> success) {\n      this.success = success;\n    }\n    public void unsetSuccess() {\n      this.success = null;\n    }\n    /** Returns true if field success is set (has been assigned a value) and false otherwise */\n    public boolean isSetSuccess() {\n      return this.success != null;\n    }\n    public void setSuccessIsSet(boolean value) {\n      if (!value) {\n        this.success = null;\n      }\n    }\n    public MetaException getO1() {\n      return this.o1;\n    }\n    public void setO1(MetaException o1) {\n      this.o1 = o1;\n    }\n    public void unsetO1() {\n      this.o1 = null;\n    }\n    /** Returns true if field o1 is set (has been assigned a value) and false otherwise */\n    public boolean isSetO1() {\n      return this.o1 != null;\n    }\n    public void setO1IsSet(boolean value) {\n      if (!value) {\n        this.o1 = null;\n      }\n    }\n<fim_suffix>    public void setFieldValue(_Fields field, Object value) {\n      switch (field) {\n      case SUCCESS:\n        if (value == null) {\n          unsetSuccess();\n        } else {\n          setSuccess((List<String>)value);\n        }\n        break;\n      case O1:\n        if (value == null) {\n          unsetO1();\n        } else {\n          setO1((MetaException)value);\n        }\n        break;\n      }\n    }<fim_middle>// function below is feature envy\n"}