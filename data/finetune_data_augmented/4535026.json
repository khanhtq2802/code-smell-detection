{"text": "<fim_prefix>/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements. See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership. The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\npackage org.apache.fineract.portfolio.loanaccount.rescheduleloan.service;\nimport java.math.BigDecimal;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.util.ArrayList;\nimport java.util.Collection;\nimport java.util.List;\nimport org.apache.fineract.infrastructure.codes.data.CodeValueData;\nimport org.apache.fineract.infrastructure.codes.service.CodeValueReadPlatformService;\nimport org.apache.fineract.infrastructure.core.domain.JdbcSupport;\nimport org.apache.fineract.infrastructure.core.service.RoutingDataSource;\nimport org.apache.fineract.portfolio.loanaccount.data.LoanTermVariationsData;\nimport org.apache.fineract.portfolio.loanaccount.domain.LoanRepositoryWrapper;\nimport org.apache.fineract.portfolio.loanaccount.rescheduleloan.RescheduleLoansApiConstants;\nimport org.apache.fineract.portfolio.loanaccount.rescheduleloan.data.LoanRescheduleRequestData;\nimport org.apache.fineract.portfolio.loanaccount.rescheduleloan.data.LoanRescheduleRequestEnumerations;\nimport org.apache.fineract.portfolio.loanaccount.rescheduleloan.data.LoanRescheduleRequestStatusEnumData;\nimport org.apache.fineract.portfolio.loanaccount.rescheduleloan.data.LoanRescheduleRequestTimelineData;\nimport org.apache.fineract.portfolio.loanproduct.service.LoanEnumerations;\nimport org.joda.time.LocalDate;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.dao.EmptyResultDataAccessException;\nimport org.springframework.jdbc.core.JdbcTemplate;\nimport org.springframework.jdbc.core.RowMapper;\nimport org.springframework.stereotype.Service;\nimport com.amazonaws.util.StringUtils;\n@Service\npublic class LoanRescheduleRequestReadPlatformServiceImpl implements LoanRescheduleRequestReadPlatformService {\n    private final JdbcTemplate jdbcTemplate;\n    private final LoanRepositoryWrapper loanRepositoryWrapper;\n    private final LoanRescheduleRequestRowMapper loanRescheduleRequestRowMapper = new LoanRescheduleRequestRowMapper();\n    private final CodeValueReadPlatformService codeValueReadPlatformService;\n    @Autowired\n    public LoanRescheduleRequestReadPlatformServiceImpl(final RoutingDataSource dataSource, LoanRepositoryWrapper loanRepositoryWrapper,\n            final CodeValueReadPlatformService codeValueReadPlatformService) {\n        this.jdbcTemplate = new JdbcTemplate(dataSource);\n        this.loanRepositoryWrapper = loanRepositoryWrapper;\n        this.codeValueReadPlatformService = codeValueReadPlatformService;\n    }\n    private static final class LoanRescheduleRequestRowMapper implements RowMapper<LoanRescheduleRequestData> {\n        private final String schema;\n<fim_suffix>        public LoanRescheduleRequestRowMapper() {\n            final StringBuilder sqlBuilder = new StringBuilder(200);\n            sqlBuilder.append(\"lr.id as id, lr.loan_id as loanId, lr.status_enum as statusEnum, \");\n            sqlBuilder.append(\"mc.display_name as clientName, \");\n            sqlBuilder.append(\"mc.id as clientId, \");\n            sqlBuilder.append(\"ml.account_no as loanAccountNumber, \");\n            sqlBuilder.append(\"lr.reschedule_from_installment as rescheduleFromInstallment, \");\n            sqlBuilder.append(\"lr.reschedule_from_date as rescheduleFromDate, \");\n            sqlBuilder.append(\"lr.recalculate_interest as recalculateInterest, \");\n            sqlBuilder.append(\"lr.reschedule_reason_cv_id as rescheduleReasonCvId, \");\n            sqlBuilder.append(\"cv.code_value as rescheduleReasonCvValue, \");\n            sqlBuilder.append(\"lr.reschedule_reason_comment as rescheduleReasonComment, \");\n            sqlBuilder.append(\"lr.submitted_on_date as submittedOnDate, \");\n            sqlBuilder.append(\"sbu.username as submittedByUsername, \");\n            sqlBuilder.append(\"sbu.firstname as submittedByFirstname, \");\n            sqlBuilder.append(\"sbu.lastname as submittedByLastname, \");\n            sqlBuilder.append(\"lr.approved_on_date as approvedOnDate, \");\n            sqlBuilder.append(\"abu.username as approvedByUsername, \");\n            sqlBuilder.append(\"abu.firstname as approvedByFirstname, \");\n            sqlBuilder.append(\"abu.lastname as approvedByLastname, \");\n            sqlBuilder.append(\"lr.rejected_on_date as rejectedOnDate, \");\n            sqlBuilder.append(\"rbu.username as rejectedByUsername, \");\n            sqlBuilder.append(\"rbu.firstname as rejectedByFirstname, \");\n            sqlBuilder.append(\"rbu.lastname as rejectedByLastname, \");\n            sqlBuilder.append(\"tv.id as termId,\");\n            sqlBuilder.append(\"tv.term_type as termType,\");\n            sqlBuilder.append(\"tv.applicable_date as variationApplicableFrom, \");\n            sqlBuilder.append(\"tv.decimal_value as decimalValue, \");\n            sqlBuilder.append(\"tv.date_value as dateValue, \");\n            sqlBuilder.append(\"tv.is_specific_to_installment as isSpecificToInstallment \");\n            sqlBuilder.append(\"from \" + loanRescheduleRequestTableName() + \" lr \");\n            sqlBuilder.append(\"left join m_code_value cv on cv.id = lr.reschedule_reason_cv_id \");\n            sqlBuilder.append(\"left join m_appuser sbu on sbu.id = lr.submitted_by_user_id \");\n            sqlBuilder.append(\"left join m_appuser abu on abu.id = lr.approved_by_user_id \");\n            sqlBuilder.append(\"left join m_appuser rbu on rbu.id = lr.rejected_by_user_id \");\n            sqlBuilder.append(\"left join m_loan ml on ml.id = lr.loan_id \");\n            sqlBuilder.append(\"left join m_client mc on mc.id = ml.client_id \");\n            sqlBuilder.append(\"join m_loan_reschedule_request_term_variations_mapping rrtvm on lr.id = rrtvm.loan_reschedule_request_id \");\n            sqlBuilder.append(\"join m_loan_term_variations tv on tv.id = rrtvm.loan_term_variations_id and tv.parent_id is null\") ;\n            this.schema = sqlBuilder.toString();\n        }\n        public String schema() {\n            return this.schema;\n        }\n        public String loanRescheduleRequestTableName() {\n            return \"m_loan_reschedule_request\";\n        }\n        @Override\n        @SuppressWarnings(\"unused\")\n        public LoanRescheduleRequestData mapRow(final ResultSet rs, final int rowNum) throws SQLException {\n            final Long id = rs.getLong(\"id\");\n            final Long loanId = rs.getLong(\"loanId\");\n            final Integer statusEnumId = JdbcSupport.getInteger(rs, \"statusEnum\");\n            final LoanRescheduleRequestStatusEnumData statusEnum = LoanRescheduleRequestEnumerations.status(statusEnumId);\n            final String clientName = rs.getString(\"clientName\");\n            final String loanAccountNumber = rs.getString(\"loanAccountNumber\");\n            final Long clientId = rs.getLong(\"clientId\");\n            final Integer rescheduleFromInstallment = JdbcSupport.getInteger(rs, \"rescheduleFromInstallment\");\n            final LocalDate rescheduleFromDate = JdbcSupport.getLocalDate(rs, \"rescheduleFromDate\");\n            final Long rescheduleReasonCvId = JdbcSupport.getLong(rs, \"rescheduleReasonCvId\");\n            final String rescheduleReasonCvValue = rs.getString(\"rescheduleReasonCvValue\");\n            final CodeValueData rescheduleReasonCodeValue = CodeValueData.instance(rescheduleReasonCvId, rescheduleReasonCvValue);\n            final String rescheduleReasonComment = rs.getString(\"rescheduleReasonComment\");\n            final Boolean recalculateInterest = rs.getBoolean(\"recalculateInterest\");\n            final LocalDate submittedOnDate = JdbcSupport.getLocalDate(rs, \"submittedOnDate\");\n            final String submittedByUsername = rs.getString(\"submittedByUsername\");\n            final String submittedByFirstname = rs.getString(\"submittedByFirstname\");\n            final String submittedByLastname = rs.getString(\"submittedByLastname\");<fim_middle>// function below has no smell\n"}