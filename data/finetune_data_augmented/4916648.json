{"text": "<fim_prefix>/*\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * \n */\n\npackage org.apache.jmeter.functions;\n\n\nimport java.io.UnsupportedEncodingException;\nimport java.net.URLEncoder;\nimport java.nio.charset.StandardCharsets;\nimport java.util.Collection;\nimport java.util.LinkedList;\nimport java.util.List;\n\nimport org.apache.jmeter.engine.util.CompoundVariable;\nimport org.apache.jmeter.samplers.SampleResult;\nimport org.apache.jmeter.samplers.Sampler;\nimport org.apache.jmeter.util.JMeterUtils;\n\n/**\n * Function to encode a string to a application/x-www-form-urlencoded string.\n * \n * @since 2.10\n */\n<fim_suffix>public class UrlEncode extends AbstractFunction {\n\n    private static final String CHARSET_ENCODING = StandardCharsets.UTF_8.name();\n    \n    private static final List<String> desc = new LinkedList<>();\n\n    private static final String KEY = \"__urlencode\"; //$NON-NLS-1$\n\n    static {\n        desc.add(JMeterUtils.getResString(\"urlencode_string\")); //$NON-NLS-1$\n    }\n\n    private Object[] values;\n\n    public UrlEncode() {\n    }\n\n    /** {@inheritDoc} */\n    @Override\n    public String execute(SampleResult previousResult, Sampler currentSampler)\n            throws InvalidVariableException {\n        String decodeString = \"\"; //$NON-NLS-1$\n        try {\n            String encodedString = ((CompoundVariable) values[0]).execute();\n            decodeString = URLEncoder.encode(encodedString, CHARSET_ENCODING);\n        } catch (UnsupportedEncodingException uee) {\n            return null;\n        }\n        return decodeString;\n    }\n\n    /** {@inheritDoc} */\n    @Override\n    public void setParameters(Collection<CompoundVariable> parameters) throws InvalidVariableException {\n        checkParameterCount(parameters, 1);\n        values = parameters.toArray();\n    }\n\n    /** {@inheritDoc} */\n    @Override\n    public String getReferenceKey() {\n        return KEY;\n    }\n\n    /** {@inheritDoc} */\n    @Override\n    public List<String> getArgumentDesc() {\n        return desc;\n    }\n}<fim_middle>// class below has no smell\n"}