{"text": "<fim_prefix>  String DFS_ENCRYPT_DATA_TRANSFER_CIPHER_SUITES_KEY =\n      \"dfs.encrypt.data.transfer.cipher.suites\";\n  String DFS_DATA_TRANSFER_PROTECTION_KEY = \"dfs.data.transfer.protection\";\n  String DFS_DATA_TRANSFER_PROTECTION_DEFAULT = \"\";\n  String DFS_DATA_TRANSFER_SASL_PROPS_RESOLVER_CLASS_KEY =\n      \"dfs.data.transfer.saslproperties.resolver.class\";\n  String DFS_ENCRYPT_DATA_TRANSFER_CIPHER_KEY_BITLENGTH_KEY =\n      \"dfs.encrypt.data.transfer.cipher.key.bitlength\";\n  int    DFS_ENCRYPT_DATA_TRANSFER_CIPHER_KEY_BITLENGTH_DEFAULT = 128;\n  String DFS_TRUSTEDCHANNEL_RESOLVER_CLASS =\n      \"dfs.trustedchannel.resolver.class\";\n  String REPLICA_ACCESSOR_BUILDER_CLASSES_KEY =\n      PREFIX + \"replica.accessor.builder.classes\";\n  // The number of NN response dropped by client proactively in each RPC call.\n  // For testing NN retry cache, we can set this property with positive value.\n  String  DFS_CLIENT_TEST_DROP_NAMENODE_RESPONSE_NUM_KEY =\n      \"dfs.client.test.drop.namenode.response.number\";\n  int     DFS_CLIENT_TEST_DROP_NAMENODE_RESPONSE_NUM_DEFAULT = 0;\n  String  DFS_CLIENT_LOCAL_INTERFACES = \"dfs.client.local.interfaces\";\n  String  DFS_USER_HOME_DIR_PREFIX_KEY = \"dfs.user.home.dir.prefix\";\n  String  DFS_USER_HOME_DIR_PREFIX_DEFAULT = \"/user\";\n  String DFS_DATA_TRANSFER_CLIENT_TCPNODELAY_KEY =\n      \"dfs.data.transfer.client.tcpnodelay\";\n  boolean DFS_DATA_TRANSFER_CLIENT_TCPNODELAY_DEFAULT = true;\n  String DFS_NAMENODE_SNAPSHOT_CAPTURE_OPENFILES =\n      \"dfs.namenode.snapshot.capture.openfiles\";\n  boolean DFS_NAMENODE_SNAPSHOT_CAPTURE_OPENFILES_DEFAULT = false;\n  String DFS_PROVIDED_ALIASMAP_INMEMORY_RPC_ADDRESS =\n      \"dfs.provided.aliasmap.inmemory.dnrpc-address\";\n  /**\n   * These are deprecated config keys to client code.\n   */\n  interface DeprecatedKeys {\n    String DFS_NAMENODE_BACKUP_ADDRESS_KEY =\n        \"dfs.namenode.backup.address\";\n    String DFS_NAMENODE_BACKUP_HTTP_ADDRESS_KEY =\n        \"dfs.namenode.backup.http-address\";\n    String DFS_DATANODE_BALANCE_BANDWIDTHPERSEC_KEY =\n        \"dfs.datanode.balance.bandwidthPerSec\";\n    //Following keys have no defaults\n    String DFS_DATANODE_DATA_DIR_KEY = \"dfs.datanode.data.dir\";\n    String DFS_NAMENODE_MAX_OBJECTS_KEY = \"dfs.namenode.max.objects\";\n    String DFS_NAMENODE_NAME_DIR_KEY = \"dfs.namenode.name.dir\";\n    String DFS_NAMENODE_NAME_DIR_RESTORE_KEY = \"dfs.namenode.name.dir.restore\";\n    String DFS_NAMENODE_EDITS_DIR_KEY = \"dfs.namenode.edits.dir\";\n    String DFS_NAMENODE_SAFEMODE_EXTENSION_KEY =\n        \"dfs.namenode.safemode.extension\";\n    String DFS_NAMENODE_SAFEMODE_THRESHOLD_PCT_KEY =\n        \"dfs.namenode.safemode.threshold-pct\";\n    String DFS_NAMENODE_SECONDARY_HTTP_ADDRESS_KEY =\n        \"dfs.namenode.secondary.http-address\";\n    String DFS_NAMENODE_CHECKPOINT_DIR_KEY = \"dfs.namenode.checkpoint.dir\";\n    String DFS_NAMENODE_CHECKPOINT_EDITS_DIR_KEY =\n        \"dfs.namenode.checkpoint.edits.dir\";\n    String DFS_NAMENODE_CHECKPOINT_PERIOD_KEY =\n        \"dfs.namenode.checkpoint.period\";\n    String DFS_NAMENODE_HEARTBEAT_RECHECK_INTERVAL_KEY =\n        \"dfs.namenode.heartbeat.recheck-interval\";\n    String DFS_CLIENT_HTTPS_KEYSTORE_RESOURCE_KEY =\n        \"dfs.client.https.keystore.resource\";\n    String DFS_CLIENT_HTTPS_NEED_AUTH_KEY = \"dfs.client.https.need-auth\";\n    String DFS_DATANODE_HOST_NAME_KEY = \"dfs.datanode.hostname\";\n    String DFS_METRICS_SESSION_ID_KEY = \"dfs.metrics.session-id\";\n    String DFS_NAMENODE_ACCESSTIME_PRECISION_KEY =\n        \"dfs.namenode.accesstime.precision\";\n    String DFS_NAMENODE_REDUNDANCY_CONSIDERLOAD_KEY =\n        \"dfs.namenode.redundancy.considerLoad\";\n    String DFS_NAMENODE_REDUNDANCY_CONSIDERLOAD_FACTOR =\n        \"dfs.namenode.redundancy.considerLoad.factor\";\n    String DFS_NAMENODE_REDUNDANCY_INTERVAL_SECONDS_KEY =\n        \"dfs.namenode.redundancy.interval.seconds\";\n    String DFS_NAMENODE_REPLICATION_MIN_KEY = \"dfs.namenode.replication.min\";\n    String DFS_NAMENODE_RECONSTRUCTION_PENDING_TIMEOUT_SEC_KEY =\n        \"dfs.namenode.reconstruction.pending.timeout-sec\";\n    String DFS_NAMENODE_REPLICATION_MAX_STREAMS_KEY =\n        \"dfs.namenode.replication.max-streams\";\n    String DFS_PERMISSIONS_ENABLED_KEY = \"dfs.permissions.enabled\";\n    String DFS_PERMISSIONS_SUPERUSERGROUP_KEY =\n        \"dfs.permissions.superusergroup\";\n    String DFS_DATANODE_MAX_RECEIVER_THREADS_KEY =\n        \"dfs.datanode.max.transfer.threads\";\n    String DFS_NAMESERVICE_ID = \"dfs.nameservice.id\";\n  }\n  /** dfs.client.retry configuration properties */\n  interface Retry {\n    String PREFIX = HdfsClientConfigKeys.PREFIX + \"retry.\";\n    String  POLICY_ENABLED_KEY = PREFIX + \"policy.enabled\";\n    boolean POLICY_ENABLED_DEFAULT = false;\n    String  POLICY_SPEC_KEY = PREFIX + \"policy.spec\";\n    String  POLICY_SPEC_DEFAULT = \"10000,6,60000,10\"; //t1,n1,t2,n2,...\n    String  TIMES_GET_LAST_BLOCK_LENGTH_KEY =\n        PREFIX + \"times.get-last-block-length\";\n    int     TIMES_GET_LAST_BLOCK_LENGTH_DEFAULT = 3;\n    String  INTERVAL_GET_LAST_BLOCK_LENGTH_KEY =\n        PREFIX + \"interval-ms.get-last-block-length\";\n    int     INTERVAL_GET_LAST_BLOCK_LENGTH_DEFAULT = 4000;\n    String  MAX_ATTEMPTS_KEY = PREFIX + \"max.attempts\";\n    int     MAX_ATTEMPTS_DEFAULT = 10;\n    String  WINDOW_BASE_KEY = PREFIX + \"window.base\";\n    int     WINDOW_BASE_DEFAULT = 3000;\n  }\n  /** dfs.client.failover configuration properties */\n<fim_suffix>  interface Failover {\n    String PREFIX = HdfsClientConfigKeys.PREFIX + \"failover.\";\n    String  PROXY_PROVIDER_KEY_PREFIX = PREFIX + \"proxy.provider\";\n    String  MAX_ATTEMPTS_KEY = PREFIX + \"max.attempts\";\n    int     MAX_ATTEMPTS_DEFAULT = 15;\n    String  SLEEPTIME_BASE_KEY = PREFIX + \"sleep.base.millis\";\n    int     SLEEPTIME_BASE_DEFAULT = 500;\n    String  SLEEPTIME_MAX_KEY = PREFIX + \"sleep.max.millis\";\n    int     SLEEPTIME_MAX_DEFAULT = 15000;\n    String  CONNECTION_RETRIES_KEY = PREFIX + \"connection.retries\";\n    int     CONNECTION_RETRIES_DEFAULT = 0;\n    String  CONNECTION_RETRIES_ON_SOCKET_TIMEOUTS_KEY =\n        PREFIX + \"connection.retries.on.timeouts\";\n    int     CONNECTION_RETRIES_ON_SOCKET_TIMEOUTS_DEFAULT = 0;\n    String  RANDOM_ORDER = PREFIX + \"random.order\";\n    boolean RANDOM_ORDER_DEFAULT = false;\n    String  RESOLVE_ADDRESS_NEEDED_KEY = PREFIX + \"resolve-needed\";\n    boolean RESOLVE_ADDRESS_NEEDED_DEFAULT = false;\n    String RESOLVE_SERVICE_KEY = PREFIX + \"resolver.impl\";\n  }<fim_middle>// class below has no smell\n"}