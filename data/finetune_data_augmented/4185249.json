{"text": "<fim_prefix>/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.apache.cassandra.utils;\n\nimport com.google.common.base.Objects;\n\npublic class Pair<T1, T2>\n{\n    public final T1 left;\n    public final T2 right;\n\n    protected Pair(T1 left, T2 right)\n    {\n        this.left = left;\n        this.right = right;\n    }\n\n    @Override\n    public final int hashCode()\n    {\n        int hashCode = 31 + (left == null ? 0 : left.hashCode());\n        return 31*hashCode + (right == null ? 0 : right.hashCode());\n    }\n\n    @Override\n    public final boolean equals(Object o)\n    {\n        if(!(o instanceof Pair))\n            return false;\n        Pair that = (Pair)o;\n        // handles nulls properly\n        return Objects.equal(left, that.left) && Objects.equal(right, that.right);\n    }\n\n<fim_suffix>    @Override\n    public String toString()\n    {\n        return \"(\" + left + \",\" + right + \")\";\n    }\n\n    //For functional interfaces\n    public T1 left()\n    {\n        return left;\n    }\n\n    //For functional interfaces\n    public T2 right()\n    {\n        return right;\n    }\n\n    public static <X, Y> Pair<X, Y> create(X x, Y y)\n    {\n        return new Pair<X, Y>(x, y);\n    }\n}<fim_middle>// function below has no smell\n"}