{"text": "<fim_prefix>/**\n * Copyright (c) 2018 NumberFour AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *   NumberFour AG - Initial API and implementation\n */\npackage org.eclipse.n4js.typesystem;\n\nimport org.eclipse.n4js.n4idl.versioning.N4IDLVersionResolver;\nimport org.eclipse.n4js.ts.typeRefs.TypeRefsFactory;\nimport org.eclipse.n4js.ts.typeRefs.UnknownTypeRef;\nimport org.eclipse.n4js.typesystem.utils.TypeSystemHelper;\nimport org.eclipse.n4js.utils.ContainerTypesHelper;\n\nimport com.google.inject.Inject;\n\n/**\n * Abstract base class for all \"type system judgments\". Each concrete subclass will represent one judgment, i.e. one\n * major operation of the type system such as inference of types of AST nodes, subtype checking, computation of type\n * expectations, etc.\n * <p>\n * The term \"judgment\" comes from the Xsemantics framework, with which the subclasses' functionality was implemented,\n * originally.\n */\n<fim_suffix>/* package */ abstract class AbstractJudgment {\n\n\t@Inject\n\tprotected N4JSTypeSystem ts;\n\t@Inject\n\tprotected TypeSystemHelper typeSystemHelper;\n\t@Inject\n\tprotected ContainerTypesHelper containerTypesHelper;\n\t@Inject\n\tprotected N4IDLVersionResolver n4idlVersionResolver;\n\n\tprotected static UnknownTypeRef unknown() {\n\t\treturn TypeRefsFactory.eINSTANCE.createUnknownTypeRef();\n\t}\n}<fim_middle>// class below has no smell\n"}