{"text": "<fim_prefix>/*\n * Copyright (c) 2003, 2013, Oracle and/or its affiliates. All rights reserved.\n * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n *\n * This code is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License version 2 only, as\n * published by the Free Software Foundation.  Oracle designates this\n * particular file as subject to the \"Classpath\" exception as provided\n * by Oracle in the LICENSE file that accompanied this code.\n *\n * This code is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n * version 2 for more details (a copy is included in the LICENSE file that\n * accompanied this code).\n *\n * You should have received a copy of the GNU General Public License version\n * 2 along with this work; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n *\n * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n * or visit www.oracle.com if you need additional information or have any\n * questions.\n */\n\npackage com.sun.tools.doclets.internal.toolkit.taglets;\n\nimport com.sun.javadoc.*;\nimport com.sun.tools.doclets.internal.toolkit.Content;\n\n/**\n * An abstract class for that implements the {@link Taglet} interface.\n *\n *  <p><b>This is NOT part of any supported API.\n *  If you write code that depends on this, you do so at your own risk.\n *  This code and its internal interfaces are subject to change or\n *  deletion without notice.</b>\n *\n * @author Jamie Ho\n * @since 1.4\n */\n@Deprecated\npublic abstract class BaseTaglet implements Taglet {\n\n    protected String name = \"Default\";\n\n    /**\n     * Return true if this <code>Taglet</code>\n     * is used in constructor documentation.\n     * @return true if this <code>Taglet</code>\n     * is used in constructor documentation and false\n     * otherwise.\n     */\n    public boolean inConstructor() {\n        return true;\n    }\n\n    /**\n     * Return true if this <code>Taglet</code>\n     * is used in field documentation.\n     * @return true if this <code>Taglet</code>\n     * is used in field documentation and false\n     * otherwise.\n     */\n    public boolean inField() {\n        return true;\n    }\n\n    /**\n     * Return true if this <code>Taglet</code>\n     * is used in method documentation.\n     * @return true if this <code>Taglet</code>\n     * is used in method documentation and false\n     * otherwise.\n     */\n    public boolean inMethod() {\n        return true;\n    }\n\n    /**\n     * Return true if this <code>Taglet</code>\n     * is used in overview documentation.\n     * @return true if this <code>Taglet</code>\n     * is used in method documentation and false\n     * otherwise.\n     */\n    public boolean inOverview() {\n        return true;\n    }\n\n    /**\n     * Return true if this <code>Taglet</code>\n     * is used in package documentation.\n     * @return true if this <code>Taglet</code>\n     * is used in package documentation and false\n     * otherwise.\n     */\n    public boolean inPackage() {\n        return true;\n    }\n\n    /**\n     * Return true if this <code>Taglet</code>\n     * is used in type documentation (classes or interfaces).\n     * @return true if this <code>Taglet</code>\n     * is used in type documentation and false\n     * otherwise.\n     */\n    public boolean inType() {\n        return true;\n    }\n\n    /**\n     * Return true if this <code>Taglet</code>\n     * is an inline tag.\n     * @return true if this <code>Taglet</code>\n     * is an inline tag and false otherwise.\n     */\n    public boolean isInlineTag() {\n        return false;\n    }\n\n    /**\n     * Return the name of this custom tag.\n     * @return the name of this custom tag.\n     */\n    public String getName() {\n        return name;\n    }\n\n    /**\n     * {@inheritDoc}\n     * @throws IllegalArgumentException thrown when the method is not supported by the taglet.\n     */\n    public Content getTagletOutput(Tag tag, TagletWriter writer) {\n        throw new IllegalArgumentException(\"Method not supported in taglet \" + getName() + \".\");\n    }\n\n    /**\n     * {@inheritDoc}\n     * @throws IllegalArgumentException thrown when the method is not supported by the taglet.\n     */\n<fim_suffix>    public Content getTagletOutput(Doc holder, TagletWriter writer) {\n        throw new IllegalArgumentException(\"Method not supported in taglet \" + getName() + \".\");\n    }\n}<fim_middle>// function below has no smell\n"}