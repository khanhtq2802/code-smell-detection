{"text": "<fim_prefix>/*******************************************************************************\n * Copyright (c) 2005 Actuate Corporation. All rights reserved. This program and\n * the accompanying materials are made available under the terms of the Eclipse\n * Public License v1.0 which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n * \n * Contributors: Actuate Corporation - initial API and implementation\n ******************************************************************************/\n\npackage org.eclipse.birt.report.designer.ui.cubebuilder.joins.commands;\n\nimport org.eclipse.birt.report.designer.ui.cubebuilder.joins.editparts.ColumnEditPart;\nimport org.eclipse.birt.report.designer.ui.cubebuilder.joins.editparts.DatasetNodeEditPart;\nimport org.eclipse.birt.report.designer.ui.cubebuilder.joins.editparts.HierarchyNodeEditPart;\nimport org.eclipse.birt.report.designer.ui.cubebuilder.joins.editparts.HierarchyColumnEditPart;\nimport org.eclipse.birt.report.designer.ui.util.ExceptionUtil;\nimport org.eclipse.birt.report.model.api.DimensionConditionHandle;\nimport org.eclipse.birt.report.model.api.StructureFactory;\nimport org.eclipse.birt.report.model.api.elements.structures.DimensionCondition;\nimport org.eclipse.birt.report.model.api.elements.structures.DimensionJoinCondition;\nimport org.eclipse.birt.report.model.api.olap.TabularCubeHandle;\nimport org.eclipse.birt.report.model.api.olap.TabularHierarchyHandle;\nimport org.eclipse.gef.EditPart;\nimport org.eclipse.gef.commands.Command;\n\n/**\n * \n * The Command for creating a new Join , when the user has selected columns from\n * different tables. It notifies the various listeners by sending a\n * JoinCreationEvent.\n */\n\n<fim_suffix>public class AddJoinConditionCommand extends Command\n{\n\n\tprotected EditPart source;\n\tprotected ColumnEditPart target;\n\n\t/**\n\t * Standard for constructor for a compound command.\n\t * \n\t * @param domain\n\t *            The editing domain\n\t * @param owner\n\t *            The object to be modified\n\t * @param value\n\t *            The value to \"set\"\n\t */\n\tpublic AddJoinConditionCommand( final EditPart source,\n\t\t\tfinal ColumnEditPart target )\n\t{\n\t\tsuper( );\n\t\tthis.source = source;\n\t\tthis.target = target;\n\t}\n\n\tpublic boolean canExecute( )\n\t{\n\t\t// return super.canExecute();\n\t\tboolean canExecute = ( target != null && source != null );\n\n\t\treturn canExecute;\n\t}\n\n\t/*\n\t * (non-Javadoc)\n\t * \n\t * @see org.eclipse.gef.commands.Command#execute()\n\t */\n\tpublic void execute( )\n\t{\n\n\t\tif ( source == null || target == null )\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tDimensionJoinCondition joinCondition = StructureFactory.createDimensionJoinCondition( );\n\t\tjoinCondition.setCubeKey( target.getColumnName( ) );\n\t\tif ( source instanceof HierarchyColumnEditPart )\n\t\t\tjoinCondition.setHierarchyKey( ( (HierarchyColumnEditPart) source ).getColumnName( ) );\n\n\t\tTabularHierarchyHandle hierarchy = (TabularHierarchyHandle) ( (HierarchyNodeEditPart) source.getParent( ) ).getModel( );\n\n\t\ttry\n\t\t{\n\t\t\tTabularCubeHandle cube = ( (DatasetNodeEditPart) target.getParent( ) ).getCube( );\n\t\t\tgetDimensionCondition( cube,\n\t\t\t\t\thierarchy ).addJoinCondition( joinCondition );\n\n\t\t}\n\t\tcatch ( Exception e )\n\t\t{\n\t\t\tExceptionUtil.handle( e );\n\t\t}\n\n\t}\n\n\tprivate DimensionConditionHandle getDimensionCondition(\n\t\t\tTabularCubeHandle cube, TabularHierarchyHandle hierarchy )\n\t\t\tthrows Exception\n\t{\n\t\tDimensionConditionHandle conditionHandle = cube.findDimensionCondition( hierarchy );\n\t\tif ( conditionHandle != null )\n\t\t\treturn conditionHandle;\n\t\tDimensionCondition dimensionCondition = StructureFactory.createCubeJoinCondition( );\n\t\tconditionHandle = cube.addDimensionCondition( dimensionCondition );\n\t\tconditionHandle.setHierarchy( hierarchy );\n\t\treturn conditionHandle;\n\t}\n}<fim_middle>// class below has no smell\n"}