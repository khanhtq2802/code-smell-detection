{"text": "<fim_prefix>/*\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.apache.camel.dataformat.barcode.springboot;\n\nimport javax.annotation.Generated;\nimport org.apache.camel.spring.boot.DataFormatConfigurationPropertiesCommon;\nimport org.springframework.boot.context.properties.ConfigurationProperties;\n\n/**\n * The Barcode data format is used for creating barccode images (such as\n * QR-Code)\n * \n * Generated by camel-package-maven-plugin - do not edit this file!\n */\n@Generated(\"org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo\")\n@ConfigurationProperties(prefix = \"camel.dataformat.barcode\")\npublic class BarcodeDataFormatConfiguration\n        extends\n            DataFormatConfigurationPropertiesCommon {\n\n    /**\n     * Whether to enable auto configuration of the barcode data format. This is\n     * enabled by default.\n     */\n    private Boolean enabled;\n    /**\n     * Width of the barcode\n     */\n    private Integer width;\n    /**\n     * Height of the barcode\n     */\n    private Integer height;\n    /**\n     * Image type of the barcode such as png\n     */\n    private String imageType;\n    /**\n     * Barcode format such as QR-Code\n     */\n    private String barcodeFormat;\n    /**\n     * Whether the data format should set the Content-Type header with the type\n     * from the data format if the data format is capable of doing so. For\n     * example application/xml for data formats marshalling to XML, or\n     * application/json for data formats marshalling to JSon etc.\n     */\n    private Boolean contentTypeHeader = false;\n\n    public Integer getWidth() {\n        return width;\n    }\n\n    public void setWidth(Integer width) {\n        this.width = width;\n    }\n\n    public Integer getHeight() {\n        return height;\n    }\n\n<fim_suffix>    public void setHeight(Integer height) {\n        this.height = height;\n    }\n\n    public String getImageType() {\n        return imageType;\n    }\n\n    public void setImageType(String imageType) {\n        this.imageType = imageType;\n    }\n\n    public String getBarcodeFormat() {\n        return barcodeFormat;\n    }\n\n    public void setBarcodeFormat(String barcodeFormat) {\n        this.barcodeFormat = barcodeFormat;\n    }\n\n    public Boolean getContentTypeHeader() {\n        return contentTypeHeader;\n    }\n\n    public void setContentTypeHeader(Boolean contentTypeHeader) {\n        this.contentTypeHeader = contentTypeHeader;\n    }\n}<fim_middle>// function below has no smell\n"}