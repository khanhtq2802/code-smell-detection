{"text": "<fim_prefix>/*\n * Copyright (c) 2015 Uber Technologies, Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\npackage com.uber.tchannel.frames;\n\nimport com.uber.tchannel.codecs.CodecUtils;\nimport com.uber.tchannel.codecs.TFrame;\nimport com.uber.tchannel.tracing.Trace;\nimport io.netty.buffer.ByteBuf;\nimport io.netty.buffer.ByteBufAllocator;\n\npublic final class CancelFrame extends Frame {\n\n    private long ttl;\n    private Trace tracing;\n    private String why;\n\n    /**\n     * Designated Constructor\n     *\n     * @param id      unique id of the message\n     * @param ttl     ttl on the wire\n     * @param tracing tracing information\n     * @param why     why the message was canceled\n     */\n    public CancelFrame(long id, long ttl, Trace tracing, String why) {\n        this.id = id;\n        this.ttl = ttl;\n        this.tracing = tracing;\n        this.why = why;\n    }\n\n    protected CancelFrame(long id) {\n        this.id = id;\n    }\n\n    public long getTTL() {\n        return ttl;\n    }\n\n    public Trace getTracing() {\n        return tracing;\n    }\n\n    @Override\n    public FrameType getType() {\n        return FrameType.Cancel;\n    }\n\n<fim_suffix>    @Override\n    public ByteBuf encodeHeader(ByteBufAllocator allocator) {\n        ByteBuf buffer = allocator.buffer(31);\n\n        // ttl:4\n        buffer.writeInt((int) getTTL());\n\n        // tracing:25\n        CodecUtils.encodeTrace(getTracing(), buffer);\n\n        // why~2\n        CodecUtils.encodeString(getWhy(), buffer);\n\n        return buffer;\n    }\n\n    @Override\n    public void decode(TFrame tFrame) {\n        // ttl:4\n        ttl = tFrame.payload.readUnsignedInt();\n\n        // tracing:25\n        tracing = CodecUtils.decodeTrace(tFrame.payload);\n\n        // why~2\n        why = CodecUtils.decodeString(tFrame.payload);\n\n        tFrame.release();\n    }\n\n    public String getWhy() {\n        return why;\n    }\n\n}<fim_middle>// function below has no smell\n"}