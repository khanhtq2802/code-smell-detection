{"text": "<fim_prefix>/*\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.apache.camel.component.aws.s3.client;\n\nimport org.apache.camel.component.aws.s3.S3Configuration;\nimport org.apache.camel.component.aws.s3.client.impl.S3ClientIAMOptimizedImpl;\nimport org.apache.camel.component.aws.s3.client.impl.S3ClientStandardImpl;\n\n/**\n * Factory class to return the correct type of AWS S3 aws.\n */\n<fim_suffix>public final class S3ClientFactory {\n\n    private S3ClientFactory() {\n        // Prevent instantiation of this factory class.\n        throw new RuntimeException(\"Do not instantiate a Factory class! Refer to the class \"\n                                   + \"to learn how to properly use this factory implementation.\");\n    }\n\n    /**\n     * Return the correct aws s3 client (based on remote vs local).\n     * @param maxConnections max connections\n     * @return AWSS3Client\n     */\n    public static S3Client getAWSS3Client(S3Configuration configuration, int maxConnections) {\n        return configuration.isUseIAMCredentials() ? new S3ClientIAMOptimizedImpl(configuration, maxConnections)\n                : new S3ClientStandardImpl(configuration, maxConnections);\n    }\n}<fim_middle>// class below has no smell\n"}