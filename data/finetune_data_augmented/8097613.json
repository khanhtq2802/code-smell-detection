{"text": "<fim_prefix>        try {\n            // InternalXtextGrammarTestLanguage.g:6001:1: ( ( ruleGroup ) )\n            // InternalXtextGrammarTestLanguage.g:6002:2: ( ruleGroup )\n            {\n            // InternalXtextGrammarTestLanguage.g:6002:2: ( ruleGroup )\n            // InternalXtextGrammarTestLanguage.g:6003:3: ruleGroup\n            {\n             before(grammarAccess.getAlternativesAccess().getGroupsGroupParserRuleCall_1_1_1_0()); \n            pushFollow(FOLLOW_2);\n            ruleGroup();\n            state._fsp--;\n             after(grammarAccess.getAlternativesAccess().getGroupsGroupParserRuleCall_1_1_1_0()); \n            }\n            }\n        }\n        catch (RecognitionException re) {\n            reportError(re);\n            recover(input,re);\n        }\n        finally {\n            \trestoreStackSize(stackSize);\n        }\n        return ;\n    }\n    // $ANTLR end \"rule__Alternatives__GroupsAssignment_1_1_1\"\n    // $ANTLR start \"rule__Group__TokensAssignment_1_1\"\n    // InternalXtextGrammarTestLanguage.g:6012:1: rule__Group__TokensAssignment_1_1 : ( ruleAbstractToken ) ;\n    public final void rule__Group__TokensAssignment_1_1() throws RecognitionException {\n        \t\tint stackSize = keepStackSize();\n        try {\n            // InternalXtextGrammarTestLanguage.g:6016:1: ( ( ruleAbstractToken ) )\n            // InternalXtextGrammarTestLanguage.g:6017:2: ( ruleAbstractToken )\n            {\n            // InternalXtextGrammarTestLanguage.g:6017:2: ( ruleAbstractToken )\n            // InternalXtextGrammarTestLanguage.g:6018:3: ruleAbstractToken\n            {\n             before(grammarAccess.getGroupAccess().getTokensAbstractTokenParserRuleCall_1_1_0()); \n            pushFollow(FOLLOW_2);\n            ruleAbstractToken();\n            state._fsp--;\n             after(grammarAccess.getGroupAccess().getTokensAbstractTokenParserRuleCall_1_1_0()); \n            }\n            }\n        }\n        catch (RecognitionException re) {\n            reportError(re);\n            recover(input,re);\n        }\n        finally {\n            \trestoreStackSize(stackSize);\n        }\n        return ;\n    }\n    // $ANTLR end \"rule__Group__TokensAssignment_1_1\"\n    // $ANTLR start \"rule__AbstractTokenWithCardinality__CardinalityAssignment_1\"\n    // InternalXtextGrammarTestLanguage.g:6027:1: rule__AbstractTokenWithCardinality__CardinalityAssignment_1 : ( ( rule__AbstractTokenWithCardinality__CardinalityAlternatives_1_0 ) ) ;\n    public final void rule__AbstractTokenWithCardinality__CardinalityAssignment_1() throws RecognitionException {\n        \t\tint stackSize = keepStackSize();\n        try {\n            // InternalXtextGrammarTestLanguage.g:6031:1: ( ( ( rule__AbstractTokenWithCardinality__CardinalityAlternatives_1_0 ) ) )\n            // InternalXtextGrammarTestLanguage.g:6032:2: ( ( rule__AbstractTokenWithCardinality__CardinalityAlternatives_1_0 ) )\n            {\n            // InternalXtextGrammarTestLanguage.g:6032:2: ( ( rule__AbstractTokenWithCardinality__CardinalityAlternatives_1_0 ) )\n            // InternalXtextGrammarTestLanguage.g:6033:3: ( rule__AbstractTokenWithCardinality__CardinalityAlternatives_1_0 )\n            {\n             before(grammarAccess.getAbstractTokenWithCardinalityAccess().getCardinalityAlternatives_1_0()); \n            // InternalXtextGrammarTestLanguage.g:6034:3: ( rule__AbstractTokenWithCardinality__CardinalityAlternatives_1_0 )\n            // InternalXtextGrammarTestLanguage.g:6034:4: rule__AbstractTokenWithCardinality__CardinalityAlternatives_1_0\n            {\n            pushFollow(FOLLOW_2);\n            rule__AbstractTokenWithCardinality__CardinalityAlternatives_1_0();\n            state._fsp--;\n            }\n             after(grammarAccess.getAbstractTokenWithCardinalityAccess().getCardinalityAlternatives_1_0()); \n            }\n            }\n        }\n        catch (RecognitionException re) {\n            reportError(re);\n            recover(input,re);\n        }\n        finally {\n            \trestoreStackSize(stackSize);\n        }\n        return ;\n    }\n    // $ANTLR end \"rule__AbstractTokenWithCardinality__CardinalityAssignment_1\"\n    // $ANTLR start \"rule__Action__TypeAssignment_1\"\n    // InternalXtextGrammarTestLanguage.g:6042:1: rule__Action__TypeAssignment_1 : ( ruleTypeRef ) ;\n    public final void rule__Action__TypeAssignment_1() throws RecognitionException {\n        \t\tint stackSize = keepStackSize();\n        try {\n            // InternalXtextGrammarTestLanguage.g:6046:1: ( ( ruleTypeRef ) )\n            // InternalXtextGrammarTestLanguage.g:6047:2: ( ruleTypeRef )\n            {\n            // InternalXtextGrammarTestLanguage.g:6047:2: ( ruleTypeRef )\n            // InternalXtextGrammarTestLanguage.g:6048:3: ruleTypeRef\n            {\n             before(grammarAccess.getActionAccess().getTypeTypeRefParserRuleCall_1_0()); \n            pushFollow(FOLLOW_2);\n            ruleTypeRef();\n            state._fsp--;\n             after(grammarAccess.getActionAccess().getTypeTypeRefParserRuleCall_1_0()); \n            }\n            }\n        }\n        catch (RecognitionException re) {\n            reportError(re);\n            recover(input,re);\n        }\n        finally {\n            \trestoreStackSize(stackSize);\n        }\n        return ;\n    }\n    // $ANTLR end \"rule__Action__TypeAssignment_1\"\n    // $ANTLR start \"rule__Action__FeatureAssignment_2_1\"\n    // InternalXtextGrammarTestLanguage.g:6057:1: rule__Action__FeatureAssignment_2_1 : ( RULE_ID ) ;\n    public final void rule__Action__FeatureAssignment_2_1() throws RecognitionException {\n        \t\tint stackSize = keepStackSize();\n        try {\n            // InternalXtextGrammarTestLanguage.g:6061:1: ( ( RULE_ID ) )\n            // InternalXtextGrammarTestLanguage.g:6062:2: ( RULE_ID )\n            {\n            // InternalXtextGrammarTestLanguage.g:6062:2: ( RULE_ID )\n            // InternalXtextGrammarTestLanguage.g:6063:3: RULE_ID\n            {\n             before(grammarAccess.getActionAccess().getFeatureIDTerminalRuleCall_2_1_0()); \n            match(input,RULE_ID,FOLLOW_2); \n             after(grammarAccess.getActionAccess().getFeatureIDTerminalRuleCall_2_1_0()); \n            }\n            }\n        }\n        catch (RecognitionException re) {\n            reportError(re);\n            recover(input,re);\n        }\n        finally {\n            \trestoreStackSize(stackSize);\n        }\n        return ;\n    }\n    // $ANTLR end \"rule__Action__FeatureAssignment_2_1\"\n    // $ANTLR start \"rule__Action__OperatorAssignment_2_2\"\n    // InternalXtextGrammarTestLanguage.g:6072:1: rule__Action__OperatorAssignment_2_2 : ( ( rule__Action__OperatorAlternatives_2_2_0 ) ) ;\n<fim_suffix>    public final void rule__Action__OperatorAssignment_2_2() throws RecognitionException {\n        \t\tint stackSize = keepStackSize();\n        try {\n            // InternalXtextGrammarTestLanguage.g:6076:1: ( ( ( rule__Action__OperatorAlternatives_2_2_0 ) ) )\n            // InternalXtextGrammarTestLanguage.g:6077:2: ( ( rule__Action__OperatorAlternatives_2_2_0 ) )\n            {\n            // InternalXtextGrammarTestLanguage.g:6077:2: ( ( rule__Action__OperatorAlternatives_2_2_0 ) )\n            // InternalXtextGrammarTestLanguage.g:6078:3: ( rule__Action__OperatorAlternatives_2_2_0 )\n            {\n             before(grammarAccess.getActionAccess().getOperatorAlternatives_2_2_0()); \n            // InternalXtextGrammarTestLanguage.g:6079:3: ( rule__Action__OperatorAlternatives_2_2_0 )\n            // InternalXtextGrammarTestLanguage.g:6079:4: rule__Action__OperatorAlternatives_2_2_0\n            {\n            pushFollow(FOLLOW_2);\n            rule__Action__OperatorAlternatives_2_2_0();\n            state._fsp--;\n            }\n             after(grammarAccess.getActionAccess().getOperatorAlternatives_2_2_0()); \n            }\n            }\n        }\n        catch (RecognitionException re) {\n            reportError(re);\n            recover(input,re);\n        }\n        finally {\n            \trestoreStackSize(stackSize);\n        }\n        return ;\n    }<fim_middle>// function below has no smell\n"}