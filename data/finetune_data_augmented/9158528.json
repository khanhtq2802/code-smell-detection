{"text": "<fim_prefix>\t\t}\n\t\treturn dim;\n\t}\n\tpublic void layout( ) throws BirtException\n\t{\n\t\tinit( );\n\t\t// For inline image, the hierarchy is\n\t\t// LineArea->InlineContainer->ImageArea.\n\t\t// the root is InlineContainer, so we just need to add the root directly\n\t\t// to its parent(LineArea).\n\t\t// In LineAreaLM, the lineArea will enlarge itself to hold the root.\n\t\t// For block image, the hierarchy is BlockContainer->ImageArea\n\t\tif ( PropertyUtil.isInlineElement( image ) )\n\t\t{\n\t\t\t// inline image\n\t\t\tassert ( parent instanceof IInlineStackingLayout );\n\t\t\tIInlineStackingLayout lineParent = (IInlineStackingLayout) parent;\n\t\t\tif ( root.getAllocatedWidth( ) > parent.getCurrentMaxContentWidth( ) )\n\t\t\t{\n\t\t\t\tif ( !lineParent.isEmptyLine( ) )\n\t\t\t\t{\n\t\t\t\t\tlineParent.endLine( );\n\t\t\t\t\tlayout( );\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tscale( );\n\t\t\t\t\tparent.addToRoot( root, 0 );\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tscale( );\n\t\t\t\tparent.addToRoot( root, 0 );\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif ( parent.isPageEmpty( ) )\n\t\t\t{\n\t\t\t\tscale( );\n\t\t\t}\n\t\t\tboolean succeed = parent.addArea( root, 0 );\n\t\t\tif ( succeed )\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif ( !parent.isPageEmpty( ) )\n\t\t\t\t{\n\t\t\t\t\tparent.autoPageBreak( );\n\t\t\t\t}\n\t\t\t\tscale( );\n\t\t\t\tparent.addToRoot( root, parent.contextList.size( ) - 1 );\n\t\t\t\tif ( parent.isInBlockStacking )\n\t\t\t\t{\n\t\t\t\t\tif ( parent.contextList.size( ) > 1 )\n\t\t\t\t\t{\n\t\t\t\t\t\tparent.closeExcludingLast( );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tprivate void scale( )\n\t{\n\t\tif ( !fitToContainer )\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\tif ( root.getAllocatedWidth( ) > parent.getCurrentMaxContentWidth( )\n\t\t\t\t|| root.getAllocatedHeight( ) > parent\n\t\t\t\t\t\t.getCurrentMaxContentHeight( ) )\n\t\t{\n\t\t\tint maxWidth = parent.getCurrentMaxContentWidth( );\n\t\t\tint maxHeight = parent.getCurrentMaxContentHeight( );\n\t\t\tdouble ratio = (double) maxWidth / (double) maxHeight;\n\t\t\tif ( ratio < intrinsic.getRatio( ) )\n\t\t\t{\n\t\t\t\t// use parent width\n\t\t\t\troot.setContentWidth( maxWidth );\n\t\t\t\troot.setContentHeight( (int) ( maxWidth / intrinsic.getRatio( ) ) );\n\t\t\t\tif ( root.getChildren( ).hasNext( ) )\n\t\t\t\t{\n\t\t\t\t\t// this root should only has one child.\n\t\t\t\t\tImageArea image = (ImageArea) root.getChildren( ).next( );\n\t\t\t\t\timage.setAllocatedWidth( maxWidth );\n\t\t\t\t\timage.setAllocatedHeight( (int) ( maxWidth / intrinsic.getRatio( ) ) );\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// use parent height\n\t\t\t\troot.setContentHeight( maxHeight );\n\t\t\t\troot.setContentWidth( (int) ( maxHeight * intrinsic.getRatio( ) ) );\n\t\t\t\tif ( root.getChildren( ).hasNext( ) )\n\t\t\t\t{\n\t\t\t\t\t// this root should only has one child.\n\t\t\t\t\tImageArea image = (ImageArea) root.getChildren( ).next( );\n\t\t\t\t\timage.setAllocatedHeight( maxHeight );\n\t\t\t\t\timage.setAllocatedWidth( (int) ( maxHeight * intrinsic.getRatio( ) ) );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tprotected void init( )\n\t{\n\t\tassert ( content instanceof IImageContent );\n\t\timage = (IImageContent) content;\n\t\tif ( PropertyUtil.isInlineElement( image ) )\n\t\t{\n\t\t\troot = (ContainerArea) AreaFactory.createInlineContainer( image,\n\t\t\t\t\ttrue, true );\n\t\t}\n\t\telse\n\t\t{\n\t\t\troot = (ContainerArea) AreaFactory.createBlockContainer( image );\n\t\t}\n\t\t// First, the width of root is set to its parent's max available width.\n\t\troot.setAllocatedWidth( parent.getCurrentMaxContentWidth( ) );\n\t\tDimension contentDimension = getSpecifiedDimension( image, root\n\t\t\t\t.getContentWidth( ), true );\n\t\tImageArea imageArea = (ImageArea) AreaFactory.createImageArea( image );\n\t\timageArea.setWidth( contentDimension.getWidth( ) );\n\t\timageArea.setHeight( contentDimension.getHeight( ) );\n\t\troot.addChild( imageArea );\n\t\timageArea.setPosition( root.getContentX( ), root.getContentY( ) );\n\t\t// Adjust the dimension of root.\n\t\troot.setContentWidth( imageArea.getWidth( ) );\n\t\troot.setContentHeight( imageArea.getHeight( ) );\n\t\tprocessChartLegend( image, imageArea );\n\t}\n\t/**\n\t * Creates legend for chart.\n\t * \n\t * @param imageContent\n\t *            the image content of the chart.\n\t * @param imageArea\n\t *            the imageArea of the chart.\n\t */\n\tprivate void processChartLegend( IImageContent imageContent,\n\t\t\tIImageArea imageArea )\n\t{\n\t\tif ( null == intrinsic )\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\tObject imageMapObject = imageContent.getImageMap( );\n\t\tboolean hasImageMap = ( imageMapObject != null )\n\t\t\t\t&& ( imageMapObject instanceof String )\n\t\t\t\t&& ( ( (String) imageMapObject ).length( ) > 0 );\n\t\tif ( hasImageMap )\n\t\t{\n\t\t\tcreateImageMap( (String) imageMapObject, imageArea );\n\t\t}\n\t}\n\tprivate void createImageMap( String imageMapObject, IImageArea imageArea )\n\t{\n\t\tPattern pattern = Pattern\n\t\t\t\t.compile( \"<AREA[^<>]*coords=\\\"([\\\\d,]*)\\\" href=\\\"([^<>\\\"]*)\\\" target=\\\"([^<>\\\"]*)\\\"/>\" );\n\t\tMatcher matcher = pattern.matcher( imageMapObject );\n\t\twhile ( matcher.find( ) )\n\t\t{\n\t\t\ttry\n\t\t\t{\n\t\t\t\tint[] area = getArea( matcher.group( 1 ) );\n\t\t\t\tString url = matcher.group( 2 );\n\t\t\t\tString targetWindow = matcher.group( 3 );\n\t\t\t\tcreateImageMap( area, imageArea, url, targetWindow );\n\t\t\t}\n\t\t\tcatch ( NumberFormatException e )\n\t\t\t{\n\t\t\t\tlogger.log( Level.WARNING, e.getMessage( ), e );\n\t\t\t}\n\t\t}\n\t}\n\tprivate void createImageMap( int[] area, IImageArea imageArea, String url,\n\t\t\tString targetWindow )\n\t{\n\t\tif ( url == null )\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\tActionContent link = new ActionContent( );\n\t\tif ( isBookmark( url ) )\n\t\t{\n\t\t\tString bookmark = getBookmark( url );\n\t\t\tlink.setBookmark( bookmark );\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlink.setHyperlink( url, targetWindow );\n\t\t}\n\t\tarea = getAbsoluteArea( area, imageArea );\n\t\tcreateImageMapContainer( area[0], area[1], area[2], area[3], link );\n\t}\n\t/**\n\t * Creates an image map container, which is an empty container with an hyper\n\t * link.\n\t * \n\t * @param x\n\t *            x coordinate of lower left corner of the container.\n\t * @param y\n\t *            y coordinate of lower left corner of the container.\n\t * @param width\n\t *            width of the container.\n\t * @param height\n\t *            height of the container.\n\t * @param link\n\t *            destination of the hyperlink.\n\t */\n<fim_suffix>\tprivate void createImageMapContainer( int x, int y, int width, int height,\n\t\t\tIHyperlinkAction link )\n\t{\n\t\tReportContent reportContent = (ReportContent) image.getReportContent( );\n\t\tIContainerContent mapContent = reportContent.createContainerContent( );\n\t\tmapContent.setHyperlinkAction( link );\n\t\tBlockContainerArea area = (BlockContainerArea) AreaFactory\n\t\t\t\t.createBlockContainer( mapContent );\n\t\tarea.setPosition( x, y );\n\t\tarea.setWidth( width );\n\t\tarea.setHeight( height );\n\t\troot.addChild( area );\n\t}<fim_middle>// function below has no smell\n"}