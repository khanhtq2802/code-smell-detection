{"text": "<fim_prefix>/**\n * Copyright (c) 2014,2019 Contributors to the Eclipse Foundation\n *\n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0\n *\n * SPDX-License-Identifier: EPL-2.0\n */\npackage org.eclipse.smarthome.core.audio;\n\nimport java.io.ByteArrayInputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\n\n/**\n * This is an implementation of a {@link FixedLengthAudioStream}, which is based on a simple byte array.\n *\n * @author Kai Kreuzer - Initial contribution and API\n *\n */\n<fim_suffix>public class ByteArrayAudioStream extends FixedLengthAudioStream {\n\n    private byte[] bytes;\n    private AudioFormat format;\n    private ByteArrayInputStream stream;\n\n    public ByteArrayAudioStream(byte[] bytes, AudioFormat format) {\n        this.bytes = bytes;\n        this.format = format;\n        this.stream = new ByteArrayInputStream(bytes);\n    }\n\n    @Override\n    public AudioFormat getFormat() {\n        return format;\n    }\n\n    @Override\n    public int read() throws IOException {\n        return stream.read();\n    }\n\n    @Override\n    public void close() throws IOException {\n        stream.close();\n    }\n\n    @Override\n    public long length() {\n        return bytes.length;\n    }\n\n    @Override\n    public InputStream getClonedStream() {\n        return new ByteArrayAudioStream(bytes, format);\n    }\n\n}<fim_middle>// class below has no smell\n"}