{"text": "<fim_prefix>package org.robolectric.shadows;\n\nimport static android.os.Build.VERSION_CODES.M;\nimport static org.robolectric.shadow.api.Shadow.directlyOn;\n\nimport android.graphics.Bitmap;\nimport android.graphics.drawable.Icon;\nimport android.net.Uri;\nimport org.robolectric.annotation.HiddenApi;\nimport org.robolectric.annotation.Implementation;\nimport org.robolectric.annotation.Implements;\nimport org.robolectric.annotation.RealObject;\n\n<fim_suffix>@SuppressWarnings({\"UnusedDeclaration\"})\n@Implements(value = Icon.class, minSdk = M)\npublic class ShadowIcon {\n\n  @RealObject\n  private Icon realIcon;\n\n  @HiddenApi\n  @Implementation\n  public int getType() {\n    return directlyOn(realIcon, Icon.class).getType();\n  }\n\n  @HiddenApi\n  @Implementation\n  public int getResId() {\n    return directlyOn(realIcon, Icon.class).getResId();\n  }\n\n  @HiddenApi\n  @Implementation\n  public Bitmap getBitmap() {\n    return directlyOn(realIcon, Icon.class).getBitmap();\n  }\n\n  @HiddenApi\n  @Implementation\n  public Uri getUri() {\n    return directlyOn(realIcon, Icon.class).getUri();\n  }\n\n  @HiddenApi\n  @Implementation\n  public int getDataLength() {\n    return directlyOn(realIcon, Icon.class).getDataLength();\n  }\n\n  @HiddenApi\n  @Implementation\n  public int getDataOffset() {\n    return directlyOn(realIcon, Icon.class).getDataOffset();\n  }\n\n  @HiddenApi\n  @Implementation\n  public byte[] getDataBytes() {\n    return directlyOn(realIcon, Icon.class).getDataBytes();\n  }\n}<fim_middle>// class below has no smell\n"}