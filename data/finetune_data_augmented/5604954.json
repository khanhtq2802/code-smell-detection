{"text": "<fim_prefix>/* ====================================================================\n   Licensed to the Apache Software Foundation (ASF) under one or more\n   contributor license agreements.  See the NOTICE file distributed with\n   this work for additional information regarding copyright ownership.\n   The ASF licenses this file to You under the Apache License, Version 2.0\n   (the \"License\"); you may not use this file except in compliance with\n   the License.  You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n==================================================================== */\npackage org.apache.poi.xssf.usermodel;\n\nimport org.apache.poi.common.usermodel.HyperlinkType;\nimport org.apache.poi.ss.usermodel.CreationHelper;\nimport org.apache.poi.ss.usermodel.Hyperlink;\nimport org.apache.poi.ss.util.AreaReference;\nimport org.apache.poi.ss.util.CellReference;\nimport org.apache.poi.util.Internal;\nimport org.openxmlformats.schemas.spreadsheetml.x2006.main.CTColor;\n\npublic class XSSFCreationHelper implements CreationHelper {\n    private final XSSFWorkbook workbook;\n\n    /**\n     * Should only be called by {@link XSSFWorkbook#getCreationHelper()}\n     *\n     * @param wb the workbook to create objects for\n     */\n    @Internal\n    public XSSFCreationHelper(XSSFWorkbook wb) {\n        workbook = wb;\n    }\n\n    /**\n     * Creates a new XSSFRichTextString for you.\n     */\n<fim_suffix>    @Override\n    public XSSFRichTextString createRichTextString(String text) {\n        XSSFRichTextString rt = new XSSFRichTextString(text);\n        rt.setStylesTableReference(workbook.getStylesSource());\n        return rt;\n    }\n\n    @Override\n    public XSSFDataFormat createDataFormat() {\n        return workbook.createDataFormat();\n    }\n\n    @Override\n    public XSSFColor createExtendedColor() {\n        return XSSFColor.from(CTColor.Factory.newInstance(), workbook.getStylesSource().getIndexedColors());\n    }\n    \n    /**\n     * Create a new XSSFHyperlink.\n     *\n     * @param type - the type of hyperlink to create, see {@link Hyperlink}\n     */\n    @Override\n    public XSSFHyperlink createHyperlink(HyperlinkType type) {\n        return new XSSFHyperlink(type);\n    }\n\n    /**\n     * Creates a XSSFFormulaEvaluator, the object that evaluates formula cells.\n     *\n     * @return a XSSFFormulaEvaluator instance\n     */\n    @Override\n    public XSSFFormulaEvaluator createFormulaEvaluator() {\n        return new XSSFFormulaEvaluator(workbook);\n    }\n\n    /**\n     * Creates a XSSFClientAnchor. Use this object to position drawing object in\n     * a sheet\n     *\n     * @return a XSSFClientAnchor instance\n     * @see org.apache.poi.ss.usermodel.Drawing\n     */\n    @Override\n    public XSSFClientAnchor createClientAnchor() {\n        return new XSSFClientAnchor();\n    }\n\n    /**\n     * {@inheritDoc}\n     */\n    @Override\n    public AreaReference createAreaReference(String reference) {\n        return new AreaReference(reference, workbook.getSpreadsheetVersion());\n    }\n\n    /**\n     * {@inheritDoc}\n     */\n    @Override\n    public AreaReference createAreaReference(CellReference topLeft, CellReference bottomRight) {\n        return new AreaReference(topLeft, bottomRight, workbook.getSpreadsheetVersion());\n    }\n}<fim_middle>// function below has no smell\n"}