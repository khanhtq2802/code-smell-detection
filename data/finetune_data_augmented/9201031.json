{"text": "<fim_prefix>/*******************************************************************************\n * Copyright (c) 2004 Actuate Corporation.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *  Actuate Corporation  - initial API and implementation\n *******************************************************************************/\npackage org.eclipse.birt.report.designer.ui.preferences;\nimport java.io.File;\nimport org.eclipse.birt.report.designer.internal.ui.dialogs.helper.IDialogHelper;\nimport org.eclipse.birt.report.designer.internal.ui.dialogs.helper.IDialogHelperProvider;\nimport org.eclipse.birt.report.designer.nls.Messages;\nimport org.eclipse.birt.report.designer.ui.ReportPlugin;\nimport org.eclipse.birt.report.designer.ui.util.PixelConverter;\nimport org.eclipse.birt.report.designer.ui.views.ElementAdapterManager;\nimport org.eclipse.core.resources.IProject;\nimport org.eclipse.core.resources.IResource;\nimport org.eclipse.core.resources.ResourcesPlugin;\nimport org.eclipse.core.runtime.CoreException;\nimport org.eclipse.core.runtime.IStatus;\nimport org.eclipse.core.runtime.Path;\nimport org.eclipse.core.variables.IStringVariableManager;\nimport org.eclipse.core.variables.VariablesPlugin;\nimport org.eclipse.swt.SWT;\nimport org.eclipse.swt.events.SelectionAdapter;\nimport org.eclipse.swt.events.SelectionEvent;\nimport org.eclipse.swt.layout.GridData;\nimport org.eclipse.swt.layout.GridLayout;\nimport org.eclipse.swt.widgets.Button;\nimport org.eclipse.swt.widgets.Composite;\nimport org.eclipse.swt.widgets.Control;\nimport org.eclipse.swt.widgets.DirectoryDialog;\nimport org.eclipse.swt.widgets.Event;\nimport org.eclipse.swt.widgets.Label;\nimport org.eclipse.swt.widgets.Listener;\nimport org.eclipse.swt.widgets.Text;\nimport org.eclipse.ui.PlatformUI;\n/**\n */\npublic class ResourceConfigurationBlock extends OptionsConfigurationBlock\n{\n\tpublic ResourceConfigurationBlock( IStatusChangeListener context,\n\t\t\tIProject project )\n\t{\n\t\tsuper( context, ReportPlugin.getDefault( ), project );\n\t\tsetKeys( getKeys( ) );\n\t}\n<fim_suffix>\tprivate Key[] getKeys( )\n\t{\n\t\tKey[] keys = new Key[]{\n\t\t\tPREF_RESOURCE\n\t\t};\n\t\treturn keys;\n\t}\n\t/*\n\t * @see\n\t * org.eclipse.jface.preference.PreferencePage#createContents(Composite)\n\t */\n\tprotected Control createContents( Composite parent )\n\t{\n\t\tfPixelConverter = new PixelConverter( parent );\n\t\tsetShell( parent.getShell( ) );\n\t\tComposite mainComp = new Composite( parent, SWT.NONE );\n\t\tmainComp.setFont( parent.getFont( ) );\n\t\tGridLayout layout = new GridLayout( );\n\t\tlayout.marginHeight = 0;\n\t\tlayout.marginWidth = 0;\n\t\tmainComp.setLayout( layout );\n\t\tComposite othersComposite = createBuildPathTabContent( mainComp );\n\t\tGridData gridData = new GridData( GridData.FILL,\n\t\t\t\tGridData.FILL,\n\t\t\t\ttrue,\n\t\t\t\ttrue );\n\t\tgridData.heightHint = fPixelConverter.convertHeightInCharsToPixels( 20 );\n\t\tothersComposite.setLayoutData( gridData );\n\t\tvalidateSettings( null, null, null );\n\t\treturn mainComp;\n\t}\n\tpublic static final String TITLE_LABEL = Messages.getString( \"ResourecePreferencePage.title\" ); //$NON-NLS-1$\n\tpublic static final String FOLDER_LABEL = Messages.getString( \"ResourecePreferencePage.folder\" ); //$NON-NLS-1$\n\tpublic static final String BROWSER_BUTTON = Messages.getString( \"ResourecePreferencePage.select\" ); //$NON-NLS-1$\n\tpublic static final String OPEN_DIALOG_TITLE = Messages.getString( \"ResourecePreferencePage.openDialogTitle\" ); //$NON-NLS-1$\n\tpublic static final String OPEN_DILAOG_MESSAGE = Messages.getString( \"ResourecePreferencePage.openDialogMessage\" ); //$NON-NLS-1$\n\tpublic static final String DIRCTORY = \"resource\"; //$NON-NLS-1$\n\tpublic static final String DEFAULT_RESOURCE_FOLDER_DISPLAY = Messages.getString( \"ResourecePreferencePage.defaultResourceFolder.dispaly\" ); //$NON-NLS-1$\n\tprivate Text resourceText;\n\tprivate final Key PREF_RESOURCE = getReportKey( ReportPlugin.RESOURCE_PREFERENCE );\n\tpublic static final String BUTTON_KEY = \"buttons\";//$NON-NLS-1$\n\tprivate PixelConverter fPixelConverter;\n\tprivate Composite createBuildPathTabContent( Composite parent )\n\t{\n\t\tLabel title = new Label( parent, SWT.NULL );\n\t\ttitle.setLayoutData( new GridData( GridData.FILL_HORIZONTAL ) );\n\t\ttitle.setText( TITLE_LABEL );\n\t\tnew Label( parent, SWT.NONE );\n\t\tComposite pageContent = new Composite( parent, SWT.NONE );\n\t\tGridData data = new GridData( GridData.FILL_HORIZONTAL\n\t\t\t\t| GridData.FILL_VERTICAL\n\t\t\t\t| GridData.VERTICAL_ALIGN_BEGINNING );\n\t\tdata.grabExcessHorizontalSpace = true;\n\t\tpageContent.setLayoutData( data );\n\t\tGridLayout layout = new GridLayout( );\n\t\tlayout.marginHeight = 0;\n\t\tlayout.marginWidth = 0;\n\t\tlayout.numColumns = 3;\n\t\tpageContent.setLayout( layout );\n\t\tresourceText = addTextField( pageContent,\n\t\t\t\tMessages.getString( \"ResourecePreferencePage.folder\" ), //$NON-NLS-1$\n\t\t\t\tPREF_RESOURCE,\n\t\t\t\t0,\n\t\t\t\t0 );\n\t\tif ( resourceText.getText( ).trim( ).equals( ReportPlugin.getDefault( )\n\t\t\t\t.getDefaultResourcePreference( ) ) )\n\t\t{\n\t\t\tresourceText.setText( DEFAULT_RESOURCE_FOLDER_DISPLAY );\n\t\t}\n\t\telse\n\t\t{\n\t\t\tString str = resourceText.getText( ).trim( );\n\t\t\ttry\n\t\t\t{\n\t\t\t\tIStringVariableManager mgr = VariablesPlugin.getDefault( )\n\t\t\t\t\t\t.getStringVariableManager( );\n\t\t\t\tstr = mgr.performStringSubstitution( str );\n\t\t\t}\n\t\t\tcatch ( CoreException e )\n\t\t\t{\n\t\t\t\tstr = resourceText.getText( ).trim( );\n\t\t\t}\n\t\t\tFile file = new File( str );\n\t\t\tif ( !file.isAbsolute( ) )\n\t\t\t{\n\t\t\t\tresourceText.setText( processString( str ) );\n\t\t\t}\n\t\t}\n\t\tIDialogHelperProvider helperProvider = (IDialogHelperProvider) ElementAdapterManager.getAdapter( this,\n\t\t\t\tIDialogHelperProvider.class );\n\t\tIDialogHelper controlTypeHelper = null;\n\t\tif ( helperProvider != null )\n\t\t{\n\t\t\tcontrolTypeHelper = helperProvider.createHelper( this, BUTTON_KEY );\n\t\t}\n\t\tif ( controlTypeHelper != null )\n\t\t{\n\t\t\tcontrolTypeHelper.setContainer( this );\n\t\t\tcontrolTypeHelper.createContent( pageContent );\n\t\t\tcontrolTypeHelper.addListener( SWT.Selection, new Listener( ) {\n\t\t\t\tpublic void handleEvent( Event event )\n\t\t\t\t{\n\t\t\t\t\tresourceText.setText( event.text );\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\t\telse\n\t\t{\n\t\t\tnew Label( pageContent, SWT.NONE );\n\t\t\tButton browser = new Button( pageContent, SWT.PUSH );\n\t\t\tbrowser.setText( BROWSER_BUTTON );\n\t\t\tdata = new GridData( );\n\t\t\tbrowser.setLayoutData( data );\n\t\t\tbrowser.addSelectionListener( new SelectionAdapter( ) {\n\t\t\t\tpublic void widgetSelected( SelectionEvent event )\n\t\t\t\t{\n\t\t\t\t\tDirectoryDialog dialog = new DirectoryDialog( PlatformUI.getWorkbench( )\n\t\t\t\t\t\t\t.getDisplay( )\n\t\t\t\t\t\t\t.getActiveShell( ) );\n\t\t\t\t\tdialog.setText( OPEN_DIALOG_TITLE );\n\t\t\t\t\tdialog.setMessage( OPEN_DILAOG_MESSAGE );\n\t\t\t\t\tString folderName = dialog.open( );\n\t\t\t\t\tif ( folderName == null )\n\t\t\t\t\t{\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tfolderName = folderName.replace( '\\\\', '/' ); //$NON-NLS-1$ //$NON-NLS-2$\n\t\t\t\t\tif ( !folderName.endsWith( \"/\" ) ) //$NON-NLS-1$\n\t\t\t\t\t{\n\t\t\t\t\t\tfolderName = folderName + \"/\"; //$NON-NLS-1$\n\t\t\t\t\t}\n\t\t\t\t\tresourceText.setText( folderName );\n\t\t\t\t}\n\t\t\t} );\n\t\t}<fim_middle>// function below has no smell\n"}