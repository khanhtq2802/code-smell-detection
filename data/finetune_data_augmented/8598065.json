{"text": "<fim_prefix>     */\n    public modifyTable_result(modifyTable_result other) {\n      if (other.isSetIo()) {\n        this.io = new TIOError(other.io);\n      }\n    }\n    public modifyTable_result deepCopy() {\n      return new modifyTable_result(this);\n    }\n    @Override\n    public void clear() {\n      this.io = null;\n    }\n    @org.apache.thrift.annotation.Nullable\n    public TIOError getIo() {\n      return this.io;\n    }\n    public modifyTable_result setIo(@org.apache.thrift.annotation.Nullable TIOError io) {\n      this.io = io;\n      return this;\n    }\n    public void unsetIo() {\n      this.io = null;\n    }\n    /** Returns true if field io is set (has been assigned a value) and false otherwise */\n    public boolean isSetIo() {\n      return this.io != null;\n    }\n    public void setIoIsSet(boolean value) {\n      if (!value) {\n        this.io = null;\n      }\n    }\n    public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {\n      switch (field) {\n      case IO:\n        if (value == null) {\n          unsetIo();\n        } else {\n          setIo((TIOError)value);\n        }\n        break;\n      }\n    }\n    @org.apache.thrift.annotation.Nullable\n    public java.lang.Object getFieldValue(_Fields field) {\n      switch (field) {\n      case IO:\n        return getIo();\n      }\n      throw new java.lang.IllegalStateException();\n    }\n    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */\n    public boolean isSet(_Fields field) {\n      if (field == null) {\n        throw new java.lang.IllegalArgumentException();\n      }\n      switch (field) {\n      case IO:\n        return isSetIo();\n      }\n      throw new java.lang.IllegalStateException();\n    }\n    @Override\n    public boolean equals(java.lang.Object that) {\n      if (that == null)\n        return false;\n      if (that instanceof modifyTable_result)\n        return this.equals((modifyTable_result)that);\n      return false;\n    }\n    public boolean equals(modifyTable_result that) {\n      if (that == null)\n        return false;\n      if (this == that)\n        return true;\n      boolean this_present_io = true && this.isSetIo();\n      boolean that_present_io = true && that.isSetIo();\n      if (this_present_io || that_present_io) {\n        if (!(this_present_io && that_present_io))\n          return false;\n        if (!this.io.equals(that.io))\n          return false;\n      }\n      return true;\n    }\n    @Override\n    public int hashCode() {\n      int hashCode = 1;\n      hashCode = hashCode * 8191 + ((isSetIo()) ? 131071 : 524287);\n      if (isSetIo())\n        hashCode = hashCode * 8191 + io.hashCode();\n      return hashCode;\n    }\n    @Override\n    public int compareTo(modifyTable_result other) {\n      if (!getClass().equals(other.getClass())) {\n        return getClass().getName().compareTo(other.getClass().getName());\n      }\n      int lastComparison = 0;\n      lastComparison = java.lang.Boolean.valueOf(isSetIo()).compareTo(other.isSetIo());\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n      if (isSetIo()) {\n        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.io, other.io);\n        if (lastComparison != 0) {\n          return lastComparison;\n        }\n      }\n      return 0;\n    }\n    @org.apache.thrift.annotation.Nullable\n    public _Fields fieldForId(int fieldId) {\n      return _Fields.findByThriftId(fieldId);\n    }\n    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {\n      scheme(iprot).read(iprot, this);\n    }\n    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {\n      scheme(oprot).write(oprot, this);\n      }\n    @Override\n    public java.lang.String toString() {\n      java.lang.StringBuilder sb = new java.lang.StringBuilder(\"modifyTable_result(\");\n      boolean first = true;\n      sb.append(\"io:\");\n      if (this.io == null) {\n        sb.append(\"null\");\n      } else {\n        sb.append(this.io);\n      }\n      first = false;\n      sb.append(\")\");\n      return sb.toString();\n    }\n    public void validate() throws org.apache.thrift.TException {\n      // check for required fields\n      // check for sub-struct validity\n    }\n    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {\n      try {\n        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));\n      } catch (org.apache.thrift.TException te) {\n        throw new java.io.IOException(te);\n      }\n    }\n    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {\n      try {\n        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));\n      } catch (org.apache.thrift.TException te) {\n        throw new java.io.IOException(te);\n      }\n    }\n    private static class modifyTable_resultStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {\n      public modifyTable_resultStandardScheme getScheme() {\n        return new modifyTable_resultStandardScheme();\n      }\n    }\n    private static class modifyTable_resultStandardScheme extends org.apache.thrift.scheme.StandardScheme<modifyTable_result> {\n      public void read(org.apache.thrift.protocol.TProtocol iprot, modifyTable_result struct) throws org.apache.thrift.TException {\n        org.apache.thrift.protocol.TField schemeField;\n        iprot.readStructBegin();\n        while (true)\n        {\n          schemeField = iprot.readFieldBegin();\n          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { \n            break;\n          }\n          switch (schemeField.id) {\n            case 1: // IO\n              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {\n                struct.io = new TIOError();\n                struct.io.read(iprot);\n                struct.setIoIsSet(true);\n              } else { \n                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);\n              }\n              break;\n            default:\n              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);\n          }\n          iprot.readFieldEnd();\n        }\n        iprot.readStructEnd();\n        // check for required fields of primitive type, which can't be checked in the validate method\n        struct.validate();\n      }\n      public void write(org.apache.thrift.protocol.TProtocol oprot, modifyTable_result struct) throws org.apache.thrift.TException {\n        struct.validate();\n        oprot.writeStructBegin(STRUCT_DESC);\n        if (struct.io != null) {\n          oprot.writeFieldBegin(IO_FIELD_DESC);\n          struct.io.write(oprot);\n          oprot.writeFieldEnd();\n        }\n        oprot.writeFieldStop();\n        oprot.writeStructEnd();\n      }\n    }\n    private static class modifyTable_resultTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {\n      public modifyTable_resultTupleScheme getScheme() {\n        return new modifyTable_resultTupleScheme();\n      }\n    }\n<fim_suffix>    private static class modifyTable_resultTupleScheme extends org.apache.thrift.scheme.TupleScheme<modifyTable_result> {\n      @Override\n      public void write(org.apache.thrift.protocol.TProtocol prot, modifyTable_result struct) throws org.apache.thrift.TException {\n        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;\n        java.util.BitSet optionals = new java.util.BitSet();\n        if (struct.isSetIo()) {\n          optionals.set(0);\n        }\n        oprot.writeBitSet(optionals, 1);\n        if (struct.isSetIo()) {\n          struct.io.write(oprot);\n        }\n      }\n      @Override\n      public void read(org.apache.thrift.protocol.TProtocol prot, modifyTable_result struct) throws org.apache.thrift.TException {\n        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;\n        java.util.BitSet incoming = iprot.readBitSet(1);\n        if (incoming.get(0)) {\n          struct.io = new TIOError();\n          struct.io.read(iprot);\n          struct.setIoIsSet(true);\n        }\n      }\n    }<fim_middle>// class below has no smell\n"}