{"text": "<fim_prefix>/*\n * Copyright (c) 2003, Oracle and/or its affiliates. All rights reserved.\n * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n *\n * This code is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License version 2 only, as\n * published by the Free Software Foundation.  Oracle designates this\n * particular file as subject to the \"Classpath\" exception as provided\n * by Oracle in the LICENSE file that accompanied this code.\n *\n * This code is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n * version 2 for more details (a copy is included in the LICENSE file that\n * accompanied this code).\n *\n * You should have received a copy of the GNU General Public License version\n * 2 along with this work; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n *\n * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n * or visit www.oracle.com if you need additional information or have any\n * questions.\n */\n\npackage java.util;\n\n/**\n * Unchecked exception thrown when a conversion and flag are incompatible.\n *\n * <p> Unless otherwise specified, passing a <tt>null</tt> argument to any\n * method or constructor in this class will cause a {@link\n * NullPointerException} to be thrown.\n *\n * @since 1.5\n */\npublic class FormatFlagsConversionMismatchException\n    extends IllegalFormatException\n{\n    private static final long serialVersionUID = 19120414L;\n\n    private String f;\n\n    private char c;\n\n    /**\n     * Constructs an instance of this class with the specified flag\n     * and conversion.\n     *\n     * @param  f\n     *         The flag\n     *\n     * @param  c\n     *         The conversion\n     */\n<fim_suffix>    public FormatFlagsConversionMismatchException(String f, char c) {\n        if (f == null)\n            throw new NullPointerException();\n        this.f = f;\n        this.c = c;\n    }\n\n    /**\n     * Returns the incompatible flag.\n     *\n     * @return  The flag\n     */\n     public String getFlags() {\n        return f;\n    }\n\n    /**\n     * Returns the incompatible conversion.\n     *\n     * @return  The conversion\n     */\n    public char getConversion() {\n        return c;\n    }\n\n    public String getMessage() {\n        return \"Conversion = \" + c + \", Flags = \" + f;\n    }\n}<fim_middle>// function below has no smell\n"}