{"text": "<fim_prefix>package ru.yandex.market.graphouse.retention;\n\nimport org.apache.logging.log4j.LogManager;\nimport org.apache.logging.log4j.Logger;\nimport org.springframework.jdbc.core.JdbcTemplate;\n\nimport java.util.List;\n\n/**\n * @author Dmitry Andreev <a href=\"mailto:AndreevDm@yandex-team.ru\"></a>\n * @date 04/04/2017\n */\npublic class ClickHouseRetentionProvider extends BaseRetentionProvider {\n\n    private static final Logger log = LogManager.getLogger();\n\n    public ClickHouseRetentionProvider(JdbcTemplate clickHouseJdbcTemplate, String configName) {\n        super(loadRetentions(clickHouseJdbcTemplate, configName));\n    }\n\n    private static List<MetricRetention> loadRetentions(JdbcTemplate jdbcTemplate, String configName) {\n\n        log.info(\"Loading retentions from ClickHouse, config: \" + configName);\n\n        List<MetricRetention> retentions = jdbcTemplate.query(\n            \"SELECT priority, is_default, regexp, function, \" +\n                \"groupArray(age) AS ages, groupArray(precision) AS precisions FROM (\" +\n                \"   SELECT * FROM system.graphite_retentions WHERE config_name = ? ORDER BY priority, age\" +\n                \") GROUP BY regexp, function, priority, is_default ORDER BY priority\",\n            (rs, rowNum) -> {\n                String pattern = rs.getString(\"regexp\") + \".*\";\n                String function = rs.getString(\"function\");\n                MetricRetention.MetricDataRetentionBuilder builder = MetricRetention.newBuilder(pattern, function);\n                int[] ages = getIntArray(rs.getString(\"ages\"));\n                int[] precisions = getIntArray(rs.getString(\"precisions\"));\n                for (int i = 0; i < ages.length; i++) {\n                    builder.addRetention(ages[i], precisions[i]);\n                }\n                return builder.build();\n            },\n            configName\n        );\n        if (retentions.isEmpty()) {\n            throw new IllegalStateException(\"No retentions found in ClickHouse for config: \" + configName);\n        }\n        log.info(\"Loaded \" + retentions.size() + \" retentions\");\n        return retentions;\n    }\n\n    //TODO move to CH jdbc driver\n<fim_suffix>    private static int[] getIntArray(String string) {\n        if (string.equals(\"[]\")) {\n            return new int[]{};\n        }\n        string = string.substring(1, string.length() - 1);\n        String[] splits = string.split(\",\");\n        int[] array = new int[splits.length];\n        for (int i = 0; i < splits.length; i++) {\n            array[i] = Integer.parseInt(splits[i]);\n        }\n        return array;\n    }\n\n}<fim_middle>// function below has no smell\n"}