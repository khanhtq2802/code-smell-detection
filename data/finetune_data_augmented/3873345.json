{"text": "<fim_prefix>/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage org.apache.ambari.server.state.quicklinksprofile;\n\nimport java.util.Objects;\n\nimport org.apache.ambari.server.state.quicklinks.Link;\n\nimport com.fasterxml.jackson.annotation.JsonProperty;\nimport com.google.common.base.MoreObjects;\n\n/**\n * A quicklink filter based on link attribute match (the filter's link_attribute is contained by the links set of\n * attributes)\n */\npublic class LinkAttributeFilter extends Filter {\n  static final String LINK_ATTRIBUTE = \"link_attribute\";\n\n  @JsonProperty(LINK_ATTRIBUTE)\n  private String linkAttribute;\n\n  public String getLinkAttribute() {\n    return linkAttribute;\n  }\n\n  public void setLinkAttribute(String linkAttribute) {\n    this.linkAttribute = linkAttribute;\n  }\n\n  @Override\n  public boolean accept(Link link) {\n    return link.getAttributes().contains(linkAttribute);\n  }\n\n<fim_suffix>  @Override\n  public boolean equals(Object o) {\n    if (this == o) return true;\n    if (o == null || getClass() != o.getClass()) return false;\n    LinkAttributeFilter that = (LinkAttributeFilter) o;\n    return isVisible() == that.isVisible() && Objects.equals(linkAttribute, that.linkAttribute);\n  }\n\n  @Override\n  public int hashCode() {\n    return Objects.hash(isVisible(), linkAttribute);\n  }\n\n  @Override\n  public String toString() {\n    return MoreObjects.toStringHelper(this)\n      .add(\"linkAttribute\", linkAttribute)\n      .toString();\n  }\n}<fim_middle>// function below has no smell\n"}