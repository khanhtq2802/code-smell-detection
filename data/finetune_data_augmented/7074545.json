{"text": "<fim_prefix>/*\n * Copyright 2016 LinkedIn Corp.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage com.linkedin.gradle.build.version;\n\n\nimport org.gradle.api.Action;\nimport org.gradle.api.GradleException;\nimport org.gradle.api.Plugin;\nimport org.gradle.api.Project;\nimport org.gradle.api.logging.Logger;\nimport org.gradle.api.logging.Logging;\n\nimport java.io.File;\n\npublic class VersionPlugin implements Plugin<Project> {\n\n    Logger logger = Logging.getLogger(VersionPlugin.class);\n\n    @Override\n    public void apply(Project target) {\n        if (target.getRootProject() != target) {\n            throw new GradleException(\"Cannot apply dependency plugin to a non-root project\");\n        }\n\n        File versionProperties = target.file(\"version.properties\");\n\n        Version version = VersionFile.getVersion(versionProperties);\n\n        if (!target.hasProperty(\"release\") || !Boolean.parseBoolean((String) target.property(\"release\"))) {\n            version = version.asSnapshot();\n        }\n\n        logger.lifecycle(\"Building using version {}\", version);\n        target.allprojects(new VersionAction(version));\n    }\n\n<fim_suffix>    private static class VersionAction implements Action<Project> {\n        private final Version version;\n\n        public VersionAction(Version version) {\n            this.version = version;\n        }\n\n        @Override\n        public void execute(Project project) {\n            project.setVersion(version);\n        }\n    }\n}<fim_middle>// class below has no smell\n"}