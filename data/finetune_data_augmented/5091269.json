{"text": "<fim_prefix>/**\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage org.apache.mahout.classifier.df.mapreduce;\n\nimport com.google.common.base.Preconditions;\nimport org.apache.hadoop.conf.Configuration;\nimport org.apache.hadoop.mapreduce.Mapper;\nimport org.apache.mahout.classifier.df.builder.TreeBuilder;\nimport org.apache.mahout.classifier.df.data.Dataset;\n\nimport java.io.IOException;\n\n/**\n * Base class for Mapred mappers. Loads common parameters from the job\n */\n@Deprecated\npublic class MapredMapper<KEYIN,VALUEIN,KEYOUT,VALUEOUT> extends Mapper<KEYIN,VALUEIN,KEYOUT,VALUEOUT> {\n  \n  private boolean noOutput;\n  \n  private TreeBuilder treeBuilder;\n  \n  private Dataset dataset;\n  \n  /**\n   * \n   * @return whether the mapper does estimate and output predictions\n   */\n  protected boolean isOutput() {\n    return !noOutput;\n  }\n  \n  protected TreeBuilder getTreeBuilder() {\n    return treeBuilder;\n  }\n  \n  protected Dataset getDataset() {\n    return dataset;\n  }\n  \n  @Override\n  protected void setup(Context context) throws IOException, InterruptedException {\n    super.setup(context);\n    \n    Configuration conf = context.getConfiguration();\n    \n    configure(!Builder.isOutput(conf), Builder.getTreeBuilder(conf), Builder\n        .loadDataset(conf));\n  }\n  \n  /**\n   * Useful for testing\n   */\n<fim_suffix>  protected void configure(boolean noOutput, TreeBuilder treeBuilder, Dataset dataset) {\n    Preconditions.checkArgument(treeBuilder != null, \"TreeBuilder not found in the Job parameters\");\n    this.noOutput = noOutput;\n    this.treeBuilder = treeBuilder;\n    this.dataset = dataset;\n  }\n}<fim_middle>// function below has no smell\n"}