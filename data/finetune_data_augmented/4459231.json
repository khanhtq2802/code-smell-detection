{"text": "<fim_prefix>/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.apache.drill.exec.store.kafka.decoders;\n\nimport java.io.Closeable;\nimport java.util.List;\n\nimport org.apache.drill.common.expression.SchemaPath;\nimport org.apache.drill.exec.store.kafka.KafkaStoragePlugin;\nimport org.apache.drill.exec.vector.complex.impl.VectorContainerWriter;\nimport org.apache.kafka.clients.consumer.ConsumerRecord;\nimport org.apache.kafka.clients.consumer.KafkaConsumer;\n\nimport io.netty.buffer.DrillBuf;\n\n/**\n * MessageReader interface provides mechanism to handle various Kafka Message\n * Formats like JSON, AVRO or custom message formats.\n */\n<fim_suffix>public interface MessageReader extends Closeable {\n\n  public void init(DrillBuf buf, List<SchemaPath> columns, VectorContainerWriter writer, boolean allTextMode,\n      boolean readNumbersAsDouble);\n\n  public void readMessage(ConsumerRecord<?, ?> message);\n\n  public void ensureAtLeastOneField();\n\n  public KafkaConsumer<byte[], byte[]> getConsumer(KafkaStoragePlugin plugin);\n}<fim_middle>// class below has no smell\n"}