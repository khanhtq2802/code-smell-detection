{"text": "<fim_prefix>            // InternalSimpleBeeLangTestLanguage.g:10680:2: ( rule__InitializationExpression__RightExprAssignment_3 )\n            {\n            if ( state.backtracking==0 ) {\n               before(grammarAccess.getInitializationExpressionAccess().getRightExprAssignment_3()); \n            }\n            // InternalSimpleBeeLangTestLanguage.g:10681:2: ( rule__InitializationExpression__RightExprAssignment_3 )\n            // InternalSimpleBeeLangTestLanguage.g:10681:3: rule__InitializationExpression__RightExprAssignment_3\n            {\n            pushFollow(FollowSets000.FOLLOW_2);\n            rule__InitializationExpression__RightExprAssignment_3();\n            state._fsp--;\n            if (state.failed) return ;\n            }\n            if ( state.backtracking==0 ) {\n               after(grammarAccess.getInitializationExpressionAccess().getRightExprAssignment_3()); \n            }\n            }\n            }\n        }\n        catch (RecognitionException re) {\n            reportError(re);\n            recover(input,re);\n        }\n        finally {\n            if ( state.backtracking>0 ) { memoize(input, 765, rule__InitializationExpression__Group__3__Impl_StartIndex); }\n            \trestoreStackSize(stackSize);\n        }\n        return ;\n    }\n    // $ANTLR end \"rule__InitializationExpression__Group__3__Impl\"\n    // $ANTLR start \"rule__FeatureOfThis__Group__0\"\n    // InternalSimpleBeeLangTestLanguage.g:10690:1: rule__FeatureOfThis__Group__0 : rule__FeatureOfThis__Group__0__Impl rule__FeatureOfThis__Group__1 ;\n    public final void rule__FeatureOfThis__Group__0() throws RecognitionException {\n        int rule__FeatureOfThis__Group__0_StartIndex = input.index();\n        \t\tint stackSize = keepStackSize();\n        try {\n            if ( state.backtracking>0 && alreadyParsedRule(input, 766) ) { return ; }\n            // InternalSimpleBeeLangTestLanguage.g:10694:1: ( rule__FeatureOfThis__Group__0__Impl rule__FeatureOfThis__Group__1 )\n            // InternalSimpleBeeLangTestLanguage.g:10695:2: rule__FeatureOfThis__Group__0__Impl rule__FeatureOfThis__Group__1\n            {\n            pushFollow(FollowSets000.FOLLOW_9);\n            rule__FeatureOfThis__Group__0__Impl();\n            state._fsp--;\n            if (state.failed) return ;\n            pushFollow(FollowSets000.FOLLOW_2);\n            rule__FeatureOfThis__Group__1();\n            state._fsp--;\n            if (state.failed) return ;\n            }\n        }\n        catch (RecognitionException re) {\n            reportError(re);\n            recover(input,re);\n        }\n        finally {\n            if ( state.backtracking>0 ) { memoize(input, 766, rule__FeatureOfThis__Group__0_StartIndex); }\n            \trestoreStackSize(stackSize);\n        }\n        return ;\n    }\n    // $ANTLR end \"rule__FeatureOfThis__Group__0\"\n    // $ANTLR start \"rule__FeatureOfThis__Group__0__Impl\"\n    // InternalSimpleBeeLangTestLanguage.g:10702:1: rule__FeatureOfThis__Group__0__Impl : ( () ) ;\n    public final void rule__FeatureOfThis__Group__0__Impl() throws RecognitionException {\n        int rule__FeatureOfThis__Group__0__Impl_StartIndex = input.index();\n        \t\tint stackSize = keepStackSize();\n        try {\n            if ( state.backtracking>0 && alreadyParsedRule(input, 767) ) { return ; }\n            // InternalSimpleBeeLangTestLanguage.g:10706:1: ( ( () ) )\n            // InternalSimpleBeeLangTestLanguage.g:10707:1: ( () )\n            {\n            // InternalSimpleBeeLangTestLanguage.g:10707:1: ( () )\n            // InternalSimpleBeeLangTestLanguage.g:10708:2: ()\n            {\n            if ( state.backtracking==0 ) {\n               before(grammarAccess.getFeatureOfThisAccess().getFeatureExpressionAction_0()); \n            }\n            // InternalSimpleBeeLangTestLanguage.g:10709:2: ()\n            // InternalSimpleBeeLangTestLanguage.g:10709:3: \n            {\n            }\n            if ( state.backtracking==0 ) {\n               after(grammarAccess.getFeatureOfThisAccess().getFeatureExpressionAction_0()); \n            }\n            }\n            }\n        }\n        finally {\n            if ( state.backtracking>0 ) { memoize(input, 767, rule__FeatureOfThis__Group__0__Impl_StartIndex); }\n            \trestoreStackSize(stackSize);\n        }\n        return ;\n    }\n    // $ANTLR end \"rule__FeatureOfThis__Group__0__Impl\"\n    // $ANTLR start \"rule__FeatureOfThis__Group__1\"\n    // InternalSimpleBeeLangTestLanguage.g:10717:1: rule__FeatureOfThis__Group__1 : rule__FeatureOfThis__Group__1__Impl ;\n    public final void rule__FeatureOfThis__Group__1() throws RecognitionException {\n        int rule__FeatureOfThis__Group__1_StartIndex = input.index();\n        \t\tint stackSize = keepStackSize();\n        try {\n            if ( state.backtracking>0 && alreadyParsedRule(input, 768) ) { return ; }\n            // InternalSimpleBeeLangTestLanguage.g:10721:1: ( rule__FeatureOfThis__Group__1__Impl )\n            // InternalSimpleBeeLangTestLanguage.g:10722:2: rule__FeatureOfThis__Group__1__Impl\n            {\n            pushFollow(FollowSets000.FOLLOW_2);\n            rule__FeatureOfThis__Group__1__Impl();\n            state._fsp--;\n            if (state.failed) return ;\n            }\n        }\n        catch (RecognitionException re) {\n            reportError(re);\n            recover(input,re);\n        }\n        finally {\n            if ( state.backtracking>0 ) { memoize(input, 768, rule__FeatureOfThis__Group__1_StartIndex); }\n            \trestoreStackSize(stackSize);\n        }\n        return ;\n    }\n    // $ANTLR end \"rule__FeatureOfThis__Group__1\"\n    // $ANTLR start \"rule__FeatureOfThis__Group__1__Impl\"\n    // InternalSimpleBeeLangTestLanguage.g:10728:1: rule__FeatureOfThis__Group__1__Impl : ( ( rule__FeatureOfThis__FeatureNameAssignment_1 ) ) ;\n<fim_suffix>    public final void rule__FeatureOfThis__Group__1__Impl() throws RecognitionException {\n        int rule__FeatureOfThis__Group__1__Impl_StartIndex = input.index();\n        \t\tint stackSize = keepStackSize();\n        try {\n            if ( state.backtracking>0 && alreadyParsedRule(input, 769) ) { return ; }\n            // InternalSimpleBeeLangTestLanguage.g:10732:1: ( ( ( rule__FeatureOfThis__FeatureNameAssignment_1 ) ) )\n            // InternalSimpleBeeLangTestLanguage.g:10733:1: ( ( rule__FeatureOfThis__FeatureNameAssignment_1 ) )\n            {\n            // InternalSimpleBeeLangTestLanguage.g:10733:1: ( ( rule__FeatureOfThis__FeatureNameAssignment_1 ) )\n            // InternalSimpleBeeLangTestLanguage.g:10734:2: ( rule__FeatureOfThis__FeatureNameAssignment_1 )\n            {\n            if ( state.backtracking==0 ) {\n               before(grammarAccess.getFeatureOfThisAccess().getFeatureNameAssignment_1()); \n            }\n            // InternalSimpleBeeLangTestLanguage.g:10735:2: ( rule__FeatureOfThis__FeatureNameAssignment_1 )\n            // InternalSimpleBeeLangTestLanguage.g:10735:3: rule__FeatureOfThis__FeatureNameAssignment_1\n            {\n            pushFollow(FollowSets000.FOLLOW_2);\n            rule__FeatureOfThis__FeatureNameAssignment_1();\n            state._fsp--;\n            if (state.failed) return ;\n            }\n            if ( state.backtracking==0 ) {\n               after(grammarAccess.getFeatureOfThisAccess().getFeatureNameAssignment_1()); \n            }\n            }\n            }\n        }\n        catch (RecognitionException re) {\n            reportError(re);\n            recover(input,re);\n        }\n        finally {\n            if ( state.backtracking>0 ) { memoize(input, 769, rule__FeatureOfThis__Group__1__Impl_StartIndex); }\n            \trestoreStackSize(stackSize);\n        }\n        return ;\n    }<fim_middle>// function below has no smell\n"}