{"text": "<fim_prefix>/**\n * Autogenerated by Thrift Compiler (0.11.0)\n *\n * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING\n *  @generated\n */\npackage com.facebook.buck.distributed.thrift;\n@SuppressWarnings({\"cast\", \"rawtypes\", \"serial\", \"unchecked\", \"unused\"})\n@javax.annotation.Generated(value = \"Autogenerated by Thrift Compiler (0.11.0)\")\npublic class FetchBuildSlaveStatusResponse implements org.apache.thrift.TBase<FetchBuildSlaveStatusResponse, FetchBuildSlaveStatusResponse._Fields>, java.io.Serializable, Cloneable, Comparable<FetchBuildSlaveStatusResponse> {\n  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct(\"FetchBuildSlaveStatusResponse\");\n  private static final org.apache.thrift.protocol.TField BUILD_SLAVE_STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField(\"buildSlaveStatus\", org.apache.thrift.protocol.TType.STRING, (short)1);\n  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new FetchBuildSlaveStatusResponseStandardSchemeFactory();\n  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new FetchBuildSlaveStatusResponseTupleSchemeFactory();\n  public java.nio.ByteBuffer buildSlaveStatus; // optional\n  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */\n  public enum _Fields implements org.apache.thrift.TFieldIdEnum {\n    BUILD_SLAVE_STATUS((short)1, \"buildSlaveStatus\");\n    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();\n    static {\n      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {\n        byName.put(field.getFieldName(), field);\n      }\n    }\n    /**\n     * Find the _Fields constant that matches fieldId, or null if its not found.\n     */\n    public static _Fields findByThriftId(int fieldId) {\n      switch(fieldId) {\n        case 1: // BUILD_SLAVE_STATUS\n          return BUILD_SLAVE_STATUS;\n        default:\n          return null;\n      }\n    }\n    /**\n     * Find the _Fields constant that matches fieldId, throwing an exception\n     * if it is not found.\n     */\n    public static _Fields findByThriftIdOrThrow(int fieldId) {\n      _Fields fields = findByThriftId(fieldId);\n      if (fields == null) throw new java.lang.IllegalArgumentException(\"Field \" + fieldId + \" doesn't exist!\");\n      return fields;\n    }\n    /**\n     * Find the _Fields constant that matches name, or null if its not found.\n     */\n    public static _Fields findByName(java.lang.String name) {\n      return byName.get(name);\n    }\n    private final short _thriftId;\n    private final java.lang.String _fieldName;\n    _Fields(short thriftId, java.lang.String fieldName) {\n      _thriftId = thriftId;\n      _fieldName = fieldName;\n    }\n    public short getThriftFieldId() {\n      return _thriftId;\n    }\n    public java.lang.String getFieldName() {\n      return _fieldName;\n    }\n  }\n  // isset id assignments\n  private static final _Fields optionals[] = {_Fields.BUILD_SLAVE_STATUS};\n  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;\n  static {\n    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);\n    tmpMap.put(_Fields.BUILD_SLAVE_STATUS, new org.apache.thrift.meta_data.FieldMetaData(\"buildSlaveStatus\", org.apache.thrift.TFieldRequirementType.OPTIONAL, \n        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING        , true)));\n    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);\n    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(FetchBuildSlaveStatusResponse.class, metaDataMap);\n  }\n  public FetchBuildSlaveStatusResponse() {\n  }\n  /**\n   * Performs a deep copy on <i>other</i>.\n   */\n  public FetchBuildSlaveStatusResponse(FetchBuildSlaveStatusResponse other) {\n    if (other.isSetBuildSlaveStatus()) {\n      this.buildSlaveStatus = org.apache.thrift.TBaseHelper.copyBinary(other.buildSlaveStatus);\n    }\n  }\n  public FetchBuildSlaveStatusResponse deepCopy() {\n    return new FetchBuildSlaveStatusResponse(this);\n  }\n  @Override\n  public void clear() {\n    this.buildSlaveStatus = null;\n  }\n  public byte[] getBuildSlaveStatus() {\n    setBuildSlaveStatus(org.apache.thrift.TBaseHelper.rightSize(buildSlaveStatus));\n    return buildSlaveStatus == null ? null : buildSlaveStatus.array();\n  }\n  public java.nio.ByteBuffer bufferForBuildSlaveStatus() {\n    return org.apache.thrift.TBaseHelper.copyBinary(buildSlaveStatus);\n  }\n  public FetchBuildSlaveStatusResponse setBuildSlaveStatus(byte[] buildSlaveStatus) {\n    this.buildSlaveStatus = buildSlaveStatus == null ? (java.nio.ByteBuffer)null : java.nio.ByteBuffer.wrap(buildSlaveStatus.clone());\n    return this;\n  }\n  public FetchBuildSlaveStatusResponse setBuildSlaveStatus(java.nio.ByteBuffer buildSlaveStatus) {\n    this.buildSlaveStatus = org.apache.thrift.TBaseHelper.copyBinary(buildSlaveStatus);\n    return this;\n  }\n  public void unsetBuildSlaveStatus() {\n    this.buildSlaveStatus = null;\n  }\n  /** Returns true if field buildSlaveStatus is set (has been assigned a value) and false otherwise */\n  public boolean isSetBuildSlaveStatus() {\n    return this.buildSlaveStatus != null;\n  }\n  public void setBuildSlaveStatusIsSet(boolean value) {\n    if (!value) {\n      this.buildSlaveStatus = null;\n    }\n  }\n  public void setFieldValue(_Fields field, java.lang.Object value) {\n    switch (field) {\n    case BUILD_SLAVE_STATUS:\n      if (value == null) {\n        unsetBuildSlaveStatus();\n      } else {\n        if (value instanceof byte[]) {\n          setBuildSlaveStatus((byte[])value);\n        } else {\n          setBuildSlaveStatus((java.nio.ByteBuffer)value);\n        }\n      }\n      break;\n    }\n  }\n<fim_suffix>  public java.lang.Object getFieldValue(_Fields field) {\n    switch (field) {\n    case BUILD_SLAVE_STATUS:\n      return getBuildSlaveStatus();\n    }\n    throw new java.lang.IllegalStateException();\n  }\n  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */\n  public boolean isSet(_Fields field) {\n    if (field == null) {\n      throw new java.lang.IllegalArgumentException();\n    }\n    switch (field) {\n    case BUILD_SLAVE_STATUS:\n      return isSetBuildSlaveStatus();\n    }\n    throw new java.lang.IllegalStateException();\n  }\n  @Override\n  public boolean equals(java.lang.Object that) {\n    if (that == null)\n      return false;\n    if (that instanceof FetchBuildSlaveStatusResponse)\n      return this.equals((FetchBuildSlaveStatusResponse)that);\n    return false;\n  }\n  public boolean equals(FetchBuildSlaveStatusResponse that) {\n    if (that == null)\n      return false;\n    if (this == that)\n      return true;\n    boolean this_present_buildSlaveStatus = true && this.isSetBuildSlaveStatus();\n    boolean that_present_buildSlaveStatus = true && that.isSetBuildSlaveStatus();\n    if (this_present_buildSlaveStatus || that_present_buildSlaveStatus) {\n      if (!(this_present_buildSlaveStatus && that_present_buildSlaveStatus))\n        return false;\n      if (!this.buildSlaveStatus.equals(that.buildSlaveStatus))\n        return false;\n    }\n    return true;\n  }\n  @Override\n  public int hashCode() {\n    int hashCode = 1;\n    hashCode = hashCode * 8191 + ((isSetBuildSlaveStatus()) ? 131071 : 524287);\n    if (isSetBuildSlaveStatus())\n      hashCode = hashCode * 8191 + buildSlaveStatus.hashCode();\n    return hashCode;\n  }\n  @Override\n  public int compareTo(FetchBuildSlaveStatusResponse other) {\n    if (!getClass().equals(other.getClass())) {\n      return getClass().getName().compareTo(other.getClass().getName());\n    }\n    int lastComparison = 0;\n    lastComparison = java.lang.Boolean.valueOf(isSetBuildSlaveStatus()).compareTo(other.isSetBuildSlaveStatus());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetBuildSlaveStatus()) {<fim_middle>// function below has no smell\n"}