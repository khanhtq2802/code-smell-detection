{"text": "<fim_prefix>/*\n * Copyright (c) 2012-2018 Red Hat, Inc.\n * This program and the accompanying materials are made\n * available under the terms of the Eclipse Public License 2.0\n * which is available at https://www.eclipse.org/legal/epl-2.0/\n *\n * SPDX-License-Identifier: EPL-2.0\n *\n * Contributors:\n *   Red Hat, Inc. - initial API and implementation\n */\npackage org.eclipse.che.api.promises.client.js;\n\nimport com.google.gwt.core.client.JavaScriptObject;\nimport org.eclipse.che.api.promises.client.PromiseError;\n\npublic class JsPromiseError extends JavaScriptObject implements PromiseError {\n\n  /** JSO mandated protected constructor. */\n  protected JsPromiseError() {}\n\n  public static final native JsPromiseError create() /*-{\n        return new Error();\n    }-*/;\n\n  public static final native JsPromiseError create(\n      String message, String filename, String linenumber) /*-{\n        return new Error(message, filename, linenumber);\n    }-*/;\n\n  public static final native JsPromiseError create(String message, String filename) /*-{\n        return new Error(message, filename);\n    }-*/;\n\n  public static final native JsPromiseError create(String message) /*-{\n        return new Error(message);\n    }-*/;\n\n  public static final native JsPromiseError create(JavaScriptObject object) /*-{\n        return object;\n    }-*/;\n\n<fim_suffix>  public static final JsPromiseError create(final Throwable e) {\n    if (e == null) {\n      return create();\n    } else {\n      return createFromThrowable(e);\n    }\n  }\n\n  private static final native JsPromiseError createFromThrowable(final Throwable e) /*-{\n        var message = e.@java.lang.Throwable::getMessage()();\n        var result = new Error(message);\n        result.cause = e;\n        return result;\n    }-*/;\n\n  public final native String getMessage() /*-{\n        return this.message;\n    }-*/;\n\n  public final native String getName() /*-{\n        return this.name;\n    }-*/;\n\n  @Override\n  public final native Throwable getCause() /*-{\n        return this.cause;\n    }-*/;\n}<fim_middle>// function below has no smell\n"}