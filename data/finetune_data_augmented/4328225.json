{"text": "<fim_prefix>   (the \"License\"); you may not use this file except in compliance with\n   the License.  You may obtain a copy of the License at\n      http://www.apache.org/licenses/LICENSE-2.0\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n */\npackage org.apache.derbyDemo.scores.data;\nimport java.sql.*;\nimport org.apache.derbyDemo.scores.util.*;\n/**\n * <p>\n * Data used by Scores application\n * </p>\n *\n */\npublic  class   Data\n{\n    ////////////////////////////////////////////////////////\n    //\n    // CONSTANTS\n    //\n    ////////////////////////////////////////////////////////\n    private static  final   int     QUESTIONS_PER_TEMPLATE = 10;\n    private static  final   double  IMPROVEMENT_PER_TAKING = 2.0;\n    private static  final   double  GRAMMAR_SCHOOL_PENALTY = 20.0;\n    private static  final   double  PER_STUDENT_FLUCTUATION = 3.0;\n    private static  final   double  FLUCTATION_MULTIPLIER = 2.0;\n    public  static  final   School  LincolnGrammar =\n        new School( \"Lincoln Grammar\", true );\n    public  static  final   School  WashingtonHS =\n        new School( \"Washington HS\", false );\n    public  static  final   Student AliceToklas = new Student\n        ( \"Alice\", \"Toklas\", \"1998-03-21\", LincolnGrammar );\n    public  static  final   Student GertrudeStein = new Student\n        ( \"Gertrude\", \"Stein\", \"1999-07-15\", LincolnGrammar );\n    public  static  final   Student HenryJames = new Student\n        ( \"Henry\", \"James\", \"2000-09-03\", LincolnGrammar );\n    public  static  final   Student GoreVidal = new Student\n        ( \"Gore\", \"Vidal\", \"2008-12-25\", LincolnGrammar );\n    public  static  final   Student TrumanCapote = new Student\n        ( \"Truman\", \"Capote\", \"1992-08-05\", WashingtonHS );\n    public  static  final   Student WaltWhitman = new Student\n        ( \"Walt\", \"Whitman\", \"1991-12-28\", WashingtonHS );\n    public  static  final   Student DorothyParker = new Student\n        ( \"Dorothy\", \"Parker\", \"1990-01-09\", WashingtonHS );\n    public  static  final   Student AndrewSullivan = new Student\n        ( \"Andrew\", \"Sullivan\", \"1989-02-20\", WashingtonHS );\n    public  static  final   Test GradeSchoolMath =\n        new Test( \"Grade School Math\", true, 90.0 );\n    public  static  final   Test GradeSchoolEnglish =\n        new Test( \"Grade School English\", true, 85.0 );\n    public  static  final   Test HighSchoolMath =\n        new Test( \"High School Math\", false, 80.0 );\n    public  static  final   Test HighSchoolEnglish =\n        new Test( \"High School English\", false, 75.0 );\n    public  static  final   Question    GSM_1 =\n        new Question( \"GSM_1\", 1, 5, 2, GradeSchoolMath );\n    public  static  final   Question    GSM_2 =\n        new Question( \"GSM_2\", 2, 3, 1, GradeSchoolMath );\n    public  static  final   Question    GSM_3 =\n        new Question( \"GSM_3\", 3, 4, 3, GradeSchoolMath );\n    public  static  final   Question    GSE_1 =\n        new Question( \"GSE_1\", 3, 5, 2, GradeSchoolEnglish );\n    public  static  final   Question    GSE_2 =\n        new Question( \"GSE_2\", 2, 3, 1, GradeSchoolEnglish );\n    public  static  final   Question    GSE_3 =\n        new Question( \"GSE_3\", 1, 4, 3, GradeSchoolEnglish );\n    public  static  final   Question    HSM_1 =\n        new Question( \"HSM_1\", 1, 5, 2, HighSchoolMath );\n    public  static  final   Question    HSM_2 =\n        new Question( \"HSM_2\", 2, 3, 1, HighSchoolMath );\n    public  static  final   Question    HSM_3 =\n        new Question( \"HSM_3\", 3, 4, 3, HighSchoolMath );\n    public  static  final   Question    HSE_1 =\n        new Question( \"HSE_1\", 3, 5, 2, HighSchoolEnglish );\n    public  static  final   Question    HSE_2 =\n        new Question( \"HSE_2\", 2, 3, 1, HighSchoolEnglish );\n    public  static  final   Question    HSE_3 =\n        new Question( \"HSE_3\", 1, 4, 3, HighSchoolEnglish );\n    public  static  final   Question[]      QUESTIONS =\n    {\n        GSM_1,\n        GSM_2,\n        GSM_3,\n        GSE_1,\n        GSE_2,\n        GSE_3,\n        HSM_1,\n        HSM_2,\n        HSM_3,\n        HSE_1,\n        HSE_2,\n        HSE_3,\n    };\n    public  static  final   School[] SCHOOLS =\n    {\n        LincolnGrammar,\n        WashingtonHS,\n    };\n    public  static  final   Student[]   STUDENTS =\n    {\n        AliceToklas,\n        GertrudeStein,\n        TrumanCapote,\n        WaltWhitman,\n        HenryJames,\n        GoreVidal,\n        DorothyParker,\n        AndrewSullivan,\n    };\n    public  static  final   Test[]  TESTS =\n    {\n        GradeSchoolMath,\n        GradeSchoolEnglish,\n        HighSchoolMath,\n        HighSchoolEnglish,\n    };\n    ////////////////////////////////////////////////////////\n    //\n    // STATE\n    //\n    ////////////////////////////////////////////////////////\n    ////////////////////////////////////////////////////////\n    //\n    // INNER CLASSES\n    //\n    ////////////////////////////////////////////////////////\n    public  abstract    static  class   KeyedObject\n    {\n        private Integer _key;\n        public  void                create( Database database )\n            throws SQLException\n        {\n            Logger  log = Logger.getLogger();\n            boolean loggingEnabled = log.isLoggingEnabled();\n            // don't print out the chatter from creating these rows.\n            try {\n                log.enableLogging( false );\n                createMinion( database );\n            }\n            finally\n            {\n                log.enableLogging( loggingEnabled );\n            }\n        }\n        protected   abstract    void    createMinion( Database database )\n            throws SQLException;\n        protected   abstract    PreparedStatement   getKeyFinder\n            ( Database database )\n            throws SQLException;\n        public  int getPrimaryKey( Database database )\n            throws SQLException\n        {\n            if ( _key == null )\n            {\n                PreparedStatement   ps = getKeyFinder( database );\n                setPrimaryKey( Utils.getScalarValue( ps ) );\n            }\n            return _key.intValue();\n        }\n        private void    setPrimaryKey( int key )\n        {\n            _key = new Integer( key );          \n        }\n        public  SQLException    notImplemented()\n        { return new SQLException( \"Not implemented.\" ); }\n    }\n<fim_suffix>    public  static  class   School  extends KeyedObject\n    {\n        private String      _schoolName;\n        private boolean     _isGrammarSchool;\n        public  School( String schoolName, boolean isGrammarSchool )\n        {\n            _schoolName = schoolName;\n            _isGrammarSchool = isGrammarSchool;\n        }\n        public  String      getSchoolName() { return _schoolName; }\n        public  boolean     isGrammarSchool() { return _isGrammarSchool; }\n        protected   void                createMinion( Database database )\n            throws SQLException\n        {\n            Connection          conn = database.getConnection();\n            PreparedStatement   ps = Utils.prepare\n                (\n                 conn,\n                 \"insert into School( schoolName ) values ( ? )\"\n                 );\n            ps.setString( 1, _schoolName );\n            ps.execute();\n            Utils.close( ps );\n        }\n        protected   PreparedStatement   getKeyFinder( Database database )\n            throws SQLException\n        {\n            Connection          conn = database.getConnection();\n            PreparedStatement   ps = Utils.prepare\n                (\n                 conn,\n                 \"select schoolID from School where schoolName = ?\"\n                 );\n            ps.setString( 1, _schoolName );\n            return ps;\n        }\n    }<fim_middle>// class below has no smell\n"}