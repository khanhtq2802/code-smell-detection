{"text": "<fim_prefix>/*\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.jclouds.glesys.options;\n\n\npublic class AddDomainOptions extends DomainOptions {\n<fim_suffix>   public static class Builder {\n      /**\n       * @see AddDomainOptions#primaryNameServer\n       */\n      public static AddDomainOptions primaryNameServer(String primaryNameServer) {\n         return AddDomainOptions.class.cast(new AddDomainOptions().primaryNameServer(primaryNameServer));\n      }\n\n      /**\n       * @see AddDomainOptions#responsiblePerson\n       */\n      public static AddDomainOptions responsiblePerson(String responsiblePerson) {\n         return AddDomainOptions.class.cast(new AddDomainOptions().responsiblePerson(responsiblePerson));\n      }\n\n      /**\n       * @see AddDomainOptions#ttl\n       */\n      public static AddDomainOptions ttl(int ttl) {\n         return AddDomainOptions.class.cast(new AddDomainOptions().ttl(ttl));\n      }\n\n      /**\n       * @see AddDomainOptions#refresh\n       */\n      public static AddDomainOptions refresh(int refresh) {\n         return AddDomainOptions.class.cast(new AddDomainOptions().refresh(refresh));\n      }\n\n      /**\n       * @see AddDomainOptions#retry\n       */\n      public static AddDomainOptions retry(int retry) {\n         return AddDomainOptions.class.cast(new AddDomainOptions().retry(retry));\n      }\n\n      /**\n       * @see AddDomainOptions#expire\n       */\n      public static AddDomainOptions expire(int expire) {\n         return AddDomainOptions.class.cast(new AddDomainOptions().expire(expire));\n      }\n\n      /**\n       * @see AddDomainOptions#minimum\n       */\n      public static AddDomainOptions minimum(int minimum) {\n         return AddDomainOptions.class.cast(new AddDomainOptions().minimum(minimum));\n      }\n\n      /**\n       * @see AddDomainOptions#minimalRecords\n       */\n      public static AddDomainOptions minimalRecords() {\n         return AddDomainOptions.class.cast(new AddDomainOptions().minimalRecords());\n      }\n   }\n\n   /**\n    * Ensure only NS and SOA records will be created by default, when this option is not used a number of default records will be created on the domain.\n    */\n   public DomainOptions minimalRecords() {\n      formParameters.put(\"createrecords\", Boolean.FALSE.toString());\n      return this;\n   }\n\n}<fim_middle>// class below has no smell\n"}