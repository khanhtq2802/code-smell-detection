{"text": "<fim_prefix>/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.apache.cassandra.tools.nodetool;\n\nimport static org.apache.commons.lang3.StringUtils.EMPTY;\nimport io.airlift.airline.Arguments;\nimport io.airlift.airline.Command;\n\nimport org.apache.cassandra.tools.NodeProbe;\nimport org.apache.cassandra.tools.NodeTool.NodeToolCmd;\n\n<fim_suffix>@Command(name = \"removenode\", description = \"Show status of current node removal, force completion of pending removal or remove provided ID\")\npublic class RemoveNode extends NodeToolCmd\n{\n    @Arguments(title = \"remove_operation\", usage = \"<status>|<force>|<ID>\", description = \"Show status of current node removal, force completion of pending removal, or remove provided ID\", required = true)\n    private String removeOperation = EMPTY;\n\n    @Override\n    public void execute(NodeProbe probe)\n    {\n        switch (removeOperation)\n        {\n            case \"status\":\n                System.out.println(\"RemovalStatus: \" + probe.getRemovalStatus(printPort));\n                break;\n            case \"force\":\n                System.out.println(\"RemovalStatus: \" + probe.getRemovalStatus(printPort));\n                probe.forceRemoveCompletion();\n                break;\n            default:\n                probe.removeNode(removeOperation);\n                break;\n        }\n    }\n}<fim_middle>// class below has no smell\n"}