{"text": "<fim_prefix>/*******************************************************************************\n * Copyright (c) 2018 Actuate Corporation.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *  Actuate Corporation  - initial API and implementation\n *******************************************************************************/\n\npackage org.eclipse.birt.core.fs;\n\nimport java.io.File;\nimport java.io.FileInputStream;\nimport java.io.FileOutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.OutputStream;\nimport java.net.URI;\nimport java.net.URL;\n\n/**\n * Provides local file system support.\n */\n\npublic class LocalFile implements IFile\n{\n\n\tprivate final File file;\n\n\tpublic LocalFile( File localFile )\n\t{\n\t\tthis.file = localFile;\n\t}\n\t\n\tpublic LocalFile( URI uri )\n\t{\n\t\tthis.file = uri.isAbsolute( ) ? new File( uri )\n\t\t\t\t: new File( uri.toString( ) );\n\t}\n\n\t@Override\n\tpublic String getName( )\n\t{\n\t\treturn file.getName( );\n\t}\n\n\t@Override\n\tpublic String getPath( )\n\t{\n\t\treturn file.getPath( );\n\t}\n\n\t@Override\n\tpublic boolean exists( )\n\t{\n\t\treturn file.exists( );\n\t}\n\n\t@Override\n\tpublic boolean delete( )\n\t{\n\t\treturn deleteFile( file );\n\t}\n\n\tprivate boolean deleteFile( File f )\n\t{\n\t\tif ( f.isDirectory( ) )\n\t\t{\n\t\t\t// Must delete children files before deleting folder\n\t\t\tfor ( File child : f.listFiles( ) )\n\t\t\t{\n\t\t\t\tdeleteFile( child );\n\t\t\t}\n\t\t}\n\t\treturn f.delete( );\n\t}\n\n<fim_suffix>\t@Override\n\tpublic boolean mkdirs( )\n\t{\n\t\treturn file.mkdirs( );\n\t}\n\n\t@Override\n\tpublic boolean isDirectory( )\n\t{\n\t\treturn file.isDirectory( );\n\t}\n\n\t@Override\n\tpublic IFile[] listFiles( )\n\t{\n\t\tif ( !file.exists( ) || !file.isDirectory( ) )\n\t\t{\n\t\t\treturn new IFile[0];\n\t\t}\n\t\tFile[] files = file.listFiles( );\n\t\tIFile[] result = new IFile[files.length];\n\t\tfor ( int i = 0; i < files.length; i++ )\n\t\t{\n\t\t\tresult[i] = new LocalFile( files[i] );\n\t\t}\n\t\treturn result;\n\t}\n\n\t@Override\n\tpublic OutputStream createOutputStream( ) throws IOException\n\t{\n\t\treturn new FileOutputStream( file );\n\t}\n\n\t@Override\n\tpublic InputStream createInputStream( ) throws IOException\n\t{\n\t\treturn new FileInputStream( file );\n\t}\n\n\t@Override\n\tpublic URL toURL( ) throws IOException\n\t{\n\t\treturn file.toURI( ).toURL( );\n\t}\n\n\t@Override\n\tpublic boolean isAbsolute( )\n\t{\n\t\treturn file.isAbsolute( );\n\t}\n\n\t@Override\n\tpublic IFile getParent( )\n\t{\n\t\treturn new LocalFile( file.getParentFile( ) );\n\t}\n\n}<fim_middle>// function below has no smell\n"}