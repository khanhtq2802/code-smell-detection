{"text": "<fim_prefix>      public setProperty() {\n        super(\"setProperty\");\n      }\n      public setProperty_args getEmptyArgsInstance() {\n        return new setProperty_args();\n      }\n      protected boolean isOneway() {\n        return false;\n      }\n      @Override\n      protected boolean rethrowUnhandledExceptions() {\n        return false;\n      }\n      public setProperty_result getResult(I iface, setProperty_args args) throws org.apache.thrift.TException {\n        setProperty_result result = new setProperty_result();\n        try {\n          iface.setProperty(args.login, args.property, args.value);\n        } catch (AccumuloException ouch1) {\n          result.ouch1 = ouch1;\n        } catch (AccumuloSecurityException ouch2) {\n          result.ouch2 = ouch2;\n        }\n        return result;\n      }\n    }\n    public static class testClassLoad<I extends Iface> extends org.apache.thrift.ProcessFunction<I, testClassLoad_args> {\n      public testClassLoad() {\n        super(\"testClassLoad\");\n      }\n      public testClassLoad_args getEmptyArgsInstance() {\n        return new testClassLoad_args();\n      }\n      protected boolean isOneway() {\n        return false;\n      }\n      @Override\n      protected boolean rethrowUnhandledExceptions() {\n        return false;\n      }\n      public testClassLoad_result getResult(I iface, testClassLoad_args args) throws org.apache.thrift.TException {\n        testClassLoad_result result = new testClassLoad_result();\n        try {\n          result.success = iface.testClassLoad(args.login, args.className, args.asTypeName);\n          result.setSuccessIsSet(true);\n        } catch (AccumuloException ouch1) {\n          result.ouch1 = ouch1;\n        } catch (AccumuloSecurityException ouch2) {\n          result.ouch2 = ouch2;\n        }\n        return result;\n      }\n    }\n    public static class authenticateUser<I extends Iface> extends org.apache.thrift.ProcessFunction<I, authenticateUser_args> {\n      public authenticateUser() {\n        super(\"authenticateUser\");\n      }\n      public authenticateUser_args getEmptyArgsInstance() {\n        return new authenticateUser_args();\n      }\n      protected boolean isOneway() {\n        return false;\n      }\n      @Override\n      protected boolean rethrowUnhandledExceptions() {\n        return false;\n      }\n      public authenticateUser_result getResult(I iface, authenticateUser_args args) throws org.apache.thrift.TException {\n        authenticateUser_result result = new authenticateUser_result();\n        try {\n          result.success = iface.authenticateUser(args.login, args.user, args.properties);\n          result.setSuccessIsSet(true);\n        } catch (AccumuloException ouch1) {\n          result.ouch1 = ouch1;\n        } catch (AccumuloSecurityException ouch2) {\n          result.ouch2 = ouch2;\n        }\n        return result;\n      }\n    }\n    public static class changeUserAuthorizations<I extends Iface> extends org.apache.thrift.ProcessFunction<I, changeUserAuthorizations_args> {\n      public changeUserAuthorizations() {\n        super(\"changeUserAuthorizations\");\n      }\n      public changeUserAuthorizations_args getEmptyArgsInstance() {\n        return new changeUserAuthorizations_args();\n      }\n      protected boolean isOneway() {\n        return false;\n      }\n      @Override\n      protected boolean rethrowUnhandledExceptions() {\n        return false;\n      }\n      public changeUserAuthorizations_result getResult(I iface, changeUserAuthorizations_args args) throws org.apache.thrift.TException {\n        changeUserAuthorizations_result result = new changeUserAuthorizations_result();\n        try {\n          iface.changeUserAuthorizations(args.login, args.user, args.authorizations);\n        } catch (AccumuloException ouch1) {\n          result.ouch1 = ouch1;\n        } catch (AccumuloSecurityException ouch2) {\n          result.ouch2 = ouch2;\n        }\n        return result;\n      }\n    }\n    public static class changeLocalUserPassword<I extends Iface> extends org.apache.thrift.ProcessFunction<I, changeLocalUserPassword_args> {\n      public changeLocalUserPassword() {\n        super(\"changeLocalUserPassword\");\n      }\n      public changeLocalUserPassword_args getEmptyArgsInstance() {\n        return new changeLocalUserPassword_args();\n      }\n      protected boolean isOneway() {\n        return false;\n      }\n      @Override\n      protected boolean rethrowUnhandledExceptions() {\n        return false;\n      }\n      public changeLocalUserPassword_result getResult(I iface, changeLocalUserPassword_args args) throws org.apache.thrift.TException {\n        changeLocalUserPassword_result result = new changeLocalUserPassword_result();\n        try {\n          iface.changeLocalUserPassword(args.login, args.user, args.password);\n        } catch (AccumuloException ouch1) {\n          result.ouch1 = ouch1;\n        } catch (AccumuloSecurityException ouch2) {\n          result.ouch2 = ouch2;\n        }\n        return result;\n      }\n    }\n    public static class createLocalUser<I extends Iface> extends org.apache.thrift.ProcessFunction<I, createLocalUser_args> {\n      public createLocalUser() {\n        super(\"createLocalUser\");\n      }\n      public createLocalUser_args getEmptyArgsInstance() {\n        return new createLocalUser_args();\n      }\n      protected boolean isOneway() {\n        return false;\n      }\n      @Override\n      protected boolean rethrowUnhandledExceptions() {\n        return false;\n      }\n      public createLocalUser_result getResult(I iface, createLocalUser_args args) throws org.apache.thrift.TException {\n        createLocalUser_result result = new createLocalUser_result();\n        try {\n          iface.createLocalUser(args.login, args.user, args.password);\n        } catch (AccumuloException ouch1) {\n          result.ouch1 = ouch1;\n        } catch (AccumuloSecurityException ouch2) {\n          result.ouch2 = ouch2;\n        }\n        return result;\n      }\n    }\n    public static class dropLocalUser<I extends Iface> extends org.apache.thrift.ProcessFunction<I, dropLocalUser_args> {\n      public dropLocalUser() {\n        super(\"dropLocalUser\");\n      }\n      public dropLocalUser_args getEmptyArgsInstance() {\n        return new dropLocalUser_args();\n      }\n      protected boolean isOneway() {\n        return false;\n      }\n      @Override\n      protected boolean rethrowUnhandledExceptions() {\n        return false;\n      }\n      public dropLocalUser_result getResult(I iface, dropLocalUser_args args) throws org.apache.thrift.TException {\n        dropLocalUser_result result = new dropLocalUser_result();\n        try {\n          iface.dropLocalUser(args.login, args.user);\n        } catch (AccumuloException ouch1) {\n          result.ouch1 = ouch1;\n        } catch (AccumuloSecurityException ouch2) {\n          result.ouch2 = ouch2;\n        }\n        return result;\n      }\n    }\n    public static class getUserAuthorizations<I extends Iface> extends org.apache.thrift.ProcessFunction<I, getUserAuthorizations_args> {\n      public getUserAuthorizations() {\n        super(\"getUserAuthorizations\");\n      }\n      public getUserAuthorizations_args getEmptyArgsInstance() {\n        return new getUserAuthorizations_args();\n      }\n      protected boolean isOneway() {\n        return false;\n      }\n      @Override\n      protected boolean rethrowUnhandledExceptions() {\n        return false;\n      }\n      public getUserAuthorizations_result getResult(I iface, getUserAuthorizations_args args) throws org.apache.thrift.TException {\n        getUserAuthorizations_result result = new getUserAuthorizations_result();\n        try {\n          result.success = iface.getUserAuthorizations(args.login, args.user);\n        } catch (AccumuloException ouch1) {\n          result.ouch1 = ouch1;\n        } catch (AccumuloSecurityException ouch2) {\n          result.ouch2 = ouch2;\n        }\n        return result;\n      }\n    }\n<fim_suffix>    public static class grantSystemPermission<I extends Iface> extends org.apache.thrift.ProcessFunction<I, grantSystemPermission_args> {\n      public grantSystemPermission() {\n        super(\"grantSystemPermission\");\n      }\n      public grantSystemPermission_args getEmptyArgsInstance() {\n        return new grantSystemPermission_args();\n      }\n      protected boolean isOneway() {\n        return false;\n      }\n      @Override\n      protected boolean rethrowUnhandledExceptions() {\n        return false;\n      }\n      public grantSystemPermission_result getResult(I iface, grantSystemPermission_args args) throws org.apache.thrift.TException {\n        grantSystemPermission_result result = new grantSystemPermission_result();\n        try {\n          iface.grantSystemPermission(args.login, args.user, args.perm);\n        } catch (AccumuloException ouch1) {\n          result.ouch1 = ouch1;\n        } catch (AccumuloSecurityException ouch2) {\n          result.ouch2 = ouch2;\n        }\n        return result;\n      }\n    }<fim_middle>// class below has no smell\n"}