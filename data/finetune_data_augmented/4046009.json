{"text": "<fim_prefix>/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.apache.beam.sdk.nexmark.queries;\n\nimport javax.annotation.Nullable;\nimport org.apache.beam.sdk.nexmark.model.Event;\nimport org.apache.beam.sdk.nexmark.model.KnownSize;\nimport org.apache.beam.sdk.transforms.PTransform;\nimport org.apache.beam.sdk.values.KV;\nimport org.apache.beam.sdk.values.PCollection;\n\n/**\n * Base class for 'NEXMark' query transforms.\n *\n * <p>A query transform maps an event stream to some known size element stream.\n *\n * <p>A query transform may request a faked side input to join with ids.\n */\n<fim_suffix>public abstract class NexmarkQueryTransform<T extends KnownSize>\n    extends PTransform<PCollection<Event>, PCollection<T>> {\n\n  private transient PCollection<KV<Long, String>> sideInput = null;\n\n  protected NexmarkQueryTransform(String name) {\n    super(name);\n  }\n\n  /** Whether this query expects a side input to be populated. Defaults to {@code false}. */\n  public boolean needsSideInput() {\n    return false;\n  }\n\n  /**\n   * Set the side input for the query.\n   *\n   * <p>Note that due to the nature of side inputs, this instance of the query is now fixed and can\n   * only be safely applied in the pipeline where the side input was created.\n   */\n  public void setSideInput(PCollection<KV<Long, String>> sideInput) {\n    this.sideInput = sideInput;\n  }\n\n  /** Get the side input, if any. */\n  public @Nullable PCollection<KV<Long, String>> getSideInput() {\n    return sideInput;\n  }\n}<fim_middle>// class below is data class\n"}