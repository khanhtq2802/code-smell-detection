{"text": "<fim_prefix>/*\n   Copyright (c) 2015 LinkedIn Corp.\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n */\n\npackage com.linkedin.restli.examples.greetings.server;\n\n\nimport com.linkedin.restli.common.CompoundKey;\nimport com.linkedin.restli.examples.custom.types.CustomDouble;\nimport com.linkedin.restli.examples.custom.types.CustomString;\nimport com.linkedin.restli.examples.greetings.api.Message;\nimport com.linkedin.restli.examples.greetings.api.Tone;\nimport com.linkedin.restli.examples.typeref.api.CustomDoubleRef;\nimport com.linkedin.restli.examples.typeref.api.CustomStringRef;\nimport com.linkedin.restli.examples.typeref.api.UriRef;\nimport com.linkedin.restli.server.annotations.Key;\nimport com.linkedin.restli.server.annotations.QueryParam;\nimport com.linkedin.restli.server.annotations.RestLiAssociation;\nimport com.linkedin.restli.server.annotations.RestMethod;\nimport com.linkedin.restli.server.resources.AssociationResourceTemplate;\n\nimport java.net.URI;\nimport java.util.Arrays;\n\n\n/**\n * @author nshankar\n */\n<fim_suffix>@RestLiAssociation(name = \"typerefCustomDoubleAssociationKeyResource\",\n                   namespace = \"com.linkedin.restli.examples.greetings.client\",\n                   assocKeys = {@Key(name = \"src\", type = CustomDouble.class, typeref = CustomDoubleRef.class),\n                       @Key(name = \"dest\", type = URI.class, typeref = UriRef.class)})\npublic class TyperefCustomDoubleAssociationKeyResource extends AssociationResourceTemplate<Message>\n{\n  @RestMethod.Get\n  public Message get(final CompoundKey key, @QueryParam(value = \"array\",\n                                                        typeref = CustomStringRef.class) final CustomString[] stringArray)\n  {\n    return new Message().setId(((CustomDouble) key.getPart(\"src\")).toDouble() + \"->\" + ((URI) key.getPart(\n        \"dest\")).getHost())\n                        .setMessage(String.format(\"I need some $20. Array contents %s.\", Arrays.asList(stringArray)))\n                        .setTone(Tone.SINCERE);\n  }\n}<fim_middle>// class below has no smell\n"}