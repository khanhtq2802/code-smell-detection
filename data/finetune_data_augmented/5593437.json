{"text": "<fim_prefix>/* ====================================================================\n   Licensed to the Apache Software Foundation (ASF) under one or more\n   contributor license agreements.  See the NOTICE file distributed with\n   this work for additional information regarding copyright ownership.\n   The ASF licenses this file to You under the Apache License, Version 2.0\n   (the \"License\"); you may not use this file except in compliance with\n   the License.  You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n==================================================================== */\npackage org.apache.poi.xssf.usermodel.examples;\n\nimport java.io.FileOutputStream;\nimport java.io.IOException;\n\nimport org.apache.poi.ss.usermodel.Cell;\nimport org.apache.poi.ss.usermodel.Row;\nimport org.apache.poi.ss.util.CellRangeAddress;\nimport org.apache.poi.xddf.usermodel.PresetColor;\nimport org.apache.poi.xddf.usermodel.XDDFColor;\nimport org.apache.poi.xddf.usermodel.XDDFLineProperties;\nimport org.apache.poi.xddf.usermodel.XDDFShapeProperties;\nimport org.apache.poi.xddf.usermodel.XDDFSolidFillProperties;\nimport org.apache.poi.xddf.usermodel.chart.AxisCrosses;\nimport org.apache.poi.xddf.usermodel.chart.AxisPosition;\nimport org.apache.poi.xddf.usermodel.chart.ChartTypes;\nimport org.apache.poi.xddf.usermodel.chart.LegendPosition;\nimport org.apache.poi.xddf.usermodel.chart.MarkerStyle;\nimport org.apache.poi.xddf.usermodel.chart.XDDFCategoryAxis;\nimport org.apache.poi.xddf.usermodel.chart.XDDFChartData;\nimport org.apache.poi.xddf.usermodel.chart.XDDFChartLegend;\nimport org.apache.poi.xddf.usermodel.chart.XDDFDataSource;\nimport org.apache.poi.xddf.usermodel.chart.XDDFDataSourcesFactory;\nimport org.apache.poi.xddf.usermodel.chart.XDDFLineChartData;\nimport org.apache.poi.xddf.usermodel.chart.XDDFNumericalDataSource;\nimport org.apache.poi.xddf.usermodel.chart.XDDFValueAxis;\nimport org.apache.poi.xssf.usermodel.XSSFChart;\nimport org.apache.poi.xssf.usermodel.XSSFClientAnchor;\nimport org.apache.poi.xssf.usermodel.XSSFDrawing;\nimport org.apache.poi.xssf.usermodel.XSSFSheet;\nimport org.apache.poi.xssf.usermodel.XSSFWorkbook;\n\n/**\n * Line chart example.\n */\npublic class LineChart {\n\n<fim_suffix>    public static void main(String[] args) throws IOException {\n        try (XSSFWorkbook wb = new XSSFWorkbook()) {\n            XSSFSheet sheet = wb.createSheet(\"linechart\");\n            final int NUM_OF_ROWS = 3;\n            final int NUM_OF_COLUMNS = 10;\n\n            // Create a row and put some cells in it. Rows are 0 based.\n            Row row;\n            Cell cell;\n            for (int rowIndex = 0; rowIndex < NUM_OF_ROWS; rowIndex++) {\n                row = sheet.createRow((short) rowIndex);\n                for (int colIndex = 0; colIndex < NUM_OF_COLUMNS; colIndex++) {\n                    cell = row.createCell((short) colIndex);\n                    cell.setCellValue(colIndex * (rowIndex + 1.0));\n                }\n            }\n\n            XSSFDrawing drawing = sheet.createDrawingPatriarch();\n            XSSFClientAnchor anchor = drawing.createAnchor(0, 0, 0, 0, 0, 5, 10, 15);\n\n            XSSFChart chart = drawing.createChart(anchor);\n            XDDFChartLegend legend = chart.getOrAddLegend();\n            legend.setPosition(LegendPosition.TOP_RIGHT);\n\n            // Use a category axis for the bottom axis.\n            XDDFCategoryAxis bottomAxis = chart.createCategoryAxis(AxisPosition.BOTTOM);\n            bottomAxis.setTitle(\"x\"); // https://stackoverflow.com/questions/32010765\n            XDDFValueAxis leftAxis = chart.createValueAxis(AxisPosition.LEFT);\n            leftAxis.setTitle(\"f(x)\");\n            leftAxis.setCrosses(AxisCrosses.AUTO_ZERO);\n\n            XDDFDataSource<Double> xs = XDDFDataSourcesFactory.fromNumericCellRange(sheet, new CellRangeAddress(0, 0, 0, NUM_OF_COLUMNS - 1));\n            XDDFNumericalDataSource<Double> ys1 = XDDFDataSourcesFactory.fromNumericCellRange(sheet, new CellRangeAddress(1, 1, 0, NUM_OF_COLUMNS - 1));\n            XDDFNumericalDataSource<Double> ys2 = XDDFDataSourcesFactory.fromNumericCellRange(sheet, new CellRangeAddress(2, 2, 0, NUM_OF_COLUMNS - 1));\n\n            XDDFLineChartData data = (XDDFLineChartData) chart.createData(ChartTypes.LINE, bottomAxis, leftAxis);\n            XDDFLineChartData.Series series1 = (XDDFLineChartData.Series) data.addSeries(xs, ys1);\n            series1.setTitle(\"2x\", null); // https://stackoverflow.com/questions/21855842\n            series1.setSmooth(false); // https://stackoverflow.com/questions/29014848\n            series1.setMarkerStyle(MarkerStyle.STAR); // https://stackoverflow.com/questions/39636138\n            XDDFLineChartData.Series series2 = (XDDFLineChartData.Series) data.addSeries(xs, ys2);\n            series2.setTitle(\"3x\", null);\n            series2.setSmooth(true);\n            series2.setMarkerSize((short) 6);\n            series2.setMarkerStyle(MarkerStyle.TRIANGLE); // https://stackoverflow.com/questions/39636138\n            chart.plot(data);\n\n            // if your series have missing values like https://stackoverflow.com/questions/29014848\n            // chart.displayBlanksAs(DisplayBlanks.GAP);\n\n            // https://stackoverflow.com/questions/24676460\n            solidLineSeries(data, 0, PresetColor.CHARTREUSE);\n            solidLineSeries(data, 1, PresetColor.TURQUOISE);\n\n            // Write the output to a file\n            try (FileOutputStream fileOut = new FileOutputStream(\"ooxml-line-chart.xlsx\")) {\n                wb.write(fileOut);\n            }\n        }\n    }\n\n    private static void solidLineSeries(XDDFChartData data, int index, PresetColor color) {\n        XDDFSolidFillProperties fill = new XDDFSolidFillProperties(XDDFColor.from(color));\n        XDDFLineProperties line = new XDDFLineProperties();\n        line.setFillProperties(fill);\n        XDDFChartData.Series series = data.getSeries().get(index);\n        XDDFShapeProperties properties = series.getShapeProperties();\n        if (properties == null) {\n            properties = new XDDFShapeProperties();\n        }\n        properties.setLineProperties(line);\n        series.setShapeProperties(properties);\n    }\n}<fim_middle>// function below is long method\n"}