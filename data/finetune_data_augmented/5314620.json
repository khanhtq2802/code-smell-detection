{"text": "<fim_prefix>/*\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.apache.pdfbox.contentstream.operator.state;\n\nimport java.util.List;\n\nimport org.apache.pdfbox.contentstream.operator.MissingOperandException;\nimport org.apache.pdfbox.contentstream.operator.Operator;\nimport org.apache.pdfbox.contentstream.operator.OperatorProcessor;\nimport org.apache.pdfbox.cos.COSBase;\nimport org.apache.pdfbox.cos.COSNumber;\nimport org.apache.pdfbox.util.Matrix;\n\n/**\n * Tm: Set text matrix and text line matrix.\n *\n * @author Laurent Huault\n */\npublic class SetMatrix extends OperatorProcessor\n{\n<fim_suffix>    @Override\n    public void process(Operator operator, List<COSBase> arguments) throws MissingOperandException\n    {\n        if (arguments.size() < 6)\n        {\n            throw new MissingOperandException(operator, arguments);\n        }\n        if (!checkArrayTypesClass(arguments, COSNumber.class))\n        {\n            return;\n        }\n\n        COSNumber a = (COSNumber)arguments.get( 0 );\n        COSNumber b = (COSNumber)arguments.get( 1 );\n        COSNumber c = (COSNumber)arguments.get( 2 );\n        COSNumber d = (COSNumber)arguments.get( 3 );\n        COSNumber e = (COSNumber)arguments.get( 4 );\n        COSNumber f = (COSNumber)arguments.get( 5 );\n\n        Matrix matrix = new Matrix(a.floatValue(), b.floatValue(), c.floatValue(),\n                                   d.floatValue(), e.floatValue(), f.floatValue());\n\n        context.setTextMatrix(matrix);\n        context.setTextLineMatrix(matrix.clone());\n    }\n\n    @Override\n    public String getName()\n    {\n        return \"Tm\";\n    }\n}<fim_middle>// function below has no smell\n"}