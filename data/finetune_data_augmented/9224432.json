{"text": "<fim_prefix> * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n *\n * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n * or visit www.oracle.com if you need additional information or have any\n * questions.\n */\npackage javax.swing.text;\nimport java.io.Serializable;\nimport java.text.ParseException;\nimport javax.swing.JFormattedTextField;\n/**\n * An implementation of\n * <code>JFormattedTextField.AbstractFormatterFactory</code>.\n * <code>DefaultFormatterFactory</code> allows specifying a number of\n * different <code>JFormattedTextField.AbstractFormatter</code>s that are to\n * be used.\n * The most important one is the default one\n * (<code>setDefaultFormatter</code>). The default formatter will be used\n * if a more specific formatter could not be found. The following process\n * is used to determine the appropriate formatter to use.\n * <ol>\n *   <li>Is the passed in value null? Use the null formatter.\n *   <li>Does the <code>JFormattedTextField</code> have focus? Use the edit\n *       formatter.\n *   <li>Otherwise, use the display formatter.\n *   <li>If a non-null <code>AbstractFormatter</code> has not been found, use\n *       the default formatter.\n * </ol>\n * <p>\n * The following code shows how to configure a\n * <code>JFormattedTextField</code> with two\n * <code>JFormattedTextField.AbstractFormatter</code>s, one for display and\n * one for editing.\n * <pre>\n * JFormattedTextField.AbstractFormatter editFormatter = ...;\n * JFormattedTextField.AbstractFormatter displayFormatter = ...;\n * DefaultFormatterFactory factory = new DefaultFormatterFactory(\n *                 displayFormatter, displayFormatter, editFormatter);\n * JFormattedTextField tf = new JFormattedTextField(factory);\n * </pre>\n * <p>\n * <strong>Warning:</strong>\n * Serialized objects of this class will not be compatible with\n * future Swing releases. The current serialization support is\n * appropriate for short term storage or RMI between applications running\n * the same version of Swing.  As of 1.4, support for long term storage\n * of all JavaBeans&trade;\n * has been added to the <code>java.beans</code> package.\n * Please see {@link java.beans.XMLEncoder}.\n *\n * @see javax.swing.JFormattedTextField\n *\n * @since 1.4\n */\n@SuppressWarnings(\"serial\") // Same-version serialization only\npublic class DefaultFormatterFactory extends JFormattedTextField.AbstractFormatterFactory implements Serializable {\n    /**\n     * Default <code>AbstractFormatter</code> to use if a more specific one has\n     * not been specified.\n     */\n    private JFormattedTextField.AbstractFormatter defaultFormat;\n    /**\n     * <code>JFormattedTextField.AbstractFormatter</code> to use for display.\n     */\n    private JFormattedTextField.AbstractFormatter displayFormat;\n    /**\n     * <code>JFormattedTextField.AbstractFormatter</code> to use for editing.\n     */\n    private JFormattedTextField.AbstractFormatter editFormat;\n    /**\n     * <code>JFormattedTextField.AbstractFormatter</code> to use if the value\n     * is null.\n     */\n    private JFormattedTextField.AbstractFormatter nullFormat;\n    /**\n     * Constructs a {@code DefaultFormatterFactory}.\n     */\n    public DefaultFormatterFactory() {\n    }\n    /**\n     * Creates a <code>DefaultFormatterFactory</code> with the specified\n     * <code>JFormattedTextField.AbstractFormatter</code>.\n     *\n     * @param defaultFormat JFormattedTextField.AbstractFormatter to be used\n     *                      if a more specific\n     *                      JFormattedTextField.AbstractFormatter can not be\n     *                      found.\n     */\n    public DefaultFormatterFactory(JFormattedTextField.\n                                       AbstractFormatter defaultFormat) {\n        this(defaultFormat, null);\n    }\n    /**\n     * Creates a <code>DefaultFormatterFactory</code> with the specified\n     * <code>JFormattedTextField.AbstractFormatter</code>s.\n     *\n     * @param defaultFormat JFormattedTextField.AbstractFormatter to be used\n     *                      if a more specific\n     *                      JFormattedTextField.AbstractFormatter can not be\n     *                      found.\n     * @param displayFormat JFormattedTextField.AbstractFormatter to be used\n     *                      when the JFormattedTextField does not have focus.\n     */\n    public DefaultFormatterFactory(\n                     JFormattedTextField.AbstractFormatter defaultFormat,\n                     JFormattedTextField.AbstractFormatter displayFormat) {\n        this(defaultFormat, displayFormat, null);\n    }\n    /**\n     * Creates a DefaultFormatterFactory with the specified\n     * JFormattedTextField.AbstractFormatters.\n     *\n     * @param defaultFormat JFormattedTextField.AbstractFormatter to be used\n     *                      if a more specific\n     *                      JFormattedTextField.AbstractFormatter can not be\n     *                      found.\n     * @param displayFormat JFormattedTextField.AbstractFormatter to be used\n     *                      when the JFormattedTextField does not have focus.\n     * @param editFormat    JFormattedTextField.AbstractFormatter to be used\n     *                      when the JFormattedTextField has focus.\n     */\n    public DefaultFormatterFactory(\n                   JFormattedTextField.AbstractFormatter defaultFormat,\n                   JFormattedTextField.AbstractFormatter displayFormat,\n                   JFormattedTextField.AbstractFormatter editFormat) {\n        this(defaultFormat, displayFormat, editFormat, null);\n    }\n    /**\n     * Creates a DefaultFormatterFactory with the specified\n     * JFormattedTextField.AbstractFormatters.\n     *\n     * @param defaultFormat JFormattedTextField.AbstractFormatter to be used\n     *                      if a more specific\n     *                      JFormattedTextField.AbstractFormatter can not be\n     *                      found.\n     * @param displayFormat JFormattedTextField.AbstractFormatter to be used\n     *                      when the JFormattedTextField does not have focus.\n     * @param editFormat    JFormattedTextField.AbstractFormatter to be used\n     *                      when the JFormattedTextField has focus.\n     * @param nullFormat    JFormattedTextField.AbstractFormatter to be used\n     *                      when the JFormattedTextField has a null value.\n     */\n    public DefaultFormatterFactory(\n                  JFormattedTextField.AbstractFormatter defaultFormat,\n                  JFormattedTextField.AbstractFormatter displayFormat,\n                  JFormattedTextField.AbstractFormatter editFormat,\n                  JFormattedTextField.AbstractFormatter nullFormat) {\n        this.defaultFormat = defaultFormat;\n        this.displayFormat = displayFormat;\n        this.editFormat = editFormat;\n        this.nullFormat = nullFormat;\n    }\n    /**\n     * Sets the <code>JFormattedTextField.AbstractFormatter</code> to use as\n     * a last resort, eg in case a display, edit or null\n     * <code>JFormattedTextField.AbstractFormatter</code> has not been\n     * specified.\n     *\n     * @param atf JFormattedTextField.AbstractFormatter used if a more\n     *            specific is not specified\n     */\n    public void setDefaultFormatter(JFormattedTextField.AbstractFormatter atf){\n        defaultFormat = atf;\n    }\n    /**\n     * Returns the <code>JFormattedTextField.AbstractFormatter</code> to use\n     * as a last resort, eg in case a display, edit or null\n     * <code>JFormattedTextField.AbstractFormatter</code>\n     * has not been specified.\n     *\n     * @return JFormattedTextField.AbstractFormatter used if a more specific\n     *         one is not specified.\n     */\n    public JFormattedTextField.AbstractFormatter getDefaultFormatter() {\n        return defaultFormat;\n    }\n    /**\n     * Sets the <code>JFormattedTextField.AbstractFormatter</code> to use if\n     * the <code>JFormattedTextField</code> is not being edited and either\n     * the value is not-null, or the value is null and a null formatter has\n     * has not been specified.\n     *\n     * @param atf JFormattedTextField.AbstractFormatter to use when the\n     *            JFormattedTextField does not have focus\n     */\n    public void setDisplayFormatter(JFormattedTextField.AbstractFormatter atf){\n        displayFormat = atf;\n    }\n    /**\n     * Returns the <code>JFormattedTextField.AbstractFormatter</code> to use\n     * if the <code>JFormattedTextField</code> is not being edited and either\n     * the value is not-null, or the value is null and a null formatter has\n     * has not been specified.\n     *\n     * @return JFormattedTextField.AbstractFormatter to use when the\n     *         JFormattedTextField does not have focus\n     */\n    public JFormattedTextField.AbstractFormatter getDisplayFormatter() {\n        return displayFormat;\n    }\n    /**\n     * Sets the <code>JFormattedTextField.AbstractFormatter</code> to use if\n     * the <code>JFormattedTextField</code> is being edited and either\n     * the value is not-null, or the value is null and a null formatter has\n     * has not been specified.\n     *\n     * @param atf JFormattedTextField.AbstractFormatter to use when the\n     *            component has focus\n     */\n<fim_suffix>    public void setEditFormatter(JFormattedTextField.AbstractFormatter atf) {\n        editFormat = atf;\n    }<fim_middle>// function below has no smell\n"}