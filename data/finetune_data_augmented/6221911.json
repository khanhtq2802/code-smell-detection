{"text": "<fim_prefix>/*******************************************************************************\n * Copyright (c) 2017 Inria and others.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     Inria - initial API and implementation\n *******************************************************************************/\npackage org.eclipse.gemoc.gexpressions.utils;\n\nimport org.eclipse.emf.ecore.EClass;\n\n<fim_suffix>public class GExpressionsHelper {\n\n\t/**\n\t * Returns whether or not eClass is a supertype of otherEClass. Check based\n\t * on names...\n\t * \n\t * @param eClass\n\t * @param otherEClass\n\t * @return\n\t */\n\tpublic static Boolean eClassIsSuperTypeOf(EClass eClass, EClass otherEClass) {\n\t\tBoolean res = classEquals(eClass, otherEClass);\n\t\tfor (EClass clazz : otherEClass.getEAllSuperTypes()) {\n\t\t\tres = res || classEquals(clazz, eClass);\n\t\t}\n\t\treturn res;\n\t}\n\n\tprivate static Boolean classEquals(EClass eClass, EClass otherEClass) {\n\t\treturn eClass.equals(otherEClass)\n\t\t\t\t|| (eClass.getName().equals(otherEClass.getName()) && eClass\n\t\t\t\t\t\t.getEPackage().getName()\n\t\t\t\t\t\t.equals(otherEClass.getEPackage().getName()));\n\t}\n}<fim_middle>// class below has no smell\n"}