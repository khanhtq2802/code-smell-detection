{"text": "<fim_prefix>/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\npackage org.apache.brooklyn.api.location;\n\n/** Mixin interface for location which allows it to supply ports from a given range */\n<fim_suffix>public interface PortSupplier {\n\n    /**\n     * Reserve a specific port for an application. If your application requires a specific port - for example, port 80 for a web\n     * server - you should reserve this port before starting your application. Using this method, you will be able to detect if\n     * another application has already claimed this port number.\n     *\n     * @param portNumber the required port number.\n     * @return {@code true} if the port was successfully reserved; {@code false} if it has been previously reserved.\n     */\n    boolean obtainSpecificPort(int portNumber);\n\n    /**\n     * Reserve a port for your application, with a port number in a specific range. If your application requires a port, but it does\n     * not mind exactly which port number - for example, a port for internal JMX monitoring - call this method.\n     *\n     * @param range the range of acceptable port numbers.\n     * @return the port number that has been reserved, or -1 if there was no available port in the acceptable range.\n     */\n    int obtainPort(PortRange range);\n\n    /**\n     * Release a previously reserved port.\n     *\n     * @param portNumber the port number from a call to {@link #obtainPort(PortRange)} or {@link #obtainSpecificPort(int)}\n     */\n    void releasePort(int portNumber);\n\n}<fim_middle>// class below has no smell\n"}