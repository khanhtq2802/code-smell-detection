{"text": "<fim_prefix>/*******************************************************************************\n * Copyright (c) 2015 Eclipse RDF4J contributors, Aduna, and others.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Distribution License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/org/documents/edl-v10.php.\n *******************************************************************************/\npackage org.eclipse.rdf4j.http.client;\n\nimport org.eclipse.rdf4j.query.QueryEvaluationException;\n\n/**\n * Makes working with a queue easier by adding the methods {@link #done()} and {@link #toss(Exception)} and\n * automatically converting the exception into a QueryEvaluationException with an appropriate stack trace.\n * \n * @author James Leigh\n * @deprecated Use {@link org.eclipse.rdf4j.query.impl.QueueCursor} instead\n */\n@Deprecated\npublic class QueueCursor<E> extends org.eclipse.rdf4j.query.impl.QueueCursor<E> {\n\n\t/**\n\t * Creates an <tt>QueueCursor</tt> with the given (fixed) capacity and default access policy.\n\t * \n\t * @param capacity the capacity of this queue\n\t */\n<fim_suffix>\tpublic QueueCursor(int capacity) {\n\t\tthis(capacity, false);\n\t}\n\n\t/**\n\t * Creates an <tt>QueueCursor</tt> with the given (fixed) capacity and the specified access policy.\n\t * \n\t * @param capacity the capacity of this queue\n\t * @param fair     if <tt>true</tt> then queue accesses for threads blocked on insertion or removal, are processed\n\t *                 in FIFO order; if <tt>false</tt> the access order is unspecified.\n\t */\n\tpublic QueueCursor(int capacity, boolean fair) {\n\t\tsuper(capacity, fair);\n\t}\n\n\t@Override\n\tprotected QueryEvaluationException convert(Exception e) {\n\t\tthrow new QueryEvaluationException(e);\n\t}\n\n}<fim_middle>// function below has no smell\n"}