{"text": "<fim_prefix>/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\npackage org.apache.hyracks.storage.am.btree.impls;\n\nimport org.apache.hyracks.api.dataflow.value.ITypeTraits;\nimport org.apache.hyracks.storage.am.btree.api.IPrefixSlotManager;\nimport org.apache.hyracks.storage.am.btree.frames.BTreeFieldPrefixNSMLeafFrame;\nimport org.apache.hyracks.storage.am.common.api.ITreeIndexFrame;\nimport org.apache.hyracks.storage.am.common.tuples.TypeAwareTupleReference;\n\n<fim_suffix>public class FieldPrefixPrefixTupleReference extends TypeAwareTupleReference {\n\n    public FieldPrefixPrefixTupleReference(ITypeTraits[] typeTraits) {\n        super(typeTraits);\n    }\n\n    // assumes tuple index refers to prefix tuples\n    @Override\n    public void resetByTupleIndex(ITreeIndexFrame frame, int tupleIndex) {\n        BTreeFieldPrefixNSMLeafFrame concreteFrame = (BTreeFieldPrefixNSMLeafFrame) frame;\n        IPrefixSlotManager slotManager = concreteFrame.getSlotManager();\n        int prefixSlotOff = slotManager.getPrefixSlotOff(tupleIndex);\n        int prefixSlot = concreteFrame.getBuffer().getInt(prefixSlotOff);\n        setFieldCount(slotManager.decodeFirstSlotField(prefixSlot));\n        tupleStartOff = slotManager.decodeSecondSlotField(prefixSlot);\n        buf = concreteFrame.getBuffer().array();\n        resetByTupleOffset(buf, tupleStartOff);\n    }\n}<fim_middle>// class below has no smell\n"}