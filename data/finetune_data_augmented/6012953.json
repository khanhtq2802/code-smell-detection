{"text": "<fim_prefix>/*\n * Copyright 2013-2019 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage org.cloudfoundry.client.v2.applications;\n\nimport com.fasterxml.jackson.core.JsonParser;\nimport com.fasterxml.jackson.core.type.TypeReference;\nimport com.fasterxml.jackson.databind.DeserializationContext;\nimport com.fasterxml.jackson.databind.annotation.JsonDeserialize;\nimport com.fasterxml.jackson.databind.deser.std.StdDeserializer;\nimport org.cloudfoundry.AllowNulls;\nimport org.immutables.value.Value;\n\nimport java.io.IOException;\nimport java.util.Map;\n\n/**\n * The response payload for the Get the instance information operation.\n */\n<fim_suffix>@JsonDeserialize(using = _ApplicationInstancesResponse.ApplicationInstancesResponseDeserializer.class)\n@Value.Immutable\nabstract class _ApplicationInstancesResponse {\n\n    /**\n     * The instances\n     */\n    @AllowNulls\n    abstract Map<String, ApplicationInstanceInfo> getInstances();\n\n    static final class ApplicationInstancesResponseDeserializer extends StdDeserializer<ApplicationInstancesResponse> {\n\n        private static final long serialVersionUID = -3557583833091104581L;\n\n        ApplicationInstancesResponseDeserializer() {\n            super(ApplicationInstancesResponse.class);\n        }\n\n        @Override\n        public ApplicationInstancesResponse deserialize(JsonParser p, DeserializationContext ctxt) throws IOException {\n            return ApplicationInstancesResponse.builder()\n                .instances(p.readValueAs(new TypeReference<Map<String, ApplicationInstanceInfo>>() {\n\n                }))\n                .build();\n        }\n    }\n\n}<fim_middle>// class below has no smell\n"}