{"text": "<fim_prefix>/*\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to you under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.apache.calcite.sql;\n\nimport org.apache.calcite.sql.type.OperandTypes;\nimport org.apache.calcite.sql.type.ReturnTypes;\nimport org.apache.calcite.sql.type.SqlOperandTypeChecker;\nimport org.apache.calcite.sql.type.SqlOperandTypeInference;\nimport org.apache.calcite.sql.type.SqlReturnTypeInference;\nimport org.apache.calcite.sql.validate.SqlValidator;\nimport org.apache.calcite.sql.validate.SqlValidatorScope;\n\n/**\n * SqlSetOperator represents a relational set theory operator (UNION, INTERSECT,\n * MINUS). These are binary operators, but with an extra boolean attribute\n * tacked on for whether to remove duplicates (e.g. UNION ALL does not remove\n * duplicates).\n */\npublic class SqlSetOperator extends SqlBinaryOperator {\n  //~ Instance fields --------------------------------------------------------\n\n  private final boolean all;\n\n  //~ Constructors -----------------------------------------------------------\n\n<fim_suffix>  public SqlSetOperator(\n      String name,\n      SqlKind kind,\n      int prec,\n      boolean all) {\n    super(\n        name,\n        kind,\n        prec,\n        true,\n        ReturnTypes.LEAST_RESTRICTIVE,\n        null,\n        OperandTypes.SET_OP);\n    this.all = all;\n  }\n\n  public SqlSetOperator(\n      String name,\n      SqlKind kind,\n      int prec,\n      boolean all,\n      SqlReturnTypeInference returnTypeInference,\n      SqlOperandTypeInference operandTypeInference,\n      SqlOperandTypeChecker operandTypeChecker) {\n    super(\n        name,\n        kind,\n        prec,\n        true,\n        returnTypeInference,\n        operandTypeInference,\n        operandTypeChecker);\n    this.all = all;\n  }\n\n  //~ Methods ----------------------------------------------------------------\n\n  public boolean isAll() {\n    return all;\n  }\n\n  public boolean isDistinct() {\n    return !all;\n  }\n\n  public void validateCall(\n      SqlCall call,\n      SqlValidator validator,\n      SqlValidatorScope scope,\n      SqlValidatorScope operandScope) {\n    validator.validateQuery(call, operandScope, validator.getUnknownType());\n  }\n}\n\n// End SqlSetOperator.java<fim_middle>// function below has no smell\n"}