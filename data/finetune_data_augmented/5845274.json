{"text": "<fim_prefix>            }\n            if (temp.getSessionConfig().getSessionTimeout() != null) {\n                sessionConfig.setSessionTimeout(\n                        temp.getSessionConfig().getSessionTimeout().toString());\n            }\n        }\n        if (sessionConfig.getCookieName() == null) {\n            for (WebXml fragment : fragments) {\n                String value = fragment.getSessionConfig().getCookieName();\n                if (value != null) {\n                    if (temp.getSessionConfig().getCookieName() == null) {\n                        temp.getSessionConfig().setCookieName(value);\n                    } else if (value.equals(\n                            temp.getSessionConfig().getCookieName())) {\n                        // Fragments use same value - no conflict\n                    } else {\n                        log.error(sm.getString(\n                                \"webXml.mergeConflictSessionCookieName\",\n                                fragment.getName(),\n                                fragment.getURL()));\n                        return false;\n                    }\n                }\n            }\n            sessionConfig.setCookieName(\n                    temp.getSessionConfig().getCookieName());\n        }\n        if (sessionConfig.getCookieDomain() == null) {\n            for (WebXml fragment : fragments) {\n                String value = fragment.getSessionConfig().getCookieDomain();\n                if (value != null) {\n                    if (temp.getSessionConfig().getCookieDomain() == null) {\n                        temp.getSessionConfig().setCookieDomain(value);\n                    } else if (value.equals(\n                            temp.getSessionConfig().getCookieDomain())) {\n                        // Fragments use same value - no conflict\n                    } else {\n                        log.error(sm.getString(\n                                \"webXml.mergeConflictSessionCookieDomain\",\n                                fragment.getName(),\n                                fragment.getURL()));\n                        return false;\n                    }\n                }\n            }\n            sessionConfig.setCookieDomain(\n                    temp.getSessionConfig().getCookieDomain());\n        }\n        if (sessionConfig.getCookiePath() == null) {\n            for (WebXml fragment : fragments) {\n                String value = fragment.getSessionConfig().getCookiePath();\n                if (value != null) {\n                    if (temp.getSessionConfig().getCookiePath() == null) {\n                        temp.getSessionConfig().setCookiePath(value);\n                    } else if (value.equals(\n                            temp.getSessionConfig().getCookiePath())) {\n                        // Fragments use same value - no conflict\n                    } else {\n                        log.error(sm.getString(\n                                \"webXml.mergeConflictSessionCookiePath\",\n                                fragment.getName(),\n                                fragment.getURL()));\n                        return false;\n                    }\n                }\n            }\n            sessionConfig.setCookiePath(\n                    temp.getSessionConfig().getCookiePath());\n        }\n        if (sessionConfig.getCookieComment() == null) {\n            for (WebXml fragment : fragments) {\n                String value = fragment.getSessionConfig().getCookieComment();\n                if (value != null) {\n                    if (temp.getSessionConfig().getCookieComment() == null) {\n                        temp.getSessionConfig().setCookieComment(value);\n                    } else if (value.equals(\n                            temp.getSessionConfig().getCookieComment())) {\n                        // Fragments use same value - no conflict\n                    } else {\n                        log.error(sm.getString(\n                                \"webXml.mergeConflictSessionCookieComment\",\n                                fragment.getName(),\n                                fragment.getURL()));\n                        return false;\n                    }\n                }\n            }\n            sessionConfig.setCookieComment(\n                    temp.getSessionConfig().getCookieComment());\n        }\n        if (sessionConfig.getCookieHttpOnly() == null) {\n            for (WebXml fragment : fragments) {\n                Boolean value = fragment.getSessionConfig().getCookieHttpOnly();\n                if (value != null) {\n                    if (temp.getSessionConfig().getCookieHttpOnly() == null) {\n                        temp.getSessionConfig().setCookieHttpOnly(value.toString());\n                    } else if (value.equals(\n                            temp.getSessionConfig().getCookieHttpOnly())) {\n                        // Fragments use same value - no conflict\n                    } else {\n                        log.error(sm.getString(\n                                \"webXml.mergeConflictSessionCookieHttpOnly\",\n                                fragment.getName(),\n                                fragment.getURL()));\n                        return false;\n                    }\n                }\n            }\n            if (temp.getSessionConfig().getCookieHttpOnly() != null) {\n                sessionConfig.setCookieHttpOnly(\n                        temp.getSessionConfig().getCookieHttpOnly().toString());\n            }\n        }\n        if (sessionConfig.getCookieSecure() == null) {\n            for (WebXml fragment : fragments) {\n                Boolean value = fragment.getSessionConfig().getCookieSecure();\n                if (value != null) {\n                    if (temp.getSessionConfig().getCookieSecure() == null) {\n                        temp.getSessionConfig().setCookieSecure(value.toString());\n                    } else if (value.equals(\n                            temp.getSessionConfig().getCookieSecure())) {\n                        // Fragments use same value - no conflict\n                    } else {\n                        log.error(sm.getString(\n                                \"webXml.mergeConflictSessionCookieSecure\",\n                                fragment.getName(),\n                                fragment.getURL()));\n                        return false;\n                    }\n                }\n            }\n            if (temp.getSessionConfig().getCookieSecure() != null) {\n                sessionConfig.setCookieSecure(\n                        temp.getSessionConfig().getCookieSecure().toString());\n            }\n        }\n        if (sessionConfig.getCookieMaxAge() == null) {\n            for (WebXml fragment : fragments) {\n                Integer value = fragment.getSessionConfig().getCookieMaxAge();\n                if (value != null) {\n                    if (temp.getSessionConfig().getCookieMaxAge() == null) {\n                        temp.getSessionConfig().setCookieMaxAge(value.toString());\n                    } else if (value.equals(\n                            temp.getSessionConfig().getCookieMaxAge())) {\n                        // Fragments use same value - no conflict\n                    } else {\n                        log.error(sm.getString(\n                                \"webXml.mergeConflictSessionCookieMaxAge\",\n                                fragment.getName(),\n                                fragment.getURL()));\n                        return false;\n                    }\n                }\n            }\n            if (temp.getSessionConfig().getCookieMaxAge() != null) {\n                sessionConfig.setCookieMaxAge(\n                        temp.getSessionConfig().getCookieMaxAge().toString());\n            }\n        }\n        if (sessionConfig.getSessionTrackingModes().size() == 0) {\n            for (WebXml fragment : fragments) {\n                EnumSet<SessionTrackingMode> value =\n                    fragment.getSessionConfig().getSessionTrackingModes();\n                if (value.size() > 0) {\n                    if (temp.getSessionConfig().getSessionTrackingModes().size() == 0) {\n                        temp.getSessionConfig().getSessionTrackingModes().addAll(value);\n                    } else if (value.equals(\n                            temp.getSessionConfig().getSessionTrackingModes())) {\n                        // Fragments use same value - no conflict\n                    } else {\n                        log.error(sm.getString(\n                                \"webXml.mergeConflictSessionTrackingMode\",\n                                fragment.getName(),\n                                fragment.getURL()));\n                        return false;\n                    }\n                }\n            }\n            sessionConfig.getSessionTrackingModes().addAll(\n                    temp.getSessionConfig().getSessionTrackingModes());\n        }\n        for (WebXml fragment : fragments) {\n            if (!mergeMap(fragment.getTaglibs(), taglibs,\n                    temp.getTaglibs(), fragment, \"Taglibs\")) {\n                return false;\n            }\n        }\n        taglibs.putAll(temp.getTaglibs());\n        for (WebXml fragment : fragments) {\n            if (fragment.alwaysAddWelcomeFiles || welcomeFiles.size() == 0) {\n                for (String welcomeFile : fragment.getWelcomeFiles()) {\n                    addWelcomeFile(welcomeFile);\n                }\n            }\n        }\n        if (postConstructMethods.isEmpty()) {\n            for (WebXml fragment : fragments) {\n                if (!mergeLifecycleCallback(fragment.getPostConstructMethods(),\n                        temp.getPostConstructMethods(), fragment,\n                        \"Post Construct Methods\")) {\n                    return false;\n                }\n            }\n            postConstructMethods.putAll(temp.getPostConstructMethods());\n        }\n        if (preDestroyMethods.isEmpty()) {\n            for (WebXml fragment : fragments) {\n                if (!mergeLifecycleCallback(fragment.getPreDestroyMethods(),\n                        temp.getPreDestroyMethods(), fragment,\n                        \"Pre Destroy Methods\")) {\n                    return false;\n                }\n            }\n            preDestroyMethods.putAll(temp.getPreDestroyMethods());\n        }\n        return true;\n    }\n<fim_suffix>    private <T extends ResourceBase> boolean mergeResourceMap(\n            Map<String, T> fragmentResources, Map<String, T> mainResources,\n            Map<String, T> tempResources, WebXml fragment) {\n        for (T resource : fragmentResources.values()) {\n            String resourceName = resource.getName();\n            if (mainResources.containsKey(resourceName)) {\n                mainResources.get(resourceName).getInjectionTargets().addAll(\n                        resource.getInjectionTargets());\n            } else {\n                // Not defined in main web.xml\n                T existingResource = tempResources.get(resourceName);\n                if (existingResource != null) {\n                    if (!existingResource.equals(resource)) {\n                        log.error(sm.getString(\n                                \"webXml.mergeConflictResource\",\n                                resourceName,\n                                fragment.getName(),\n                                fragment.getURL()));\n                        return false;\n                    }\n                } else {\n                    tempResources.put(resourceName, resource);\n                }\n            }\n        }\n        return true;\n    }<fim_middle>// function below is long method\n"}