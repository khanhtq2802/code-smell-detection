{"text": "<fim_prefix>/*\n * Copyright (c) 2015, 2018, Oracle and/or its affiliates. All rights reserved.\n * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n *\n * This code is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License version 3 only, as\n * published by the Free Software Foundation.\n *\n * This code is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n * version 3 for more details (a copy is included in the LICENSE file that\n * accompanied this code).\n *\n * You should have received a copy of the GNU General Public License version\n * 3 along with this work; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n *\n * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n * or visit www.oracle.com if you need additional information or have any\n * questions.\n */\npackage com.oracle.truffle.r.library.utils;\n\nimport static com.oracle.truffle.r.nodes.builtin.CastBuilder.Predef.stringValue;\n\nimport com.oracle.truffle.api.CompilerDirectives.TruffleBoundary;\nimport com.oracle.truffle.api.dsl.Specialization;\nimport com.oracle.truffle.r.nodes.builtin.RExternalBuiltinNode;\nimport com.oracle.truffle.r.runtime.RError;\nimport com.oracle.truffle.r.runtime.data.model.RAbstractStringVector;\n\n<fim_suffix>public abstract class Crc64 extends RExternalBuiltinNode.Arg1 {\n\n    static {\n        Casts casts = new Casts(Crc64.class);\n        casts.arg(0).mustNotBeNull(RError.Message.INPUT_MUST_BE_STRING).mustBe(stringValue(), RError.Message.INPUT_MUST_BE_STRING);\n    }\n\n    @Specialization\n    public String crc64(RAbstractStringVector x) {\n        return crc(x);\n    }\n\n    @TruffleBoundary\n    public static String crc(RAbstractStringVector x) {\n        final String string = x.getDataAt(0);\n        byte[] bytes = string.getBytes();\n        bytes = crc64(bytes);\n        long l = 0;\n        for (int i = 0; i < bytes.length; i++) {\n            l += (bytes[i] & 0xffL) << (8 * i);\n        }\n        return Long.toHexString(l);\n    }\n\n    @TruffleBoundary\n    private static byte[] crc64(byte[] bytes) {\n        org.tukaani.xz.check.CRC64 crc = new org.tukaani.xz.check.CRC64();\n        crc.update(bytes);\n        return crc.finish();\n    }\n}<fim_middle>// class below has no smell\n"}