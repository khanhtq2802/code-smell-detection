{"text": "<fim_prefix>/**\n * Copyright (c) 2016, 2019, Oracle and/or its affiliates. All rights reserved.\n */\npackage com.oracle.bmc.database.model;\n\n/**\n *\n * <br/>\n * Note: Objects should always be created or deserialized using the {@link Builder}. This model distinguishes fields\n * that are {@code null} because they are unset from fields that are explicitly set to {@code null}. This is done in\n * the setter methods of the {@link Builder}, which maintain a set of all explicitly set fields called\n * {@link #__explicitlySet__}. The {@link #hashCode()} and {@link #equals(Object)} methods are implemented to take\n * {@link #__explicitlySet__} into account. The constructor, on the other hand, does not set {@link #__explicitlySet__}\n * (since the constructor cannot distinguish explicit {@code null} from unset {@code null}).\n **/\n@javax.annotation.Generated(value = \"OracleSDKGenerator\", comments = \"API Version: 20160918\")\n@lombok.AllArgsConstructor(onConstructor = @__({@Deprecated}))\n@lombok.Value\n@com.fasterxml.jackson.databind.annotation.JsonDeserialize(\n    builder = CompleteExternalBackupJobDetails.Builder.class\n)\n@com.fasterxml.jackson.annotation.JsonFilter(com.oracle.bmc.http.internal.ExplicitlySetFilter.NAME)\npublic class CompleteExternalBackupJobDetails {\n    @com.fasterxml.jackson.databind.annotation.JsonPOJOBuilder(withPrefix = \"\")\n    @lombok.experimental.Accessors(fluent = true)\n    public static class Builder {\n        @com.fasterxml.jackson.annotation.JsonProperty(\"tdeWalletPath\")\n        private String tdeWalletPath;\n\n        public Builder tdeWalletPath(String tdeWalletPath) {\n            this.tdeWalletPath = tdeWalletPath;\n            this.__explicitlySet__.add(\"tdeWalletPath\");\n            return this;\n        }\n\n        @com.fasterxml.jackson.annotation.JsonProperty(\"cfBackupHandle\")\n        private String cfBackupHandle;\n\n<fim_suffix>        public Builder cfBackupHandle(String cfBackupHandle) {\n            this.cfBackupHandle = cfBackupHandle;\n            this.__explicitlySet__.add(\"cfBackupHandle\");\n            return this;\n        }\n\n        @com.fasterxml.jackson.annotation.JsonProperty(\"spfBackupHandle\")\n        private String spfBackupHandle;\n\n        public Builder spfBackupHandle(String spfBackupHandle) {\n            this.spfBackupHandle = spfBackupHandle;\n            this.__explicitlySet__.add(\"spfBackupHandle\");\n            return this;\n        }\n\n        @com.fasterxml.jackson.annotation.JsonProperty(\"sqlPatches\")\n        private java.util.List<String> sqlPatches;\n\n        public Builder sqlPatches(java.util.List<String> sqlPatches) {\n            this.sqlPatches = sqlPatches;\n            this.__explicitlySet__.add(\"sqlPatches\");\n            return this;\n        }\n\n        @com.fasterxml.jackson.annotation.JsonProperty(\"dataSize\")\n        private Long dataSize;\n\n        public Builder dataSize(Long dataSize) {\n            this.dataSize = dataSize;\n            this.__explicitlySet__.add(\"dataSize\");\n            return this;\n        }\n\n        @com.fasterxml.jackson.annotation.JsonProperty(\"redoSize\")\n        private Long redoSize;\n\n        public Builder redoSize(Long redoSize) {\n            this.redoSize = redoSize;\n            this.__explicitlySet__.add(\"redoSize\");\n            return this;\n        }\n\n        @com.fasterxml.jackson.annotation.JsonIgnore\n        private final java.util.Set<String> __explicitlySet__ = new java.util.HashSet<String>();\n\n        public CompleteExternalBackupJobDetails build() {\n            CompleteExternalBackupJobDetails __instance__ =\n                    new CompleteExternalBackupJobDetails(\n                            tdeWalletPath,\n                            cfBackupHandle,\n                            spfBackupHandle,\n                            sqlPatches,\n                            dataSize,\n                            redoSize);\n            __instance__.__explicitlySet__.addAll(__explicitlySet__);\n            return __instance__;\n        }\n\n        @com.fasterxml.jackson.annotation.JsonIgnore\n        public Builder copy(CompleteExternalBackupJobDetails o) {\n            Builder copiedBuilder =\n                    tdeWalletPath(o.getTdeWalletPath())\n                            .cfBackupHandle(o.getCfBackupHandle())\n                            .spfBackupHandle(o.getSpfBackupHandle())\n                            .sqlPatches(o.getSqlPatches())\n                            .dataSize(o.getDataSize())\n                            .redoSize(o.getRedoSize());\n\n            copiedBuilder.__explicitlySet__.retainAll(o.__explicitlySet__);\n            return copiedBuilder;\n        }\n    }\n\n    /**\n     * Create a new builder.\n     */\n    public static Builder builder() {\n        return new Builder();\n    }\n\n    /**\n     * If the database being backed up is TDE enabled, this will be the path to the associated TDE wallet in Object Storage.\n     **/\n    @com.fasterxml.jackson.annotation.JsonProperty(\"tdeWalletPath\")\n    String tdeWalletPath;\n\n    /**\n     * The handle of the control file backup.\n     **/\n    @com.fasterxml.jackson.annotation.JsonProperty(\"cfBackupHandle\")\n    String cfBackupHandle;\n\n    /**\n     * The handle of the spfile backup.\n     **/\n    @com.fasterxml.jackson.annotation.JsonProperty(\"spfBackupHandle\")\n    String spfBackupHandle;\n\n    /**\n     * The list of SQL patches that need to be applied to the backup during the restore.\n     **/\n    @com.fasterxml.jackson.annotation.JsonProperty(\"sqlPatches\")\n    java.util.List<String> sqlPatches;\n\n    /**\n     * The size of the data in the database, in megabytes.\n     **/\n    @com.fasterxml.jackson.annotation.JsonProperty(\"dataSize\")\n    Long dataSize;\n\n    /**\n     * The size of the redo in the database, in megabytes.\n     **/\n    @com.fasterxml.jackson.annotation.JsonProperty(\"redoSize\")\n    Long redoSize;\n\n    @com.fasterxml.jackson.annotation.JsonIgnore\n    private final java.util.Set<String> __explicitlySet__ = new java.util.HashSet<String>();\n}<fim_middle>// function below has no smell\n"}