{"text": "<fim_prefix>\tpublic static final IGrammarAwareElementType ParenthesizedCondition_LeftParenthesisKeyword_0_ELEMENT_TYPE = associate(ParenthesizedConditionFactory.createParenthesizedCondition_LeftParenthesisKeyword_0ElementType());\n\tpublic static final IGrammarAwareElementType ParenthesizedCondition_DisjunctionParserRuleCall_1_ELEMENT_TYPE = associate(ParenthesizedConditionFactory.createParenthesizedCondition_DisjunctionParserRuleCall_1ElementType());\n\tpublic static final IGrammarAwareElementType ParenthesizedCondition_RightParenthesisKeyword_2_ELEMENT_TYPE = associate(ParenthesizedConditionFactory.createParenthesizedCondition_RightParenthesisKeyword_2ElementType());\n\tprivate static class ParameterReferenceFactory {\n\t\tpublic static IGrammarAwareElementType createParameterReferenceElementType() {\n\t\t\treturn new IGrammarAwareElementType(\"ParameterReference_ELEMENT_TYPE\", XtextLanguage.INSTANCE, GRAMMAR_ACCESS.getParameterReferenceRule());\n\t\t}\n\t\tpublic static IGrammarAwareElementType createParameterReference_ParameterAssignmentElementType() {\n\t\t\treturn new IGrammarAwareElementType(\"ParameterReference_ParameterAssignment_ELEMENT_TYPE\", XtextLanguage.INSTANCE, GRAMMAR_ACCESS.getParameterReferenceAccess().getParameterAssignment());\n\t\t}\n\t\tpublic static IGrammarAwareElementType createParameterReference_ParameterParameterCrossReference_0ElementType() {\n\t\t\treturn new IGrammarAwareElementType(\"ParameterReference_ParameterParameterCrossReference_0_ELEMENT_TYPE\", XtextLanguage.INSTANCE, GRAMMAR_ACCESS.getParameterReferenceAccess().getParameterParameterCrossReference_0());\n\t\t}\n\t\tpublic static IGrammarAwareElementType createParameterReference_ParameterParameterIDTerminalRuleCall_0_1ElementType() {\n\t\t\treturn new IGrammarAwareElementType(\"ParameterReference_ParameterParameterIDTerminalRuleCall_0_1_ELEMENT_TYPE\", XtextLanguage.INSTANCE, GRAMMAR_ACCESS.getParameterReferenceAccess().getParameterParameterIDTerminalRuleCall_0_1());\n\t\t}\n\t}\n\tpublic static final IGrammarAwareElementType ParameterReference_ELEMENT_TYPE = associate(ParameterReferenceFactory.createParameterReferenceElementType());\n\tpublic static final IGrammarAwareElementType ParameterReference_ParameterAssignment_ELEMENT_TYPE = associate(ParameterReferenceFactory.createParameterReference_ParameterAssignmentElementType());\n\tpublic static final IGrammarAwareElementType ParameterReference_ParameterParameterCrossReference_0_ELEMENT_TYPE = associate(ParameterReferenceFactory.createParameterReference_ParameterParameterCrossReference_0ElementType());\n\tpublic static final IGrammarAwareElementType ParameterReference_ParameterParameterIDTerminalRuleCall_0_1_ELEMENT_TYPE = associate(ParameterReferenceFactory.createParameterReference_ParameterParameterIDTerminalRuleCall_0_1ElementType());\n<fim_suffix>\tprivate static class TerminalRuleCallFactory {\n\t\tpublic static IGrammarAwareElementType createTerminalRuleCallElementType() {\n\t\t\treturn new IGrammarAwareElementType(\"TerminalRuleCall_ELEMENT_TYPE\", XtextLanguage.INSTANCE, GRAMMAR_ACCESS.getTerminalRuleCallRule());\n\t\t}\n\t\tpublic static IGrammarAwareElementType createTerminalRuleCall_RuleAssignmentElementType() {\n\t\t\treturn new IGrammarAwareElementType(\"TerminalRuleCall_RuleAssignment_ELEMENT_TYPE\", XtextLanguage.INSTANCE, GRAMMAR_ACCESS.getTerminalRuleCallAccess().getRuleAssignment());\n\t\t}\n\t\tpublic static IGrammarAwareElementType createTerminalRuleCall_RuleAbstractRuleCrossReference_0ElementType() {\n\t\t\treturn new IGrammarAwareElementType(\"TerminalRuleCall_RuleAbstractRuleCrossReference_0_ELEMENT_TYPE\", XtextLanguage.INSTANCE, GRAMMAR_ACCESS.getTerminalRuleCallAccess().getRuleAbstractRuleCrossReference_0());\n\t\t}\n\t\tpublic static IGrammarAwareElementType createTerminalRuleCall_RuleAbstractRuleRuleIDParserRuleCall_0_1ElementType() {\n\t\t\treturn new IGrammarAwareElementType(\"TerminalRuleCall_RuleAbstractRuleRuleIDParserRuleCall_0_1_ELEMENT_TYPE\", XtextLanguage.INSTANCE, GRAMMAR_ACCESS.getTerminalRuleCallAccess().getRuleAbstractRuleRuleIDParserRuleCall_0_1());\n\t\t}\n\t}<fim_middle>// class below has no smell\n"}