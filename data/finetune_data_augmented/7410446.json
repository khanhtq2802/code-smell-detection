{"text": "<fim_prefix>/*\n * Copyright 2010-2019 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.springframework.data.gemfire;\n\nimport org.apache.geode.cache.InterestPolicy;\nimport org.apache.geode.cache.SubscriptionAttributes;\nimport org.springframework.beans.factory.FactoryBean;\nimport org.springframework.beans.factory.InitializingBean;\n\n/**\n * The SubscriptionAttributesFactoryBean class is a Spring FactoryBean used for defining and constructing\n * a GemFire SubscriptionAttributes object, which determines the Subscription policy used by Regions to\n * declared their data interests.\n *\n * @author Lyndon Adams\n * @author John Blum\n * @see org.springframework.beans.factory.FactoryBean\n * @see org.springframework.beans.factory.InitializingBean\n * @see org.apache.geode.cache.InterestPolicy\n * @see org.apache.geode.cache.SubscriptionAttributes\n * @since 1.3.0\n */\npublic class SubscriptionAttributesFactoryBean implements FactoryBean<SubscriptionAttributes>, InitializingBean {\n\n\tprivate InterestPolicy interestPolicy;\n\n\tprivate SubscriptionAttributes subscriptionAttributes;\n\n\t/*\n\t * (non-Javadoc)\n\t * @see org.springframework.beans.factory.InitializingBean#afterPropertiesSet()\n\t */\n\t@Override\n\tpublic void afterPropertiesSet() throws Exception {\n\t\tthis.subscriptionAttributes = new SubscriptionAttributes(getInterestPolicy());\n\t}\n\n\t/*\n\t * (non-Javadoc)\n\t * @see org.springframework.beans.factory.FactoryBean#getObject()\n\t */\n\t@Override\n\tpublic SubscriptionAttributes getObject() throws Exception {\n\t\treturn this.subscriptionAttributes;\n\t}\n\n\t/*\n\t * (non-Javadoc)\n\t * @see org.springframework.beans.factory.FactoryBean#getObjectType()\n\t */\n\t@Override\n\tpublic Class<?> getObjectType() {\n\n\t\treturn this.subscriptionAttributes != null\n\t\t\t? this.subscriptionAttributes.getClass()\n\t\t\t: SubscriptionAttributes.class;\n\t}\n\n\t/*\n\t * (non-Javadoc)\n\t * @see org.springframework.beans.factory.FactoryBean#isSingleton()\n\t */\n\t@Override\n\tpublic boolean isSingleton() {\n\t\treturn true;\n\t}\n\n\t/**\n\t * Sets GemFire's InterestPolicy specified on the SubscriptionAttributes in order to define/declare\n\t * the data interests and distribution of changes.\n\t *\n\t * @param interestPolicy the GemFire InterestsPolicy to set for Subscription.\n\t * @see org.apache.geode.cache.InterestPolicy\n\t * @see org.apache.geode.cache.SubscriptionAttributes#SubscriptionAttributes(org.apache.geode.cache.InterestPolicy)\n\t */\n<fim_suffix>\tpublic void setInterestPolicy(InterestPolicy interestPolicy) {\n\t\tthis.interestPolicy = interestPolicy;\n\t}\n\n\t/**\n\t * Gets GemFire's InterestPolicy specified on the SubscriptionAttributes which defines data interests\n\t * and distribution of changes.\n\t *\n\t * @return the GemFire InterestsPolicy set for Subscription.\n\t * @see org.apache.geode.cache.InterestPolicy\n\t * @see org.apache.geode.cache.SubscriptionAttributes#getInterestPolicy()\n\t */\n\tpublic InterestPolicy getInterestPolicy() {\n\t\treturn this.interestPolicy != null ? this.interestPolicy : InterestPolicy.DEFAULT;\n\t}\n}<fim_middle>// function below has no smell\n"}