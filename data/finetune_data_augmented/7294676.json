{"text": "<fim_prefix>/*******************************************************************************\n * Copyright (c) 2012 Pivotal Software, Inc.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * https://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     Pivotal Software, Inc. - initial API and implementation\n *******************************************************************************/\npackage org.grails.ide.eclipse.explorer.preferences;\n\nimport org.eclipse.jdt.internal.ui.wizards.dialogfields.ListDialogField;\nimport org.eclipse.jface.layout.GridDataFactory;\nimport org.eclipse.jface.preference.PreferencePage;\nimport org.eclipse.jface.resource.ImageDescriptor;\nimport org.eclipse.jface.viewers.LabelProvider;\nimport org.eclipse.swt.SWT;\nimport org.eclipse.swt.graphics.Image;\nimport org.eclipse.swt.layout.GridLayout;\nimport org.eclipse.swt.widgets.Composite;\nimport org.eclipse.swt.widgets.Control;\nimport org.eclipse.ui.IWorkbench;\nimport org.eclipse.ui.IWorkbenchPreferencePage;\nimport org.grails.ide.eclipse.core.internal.plugins.GrailsProjectStructureTypes;\n\nimport org.grails.ide.eclipse.explorer.GrailsExplorerPlugin;\nimport org.grails.ide.eclipse.explorer.internal.util.ImageManager;\nimport org.grails.ide.eclipse.explorer.internal.util.ImageUtils;\nimport org.grails.ide.eclipse.explorer.types.GrailsContainerTypeManager;\n\n/**\n * Allows changing the sorting order in the GrailsProject explorer.\n * \n * @author Kris De Volder\n *\n * @since 2.8\n */\npublic class GrailsExplorerPreferencesPage extends PreferencePage implements\n\t\tIWorkbenchPreferencePage {\n\t\n\tprivate static final ImageDescriptor PKG_FOLDER_IMG = ImageUtils.imageDescriptor(\"platform:/plugin/org.grails.ide.eclipse.explorer/icons/full/obj16/packagefolder_obj.gif\");\n\tprivate static final ImageDescriptor FILE_IMG = ImageUtils.imageDescriptor(\"platform:/plugin/org.grails.ide.eclipse.explorer/icons/full/obj16/file_obj.gif\");\n\n\tprivate static final String[] buttonLabels = {\n\t\t\"Up\",\n\t\t\"Down\"\n\t};\n\n\t\n\tpublic GrailsExplorerPreferencesPage() {\n\t\tsuper(\"Explorer Sorting Order\", null);\n\t}\n\t\n\tprivate LabelProvider tableLabelProvider = new LabelProvider() {\n\t\t\n\t\tprivate ImageManager images = new ImageManager();\n\t\t\n<fim_suffix>\t\t@Override\n\t\tpublic String getText(Object element) {\n\t\t\tif (element instanceof GrailsProjectStructureTypes) {\n\t\t\t\treturn ((GrailsProjectStructureTypes) element).getDisplayName();\n\t\t\t} else if (element instanceof String) {\n\t\t\t\treturn (String)element;\n\t\t\t}\n\t\t\treturn \"\"+element;\n\t\t}\n\n\t\t@Override\n\t\tpublic Image getImage(Object element) {\n\t\t\tif (element instanceof GrailsProjectStructureTypes) {\n\t\t\t\tGrailsProjectStructureTypes type = (GrailsProjectStructureTypes)element;\n\t\t\t\treturn GrailsContainerTypeManager.getInstance().getIcon(type);\n\t\t\t} else if (\"application.properties\".equals(element)) {\n\t\t\t\treturn images.get(FILE_IMG);\n\t\t\t} else {\n\t\t\t\treturn images.get(PKG_FOLDER_IMG);\n\t\t\t}\n\t\t}\n\t\tpublic void dispose() {\n\t\t\tif (images!=null) {\n\t\t\t\timages.dispose();\n\t\t\t\timages = null;\n\t\t\t}\n\t\t}\n\t};\n\t\n\tprivate ListDialogField list;\n\n\tpublic void init(IWorkbench workbench) {\n\t}\n\n\t@Override\n\tprotected Control createContents(Composite _parent) {\n\t\tComposite mainComposite = new Composite(_parent, SWT.NONE);\n\t\t\n\t\tGridLayout layout = new GridLayout(3, false);\n\t\tmainComposite.setLayout(layout);\n\t\t\n//\t\tGridDataFactory grabAll = GridDataFactory.fillDefaults().grab(true, true);\n//\t\tgrabAll.applyTo(mainComposite);\n\t\t\n\t\tlist = new ListDialogField(null, buttonLabels, tableLabelProvider);\n\t\tlist.setUpButtonIndex(0);\n\t\tlist.setDownButtonIndex(1);\n\t\t\n\t\tlist.setLabelText(\"Order:\");\n\t\tlist.addElements(GrailsExplorerPlugin.getDefault().getPreferences().getOrderingConfig().asList());\n\t\tlist.doFillIntoGrid(mainComposite, 3);\n\t\t\n\t\t//This must be placed *after* doFillIntoGrid\n\t\tlist.getListControl(null).setToolTipText(\"Change the order in which elements appear in the Grails Project Explorer\");\n\t\tGridDataFactory.fillDefaults().align(SWT.FILL, SWT.TOP).grab(true, false).applyTo(list.getListControl(null));\n//\t\tgrabAll.applyTo(list.getListControl(null));\n\t\t\n\t\treturn mainComposite;\n\t}\n\t\n\t@Override\n\tpublic boolean performOk() {\n\t\tGrailsExplorerPreferences prefs = GrailsExplorerPlugin.getDefault().getPreferences();\n\t\tprefs.setOrderingConfig(getOrderingConfigInPage());\n\t\treturn true;\n\t}\n\n\tprivate OrderingConfig getOrderingConfigInPage() {\n\t\treturn OrderingConfig.fromList(list.getElements());\n\t}\n\n\t@Override\n\tprotected void performDefaults() {\n\t\tsetOrderingConfigInPage(OrderingConfig.DEFAULT);\n\t}\n\n\tprivate void setOrderingConfigInPage(OrderingConfig conf) {\n\t\tlist.setElements(conf.asList());\n\t}\n\t\n}<fim_middle>// function below has no smell\n"}