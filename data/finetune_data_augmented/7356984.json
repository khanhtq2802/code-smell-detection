{"text": "<fim_prefix>            null);\n    }\n    /**\n     * Gets a Work Item Query Results Url.\n     *\n     * @param projectUri\n     *        URI of the project that this query is in\n     * @param queryPath\n     *        Path of the query to run (e.g. ProjectName/My Queries/Query1).\n     * @return A Query Results url.\n     */\n    public URI getWorkItemQueryResultsURL(final String projectUri, final String queryPath) {\n        return getWorkItemQueryResultsURL(projectUri, queryPath, AccessMappingMonikers.PUBLIC_ACCESS_MAPPING);\n    }\n    /**\n     * Gets a Work Item Query Results Url.\n     *\n     * @param projectUri\n     *        URI of the project that this query is in\n     * @param queryPath\n     *        Path of the query to run (e.g. ProjectName/My Queries/Query1).\n     * @param accessMappingMoniker\n     *        A moniker for the desired access mapping.\n     * @return A Work Item Query Results url.\n     */\n    public URI getWorkItemQueryResultsURL(\n        final String projectUri,\n        final String queryPath,\n        final String accessMappingMoniker) {\n        if (queryPath == null || queryPath.length() == 0) {\n            throw new IllegalArgumentException(\"The queryPath cannot be null or empty.\"); //$NON-NLS-1$\n        }\n        if (isCompatibleMode || projectUri == null) {\n            final String query = formatQueryString(projectUri, \"path\", queryPath); //$NON-NLS-1$\n            return getPageURL(accessMappingMoniker, \"qr.aspx\", query); //$NON-NLS-1$\n        } else {\n            return buildURL(ServiceInterfaceNames.TSWA_VIEW_SERVER_QUERY_RESULTS, accessMappingMoniker, new String[] {\n                \"projectUri\", //$NON-NLS-1$\n                projectUri,\n                \"storedQueryPath\", //$NON-NLS-1$\n                queryPath\n            }, null);\n        }\n    }\n    /**\n     * Gets a Query Editor Url.\n     *\n     * @param projectUri\n     *        URI of the project that this query is in\n     * @param queryPath\n     *        Path of the query to run (e.g. ProjectName/My Queries/Query1).\n     * @return A Query Editor url.\n     */\n    public URI getWorkItemQueryEditorURL(final String projectUri, final String queryPath) {\n        return getWorkItemQueryEditorURL(projectUri, queryPath, AccessMappingMonikers.PUBLIC_ACCESS_MAPPING);\n    }\n    /**\n     * Gets a Query Editor Url.\n     *\n     * @param projectUri\n     *        URI of the project that this query is in\n     * @param queryPath\n     *        Path of the query to run (e.g. ProjectName/My Queries/Query1).\n     * @param accessMappingMoniker\n     *        A moniker for the desired access mapping.\n     * @return A Query Editor url.\n     */\n    public URI getWorkItemQueryEditorURL(\n        final String projectUri,\n        final String queryPath,\n        final String accessMappingMoniker) {\n        if (queryPath == null || queryPath.length() == 0) {\n            throw new IllegalArgumentException(\"The queryPath cannot be null or empty.\"); //$NON-NLS-1$\n        }\n        return getPageURL(accessMappingMoniker, \"qe.aspx\", formatQueryString(projectUri, \"path\", queryPath)); //$NON-NLS-1$ //$NON-NLS-2$\n    }\n    /**\n     * Gets a view build details url.\n     *\n     * @param buildUri\n     *        Build uri\n     */\n    public URI getViewBuildDetailsURL(final String buildUri) {\n        return getViewBuildDetailsURI(buildUri, AccessMappingMonikers.PUBLIC_ACCESS_MAPPING);\n    }\n    public URI getViewBuildDetailsURI(final String buildUri, final String accessMappingMoniker) {\n        Check.notNullOrEmpty(buildUri, \"buildUri\"); //$NON-NLS-1$\n        return buildURL(\n            ServiceInterfaceNames.TSWA_VIEW_BUILD_DETAILS,\n            accessMappingMoniker,\n            \"buildUri\", //$NON-NLS-1$\n            buildUri,\n            null);\n    }\n    public URI getBuildDefinitionVNextURI(final String projectName, final String action) {\n        return getBuildDefinitionVNextURI(projectName, action, 0);\n    }\n    public URI getBuildDefinitionVNextURI(final String projectName, final String action, final int definitionId) {\n        Check.notNullOrEmpty(projectName, \"projectName\"); //$NON-NLS-1$\n        Check.notNullOrEmpty(action, \"action\"); //$NON-NLS-1$\n        final List<String> queryParameters = new ArrayList<String>();\n        queryParameters.add(\"projectname=\" + projectName); //$NON-NLS-1$\n        queryParameters.add(\"definitionid=\" + definitionId); //$NON-NLS-1$\n        queryParameters.add(\"action=\" + action); //$NON-NLS-1$\n        // queryParameters.add(\"sender=tee\"); //$NON-NLS-1$\n        /*\n         * Current Location Service does not have any entry for vNext build\n         * definition services. We have to reuse the one for ViewBuildDetails\n         * that returns the template like\n         * 'https://tee.visualstudio.com/web/build.aspx?pcguid={\n         * projectCollectionGuid}&builduri={buildUri}'.\n         *\n         * But we do not pass replacement parameters to the call to 'buildURL',\n         * and thus the 'builduri={buildUri}' parameter template will be removed\n         * from the returned URI.\n         */\n        return buildURL(\n            ServiceInterfaceNames.TSWA_VIEW_BUILD_DETAILS,\n            AccessMappingMonikers.PUBLIC_ACCESS_MAPPING,\n            null,\n            queryParameters);\n    }\n    public URI getBuildDefinitionVNextURI(\n        final String projectName,\n        final String action,\n        final String definitionTemplateId) {\n        Check.notNullOrEmpty(projectName, \"projectName\"); //$NON-NLS-1$\n        Check.notNullOrEmpty(action, \"action\"); //$NON-NLS-1$\n        final List<String> queryParameters = new ArrayList<String>();\n        queryParameters.add(\"projectname=\" + projectName); //$NON-NLS-1$\n        queryParameters.add(\"definitionid=0\"); //$NON-NLS-1$\n        queryParameters.add(\"templateid=\" + definitionTemplateId); //$NON-NLS-1$\n        queryParameters.add(\"action=\" + action); //$NON-NLS-1$\n        // queryParameters.add(\"sender=tee\"); //$NON-NLS-1$\n        /*\n         * Current Location Service does not have any entry for vNext build\n         * definition services. We have to reuse the one for ViewBuildDetails\n         * that returns the template like\n         * 'https://tee.visualstudio.com/web/build.aspx?pcguid={\n         * projectCollectionGuid}&builduri={buildUri}'.\n         *\n         * But we do not pass replacement parameters to the call to 'buildURL',\n         * and thus the 'builduri={buildUri}' parameter template will be removed\n         * from the returned URI.\n         */\n        return buildURL(\n            ServiceInterfaceNames.TSWA_VIEW_BUILD_DETAILS,\n            AccessMappingMonikers.PUBLIC_ACCESS_MAPPING,\n            null,\n            queryParameters);\n    }\n    private String formatQueryString(final String parameterName, final String parameterValue) {\n        return formatQueryString(null, new String[] {\n            parameterName,\n            parameterValue\n        });\n    }\n    private String formatQueryString(final String projectUri, final String parameterName, final String parameterValue) {\n        return formatQueryString(projectUri, new String[] {\n            parameterName,\n            parameterValue\n        });\n    }\n<fim_suffix>    private String formatQueryString(final String projectUri, final String[] args) {\n        final StringBuffer result = new StringBuffer();\n        if (projectUri != null) {\n            if (isCompatibleMode) {\n                result.append(\"puri=\"); //$NON-NLS-1$\n                result.append(URLEncode.encode(projectUri.toString()));\n            } else {\n                final ArtifactID artifactID = new ArtifactID(projectUri);\n                result.append(\"pguid=\"); //$NON-NLS-1$\n                result.append(URLEncode.encode(artifactID.getToolSpecificID()));\n            }\n        } else if (!isCompatibleMode) {\n            result.append(\"pcguid=\"); //$NON-NLS-1$\n            result.append(URLEncode.encode(collectionId.toString()));\n        }\n        for (int i = 0; i < args.length - 1; i += 2) {\n            final String name = args[i];\n            final String value = args[i + 1];\n            if (name != null) {\n                if (result.length() > 0) {\n                    result.append('&');\n                }\n                result.append(URLEncode.encode(name));\n            }\n            if (value != null) {\n                if (name != null) {\n                    result.append('=');\n                } else if (result.length() > 0) {\n                    result.append('&');\n                }\n                result.append(URLEncode.encode(value));\n            }\n        }\n        return result.toString();\n    }<fim_middle>// function below is long method\n"}