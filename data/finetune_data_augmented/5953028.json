{"text": "<fim_prefix>/*******************************************************************************\n * Copyright 2010-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\").\n * You may not use this file except in compliance with the License.\n * A copy of the License is located at\n *\n *  http://aws.amazon.com/apache2.0\n *\n * or in the \"license\" file accompanying this file. This file is distributed\n * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n * express or implied. See the License for the specific language governing\n * permissions and limitations under the License.\n ******************************************************************************/\n\npackage sample;\n\nimport java.util.List;\n\nimport org.apache.commons.logging.Log;\nimport org.apache.commons.logging.LogFactory;\n\nimport com.amazonaws.services.cloudtrail.processinglibrary.interfaces.EventsProcessor;\nimport com.amazonaws.services.cloudtrail.processinglibrary.model.CloudTrailEvent;\n\npublic class SampleEventsProcessor implements EventsProcessor {\n    private static final Log logger = LogFactory.getLog(SampleEventsProcessor.class);\n\n<fim_suffix>    public void process(List<CloudTrailEvent> events) {\n        int i = 0;\n        for (CloudTrailEvent event : events) {\n            validateEvent(event);\n            logger.info(String.format(\"Process event %d : %s\", i++, event.getEventData()));\n        }\n    }\n\n    /**\n     * Do simple validation before processing.\n     *\n     * @param event to validate\n     */\n    private void validateEvent(CloudTrailEvent event) {\n        if (event.getEventData().getAccountId() == null) {\n            logger.error(String.format(\"Event %s doesn't have account ID.\", event.getEventData()));\n        }\n\n        // more validation here...\n    }\n}<fim_middle>// function below has no smell\n"}