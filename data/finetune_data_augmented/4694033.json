{"text": "<fim_prefix>package org.apache.helix.common.caches;\n\nimport org.apache.helix.PropertyKey;\nimport org.apache.helix.model.CurrentState;\n\nimport java.util.Collections;\nimport java.util.HashMap;\nimport java.util.HashSet;\nimport java.util.Map;\nimport java.util.Set;\n\n<fim_suffix>public class CurrentStateSnapshot extends AbstractDataSnapshot<CurrentState> {\n  private Set<PropertyKey> _updatedStateKeys = null;\n  private Map<PropertyKey, CurrentState> _prevStateMap = null;\n\n  public CurrentStateSnapshot(final Map<PropertyKey, CurrentState> currentStateMap) {\n    super(currentStateMap);\n  }\n\n  public CurrentStateSnapshot(final Map<PropertyKey, CurrentState> currentStateMap,\n      final Map<PropertyKey, CurrentState> prevStateMap, final Set<PropertyKey> updatedStateKeys) {\n    this(currentStateMap);\n    _updatedStateKeys = Collections.unmodifiableSet(new HashSet<>(updatedStateKeys));\n    _prevStateMap = Collections.unmodifiableMap(new HashMap<>(prevStateMap));\n  }\n\n  /**\n   * Return the end times of all recent changed current states update.\n   */\n  public Map<PropertyKey, Map<String, Long>> getNewCurrentStateEndTimes() {\n    Map<PropertyKey, Map<String, Long>> endTimeMap = new HashMap<>();\n    if (_updatedStateKeys != null && _prevStateMap != null) {\n      // Note if the prev state map is empty, this is the first time refresh.\n      // So the update is not considered as \"recent\" change.\n      for (PropertyKey propertyKey : _updatedStateKeys) {\n        CurrentState prevState = _prevStateMap.get(propertyKey);\n        CurrentState curState = _properties.get(propertyKey);\n\n        Map<String, Long> partitionUpdateEndTimes = null;\n        for (String partition : curState.getPartitionStateMap().keySet()) {\n          long newEndTime = curState.getEndTime(partition);\n          if (prevState == null || prevState.getEndTime(partition) < newEndTime) {\n            if (partitionUpdateEndTimes == null) {\n              partitionUpdateEndTimes = new HashMap<>();\n            }\n            partitionUpdateEndTimes.put(partition, newEndTime);\n          }\n        }\n\n        if (partitionUpdateEndTimes != null) {\n          endTimeMap.put(propertyKey, partitionUpdateEndTimes);\n        }\n      }\n    }\n    return endTimeMap;\n  }\n}<fim_middle>// class below has no smell\n"}