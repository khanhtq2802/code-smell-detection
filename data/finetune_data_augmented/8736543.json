{"text": "<fim_prefix>/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage org.apache.hadoop.metrics2;\n\nimport com.google.common.base.Objects;\nimport static com.google.common.base.Preconditions.*;\n\nimport org.apache.hadoop.classification.InterfaceAudience;\nimport org.apache.hadoop.classification.InterfaceStability;\n\n/**\n * Immutable tag for metrics (for grouping on host/queue/username etc.)\n */\n<fim_suffix>@InterfaceAudience.Public\n@InterfaceStability.Evolving\npublic class MetricsTag implements MetricsInfo {\n  private final MetricsInfo info;\n  private final String value;\n\n  /**\n   * Construct the tag with name, description and value\n   * @param info  of the tag\n   * @param value of the tag\n   */\n  public MetricsTag(MetricsInfo info, String value) {\n    this.info = checkNotNull(info, \"tag info\");\n    this.value = value;\n  }\n\n  @Override public String name() {\n    return info.name();\n  }\n\n  @Override public String description() {\n    return info.description();\n  }\n\n  /**\n   * @return the info object of the tag\n   */\n  public MetricsInfo info() {\n    return info;\n  }\n\n  /**\n   * Get the value of the tag\n   * @return  the value\n   */\n  public String value() {\n    return value;\n  }\n\n  @Override public boolean equals(Object obj) {\n    if (obj instanceof MetricsTag) {\n      final MetricsTag other = (MetricsTag) obj;\n      return Objects.equal(info, other.info()) &&\n             Objects.equal(value, other.value());\n    }\n    return false;\n  }\n\n  @Override public int hashCode() {\n    return Objects.hashCode(info, value);\n  }\n\n  @Override public String toString() {\n    return Objects.toStringHelper(this)\n        .add(\"info\", info)\n        .add(\"value\", value())\n        .toString();\n  }\n}<fim_middle>// class below is data class\n"}