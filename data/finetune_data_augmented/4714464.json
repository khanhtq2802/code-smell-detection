{"text": "<fim_prefix>/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage org.apache.atlas.discovery;\n\nimport org.apache.atlas.AtlasException;\n\n/**\n * Lineage service interface.\n */\n<fim_suffix>public interface LineageService {\n\n    /**\n     * Return the lineage outputs graph for the given datasetName.\n     *\n     * @param datasetName datasetName\n     * @return Outputs Graph as JSON\n     */\n    String getOutputsGraph(String datasetName) throws AtlasException;\n\n    /**\n     * Return the lineage inputs graph for the given datasetName.\n     *\n     * @param datasetName datasetName\n     * @return Inputs Graph as JSON\n     */\n    String getInputsGraph(String datasetName) throws AtlasException;\n\n    /**\n     * Return the lineage inputs graph for the given entity id.\n     *\n     * @param guid entity id\n     * @return Inputs Graph as JSON\n     */\n    String getInputsGraphForEntity(String guid) throws AtlasException;\n\n    /**\n     * Return the lineage inputs graph for the given entity id.\n     *\n     * @param guid entity id\n     * @return Inputs Graph as JSON\n     */\n    String getOutputsGraphForEntity(String guid) throws AtlasException;\n\n    /**\n     * Return the schema for the given datasetName.\n     *\n     * @param datasetName datasetName\n     * @return Schema as JSON\n     */\n    String getSchema(String datasetName) throws AtlasException;\n\n    /**\n     * Return the schema for the given entity id.\n     *\n     * @param guid tableName\n     * @return Schema as JSON\n     */\n    String getSchemaForEntity(String guid) throws AtlasException;\n}<fim_middle>// class below has no smell\n"}