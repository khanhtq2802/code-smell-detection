{"text": "<fim_prefix>/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements. See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership. The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\npackage org.apache.deltaspike.jsf.impl.injection;\n\nimport javax.enterprise.context.spi.CreationalContext;\nimport javax.enterprise.inject.spi.Bean;\nimport java.io.Serializable;\n\nclass DependentBeanEntry<T> implements Serializable\n{\n    private static final long serialVersionUID = 7148484695430831322L;\n\n    private final T instance;\n    private final Bean<?> bean;\n    private final CreationalContext<T> creationalContext;\n\n<fim_suffix>    DependentBeanEntry(T instance, Bean<?> bean, CreationalContext<T> creationalContext)\n    {\n        this.instance = instance;\n        this.bean = bean;\n        this.creationalContext = creationalContext;\n    }\n\n    T getInstance()\n    {\n        return instance;\n    }\n\n    Bean<?> getBean()\n    {\n        return bean;\n    }\n\n    CreationalContext<T> getCreationalContext()\n    {\n        return creationalContext;\n    }\n}<fim_middle>// function below has no smell\n"}