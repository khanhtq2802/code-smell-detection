{"text": "<fim_prefix>    };\n    public static final int RULE_STRING=6;\n    public static final int RULE_SL_COMMENT=8;\n    public static final int T__19=19;\n    public static final int T__15=15;\n    public static final int T__16=16;\n    public static final int T__17=17;\n    public static final int T__18=18;\n    public static final int T__11=11;\n    public static final int T__12=12;\n    public static final int T__13=13;\n    public static final int T__14=14;\n    public static final int EOF=-1;\n    public static final int T__30=30;\n    public static final int T__31=31;\n    public static final int RULE_ID=4;\n    public static final int RULE_WS=9;\n    public static final int RULE_ANY_OTHER=10;\n    public static final int T__26=26;\n    public static final int T__27=27;\n    public static final int T__28=28;\n    public static final int RULE_INT=5;\n    public static final int T__29=29;\n    public static final int T__22=22;\n    public static final int RULE_ML_COMMENT=7;\n    public static final int T__23=23;\n    public static final int T__24=24;\n    public static final int T__25=25;\n    public static final int T__20=20;\n    public static final int T__21=21;\n    // delegates\n    // delegators\n        public InternalParametersTestLanguageExParser(TokenStream input) {\n            this(input, new RecognizerSharedState());\n        }\n        public InternalParametersTestLanguageExParser(TokenStream input, RecognizerSharedState state) {\n            super(input, state);\n        }\n    public String[] getTokenNames() { return InternalParametersTestLanguageExParser.tokenNames; }\n    public String getGrammarFileName() { return \"InternalParametersTestLanguageEx.g\"; }\n     \tprivate ParametersTestLanguageExGrammarAccess grammarAccess;\n        public InternalParametersTestLanguageExParser(TokenStream input, ParametersTestLanguageExGrammarAccess grammarAccess) {\n            this(input);\n            this.grammarAccess = grammarAccess;\n            registerRules(grammarAccess.getGrammar());\n        }\n        @Override\n        protected String getFirstRuleName() {\n        \treturn \"ParserRuleParameters\";\n       \t}\n       \t@Override\n       \tprotected ParametersTestLanguageExGrammarAccess getGrammarAccess() {\n       \t\treturn grammarAccess;\n       \t}\n    // $ANTLR start \"entryRuleParserRuleParameters\"\n    // InternalParametersTestLanguageEx.g:64:1: entryRuleParserRuleParameters returns [EObject current=null] : iv_ruleParserRuleParameters= ruleParserRuleParameters EOF ;\n    public final EObject entryRuleParserRuleParameters() throws RecognitionException {\n        EObject current = null;\n        EObject iv_ruleParserRuleParameters = null;\n        try {\n            // InternalParametersTestLanguageEx.g:64:61: (iv_ruleParserRuleParameters= ruleParserRuleParameters EOF )\n            // InternalParametersTestLanguageEx.g:65:2: iv_ruleParserRuleParameters= ruleParserRuleParameters EOF\n            {\n            if ( state.backtracking==0 ) {\n               newCompositeNode(grammarAccess.getParserRuleParametersRule()); \n            }\n            pushFollow(FollowSets000.FOLLOW_1);\n            iv_ruleParserRuleParameters=ruleParserRuleParameters();\n            state._fsp--;\n            if (state.failed) return current;\n            if ( state.backtracking==0 ) {\n               current =iv_ruleParserRuleParameters; \n            }\n            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;\n            }\n        }\n            catch (RecognitionException re) {\n                recover(input,re);\n                appendSkippedTokens();\n            }\n        finally {\n        }\n        return current;\n    }\n    // $ANTLR end \"entryRuleParserRuleParameters\"\n    // $ANTLR start \"ruleParserRuleParameters\"\n    // InternalParametersTestLanguageEx.g:71:1: ruleParserRuleParameters returns [EObject current=null] : this_ParserRuleParameters_0= superParserRuleParameters ;\n    public final EObject ruleParserRuleParameters() throws RecognitionException {\n        EObject current = null;\n        EObject this_ParserRuleParameters_0 = null;\n        \tenterRule();\n        try {\n            // InternalParametersTestLanguageEx.g:77:2: (this_ParserRuleParameters_0= superParserRuleParameters )\n            // InternalParametersTestLanguageEx.g:78:2: this_ParserRuleParameters_0= superParserRuleParameters\n            {\n            if ( state.backtracking==0 ) {\n              \t\tnewCompositeNode(grammarAccess.getParserRuleParametersAccess().getParserRuleParametersParserRuleCall());\n            }\n            pushFollow(FollowSets000.FOLLOW_2);\n            this_ParserRuleParameters_0=superParserRuleParameters();\n            state._fsp--;\n            if (state.failed) return current;\n            if ( state.backtracking==0 ) {\n              \t\tcurrent = this_ParserRuleParameters_0;\n              \t\tafterParserOrEnumRuleCall();\n            }\n            }\n            if ( state.backtracking==0 ) {\n              \tleaveRule();\n            }\n        }\n            catch (RecognitionException re) {\n                recover(input,re);\n                appendSkippedTokens();\n            }\n        finally {\n        }\n        return current;\n    }\n    // $ANTLR end \"ruleParserRuleParameters\"\n    // $ANTLR start \"entryRuleScenario1\"\n    // InternalParametersTestLanguageEx.g:89:1: entryRuleScenario1 returns [EObject current=null] : iv_ruleScenario1= ruleScenario1 EOF ;\n    public final EObject entryRuleScenario1() throws RecognitionException {\n        EObject current = null;\n        EObject iv_ruleScenario1 = null;\n        try {\n            // InternalParametersTestLanguageEx.g:89:50: (iv_ruleScenario1= ruleScenario1 EOF )\n            // InternalParametersTestLanguageEx.g:90:2: iv_ruleScenario1= ruleScenario1 EOF\n            {\n            if ( state.backtracking==0 ) {\n               newCompositeNode(grammarAccess.getScenario1Rule()); \n            }\n            pushFollow(FollowSets000.FOLLOW_1);\n            iv_ruleScenario1=ruleScenario1();\n            state._fsp--;\n            if (state.failed) return current;\n            if ( state.backtracking==0 ) {\n               current =iv_ruleScenario1; \n            }\n            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;\n            }\n        }\n            catch (RecognitionException re) {\n                recover(input,re);\n                appendSkippedTokens();\n            }\n        finally {\n        }\n        return current;\n    }\n    // $ANTLR end \"entryRuleScenario1\"\n    // $ANTLR start \"ruleScenario1\"\n    // InternalParametersTestLanguageEx.g:96:1: ruleScenario1 returns [EObject current=null] : this_Scenario1_0= superScenario1 ;\n<fim_suffix>    public final EObject ruleScenario1() throws RecognitionException {\n        EObject current = null;\n        EObject this_Scenario1_0 = null;\n        \tenterRule();\n        try {\n            // InternalParametersTestLanguageEx.g:102:2: (this_Scenario1_0= superScenario1 )\n            // InternalParametersTestLanguageEx.g:103:2: this_Scenario1_0= superScenario1\n            {\n            if ( state.backtracking==0 ) {\n              \t\tnewCompositeNode(grammarAccess.getScenario1Access().getScenario1ParserRuleCall());\n            }\n            pushFollow(FollowSets000.FOLLOW_2);\n            this_Scenario1_0=superScenario1();\n            state._fsp--;\n            if (state.failed) return current;\n            if ( state.backtracking==0 ) {\n              \t\tcurrent = this_Scenario1_0;\n              \t\tafterParserOrEnumRuleCall();\n            }\n            }\n            if ( state.backtracking==0 ) {\n              \tleaveRule();\n            }\n        }\n            catch (RecognitionException re) {\n                recover(input,re);\n                appendSkippedTokens();\n            }\n        finally {\n        }\n        return current;\n    }<fim_middle>// function below has no smell\n"}