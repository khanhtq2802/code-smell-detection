{"text": "<fim_prefix>/*******************************************************************************\n * Copyright (c) 2013-2017 Lorenzo Bettini.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *   Lorenzo Bettini - Initial contribution and API\n *******************************************************************************/\n\npackage org.eclipse.xsemantics.example.lambda.typesystem.lambda.rules;\n\nimport it.xtypes.runtime.*;\n\n<fim_suffix>public class UnifyBasicTypeVariableTypeRule extends LambdaTypeSystemRule {\n\n\tprotected Variable<org.eclipse.xsemantics.example.lambda.lambda.TypeVariable> var_v1 = new Variable<org.eclipse.xsemantics.example.lambda.lambda.TypeVariable>(\n\t\t\tcreateEClassifierType(basicPackage.getTypeVariable()));\n\n\tprotected Variable<org.eclipse.xsemantics.example.lambda.lambda.BasicType> var_b = new Variable<org.eclipse.xsemantics.example.lambda.lambda.BasicType>(\n\t\t\tcreateEClassifierType(basicPackage.getBasicType()));\n\n\tprotected Variable<org.eclipse.xsemantics.example.lambda.lambda.Type> var_t1 = new Variable<org.eclipse.xsemantics.example.lambda.lambda.Type>(\n\t\t\tcreateEClassifierType(basicPackage.getType()));\n\n\tprotected TypingJudgmentEnvironment env_G = new TypingJudgmentEnvironment();\n\n\tpublic UnifyBasicTypeVariableTypeRule() {\n\t\tthis(\"UnifyBasicTypeVariable\", \"|-\", \"==\");\n\t}\n\n\tpublic UnifyBasicTypeVariableTypeRule(String ruleName,\n\t\t\tString typeJudgmentSymbol, String typeStatementRelation) {\n\t\tsuper(ruleName, typeJudgmentSymbol, typeStatementRelation);\n\t}\n\n\t@Override\n\tpublic Variable<org.eclipse.xsemantics.example.lambda.lambda.BasicType> getLeft() {\n\t\treturn var_b;\n\t}\n\n\t@Override\n\tpublic Variable<org.eclipse.xsemantics.example.lambda.lambda.Type> getRight() {\n\t\treturn var_t1;\n\t}\n\n\t@Override\n\tpublic TypingJudgmentEnvironment getEnvironment() {\n\t\treturn env_G;\n\t}\n\n\t@Override\n\tpublic void setEnvironment(TypingJudgmentEnvironment environment) {\n\t\tif (environment != null)\n\t\t\tenv_G = environment;\n\t}\n\n\t@Override\n\tpublic RuntimeRule newInstance() {\n\t\treturn new UnifyBasicTypeVariableTypeRule(\"UnifyBasicTypeVariable\",\n\t\t\t\t\"|-\", \"==\");\n\t}\n\n\t@Override\n\tpublic void applyImpl() throws RuleFailedException {\n\n\t\tvar_v1 = new Variable<org.eclipse.xsemantics.example.lambda.lambda.TypeVariable>(\n\t\t\t\tcreateEClassifierType(basicPackage.getTypeVariable()), castto(\n\t\t\t\t\t\tvar_t1.getValue(),\n\t\t\t\t\t\torg.eclipse.xsemantics.example.lambda.lambda.TypeVariable.class));\n\n\t\tapplyMappingRule(env_G, var_v1, var_b);\n\n\t\t// final check for variable initialization\n\n\t}\n\n}<fim_middle>// class below is data class\n"}