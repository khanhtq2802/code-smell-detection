{"text": "<fim_prefix>/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *  http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\npackage com.opensymphony.xwork2.config.entities;\n\nimport com.opensymphony.xwork2.util.location.Located;\nimport com.opensymphony.xwork2.util.location.Location;\n\nimport java.io.Serializable;\nimport java.util.Collections;\nimport java.util.LinkedHashMap;\nimport java.util.Map;\n\n\n/**\n * Configuration class for result types.\n *\n * <p>\n * In the xml configuration file this is defined as the <code>result-type</code> tag.\n * </p>\n *\n * @author Mike\n * @author Rainer Hermanns\n * @author Neo\n */\npublic class ResultTypeConfig extends Located implements Serializable {\n\n    protected String className;\n    protected String name;\n    protected String defaultResultParam;\n    protected Map<String,String> params;\n\n    protected ResultTypeConfig(String name, String className) {\n        this.name = name;\n        this.className = className;\n        params = new LinkedHashMap<>();\n    }\n\n    protected ResultTypeConfig(ResultTypeConfig orig) {\n        this.name = orig.name;\n        this.className = orig.className;\n        this.defaultResultParam = orig.defaultResultParam;\n        this.params = new LinkedHashMap<>(orig.params);\n        this.location = orig.location;\n    }\n\n    public String getDefaultResultParam() {\n        return this.defaultResultParam;\n    }\n\n    public String getClassName() {\n        return className;\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public Map<String,String> getParams() {\n        return Collections.unmodifiableMap(this.params);\n    }\n\n    @Override\n    public boolean equals(Object o) {\n        if (this == o) return true;\n        if (o == null || getClass() != o.getClass()) return false;\n\n        final ResultTypeConfig that = (ResultTypeConfig) o;\n\n        if (className != null ? !className.equals(that.className) : that.className != null) return false;\n        if (name != null ? !name.equals(that.name) : that.name != null) return false;\n        if (params != null ? !params.equals(that.params) : that.params != null) return false;\n\n        return true;\n    }\n\n    @Override\n    public int hashCode() {\n        int result;\n        result = (className != null ? className.hashCode() : 0);\n        result = 29 * result + (name != null ? name.hashCode() : 0);\n        result = 29 * result + (params != null ? params.hashCode() : 0);\n        return result;\n    }\n\n    @Override\n    public String toString() {\n        return \"ResultTypeConfig: [\" + name + \"] => [\" + className + \"] \" +\n                \"with defaultParam [\" + defaultResultParam + \"] with params \" + params;\n    }\n\n    /**\n     * The builder for this object.  An instance of this object is the only way to construct a new instance.  The\n     * purpose is to enforce the immutability of the object.  The methods are structured in a way to support chaining.\n     * After setting any values you need, call the {@link #build()} method to create the object.\n     */\n<fim_suffix>    public static final class Builder {\n        protected ResultTypeConfig target;\n\n        public Builder(String name, String className) {\n            target = new ResultTypeConfig(name, className);\n        }\n\n        public Builder(ResultTypeConfig orig) {\n            target = new ResultTypeConfig(orig);\n        }\n\n        public Builder name(String name) {\n            target.name = name;\n            return this;\n        }\n\n        public Builder className(String name) {\n            target.className = name;\n            return this;\n        }\n\n         public Builder addParam(String name, String value) {\n            target.params.put(name, value);\n            return this;\n        }\n\n        public Builder addParams(Map<String,String> params) {\n            target.params.putAll(params);\n            return this;\n        }\n\n        public Builder defaultResultParam(String defaultResultParam) {\n            target.defaultResultParam = defaultResultParam;\n            return this;\n        }\n\n        public Builder location(Location loc) {\n            target.location = loc;\n            return this;\n        }\n\n        public ResultTypeConfig build() {\n            ResultTypeConfig result = target;\n            target = new ResultTypeConfig(target);\n            return result;\n        }\n    }\n}<fim_middle>// class below has no smell\n"}