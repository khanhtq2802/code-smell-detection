{"text": "<fim_prefix>//\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n//\n\npackage com.cloud.hypervisor.xenserver.resource.wrapper.xenbase;\n\nimport org.apache.log4j.Logger;\nimport org.apache.xmlrpc.XmlRpcException;\n\nimport com.cloud.agent.api.Answer;\nimport com.cloud.agent.api.OvsFetchInterfaceAnswer;\nimport com.cloud.agent.api.OvsFetchInterfaceCommand;\nimport com.cloud.hypervisor.xenserver.resource.CitrixResourceBase;\nimport com.cloud.hypervisor.xenserver.resource.XsLocalNetwork;\nimport com.cloud.resource.CommandWrapper;\nimport com.cloud.resource.ResourceWrapper;\nimport com.cloud.utils.exception.CloudRuntimeException;\nimport com.xensource.xenapi.Connection;\nimport com.xensource.xenapi.PIF;\nimport com.xensource.xenapi.Types.BadServerResponse;\nimport com.xensource.xenapi.Types.XenAPIException;\n\n<fim_suffix>@ResourceWrapper(handles =  OvsFetchInterfaceCommand.class)\npublic final class CitrixOvsFetchInterfaceCommandWrapper extends CommandWrapper<OvsFetchInterfaceCommand, Answer, CitrixResourceBase> {\n\n    private static final Logger s_logger = Logger.getLogger(CitrixOvsFetchInterfaceCommandWrapper.class);\n\n    @Override\n    public Answer execute(final OvsFetchInterfaceCommand command, final CitrixResourceBase citrixResourceBase) {\n        String label = command.getLabel();\n        //FIXME: this is a tricky to pass the network checking in XCP. I temporary get default label from Host.\n        if (citrixResourceBase.isXcp()) {\n            label = citrixResourceBase.getLabel();\n        }\n        s_logger.debug(\"Will look for network with name-label:\" + label + \" on host \" + citrixResourceBase.getHost().getIp());\n        final Connection conn = citrixResourceBase.getConnection();\n        try {\n            final XsLocalNetwork nw = citrixResourceBase.getNetworkByName(conn, label);\n            if(nw == null) {\n                throw new CloudRuntimeException(\"Unable to locate the network with name-label: \" + label + \" on host: \" + citrixResourceBase.getHost().getIp());\n            }\n            s_logger.debug(\"Network object:\" + nw.getNetwork().getUuid(conn));\n            final PIF pif = nw.getPif(conn);\n            final PIF.Record pifRec = pif.getRecord(conn);\n            s_logger.debug(\"PIF object:\" + pifRec.uuid + \"(\" + pifRec.device + \")\");\n            return new OvsFetchInterfaceAnswer(command, true, \"Interface \" + pifRec.device + \" retrieved successfully\", pifRec.IP, pifRec.netmask, pifRec.MAC);\n        } catch (final BadServerResponse e) {\n            s_logger.error(\"An error occurred while fetching the interface for \" + label + \" on host \" + citrixResourceBase.getHost().getIp(), e);\n            return new OvsFetchInterfaceAnswer(command, false, \"EXCEPTION:\" + e.getMessage());\n        } catch (final XenAPIException e) {\n            s_logger.error(\"An error occurred while fetching the interface for \" + label + \" on host \" + citrixResourceBase.getHost().getIp(), e);\n            return new OvsFetchInterfaceAnswer(command, false, \"EXCEPTION:\" + e.getMessage());\n        } catch (final XmlRpcException e) {\n            s_logger.error(\"An error occurred while fetching the interface for \" + label + \" on host \" + citrixResourceBase.getHost().getIp(), e);\n            return new OvsFetchInterfaceAnswer(command, false, \"EXCEPTION:\" + e.getMessage());\n        }\n    }\n}<fim_middle>// class below has no smell\n"}