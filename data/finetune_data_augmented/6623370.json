{"text": "<fim_prefix>package com.epam.wilma.core.processor.entity;\n/*==========================================================================\nCopyright since 2013, EPAM Systems\n\nThis file is part of Wilma.\n\nWilma is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nWilma is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Wilma.  If not, see <http://www.gnu.org/licenses/>.\n===========================================================================*/\n\nimport java.io.ByteArrayInputStream;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Component;\n\nimport com.epam.wilma.compression.base64.Base64Decoder;\nimport com.epam.wilma.domain.exception.ApplicationException;\nimport com.epam.wilma.domain.http.WilmaHttpEntity;\n\n/**\n * Processes a {@link WilmaHttpEntity} by decoding it's body from base64.\n * This only makes sense if the {@link WilmaHttpEntity} is a <tt>WilmaHttpResponse</tt>, because\n * only responses come encoded with base64 from underlying proxy implementation.\n * @author Tunde_Kovacs\n *\n */\n@Component\npublic class Base64DecoderProcessor extends ProcessorBase {\n\n    private static final String CONTENT_TYPE = \"Content-Type\";\n    private static final String FAST_INFOSET = \"fastinfoset\";\n\n    @Autowired\n    private Base64Decoder decompressor;\n\n    @Override\n    public void process(final WilmaHttpEntity entity) throws ApplicationException {\n        if (isBinaryContent(entity)) {\n            String responseBody = entity.getBody();\n            byte[] result = decompressor.decode(responseBody);\n            entity.setInputStream(getInputStream(result));\n        }\n    }\n\n    private boolean isBinaryContent(final WilmaHttpEntity entity) {\n        String contentType = entity.getHeader(CONTENT_TYPE);\n        return contentType != null && contentType.contains(FAST_INFOSET);\n    }\n\n<fim_suffix>    private ByteArrayInputStream getInputStream(final byte[] bytes) {\n        return new ByteArrayInputStream(bytes);\n    }\n}<fim_middle>// function below has no smell\n"}