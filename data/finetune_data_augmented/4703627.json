{"text": "<fim_prefix>/*\n * ====================================================================\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n * ====================================================================\n *\n * This software consists of voluntary contributions made by many\n * individuals on behalf of the Apache Software Foundation.  For more\n * information on the Apache Software Foundation, please see\n * <http://www.apache.org/>.\n *\n */\n\npackage org.apache.hc.core5.http.impl.nio;\n\nimport org.apache.hc.core5.http.HttpException;\nimport org.apache.hc.core5.http.HttpResponse;\nimport org.apache.hc.core5.http.HttpResponseFactory;\nimport org.apache.hc.core5.http.config.H1Config;\nimport org.apache.hc.core5.http.message.LineParser;\nimport org.apache.hc.core5.http.message.StatusLine;\nimport org.apache.hc.core5.util.Args;\nimport org.apache.hc.core5.util.CharArrayBuffer;\n\n/**\n * Default {@link org.apache.hc.core5.http.nio.NHttpMessageParser} implementation for {@link HttpResponse}s.\n *\n * @since 4.1\n */\n<fim_suffix>public class DefaultHttpResponseParser<T extends HttpResponse> extends AbstractMessageParser<T> {\n\n    private final HttpResponseFactory<T> responseFactory;\n\n    /**\n     * Creates an instance of DefaultHttpResponseParser.\n     *\n     * @param responseFactory the response factory.\n     * @param parser the line parser. If {@code null}\n     *   {@link org.apache.hc.core5.http.message.LazyLineParser#INSTANCE} will be used.\n     * @param h1Config Message h1Config. If {@code null}\n     *   {@link H1Config#DEFAULT} will be used.\n     *\n     * @since 4.3\n     */\n    public DefaultHttpResponseParser(\n            final HttpResponseFactory<T> responseFactory,\n            final LineParser parser,\n            final H1Config h1Config) {\n        super(parser, h1Config);\n        this.responseFactory = Args.notNull(responseFactory, \"Response factory\");\n    }\n\n    /**\n     * @since 4.3\n     */\n    public DefaultHttpResponseParser(final HttpResponseFactory<T> responseFactory, final H1Config h1Config) {\n        this(responseFactory, null, h1Config);\n    }\n\n    /**\n     * @since 4.3\n     */\n    public DefaultHttpResponseParser(final HttpResponseFactory<T> responseFactory) {\n        this(responseFactory, null);\n    }\n\n    @Override\n    protected T createMessage(final CharArrayBuffer buffer) throws HttpException {\n        final StatusLine statusLine = getLineParser().parseStatusLine(buffer);\n        final T response = this.responseFactory.newHttpResponse(statusLine.getStatusCode(), statusLine.getReasonPhrase());\n        response.setVersion(statusLine.getProtocolVersion());\n        return response;\n    }\n\n}<fim_middle>// class below has no smell\n"}