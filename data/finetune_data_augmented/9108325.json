{"text": "<fim_prefix>/*******************************************************************************\n * Copyright (c) 2005 Actuate Corporation.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *  Actuate Corporation  - initial API and implementation\n *******************************************************************************/\n\npackage org.eclipse.birt.report.designer.data.ui.actions;\n\nimport org.eclipse.birt.report.designer.data.ui.datasource.AdvancedDataSourceEditor;\nimport org.eclipse.birt.report.designer.data.ui.datasource.DataSourceEditor;\nimport org.eclipse.birt.report.designer.internal.ui.util.Policy;\nimport org.eclipse.birt.report.designer.internal.ui.views.actions.AbstractElementAction;\nimport org.eclipse.birt.report.designer.nls.Messages;\nimport org.eclipse.birt.report.model.api.DataSourceHandle;\nimport org.eclipse.birt.report.model.api.ScriptDataSourceHandle;\nimport org.eclipse.jface.dialogs.IDialogConstants;\nimport org.eclipse.ui.PlatformUI;\n\n/**\n * TODO: Please document\n * \n * @version $Revision$ $Date$\n */\npublic class EditDataSourceAction extends AbstractElementAction\n{\n\n\tpublic static final String ID = \"org.eclipse.birt.report.designer.ui.actions.EditDataSourceAction\"; //$NON-NLS-1$\n\n\t/**\n\t * @param selectedObject\n\t */\n\tpublic EditDataSourceAction( Object selectedObject )\n\t{\n\t\tsuper( selectedObject );\n\t\tsetId( ID );\n\t}\n\n\t/**\n\t * Returns whether the EditDataSource Action is enabled \n\t * @param selectedObject\n\t * @param text\n\t */\n\tpublic EditDataSourceAction( Object selectedObject, String text )\n\t{\n\t\tsuper( selectedObject, text );\n\t\tsetId( ID );\n\t}\n\n\t/*\n\t * (non-Javadoc)\n\t * \n\t * @see org.eclipse.birt.report.designer.internal.ui.views.actions.AbstractElementAction#doAction()\n\t */\n<fim_suffix>\tprotected boolean doAction( ) throws Exception\n\t{\n\t\tif ( Policy.TRACING_ACTIONS )\n\t\t{\n\t\t\tSystem.out.println( \"Edit data source action >> Runs ...\" ); //$NON-NLS-1$\n\t\t}\n\t\tDataSourceHandle handle = (DataSourceHandle) getSelection( );\n\t\tDataSourceEditor dialog = new AdvancedDataSourceEditor( PlatformUI\n\t\t\t\t.getWorkbench( ).getDisplay( ).getActiveShell( ), handle );\n\n\t\treturn ( dialog.open( ) == IDialogConstants.OK_ID );\n\t}\n\n\t/*\n\t * (non-Javadoc)\n\t * \n\t * @see org.eclipse.birt.report.designer.internal.ui.views.actions.AbstractElementAction#getTransactionLabel()\n\t */\n\tprotected String getTransactionLabel( )\n\t{\n\t\treturn Messages\n\t\t\t\t.getFormattedString(\n\t\t\t\t\t\t\"datasource.edit\", new String[]{( (DataSourceHandle) getSelection( ) ).getName( )} ); //$NON-NLS-1$\n\t}\n\n\t/*\n\t * (non-Javadoc)\n\t * \n\t * @see org.eclipse.jface.action.Action#isEnabled()\n\t */\n\tpublic boolean isEnabled( )\n\t{\n\t\tif ( !( getSelection( ) instanceof ScriptDataSourceHandle )\n\t\t\t\t&& ( (DataSourceHandle) getSelection( ) ).canEdit( ) )\n\t\t\treturn true;\n\t\t\n\t\treturn  false;\n\t}\n}<fim_middle>// function below is feature envy\n"}