{"text": "<fim_prefix>/*\n *\n *  Licensed to the Apache Software Foundation (ASF) under one or more\n *  contributor license agreements.  See the NOTICE file distributed with\n *  this work for additional information regarding copyright ownership.\n *  The ASF licenses this file to You under the Apache License, Version 2.0\n *  (the \"License\"); you may not use this file except in compliance with\n *  the License.  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n *\n */\npackage flex2.compiler.config;\n//import flash.localization.LocalizationManager;\nimport flex2.compiler.ILocalizableMessage;\n//import flex2.compiler.util.ThreadLocalToolkit;\n/**\n * A common base class for configuration related exceptions.\n *\n * @author Roger Gonzalez\n */\npublic class ConfigurationException extends Exception implements ILocalizableMessage\n{\n    private static final long serialVersionUID = -2435642161291588713L;\n    public ConfigurationException( String msg )\n    {\n        super( msg );\n    }\n    public ConfigurationException( String var, String source, int line )\n    {\n        this.var = var;\n        this.source = source;\n        this.line = line;\n    }\n    public String getLevel()\n    {\n        return ERROR;\n    }\n    public String getPath()\n    {\n        return source;\n    }\n    public void setPath(String path)\n    {\n        source = path;\n    }\n    public int getLine()\n    {\n        return line;\n    }\n    public void setLine(int line)\n    {\n        this.line = line;\n    }\n    public int getColumn()\n    {\n        return -1;\n    }\n    public void setColumn(int column)\n    {\n    }\n\tpublic Exception getExceptionDetail()\n\t{\n\t\treturn null;\n\t}\n\tpublic boolean isPathAvailable()\n\t{\n\t\treturn true;\n\t}\n    public static class UnknownVariable extends ConfigurationException\n    {\n        private static final long serialVersionUID = 8571582080586301558L;\n        public UnknownVariable( String var, String source, int line )\n        {\n            super( var, source, line );\n        }\n    }\n    public static class IllegalMultipleSet extends ConfigurationException\n    {\n        private static final long serialVersionUID = 7419980739937494086L;\n        public IllegalMultipleSet( String var, String source, int line )\n        {\n            super( var, source, line );\n        }\n    }\n    public static class UnexpectedDefaults extends ConfigurationException\n    {\n        private static final long serialVersionUID = 3830239641111918142L;\n        public UnexpectedDefaults( String var, String source, int line )\n        {\n            super( var, source, line );\n        }\n    }\n    public static class InterspersedDefaults extends ConfigurationException\n    {\n        private static final long serialVersionUID = 4604939375999662998L;\n        public InterspersedDefaults( String var, String source, int line )\n        {\n            super( var, source, line );\n        }\n    }\n    public String var = null;\n    public String source = null;\n    public int line = -1;\n    public static class AmbiguousParse extends ConfigurationException\n    {\n        private static final long serialVersionUID = -8207848984128407945L;\n        public AmbiguousParse( String defaultvar, String var, String source, int line )\n        {\n            super( var, source, line );\n            this.defaultvar = defaultvar;\n        }\n        public String defaultvar;\n    }\n    public static class Token extends ConfigurationException\n    {\n        private static final long serialVersionUID = 9018726365196176871L;\n        public static final String MISSING_DELIMITER = \"MissingDelimiter\";\n        public static final String MULTIPLE_VALUES = \"MultipleValues\";\n        public static final String UNKNOWN_TOKEN = \"UnknownToken\";\n        public static final String RECURSION_LIMIT = \"RecursionLimit\";\n        public static final String INSUFFICIENT_ARGS = \"InsufficientArgs\";\n        public Token( String id, String token, String var, String source, int line )\n        {\n            super( var, source, line );\n            this.token = token;\n            this.id = id;\n        }\n        public String id;\n        public String token;\n    }\n    public static class IncorrectArgumentCount extends ConfigurationException\n    {\n        private static final long serialVersionUID = 7926363942942750268L;\n        public IncorrectArgumentCount( int expected, int passed, String var, String source, int line )\n        {\n            super( var, source, line );\n            this.expected = expected;\n            this.passed = passed;\n        }\n        public int expected;\n        public int passed;\n    }\n    public static class VariableMissingRequirement extends ConfigurationException\n    {\n        private static final long serialVersionUID = -9165402878493963589L;\n        public VariableMissingRequirement( String required, String var, String source, int line )\n        {\n            super( var, source, line );\n            this.required = required;\n        }\n        public String required;\n    }\n<fim_suffix>    public static class MissingRequirement extends ConfigurationException\n    {\n        private static final long serialVersionUID = -5579697104441150933L;\n        public MissingRequirement( String required, String var, String source, int line )\n        {\n            super( null, source, line );\n            this.required = required;\n        }\n        public String required;\n    }\n    public static class OtherThrowable extends ConfigurationException\n    {\n        private static final long serialVersionUID = -6369637486598549167L;\n        public OtherThrowable( Throwable t, String var, String source, int line )\n        {\n            super( var, source, line );\n            this.throwable = t;\n        }\n        public Throwable throwable;\n    }\n    public static class BadValue extends ConfigurationException\n    {\n        private static final long serialVersionUID = 6359203893459990766L;\n        public BadValue( String value, String var, String source, int line )\n        {\n            super( var, source, line );\n            this.value = value;\n        }\n        public String value;\n    }\n    public static class TypeMismatch extends BadValue\n    {\n        private static final long serialVersionUID = 4440833762090886016L;\n        public static final String BOOLEAN = \"Boolean\";\n        public static final String INTEGER = \"Integer\";\n        public static final String LONG = \"Long\";\n        public TypeMismatch( String type, String value, String var, String source, int line )\n        {\n            super( value, var, source, line );\n            this.id = type;\n        }\n        public String id;   // named id in order to act as a subkey for L10N mgr\n    }\n    public static class ConfigurationIOError extends ConfigurationException\n    {\n        private static final long serialVersionUID = 4447234734754165407L;\n        public ConfigurationIOError( String path, String var, String source, int line )\n        {\n            super( var, source, line );\n            this.path = path;\n        }\n        public String path;\n    }\n    public static class IOError extends ConfigurationIOError\n    {\n        private static final long serialVersionUID = -8336197665007633417L;\n        public IOError( String path )\n        {\n            super( path, null, null, -1 );\n        }\n    }\n    public static class NotDirectory extends ConfigurationException\n    {\n        private static final long serialVersionUID = -348688657801200826L;\n        public NotDirectory( String path, String var, String source, int line )\n        {\n            super( var, source, line );\n            this.path = path;\n        }\n        public String path;\n    }\n    public static class NotAFile extends ConfigurationException\n    {\n        private static final long serialVersionUID = -6104353214119208388L;\n        public NotAFile( String path, String var, String source, int line )\n        {\n            super( var, source, line );\n            this.path = path;\n        }\n        public String path;\n    }\n    public static class NotADirectory extends ConfigurationException\n    {\n        private static final long serialVersionUID = 3299637904535594472L;\n        public NotADirectory( String path, String var, String source, int line )\n        {<fim_middle>// class below has no smell\n"}