{"text": "<fim_prefix>package com.alibaba.android.arouter.facade.model;\n\nimport com.alibaba.android.arouter.facade.annotation.Autowired;\nimport com.alibaba.android.arouter.facade.annotation.Route;\nimport com.alibaba.android.arouter.facade.enums.RouteType;\n\nimport java.util.Map;\n\nimport javax.lang.model.element.Element;\n\n/**\n * It contains basic route information.\n *\n * @author Alex <a href=\"mailto:zhilong.liu@aliyun.com\">Contact me.</a>\n * @version 1.0\n * @since 16/8/24 09:45\n */\npublic class RouteMeta {\n    private RouteType type;         // Type of route\n    private Element rawType;        // Raw type of route\n    private Class<?> destination;   // Destination\n    private String path;            // Path of route\n    private String group;           // Group of route\n    private int priority = -1;      // The smaller the number, the higher the priority\n    private int extra;              // Extra data\n    private Map<String, Integer> paramsType;  // Param type\n    private String name;\n\n    private Map<String, Autowired> injectConfig;  // Cache inject config.\n\n    public RouteMeta() {\n    }\n\n    /**\n     * For versions of 'compiler' less than 1.0.7, contain 1.0.7\n     *\n     * @param type        type\n     * @param destination destination\n     * @param path        path\n     * @param group       group\n     * @param priority    priority\n     * @param extra       extra\n     * @return this\n     */\n    public static RouteMeta build(RouteType type, Class<?> destination, String path, String group, int priority, int extra) {\n        return new RouteMeta(type, null, destination, null, path, group, null, priority, extra);\n    }\n\n    /**\n     * For versions of 'compiler' greater than 1.0.7\n     *\n     * @param type        type\n     * @param destination destination\n     * @param path        path\n     * @param group       group\n     * @param paramsType  paramsType\n     * @param priority    priority\n     * @param extra       extra\n     * @return this\n     */\n    public static RouteMeta build(RouteType type, Class<?> destination, String path, String group, Map<String, Integer> paramsType, int priority, int extra) {\n        return new RouteMeta(type, null, destination, null, path, group, paramsType, priority, extra);\n    }\n\n    /**\n     * Type\n     *\n     * @param route       route\n     * @param destination destination\n     * @param type        type\n     */\n    public RouteMeta(Route route, Class<?> destination, RouteType type) {\n        this(type, null, destination, route.name(), route.path(), route.group(), null, route.priority(), route.extras());\n    }\n\n    /**\n     * Type\n     *\n     * @param route      route\n     * @param rawType    rawType\n     * @param type       type\n     * @param paramsType paramsType\n     */\n    public RouteMeta(Route route, Element rawType, RouteType type, Map<String, Integer> paramsType) {\n        this(type, rawType, null, route.name(), route.path(), route.group(), paramsType, route.priority(), route.extras());\n    }\n\n    /**\n     * Type\n     *\n     * @param type        type\n     * @param rawType     rawType\n     * @param destination destination\n     * @param path        path\n     * @param group       group\n     * @param paramsType  paramsType\n     * @param priority    priority\n     * @param extra       extra\n     */\n    public RouteMeta(RouteType type, Element rawType, Class<?> destination, String name, String path, String group, Map<String, Integer> paramsType, int priority, int extra) {\n        this.type = type;\n        this.name = name;\n        this.destination = destination;\n        this.rawType = rawType;\n        this.path = path;\n        this.group = group;\n        this.paramsType = paramsType;\n        this.priority = priority;\n        this.extra = extra;\n    }\n\n    public Map<String, Integer> getParamsType() {\n        return paramsType;\n    }\n\n    public RouteMeta setParamsType(Map<String, Integer> paramsType) {\n        this.paramsType = paramsType;\n        return this;\n    }\n\n    public Map<String, Autowired> getInjectConfig() {\n        return injectConfig;\n    }\n\n    public void setInjectConfig(Map<String, Autowired> injectConfig) {\n        this.injectConfig = injectConfig;\n    }\n\n    public Element getRawType() {\n        return rawType;\n    }\n\n    public RouteMeta setRawType(Element rawType) {\n        this.rawType = rawType;\n        return this;\n    }\n\n    public RouteType getType() {\n        return type;\n    }\n\n    public RouteMeta setType(RouteType type) {\n        this.type = type;\n        return this;\n    }\n\n    public Class<?> getDestination() {\n        return destination;\n    }\n\n    public RouteMeta setDestination(Class<?> destination) {\n        this.destination = destination;\n        return this;\n    }\n\n    public String getPath() {\n        return path;\n    }\n\n    public RouteMeta setPath(String path) {\n        this.path = path;\n        return this;\n    }\n\n    public String getGroup() {\n        return group;\n    }\n\n    public RouteMeta setGroup(String group) {\n        this.group = group;\n        return this;\n    }\n\n    public int getPriority() {\n        return priority;\n    }\n\n    public RouteMeta setPriority(int priority) {\n        this.priority = priority;\n        return this;\n    }\n\n    public int getExtra() {\n        return extra;\n    }\n\n    public RouteMeta setExtra(int extra) {\n        this.extra = extra;\n        return this;\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public void setName(String name) {\n        this.name = name;\n    }\n\n<fim_suffix>    @Override\n    public String toString() {\n        return \"RouteMeta{\" +\n                \"type=\" + type +\n                \", rawType=\" + rawType +\n                \", destination=\" + destination +\n                \", path='\" + path + '\\'' +\n                \", group='\" + group + '\\'' +\n                \", priority=\" + priority +\n                \", extra=\" + extra +\n                \", paramsType=\" + paramsType +\n                \", name='\" + name + '\\'' +\n                '}';\n    }\n}<fim_middle>// function below has no smell\n"}