{"text": "<fim_prefix>/*\n * Copyright 2010-2019 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *       http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage org.springframework.data.gemfire.eviction;\n\nimport org.apache.geode.cache.EvictionAction;\n\n/**\n * The EvictionActionType enum is an enumeration of all the Pivotal GemFire EvictionAction values.\n *\n * @author John Blum\n * @see org.apache.geode.cache.EvictionAction\n * @since 1.6.0\n */\n@SuppressWarnings(\"unused\")\npublic enum EvictionActionType {\n\n\tLOCAL_DESTROY(EvictionAction.LOCAL_DESTROY),\n\tNONE(EvictionAction.NONE),\n\tOVERFLOW_TO_DISK(EvictionAction.OVERFLOW_TO_DISK);\n\n\tpublic static final EvictionActionType DEFAULT = EvictionActionType.valueOf(EvictionAction.DEFAULT_EVICTION_ACTION);\n\n\tprivate final EvictionAction evictionAction;\n\n\t/**\n\t * Constructs an instance of the EvictionActionType enum initialized with the matching Pivotal GemFire EvictionAction.\n\t *\n\t * @param evictionAction the matching Pivotal GemFire EvictionAction value for this enumerated value.\n\t * @see org.apache.geode.cache.EvictionAction\n\t */\n\tEvictionActionType(final EvictionAction evictionAction) {\n\t\tthis.evictionAction = evictionAction;\n\t}\n\n\t/**\n\t * A null-safe operation to extract the Pivotal GemFire EvictionAction from the EvictionActionType enumerated value.\n\t *\n\t * @param evictionActionType the EvictionActionType enumerated value from which to extract\n\t * the matching Pivotal GemFire EvictionAction value.\n\t * @return a Pivotal GemFire EvictionAction given a EvictionActionType enumerated value.\n\t * @see #getEvictionAction()\n\t */\n\tpublic static EvictionAction getEvictionAction(final EvictionActionType evictionActionType) {\n\t\treturn evictionActionType != null ? evictionActionType.getEvictionAction() : null;\n\t}\n\n\t/**\n\t * Returns an EvictionActionType enumerated value matching the given Pivotal GemFire EvictionAction.\n\t *\n\t * @param evictionAction the Pivotal GemFire EvictionAction used to lookup and match the appropriate EvictionActionType.\n\t * @return an EvictionActionType enumerated value matching the given Pivotal GemFire EvictionAction\n\t * or null if no match was found.\n\t * @see org.apache.geode.cache.EvictionAction\n\t * @see #getEvictionAction()\n\t */\n\tpublic static EvictionActionType valueOf(final EvictionAction evictionAction) {\n\n\t\tfor (EvictionActionType evictionActionType : values()) {\n\t\t\tif (evictionActionType.getEvictionAction().equals(evictionAction)) {\n\t\t\t\treturn evictionActionType;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Returns an EvictionActionType enumerated value given the named, case-insensitive eviction action.\n\t *\n\t * @param name a String value indicating the name the eviction action used to match EvictionActionType.\n\t * @return an EvictionActionType enumerated value matching the given named, case-insensitive eviction action\n\t * or null if not match was found.\n\t * @see java.lang.String#equalsIgnoreCase(String)\n\t * @see #name()\n\t */\n<fim_suffix>\tpublic static EvictionActionType valueOfIgnoreCase(final String name) {\n\n\t\tfor (EvictionActionType evictionActionType : values()) {\n\t\t\tif (evictionActionType.name().equalsIgnoreCase(name)) {\n\t\t\t\treturn evictionActionType;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Gets the matching Pivotal GemFire EvictionAction represented by this enumerated value.\n\t *\n\t * @return the Pivotal GemFire EvictionAction represented by this enum.\n\t * @see org.apache.geode.cache.EvictionAction\n\t */\n\tpublic EvictionAction getEvictionAction() {\n\t\treturn this.evictionAction;\n\t}\n}<fim_middle>// function below has no smell\n"}