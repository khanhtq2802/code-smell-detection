{"text": "<fim_prefix>/*\n * Copyright (c) 2017, 2018, Oracle and/or its affiliates. All rights reserved.\n * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n *\n * This code is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License version 2 only, as\n * published by the Free Software Foundation.\n *\n * This code is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n * version 2 for more details (a copy is included in the LICENSE file that\n * accompanied this code).\n *\n * You should have received a copy of the GNU General Public License version\n * 2 along with this work; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n *\n * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n * or visit www.oracle.com if you need additional information or have any\n * questions.\n */\n\n\n\npackage jdk.tools.jaotc.collect.classname;\n\nimport jdk.tools.jaotc.collect.ClassSource;\nimport jdk.tools.jaotc.collect.FileSupport;\nimport jdk.tools.jaotc.collect.SearchPath;\nimport jdk.tools.jaotc.collect.SourceProvider;\n\nimport java.nio.file.Path;\nimport java.nio.file.Paths;\n\n<fim_suffix>public final class ClassNameSourceProvider implements SourceProvider {\n    public static final String TYPE = \"class\";\n    private final ClassLoader classLoader;\n\n    public ClassNameSourceProvider(FileSupport fileSupport) {\n        String classPath = System.getProperty(\"java.class.path\");\n        ClassLoader systemClassLoader = ClassLoader.getSystemClassLoader();\n        if (classPath != null && !classPath.isEmpty()) {\n            classLoader = systemClassLoader;\n        } else {\n            Path path = Paths.get(\".\").toAbsolutePath();\n            classLoader = fileSupport.createClassLoader(path, systemClassLoader);\n        }\n    }\n\n    @Override\n    public ClassSource findSource(String name0, SearchPath searchPath) {\n        String name = name0;\n        Path path = Paths.get(name);\n        if (ClassSource.pathIsClassFile(path)) {\n            name = ClassSource.makeClassName(path);\n        }\n        try {\n            classLoader.loadClass(name);\n            return new ClassNameSource(name, classLoader);\n        } catch (ClassNotFoundException e) {\n            return null;\n        }\n    }\n\n    @Override\n    public boolean supports(String type) {\n        return TYPE.equals(type);\n    }\n}<fim_middle>// class below has no smell\n"}