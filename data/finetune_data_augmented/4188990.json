{"text": "<fim_prefix>/*****************************************************************\n *   Licensed to the Apache Software Foundation (ASF) under one\n *  or more contributor license agreements.  See the NOTICE file\n *  distributed with this work for additional information\n *  regarding copyright ownership.  The ASF licenses this file\n *  to you under the Apache License, Version 2.0 (the\n *  \"License\"); you may not use this file except in compliance\n *  with the License.  You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing,\n *  software distributed under the License is distributed on an\n *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n *  KIND, either express or implied.  See the License for the\n *  specific language governing permissions and limitations\n *  under the License.\n ****************************************************************/\npackage org.apache.cayenne.modeler.pref;\nimport org.apache.cayenne.pref.RenamedPreferences;\nimport java.util.prefs.Preferences;\npublic class ProjectStatePreferences extends RenamedPreferences {\n    private String event;\n    private String domain;\n    private String node;\n    private String dataMap;\n    private String objEntity;\n    private String dbEntity;\n    private String embeddable;\n    private String embAttrs;\n    private String objAttrs;\n    private String dbAttrs;\n    private String objRels;\n    private String dbRels;\n    private String procedure;\n    private String procedureParams;\n    private String query;\n    private String multipleObjects;\n    private String parentObject;\n    public static final String EVENT_PROPERTY = \"event\";\n    public static final String DOMAIN_PROPERTY = \"domain\";\n    public static final String NODE_PROPERTY = \"node\";\n    public static final String DATA_MAP_PROPERTY = \"dataMap\";\n    public static final String OBJ_ENTITY_PROPERTY = \"objEntity\";\n    public static final String DB_ENTITY_PROPERTY = \"dbEntity\";\n    public static final String EMBEDDABLE_PROPERTY = \"embeddable\";\n    public static final String EMBEDDABLE_ATTRS_PROPERTY = \"embAttrs\";\n    public static final String OBJ_ATTRS_PROPERTY = \"objAttrs\";\n    public static final String DB_ATTRS_PROPERTY = \"dbAttrs\";\n    public static final String OBJ_RELS_PROPERTY = \"objRels\";\n    public static final String DB_RELS_PROPERTY = \"dbRels\";\n    public static final String PROCEDURE_PROPERTY = \"procedure\";\n    public static final String PROCEDURE_PARAMS_PROPERTY = \"procedureParams\";\n    public static final String QUERY_PROPERTY = \"query\";\n    public static final String MULTIPLE_OBJECTS_PROPERTY = \"multipleObjects\";\n    public static final String PARENT_OBJECT_PROPERTY = \"parentObject\";\n    public ProjectStatePreferences(Preferences pref) {\n        super(pref);\n    }\n    public String getEvent() {\n        if (event == null) {\n            event = getCurrentPreference().get(EVENT_PROPERTY, \"\");\n        }\n        return event;\n    }\n    public void setEvent(String event) {\n        this.event = event;\n        if (event != null) {\n            getCurrentPreference().put(EVENT_PROPERTY, event);\n        }\n    }\n    public String getDomain() {\n        if (domain == null) {\n            domain = getCurrentPreference().get(DOMAIN_PROPERTY, \"\");\n        }\n        return domain;\n    }\n    public void setDomain(String domain) {\n        this.domain = domain;\n        if (domain != null) {\n            getCurrentPreference().put(DOMAIN_PROPERTY, domain);\n        }\n    }\n    public String getNode() {\n        if (node == null) {\n            node = getCurrentPreference().get(NODE_PROPERTY, \"\");\n        }\n        return node;\n    }\n    public void setNode(String node) {\n        this.node = node;\n        if (node != null) {\n            getCurrentPreference().put(NODE_PROPERTY, node);\n        }\n    }\n    public String getDataMap() {\n        if (dataMap == null) {\n            dataMap = getCurrentPreference().get(DATA_MAP_PROPERTY, \"\");\n        }\n        return dataMap;\n    }\n    public void setDataMap(String dataMap) {\n        this.dataMap = dataMap;\n        if (dataMap != null) {\n            getCurrentPreference().put(DATA_MAP_PROPERTY, dataMap);\n        }\n    }\n    public String getObjEntity() {\n        if (objEntity == null) {\n            objEntity = getCurrentPreference().get(OBJ_ENTITY_PROPERTY, \"\");\n        }\n        return objEntity;\n    }\n    public void setObjEntity(String objEntity) {\n        this.objEntity = objEntity;\n        if (objEntity != null) {\n            getCurrentPreference().put(OBJ_ENTITY_PROPERTY, objEntity);\n        }\n    }\n    public String getDbEntity() {\n        if (dbEntity == null) {\n            dbEntity = getCurrentPreference().get(DB_ENTITY_PROPERTY, \"\");\n        }\n        return dbEntity;\n    }\n    public void setDbEntity(String dbEntity) {\n        this.dbEntity = dbEntity;\n        if (dbEntity != null) {\n            getCurrentPreference().put(DB_ENTITY_PROPERTY, dbEntity);\n        }\n    }\n    public String getEmbeddable() {\n        if (embeddable == null) {\n            embeddable = getCurrentPreference().get(EMBEDDABLE_PROPERTY, \"\");\n        }\n        return embeddable;\n    }\n    public void setEmbeddable(String embeddable) {\n        this.embeddable = embeddable;\n        if (embeddable != null) {\n            getCurrentPreference().put(EMBEDDABLE_PROPERTY, embeddable);\n        }\n    }\n    public String getEmbAttrs() {\n        if (embAttrs == null) {\n            embAttrs = getCurrentPreference().get(EMBEDDABLE_ATTRS_PROPERTY, \"\");\n        }\n        return embAttrs;\n    }\n    public void setEmbAttrs(String embAttrs) {\n        this.embAttrs = embAttrs;\n        if (embAttrs != null) {\n            getCurrentPreference().put(EMBEDDABLE_ATTRS_PROPERTY, embAttrs);\n        }\n    }\n    public String getObjAttrs() {\n        if (objAttrs == null) {\n            objAttrs = getCurrentPreference().get(OBJ_ATTRS_PROPERTY, \"\");\n        }\n        return objAttrs;\n    }\n    public void setObjAttrs(String objAttrs) {\n        this.objAttrs = objAttrs;\n        if (objAttrs != null) {\n            getCurrentPreference().put(OBJ_ATTRS_PROPERTY, objAttrs);\n        }\n    }\n    public String getDbAttrs() {\n        if (dbAttrs == null) {\n            dbAttrs = getCurrentPreference().get(DB_ATTRS_PROPERTY, \"\");\n        }\n        return dbAttrs;\n    }\n    public void setDbAttrs(String dbAttrs) {\n        this.dbAttrs = dbAttrs;\n        if (dbAttrs != null) {\n            getCurrentPreference().put(DB_ATTRS_PROPERTY, dbAttrs);\n        }\n    }\n    public String getObjRels() {\n        if (objRels == null) {\n            objRels = getCurrentPreference().get(OBJ_RELS_PROPERTY, \"\");\n        }\n        return objRels;\n    }\n    public void setObjRels(String objRels) {\n        this.objRels = objRels;\n        if (objRels != null) {\n            getCurrentPreference().put(OBJ_RELS_PROPERTY, objRels);\n        }\n    }\n    public String getDbRels() {\n        if (dbRels == null) {\n            dbRels = getCurrentPreference().get(DB_RELS_PROPERTY, \"\");\n        }\n        return dbRels;\n    }\n    public void setDbRels(String dbRels) {\n        this.dbRels = dbRels;\n        if (dbRels != null) {\n            getCurrentPreference().put(DB_RELS_PROPERTY, dbRels);\n        }\n    }\n    public String getProcedure() {\n        if (procedure == null) {\n            procedure = getCurrentPreference().get(PROCEDURE_PROPERTY, \"\");\n        }\n        return procedure;\n    }\n    public void setProcedure(String procedure) {\n        this.procedure = procedure;\n        if (procedure != null) {\n            getCurrentPreference().put(PROCEDURE_PROPERTY, procedure);\n        }\n    }\n    public String getProcedureParams() {\n        if (procedureParams == null) {\n            procedureParams = getCurrentPreference().get(PROCEDURE_PARAMS_PROPERTY, \"\");\n        }\n        return procedureParams;\n    }\n<fim_suffix>    public void setProcedureParams(String procedureParams) {\n        this.procedureParams = procedureParams;\n        if (procedureParams != null) {\n            getCurrentPreference().put(PROCEDURE_PARAMS_PROPERTY, procedureParams);\n        }\n    }\n    public String getQuery() {\n        if (query == null) {\n            query = getCurrentPreference().get(QUERY_PROPERTY, \"\");\n        }\n        return query;\n    }\n    public void setQuery(String query) {\n        this.query = query;\n        if (query != null) {\n            getCurrentPreference().put(QUERY_PROPERTY, query);\n        }\n    }\n    public String getMultipleObjects() {\n        if (multipleObjects == null) {\n            multipleObjects = getCurrentPreference().get(MULTIPLE_OBJECTS_PROPERTY, \"\");\n        }\n        return multipleObjects;\n    }\n    public void setMultipleObjects(String multipleObjects) {<fim_middle>// function below has no smell\n"}