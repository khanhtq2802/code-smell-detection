{"text": "<fim_prefix>/*\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.apache.camel.component.aws.swf;\n\nimport java.util.ArrayList;\n\nimport com.amazonaws.services.simpleworkflow.flow.DataConverter;\nimport com.amazonaws.services.simpleworkflow.flow.JsonDataConverter;\nimport com.amazonaws.services.simpleworkflow.flow.WorkflowTypeRegistrationOptions;\nimport com.amazonaws.services.simpleworkflow.flow.generic.WorkflowDefinitionFactory;\nimport com.amazonaws.services.simpleworkflow.flow.generic.WorkflowDefinitionFactoryFactory;\nimport com.amazonaws.services.simpleworkflow.model.WorkflowType;\n\npublic class CamelWorkflowDefinitionFactoryFactory extends WorkflowDefinitionFactoryFactory {\n    private final SWFWorkflowConsumer swfWorkflowConsumer;\n    private final SWFConfiguration configuration;\n\n    public CamelWorkflowDefinitionFactoryFactory(SWFWorkflowConsumer swfWorkflowConsumer, SWFConfiguration configuration) {\n        this.swfWorkflowConsumer = swfWorkflowConsumer;\n        this.configuration = configuration;\n    }\n\n<fim_suffix>    @Override\n    public WorkflowDefinitionFactory getWorkflowDefinitionFactory(WorkflowType workflowType) {\n        WorkflowTypeRegistrationOptions registrationOptions = configuration.getWorkflowTypeRegistrationOptions() != null\n                ? configuration.getWorkflowTypeRegistrationOptions() : new WorkflowTypeRegistrationOptions();\n        DataConverter dataConverter = configuration.getDataConverter() != null\n                ? configuration.getDataConverter() : new JsonDataConverter();\n        return new CamelWorkflowDefinitionFactory(swfWorkflowConsumer, workflowType, registrationOptions, dataConverter);\n    }\n\n    @Override\n    public Iterable<WorkflowType> getWorkflowTypesToRegister() {\n        ArrayList<WorkflowType> workflowTypes = new ArrayList<>(1);\n        WorkflowType workflowType = new WorkflowType();\n        workflowType.setName(configuration.getEventName());\n        workflowType.setVersion(configuration.getVersion());\n        workflowTypes.add(workflowType);\n        return workflowTypes;\n    }\n}<fim_middle>// function below has no smell\n"}