{"text": "<fim_prefix>/*\n * generated by Xtext\n */\npackage org.eclipse.xtext.grammarinheritance;\n\nimport com.google.inject.Binder;\nimport com.google.inject.Provider;\nimport com.google.inject.name.Names;\nimport java.util.Properties;\nimport org.eclipse.xtext.Constants;\nimport org.eclipse.xtext.IGrammarAccess;\nimport org.eclipse.xtext.grammarinheritance.parser.antlr.BaseInheritanceTestLanguageAntlrTokenFileProvider;\nimport org.eclipse.xtext.grammarinheritance.parser.antlr.BaseInheritanceTestLanguageParser;\nimport org.eclipse.xtext.grammarinheritance.parser.antlr.internal.InternalBaseInheritanceTestLanguageLexer;\nimport org.eclipse.xtext.grammarinheritance.serializer.BaseInheritanceTestLanguageSemanticSequencer;\nimport org.eclipse.xtext.grammarinheritance.serializer.BaseInheritanceTestLanguageSyntacticSequencer;\nimport org.eclipse.xtext.grammarinheritance.services.BaseInheritanceTestLanguageGrammarAccess;\nimport org.eclipse.xtext.parser.IParser;\nimport org.eclipse.xtext.parser.ITokenToStringConverter;\nimport org.eclipse.xtext.parser.antlr.AntlrTokenDefProvider;\nimport org.eclipse.xtext.parser.antlr.AntlrTokenToStringConverter;\nimport org.eclipse.xtext.parser.antlr.IAntlrTokenFileProvider;\nimport org.eclipse.xtext.parser.antlr.ITokenDefProvider;\nimport org.eclipse.xtext.parser.antlr.Lexer;\nimport org.eclipse.xtext.parser.antlr.LexerBindings;\nimport org.eclipse.xtext.parser.antlr.LexerProvider;\nimport org.eclipse.xtext.serializer.ISerializer;\nimport org.eclipse.xtext.serializer.impl.Serializer;\nimport org.eclipse.xtext.serializer.sequencer.ISemanticSequencer;\nimport org.eclipse.xtext.serializer.sequencer.ISyntacticSequencer;\nimport org.eclipse.xtext.service.DefaultRuntimeModule;\n\n/**\n * Manual modifications go to {@link BaseInheritanceTestLanguageRuntimeModule}.\n */\n@SuppressWarnings(\"all\")\npublic abstract class AbstractBaseInheritanceTestLanguageRuntimeModule extends DefaultRuntimeModule {\n\n\tprotected Properties properties = null;\n\n<fim_suffix>\t@Override\n\tpublic void configure(Binder binder) {\n\t\tproperties = tryBindProperties(binder, \"org/eclipse/xtext/grammarinheritance/BaseInheritanceTestLanguage.properties\");\n\t\tsuper.configure(binder);\n\t}\n\t\n\tpublic void configureLanguageName(Binder binder) {\n\t\tbinder.bind(String.class).annotatedWith(Names.named(Constants.LANGUAGE_NAME)).toInstance(\"org.eclipse.xtext.grammarinheritance.BaseInheritanceTestLanguage\");\n\t}\n\t\n\tpublic void configureFileExtensions(Binder binder) {\n\t\tif (properties == null || properties.getProperty(Constants.FILE_EXTENSIONS) == null)\n\t\t\tbinder.bind(String.class).annotatedWith(Names.named(Constants.FILE_EXTENSIONS)).toInstance(\"baseinheritancetestlanguage\");\n\t}\n\t\n\t// contributed by org.eclipse.xtext.xtext.generator.parser.antlr.XtextAntlrGeneratorFragment2\n\tpublic Class<? extends IParser> bindIParser() {\n\t\treturn BaseInheritanceTestLanguageParser.class;\n\t}\n\t\n\t// contributed by org.eclipse.xtext.xtext.generator.parser.antlr.XtextAntlrGeneratorFragment2\n\tpublic Class<? extends ITokenToStringConverter> bindITokenToStringConverter() {\n\t\treturn AntlrTokenToStringConverter.class;\n\t}\n\t\n\t// contributed by org.eclipse.xtext.xtext.generator.parser.antlr.XtextAntlrGeneratorFragment2\n\tpublic Class<? extends IAntlrTokenFileProvider> bindIAntlrTokenFileProvider() {\n\t\treturn BaseInheritanceTestLanguageAntlrTokenFileProvider.class;\n\t}\n\t\n\t// contributed by org.eclipse.xtext.xtext.generator.parser.antlr.XtextAntlrGeneratorFragment2\n\tpublic Class<? extends Lexer> bindLexer() {\n\t\treturn InternalBaseInheritanceTestLanguageLexer.class;\n\t}\n\t\n\t// contributed by org.eclipse.xtext.xtext.generator.parser.antlr.XtextAntlrGeneratorFragment2\n\tpublic Class<? extends ITokenDefProvider> bindITokenDefProvider() {\n\t\treturn AntlrTokenDefProvider.class;\n\t}\n\t\n\t// contributed by org.eclipse.xtext.xtext.generator.parser.antlr.XtextAntlrGeneratorFragment2\n\tpublic Provider<? extends InternalBaseInheritanceTestLanguageLexer> provideInternalBaseInheritanceTestLanguageLexer() {\n\t\treturn LexerProvider.create(InternalBaseInheritanceTestLanguageLexer.class);\n\t}\n\t\n\t// contributed by org.eclipse.xtext.xtext.generator.parser.antlr.XtextAntlrGeneratorFragment2\n\tpublic void configureRuntimeLexer(Binder binder) {\n\t\tbinder.bind(Lexer.class)\n\t\t\t.annotatedWith(Names.named(LexerBindings.RUNTIME))\n\t\t\t.to(InternalBaseInheritanceTestLanguageLexer.class);\n\t}\n\t\n\t// contributed by org.eclipse.xtext.xtext.generator.grammarAccess.GrammarAccessFragment2\n\tpublic ClassLoader bindClassLoaderToInstance() {\n\t\treturn getClass().getClassLoader();\n\t}\n\t\n\t// contributed by org.eclipse.xtext.xtext.generator.grammarAccess.GrammarAccessFragment2\n\tpublic Class<? extends IGrammarAccess> bindIGrammarAccess() {\n\t\treturn BaseInheritanceTestLanguageGrammarAccess.class;\n\t}\n\t\n\t// contributed by org.eclipse.xtext.xtext.generator.serializer.SerializerFragment2\n\tpublic Class<? extends ISemanticSequencer> bindISemanticSequencer() {\n\t\treturn BaseInheritanceTestLanguageSemanticSequencer.class;\n\t}\n\t\n\t// contributed by org.eclipse.xtext.xtext.generator.serializer.SerializerFragment2\n\tpublic Class<? extends ISyntacticSequencer> bindISyntacticSequencer() {\n\t\treturn BaseInheritanceTestLanguageSyntacticSequencer.class;\n\t}\n\t\n\t// contributed by org.eclipse.xtext.xtext.generator.serializer.SerializerFragment2\n\tpublic Class<? extends ISerializer> bindISerializer() {\n\t\treturn Serializer.class;\n\t}\n\t\n}<fim_middle>// function below has no smell\n"}