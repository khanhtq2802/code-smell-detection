{"text": "<fim_prefix>/**\n * Copyright (c) 2016, 2019, Oracle and/or its affiliates. All rights reserved.\n */\npackage com.oracle.bmc.dns.model;\n\n/**\n * The body for defining a new zone.\n * <p>\n *Warning:* Oracle recommends that you avoid using any confidential information when you supply string values using the API.\n *\n * <br/>\n * Note: Objects should always be created or deserialized using the {@link Builder}. This model distinguishes fields\n * that are {@code null} because they are unset from fields that are explicitly set to {@code null}. This is done in\n * the setter methods of the {@link Builder}, which maintain a set of all explicitly set fields called\n * {@link #__explicitlySet__}. The {@link #hashCode()} and {@link #equals(Object)} methods are implemented to take\n * {@link #__explicitlySet__} into account. The constructor, on the other hand, does not set {@link #__explicitlySet__}\n * (since the constructor cannot distinguish explicit {@code null} from unset {@code null}).\n **/\n<fim_suffix>@javax.annotation.Generated(value = \"OracleSDKGenerator\", comments = \"API Version: 20180115\")\n@lombok.AllArgsConstructor(onConstructor = @__({@Deprecated}))\n@lombok.Value\n@com.fasterxml.jackson.databind.annotation.JsonDeserialize(\n    builder = CreateZoneDetails.Builder.class\n)\n@com.fasterxml.jackson.annotation.JsonFilter(com.oracle.bmc.http.internal.ExplicitlySetFilter.NAME)\npublic class CreateZoneDetails {\n    @com.fasterxml.jackson.databind.annotation.JsonPOJOBuilder(withPrefix = \"\")\n    @lombok.experimental.Accessors(fluent = true)\n    public static class Builder {\n        @com.fasterxml.jackson.annotation.JsonProperty(\"name\")\n        private String name;\n\n        public Builder name(String name) {\n            this.name = name;\n            this.__explicitlySet__.add(\"name\");\n            return this;\n        }\n\n        @com.fasterxml.jackson.annotation.JsonProperty(\"zoneType\")\n        private ZoneType zoneType;\n\n        public Builder zoneType(ZoneType zoneType) {\n            this.zoneType = zoneType;\n            this.__explicitlySet__.add(\"zoneType\");\n            return this;\n        }\n\n        @com.fasterxml.jackson.annotation.JsonProperty(\"compartmentId\")\n        private String compartmentId;\n\n        public Builder compartmentId(String compartmentId) {\n            this.compartmentId = compartmentId;\n            this.__explicitlySet__.add(\"compartmentId\");\n            return this;\n        }\n\n        @com.fasterxml.jackson.annotation.JsonProperty(\"freeformTags\")\n        private java.util.Map<String, String> freeformTags;\n\n        public Builder freeformTags(java.util.Map<String, String> freeformTags) {\n            this.freeformTags = freeformTags;\n            this.__explicitlySet__.add(\"freeformTags\");\n            return this;\n        }\n\n        @com.fasterxml.jackson.annotation.JsonProperty(\"definedTags\")\n        private java.util.Map<String, java.util.Map<String, Object>> definedTags;\n\n        public Builder definedTags(\n                java.util.Map<String, java.util.Map<String, Object>> definedTags) {\n            this.definedTags = definedTags;\n            this.__explicitlySet__.add(\"definedTags\");\n            return this;\n        }\n\n        @com.fasterxml.jackson.annotation.JsonProperty(\"externalMasters\")\n        private java.util.List<ExternalMaster> externalMasters;\n\n        public Builder externalMasters(java.util.List<ExternalMaster> externalMasters) {\n            this.externalMasters = externalMasters;\n            this.__explicitlySet__.add(\"externalMasters\");\n            return this;\n        }\n\n        @com.fasterxml.jackson.annotation.JsonIgnore\n        private final java.util.Set<String> __explicitlySet__ = new java.util.HashSet<String>();\n\n        public CreateZoneDetails build() {\n            CreateZoneDetails __instance__ =\n                    new CreateZoneDetails(\n                            name,\n                            zoneType,\n                            compartmentId,\n                            freeformTags,\n                            definedTags,\n                            externalMasters);\n            __instance__.__explicitlySet__.addAll(__explicitlySet__);\n            return __instance__;\n        }\n\n        @com.fasterxml.jackson.annotation.JsonIgnore\n        public Builder copy(CreateZoneDetails o) {\n            Builder copiedBuilder =\n                    name(o.getName())\n                            .zoneType(o.getZoneType())\n                            .compartmentId(o.getCompartmentId())\n                            .freeformTags(o.getFreeformTags())\n                            .definedTags(o.getDefinedTags())\n                            .externalMasters(o.getExternalMasters());\n\n            copiedBuilder.__explicitlySet__.retainAll(o.__explicitlySet__);\n            return copiedBuilder;\n        }\n    }\n\n    /**\n     * Create a new builder.\n     */\n    public static Builder builder() {\n        return new Builder();\n    }\n\n    /**\n     * The name of the zone.\n     **/\n    @com.fasterxml.jackson.annotation.JsonProperty(\"name\")\n    String name;\n    /**\n     * The type of the zone. Must be either `PRIMARY` or `SECONDARY`.\n     *\n     **/\n    public enum ZoneType {\n        Primary(\"PRIMARY\"),\n        Secondary(\"SECONDARY\"),\n        ;\n\n        private final String value;\n        private static java.util.Map<String, ZoneType> map;\n\n        static {\n            map = new java.util.HashMap<>();\n            for (ZoneType v : ZoneType.values()) {\n                map.put(v.getValue(), v);\n            }\n        }\n\n        ZoneType(String value) {\n            this.value = value;\n        }\n\n        @com.fasterxml.jackson.annotation.JsonValue\n        public String getValue() {\n            return value;\n        }\n\n        @com.fasterxml.jackson.annotation.JsonCreator\n        public static ZoneType create(String key) {\n            if (map.containsKey(key)) {\n                return map.get(key);\n            }\n            throw new RuntimeException(\"Invalid ZoneType: \" + key);\n        }\n    };\n    /**\n     * The type of the zone. Must be either `PRIMARY` or `SECONDARY`.\n     *\n     **/\n    @com.fasterxml.jackson.annotation.JsonProperty(\"zoneType\")\n    ZoneType zoneType;\n\n    /**\n     * The OCID of the compartment containing the zone.\n     **/\n    @com.fasterxml.jackson.annotation.JsonProperty(\"compartmentId\")\n    String compartmentId;\n\n    /**\n     * Simple key-value pair that is applied without any predefined name, type, or scope.\n     * For more information, see [Resource Tags](https://docs.cloud.oracle.com/Content/General/Concepts/resourcetags.htm).\n     * Example: `{\\\"bar-key\\\": \\\"value\\\"}`\n     *\n     **/\n    @com.fasterxml.jackson.annotation.JsonProperty(\"freeformTags\")\n    java.util.Map<String, String> freeformTags;\n\n    /**\n     * Usage of predefined tag keys. These predefined keys are scoped to a namespace.\n     * Example: `{\\\"foo-namespace\\\": {\\\"bar-key\\\": \\\"value\\\"}}`\n     *\n     **/\n    @com.fasterxml.jackson.annotation.JsonProperty(\"definedTags\")\n    java.util.Map<String, java.util.Map<String, Object>> definedTags;\n\n    /**\n     * External master servers for the zone. `externalMasters` becomes a\n     * required parameter when the `zoneType` value is `SECONDARY`.\n     *\n     **/\n    @com.fasterxml.jackson.annotation.JsonProperty(\"externalMasters\")\n    java.util.List<ExternalMaster> externalMasters;\n\n    @com.fasterxml.jackson.annotation.JsonIgnore\n    private final java.util.Set<String> __explicitlySet__ = new java.util.HashSet<String>();\n}<fim_middle>// class below is blob\n"}