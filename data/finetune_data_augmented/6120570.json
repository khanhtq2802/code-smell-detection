{"text": "<fim_prefix>    {\n        private static final long serialVersionUID = 1L;\n        private final Function<? super T, ? extends V> function;\n        private final V defaultValue;\n        private DefaultFunction(Function<? super T, ? extends V> newFunction, V newDefaultValue)\n        {\n            this.function = newFunction;\n            this.defaultValue = newDefaultValue;\n        }\n        @Override\n        public V valueOf(T anObject)\n        {\n            V returnValue = this.function.valueOf(anObject);\n            if (returnValue == null)\n            {\n                return this.defaultValue;\n            }\n            return returnValue;\n        }\n    }\n    private static final class NullSafeFunction<T, V> implements Function<T, V>\n    {\n        private static final long serialVersionUID = 1L;\n        private final Function<? super T, ? extends V> function;\n        private final V nullValue;\n        private NullSafeFunction(Function<? super T, ? extends V> function, V nullValue)\n        {\n            this.function = function;\n            this.nullValue = nullValue;\n        }\n        @Override\n        public V valueOf(T object)\n        {\n            return object == null ? this.nullValue : this.function.valueOf(object);\n        }\n    }\n    public static <T, V1, V2> Function<T, Pair<V1, V2>> pair(\n            Function<? super T, V1> function1,\n            Function<? super T, V2> function2)\n    {\n        return t -> Tuples.pair(function1.valueOf(t), function2.valueOf(t));\n    }\n    /**\n     * @return A function that gets the key out of a {@link java.util.Map.Entry}\n     */\n    @SuppressWarnings(\"UnnecessaryFullyQualifiedName\")\n    public static <K> Function<Map.Entry<K, ?>, K> getKeyFunction()\n    {\n        return (Function<Map.Entry<K, ?>, K>) MAP_KEY_FUNCTION;\n    }\n    /**\n     * @return A function that gets the value out of a {@link java.util.Map.Entry}\n     */\n    @SuppressWarnings(\"UnnecessaryFullyQualifiedName\")\n    public static <V> Function<Map.Entry<?, V>, V> getValueFunction()\n    {\n        return (Function<Map.Entry<?, V>, V>) MAP_VALUE_FUNCTION;\n    }\n    private static class MapKeyFunction<K> implements Function<Map.Entry<K, ?>, K>\n    {\n        private static final long serialVersionUID = 1L;\n        @Override\n        public K valueOf(Map.Entry<K, ?> entry)\n        {\n            return entry.getKey();\n        }\n    }\n    private static class MapValueFunction<V> implements Function<Map.Entry<?, V>, V>\n    {\n        private static final long serialVersionUID = 1L;\n        @Override\n        public V valueOf(Map.Entry<?, V> entry)\n        {\n            return entry.getValue();\n        }\n    }\n    /**\n     * @return A function that gets the size of an {@code Iterable}\n     */\n    public static Function<Iterable<?>, Integer> getSizeOf()\n    {\n        return SIZE_FUNCTION;\n    }\n    public static class SizeFunction extends IntegerFunctionImpl<Iterable<?>>\n    {\n        private static final long serialVersionUID = 1L;\n        @Override\n        public int intValueOf(Iterable<?> iterable)\n        {\n            return Iterate.sizeOf(iterable);\n        }\n    }\n    public static final class FunctionChain<T1, T2, T3> implements Function<T1, T3>\n    {\n        private static final long serialVersionUID = 1L;\n        private final Function<T1, T2> function1;\n        private final Function<? super T2, T3> function2;\n        private FunctionChain(Function<T1, T2> function1, Function<? super T2, T3> function2)\n        {\n            this.function1 = function1;\n            this.function2 = function2;\n        }\n        @Override\n        public T3 valueOf(T1 object)\n        {\n            return this.function2.valueOf(this.function1.valueOf(object));\n        }\n        public <T4> FunctionChain<T1, T3, T4> chain(Function<? super T3, T4> function)\n        {\n            return new FunctionChain<>(this, function);\n        }\n        public BooleanFunctionChain<T1, T3> chainBoolean(BooleanFunction<? super T3> function)\n        {\n            return new BooleanFunctionChain<>(this, function);\n        }\n        public ByteFunctionChain<T1, T3> chainByte(ByteFunction<? super T3> function)\n        {\n            return new ByteFunctionChain<>(this, function);\n        }\n        public CharFunctionChain<T1, T3> chainChar(CharFunction<? super T3> function)\n        {\n            return new CharFunctionChain<>(this, function);\n        }\n        public DoubleFunctionChain<T1, T3> chainDouble(DoubleFunction<? super T3> function)\n        {\n            return new DoubleFunctionChain<>(this, function);\n        }\n        public FloatFunctionChain<T1, T3> chainFloat(FloatFunction<? super T3> function)\n        {\n            return new FloatFunctionChain<>(this, function);\n        }\n        public IntFunctionChain<T1, T3> chainInt(IntFunction<? super T3> function)\n        {\n            return new IntFunctionChain<>(this, function);\n        }\n        public LongFunctionChain<T1, T3> chainLong(LongFunction<? super T3> function)\n        {\n            return new LongFunctionChain<>(this, function);\n        }\n        public ShortFunctionChain<T1, T3> chainShort(ShortFunction<? super T3> function)\n        {\n            return new ShortFunctionChain<>(this, function);\n        }\n    }\n    public static final class BooleanFunctionChain<T1, T2> implements BooleanFunction<T1>\n    {\n        private static final long serialVersionUID = 1L;\n        private final Function<T1, T2> function1;\n        private final BooleanFunction<? super T2> function2;\n        private BooleanFunctionChain(Function<T1, T2> function1, BooleanFunction<? super T2> function2)\n        {\n            this.function1 = function1;\n            this.function2 = function2;\n        }\n        @Override\n        public boolean booleanValueOf(T1 object)\n        {\n            return this.function2.booleanValueOf(this.function1.valueOf(object));\n        }\n    }\n    public static final class ByteFunctionChain<T1, T2> implements ByteFunction<T1>\n    {\n        private static final long serialVersionUID = 1L;\n        private final Function<T1, T2> function1;\n        private final ByteFunction<? super T2> function2;\n        private ByteFunctionChain(Function<T1, T2> function1, ByteFunction<? super T2> function2)\n        {\n            this.function1 = function1;\n            this.function2 = function2;\n        }\n        @Override\n        public byte byteValueOf(T1 object)\n        {\n            return this.function2.byteValueOf(this.function1.valueOf(object));\n        }\n    }\n    public static final class CharFunctionChain<T1, T2> implements CharFunction<T1>\n    {\n        private static final long serialVersionUID = 1L;\n        private final Function<T1, T2> function1;\n        private final CharFunction<? super T2> function2;\n        private CharFunctionChain(Function<T1, T2> function1, CharFunction<? super T2> function2)\n        {\n            this.function1 = function1;\n            this.function2 = function2;\n        }\n        @Override\n        public char charValueOf(T1 object)\n        {\n            return this.function2.charValueOf(this.function1.valueOf(object));\n        }\n    }\n    public static final class DoubleFunctionChain<T1, T2> implements DoubleFunction<T1>\n    {\n        private static final long serialVersionUID = 1L;\n        private final Function<T1, T2> function1;\n        private final DoubleFunction<? super T2> function2;\n        private DoubleFunctionChain(Function<T1, T2> function1, DoubleFunction<? super T2> function2)\n        {\n            this.function1 = function1;\n            this.function2 = function2;\n        }\n        @Override\n        public double doubleValueOf(T1 object)\n        {\n            return this.function2.doubleValueOf(this.function1.valueOf(object));\n        }\n    }\n<fim_suffix>    public static final class FloatFunctionChain<T1, T2> implements FloatFunction<T1>\n    {\n        private static final long serialVersionUID = 1L;\n        private final Function<T1, T2> function1;\n        private final FloatFunction<? super T2> function2;\n        private FloatFunctionChain(Function<T1, T2> function1, FloatFunction<? super T2> function2)\n        {\n            this.function1 = function1;\n            this.function2 = function2;\n        }\n        @Override\n        public float floatValueOf(T1 object)\n        {\n            return this.function2.floatValueOf(this.function1.valueOf(object));\n        }\n    }<fim_middle>// class below has no smell\n"}