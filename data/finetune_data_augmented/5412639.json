{"text": "<fim_prefix>package org.apache.tomee.webapp.jsf;\n\nimport javax.enterprise.context.SessionScoped;\nimport javax.inject.Inject;\nimport javax.inject.Named;\nimport java.io.Serializable;\nimport java.lang.reflect.Method;\nimport java.util.ArrayList;\nimport java.util.List;\n\nimport static org.apache.tomee.webapp.jsf.JSFHelper.param;\nimport static org.apache.tomee.webapp.jsf.OpenEJBHelper.method;\n\n@Named(\"ejbInvocationHelper\")\n@SessionScoped\npublic class EJBInvocationHelper implements Serializable {\n    @Inject @Named(\"invocation\") @SessionScoped private Invocation invocation;\n    private List<ParameterInfo> methodParameters;\n\n    public List<ParameterInfo> getMethodParameters() {\n        if (methodParameters == null) {\n            final String app = param(\"app\");\n            final String name = param(\"name\");\n            final String rawId = param(\"methodId\");\n\n            methodParameters = new ArrayList<ParameterInfo>();\n            if (app == null || name == null || rawId == null) {\n                return methodParameters;\n            }\n\n            invocation.setApp(app);\n            invocation.setName(name);\n            invocation.setId(Long.parseLong(rawId));\n\n            final Method mtd = method(invocation.getApp(), invocation.getName(), invocation.getId());\n            if (mtd != null) {\n                for (Class<?> parameter : mtd.getParameterTypes()) {\n                    methodParameters.add(new ParameterInfo(parameter.getName().replace(\"java.lang.\", \"\")));\n                }\n            }\n        }\n        return methodParameters;\n    }\n\n<fim_suffix>    public String submit() {\n        invocation.getMethodParameters().clear();\n        for (ParameterInfo info : methodParameters) {\n            invocation.getMethodParameters().add(info.getValue());\n        }\n        methodParameters.clear();\n        methodParameters = null;\n        return \"ejb-invoker?faces-redirect=true\";\n    }\n\n\n\n    public static class ParameterInfo {\n        private String value;\n        private String type;\n\n        public ParameterInfo(String type) {\n            this.type = type;\n            this.value = null;\n        }\n\n        public String getType() {\n            return type;\n        }\n\n        public String getValue() {\n            return value;\n        }\n\n        public void setValue(String value) {\n            this.value = value;\n        }\n    }\n}<fim_middle>// function below has no smell\n"}