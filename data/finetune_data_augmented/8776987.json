{"text": "<fim_prefix>/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage org.apache.hadoop.yarn.server.resourcemanager.webapp;\n\nimport com.google.inject.Singleton;\nimport com.sun.jersey.api.json.JSONConfiguration;\nimport com.sun.jersey.api.json.JSONJAXBContext;\n\nimport java.util.Arrays;\nimport java.util.HashSet;\nimport java.util.Set;\n\nimport javax.ws.rs.ext.ContextResolver;\nimport javax.ws.rs.ext.Provider;\nimport javax.xml.bind.JAXBContext;\n\nimport org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.UserInfo;\nimport org.apache.hadoop.yarn.server.resourcemanager.webapp.dao.AppInfo;\nimport org.apache.hadoop.yarn.server.resourcemanager.webapp.dao.AppAttemptInfo;\nimport org.apache.hadoop.yarn.server.resourcemanager.webapp.dao.AppAttemptsInfo;\nimport org.apache.hadoop.yarn.server.resourcemanager.webapp.dao.ApplicationStatisticsInfo;\nimport org.apache.hadoop.yarn.server.resourcemanager.webapp.dao.AppsInfo;\nimport org.apache.hadoop.yarn.server.resourcemanager.webapp.dao.CapacitySchedulerInfo;\nimport org.apache.hadoop.yarn.server.resourcemanager.webapp.dao.CapacitySchedulerQueueInfo;\nimport org.apache.hadoop.yarn.server.resourcemanager.webapp.dao.CapacitySchedulerQueueInfoList;\nimport org.apache.hadoop.yarn.server.resourcemanager.webapp.dao.ClusterInfo;\nimport org.apache.hadoop.yarn.server.resourcemanager.webapp.dao.ClusterMetricsInfo;\nimport org.apache.hadoop.yarn.server.resourcemanager.webapp.dao.StatisticsItemInfo;\nimport org.apache.hadoop.yarn.server.resourcemanager.webapp.dao.FifoSchedulerInfo;\nimport org.apache.hadoop.yarn.server.resourcemanager.webapp.dao.NodeInfo;\nimport org.apache.hadoop.yarn.server.resourcemanager.webapp.dao.NodesInfo;\nimport org.apache.hadoop.yarn.server.resourcemanager.webapp.dao.ResourceInfo;\nimport org.apache.hadoop.yarn.server.resourcemanager.webapp.dao.SchedulerInfo;\nimport org.apache.hadoop.yarn.server.resourcemanager.webapp.dao.SchedulerTypeInfo;\nimport org.apache.hadoop.yarn.server.resourcemanager.webapp.dao.UserMetricsInfo;\nimport org.apache.hadoop.yarn.server.resourcemanager.webapp.dao.UsersInfo;\nimport org.apache.hadoop.yarn.webapp.RemoteExceptionData;\n\n<fim_suffix>@Singleton\n@Provider\npublic class JAXBContextResolver implements ContextResolver<JAXBContext> {\n\n  private JAXBContext context;\n  private final Set<Class> types;\n\n  // you have to specify all the dao classes here\n  private final Class[] cTypes = { AppInfo.class, AppAttemptInfo.class,\n      AppAttemptsInfo.class, ClusterInfo.class,\n      CapacitySchedulerQueueInfo.class, FifoSchedulerInfo.class,\n      SchedulerTypeInfo.class, NodeInfo.class, UserMetricsInfo.class,\n      CapacitySchedulerInfo.class, ClusterMetricsInfo.class,\n      SchedulerInfo.class, AppsInfo.class, NodesInfo.class,\n      RemoteExceptionData.class, CapacitySchedulerQueueInfoList.class,\n      ResourceInfo.class, UsersInfo.class, UserInfo.class,\n      ApplicationStatisticsInfo.class, StatisticsItemInfo.class};\n\n  public JAXBContextResolver() throws Exception {\n    this.types = new HashSet<Class>(Arrays.asList(cTypes));\n    this.context = new JSONJAXBContext(JSONConfiguration.natural()\n        .rootUnwrapping(false).build(), cTypes);\n  }\n\n  @Override\n  public JAXBContext getContext(Class<?> objectType) {\n    return (types.contains(objectType)) ? context : null;\n  }\n}<fim_middle>// class below has no smell\n"}