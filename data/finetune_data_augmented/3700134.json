{"text": "<fim_prefix>package com.alibaba.otter.canal.common.utils;\n\nimport java.lang.Thread.UncaughtExceptionHandler;\nimport java.util.concurrent.ThreadFactory;\nimport java.util.concurrent.atomic.AtomicInteger;\n\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\n\n/**\n * @author zebin.xuzb 2012-9-20 \u4e0b\u53483:47:47\n * @version 1.0.0\n */\npublic class NamedThreadFactory implements ThreadFactory {\n\n    private static final Logger           logger                   = LoggerFactory.getLogger(NamedThreadFactory.class);\n    final private static String           DEFAULT_NAME             = \"canal-worker\";\n    final private String                  name;\n    final private boolean                 daemon;\n    final private ThreadGroup             group;\n    final private AtomicInteger           threadNumber             = new AtomicInteger(0);\n    final static UncaughtExceptionHandler uncaughtExceptionHandler = new UncaughtExceptionHandler() {\n\n                                                                       public void uncaughtException(Thread t,\n                                                                                                     Throwable e) {\n                                                                           if (e instanceof InterruptedException\n                                                                               || (e.getCause() != null && e.getCause() instanceof InterruptedException)) {\n                                                                               return;\n                                                                           }\n\n                                                                           logger.error(\"from \" + t.getName(), e);\n                                                                       }\n                                                                   };\n\n    public NamedThreadFactory(){\n        this(DEFAULT_NAME, true);\n    }\n\n    public NamedThreadFactory(String name){\n        this(name, true);\n    }\n\n<fim_suffix>    public NamedThreadFactory(String name, boolean daemon){\n        this.name = name;\n        this.daemon = daemon;\n        SecurityManager s = System.getSecurityManager();\n        group = (s != null) ? s.getThreadGroup() : Thread.currentThread().getThreadGroup();\n    }\n\n    public Thread newThread(Runnable r) {\n        Thread t = new Thread(group, r, name + \"-\" + threadNumber.getAndIncrement(), 0);\n        t.setDaemon(daemon);\n        if (t.getPriority() != Thread.NORM_PRIORITY) {\n            t.setPriority(Thread.NORM_PRIORITY);\n        }\n\n        t.setUncaughtExceptionHandler(uncaughtExceptionHandler);\n        return t;\n    }\n\n}<fim_middle>// function below has no smell\n"}