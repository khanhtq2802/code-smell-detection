{"text": "<fim_prefix>/*\n *  Licensed to the Apache Software Foundation (ASF) under one\n *  or more contributor license agreements.  See the NOTICE file\n *  distributed with this work for additional information\n *  regarding copyright ownership.  The ASF licenses this file\n *  to you under the Apache License, Version 2.0 (the\n *  \"License\"); you may not use this file except in compliance\n *  with the License.  You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing,\n *  software distributed under the License is distributed on an\n *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n *  KIND, either express or implied.  See the License for the\n *  specific language governing permissions and limitations\n *  under the License.\n */\npackage org.apache.isis.viewer.wicket.ui.components.about;\n\nimport java.io.Serializable;\nimport java.net.URL;\nimport java.util.Map.Entry;\n\n<fim_suffix>public class JarManifestAttributes implements Serializable {\n    \n    private static final long serialVersionUID = 1L;\n\n    public static JarManifestAttributes jarName(String jarName) {\n        return new JarManifestAttributes(JarManifestAttributes.Type.JAR_NAME, jarName);\n    }\n\n    public static JarManifestAttributes jarUrl(URL jarUrl) {\n        return new JarManifestAttributes(JarManifestAttributes.Type.JAR_URL, jarUrl != null? jarUrl.toExternalForm(): \"\");\n    }\n\n    public static JarManifestAttributes attribute(Entry<Object,Object> entry) {\n        StringBuilder buf = new StringBuilder();\n        buf .append(\"    \")\n            .append(entry.getKey())\n            .append(\": \")\n            .append(entry.getValue())\n            .append(\"\\n\")\n            ;\n        return new JarManifestAttributes(JarManifestAttributes.Type.MANIFEST_ATTRIBUTE, buf.toString());\n    }\n\n    enum Type {\n        JAR_NAME,\n        JAR_URL,\n        MANIFEST_ATTRIBUTE\n    }\n    \n    private final Type type;\n    private final String line;\n    \n    public JarManifestAttributes(Type type, String line) {\n        this.type = type;\n        this.line = line;\n    }\n    public JarManifestAttributes.Type getType() {\n        return type;\n    }\n    public String getLine() {\n        return line;\n    }\n\n}<fim_middle>// class below has no smell\n"}