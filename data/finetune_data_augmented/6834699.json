{"text": "<fim_prefix>\t\t//defaultExport?='default' (-> exportedElement=ExportableElement |\n\t\t//defaultExportedExpression=AssignmentExpression<In=true,Yield=false> Semi)\n\t\tpublic Group getGroup_1_3() { return cGroup_1_3; }\n\t\t//defaultExport?='default'\n\t\tpublic Assignment getDefaultExportAssignment_1_3_0() { return cDefaultExportAssignment_1_3_0; }\n\t\t//'default'\n\t\tpublic Keyword getDefaultExportDefaultKeyword_1_3_0_0() { return cDefaultExportDefaultKeyword_1_3_0_0; }\n\t\t//-> exportedElement=ExportableElement | defaultExportedExpression=AssignmentExpression<In=true,Yield=false> Semi\n\t\tpublic Alternatives getAlternatives_1_3_1() { return cAlternatives_1_3_1; }\n\t\t//-> exportedElement=ExportableElement\n\t\tpublic Assignment getExportedElementAssignment_1_3_1_0() { return cExportedElementAssignment_1_3_1_0; }\n\t\t//ExportableElement\n\t\tpublic RuleCall getExportedElementExportableElementParserRuleCall_1_3_1_0_0() { return cExportedElementExportableElementParserRuleCall_1_3_1_0_0; }\n\t\t//defaultExportedExpression=AssignmentExpression<In=true,Yield=false> Semi\n\t\tpublic Group getGroup_1_3_1_1() { return cGroup_1_3_1_1; }\n\t\t//defaultExportedExpression=AssignmentExpression<In=true,Yield=false>\n\t\tpublic Assignment getDefaultExportedExpressionAssignment_1_3_1_1_0() { return cDefaultExportedExpressionAssignment_1_3_1_1_0; }\n\t\t//AssignmentExpression<In=true,Yield=false>\n\t\tpublic RuleCall getDefaultExportedExpressionAssignmentExpressionParserRuleCall_1_3_1_1_0_0() { return cDefaultExportedExpressionAssignmentExpressionParserRuleCall_1_3_1_1_0_0; }\n\t\t//Semi\n\t\tpublic RuleCall getSemiParserRuleCall_1_3_1_1_1() { return cSemiParserRuleCall_1_3_1_1_1; }\n\t}\n\tpublic class ExportFromClauseElements extends AbstractParserRuleElementFinder {\n\t\tprivate final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), \"org.eclipse.n4js.N4JS.ExportFromClause\");\n\t\tprivate final Group cGroup = (Group)rule.eContents().get(0);\n\t\tprivate final Keyword cFromKeyword_0 = (Keyword)cGroup.eContents().get(0);\n\t\tprivate final Assignment cReexportedFromAssignment_1 = (Assignment)cGroup.eContents().get(1);\n\t\tprivate final CrossReference cReexportedFromTModuleCrossReference_1_0 = (CrossReference)cReexportedFromAssignment_1.eContents().get(0);\n\t\tprivate final RuleCall cReexportedFromTModuleModuleSpecifierParserRuleCall_1_0_1 = (RuleCall)cReexportedFromTModuleCrossReference_1_0.eContents().get(1);\n\t\t//fragment ExportFromClause *:\n\t\t//\t'from' reexportedFrom=[types::TModule|ModuleSpecifier];\n\t\t@Override public ParserRule getRule() { return rule; }\n\t\t//'from' reexportedFrom=[types::TModule|ModuleSpecifier]\n\t\tpublic Group getGroup() { return cGroup; }\n\t\t//'from'\n\t\tpublic Keyword getFromKeyword_0() { return cFromKeyword_0; }\n\t\t//reexportedFrom=[types::TModule|ModuleSpecifier]\n\t\tpublic Assignment getReexportedFromAssignment_1() { return cReexportedFromAssignment_1; }\n\t\t//[types::TModule|ModuleSpecifier]\n\t\tpublic CrossReference getReexportedFromTModuleCrossReference_1_0() { return cReexportedFromTModuleCrossReference_1_0; }\n\t\t//ModuleSpecifier\n\t\tpublic RuleCall getReexportedFromTModuleModuleSpecifierParserRuleCall_1_0_1() { return cReexportedFromTModuleModuleSpecifierParserRuleCall_1_0_1; }\n\t}\n\tpublic class ExportClauseElements extends AbstractParserRuleElementFinder {\n\t\tprivate final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), \"org.eclipse.n4js.N4JS.ExportClause\");\n\t\tprivate final Group cGroup = (Group)rule.eContents().get(0);\n\t\tprivate final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);\n\t\tprivate final Group cGroup_1 = (Group)cGroup.eContents().get(1);\n\t\tprivate final Assignment cNamedExportsAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);\n\t\tprivate final RuleCall cNamedExportsExportSpecifierParserRuleCall_1_0_0 = (RuleCall)cNamedExportsAssignment_1_0.eContents().get(0);\n\t\tprivate final Group cGroup_1_1 = (Group)cGroup_1.eContents().get(1);\n\t\tprivate final Keyword cCommaKeyword_1_1_0 = (Keyword)cGroup_1_1.eContents().get(0);\n\t\tprivate final Assignment cNamedExportsAssignment_1_1_1 = (Assignment)cGroup_1_1.eContents().get(1);\n\t\tprivate final RuleCall cNamedExportsExportSpecifierParserRuleCall_1_1_1_0 = (RuleCall)cNamedExportsAssignment_1_1_1.eContents().get(0);\n\t\tprivate final Keyword cCommaKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);\n\t\tprivate final Keyword cRightCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);\n\t\t//fragment ExportClause *:\n\t\t//\t'{' (namedExports+=ExportSpecifier (',' namedExports+=ExportSpecifier)* ','?)?\n\t\t//\t'}';\n\t\t@Override public ParserRule getRule() { return rule; }\n\t\t//'{' (namedExports+=ExportSpecifier (',' namedExports+=ExportSpecifier)* ','?)? '}'\n\t\tpublic Group getGroup() { return cGroup; }\n\t\t//'{'\n\t\tpublic Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }\n\t\t//(namedExports+=ExportSpecifier (',' namedExports+=ExportSpecifier)* ','?)?\n\t\tpublic Group getGroup_1() { return cGroup_1; }\n\t\t//namedExports+=ExportSpecifier\n\t\tpublic Assignment getNamedExportsAssignment_1_0() { return cNamedExportsAssignment_1_0; }\n\t\t//ExportSpecifier\n\t\tpublic RuleCall getNamedExportsExportSpecifierParserRuleCall_1_0_0() { return cNamedExportsExportSpecifierParserRuleCall_1_0_0; }\n\t\t//(',' namedExports+=ExportSpecifier)*\n<fim_suffix>\t\tpublic Group getGroup_1_1() { return cGroup_1_1; }<fim_middle>// function below has no smell\n"}