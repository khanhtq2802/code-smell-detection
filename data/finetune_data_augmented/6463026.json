{"text": "<fim_prefix> * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     IBH SYSTEMS GmbH - initial API and implementation\n *     M-Ezzat - code cleanup - squid:S2162\n *******************************************************************************/\npackage org.eclipse.packagedrone.repo.utils.osgi.bundle;\nimport java.util.ArrayList;\nimport java.util.HashMap;\nimport java.util.LinkedHashSet;\nimport java.util.LinkedList;\nimport java.util.List;\nimport java.util.Map;\nimport java.util.Properties;\nimport java.util.Set;\nimport org.eclipse.packagedrone.repo.MetaKey;\nimport org.eclipse.packagedrone.repo.utils.osgi.ParserHelper;\nimport org.eclipse.packagedrone.repo.utils.osgi.TranslatedInformation;\nimport org.osgi.framework.Version;\nimport org.osgi.framework.VersionRange;\npublic class BundleInformation implements TranslatedInformation\n{\n    public static final MetaKey META_KEY = new MetaKey ( \"osgi\", \"bundle-information\" );\n    /**\n     * @since 1.1\n     */\n    public static class VersionRangedName\n    {\n        protected final String name;\n        protected final VersionRange versionRange;\n        public VersionRangedName ( final String name, final VersionRange versionRange )\n        {\n            this.name = name;\n            this.versionRange = versionRange;\n        }\n        public String getName ()\n        {\n            return this.name;\n        }\n        public VersionRange getVersionRange ()\n        {\n            return this.versionRange;\n        }\n        @Override\n        public int hashCode ()\n        {\n            final int prime = 31;\n            int result = 1;\n            result = prime * result + ( this.name == null ? 0 : this.name.hashCode () );\n            result = prime * result + ( this.versionRange == null ? 0 : this.versionRange.hashCode () );\n            return result;\n        }\n        @Override\n        public boolean equals ( final Object obj )\n        {\n            if ( this == obj )\n            {\n                return true;\n            }\n            if ( obj == null )\n            {\n                return false;\n            }\n            if ( getClass () != obj.getClass () )\n            {\n                return false;\n            }\n            final VersionRangedName other = (VersionRangedName)obj;\n            if ( this.name == null )\n            {\n                if ( other.name != null )\n                {\n                    return false;\n                }\n            }\n            else if ( !this.name.equals ( other.name ) )\n            {\n                return false;\n            }\n            if ( this.versionRange == null )\n            {\n                if ( other.versionRange != null )\n                {\n                    return false;\n                }\n            }\n            else if ( !this.versionRange.equals ( other.versionRange ) )\n            {\n                return false;\n            }\n            return true;\n        }\n        @Override\n        public String toString ()\n        {\n            if ( this.versionRange != null )\n            {\n                return this.name + \";version=\\\"\" + this.versionRange.getLeftType () + this.versionRange.getLeft () + \",\" + this.versionRange.getRight () + this.versionRange.getRightType () + \"\\\"\";\n            }\n            return this.name;\n        }\n    }\n    public static class PackageImport extends VersionRangedName\n    {\n        private final boolean optional;\n        public PackageImport ( final String name, final VersionRange versionRange, final boolean optional )\n        {\n            super ( name, versionRange );\n            this.optional = optional;\n        }\n        public boolean isOptional ()\n        {\n            return this.optional;\n        }\n        @Override\n        public int hashCode ()\n        {\n            final int prime = 31;\n            int result = 1;\n            result = prime * result + ( this.name == null ? 0 : this.name.hashCode () );\n            return result;\n        }\n        @Override\n        public boolean equals ( final Object obj )\n        {\n            if ( this == obj )\n            {\n                return true;\n            }\n            if ( obj == null )\n            {\n                return false;\n            }\n            if ( this.getClass () != obj.getClass () )\n            {\n                return false;\n            }\n            final PackageImport other = (PackageImport)obj;\n            if ( this.name == null )\n            {\n                if ( other.name != null )\n                {\n                    return false;\n                }\n            }\n            else if ( !this.name.equals ( other.name ) )\n            {\n                return false;\n            }\n            return true;\n        }\n        @Override\n        public String toString ()\n        {\n            return String.format ( \"[Import: %s - %s - %s\", this.name, this.versionRange, this.optional ? \"optional\" : \"required\" );\n        }\n    }\n    public static class PackageExport\n    {\n        private final String name;\n        private final Version version;\n        private final String uses;\n        public PackageExport ( final String name, final Version version, final String uses )\n        {\n            this.name = name;\n            this.version = version;\n            this.uses = uses;\n        }\n        public String getName ()\n        {\n            return this.name;\n        }\n        public Version getVersion ()\n        {\n            return this.version;\n        }\n        public String getUses ()\n        {\n            return this.uses;\n        }\n        @Override\n        public int hashCode ()\n        {\n            final int prime = 31;\n            int result = 1;\n            result = prime * result + ( this.name == null ? 0 : this.name.hashCode () );\n            return result;\n        }\n        @Override\n        public boolean equals ( final Object obj )\n        {\n            if ( this == obj )\n            {\n                return true;\n            }\n            if ( obj == null )\n            {\n                return false;\n            }\n            if ( this.getClass () != obj.getClass () )\n            {\n                return false;\n            }\n            final PackageExport other = (PackageExport)obj;\n            if ( this.name == null )\n            {\n                if ( other.name != null )\n                {\n                    return false;\n                }\n            }\n            else if ( !this.name.equals ( other.name ) )\n            {\n                return false;\n            }\n            return true;\n        }\n        @Override\n        public String toString ()\n        {\n            return String.format ( \"[Export: %s - %s]\", this.name, this.version );\n        }\n    }\n    public static class BundleRequirement extends VersionRangedName\n    {\n        private final boolean optional;\n        private final boolean reexport;\n        public BundleRequirement ( final String id, final VersionRange versionRange, final boolean optional, final boolean reexport )\n        {\n            super ( id, versionRange );\n            this.optional = optional;\n            this.reexport = reexport;\n        }\n        public String getId ()\n        {\n            return this.name;\n        }\n        public boolean isOptional ()\n        {\n            return this.optional;\n        }\n        public boolean isReexport ()\n        {\n            return this.reexport;\n        }\n        @Override\n        public int hashCode ()\n        {\n            final int prime = 31;\n            int result = 1;\n            result = prime * result + ( this.name == null ? 0 : this.name.hashCode () );\n            return result;\n        }\n        @Override\n        public boolean equals ( final Object obj )\n        {\n            if ( this == obj )\n            {\n                return true;\n            }\n            if ( obj == null )\n            {\n                return false;\n            }\n            if ( this.getClass () != obj.getClass () )\n            {\n                return false;\n            }\n            final BundleRequirement other = (BundleRequirement)obj;\n            if ( this.name == null )\n            {\n                if ( other.name != null )\n                {\n                    return false;\n                }\n            }\n            else if ( !this.name.equals ( other.name ) )\n            {\n                return false;\n            }\n            return true;\n        }\n    }\n    public static class CapabilityValue\n    {\n        private final String type;\n        private final String value;\n        public CapabilityValue ( final String type, final String value )\n        {\n            this.type = type;\n            this.value = value;\n        }\n        public String getType ()\n        {\n            return this.type;\n        }\n        public String getValue ()\n        {\n            return this.value;\n        }\n    }\n    public static class ProvideCapability\n    {\n        private final String namespace;\n        private final Map<String, CapabilityValue> values;\n        public ProvideCapability ( final String namespace, final Map<String, CapabilityValue> values )\n        {\n            this.namespace = namespace;\n            this.values = values;\n        }\n        public String getNamespace ()\n        {\n            return this.namespace;\n        }\n        public Map<String, CapabilityValue> getValues ()\n        {\n            return this.values;\n        }\n    }\n<fim_suffix>    public static class RequireCapability\n    {\n        private final String namespace;\n        private final String filter;\n        private final String effective;\n        public RequireCapability ( final String namespace, final String filter, final String effective )\n        {\n            this.namespace = namespace;\n            this.filter = filter;\n            this.effective = effective;\n        }\n        public String getNamespace ()\n        {\n            return this.namespace;\n        }\n        public String getFilter ()\n        {\n            return this.filter;\n        }\n        public String getEffective ()\n        {\n            return this.effective;\n        }\n    }<fim_middle>// class below is data class\n"}