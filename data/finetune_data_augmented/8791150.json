{"text": "<fim_prefix>        if (!this.userId.equals(that.userId))\n          return false;\n      }\n      boolean this_present_gatewayID = true && this.isSetGatewayID();\n      boolean that_present_gatewayID = true && that.isSetGatewayID();\n      if (this_present_gatewayID || that_present_gatewayID) {\n        if (!(this_present_gatewayID && that_present_gatewayID))\n          return false;\n        if (!this.gatewayID.equals(that.gatewayID))\n          return false;\n      }\n      boolean this_present_userComputeResourceId = true && this.isSetUserComputeResourceId();\n      boolean that_present_userComputeResourceId = true && that.isSetUserComputeResourceId();\n      if (this_present_userComputeResourceId || that_present_userComputeResourceId) {\n        if (!(this_present_userComputeResourceId && that_present_userComputeResourceId))\n          return false;\n        if (!this.userComputeResourceId.equals(that.userComputeResourceId))\n          return false;\n      }\n      return true;\n    }\n    @Override\n    public int hashCode() {\n      List<Object> list = new ArrayList<Object>();\n      boolean present_userId = true && (isSetUserId());\n      list.add(present_userId);\n      if (present_userId)\n        list.add(userId);\n      boolean present_gatewayID = true && (isSetGatewayID());\n      list.add(present_gatewayID);\n      if (present_gatewayID)\n        list.add(gatewayID);\n      boolean present_userComputeResourceId = true && (isSetUserComputeResourceId());\n      list.add(present_userComputeResourceId);\n      if (present_userComputeResourceId)\n        list.add(userComputeResourceId);\n      return list.hashCode();\n    }\n    @Override\n    public int compareTo(getUserComputeResourcePreference_args other) {\n      if (!getClass().equals(other.getClass())) {\n        return getClass().getName().compareTo(other.getClass().getName());\n      }\n      int lastComparison = 0;\n      lastComparison = Boolean.valueOf(isSetUserId()).compareTo(other.isSetUserId());\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n      if (isSetUserId()) {\n        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.userId, other.userId);\n        if (lastComparison != 0) {\n          return lastComparison;\n        }\n      }\n      lastComparison = Boolean.valueOf(isSetGatewayID()).compareTo(other.isSetGatewayID());\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n      if (isSetGatewayID()) {\n        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.gatewayID, other.gatewayID);\n        if (lastComparison != 0) {\n          return lastComparison;\n        }\n      }\n      lastComparison = Boolean.valueOf(isSetUserComputeResourceId()).compareTo(other.isSetUserComputeResourceId());\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n      if (isSetUserComputeResourceId()) {\n        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.userComputeResourceId, other.userComputeResourceId);\n        if (lastComparison != 0) {\n          return lastComparison;\n        }\n      }\n      return 0;\n    }\n    public _Fields fieldForId(int fieldId) {\n      return _Fields.findByThriftId(fieldId);\n    }\n    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {\n      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);\n    }\n    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {\n      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);\n    }\n    @Override\n    public String toString() {\n      StringBuilder sb = new StringBuilder(\"getUserComputeResourcePreference_args(\");\n      boolean first = true;\n      sb.append(\"userId:\");\n      if (this.userId == null) {\n        sb.append(\"null\");\n      } else {\n        sb.append(this.userId);\n      }\n      first = false;\n      if (!first) sb.append(\", \");\n      sb.append(\"gatewayID:\");\n      if (this.gatewayID == null) {\n        sb.append(\"null\");\n      } else {\n        sb.append(this.gatewayID);\n      }\n      first = false;\n      if (!first) sb.append(\", \");\n      sb.append(\"userComputeResourceId:\");\n      if (this.userComputeResourceId == null) {\n        sb.append(\"null\");\n      } else {\n        sb.append(this.userComputeResourceId);\n      }\n      first = false;\n      sb.append(\")\");\n      return sb.toString();\n    }\n    public void validate() throws org.apache.thrift.TException {\n      // check for required fields\n      if (userId == null) {\n        throw new org.apache.thrift.protocol.TProtocolException(\"Required field 'userId' was not present! Struct: \" + toString());\n      }\n      if (gatewayID == null) {\n        throw new org.apache.thrift.protocol.TProtocolException(\"Required field 'gatewayID' was not present! Struct: \" + toString());\n      }\n      if (userComputeResourceId == null) {\n        throw new org.apache.thrift.protocol.TProtocolException(\"Required field 'userComputeResourceId' was not present! Struct: \" + toString());\n      }\n      // check for sub-struct validity\n    }\n    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {\n      try {\n        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));\n      } catch (org.apache.thrift.TException te) {\n        throw new java.io.IOException(te);\n      }\n    }\n    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {\n      try {\n        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));\n      } catch (org.apache.thrift.TException te) {\n        throw new java.io.IOException(te);\n      }\n    }\n    private static class getUserComputeResourcePreference_argsStandardSchemeFactory implements SchemeFactory {\n      public getUserComputeResourcePreference_argsStandardScheme getScheme() {\n        return new getUserComputeResourcePreference_argsStandardScheme();\n      }\n    }\n<fim_suffix>    private static class getUserComputeResourcePreference_argsStandardScheme extends StandardScheme<getUserComputeResourcePreference_args> {\n      public void read(org.apache.thrift.protocol.TProtocol iprot, getUserComputeResourcePreference_args struct) throws org.apache.thrift.TException {\n        org.apache.thrift.protocol.TField schemeField;\n        iprot.readStructBegin();\n        while (true)\n        {\n          schemeField = iprot.readFieldBegin();\n          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { \n            break;\n          }\n          switch (schemeField.id) {\n            case 1: // USER_ID\n              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {\n                struct.userId = iprot.readString();\n                struct.setUserIdIsSet(true);\n              } else { \n                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);\n              }\n              break;\n            case 2: // GATEWAY_ID\n              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {\n                struct.gatewayID = iprot.readString();\n                struct.setGatewayIDIsSet(true);\n              } else { \n                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);\n              }\n              break;\n            case 3: // USER_COMPUTE_RESOURCE_ID\n              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {\n                struct.userComputeResourceId = iprot.readString();\n                struct.setUserComputeResourceIdIsSet(true);\n              } else { \n                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);\n              }\n              break;\n            default:\n              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);\n          }\n          iprot.readFieldEnd();\n        }\n        iprot.readStructEnd();\n        // check for required fields of primitive type, which can't be checked in the validate method\n        struct.validate();\n      }\n      public void write(org.apache.thrift.protocol.TProtocol oprot, getUserComputeResourcePreference_args struct) throws org.apache.thrift.TException {\n        struct.validate();\n        oprot.writeStructBegin(STRUCT_DESC);\n        if (struct.userId != null) {\n          oprot.writeFieldBegin(USER_ID_FIELD_DESC);\n          oprot.writeString(struct.userId);\n          oprot.writeFieldEnd();\n        }\n        if (struct.gatewayID != null) {\n          oprot.writeFieldBegin(GATEWAY_ID_FIELD_DESC);\n          oprot.writeString(struct.gatewayID);\n          oprot.writeFieldEnd();\n        }\n        if (struct.userComputeResourceId != null) {\n          oprot.writeFieldBegin(USER_COMPUTE_RESOURCE_ID_FIELD_DESC);\n          oprot.writeString(struct.userComputeResourceId);\n          oprot.writeFieldEnd();\n        }\n        oprot.writeFieldStop();\n        oprot.writeStructEnd();\n      }\n    }<fim_middle>// class below is blob\n"}