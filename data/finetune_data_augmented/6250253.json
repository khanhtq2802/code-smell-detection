{"text": "<fim_prefix>/**\n * Copyright (c) 2015 Bosch Software Innovations GmbH and others.\n *\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n */\npackage org.eclipse.hawkbit.ui.utils;\n\nimport java.io.Serializable;\n\nimport org.springframework.beans.factory.annotation.Autowired;\n\nimport com.vaadin.server.FontAwesome;\nimport com.vaadin.spring.annotation.SpringComponent;\nimport com.vaadin.spring.annotation.UIScope;\n\n/**\n * Show success and error messages.\n */\n@UIScope\n@SpringComponent\npublic class UINotification implements Serializable {\n\n    private static final long serialVersionUID = -9030485417988977466L;\n\n    private final NotificationMessage notificationMessage;\n\n    @Autowired\n    UINotification(final NotificationMessage notificationMessage) {\n        this.notificationMessage = notificationMessage;\n    }\n\n    /**\n     * Display success type of notification message.\n     * \n     * @param message\n     *            is the message to displayed as success.\n     */\n    public void displaySuccess(final String message) {\n        notificationMessage.showNotification(SPUIStyleDefinitions.SP_NOTIFICATION_SUCCESS_MESSAGE_STYLE, null, message,\n                true);\n    }\n\n    /**\n     * Display warning type of notification message.\n     * \n     * @param message\n     *            is the message to displayed as warning.\n     */\n<fim_suffix>    public void displayWarning(final String message) {\n        notificationMessage.showNotification(SPUIStyleDefinitions.SP_NOTIFICATION_WARNING_MESSAGE_STYLE, null, message,\n                true);\n    }\n\n    /**\n     * Display error type of notification message.\n     * \n     * @param message\n     *            as message.\n     */\n    public void displayValidationError(final String message) {\n        final StringBuilder updatedMsg = new StringBuilder(FontAwesome.EXCLAMATION_TRIANGLE.getHtml());\n        updatedMsg.append(' ');\n        updatedMsg.append(message);\n        notificationMessage.showNotification(SPUIStyleDefinitions.SP_NOTIFICATION_ERROR_MESSAGE_STYLE, null,\n                updatedMsg.toString(), true);\n    }\n\n}<fim_middle>// function below has no smell\n"}