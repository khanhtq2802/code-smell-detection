{"text": "<fim_prefix>        } catch (org.apache.airavata.model.error.InvalidRequestException ire) {\n          result.ire = ire;\n        } catch (org.apache.airavata.model.error.AiravataClientException ace) {\n          result.ace = ace;\n        } catch (org.apache.airavata.model.error.AiravataSystemException ase) {\n          result.ase = ase;\n        } catch (org.apache.airavata.model.error.AuthorizationException ae) {\n          result.ae = ae;\n        }\n        return result;\n      }\n    }\n    public static class getAllStorageResourceNames<I extends Iface> extends org.apache.thrift.ProcessFunction<I, getAllStorageResourceNames_args> {\n      public getAllStorageResourceNames() {\n        super(\"getAllStorageResourceNames\");\n      }\n      public getAllStorageResourceNames_args getEmptyArgsInstance() {\n        return new getAllStorageResourceNames_args();\n      }\n      protected boolean isOneway() {\n        return false;\n      }\n      public getAllStorageResourceNames_result getResult(I iface, getAllStorageResourceNames_args args) throws org.apache.thrift.TException {\n        getAllStorageResourceNames_result result = new getAllStorageResourceNames_result();\n        try {\n          result.success = iface.getAllStorageResourceNames(args.authzToken);\n        } catch (org.apache.airavata.model.error.InvalidRequestException ire) {\n          result.ire = ire;\n        } catch (org.apache.airavata.model.error.AiravataClientException ace) {\n          result.ace = ace;\n        } catch (org.apache.airavata.model.error.AiravataSystemException ase) {\n          result.ase = ase;\n        } catch (org.apache.airavata.model.error.AuthorizationException ae) {\n          result.ae = ae;\n        }\n        return result;\n      }\n    }\n    public static class updateStorageResource<I extends Iface> extends org.apache.thrift.ProcessFunction<I, updateStorageResource_args> {\n      public updateStorageResource() {\n        super(\"updateStorageResource\");\n      }\n      public updateStorageResource_args getEmptyArgsInstance() {\n        return new updateStorageResource_args();\n      }\n      protected boolean isOneway() {\n        return false;\n      }\n      public updateStorageResource_result getResult(I iface, updateStorageResource_args args) throws org.apache.thrift.TException {\n        updateStorageResource_result result = new updateStorageResource_result();\n        try {\n          result.success = iface.updateStorageResource(args.authzToken, args.storageResourceId, args.storageResourceDescription);\n          result.setSuccessIsSet(true);\n        } catch (org.apache.airavata.model.error.InvalidRequestException ire) {\n          result.ire = ire;\n        } catch (org.apache.airavata.model.error.AiravataClientException ace) {\n          result.ace = ace;\n        } catch (org.apache.airavata.model.error.AiravataSystemException ase) {\n          result.ase = ase;\n        } catch (org.apache.airavata.model.error.AuthorizationException ae) {\n          result.ae = ae;\n        }\n        return result;\n      }\n    }\n    public static class deleteStorageResource<I extends Iface> extends org.apache.thrift.ProcessFunction<I, deleteStorageResource_args> {\n      public deleteStorageResource() {\n        super(\"deleteStorageResource\");\n      }\n      public deleteStorageResource_args getEmptyArgsInstance() {\n        return new deleteStorageResource_args();\n      }\n      protected boolean isOneway() {\n        return false;\n      }\n      public deleteStorageResource_result getResult(I iface, deleteStorageResource_args args) throws org.apache.thrift.TException {\n        deleteStorageResource_result result = new deleteStorageResource_result();\n        try {\n          result.success = iface.deleteStorageResource(args.authzToken, args.storageResourceId);\n          result.setSuccessIsSet(true);\n        } catch (org.apache.airavata.model.error.InvalidRequestException ire) {\n          result.ire = ire;\n        } catch (org.apache.airavata.model.error.AiravataClientException ace) {\n          result.ace = ace;\n        } catch (org.apache.airavata.model.error.AiravataSystemException ase) {\n          result.ase = ase;\n        } catch (org.apache.airavata.model.error.AuthorizationException ae) {\n          result.ae = ae;\n        }\n        return result;\n      }\n    }\n    public static class addLocalSubmissionDetails<I extends Iface> extends org.apache.thrift.ProcessFunction<I, addLocalSubmissionDetails_args> {\n      public addLocalSubmissionDetails() {\n        super(\"addLocalSubmissionDetails\");\n      }\n      public addLocalSubmissionDetails_args getEmptyArgsInstance() {\n        return new addLocalSubmissionDetails_args();\n      }\n      protected boolean isOneway() {\n        return false;\n      }\n      public addLocalSubmissionDetails_result getResult(I iface, addLocalSubmissionDetails_args args) throws org.apache.thrift.TException {\n        addLocalSubmissionDetails_result result = new addLocalSubmissionDetails_result();\n        try {\n          result.success = iface.addLocalSubmissionDetails(args.authzToken, args.computeResourceId, args.priorityOrder, args.localSubmission);\n        } catch (org.apache.airavata.model.error.InvalidRequestException ire) {\n          result.ire = ire;\n        } catch (org.apache.airavata.model.error.AiravataClientException ace) {\n          result.ace = ace;\n        } catch (org.apache.airavata.model.error.AiravataSystemException ase) {\n          result.ase = ase;\n        } catch (org.apache.airavata.model.error.AuthorizationException ae) {\n          result.ae = ae;\n        }\n        return result;\n      }\n    }\n    public static class updateLocalSubmissionDetails<I extends Iface> extends org.apache.thrift.ProcessFunction<I, updateLocalSubmissionDetails_args> {\n      public updateLocalSubmissionDetails() {\n        super(\"updateLocalSubmissionDetails\");\n      }\n      public updateLocalSubmissionDetails_args getEmptyArgsInstance() {\n        return new updateLocalSubmissionDetails_args();\n      }\n      protected boolean isOneway() {\n        return false;\n      }\n      public updateLocalSubmissionDetails_result getResult(I iface, updateLocalSubmissionDetails_args args) throws org.apache.thrift.TException {\n        updateLocalSubmissionDetails_result result = new updateLocalSubmissionDetails_result();\n        try {\n          result.success = iface.updateLocalSubmissionDetails(args.authzToken, args.jobSubmissionInterfaceId, args.localSubmission);\n          result.setSuccessIsSet(true);\n        } catch (org.apache.airavata.model.error.InvalidRequestException ire) {\n          result.ire = ire;\n        } catch (org.apache.airavata.model.error.AiravataClientException ace) {\n          result.ace = ace;\n        } catch (org.apache.airavata.model.error.AiravataSystemException ase) {\n          result.ase = ase;\n        } catch (org.apache.airavata.model.error.AuthorizationException ae) {\n          result.ae = ae;\n        }\n        return result;\n      }\n    }\n    public static class getLocalJobSubmission<I extends Iface> extends org.apache.thrift.ProcessFunction<I, getLocalJobSubmission_args> {\n      public getLocalJobSubmission() {\n        super(\"getLocalJobSubmission\");\n      }\n      public getLocalJobSubmission_args getEmptyArgsInstance() {\n        return new getLocalJobSubmission_args();\n      }\n      protected boolean isOneway() {\n        return false;\n      }\n      public getLocalJobSubmission_result getResult(I iface, getLocalJobSubmission_args args) throws org.apache.thrift.TException {\n        getLocalJobSubmission_result result = new getLocalJobSubmission_result();\n        try {\n          result.success = iface.getLocalJobSubmission(args.authzToken, args.jobSubmissionId);\n        } catch (org.apache.airavata.model.error.InvalidRequestException ire) {\n          result.ire = ire;\n        } catch (org.apache.airavata.model.error.AiravataClientException ace) {\n          result.ace = ace;\n        } catch (org.apache.airavata.model.error.AiravataSystemException ase) {\n          result.ase = ase;\n        } catch (org.apache.airavata.model.error.AuthorizationException ae) {\n          result.ae = ae;\n        }\n        return result;\n      }\n    }\n    public static class addSSHJobSubmissionDetails<I extends Iface> extends org.apache.thrift.ProcessFunction<I, addSSHJobSubmissionDetails_args> {\n      public addSSHJobSubmissionDetails() {\n        super(\"addSSHJobSubmissionDetails\");\n      }\n<fim_suffix>      public addSSHJobSubmissionDetails_args getEmptyArgsInstance() {\n        return new addSSHJobSubmissionDetails_args();\n      }<fim_middle>// function below has no smell\n"}