{"text": "<fim_prefix>// Copyright (c) Microsoft. All rights reserved.\n// Licensed under the MIT license. See License.txt in the repository root.\npackage com.microsoft.tfs.client.common.ui.wit.qe;\nimport java.lang.reflect.Method;\nimport java.text.MessageFormat;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.HashMap;\nimport java.util.HashSet;\nimport java.util.Iterator;\nimport org.eclipse.jface.action.Action;\nimport org.eclipse.jface.action.IAction;\nimport org.eclipse.jface.action.IMenuListener;\nimport org.eclipse.jface.action.IMenuManager;\nimport org.eclipse.jface.action.MenuManager;\nimport org.eclipse.jface.action.Separator;\nimport org.eclipse.jface.viewers.CellEditor;\nimport org.eclipse.jface.viewers.ComboBoxCellEditor;\nimport org.eclipse.jface.viewers.IStructuredSelection;\nimport org.eclipse.jface.viewers.ITableLabelProvider;\nimport org.eclipse.jface.viewers.TableViewer;\nimport org.eclipse.swt.SWT;\nimport org.eclipse.swt.custom.SashForm;\nimport org.eclipse.swt.events.ControlAdapter;\nimport org.eclipse.swt.events.ControlEvent;\nimport org.eclipse.swt.events.ControlListener;\nimport org.eclipse.swt.events.KeyAdapter;\nimport org.eclipse.swt.events.KeyEvent;\nimport org.eclipse.swt.events.MouseAdapter;\nimport org.eclipse.swt.events.MouseEvent;\nimport org.eclipse.swt.events.SelectionAdapter;\nimport org.eclipse.swt.events.SelectionEvent;\nimport org.eclipse.swt.graphics.Image;\nimport org.eclipse.swt.graphics.Point;\nimport org.eclipse.swt.graphics.Rectangle;\nimport org.eclipse.swt.layout.FillLayout;\nimport org.eclipse.swt.layout.GridData;\nimport org.eclipse.swt.layout.GridLayout;\nimport org.eclipse.swt.widgets.Button;\nimport org.eclipse.swt.widgets.Combo;\nimport org.eclipse.swt.widgets.Composite;\nimport org.eclipse.swt.widgets.Display;\nimport org.eclipse.swt.widgets.Event;\nimport org.eclipse.swt.widgets.Label;\nimport org.eclipse.swt.widgets.Layout;\nimport org.eclipse.swt.widgets.Listener;\nimport org.eclipse.swt.widgets.Table;\nimport org.eclipse.swt.widgets.TableColumn;\nimport org.eclipse.swt.widgets.TableItem;\nimport org.eclipse.ui.IWorkbenchActionConstants;\nimport org.eclipse.ui.actions.ActionFactory;\nimport com.microsoft.tfs.client.common.ui.Messages;\nimport com.microsoft.tfs.client.common.ui.TFSCommonUIClientPlugin;\nimport com.microsoft.tfs.client.common.ui.framework.helper.CellEditorAccessibilityHelper;\nimport com.microsoft.tfs.client.common.ui.framework.helper.ContentProviderAdapter;\nimport com.microsoft.tfs.client.common.ui.framework.helper.SWTUtil;\nimport com.microsoft.tfs.client.common.ui.framework.image.ImageHelper;\nimport com.microsoft.tfs.client.common.ui.framework.layout.GridDataBuilder;\nimport com.microsoft.tfs.client.common.ui.framework.layout.GridLayoutMarginHelper;\nimport com.microsoft.tfs.client.common.ui.framework.sizing.MeasureItemHeightListener;\nimport com.microsoft.tfs.client.common.ui.framework.viewer.SafeLabelProvider;\nimport com.microsoft.tfs.client.common.ui.helpers.AutomationIDHelper;\nimport com.microsoft.tfs.core.clients.workitem.link.Topology;\nimport com.microsoft.tfs.core.clients.workitem.link.WorkItemLinkTypeCollection;\nimport com.microsoft.tfs.core.clients.workitem.link.WorkItemLinkTypeEnd;\nimport com.microsoft.tfs.core.clients.workitem.link.WorkItemLinkTypeEndCollection;\nimport com.microsoft.tfs.core.clients.workitem.project.Project;\nimport com.microsoft.tfs.core.clients.workitem.query.qe.QEQuery;\nimport com.microsoft.tfs.core.clients.workitem.query.qe.QEQueryGrouping;\nimport com.microsoft.tfs.core.clients.workitem.query.qe.QEQueryRow;\nimport com.microsoft.tfs.core.clients.workitem.query.qe.QEQueryRowCollection;\nimport com.microsoft.tfs.core.clients.workitem.queryhierarchy.LinkQueryMode;\nimport com.microsoft.tfs.core.clients.workitem.queryhierarchy.QueryType;\npublic class QueryEditorControl extends Composite {\n    /*\n     * The keys of the columns. These are internal identifiers and are never\n     * shown to the end user.\n     */\n    public static final String HIDDEN_LEFTMOST_COLUMN = \"hidden leftmost column\"; //$NON-NLS-1$\n    public static final String ADD_ROW_COLUMN = \"add row column\"; //$NON-NLS-1$\n    public static final String LOGICAL_OPERATOR_COLUMN = \"logical operator\"; //$NON-NLS-1$\n    public static final String FIELD_NAME_COLUMN = \"field name\"; //$NON-NLS-1$\n    public static final String OPERATOR_COLUMN = \"operator\"; //$NON-NLS-1$\n    public static final String VALUE_COLUMN = \"value\"; //$NON-NLS-1$\n    public static final String ALLTOPLEVEL_RADIO_ID = \"QueryEditorControl.radioAllTopLevel\"; //$NON-NLS-1$\n    public static final String TOPLEVELSELECTED_RADIO_ID = \"QueryEditorControl.radioTopLevelSelected\"; //$NON-NLS-1$\n    public static final String TOPLEVELNOTSELECTED_RADIO_ID = \"QueryEditorControl.radioTopLevelNotSelected\"; //$NON-NLS-1$\n    public static final String LINKTYPEANY_RADIO_ID = \"QueryEditorControl.radioLinkTypeAny\"; //$NON-NLS-1$\n    public static final String LINKTYPESELECTED_RADIO_ID = \"QueryEditorControl.radioLinkTypeSelected\"; //$NON-NLS-1$\n    public static final String TYPEOFTREE_COMBO_ID = \"QueryEditorControl.comboTypeOfTree\"; //$NON-NLS-1$\n    public static final String LINKTYPES_TABLE_ID = \"QueryEditorControl.tableLinkTypes\"; //$NON-NLS-1$\n    public static final String SOURCE_CLAUSE_TABLE_ID = \"QueryEditorControl.tableSourceClause\"; //$NON-NLS-1$\n    public static final String TARGET_CLAUSE_TABLE_ID = \"QueryEditorControl.tableTargetClause\"; //$NON-NLS-1$\n    /*\n     * The column data array. The array has one entry for each column in the\n     * query builder UI. Each ColumnData instance tracks initialization data for\n     * a column.\n     */\n    private static final ColumnData[] COLUMN_DATA = new ColumnData[] {\n        new ColumnData(HIDDEN_LEFTMOST_COLUMN, null, 0, false, SWT.NONE),\n        new ColumnData(ADD_ROW_COLUMN, null, 25, false, SWT.CENTER),\n        new ColumnData(\n            LOGICAL_OPERATOR_COLUMN,\n            Messages.getString(\"QueryEditorControl.ColumNameAndOr\"), //$NON-NLS-1$\n            100,\n            true,\n            SWT.NONE),\n        new ColumnData(\n            FIELD_NAME_COLUMN,\n            Messages.getString(\"QueryEditorControl.ColumnNameField\"), //$NON-NLS-1$\n            100,\n            true,\n            SWT.NONE),\n        new ColumnData(\n            OPERATOR_COLUMN,\n            Messages.getString(\"QueryEditorControl.ColumnNameOperator\"), //$NON-NLS-1$\n            100,\n            true,\n            SWT.NONE),\n        new ColumnData(VALUE_COLUMN, Messages.getString(\"QueryEditorControl.ColumnNameValue\"), 0, true, SWT.NONE), //$NON-NLS-1$\n    };\n    public static int columnIndexOf(final String columnName) {\n        for (int i = 0; i < COLUMN_DATA.length; i++) {\n            if (COLUMN_DATA[i].name.equals(columnName)) {\n                return i;\n            }\n        }\n        return -1;\n    }\n<fim_suffix>    private static String[] getColumnProperties() {\n        final String[] columnProperties = new String[COLUMN_DATA.length];\n        for (int i = 0; i < columnProperties.length; i++) {\n            columnProperties[i] = COLUMN_DATA[i].name;\n        }\n        return columnProperties;\n    }\n    private final QEQuery query;\n    private final Project project;\n    private QueryType currentQueryType = QueryType.INVALID;\n    private final TableViewer tableViewerSource;\n    private TableViewer tableViewerTarget;<fim_middle>// function below has no smell\n"}