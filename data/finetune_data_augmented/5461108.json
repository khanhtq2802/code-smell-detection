{"text": "<fim_prefix>/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\npackage org.apache.bookkeeper.mledger.offload;\n\nimport java.io.IOException;\nimport java.util.ArrayList;\nimport java.util.List;\nimport lombok.Data;\nimport lombok.extern.slf4j.Slf4j;\nimport org.apache.bookkeeper.mledger.LedgerOffloaderFactory;\nimport org.apache.commons.lang3.tuple.Pair;\nimport org.apache.pulsar.common.nar.NarClassLoader;\n\n<fim_suffix>@Slf4j\n@Data\npublic class Offloaders implements AutoCloseable {\n\n    private final List<Pair<NarClassLoader, LedgerOffloaderFactory>> offloaders = new ArrayList<>();\n\n    public LedgerOffloaderFactory getOffloaderFactory(String driverName) throws IOException {\n        for (Pair<NarClassLoader, LedgerOffloaderFactory> factory : offloaders) {\n            if (factory.getRight().isDriverSupported(driverName)) {\n                return factory.getRight();\n            }\n        }\n        throw new IOException(\"No offloader found for driver '\" + driverName + \"'.\" +\n            \" Please make sure you dropped the offloader nar packages under `${PULSAR_HOME}/offloaders`.\");\n    }\n\n    @Override\n    public void close() throws Exception {\n        offloaders.forEach(offloader -> {\n            try {\n                offloader.getLeft().close();\n            } catch (IOException e) {\n                log.warn(\"Failed to close nar class loader for offloader '{}': {}\",\n                    offloader.getRight().getClass(), e.getMessage());\n            }\n        });\n    }\n}<fim_middle>// class below has no smell\n"}