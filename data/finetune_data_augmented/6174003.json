{"text": "<fim_prefix>/*\n * Copyright (c) 2012-2018 Red Hat, Inc.\n * This program and the accompanying materials are made\n * available under the terms of the Eclipse Public License 2.0\n * which is available at https://www.eclipse.org/legal/epl-2.0/\n *\n * SPDX-License-Identifier: EPL-2.0\n *\n * Contributors:\n *   Red Hat, Inc. - initial API and implementation\n */\npackage org.eclipse.che.mail.template.ST;\n\nimport com.google.common.io.CharStreams;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.Reader;\nimport java.util.Map;\nimport javax.inject.Singleton;\nimport org.eclipse.che.commons.lang.IoUtil;\nimport org.eclipse.che.mail.template.Template;\nimport org.eclipse.che.mail.template.TemplateProcessor;\nimport org.eclipse.che.mail.template.exception.TemplateException;\nimport org.eclipse.che.mail.template.exception.TemplateNotFoundException;\nimport org.stringtemplate.v4.ST;\n\n/**\n * {@link TemplateProcessor} implementation based on {@link ST}.\n *\n * @author Sergii Leshchenko\n */\n@Singleton\npublic class STTemplateProcessorImpl implements TemplateProcessor {\n\n  @Override\n  public String process(String templateName, Map<String, Object> variables)\n      throws TemplateException {\n    ST st = new ST(resolve(templateName));\n    variables.forEach(st::add);\n    return st.render();\n  }\n\n  @Override\n  public String process(Template template) throws TemplateException {\n    return process(template.getName(), template.getAttributes());\n  }\n\n<fim_suffix>  private String resolve(String template) throws TemplateNotFoundException {\n    try (Reader reader = new InputStreamReader(IoUtil.getResource(template))) {\n      return CharStreams.toString(reader);\n    } catch (IOException e) {\n      throw new TemplateNotFoundException(e.getMessage(), e);\n    }\n  }\n}<fim_middle>// function below has no smell\n"}