{"text": "<fim_prefix>/*\n *   Licensed to the Apache Software Foundation (ASF) under one\n *   or more contributor license agreements.  See the NOTICE file\n *   distributed with this work for additional information\n *   regarding copyright ownership.  The ASF licenses this file\n *   to you under the Apache License, Version 2.0 (the\n *   \"License\"); you may not use this file except in compliance\n *   with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n *   Unless required by applicable law or agreed to in writing,\n *   software distributed under the License is distributed on an\n *   \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n *   KIND, either express or implied.  See the License for the\n *   specific language governing permissions and limitations\n *   under the License.\n *\n */\npackage org.apache.directory.studio.openldap.config.acl.wrapper;\n\nimport org.apache.directory.studio.openldap.config.acl.model.AclAttribute;\n\n/**\n * The wrapper around an AclAttribute class.\n * \n * @author <a href=\"mailto:dev@directory.apache.org\">Apache Directory Project</a>\n */\npublic class AclAttributeWrapper implements Cloneable, Comparable<AclAttributeWrapper>\n{\n    /** The AclAttribute */\n    private AclAttribute aclAttribute;\n    \n    /**\n     * Creates a new instance of AclAttributeWrapper.\n     */\n    public AclAttributeWrapper()\n    {\n        // Default to ExtensibleObject\n        aclAttribute = new AclAttribute( \"extensibleObject\", null );\n    }\n    \n    \n    /**\n     * Creates a new instance of AclAttributeWrapper.\n     *\n     * @param aclAttribute the aclAttribute\n     */\n    public AclAttributeWrapper( AclAttribute aclAttribute )\n    {\n        this.aclAttribute = aclAttribute;\n    }\n\n\n    /**\n     * @return the value\n     */\n    public AclAttribute getAclAttribute()\n    {\n        return aclAttribute;\n    }\n\n    \n    /**\n     * @param aclAttribute the aclAttribute to set\n     */\n    public void setAclAttribute( AclAttribute aclAttribute )\n    {\n        this.aclAttribute = aclAttribute;\n    }\n\n    \n    /**\n     * @param aclAttribute the aclAttribute to set\n     */\n    public void setAclAttribute( String name )\n    {\n        this.aclAttribute = new AclAttribute( name, null );\n    }\n\n\n    /**\n     * Clone the current object\n     */\n    public AclAttributeWrapper clone()\n    {\n        try\n        {\n            return (AclAttributeWrapper)super.clone();\n        }\n        catch ( CloneNotSupportedException e )\n        {\n            return null;\n        }\n    }\n\n\n    /**\n     * @see Object#equals(Object)\n     */\n<fim_suffix>    public boolean equals( Object that )\n    {\n        // Quick test\n        if ( this == that )\n        {\n            return true;\n        }\n\n        if ( that instanceof AclAttributeWrapper )\n        {\n            AclAttributeWrapper thatInstance = (AclAttributeWrapper)that;\n\n            return aclAttribute.getName().equalsIgnoreCase( thatInstance.aclAttribute.getName() ) && \n                   ( aclAttribute.isAttributeType() && thatInstance.aclAttribute.isAttributeType() ||\n                     ( ( aclAttribute.isObjectClass() || aclAttribute.isObjectClassNotAllowed() ) && \n                         ( thatInstance.aclAttribute.isObjectClass() || thatInstance.aclAttribute.isObjectClassNotAllowed() ) ) );\n        }\n        else\n        {\n            return false;\n        }\n    }\n\n\n    /**\n     * @see Object#hashCode()\n     */\n    public int hashCode()\n    {\n        int h = 37;\n\n        if ( aclAttribute != null )\n        {\n            h += h*17 + aclAttribute.getName().hashCode();\n        }\n\n        return h;\n    }\n\n\n    /**\n     * @see Comparable#compareTo()\n     */\n    public int compareTo( AclAttributeWrapper that )\n    {\n        if ( that == null )\n        {\n            return 1;\n        }\n\n        // Check the AclAttribute\n        return aclAttribute.getName().compareToIgnoreCase( that.getAclAttribute().getName() );\n    }\n\n\n    /**\n     * @see Object#toString()\n     */\n    public String toString()\n    {\n        return aclAttribute.toString();\n    }\n}<fim_middle>// function below has no smell\n"}