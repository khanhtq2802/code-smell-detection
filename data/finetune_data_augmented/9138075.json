{"text": "<fim_prefix>/*******************************************************************************\n * Copyright (c) 2004 Actuate Corporation.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *  Actuate Corporation  - initial API and implementation\n *******************************************************************************/\n\npackage org.eclipse.birt.report.model.tests.matrix;\n\nimport org.eclipse.birt.report.model.api.DesignElementHandle;\nimport org.eclipse.birt.report.model.api.extension.IElementCommand;\n\n/**\n * Implements <code>IElementCommand</code> for testing\n */\n\n<fim_suffix>public class ElementCommandImpl implements IElementCommand\n{\n\n\tprivate ReportItemImpl element = null;\n\tprivate DesignElementHandle extItemHandle = null;\n\tprivate String propName = null;\n\n\tprivate static String commandTag = \"initial\"; //$NON-NLS-1$\t\n\tprivate static final String EXECUTE_TAG = \"execute\"; //$NON-NLS-1$\n\tprivate static final String REDO_TAG = \"redo\"; //$NON-NLS-1$\n\tprivate static final String UNDO_TAG = \"undo\"; //$NON-NLS-1$\n\n\t/**\n\t * The old value of the property\n\t */\n\n\tprivate Object oldValue = null;\n\n\t/**\n\t * The new value of the property\n\t */\n\n\tprivate Object newValue = null;\n\n\t/**\n\t * Constructor.\n\t * \n\t * @param propertyOwner\n\t *            the report element that has the property\n\t * @param name\n\t *            the name of the property to change\n\t * @param value\n\t *            the new value\n\t */\n\n\tpublic ElementCommandImpl( ReportItemImpl propertyOwner, String name,\n\t\t\tObject value, DesignElementHandle elementHandle )\n\t{\n\t\tassert propertyOwner != null;\n\t\telement = propertyOwner;\n\t\tassert name != null;\n\n\t\tassert elementHandle != null;\n\t\textItemHandle = elementHandle;\n\n\t\tpropName = name;\n\t\tnewValue = value;\n\t\toldValue = propertyOwner.getProperty( name );\n\t}\n\n\t/*\n\t * (non-Javadoc)\n\t * \n\t * @see org.eclipse.birt.model.design.core.activity.SimpleRecord#perform(boolean)\n\t */\n\n\tprotected void perform( boolean undo )\n\t{\n\t\tObject value = undo ? oldValue : newValue;\n\t\tif ( propName.equals( \"company\" ) && value != null ) //$NON-NLS-1$\n\t\t\telement.doSetProperty( propName, value.toString( ) + commandTag );\n\t\telse if ( propName.equals( \"company\" ) && value == null ) //$NON-NLS-1$\n\t\t\telement.doSetProperty( propName, commandTag );\n\t\telse\n\t\t\telement.doSetProperty( propName, value );\n\t}\n\n\t/*\n\t * (non-Javadoc)\n\t * \n\t * @see org.eclipse.birt.model.extension.IExtendedElementCommand#execute()\n\t */\n\tpublic void execute( )\n\t{\n\t\tcommandTag = EXECUTE_TAG;\n\t\tperform( false );\n\t}\n\n\t/*\n\t * (non-Javadoc)\n\t * \n\t * @see org.eclipse.birt.model.extension.IExtendedElementCommand#undo()\n\t */\n\tpublic void undo( )\n\t{\n\t\tcommandTag = UNDO_TAG;\n\t\tperform( true );\n\n\t}\n\n\t/*\n\t * (non-Javadoc)\n\t * \n\t * @see org.eclipse.birt.model.extension.IExtendedElementCommand#redo()\n\t */\n\tpublic void redo( )\n\t{\n\t\tcommandTag = REDO_TAG;\n\t\tperform( false );\n\n\t}\n\n\t/*\n\t * (non-Javadoc)\n\t * \n\t * @see org.eclipse.birt.model.extension.IExtendedElementCommand#canUndo()\n\t */\n\tpublic boolean canUndo( )\n\t{\n\t\treturn true;\n\t}\n\n\t/*\n\t * (non-Javadoc)\n\t * \n\t * @see org.eclipse.birt.model.extension.IExtendedElementCommand#canRedo()\n\t */\n\tpublic boolean canRedo( )\n\t{\n\t\treturn true;\n\t}\n\n\t/*\n\t * (non-Javadoc)\n\t * \n\t * @see org.eclipse.birt.model.extension.IExtendedElementCommand#getLabel()\n\t */\n\tpublic String getLabel( )\n\t{\n\t\treturn \"Command\"; //$NON-NLS-1$\n\t}\n\n\t/*\n\t * (non-Javadoc)\n\t * \n\t * @see org.eclipse.birt.report.model.api.extension.IElementCommand#getElementHandle()\n\t */\n\tpublic DesignElementHandle getElementHandle( )\n\t{\n\t\treturn extItemHandle;\n\t}\n}<fim_middle>// class below has no smell\n"}