{"text": "<fim_prefix> *        may provide additional or different license terms and conditions\n *        for use, reproduction, or distribution of Your modifications, or\n *        for any such Derivative Works as a whole, provided Your use,\n *        reproduction, and distribution of the Work otherwise complies with\n *        the conditions stated in this License.\n *\n *     5. Submission of Contributions. Unless You explicitly state otherwise,\n *        any Contribution intentionally submitted for inclusion in the Work\n *        by You to the Licensor shall be under the terms and conditions of\n *        this License, without any additional terms or conditions.\n *        Notwithstanding the above, nothing herein shall supersede or modify\n *        the terms of any separate license agreement you may have executed\n *        with Licensor regarding such Contributions.\n *\n *     6. Trademarks. This License does not grant permission to use the trade\n *        names, trademarks, service marks, or product names of the Licensor,\n *        except as required for reasonable and customary use in describing the\n *        origin of the Work and reproducing the content of the NOTICE file.\n *\n *     7. Disclaimer of Warranty. Unless required by applicable law or\n *        agreed to in writing, Licensor provides the Work (and each\n *        Contributor provides its Contributions) on an \"AS IS\" BASIS,\n *        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n *        implied, including, without limitation, any warranties or conditions\n *        of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n *        PARTICULAR PURPOSE. You are solely responsible for determining the\n *        appropriateness of using or redistributing the Work and assume any\n *        risks associated with Your exercise of permissions under this License.\n *\n *     8. Limitation of Liability. In no event and under no legal theory,\n *        whether in tort (including negligence), contract, or otherwise,\n *        unless required by applicable law (such as deliberate and grossly\n *        negligent acts) or agreed to in writing, shall any Contributor be\n *        liable to You for damages, including any direct, indirect, special,\n *        incidental, or consequential damages of any character arising as a\n *        result of this License or out of the use or inability to use the\n *        Work (including but not limited to damages for loss of goodwill,\n *        work stoppage, computer failure or malfunction, or any and all\n *        other commercial damages or losses), even if such Contributor\n *        has been advised of the possibility of such damages.\n *\n *     9. Accepting Warranty or Additional Liability. While redistributing\n *        the Work or Derivative Works thereof, You may choose to offer,\n *        and charge a fee for, acceptance of support, warranty, indemnity,\n *        or other liability obligations and/or rights consistent with this\n *        License. However, in accepting such obligations, You may act only\n *        on Your own behalf and on Your sole responsibility, not on behalf\n *        of any other Contributor, and only if You agree to indemnify,\n *        defend, and hold each Contributor harmless for any liability\n *        incurred by, or claims asserted against, such Contributor by reason\n *        of your accepting any such warranty or additional liability.\n *\n *     END OF TERMS AND CONDITIONS\n *\n *     APPENDIX: How to apply the Apache License to your work.\n *\n *        To apply the Apache License to your work, attach the following\n *        boilerplate notice, with the fields enclosed by brackets \"[]\"\n *        replaced with your own identifying information. (Don't include\n *        the brackets!)  The text should be enclosed in the appropriate\n *        comment syntax for the file format. We also recommend that a\n *        file or class name and description of purpose be included on the\n *        same \"printed page\" as the copyright notice for easier\n *        identification within third-party archives.\n *\n *     Copyright 2016 Alibaba Group\n *\n *     Licensed under the Apache License, Version 2.0 (the \"License\");\n *     you may not use this file except in compliance with the License.\n *     You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n *     Unless required by applicable law or agreed to in writing, software\n *     distributed under the License is distributed on an \"AS IS\" BASIS,\n *     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *     See the License for the specific language governing permissions and\n *     limitations under the License.\n *\n *\n */\npackage com.taobao.android.builder.tools.bundleinfo.model;\nimport com.google.common.collect.Lists;\nimport java.util.HashMap;\nimport java.util.List;\n/**\n * Created by wuzhong on 2016/11/24.\n */\n<fim_suffix>public class BasicBundleInfo {\n    private String pkgName;\n    /**\n     * The main dex depends on + the md5 that is currently dependent\n     */\n    private String unique_tag;\n    private String applicationName;\n    private String version;\n    public Boolean getIsMBundle() {\n        return isMBundle;\n    }\n    public void setIsMBundle(boolean mainBundle) {\n        isMBundle = mainBundle;\n    }\n    private Boolean isMBundle = false;\n    private List<String> dependency = Lists.newArrayList();\n    private List<String> activities = Lists.newArrayList();\n    private List<String> services = Lists.newArrayList();\n    private List<String> receivers = Lists.newArrayList();\n    private List<String> contentProviders = Lists.newArrayList();\n    private HashMap<String,String> remoteFragments= new HashMap<String,String>();\n    private HashMap<String,String> remoteViews = new HashMap<String,String>();\n    private HashMap<String,String> remoteTransactors = new HashMap<String,String>();\n    private Boolean isInternal = true;\n    public HashMap<String, String> getRemoteViews() {\n        return remoteViews;\n    }\n    public void setRemoteViews(HashMap<String, String> remoteViews) {\n        this.remoteViews = remoteViews;\n    }\n    public HashMap<String, String> getRemoteTransactors() {\n        return remoteTransactors;\n    }\n    public void setRemoteTransactors(HashMap<String, String> remoteTransactors) {\n        this.remoteTransactors = remoteTransactors;\n    }\n    public HashMap<String, String> getRemoteFragments() {\n        return remoteFragments;\n    }\n    public void setRemoteFragments(HashMap<String, String> remoteFragments) {\n        this.remoteFragments = remoteFragments;\n    }\n    public String getPkgName() {\n        return pkgName;\n    }\n    public void setPkgName(String pkgName) {\n        this.pkgName = pkgName;\n    }\n    public String getApplicationName() {\n        return applicationName;\n    }\n    public void setApplicationName(String applicationName) {\n        this.applicationName = applicationName;\n    }\n    public String getVersion() {\n        return version;\n    }\n    public void setVersion(String version) {\n        this.version = version;\n    }\n    public List<String> getDependency() {\n        return dependency;\n    }\n    public void setDependency(List<String> dependency) {\n        this.dependency = dependency;\n    }\n    public List<String> getActivities() {\n        return activities;\n    }\n    public void setActivities(List<String> activities) {\n        this.activities = activities;\n    }\n    public List<String> getServices() {\n        return services;\n    }\n    public void setServices(List<String> services) {\n        this.services = services;\n    }\n    public List<String> getReceivers() {\n        return receivers;\n    }\n    public void setReceivers(List<String> receivers) {\n        this.receivers = receivers;\n    }\n    public List<String> getContentProviders() {\n        return contentProviders;\n    }\n    public void setContentProviders(List<String> contentProviders) {\n        this.contentProviders = contentProviders;\n    }\n    public boolean getIsInternal() {\n        return isInternal;\n    }\n    public void setIsInternal(boolean internal) {\n        isInternal = internal;\n    }\n    public String getUnique_tag() {\n        return unique_tag;\n    }\n    public void setUnique_tag(String unique_tag) {\n        this.unique_tag = unique_tag;\n    }\n}<fim_middle>// class below is data class\n"}