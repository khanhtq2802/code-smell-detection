{"text": "<fim_prefix>//\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n//\n\npackage com.cloud.hypervisor.xenserver.resource.wrapper.xenbase;\n\nimport java.util.List;\nimport java.util.Set;\n\nimport com.cloud.agent.api.AttachOrDettachConfigDriveCommand;\nimport com.cloud.resource.ResourceWrapper;\nimport com.xensource.xenapi.Connection;\nimport com.xensource.xenapi.VBD;\nimport com.xensource.xenapi.VDI;\nimport com.xensource.xenapi.VM;\nimport com.xensource.xenapi.Types;\nimport org.apache.log4j.Logger;\n\nimport com.cloud.agent.api.Answer;\nimport com.cloud.hypervisor.xenserver.resource.CitrixResourceBase;\nimport com.cloud.resource.CommandWrapper;\nimport org.apache.xmlrpc.XmlRpcException;\n\n<fim_suffix>@ResourceWrapper(handles =  AttachOrDettachConfigDriveCommand.class)\npublic final class CitrixAttachOrDettachConfigDriveCommandWrapper extends CommandWrapper<AttachOrDettachConfigDriveCommand, Answer, CitrixResourceBase> {\n\n    private static final Logger s_logger = Logger.getLogger(CitrixAttachOrDettachConfigDriveCommandWrapper.class);\n\n    @Override\n    public Answer execute(final AttachOrDettachConfigDriveCommand command, final CitrixResourceBase citrixResourceBase) {\n        final Connection conn = citrixResourceBase.getConnection();\n\n        String vmName = command.getVmName();\n        List<String[]> vmData = command.getVmData();\n        String label = command.getConfigDriveLabel();\n        Boolean isAttach = command.isAttach();\n\n        try {\n            Set<VM> vms = VM.getByNameLabel(conn, vmName);\n            for (VM vm : vms) {\n                if (isAttach) {\n                    if (!citrixResourceBase.createAndAttachConfigDriveIsoForVM(conn, vm, vmData, label)) {\n                        s_logger.debug(\"Failed to attach config drive iso to VM \" + vmName);\n                    }\n                } else {\n                    // delete the config drive iso attached to VM\n                    Set<VDI> vdis = VDI.getByNameLabel(conn, vmName+\".iso\");\n                    if (vdis != null && !vdis.isEmpty()) {\n                        s_logger.debug(\"Deleting config drive for the VM \" + vmName);\n                        VDI vdi = vdis.iterator().next();\n                        // Find the VM's CD-ROM VBD\n                        Set<VBD> vbds = vdi.getVBDs(conn);\n\n                        for (VBD vbd : vbds) {\n                            VBD.Record vbdRec = vbd.getRecord(conn);\n\n                            if (vbdRec.type.equals(Types.VbdType.CD) && !vbdRec.empty && !vbdRec.userdevice.equals(citrixResourceBase._attachIsoDeviceNum)) {\n                                if (vbdRec.currentlyAttached) {\n                                    vbd.eject(conn);\n                                }\n                                vbd.destroy(conn);\n                            }\n                        }\n                        vdi.destroy(conn);\n                    }\n\n                    s_logger.debug(\"Successfully dettached config drive iso from the VM \" + vmName);\n                }\n            }\n        }catch (Types.XenAPIException ex) {\n            s_logger.debug(\"Failed to attach config drive iso to VM \" + vmName + \" \" + ex.getMessage() );\n        }catch (XmlRpcException ex) {\n            s_logger.debug(\"Failed to attach config drive iso to VM \" + vmName + \" \"+ex.getMessage());\n        }\n\n        return new Answer(command, true, \"success\");\n\n\n    }\n}<fim_middle>// class below has no smell\n"}