{"text": "<fim_prefix>/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage org.apache.oozie.event;\n\nimport java.io.Serializable;\nimport java.util.List;\n\nimport org.apache.hadoop.conf.Configuration;\nimport org.apache.oozie.client.event.Event;\n\n/**\n * Interface to define the queue operations for the events system\n */\n<fim_suffix>public interface EventQueue {\n\n    public class EventQueueElement implements Serializable {\n\n        private static final long serialVersionUID = 1L;\n        Event event;\n\n        public EventQueueElement(Event e) {\n            event = e;\n        }\n    }\n\n    /**\n     * Initialize the event queue\n     * @param conf configuration\n     */\n    void init(Configuration conf);\n\n    /**\n     * Add event to queue\n     * @param e event\n     */\n    void add(Event e);\n\n    /**\n     * Fetch events from queue in batch\n     * @return events set\n     */\n    List<Event> pollBatch();\n\n    /**\n    * Fetch single event from queue\n    * @return event\n    */\n   Event poll();\n\n    /**\n     * Find out if queue is empty\n     * @return boolean\n     */\n    boolean isEmpty();\n\n    /**\n     * Get current queue size\n     * @return size\n     */\n    int size();\n\n    /**\n     * Read topmost event from queue but do not pop from it\n     * @return event\n     */\n    Event peek();\n\n    /**\n     * Get the batch size used during polling events\n     * @return batchSize\n     */\n    int getBatchSize();\n\n    /**\n     * Clear the events queue\n     */\n    void clear();\n\n}<fim_middle>// class below has no smell\n"}