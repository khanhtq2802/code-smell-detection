{"text": "<fim_prefix>\t\tenvironment.put(\"host\", host);\n\t\tenvironment.put(\"port\", port);\n\t\tinitEnv(environment);\n\t}\n\t/**\n\t * Construct the RMI object context.\n\t *\n\t * @param environment Its environment, currently unused.\n\t */\n        public RMIContext(Hashtable environment) {\n                initEnv(environment);\n\t}\n\t/* Initializes environment\n\t*\n\t* @param environment Its environment, currently unused.\n\t*/\n\tprivate void initEnv(Hashtable environment) {\n\t\tif (environment == null) {\n\t\t  throw new IllegalArgumentException(\"Nonnull environment required\");\n\t\t}\n                this.environment = (Hashtable) environment.clone();\n        }\n\tpublic Object lookup(String name) throws NamingException {\n\t\tcheckName(name);\n\t\tname = toRMIName(name);\n\t\tif (name.length() == 0) {\n\t\t  return new RMIContext(environment);\n\t\t}\n\t\tRegistry registry = getRegistry();\n\t\ttry {\n\t\t\treturn registry.lookup(name);\n\t\t} catch (NotBoundException ex) {\n\t\t\tthrow new NameNotFoundException(name + \" not found in RMI registry \" + registry);\n\t\t} catch (RemoteException ex) {\n\t\t\tthrow new NamingException(\"Remote exception: \" + ex.getMessage());\n\t\t}\n\t}\n\tpublic Object lookup(Name name) throws NamingException {\n\t\treturn lookup(name.toString());\n\t}\n\tpublic void bind(String name, Object obj) throws NamingException {\n\t\tcheckName(name);\n\t\tRegistry registry = getRegistry();\n\t\ttry {\n\t\t\tregistry.bind(toRMIName(name), (Remote) obj);\n\t\t} catch (AlreadyBoundException ex) {\n\t\t\tthrow new NameAlreadyBoundException(name + \" already bound in RMI registry \" + registry);\n\t\t} catch (RemoteException ex) {\n\t\t\tthrow new NamingException(\"Remote exception: \" + ex.getMessage());\n\t\t}\n\t}\n\tpublic void bind(Name name, Object obj) throws NamingException {\n\t\tbind(name.toString(), obj);\n\t}\n\tpublic void rebind(String name, Object obj) throws NamingException {\n\t\tcheckName(name);\n\t\ttry {\n\t\t\tRegistry registry = getRegistry();\n\t\t\tregistry.rebind(toRMIName(name), (Remote) obj);\n\t\t} catch (RemoteException ex) {\n\t\t\tex.printStackTrace();\n\t\t\tthrow new NamingException(\"Remote exception: \" + ex.getMessage());\n\t\t}\n\t}\n\tpublic void rebind(Name name, Object obj) throws NamingException {\n\t\trebind(name.toString(), obj);\n\t}\n\tpublic void unbind(String name) throws NamingException {\n\t\tcheckName(name);\n\t\tRegistry registry = getRegistry();\n\t\ttry {\n\t\t\tregistry.unbind(toRMIName(name));\n\t\t} catch (NotBoundException ex) {\n\t\t\tthrow new NameNotFoundException(name + \" not found in RMI registry \" + registry);\n\t\t} catch (RemoteException ex) {\n\t\t\tthrow new NamingException(\"Remote exception: \" + ex.getMessage());\n\t\t}\n\t}\n\tpublic void unbind(Name name) throws NamingException {\n\t\tunbind(name.toString());\n\t}\n\tpublic void rename(String oldName, String newName) throws NamingException {\n\t\tcheckName(newName);\n\t\tthrow new OperationNotSupportedException(\"Not yet implemented\");\n\t}\n\tpublic void rename(Name oldName, Name newName) throws NamingException {\n\t\trename(oldName.toString(), newName.toString());\n\t}\n\tpublic NamingEnumeration list(String name) throws NamingException {\n\t\tif (name.length() > 0) {\n\t\t  throw new NotContextException(\"Subcontexts not supported\");\n\t\t}\n\t\tfinal Iterator i = getCurrentBindings().iterator();\n\t\treturn new NamingEnumeration() {\n\t\t\tpublic void close() {}\n\t\t\tpublic boolean hasMore() {\n\t\t\t\treturn i.hasNext();\n\t\t\t}\n\t\t\tpublic Object next() throws NamingException {\n\t\t\t\tString n = \"urn:eda:rmi:\" + (String) i.next();\n\t\t\t\torg.apache.oodt.commons.Service server = (org.apache.oodt.commons.Service) lookup(n);\n\t\t\t\ttry {\n\t\t\t\t\treturn new NameClassPair(n, server.getServerInterfaceName());\n\t\t\t\t} catch (RemoteException ex) {\n\t\t\t\t\tthrow new CommunicationException(ex.getMessage());\n\t\t\t\t}\n\t\t\t}\n\t\t\tpublic boolean hasMoreElements() {\n\t\t\t\treturn hasMore();\n\t\t\t}\n\t\t\tpublic Object nextElement() {\n\t\t\t\tObject next = null;\n\t\t\t\ttry {\n\t\t\t\t\tnext = next();\n\t\t\t\t} catch (RuntimeException ex) {\n\t\t\t\t\tthrow ex;\n\t\t\t\t} catch (Exception ignore) {}\n\t\t\t\treturn next;\n\t\t\t}\n\t\t};\n\t}\n\tpublic NamingEnumeration list(Name name) throws NamingException {\n\t\treturn list(name.toString());\n\t}\n\tpublic NamingEnumeration listBindings(String name) throws NamingException {\n\t\tif (name.length() > 0) {\n\t\t  throw new NotContextException(\"Subcontexts not supported\");\n\t\t}\n\t\tfinal Iterator i = getCurrentBindings().iterator();\n\t\treturn new NamingEnumeration() {\n\t\t\tpublic void close() {}\n\t\t\tpublic boolean hasMore() {\n\t\t\t\treturn i.hasNext();\n\t\t\t}\n\t\t\tpublic Object next() throws NamingException {\n\t\t\t\tString n = \"urn:eda:rmi:\" + (String) i.next();\n\t\t\t\treturn new javax.naming.Binding(n, lookup(n));\n\t\t\t}\n\t\t\tpublic boolean hasMoreElements() {\n\t\t\t\treturn hasMore();\n\t\t\t}\n\t\t\tpublic Object nextElement() {\n\t\t\t\tObject next = null;\n\t\t\t\ttry {\n\t\t\t\t\tnext = next();\n\t\t\t\t} catch (RuntimeException ex) {\n\t\t\t\t\tthrow ex;\n\t\t\t\t} catch (Exception ignore) {}\n\t\t\t\treturn next;\n\t\t\t}\n\t\t};\n\t}\n\tpublic NamingEnumeration listBindings(Name name) throws NamingException {\n\t\treturn listBindings(name.toString());\n\t}\n\tpublic void destroySubcontext(String name) throws NamingException {\n\t\tthrow new OperationNotSupportedException(\"Not yet implemented\");\n\t}\n\tpublic void destroySubcontext(Name name) throws NamingException {\n\t\tdestroySubcontext(name.toString());\n\t}\n\tpublic Context createSubcontext(String name) throws NamingException {\n\t\tthrow new OperationNotSupportedException(\"Subcontexts not supported\");\n\t}\n\tpublic Context createSubcontext(Name name) throws NamingException {\n\t\treturn createSubcontext(name.toString());\n\t}\n\tpublic Object lookupLink(String name) throws NamingException {\n\t\treturn lookup(name);\n\t}\n\tpublic Object lookupLink(Name name) throws NamingException {\n\t\treturn lookupLink(name.toString());\n\t}\n\tpublic NameParser getNameParser(String name) throws NamingException {\n\t\treturn nameParser;\n\t}\n\tpublic NameParser getNameParser(Name name) throws NamingException {\n\t\treturn getNameParser(name.toString());\n\t}\n\tpublic String composeName(String name, String prefix) throws NamingException {\n\t\tName result = composeName(new CompositeName(name), new CompositeName(prefix));\n\t\treturn result.toString();\n\t}\n\tpublic Name composeName(Name name, Name prefix) throws NamingException {\n\t\tName result = (Name) prefix.clone();\n\t\tresult.addAll(name);\n\t\treturn result;\n\t}\n\tpublic Object addToEnvironment(String propName, Object propVal) throws NamingException {\n\t\tif (environment == null) {\n\t\t  environment = new Hashtable();\n\t\t}\n\t\treturn environment.put(propName, propVal);\n\t}\n\tpublic Object removeFromEnvironment(String propName) throws NamingException {\n\t\tif (environment == null) {\n\t\t  return null;\n\t\t}\n\t\treturn environment.remove(propName);\n\t}\n\tpublic Hashtable getEnvironment() throws NamingException {\n\t\tif (environment == null) {\n\t\t  return new Hashtable();\n\t\t}\n\t\treturn (Hashtable) environment.clone();\n\t}\n\tpublic String getNameInNamespace() throws NamingException {\n\t\treturn \"\";\n\t}\n\tpublic void close() throws NamingException {\n\t\tenvironment = null;\n\t}\n\t/**\n\t * Get the current bindings in the RMI registry.\n\t *\n\t * @return A list of the current bindings, as simple string names.\n\t */\n<fim_suffix>\tprivate List getCurrentBindings() throws NamingException {\n\t\tList names;\n\t\ttry {\n\t\t\tRegistry registry = getRegistry();\n\t\t\tnames = Arrays.asList(registry.list());\n\t\t} catch (RemoteException ex) {\n\t\t\tnames = Collections.EMPTY_LIST;\n\t\t}\n\t\treturn names;\n\t}<fim_middle>// function below has no smell\n"}