{"text": "<fim_prefix>            rule__WithContextExpression__Group__3__Impl();\n            state._fsp--;\n            if (state.failed) return ;\n            pushFollow(FollowSets000.FOLLOW_2);\n            rule__WithContextExpression__Group__4();\n            state._fsp--;\n            if (state.failed) return ;\n            }\n        }\n        catch (RecognitionException re) {\n            reportError(re);\n            recover(input,re);\n        }\n        finally {\n            if ( state.backtracking>0 ) { memoize(input, 688, rule__WithContextExpression__Group__3_StartIndex); }\n            \trestoreStackSize(stackSize);\n        }\n        return ;\n    }\n    // $ANTLR end \"rule__WithContextExpression__Group__3\"\n    // $ANTLR start \"rule__WithContextExpression__Group__3__Impl\"\n    // InternalSimpleBeeLangTestLanguage.g:9649:1: rule__WithContextExpression__Group__3__Impl : ( ( rule__WithContextExpression__Group_3__0 )? ) ;\n    public final void rule__WithContextExpression__Group__3__Impl() throws RecognitionException {\n        int rule__WithContextExpression__Group__3__Impl_StartIndex = input.index();\n        \t\tint stackSize = keepStackSize();\n        try {\n            if ( state.backtracking>0 && alreadyParsedRule(input, 689) ) { return ; }\n            // InternalSimpleBeeLangTestLanguage.g:9653:1: ( ( ( rule__WithContextExpression__Group_3__0 )? ) )\n            // InternalSimpleBeeLangTestLanguage.g:9654:1: ( ( rule__WithContextExpression__Group_3__0 )? )\n            {\n            // InternalSimpleBeeLangTestLanguage.g:9654:1: ( ( rule__WithContextExpression__Group_3__0 )? )\n            // InternalSimpleBeeLangTestLanguage.g:9655:2: ( rule__WithContextExpression__Group_3__0 )?\n            {\n            if ( state.backtracking==0 ) {\n               before(grammarAccess.getWithContextExpressionAccess().getGroup_3()); \n            }\n            // InternalSimpleBeeLangTestLanguage.g:9656:2: ( rule__WithContextExpression__Group_3__0 )?\n            int alt78=2;\n            int LA78_0 = input.LA(1);\n            if ( (LA78_0==56) ) {\n                alt78=1;\n            }\n            switch (alt78) {\n                case 1 :\n                    // InternalSimpleBeeLangTestLanguage.g:9656:3: rule__WithContextExpression__Group_3__0\n                    {\n                    pushFollow(FollowSets000.FOLLOW_2);\n                    rule__WithContextExpression__Group_3__0();\n                    state._fsp--;\n                    if (state.failed) return ;\n                    }\n                    break;\n            }\n            if ( state.backtracking==0 ) {\n               after(grammarAccess.getWithContextExpressionAccess().getGroup_3()); \n            }\n            }\n            }\n        }\n        catch (RecognitionException re) {\n            reportError(re);\n            recover(input,re);\n        }\n        finally {\n            if ( state.backtracking>0 ) { memoize(input, 689, rule__WithContextExpression__Group__3__Impl_StartIndex); }\n            \trestoreStackSize(stackSize);\n        }\n        return ;\n    }\n    // $ANTLR end \"rule__WithContextExpression__Group__3__Impl\"\n    // $ANTLR start \"rule__WithContextExpression__Group__4\"\n    // InternalSimpleBeeLangTestLanguage.g:9664:1: rule__WithContextExpression__Group__4 : rule__WithContextExpression__Group__4__Impl ;\n    public final void rule__WithContextExpression__Group__4() throws RecognitionException {\n        int rule__WithContextExpression__Group__4_StartIndex = input.index();\n        \t\tint stackSize = keepStackSize();\n        try {\n            if ( state.backtracking>0 && alreadyParsedRule(input, 690) ) { return ; }\n            // InternalSimpleBeeLangTestLanguage.g:9668:1: ( rule__WithContextExpression__Group__4__Impl )\n            // InternalSimpleBeeLangTestLanguage.g:9669:2: rule__WithContextExpression__Group__4__Impl\n            {\n            pushFollow(FollowSets000.FOLLOW_2);\n            rule__WithContextExpression__Group__4__Impl();\n            state._fsp--;\n            if (state.failed) return ;\n            }\n        }\n        catch (RecognitionException re) {\n            reportError(re);\n            recover(input,re);\n        }\n        finally {\n            if ( state.backtracking>0 ) { memoize(input, 690, rule__WithContextExpression__Group__4_StartIndex); }\n            \trestoreStackSize(stackSize);\n        }\n        return ;\n    }\n    // $ANTLR end \"rule__WithContextExpression__Group__4\"\n    // $ANTLR start \"rule__WithContextExpression__Group__4__Impl\"\n    // InternalSimpleBeeLangTestLanguage.g:9675:1: rule__WithContextExpression__Group__4__Impl : ( ( rule__WithContextExpression__ContextBlockAssignment_4 ) ) ;\n    public final void rule__WithContextExpression__Group__4__Impl() throws RecognitionException {\n        int rule__WithContextExpression__Group__4__Impl_StartIndex = input.index();\n        \t\tint stackSize = keepStackSize();\n        try {\n            if ( state.backtracking>0 && alreadyParsedRule(input, 691) ) { return ; }\n            // InternalSimpleBeeLangTestLanguage.g:9679:1: ( ( ( rule__WithContextExpression__ContextBlockAssignment_4 ) ) )\n            // InternalSimpleBeeLangTestLanguage.g:9680:1: ( ( rule__WithContextExpression__ContextBlockAssignment_4 ) )\n            {\n            // InternalSimpleBeeLangTestLanguage.g:9680:1: ( ( rule__WithContextExpression__ContextBlockAssignment_4 ) )\n            // InternalSimpleBeeLangTestLanguage.g:9681:2: ( rule__WithContextExpression__ContextBlockAssignment_4 )\n            {\n            if ( state.backtracking==0 ) {\n               before(grammarAccess.getWithContextExpressionAccess().getContextBlockAssignment_4()); \n            }\n            // InternalSimpleBeeLangTestLanguage.g:9682:2: ( rule__WithContextExpression__ContextBlockAssignment_4 )\n            // InternalSimpleBeeLangTestLanguage.g:9682:3: rule__WithContextExpression__ContextBlockAssignment_4\n            {\n            pushFollow(FollowSets000.FOLLOW_2);\n            rule__WithContextExpression__ContextBlockAssignment_4();\n            state._fsp--;\n            if (state.failed) return ;\n            }\n            if ( state.backtracking==0 ) {\n               after(grammarAccess.getWithContextExpressionAccess().getContextBlockAssignment_4()); \n            }\n            }\n            }\n        }\n        catch (RecognitionException re) {\n            reportError(re);\n            recover(input,re);\n        }\n        finally {\n            if ( state.backtracking>0 ) { memoize(input, 691, rule__WithContextExpression__Group__4__Impl_StartIndex); }\n            \trestoreStackSize(stackSize);\n        }\n        return ;\n    }\n    // $ANTLR end \"rule__WithContextExpression__Group__4__Impl\"\n    // $ANTLR start \"rule__WithContextExpression__Group_3__0\"\n    // InternalSimpleBeeLangTestLanguage.g:9691:1: rule__WithContextExpression__Group_3__0 : rule__WithContextExpression__Group_3__0__Impl rule__WithContextExpression__Group_3__1 ;\n<fim_suffix>    public final void rule__WithContextExpression__Group_3__0() throws RecognitionException {\n        int rule__WithContextExpression__Group_3__0_StartIndex = input.index();\n        \t\tint stackSize = keepStackSize();\n        try {\n            if ( state.backtracking>0 && alreadyParsedRule(input, 692) ) { return ; }\n            // InternalSimpleBeeLangTestLanguage.g:9695:1: ( rule__WithContextExpression__Group_3__0__Impl rule__WithContextExpression__Group_3__1 )\n            // InternalSimpleBeeLangTestLanguage.g:9696:2: rule__WithContextExpression__Group_3__0__Impl rule__WithContextExpression__Group_3__1\n            {\n            pushFollow(FollowSets000.FOLLOW_9);\n            rule__WithContextExpression__Group_3__0__Impl();\n            state._fsp--;\n            if (state.failed) return ;\n            pushFollow(FollowSets000.FOLLOW_2);\n            rule__WithContextExpression__Group_3__1();\n            state._fsp--;\n            if (state.failed) return ;\n            }\n        }\n        catch (RecognitionException re) {\n            reportError(re);\n            recover(input,re);\n        }\n        finally {\n            if ( state.backtracking>0 ) { memoize(input, 692, rule__WithContextExpression__Group_3__0_StartIndex); }\n            \trestoreStackSize(stackSize);\n        }\n        return ;\n    }<fim_middle>// function below has no smell\n"}