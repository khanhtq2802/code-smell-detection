{"text": "<fim_prefix>/*\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except in\n * compliance with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.apache.pivot.wtk;\n\nimport org.apache.pivot.util.ListenerList;\n\n/**\n * Label binding listener interface.\n */\n<fim_suffix>public interface LabelBindingListener {\n    /**\n     * Label binding listeners.\n     */\n    public static class Listeners extends ListenerList<LabelBindingListener>\n        implements LabelBindingListener {\n        @Override\n        public void textKeyChanged(Label label, String previousTextKey) {\n            forEach(listener -> listener.textKeyChanged(label, previousTextKey));\n        }\n\n        @Override\n        public void textBindTypeChanged(Label label, BindType previousTextBindType) {\n            forEach(listener -> listener.textBindTypeChanged(label, previousTextBindType));\n        }\n\n        @Override\n        public void textBindMappingChanged(Label label,\n            Label.TextBindMapping previousTextBindMapping) {\n            forEach(listener -> listener.textBindMappingChanged(label, previousTextBindMapping));\n        }\n    }\n\n    /**\n     * Label binding listener adapter.\n     * @deprecated Since 2.1 and Java 8 the interface itself has default implementations.\n     */\n    @Deprecated\n    public static class Adapter implements LabelBindingListener {\n        @Override\n        public void textKeyChanged(Label label, String previousTextKey) {\n            // empty block\n        }\n\n        @Override\n        public void textBindTypeChanged(Label label, BindType previousTextBindType) {\n            // empty block\n        }\n\n        @Override\n        public void textBindMappingChanged(Label label,\n            Label.TextBindMapping previousTextBindMapping) {\n            // empty block\n        }\n    }\n\n    /**\n     * Called when a label's text key has changed.\n     *\n     * @param label           The label whose binding has changed.\n     * @param previousTextKey The previous binding key for the label text.\n     */\n    default void textKeyChanged(Label label, String previousTextKey) {\n    }\n\n    /**\n     * Called when a label's text bind type has changed.\n     *\n     * @param label                The label whose binding has changed.\n     * @param previousTextBindType The previous bind type for the label text.\n     */\n    default void textBindTypeChanged(Label label, BindType previousTextBindType) {\n    }\n\n    /**\n     * Called when a label's text bind mapping has changed.\n     *\n     * @param label                   The label whose binding has changed.\n     * @param previousTextBindMapping The previous bind mapping for the label text.\n     */\n    default void textBindMappingChanged(Label label, Label.TextBindMapping previousTextBindMapping) {\n    }\n}<fim_middle>// class below has no smell\n"}