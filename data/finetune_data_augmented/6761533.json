{"text": "<fim_prefix>      for (String field : FIELDS) {\n        this.requestField(field, value);\n      }\n      return this;\n    }\n    @Override\n    public APIRequestCreateObject requestFields (List<String> fields) {\n      return this.requestFields(fields, true);\n    }\n    @Override\n    public APIRequestCreateObject requestFields (List<String> fields, boolean value) {\n      for (String field : fields) {\n        this.requestField(field, value);\n      }\n      return this;\n    }\n    @Override\n    public APIRequestCreateObject requestField (String field) {\n      this.requestField(field, true);\n      return this;\n    }\n    @Override\n    public APIRequestCreateObject requestField (String field, boolean value) {\n      this.requestFieldInternal(field, value);\n      return this;\n    }\n  }\n  public static class APIRequestCreateOccludesPopup extends APIRequest<APINode> {\n    APINode lastResponse = null;\n    @Override\n    public APINode getLastResponse() {\n      return lastResponse;\n    }\n    public static final String[] PARAMS = {\n      \"unity\",\n      \"flash\",\n    };\n    public static final String[] FIELDS = {\n    };\n    @Override\n    public APINode parseResponse(String response, String header) throws APIException {\n      return APINode.parseResponse(response, getContext(), this, header).head();\n    }\n    @Override\n    public APINode execute() throws APIException {\n      return execute(new HashMap<String, Object>());\n    }\n    @Override\n    public APINode execute(Map<String, Object> extraParams) throws APIException {\n      ResponseWrapper rw = executeInternal(extraParams);\n      lastResponse = parseResponse(rw.getBody(), rw.getHeader());\n      return lastResponse;\n    }\n    public ListenableFuture<APINode> executeAsync() throws APIException {\n      return executeAsync(new HashMap<String, Object>());\n    };\n    public ListenableFuture<APINode> executeAsync(Map<String, Object> extraParams) throws APIException {\n      return Futures.transform(\n        executeAsyncInternal(extraParams),\n        new Function<ResponseWrapper, APINode>() {\n           public APINode apply(ResponseWrapper result) {\n             try {\n               return APIRequestCreateOccludesPopup.this.parseResponse(result.getBody(), result.getHeader());\n             } catch (Exception e) {\n               throw new RuntimeException(e);\n             }\n           }\n         }\n      );\n    };\n    public APIRequestCreateOccludesPopup(String nodeId, APIContext context) {\n      super(context, nodeId, \"/occludespopups\", \"POST\", Arrays.asList(PARAMS));\n    }\n    @Override\n    public APIRequestCreateOccludesPopup setParam(String param, Object value) {\n      setParamInternal(param, value);\n      return this;\n    }\n    @Override\n    public APIRequestCreateOccludesPopup setParams(Map<String, Object> params) {\n      setParamsInternal(params);\n      return this;\n    }\n    public APIRequestCreateOccludesPopup setUnity (Boolean unity) {\n      this.setParam(\"unity\", unity);\n      return this;\n    }\n    public APIRequestCreateOccludesPopup setUnity (String unity) {\n      this.setParam(\"unity\", unity);\n      return this;\n    }\n    public APIRequestCreateOccludesPopup setFlash (Boolean flash) {\n      this.setParam(\"flash\", flash);\n      return this;\n    }\n    public APIRequestCreateOccludesPopup setFlash (String flash) {\n      this.setParam(\"flash\", flash);\n      return this;\n    }\n    public APIRequestCreateOccludesPopup requestAllFields () {\n      return this.requestAllFields(true);\n    }\n    public APIRequestCreateOccludesPopup requestAllFields (boolean value) {\n      for (String field : FIELDS) {\n        this.requestField(field, value);\n      }\n      return this;\n    }\n    @Override\n    public APIRequestCreateOccludesPopup requestFields (List<String> fields) {\n      return this.requestFields(fields, true);\n    }\n    @Override\n    public APIRequestCreateOccludesPopup requestFields (List<String> fields, boolean value) {\n      for (String field : fields) {\n        this.requestField(field, value);\n      }\n      return this;\n    }\n    @Override\n    public APIRequestCreateOccludesPopup requestField (String field) {\n      this.requestField(field, true);\n      return this;\n    }\n    @Override\n    public APIRequestCreateOccludesPopup requestField (String field, boolean value) {\n      this.requestFieldInternal(field, value);\n      return this;\n    }\n  }\n  public static class APIRequestGetOzoneRelease extends APIRequest<APINode> {\n    APINodeList<APINode> lastResponse = null;\n    @Override\n    public APINodeList<APINode> getLastResponse() {\n      return lastResponse;\n    }\n    public static final String[] PARAMS = {\n    };\n    public static final String[] FIELDS = {\n    };\n    @Override\n    public APINodeList<APINode> parseResponse(String response, String header) throws APIException {\n      return APINode.parseResponse(response, getContext(), this, header);\n    }\n    @Override\n    public APINodeList<APINode> execute() throws APIException {\n      return execute(new HashMap<String, Object>());\n    }\n    @Override\n    public APINodeList<APINode> execute(Map<String, Object> extraParams) throws APIException {\n      ResponseWrapper rw = executeInternal(extraParams);\n      lastResponse = parseResponse(rw.getBody(),rw.getHeader());\n      return lastResponse;\n    }\n    public ListenableFuture<APINodeList<APINode>> executeAsync() throws APIException {\n      return executeAsync(new HashMap<String, Object>());\n    };\n    public ListenableFuture<APINodeList<APINode>> executeAsync(Map<String, Object> extraParams) throws APIException {\n      return Futures.transform(\n        executeAsyncInternal(extraParams),\n        new Function<ResponseWrapper, APINodeList<APINode>>() {\n           public APINodeList<APINode> apply(ResponseWrapper result) {\n             try {\n               return APIRequestGetOzoneRelease.this.parseResponse(result.getBody(), result.getHeader());\n             } catch (Exception e) {\n               throw new RuntimeException(e);\n             }\n           }\n         }\n      );\n    };\n    public APIRequestGetOzoneRelease(String nodeId, APIContext context) {\n      super(context, nodeId, \"/ozone_release\", \"GET\", Arrays.asList(PARAMS));\n    }\n    @Override\n    public APIRequestGetOzoneRelease setParam(String param, Object value) {\n      setParamInternal(param, value);\n      return this;\n    }\n    @Override\n    public APIRequestGetOzoneRelease setParams(Map<String, Object> params) {\n      setParamsInternal(params);\n      return this;\n    }\n    public APIRequestGetOzoneRelease requestAllFields () {\n      return this.requestAllFields(true);\n    }\n    public APIRequestGetOzoneRelease requestAllFields (boolean value) {\n      for (String field : FIELDS) {\n        this.requestField(field, value);\n      }\n      return this;\n    }\n    @Override\n    public APIRequestGetOzoneRelease requestFields (List<String> fields) {\n      return this.requestFields(fields, true);\n    }\n    @Override\n    public APIRequestGetOzoneRelease requestFields (List<String> fields, boolean value) {\n      for (String field : fields) {\n        this.requestField(field, value);\n      }\n      return this;\n    }\n    @Override\n    public APIRequestGetOzoneRelease requestField (String field) {\n      this.requestField(field, true);\n      return this;\n    }\n    @Override\n    public APIRequestGetOzoneRelease requestField (String field, boolean value) {\n      this.requestFieldInternal(field, value);\n      return this;\n    }\n  }\n  public static class APIRequestCreateOzoneRelease extends APIRequest<APINode> {\n    APINode lastResponse = null;\n    @Override\n    public APINode getLastResponse() {\n      return lastResponse;\n    }\n    public static final String[] PARAMS = {\n      \"release_name\",\n      \"changelog\",\n      \"rollout_percentage\",\n      \"auto_push_to_prod\",\n      \"channel_id\",\n    };\n    public static final String[] FIELDS = {\n    };\n    @Override\n    public APINode parseResponse(String response, String header) throws APIException {\n      return APINode.parseResponse(response, getContext(), this, header).head();\n    }\n    @Override\n    public APINode execute() throws APIException {\n      return execute(new HashMap<String, Object>());\n    }\n<fim_suffix>    @Override\n    public APINode execute(Map<String, Object> extraParams) throws APIException {\n      ResponseWrapper rw = executeInternal(extraParams);\n      lastResponse = parseResponse(rw.getBody(), rw.getHeader());\n      return lastResponse;\n    }<fim_middle>// function below has no smell\n"}