{"text": "<fim_prefix>/*\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License. You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.apache.kafka.common.metrics;\n\n/**\n * An upper or lower bound for metrics\n */\npublic final class Quota {\n\n    private final boolean upper;\n    private final double bound;\n\n    public Quota(double bound, boolean upper) {\n        this.bound = bound;\n        this.upper = upper;\n    }\n\n    public static Quota upperBound(double upperBound) {\n        return new Quota(upperBound, true);\n    }\n\n    public static Quota lowerBound(double lowerBound) {\n        return new Quota(lowerBound, false);\n    }\n\n    public boolean isUpperBound() {\n        return this.upper;\n    }\n\n    public double bound() {\n        return this.bound;\n    }\n\n    public boolean acceptable(double value) {\n        return (upper && value <= bound) || (!upper && value >= bound);\n    }\n\n    @Override\n    public int hashCode() {\n        final int prime = 31;\n        int result = 1;\n        result = prime * result + (int) this.bound;\n        result = prime * result + (this.upper ? 1 : 0);\n        return result;\n    }\n\n<fim_suffix>    @Override\n    public boolean equals(Object obj) {\n        if (this == obj)\n            return true;\n        if (!(obj instanceof Quota))\n            return false;\n        Quota that = (Quota) obj;\n        return (that.bound == this.bound) && (that.upper == this.upper);\n    }\n\n    @Override\n    public String toString() {\n        return (upper ? \"upper=\" : \"lower=\") + bound;\n    }\n}<fim_middle>// function below has no smell\n"}