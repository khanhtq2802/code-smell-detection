{"text": "<fim_prefix>/*******************************************************************************\n * Copyright (c) 2016 Sierra Wireless and others.\n * \n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * and Eclipse Distribution License v1.0 which accompany this distribution.\n * \n * The Eclipse Public License is available at\n *    http://www.eclipse.org/legal/epl-v10.html\n * and the Eclipse Distribution License is available at\n *    http://www.eclipse.org/org/documents/edl-v10.html.\n * \n * Contributors:\n *     Sierra Wireless - initial API and implementation\n *******************************************************************************/\npackage org.eclipse.leshan.core.node;\n\nimport org.eclipse.leshan.util.Validate;\n\n/**\n * The object link is used to refer an Instance of a given Object. An Object link value is composed of two concatenated\n * 16-bits unsigned integers following the Network Byte Order convention. The Most Significant Halfword is an ObjectID,\n * the Least Significant Hafword is an ObjectInstance ID. An Object Link referencing no Object Instance will contain the\n * concatenation of 2 MAX-ID values (null link)\n * \n * MAX-ID = 65535.\n */\npublic class ObjectLink {\n    private final static int MAXID = 65535;\n\n    private final int objectId;\n    private final int objectInstanceId;\n\n    /**\n     * Create a null link. An Object Link referencing no object instance\n     */\n    public ObjectLink() {\n        this(MAXID, MAXID);\n    }\n\n    /**\n     * Create a Object Link referencing an object instance with the objectId/objectInstanceId path.\n     */\n    public ObjectLink(int objectId, int objectInstanceId) {\n        // validate range\n        Validate.isTrue(0 <= objectId && objectId <= MAXID);\n        Validate.isTrue(0 <= objectInstanceId && objectInstanceId <= MAXID);\n\n        // validate null link\n        Validate.isTrue(\n                (objectId != MAXID && objectInstanceId != MAXID) || objectId == MAXID && objectInstanceId == MAXID);\n\n        this.objectId = objectId;\n        this.objectInstanceId = objectInstanceId;\n    }\n\n    /**\n     * Create a Object Link referencing an object instance with the given path.\n     */\n    public static ObjectLink fromPath(String path) {\n        LwM2mPath lwM2mPath = new LwM2mPath(path);\n        if (lwM2mPath.isRoot()) {\n            return new ObjectLink(); // create null link\n        } else if (lwM2mPath.isObjectInstance()) {\n            return new ObjectLink(lwM2mPath.getObjectId(), lwM2mPath.getObjectInstanceId());\n        } else {\n            throw new IllegalArgumentException(\"Invalid path: ObjectLink should reference an object instance\");\n        }\n    }\n\n<fim_suffix>    public int getObjectId() {\n        return objectId;\n    }\n\n    public int getObjectInstanceId() {\n        return objectInstanceId;\n    }\n\n    public boolean isNullLink() {\n        return objectId == MAXID && objectInstanceId == MAXID;\n    }\n\n    @Override\n    public int hashCode() {\n        final int prime = 31;\n        int result = 1;\n        result = prime * result + objectId;\n        result = prime * result + objectInstanceId;\n        return result;\n    }\n\n    @Override\n    public boolean equals(Object obj) {\n        if (this == obj)\n            return true;\n        if (obj == null)\n            return false;\n        if (getClass() != obj.getClass())\n            return false;\n        ObjectLink other = (ObjectLink) obj;\n        if (objectId != other.objectId)\n            return false;\n        if (objectInstanceId != other.objectInstanceId)\n            return false;\n        return true;\n    }\n\n    @Override\n    public String toString() {\n        return String.format(\"/%d/%d\", objectId, objectInstanceId);\n    }\n}<fim_middle>// function below has no smell\n"}