{"text": "<fim_prefix>/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\npackage org.apache.felix.ipojo.extender.internal.declaration;\n\nimport org.apache.felix.ipojo.extender.TypeDeclaration;\nimport org.apache.felix.ipojo.metadata.Element;\nimport org.osgi.framework.BundleContext;\nimport org.osgi.framework.Constants;\n\n/**\n * Default implementation of the component type declaration.\n */\n<fim_suffix>public class DefaultTypeDeclaration extends AbstractDeclaration implements TypeDeclaration {\n\n    private final Element m_componentMetadata;\n    private final String m_componentName;\n    private final String m_componentVersion;\n    private final String m_extension;\n    private boolean visible = true;\n\n    public DefaultTypeDeclaration(BundleContext bundleContext, Element componentMetadata) {\n        super(bundleContext, TypeDeclaration.class);\n        m_componentMetadata = componentMetadata;\n        visible = initVisible();\n        m_componentName = initComponentName();\n        m_componentVersion = initComponentVersion(bundleContext);\n        m_extension = initExtension();\n    }\n\n    private String initExtension() {\n        if (m_componentMetadata.getNameSpace() == null) {\n            return m_componentMetadata.getName();\n        }\n        return m_componentMetadata.getNameSpace() + \":\" + m_componentMetadata.getName();\n    }\n\n    private String initComponentVersion(BundleContext bundleContext) {\n        String version = m_componentMetadata.getAttribute(\"version\");\n        if (version != null) {\n            if (\"bundle\".equalsIgnoreCase(version)) {\n                return bundleContext.getBundle().getHeaders().get(Constants.BUNDLE_VERSION);\n            }\n        }\n        return version;\n    }\n\n    private String initComponentName() {\n        String name = m_componentMetadata.getAttribute(\"name\");\n        if (name == null) {\n            name = m_componentMetadata.getAttribute(\"classname\");\n        }\n        return name;\n    }\n\n    private boolean initVisible() {\n        String publicAttribute = m_componentMetadata.getAttribute(\"public\");\n        return (publicAttribute == null) || !publicAttribute.equalsIgnoreCase(\"false\");\n    }\n\n    public String getComponentName() {\n        return m_componentName;\n    }\n\n    public String getComponentVersion() {\n        return m_componentVersion;\n    }\n\n    public String getExtension() {\n        return m_extension;\n    }\n\n    public Element getComponentMetadata() {\n        return m_componentMetadata;\n    }\n\n    public boolean isPublic() {\n        return visible;\n    }\n}<fim_middle>// class below is data class\n"}