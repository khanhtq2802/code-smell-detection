{"text": "<fim_prefix>/* Copyright (c) 2006 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage com.google.api.gbase.client;\n\nimport com.google.api.gbase.client.GmAttributes.GmAttribute;\nimport com.google.gdata.data.BaseEntry;\n\nimport java.util.Collection;\nimport java.util.List;\n\n/**\n * A description of an item type done by the gm: tags in a\n * google base entry.\n *\n * Make sure the current feed is an item type feed and then get the\n * ItemTypeDescription for the entry using:\n * {@link GoogleBaseEntry#getGoogleBaseMetadata()}.getItemTypeDescription()\n */\n<fim_suffix>public class ItemTypeDescription {\n\n  private final BaseEntry owner;\n\n  /**\n   * Creates an ItemTypeDescription.\n   *\n   * @param owner entry the description is in\n   */\n  ItemTypeDescription(BaseEntry owner) {\n    this.owner = owner;\n  }\n\n  void setName(String name) {\n    if (name == null) {\n      owner.removeExtension(GmItemType.class);\n    } else {\n      owner.setExtension(new GmItemType(name));\n    }\n  }\n  \n  /**\n   * Gets the item type name.\n   */\n  public String getName() {\n    GmItemType tag = owner.getExtension(GmItemType.class);\n    return tag == null ? null : tag.getItemType();\n  }\n\n  /**\n   * Get the list of attribute ids defined for this item type.\n   *\n   * @return unmodifiable list of attribute ids\n   * @deprecated use {@link #getAttributes()} instead\n   */\n  public List<? extends GoogleBaseAttributeId> getAttributeIds() {\n    return getGmAttributesExtension().getAttributeIds();\n  }\n  \n  /**\n   * Get the list of attribute ids with extra information as defined for this \n   * item type.\n   *\n   * @return unmodifiable list of GmAttribute objects\n   */\n  public Collection<GmAttribute> getAttributes() {\n    return getGmAttributesExtension().getAttributes();\n  }\n\n  /**\n   * Returns the GmAttributes instance associated to the owner of the \n   * description. If the owner has no GmAttributes defined, a new instance\n   * is created, assigned to the owner and returned.\n   */\n  private GmAttributes getGmAttributesExtension() {\n    GmAttributes attributes = owner.getExtension(GmAttributes.class);\n    if (attributes == null) {\n      attributes = new GmAttributes();\n      owner.setExtension(attributes);\n    }\n    return attributes;\n  }\n}<fim_middle>// class below has no smell\n"}