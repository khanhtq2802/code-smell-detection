{"text": "<fim_prefix>// Copyright 2017 The Nomulus Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\npackage google.registry.tools.server;\n\nimport static com.google.common.base.Strings.emptyToNull;\nimport static google.registry.request.RequestParameters.extractBooleanParameter;\nimport static google.registry.request.RequestParameters.extractIntParameter;\nimport static google.registry.request.RequestParameters.extractOptionalParameter;\nimport static google.registry.request.RequestParameters.extractRequiredParameter;\nimport static google.registry.request.RequestParameters.extractSetOfParameters;\n\nimport com.google.common.collect.ImmutableSet;\nimport dagger.Module;\nimport dagger.Provides;\nimport google.registry.request.Parameter;\nimport google.registry.request.RequestParameters;\nimport java.util.Optional;\nimport javax.servlet.http.HttpServletRequest;\n\n/**\n * Dagger module for the tools package.\n */\n@Module\npublic class ToolsServerModule {\n\n  @Provides\n  @Parameter(\"clientId\")\n  static Optional<String> provideClientId(HttpServletRequest req) {\n    return Optional.ofNullable(emptyToNull(req.getParameter(CreateGroupsAction.CLIENT_ID_PARAM)));\n  }\n\n<fim_suffix>  @Provides\n  @Parameter(\"fields\")\n  static Optional<String> provideFields(HttpServletRequest req) {\n    return extractOptionalParameter(req, ListObjectsAction.FIELDS_PARAM);\n  }\n\n  @Provides\n  @Parameter(\"fullFieldNames\")\n  static Optional<Boolean> provideFullFieldNames(HttpServletRequest req) {\n    String s = emptyToNull(req.getParameter(ListObjectsAction.FULL_FIELD_NAMES_PARAM));\n    return (s == null) ? Optional.empty() : Optional.of(Boolean.parseBoolean(s));\n  }\n\n  @Provides\n  @Parameter(\"inputData\")\n  static String provideInput(HttpServletRequest req) {\n    return extractRequiredParameter(req, CreatePremiumListAction.INPUT_PARAM);\n  }\n\n  @Provides\n  @Parameter(\"premiumListName\")\n  static String provideName(HttpServletRequest req) {\n    return extractRequiredParameter(req, CreatePremiumListAction.NAME_PARAM);\n  }\n\n  @Provides\n  @Parameter(\"override\")\n  static boolean provideOverride(HttpServletRequest req) {\n   return extractBooleanParameter(req, CreatePremiumListAction.OVERRIDE_PARAM);\n  }\n\n  @Provides\n  @Parameter(\"printHeaderRow\")\n  static Optional<Boolean> providePrintHeaderRow(HttpServletRequest req) {\n    String s = emptyToNull(req.getParameter(ListObjectsAction.PRINT_HEADER_ROW_PARAM));\n    return (s == null) ? Optional.empty() : Optional.of(Boolean.parseBoolean(s));\n  }\n\n  @Provides\n  @Parameter(RequestParameters.PARAM_TLD)\n  static String provideTld(HttpServletRequest req) {\n    return extractRequiredParameter(req, RequestParameters.PARAM_TLD);\n  }\n\n  @Provides\n  @Parameter(RequestParameters.PARAM_TLDS)\n  static ImmutableSet<String> provideTlds(HttpServletRequest req) {\n    return extractSetOfParameters(req, RequestParameters.PARAM_TLDS);\n  }\n\n  @Provides\n  @Parameter(\"limit\")\n  static int provideLimit(HttpServletRequest req) {\n    return extractIntParameter(req, \"limit\");\n  }\n\n  @Provides\n  @Parameter(\"rawKeys\")\n  static String provideRawKeys(HttpServletRequest req) {\n    return extractRequiredParameter(req, \"rawKeys\");\n  }\n\n  @Provides\n  @Parameter(\"jobId\")\n  String provideJobId(HttpServletRequest req) {\n    return extractRequiredParameter(req, \"jobId\");\n  }\n}<fim_middle>// function below has no smell\n"}