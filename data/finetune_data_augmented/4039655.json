{"text": "<fim_prefix>/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\npackage org.apache.asterix.metadata.declared;\n\nimport org.apache.asterix.metadata.entities.Index;\nimport org.apache.hyracks.algebricks.core.algebra.metadata.IDataSource;\nimport org.apache.hyracks.algebricks.core.algebra.metadata.IDataSourceIndex;\n\n<fim_suffix>public class DataSourceIndex implements IDataSourceIndex<String, DataSourceId> {\n\n    private final Index index;\n    private final String dataset;\n    private final String dataverse;\n    private final MetadataProvider metadataProvider;\n\n    // Every transactions needs to work with its own instance of an\n    // MetadataProvider.\n    public DataSourceIndex(Index index, String dataverse, String dataset, MetadataProvider metadataProvider) {\n        this.index = index;\n        this.dataset = dataset;\n        this.dataverse = dataverse;\n        this.metadataProvider = metadataProvider;\n    }\n\n    // TODO: Maybe Index can directly implement IDataSourceIndex<String, DataSourceId>\n    @Override\n    public IDataSource<DataSourceId> getDataSource() {\n        try {\n            DataSourceId sourceId = new DataSourceId(dataverse, dataset);\n            return metadataProvider.lookupSourceInMetadata(sourceId);\n        } catch (Exception me) {\n            return null;\n        }\n    }\n\n    @Override\n    public String getId() {\n        return index.getIndexName();\n    }\n\n    public Index getIndex() {\n        return index;\n    }\n}<fim_middle>// class below has no smell\n"}