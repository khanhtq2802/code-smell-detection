{"text": "<fim_prefix>\t\t\t\t\t\t\t\t\t\t\t\t.getShell(),\n\t\t\t\t\t\t\t\t\t\t\"File Changed\",\n\t\t\t\t\t\t\t\t\t\t\"The file has been changed on the file system. Do you want to load the changes?\")) {\n\t\t\t\t\tDisplay display = getSite().getShell().getDisplay();\n\t\t\t\t\tdisplay.asyncExec(new Runnable() {\n\t\t\t\t\t\tpublic void run() {\n\t\t\t\t\t\t\tIWebflowConfig config = ((WebflowEditorInput) getEditorInput())\n\t\t\t\t\t\t\t\t\t.getConfig();\n\t\t\t\t\t\t\tsetInput(new WebflowEditorInput(config));\n\t\t\t\t\t\t\tgetCommandStack().flush();\n\t\t\t\t\t\t\tinitializeGraphicalViewer();\n\t\t\t\t\t\t\tif (outlinePage != null) {\n\t\t\t\t\t\t\t\toutlinePage.initializeOutlineViewer();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t}\n\tprivate IWebflowState diagram;\n\tprivate IFile file;\n\tprivate boolean isCurrentlySaving = false;\n\tprivate IStructuredModel model;\n\tprivate OutlinePage outlinePage;\n\tprivate IPartListener partListener = new IPartListener() {\n\t\t// If an open, unsaved file was deleted, query the user to either do a\n\t\t// \"Save As\"\n\t\t// or close the editor.\n\t\tpublic void partActivated(IWorkbenchPart part) {\n\t\t\tif (part != WebflowEditor.this)\n\t\t\t\treturn;\n\t\t\tif (getEditorInput() instanceof WebflowEditorInput\n\t\t\t\t\t&& !((WebflowEditorInput) getEditorInput()).getFile()\n\t\t\t\t\t\t\t.exists()) {\n\t\t\t\tShell shell = getSite().getShell();\n\t\t\t\tString title = \"res\";\n\t\t\t\tString message = \"erer\";\n\t\t\t\tString[] buttons = { \"Save\", \"Close\" };\n\t\t\t\tMessageDialog dialog = new MessageDialog(shell, title, null,\n\t\t\t\t\t\tmessage, MessageDialog.QUESTION, buttons, 0);\n\t\t\t\tif (dialog.open() == 0) {\n\t\t\t\t\tif (!performSaveAs())\n\t\t\t\t\t\tpartActivated(part);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tcloseEditor(false);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tpublic void partBroughtToTop(IWorkbenchPart part) {\n\t\t}\n\t\tpublic void partClosed(IWorkbenchPart part) {\n\t\t}\n\t\tpublic void partDeactivated(IWorkbenchPart part) {\n\t\t}\n\t\tpublic void partOpened(IWorkbenchPart part) {\n\t\t}\n\t};\n\tprivate ResourceTracker resourceListener = new ResourceTracker();\n\tprivate PaletteRoot root;\n\tprivate boolean savePreviouslyNeeded = false;\n\tprivate KeyHandler sharedKeyHandler;\n\tpublic static final String EDITOR_ID = \"org.springframework.ide.eclipse.webflow.ui.graph.WebflowEditor\";\n\tpublic WebflowEditor() {\n\t\tDefaultEditDomain defaultEditDomain = new DefaultEditDomain(this);\n\t\tdefaultEditDomain.setActiveTool(new ConnectionCreationTool());\n\t\tsetEditDomain(defaultEditDomain);\n\t}\n\tprotected void closeEditor(boolean save) {\n\t\tgetSite().getPage().closeEditor(this, save);\n\t}\n\tpublic void commandStackChanged(EventObject event) {\n\t\tif (isDirty()) {\n\t\t\tif (!savePreviouslyNeeded()) {\n\t\t\t\tsetSavePreviouslyNeeded(true);\n\t\t\t\tfirePropertyChange(IEditorPart.PROP_DIRTY);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tsetSavePreviouslyNeeded(false);\n\t\t\tfirePropertyChange(IEditorPart.PROP_DIRTY);\n\t\t}\n\t\tsuper.commandStackChanged(event);\n\t}\n\tprotected void configureGraphicalViewer() {\n\t\tsuper.configureGraphicalViewer();\n\t\tScalableRootEditPart root = new ScalableRootEditPart();\n\t\tList<String> zoomLevels = new ArrayList<String>();\n\t\tzoomLevels.add(ZoomManager.FIT_ALL);\n\t\tzoomLevels.add(ZoomManager.FIT_WIDTH);\n\t\tzoomLevels.add(ZoomManager.FIT_HEIGHT);\n\t\troot.getZoomManager().setZoomLevelContributions(zoomLevels);\n\t\troot.getZoomManager().setZoomLevels(\n\t\t\t\tnew double[] { 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1,\n\t\t\t\t\t\t1.5, 2, 2.5, 3 });\n\t\tIAction zoomIn = new ZoomInAction(root.getZoomManager());\n\t\tIAction zoomOut = new ZoomOutAction(root.getZoomManager());\n\t\tgetActionRegistry().registerAction(zoomIn);\n\t\tgetActionRegistry().registerAction(zoomOut);\n\t\tgetActionRegistry().registerAction(new ExportAction(this));\n\t\tgetSite().getKeyBindingService().registerAction(zoomIn);\n\t\tgetSite().getKeyBindingService().registerAction(zoomOut);\n\t\tgetGraphicalViewer().setRootEditPart(root);\n\t\tgetGraphicalViewer().setEditPartFactory(new StatePartFactory());\n\t\tgetGraphicalViewer().setKeyHandler(\n\t\t\t\tnew GraphicalViewerKeyHandler(getGraphicalViewer())\n\t\t\t\t\t\t.setParent(getCommonKeyHandler()));\n\t\tContextMenuProvider provider = new WebflowContextMenuProvider(\n\t\t\t\tgetGraphicalViewer(), getActionRegistry());\n\t\tgetGraphicalViewer().setContextMenu(provider);\n\t\tgetSite().registerContextMenu(\n\t\t\t\t\"org.springframework.ide.eclipse.webflow.ui.graph.contextmenu\", //$NON-NLS-1$\n\t\t\t\tprovider, getGraphicalViewer());\n\t}\n\t@SuppressWarnings(\"unchecked\")\n\tprotected void createActions() {\n\t\tsuper.createActions();\n\t\tActionRegistry registry = getActionRegistry();\n\t\tIAction action;\n\t\taction = new DirectEditAction((IWorkbenchPart) this);\n\t\tregistry.registerAction(action);\n\t\tgetSelectionActions().add(action.getId());\n\t\taction = new SetAsStartStateAction(this);\n\t\tregistry.registerAction(action);\n\t\tgetSelectionActions().add(action.getId());\n\t\taction = new EditPropertiesAction(this);\n\t\tregistry.registerAction(action);\n\t\tgetSelectionActions().add(action.getId());\n\t\taction = new ExportAction(this);\n\t\tregistry.registerAction(action);\n\t\tgetSelectionActions().add(action.getId());\n\t\taction = new OpenConfigFileAction(this);\n\t\tregistry.registerAction(action);\n\t\tgetSelectionActions().add(action.getId());\n\t\taction = new OpenBeansGraphAction(this);\n\t\tregistry.registerAction(action);\n\t\tgetSelectionActions().add(action.getId());\n\t\taction = new OpenBeansConfigAction(this);\n\t\tregistry.registerAction(action);\n\t\tgetSelectionActions().add(action.getId());\n\t}\n\tpublic void dispose() {\n\t\tgetSite().getWorkbenchWindow().getPartService().removePartListener(\n\t\t\t\tpartListener);\n\t\tpartListener = null;\n\t\tif (getEditorInput() instanceof WebflowEditorInput) {\n\t\t\t((WebflowEditorInput) getEditorInput()).getFile().getWorkspace()\n\t\t\t\t\t.removeResourceChangeListener(resourceListener);\n\t\t}\n\t\tif (this.diagram != null) {\n\t\t\tdiagram = null;\n\t\t}\n\t\tif (this.model != null) {\n\t\t\tthis.model.releaseFromEdit();\n\t\t}\n\t\tsuper.dispose();\n\t}\n\tpublic void doSave(IProgressMonitor monitor) {\n\t\ttry {\n\t\t\tthis.isCurrentlySaving = true;\n\t\t\tmodel.aboutToChangeModel();\n\t\t\t// reattach root node from document\n\t\t\tIDOMDocument document = ((DOMModelImpl) model).getDocument();\n\t\t\tNode root = document.getDocumentElement();\n\t\t\tdocument.replaceChild(diagram.getNode(), root);\n\t\t\tformatElement(monitor);\n\t\t\tmodel.changedModel();\n\t\t\tmodel.save();\n\t\t\tgetCommandStack().markSaveLocation();\n\t\t\tthis.isCurrentlySaving = false;\n\t\t}\n\t\tcatch (Exception e) {\n\t\t}\n\t}\n\tpublic void doSaveAs() {\n\t\tperformSaveAs();\n\t}\n<fim_suffix>\tprivate void formatElement(IProgressMonitor monitor) {\n\t\tFormatProcessorXML formatProcessor = new FormatProcessorXML();\n\t\tformatProcessor.setProgressMonitor(monitor);\n\t\tformatProcessor.getFormatPreferences().setClearAllBlankLines(true);\n\t\tformatProcessor.formatModel(model);\n\t\tCleanupProcessorXML bla = new CleanupProcessorXML();\n\t\tbla.getCleanupPreferences().setCompressEmptyElementTags(true);\n\t\tbla.cleanupModel(model);\n\t}<fim_middle>// function below has no smell\n"}