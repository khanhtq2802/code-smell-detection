{"text": "<fim_prefix>        return lastComparison;\n      }\n      if (isSetCredentials()) {\n        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.credentials, other.credentials);\n        if (lastComparison != 0) {\n          return lastComparison;\n        }\n      }\n      lastComparison = java.lang.Boolean.valueOf(isSetNs()).compareTo(other.isSetNs());\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n      if (isSetNs()) {\n        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.ns, other.ns);\n        if (lastComparison != 0) {\n          return lastComparison;\n        }\n      }\n      return 0;\n    }\n    @org.apache.thrift.annotation.Nullable\n    public _Fields fieldForId(int fieldId) {\n      return _Fields.findByThriftId(fieldId);\n    }\n    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {\n      scheme(iprot).read(iprot, this);\n    }\n    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {\n      scheme(oprot).write(oprot, this);\n    }\n    @Override\n    public java.lang.String toString() {\n      java.lang.StringBuilder sb = new java.lang.StringBuilder(\"getNamespaceConfiguration_args(\");\n      boolean first = true;\n      sb.append(\"tinfo:\");\n      if (this.tinfo == null) {\n        sb.append(\"null\");\n      } else {\n        sb.append(this.tinfo);\n      }\n      first = false;\n      if (!first) sb.append(\", \");\n      sb.append(\"credentials:\");\n      if (this.credentials == null) {\n        sb.append(\"null\");\n      } else {\n        sb.append(this.credentials);\n      }\n      first = false;\n      if (!first) sb.append(\", \");\n      sb.append(\"ns:\");\n      if (this.ns == null) {\n        sb.append(\"null\");\n      } else {\n        sb.append(this.ns);\n      }\n      first = false;\n      sb.append(\")\");\n      return sb.toString();\n    }\n    public void validate() throws org.apache.thrift.TException {\n      // check for required fields\n      // check for sub-struct validity\n      if (tinfo != null) {\n        tinfo.validate();\n      }\n      if (credentials != null) {\n        credentials.validate();\n      }\n    }\n    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {\n      try {\n        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));\n      } catch (org.apache.thrift.TException te) {\n        throw new java.io.IOException(te);\n      }\n    }\n    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {\n      try {\n        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));\n      } catch (org.apache.thrift.TException te) {\n        throw new java.io.IOException(te);\n      }\n    }\n    private static class getNamespaceConfiguration_argsStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {\n      public getNamespaceConfiguration_argsStandardScheme getScheme() {\n        return new getNamespaceConfiguration_argsStandardScheme();\n      }\n    }\n    private static class getNamespaceConfiguration_argsStandardScheme extends org.apache.thrift.scheme.StandardScheme<getNamespaceConfiguration_args> {\n      public void read(org.apache.thrift.protocol.TProtocol iprot, getNamespaceConfiguration_args struct) throws org.apache.thrift.TException {\n        org.apache.thrift.protocol.TField schemeField;\n        iprot.readStructBegin();\n        while (true)\n        {\n          schemeField = iprot.readFieldBegin();\n          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { \n            break;\n          }\n          switch (schemeField.id) {\n            case 1: // TINFO\n              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {\n                struct.tinfo = new org.apache.accumulo.core.trace.thrift.TInfo();\n                struct.tinfo.read(iprot);\n                struct.setTinfoIsSet(true);\n              } else { \n                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);\n              }\n              break;\n            case 2: // CREDENTIALS\n              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {\n                struct.credentials = new org.apache.accumulo.core.securityImpl.thrift.TCredentials();\n                struct.credentials.read(iprot);\n                struct.setCredentialsIsSet(true);\n              } else { \n                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);\n              }\n              break;\n            case 3: // NS\n              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {\n                struct.ns = iprot.readString();\n                struct.setNsIsSet(true);\n              } else { \n                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);\n              }\n              break;\n            default:\n              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);\n          }\n          iprot.readFieldEnd();\n        }\n        iprot.readStructEnd();\n        // check for required fields of primitive type, which can't be checked in the validate method\n        struct.validate();\n      }\n      public void write(org.apache.thrift.protocol.TProtocol oprot, getNamespaceConfiguration_args struct) throws org.apache.thrift.TException {\n        struct.validate();\n        oprot.writeStructBegin(STRUCT_DESC);\n        if (struct.tinfo != null) {\n          oprot.writeFieldBegin(TINFO_FIELD_DESC);\n          struct.tinfo.write(oprot);\n          oprot.writeFieldEnd();\n        }\n        if (struct.credentials != null) {\n          oprot.writeFieldBegin(CREDENTIALS_FIELD_DESC);\n          struct.credentials.write(oprot);\n          oprot.writeFieldEnd();\n        }\n        if (struct.ns != null) {\n          oprot.writeFieldBegin(NS_FIELD_DESC);\n          oprot.writeString(struct.ns);\n          oprot.writeFieldEnd();\n        }\n        oprot.writeFieldStop();\n        oprot.writeStructEnd();\n      }\n    }\n    private static class getNamespaceConfiguration_argsTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {\n      public getNamespaceConfiguration_argsTupleScheme getScheme() {\n        return new getNamespaceConfiguration_argsTupleScheme();\n      }\n    }\n    private static class getNamespaceConfiguration_argsTupleScheme extends org.apache.thrift.scheme.TupleScheme<getNamespaceConfiguration_args> {\n      @Override\n      public void write(org.apache.thrift.protocol.TProtocol prot, getNamespaceConfiguration_args struct) throws org.apache.thrift.TException {\n        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;\n        java.util.BitSet optionals = new java.util.BitSet();\n        if (struct.isSetTinfo()) {\n          optionals.set(0);\n        }\n        if (struct.isSetCredentials()) {\n          optionals.set(1);\n        }\n        if (struct.isSetNs()) {\n          optionals.set(2);\n        }\n        oprot.writeBitSet(optionals, 3);\n        if (struct.isSetTinfo()) {\n          struct.tinfo.write(oprot);\n        }\n        if (struct.isSetCredentials()) {\n          struct.credentials.write(oprot);\n        }\n        if (struct.isSetNs()) {\n          oprot.writeString(struct.ns);\n        }\n      }\n      @Override\n      public void read(org.apache.thrift.protocol.TProtocol prot, getNamespaceConfiguration_args struct) throws org.apache.thrift.TException {\n        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;\n        java.util.BitSet incoming = iprot.readBitSet(3);\n        if (incoming.get(0)) {\n          struct.tinfo = new org.apache.accumulo.core.trace.thrift.TInfo();\n          struct.tinfo.read(iprot);\n          struct.setTinfoIsSet(true);\n        }\n        if (incoming.get(1)) {\n          struct.credentials = new org.apache.accumulo.core.securityImpl.thrift.TCredentials();\n          struct.credentials.read(iprot);\n          struct.setCredentialsIsSet(true);\n        }\n        if (incoming.get(2)) {\n          struct.ns = iprot.readString();\n          struct.setNsIsSet(true);\n        }\n      }\n    }\n<fim_suffix>    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {\n      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();\n    }<fim_middle>// function below has no smell\n"}