{"text": "<fim_prefix>/*******************************************************************************\n *  Copyright (c) 2012 VMware, Inc.\n *  All rights reserved. This program and the accompanying materials\n *  are made available under the terms of the Eclipse Public License v1.0\n *  which accompanies this distribution, and is available at\n *  https://www.eclipse.org/legal/epl-v10.html\n *\n *  Contributors:\n *      VMware, Inc. - initial API and implementation\n *******************************************************************************/\n\n/*\n * @author Kaitlin Duck Sherwood\n */\n\npackage org.springframework.ide.eclipse.wizard.template.util;\n\nimport java.net.MalformedURLException;\nimport java.net.URI;\nimport java.net.URISyntaxException;\nimport java.net.URL;\n\nimport org.eclipse.jface.dialogs.Dialog;\nimport org.eclipse.jface.dialogs.IDialogConstants;\nimport org.eclipse.jface.layout.GridDataFactory;\nimport org.eclipse.jface.layout.GridLayoutFactory;\nimport org.eclipse.osgi.util.NLS;\nimport org.eclipse.swt.SWT;\nimport org.eclipse.swt.events.KeyEvent;\nimport org.eclipse.swt.events.KeyListener;\nimport org.eclipse.swt.layout.GridData;\nimport org.eclipse.swt.widgets.Composite;\nimport org.eclipse.swt.widgets.Control;\nimport org.eclipse.swt.widgets.Label;\nimport org.eclipse.swt.widgets.Shell;\nimport org.eclipse.swt.widgets.Text;\n\n<fim_suffix>public class AddEditNameUrlDialog extends Dialog {\n\tAbstractNameUrlPreferenceModel model;\n\n\tText nameText;\n\n\tText urlText;\n\n\tString name;\n\n\tString urlString;\n\n\tprivate final String explanatoryText;\n\n\tprotected Label errorTextLabel;\n\n\tprotected Composite composite;\n\n\tprivate String title;\n\n\tpublic AddEditNameUrlDialog(Shell parent, AbstractNameUrlPreferenceModel aModel, NameUrlPair nameUrl,\n\t\t\tString headerText) {\n\t\tsuper(parent);\n\t\texplanatoryText = headerText;\n\t\tmodel = aModel;\n\t\tif (nameUrl != null) {\n\t\t\tname = nameUrl.getName();\n\t\t\turlString = nameUrl.getUrlString();\n\t\t}\n\t\telse {\n\t\t\tname = null;\n\t\t\turlString = null;\n\t\t}\n\t}\n\n\t@Override\n\tprotected Control createDialogArea(Composite parent) {\n\t\tcomposite = new Composite(parent, SWT.NONE);\n\n\t\tGridLayoutFactory.fillDefaults().numColumns(2).extendedMargins(5, 13, 10, 0).applyTo(composite);\n\t\tGridDataFactory.fillDefaults().grab(true, true).applyTo(composite);\n\n\t\tLabel explanatoryTextLabel = new Label(composite, SWT.WRAP);\n\t\texplanatoryTextLabel.setText(explanatoryText);\n\t\tGridDataFactory.fillDefaults().grab(true, false).span(2, 1).applyTo(explanatoryTextLabel);\n\n\t\tLabel nameLabel = new Label(composite, SWT.NONE);\n\t\tnameLabel.setText(NLS.bind(\"Name:\", null));\n\t\tnameLabel.setLayoutData(new GridData(SWT.LEFT, SWT.TOP, false, false, 1, 1));\n\n\t\tnameText = new Text(composite, SWT.BORDER + SWT.FILL);\n\t\tGridDataFactory.fillDefaults().grab(true, false).hint(300, SWT.DEFAULT).applyTo(nameText);\n\t\tnameText.setEditable(true);\n\t\tif (name != null && name.length() > 0) {\n\t\t\tnameText.setText(name);\n\t\t}\n\n\t\tLabel urlLabel = new Label(composite, SWT.NONE);\n\t\turlLabel.setText(NLS.bind(\"URL:\", null));\n\t\turlLabel.setLayoutData(new GridData(SWT.LEFT, SWT.TOP, false, false, 1, 1));\n\t\turlText = new Text(composite, SWT.BORDER);\n\t\tGridDataFactory.fillDefaults().grab(true, false).hint(300, SWT.DEFAULT).applyTo(urlText);\n\t\turlText.setEditable(true);\n\t\tif (urlString != null && urlString.length() > 0) {\n\t\t\turlText.setText(urlString);\n\t\t}\n\n\t\turlText.addKeyListener(getUrlValidationListener());\n\n\t\tString errorText = \"\";\n\t\terrorTextLabel = new Label(composite, SWT.WRAP);\n\t\terrorTextLabel.setText(errorText);\n\t\tGridDataFactory.fillDefaults().grab(true, false).span(2, 1).applyTo(errorTextLabel);\n\n\t\t// getButton(IDialogConstants.OK_ID).setEnabled(validateUrl(urlString));\n\n\t\treturn composite;\n\t}\n\n\t@Override\n\tpublic void create() {\n\t\tsuper.create();\n\t\tif (title != null) {\n\t\t\tgetShell().setText(title);\n\t\t}\n\t\tgetButton(IDialogConstants.OK_ID).setEnabled(validateUrl(urlString));\n\t}\n\n\tprotected KeyListener getUrlValidationListener() {\n\t\treturn new KeyListener() {\n\n\t\t\tpublic void keyReleased(KeyEvent e) {\n\n\t\t\t\tString urlString = ((Text) e.getSource()).getText().trim();\n\t\t\t\tif (!validateUrl(urlString)) {\n\t\t\t\t\tgetButton(IDialogConstants.OK_ID).setEnabled(false);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\terrorTextLabel.setText(\"\");\n\t\t\t\t\tcomposite.update();\n\t\t\t\t\tgetButton(IDialogConstants.OK_ID).setEnabled(true);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tpublic void keyPressed(KeyEvent e) {\n\t\t\t\t// do nothing\n\t\t\t}\n\t\t};\n\t}\n\n\t@Override\n\tprotected void okPressed() {\n\t\tname = nameText.getText();\n\t\turlString = urlText.getText();\n\t\tif (urlString.length() > 0) {\n\t\t\tif (name.length() <= 0) {\n\t\t\t\tname = urlString;\n\t\t\t}\n\t\t}\n\n\t\tsuper.okPressed();\n\t}\n\n\tpublic String getUrlString() {\n\t\treturn urlString;\n\t}\n\n\tpublic String getName() {\n\t\treturn name;\n\t}\n\n\tprotected boolean validateUrl(String urlString) {\n\t\tif (urlString != null && urlString.contains(\" \")) {\n\t\t\turlString = urlString.replace(\" \", \"%20\");\n\t\t\tint caret = urlText.getCaretPosition();\n\t\t\turlText.setText(urlString);\n\t\t\turlText.setSelection(caret + \"%20\".length() - 1);\n\t\t}\n\t\tif (urlString == null || urlString.length() <= 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\ttry {\n\t\t\tnew URI(urlString);\n\t\t}\n\t\tcatch (URISyntaxException e) {\n\t\t\treturn showError();\n\t\t}\n\n\t\ttry {\n\t\t\tURL url = new URL(urlString);\n\t\t\tif (url.getHost().isEmpty()) {\n\t\t\t\treturn showError();\n\t\t\t}\n\t\t}\n\t\tcatch (MalformedURLException e) {\n\t\t\treturn showError();\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tprivate boolean showError() {\n\t\terrorTextLabel.setText(AddEditNameUrlDialogMessages.malformedUrl);\n\t\tcomposite.update();\n\t\treturn false;\n\t}\n\n\tprotected void setTitle(String title) {\n\t\tthis.title = title;\n\t}\n}<fim_middle>// class below is blob\n"}