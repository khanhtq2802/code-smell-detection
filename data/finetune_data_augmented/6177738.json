{"text": "<fim_prefix>/*\n * Copyright (c) 2012-2018 Red Hat, Inc.\n * This program and the accompanying materials are made\n * available under the terms of the Eclipse Public License 2.0\n * which is available at https://www.eclipse.org/legal/epl-2.0/\n *\n * SPDX-License-Identifier: EPL-2.0\n *\n * Contributors:\n *   Red Hat, Inc. - initial API and implementation\n */\npackage org.eclipse.che.ide.status.message;\n\nimport java.util.Objects;\n\n/**\n * The message to show about Orion editor status.\n *\n * @author Alexander Andrienko\n */\npublic class StatusMessage {\n\n  private String message;\n  private String type;\n  private boolean isAccessible;\n\n  public StatusMessage(String message, String type, boolean isAccessible) {\n    this.message = message;\n    this.type = type;\n    this.isAccessible = isAccessible;\n  }\n\n  /** Returns the message to show. */\n  public String getMessage() {\n    return message;\n  }\n\n  /** Returns the message type. Either normal or \"progress\" or \"error\". */\n  public String getType() {\n    return type;\n  }\n\n  /** If returns <code>true</code>, a screen reader will read this message. */\n  public boolean isAccessible() {\n    return isAccessible;\n  }\n\n  @Override\n  public String toString() {\n    return \"StatusMessage{\"\n        + \"message='\"\n        + message\n        + '\\''\n        + \", type='\"\n        + type\n        + '\\''\n        + \", isAccessible=\"\n        + isAccessible\n        + '}';\n  }\n\n<fim_suffix>  @Override\n  public boolean equals(Object obj) {\n    if (this == obj) {\n      return true;\n    }\n    if (!(obj instanceof StatusMessage)) {\n      return false;\n    }\n    StatusMessage that = (StatusMessage) obj;\n\n    return Objects.equals(message, that.message)\n        && Objects.equals(type, that.type)\n        && isAccessible == that.isAccessible;\n  }\n\n  @Override\n  public int hashCode() {\n    int hash = 7;\n    hash = 31 * hash + message.hashCode();\n    hash = 31 * hash + type.hashCode();\n    hash = 31 * hash + (isAccessible ? 1 : 0);\n    return hash;\n  }\n}<fim_middle>// function below has no smell\n"}