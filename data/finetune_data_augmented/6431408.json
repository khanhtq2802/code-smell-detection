{"text": "<fim_prefix>/*\n * Copyright (c) 2019 the Eclipse Milo Authors\n *\n * This program and the accompanying materials are made\n * available under the terms of the Eclipse Public License 2.0\n * which is available at https://www.eclipse.org/legal/epl-2.0/\n *\n * SPDX-License-Identifier: EPL-2.0\n */\n\npackage org.eclipse.milo.opcua.stack.core.types.structured;\n\nimport com.google.common.base.MoreObjects;\nimport org.eclipse.milo.opcua.stack.core.Identifiers;\nimport org.eclipse.milo.opcua.stack.core.UaSerializationException;\nimport org.eclipse.milo.opcua.stack.core.serialization.UaDecoder;\nimport org.eclipse.milo.opcua.stack.core.serialization.UaEncoder;\nimport org.eclipse.milo.opcua.stack.core.serialization.UaStructure;\nimport org.eclipse.milo.opcua.stack.core.serialization.codecs.BuiltinDataTypeCodec;\nimport org.eclipse.milo.opcua.stack.core.types.builtin.NodeId;\nimport org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger;\nimport org.eclipse.milo.opcua.stack.core.types.enumerated.BrowseDirection;\n\npublic class BrowseDescription implements UaStructure {\n\n    public static final NodeId TypeId = Identifiers.BrowseDescription;\n    public static final NodeId BinaryEncodingId = Identifiers.BrowseDescription_Encoding_DefaultBinary;\n    public static final NodeId XmlEncodingId = Identifiers.BrowseDescription_Encoding_DefaultXml;\n\n    protected final NodeId nodeId;\n    protected final BrowseDirection browseDirection;\n    protected final NodeId referenceTypeId;\n    protected final Boolean includeSubtypes;\n    protected final UInteger nodeClassMask;\n    protected final UInteger resultMask;\n\n    public BrowseDescription() {\n        this.nodeId = null;\n        this.browseDirection = null;\n        this.referenceTypeId = null;\n        this.includeSubtypes = null;\n        this.nodeClassMask = null;\n        this.resultMask = null;\n    }\n\n    public BrowseDescription(NodeId nodeId, BrowseDirection browseDirection, NodeId referenceTypeId, Boolean includeSubtypes, UInteger nodeClassMask, UInteger resultMask) {\n        this.nodeId = nodeId;\n        this.browseDirection = browseDirection;\n        this.referenceTypeId = referenceTypeId;\n        this.includeSubtypes = includeSubtypes;\n        this.nodeClassMask = nodeClassMask;\n        this.resultMask = resultMask;\n    }\n\n    public NodeId getNodeId() { return nodeId; }\n\n    public BrowseDirection getBrowseDirection() { return browseDirection; }\n\n    public NodeId getReferenceTypeId() { return referenceTypeId; }\n\n    public Boolean getIncludeSubtypes() { return includeSubtypes; }\n\n<fim_suffix>    public UInteger getNodeClassMask() { return nodeClassMask; }\n\n    public UInteger getResultMask() { return resultMask; }\n\n    @Override\n    public NodeId getTypeId() { return TypeId; }\n\n    @Override\n    public NodeId getBinaryEncodingId() { return BinaryEncodingId; }\n\n    @Override\n    public NodeId getXmlEncodingId() { return XmlEncodingId; }\n\n    @Override\n    public String toString() {\n        return MoreObjects.toStringHelper(this)\n            .add(\"NodeId\", nodeId)\n            .add(\"BrowseDirection\", browseDirection)\n            .add(\"ReferenceTypeId\", referenceTypeId)\n            .add(\"IncludeSubtypes\", includeSubtypes)\n            .add(\"NodeClassMask\", nodeClassMask)\n            .add(\"ResultMask\", resultMask)\n            .toString();\n    }\n\n    public static class Codec extends BuiltinDataTypeCodec<BrowseDescription> {\n\n        @Override\n        public Class<BrowseDescription> getType() {\n            return BrowseDescription.class;\n        }\n\n        @Override\n        public BrowseDescription decode(UaDecoder decoder) throws UaSerializationException {\n            NodeId nodeId = decoder.readNodeId(\"NodeId\");\n            BrowseDirection browseDirection = BrowseDirection.from(decoder.readInt32(\"BrowseDirection\"));\n            NodeId referenceTypeId = decoder.readNodeId(\"ReferenceTypeId\");\n            Boolean includeSubtypes = decoder.readBoolean(\"IncludeSubtypes\");\n            UInteger nodeClassMask = decoder.readUInt32(\"NodeClassMask\");\n            UInteger resultMask = decoder.readUInt32(\"ResultMask\");\n\n            return new BrowseDescription(nodeId, browseDirection, referenceTypeId, includeSubtypes, nodeClassMask, resultMask);\n        }\n\n        @Override\n        public void encode(BrowseDescription value, UaEncoder encoder) throws UaSerializationException {\n            encoder.writeNodeId(\"NodeId\", value.nodeId);\n            encoder.writeInt32(\"BrowseDirection\", value.browseDirection != null ? value.browseDirection.getValue() : 0);\n            encoder.writeNodeId(\"ReferenceTypeId\", value.referenceTypeId);\n            encoder.writeBoolean(\"IncludeSubtypes\", value.includeSubtypes);\n            encoder.writeUInt32(\"NodeClassMask\", value.nodeClassMask);\n            encoder.writeUInt32(\"ResultMask\", value.resultMask);\n        }\n    }\n\n}<fim_middle>// function below has no smell\n"}