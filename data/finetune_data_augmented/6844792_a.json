{"text": "<fim_prefix>/**\n * Copyright (c) 2016 NumberFour AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *   NumberFour AG - Initial API and implementation\n */\npackage org.eclipse.n4js.ui.binaries;\n\nimport static org.eclipse.jface.dialogs.IDialogConstants.OK_LABEL;\nimport static org.eclipse.swt.SWT.COLOR_WIDGET_BACKGROUND;\nimport static org.eclipse.swt.SWT.FILL;\nimport static org.eclipse.swt.SWT.LEFT;\nimport static org.eclipse.swt.SWT.MULTI;\nimport static org.eclipse.swt.SWT.READ_ONLY;\nimport static org.eclipse.swt.SWT.TOP;\nimport static org.eclipse.swt.SWT.UNDERLINE_LINK;\nimport static org.eclipse.swt.SWT.WRAP;\nimport static org.eclipse.ui.dialogs.PreferencesUtil.createPreferenceDialogOn;\n\nimport org.eclipse.jface.dialogs.Dialog;\nimport org.eclipse.jface.dialogs.MessageDialog;\nimport org.eclipse.jface.layout.GridDataFactory;\nimport org.eclipse.jface.layout.GridLayoutFactory;\nimport org.eclipse.jface.preference.PreferenceDialog;\nimport org.eclipse.n4js.binaries.Binary;\nimport org.eclipse.n4js.binaries.IllegalBinaryStateException;\nimport org.eclipse.n4js.ui.utils.UIUtils;\nimport org.eclipse.swt.custom.StyleRange;\nimport org.eclipse.swt.custom.StyledText;\nimport org.eclipse.swt.events.MouseAdapter;\nimport org.eclipse.swt.events.MouseEvent;\nimport org.eclipse.swt.graphics.Point;\nimport org.eclipse.swt.layout.GridData;\nimport org.eclipse.swt.widgets.Composite;\nimport org.eclipse.swt.widgets.Control;\n\n/**\n * Customized message dialog for notifying the user about an incorrect binary configuration.\n */\npublic class IllegalBinaryStateDialog extends MessageDialog {\n\n\tprivate static final int TEXT_HEIGHT_HINT = 50;\n\tprivate static final int TEXT_WIDTH_HINT = 450;\n\tprivate static final String[] BUTTON_LABELS = new String[] { OK_LABEL };\n\tprivate static final String[] FILTER_IDS = { BinariesPreferencePage.ID };\n\n\tprivate final IllegalBinaryStateException cause;\n\n\t/**\n\t * Creates a new dialog instance with the given illegal binary state exception.\n\t *\n\t * @param cause\n\t *            the exception about the illegal binary state.\n\t */\n\tpublic IllegalBinaryStateDialog(final IllegalBinaryStateException cause) {\n\t\tthis(cause, cause.getBinary().getLabel() + \" Configuration Error\", cause.getMessage());\n\t}\n\n\t/**\n\t * Creates a new dialog instance with the given title and error message.\n\t *\n\t * @param cause\n\t *            the causing exception.\n\t * @param title\n\t *            the dialog title.\n\t * @param message\n\t *            the dialog message.\n\t */\n\tprotected IllegalBinaryStateDialog(final IllegalBinaryStateException cause, final String title,\n\t\t\tfinal String message) {\n\n\t\tsuper(UIUtils.getShell(), title, null, message, ERROR, BUTTON_LABELS, 0);\n\t\tthis.cause = cause;\n\t}\n\n\t@Override\n\tprotected Control createCustomArea(final Composite parent) {\n\t\treturn createCustomAreaWithLink(parent, this, cause.getBinary());\n\t}\n\n\t/**\n\t * Creates a control with some message and with link to the Binaries preference page.\n\t *\n\t * @param parent\n\t *            the parent composite.\n\t * @param dialog\n\t *            the container dialog that has to be closed.\n\t * @param binary\n\t *            the binary with the illegal state.\n\t *\n\t * @return a control with error message and link that can be reused in dialogs.\n\t */\n<fim_suffix>\tpublic static Control createCustomAreaWithLink(final Composite parent, final Dialog dialog, final Binary binary) {\n\t\tfinal String binaryLabel = binary.getLabel();\n\t\tfinal String prefix = \"The requested operation cannot be performed due to invalid '\" + binaryLabel\n\t\t\t\t+ \"' settings. Check your '\" + binaryLabel\n\t\t\t\t+ \"' configuration and preferences under the corresponding \";\n\t\tfinal String link = \"preference page\";\n\t\tfinal String suffix = \".\";\n\t\tfinal String text = prefix + link + suffix;\n\n\t\tfinal Composite control = new Composite(parent, NONE);\n\t\tcontrol.setLayout(GridLayoutFactory.fillDefaults().create());\n\t\tfinal GridData gridData = GridDataFactory.fillDefaults().align(LEFT, TOP).grab(true, true).create();\n\t\tcontrol.setLayoutData(gridData);\n\n\t\tfinal StyleRange style = new StyleRange();\n\t\tstyle.underline = true;\n\t\tstyle.underlineStyle = UNDERLINE_LINK;\n\n\t\tfinal StyledText styledText = new StyledText(control, MULTI | READ_ONLY | WRAP);\n\t\tstyledText.setWordWrap(true);\n\t\tstyledText.setJustify(true);\n\t\tstyledText.setText(text);\n\t\tfinal GridData textGridData = GridDataFactory.fillDefaults().align(FILL, FILL).grab(true, true).create();\n\t\ttextGridData.widthHint = TEXT_WIDTH_HINT;\n\t\ttextGridData.heightHint = TEXT_HEIGHT_HINT;\n\t\tstyledText.setLayoutData(textGridData);\n\n\t\tstyledText.setEditable(false);\n\t\tstyledText.setBackground(UIUtils.getSystemColor(COLOR_WIDGET_BACKGROUND));\n\t\tfinal int[] ranges = { text.indexOf(link), link.length() };\n\t\tfinal StyleRange[] styles = { style };\n\t\tstyledText.setStyleRanges(ranges, styles);\n\n\t\tstyledText.addMouseListener(new MouseAdapter() {\n\n\t\t\t@Override\n\t\t\tpublic void mouseDown(final MouseEvent event) {\n\t\t\t\ttry {\n\t\t\t\t\tfinal int offset = styledText.getOffsetAtPoint(new Point(event.x, event.y));\n\t\t\t\t\tfinal StyleRange actualStyle = offset >= 0 ? styledText.getStyleRangeAtOffset(offset) : null;\n\t\t\t\t\tif (null != actualStyle && actualStyle.underline\n\t\t\t\t\t\t\t&& UNDERLINE_LINK == actualStyle.underlineStyle) {\n\n\t\t\t\t\t\tdialog.close();\n\t\t\t\t\t\tfinal PreferenceDialog preferenceDialog = createPreferenceDialogOn(\n\t\t\t\t\t\t\t\tUIUtils.getShell(),\n\t\t\t\t\t\t\t\tBinariesPreferencePage.ID,\n\t\t\t\t\t\t\t\tFILTER_IDS,\n\t\t\t\t\t\t\t\tnull);\n\n\t\t\t\t\t\tif (null != preferenceDialog) {\n\t\t\t\t\t\t\tpreferenceDialog.open();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\t\t\t\t} catch (final IllegalArgumentException e) {\n\t\t\t\t\t// We are not over the actual text.\n\t\t\t\t}\n\t\t\t}\n\n\t\t});\n\n\t\treturn control;\n\t}\n\n}<fim_middle>// function below is feature envy and long method\n"}