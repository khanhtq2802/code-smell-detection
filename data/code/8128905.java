package org.eclipse.xtext.testlanguages.backtracking.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.eclipse.xtext.testlanguages.backtracking.services.BeeLangTestLanguageGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
@SuppressWarnings("all")
public class InternalBeeLangTestLanguageParser extends AbstractInternalContentAssistParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "RULE_STRING", "RULE_INT", "RULE_HEX", "RULE_ID", "RULE_DOCUMENTATION", "RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS", "RULE_ANY_OTHER", "'unit'", "'='", "'+='", "'-='", "'*='", "'/='", "'%='", "'~='", "'=='", "'==='", "'!='", "'!=='", "'>='", "'<='", "'>'", "'<'", "'var'", "'+'", "'-'", "'*'", "'/'", "'%'", "'!'", "'++'", "'--'", "'input'", "'output'", "'source'", "'properties'", "'builder'", "'this'", "'{'", "'}'", "'version'", "'implements'", "','", "':'", "';'", "'provides'", "'requires'", "'env'", "'when'", "'name'", "'as'", "'requires-min'", "'requires-max'", "'function'", "'('", "')'", "'=>'", "'cached'", "'||'", "'&&'", "'.'", "'['", "']'", "'with'", "'context'", "'new'", "'|'", "'greedy'", "'final'", "'...'", "'val'", "'..'"
    };
    public static final int RULE_HEX=6;
    public static final int T__50=50;
    public static final int T__19=19;
    public static final int T__15=15;
    public static final int T__59=59;
    public static final int T__16=16;
    public static final int T__17=17;
    public static final int T__18=18;
    public static final int T__55=55;
    public static final int T__56=56;
    public static final int T__13=13;
    public static final int T__57=57;
    public static final int T__14=14;
    public static final int T__58=58;
    public static final int T__51=51;
    public static final int T__52=52;
    public static final int T__53=53;
    public static final int T__54=54;
    public static final int T__60=60;
    public static final int T__61=61;
    public static final int RULE_ID=7;
    public static final int RULE_DOCUMENTATION=8;
    public static final int T__26=26;
    public static final int T__27=27;
    public static final int T__28=28;
    public static final int RULE_INT=5;
    public static final int T__29=29;
    public static final int T__22=22;
    public static final int T__66=66;
    public static final int RULE_ML_COMMENT=9;
    public static final int T__23=23;
    public static final int T__67=67;
    public static final int T__24=24;
    public static final int T__68=68;
    public static final int T__25=25;
    public static final int T__69=69;
    public static final int T__62=62;
    public static final int T__63=63;
    public static final int T__20=20;
    public static final int T__64=64;
    public static final int T__21=21;
    public static final int T__65=65;
    public static final int T__70=70;
    public static final int T__71=71;
    public static final int T__72=72;
    public static final int RULE_STRING=4;
    public static final int RULE_SL_COMMENT=10;
    public static final int T__37=37;
    public static final int T__38=38;
    public static final int T__39=39;
    public static final int T__33=33;
    public static final int T__77=77;
    public static final int T__34=34;
    public static final int T__35=35;
    public static final int T__36=36;
    public static final int T__73=73;
    public static final int EOF=-1;
    public static final int T__30=30;
    public static final int T__74=74;
    public static final int T__31=31;
    public static final int T__75=75;
    public static final int T__32=32;
    public static final int T__76=76;
    public static final int RULE_WS=11;
    public static final int RULE_ANY_OTHER=12;
    public static final int T__48=48;
    public static final int T__49=49;
    public static final int T__44=44;
    public static final int T__45=45;
    public static final int T__46=46;
    public static final int T__47=47;
    public static final int T__40=40;
    public static final int T__41=41;
    public static final int T__42=42;
    public static final int T__43=43;

    // delegates
    // delegators


        public InternalBeeLangTestLanguageParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public InternalBeeLangTestLanguageParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
            this.state.ruleMemo = new HashMap[1152+1];
             
             
        }
        

    public String[] getTokenNames() { return InternalBeeLangTestLanguageParser.tokenNames; }
    public String getGrammarFileName() { return "InternalBeeLangTestLanguage.g"; }


    	private BeeLangTestLanguageGrammarAccess grammarAccess;

    	public void setGrammarAccess(BeeLangTestLanguageGrammarAccess grammarAccess) {
    		this.grammarAccess = grammarAccess;
    	}

    	@Override
    	protected Grammar getGrammar() {
    		return grammarAccess.getGrammar();
    	}

    	@Override
    	protected String getValueForTokenName(String tokenName) {
    		return tokenName;
    	}



    // $ANTLR start "entryRuleModel"
    // InternalBeeLangTestLanguage.g:55:1: entryRuleModel : ruleModel EOF ;
    public final void entryRuleModel() throws RecognitionException {
        int entryRuleModel_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 1) ) { return ; }
            // InternalBeeLangTestLanguage.g:56:1: ( ruleModel EOF )
            // InternalBeeLangTestLanguage.g:57:1: ruleModel EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getModelRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleModel();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getModelRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 1, entryRuleModel_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleModel"


    // $ANTLR start "ruleModel"
    // InternalBeeLangTestLanguage.g:64:1: ruleModel : ( ( rule__Model__Alternatives ) ) ;
    public final void ruleModel() throws RecognitionException {
        int ruleModel_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 2) ) { return ; }
            // InternalBeeLangTestLanguage.g:68:2: ( ( ( rule__Model__Alternatives ) ) )
            // InternalBeeLangTestLanguage.g:69:2: ( ( rule__Model__Alternatives ) )
            {
            // InternalBeeLangTestLanguage.g:69:2: ( ( rule__Model__Alternatives ) )
            // InternalBeeLangTestLanguage.g:70:3: ( rule__Model__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getModelAccess().getAlternatives()); 
            }
            // InternalBeeLangTestLanguage.g:71:3: ( rule__Model__Alternatives )
            // InternalBeeLangTestLanguage.g:71:4: rule__Model__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__Model__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getModelAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 2, ruleModel_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleModel"


    // $ANTLR start "entryRuleUnit"
    // InternalBeeLangTestLanguage.g:80:1: entryRuleUnit : ruleUnit EOF ;
    public final void entryRuleUnit() throws RecognitionException {
        int entryRuleUnit_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 3) ) { return ; }
            // InternalBeeLangTestLanguage.g:81:1: ( ruleUnit EOF )
            // InternalBeeLangTestLanguage.g:82:1: ruleUnit EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleUnit();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 3, entryRuleUnit_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleUnit"


    // $ANTLR start "ruleUnit"
    // InternalBeeLangTestLanguage.g:89:1: ruleUnit : ( ( rule__Unit__Group__0 ) ) ;
    public final void ruleUnit() throws RecognitionException {
        int ruleUnit_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 4) ) { return ; }
            // InternalBeeLangTestLanguage.g:93:2: ( ( ( rule__Unit__Group__0 ) ) )
            // InternalBeeLangTestLanguage.g:94:2: ( ( rule__Unit__Group__0 ) )
            {
            // InternalBeeLangTestLanguage.g:94:2: ( ( rule__Unit__Group__0 ) )
            // InternalBeeLangTestLanguage.g:95:3: ( rule__Unit__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getGroup()); 
            }
            // InternalBeeLangTestLanguage.g:96:3: ( rule__Unit__Group__0 )
            // InternalBeeLangTestLanguage.g:96:4: rule__Unit__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Unit__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 4, ruleUnit_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleUnit"


    // $ANTLR start "entryRuleProvidedCapability"
    // InternalBeeLangTestLanguage.g:105:1: entryRuleProvidedCapability : ruleProvidedCapability EOF ;
    public final void entryRuleProvidedCapability() throws RecognitionException {
        int entryRuleProvidedCapability_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 5) ) { return ; }
            // InternalBeeLangTestLanguage.g:106:1: ( ruleProvidedCapability EOF )
            // InternalBeeLangTestLanguage.g:107:1: ruleProvidedCapability EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProvidedCapabilityRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleProvidedCapability();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getProvidedCapabilityRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 5, entryRuleProvidedCapability_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleProvidedCapability"


    // $ANTLR start "ruleProvidedCapability"
    // InternalBeeLangTestLanguage.g:114:1: ruleProvidedCapability : ( ( rule__ProvidedCapability__Group__0 ) ) ;
    public final void ruleProvidedCapability() throws RecognitionException {
        int ruleProvidedCapability_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 6) ) { return ; }
            // InternalBeeLangTestLanguage.g:118:2: ( ( ( rule__ProvidedCapability__Group__0 ) ) )
            // InternalBeeLangTestLanguage.g:119:2: ( ( rule__ProvidedCapability__Group__0 ) )
            {
            // InternalBeeLangTestLanguage.g:119:2: ( ( rule__ProvidedCapability__Group__0 ) )
            // InternalBeeLangTestLanguage.g:120:3: ( rule__ProvidedCapability__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProvidedCapabilityAccess().getGroup()); 
            }
            // InternalBeeLangTestLanguage.g:121:3: ( rule__ProvidedCapability__Group__0 )
            // InternalBeeLangTestLanguage.g:121:4: rule__ProvidedCapability__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__ProvidedCapability__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getProvidedCapabilityAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 6, ruleProvidedCapability_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleProvidedCapability"


    // $ANTLR start "entryRuleAliasedRequiredCapability"
    // InternalBeeLangTestLanguage.g:130:1: entryRuleAliasedRequiredCapability : ruleAliasedRequiredCapability EOF ;
    public final void entryRuleAliasedRequiredCapability() throws RecognitionException {
        int entryRuleAliasedRequiredCapability_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 7) ) { return ; }
            // InternalBeeLangTestLanguage.g:131:1: ( ruleAliasedRequiredCapability EOF )
            // InternalBeeLangTestLanguage.g:132:1: ruleAliasedRequiredCapability EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAliasedRequiredCapabilityRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleAliasedRequiredCapability();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAliasedRequiredCapabilityRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 7, entryRuleAliasedRequiredCapability_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleAliasedRequiredCapability"


    // $ANTLR start "ruleAliasedRequiredCapability"
    // InternalBeeLangTestLanguage.g:139:1: ruleAliasedRequiredCapability : ( ( rule__AliasedRequiredCapability__Group__0 ) ) ;
    public final void ruleAliasedRequiredCapability() throws RecognitionException {
        int ruleAliasedRequiredCapability_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 8) ) { return ; }
            // InternalBeeLangTestLanguage.g:143:2: ( ( ( rule__AliasedRequiredCapability__Group__0 ) ) )
            // InternalBeeLangTestLanguage.g:144:2: ( ( rule__AliasedRequiredCapability__Group__0 ) )
            {
            // InternalBeeLangTestLanguage.g:144:2: ( ( rule__AliasedRequiredCapability__Group__0 ) )
            // InternalBeeLangTestLanguage.g:145:3: ( rule__AliasedRequiredCapability__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAliasedRequiredCapabilityAccess().getGroup()); 
            }
            // InternalBeeLangTestLanguage.g:146:3: ( rule__AliasedRequiredCapability__Group__0 )
            // InternalBeeLangTestLanguage.g:146:4: rule__AliasedRequiredCapability__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__AliasedRequiredCapability__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAliasedRequiredCapabilityAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 8, ruleAliasedRequiredCapability_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAliasedRequiredCapability"


    // $ANTLR start "entryRuleRequiredCapability"
    // InternalBeeLangTestLanguage.g:155:1: entryRuleRequiredCapability : ruleRequiredCapability EOF ;
    public final void entryRuleRequiredCapability() throws RecognitionException {
        int entryRuleRequiredCapability_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 9) ) { return ; }
            // InternalBeeLangTestLanguage.g:156:1: ( ruleRequiredCapability EOF )
            // InternalBeeLangTestLanguage.g:157:1: ruleRequiredCapability EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRequiredCapabilityRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleRequiredCapability();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRequiredCapabilityRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 9, entryRuleRequiredCapability_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleRequiredCapability"


    // $ANTLR start "ruleRequiredCapability"
    // InternalBeeLangTestLanguage.g:164:1: ruleRequiredCapability : ( ( rule__RequiredCapability__Group__0 ) ) ;
    public final void ruleRequiredCapability() throws RecognitionException {
        int ruleRequiredCapability_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 10) ) { return ; }
            // InternalBeeLangTestLanguage.g:168:2: ( ( ( rule__RequiredCapability__Group__0 ) ) )
            // InternalBeeLangTestLanguage.g:169:2: ( ( rule__RequiredCapability__Group__0 ) )
            {
            // InternalBeeLangTestLanguage.g:169:2: ( ( rule__RequiredCapability__Group__0 ) )
            // InternalBeeLangTestLanguage.g:170:3: ( rule__RequiredCapability__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRequiredCapabilityAccess().getGroup()); 
            }
            // InternalBeeLangTestLanguage.g:171:3: ( rule__RequiredCapability__Group__0 )
            // InternalBeeLangTestLanguage.g:171:4: rule__RequiredCapability__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__RequiredCapability__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRequiredCapabilityAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 10, ruleRequiredCapability_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleRequiredCapability"


    // $ANTLR start "entryRulePath"
    // InternalBeeLangTestLanguage.g:180:1: entryRulePath : rulePath EOF ;
    public final void entryRulePath() throws RecognitionException {
        int entryRulePath_StartIndex = input.index();
         
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 11) ) { return ; }
            // InternalBeeLangTestLanguage.g:184:1: ( rulePath EOF )
            // InternalBeeLangTestLanguage.g:185:1: rulePath EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPathRule()); 
            }
            pushFollow(FOLLOW_1);
            rulePath();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPathRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 11, entryRulePath_StartIndex); }

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRulePath"


    // $ANTLR start "rulePath"
    // InternalBeeLangTestLanguage.g:195:1: rulePath : ( ( rule__Path__Alternatives ) ) ;
    public final void rulePath() throws RecognitionException {
        int rulePath_StartIndex = input.index();

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 12) ) { return ; }
            // InternalBeeLangTestLanguage.g:200:2: ( ( ( rule__Path__Alternatives ) ) )
            // InternalBeeLangTestLanguage.g:201:2: ( ( rule__Path__Alternatives ) )
            {
            // InternalBeeLangTestLanguage.g:201:2: ( ( rule__Path__Alternatives ) )
            // InternalBeeLangTestLanguage.g:202:3: ( rule__Path__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPathAccess().getAlternatives()); 
            }
            // InternalBeeLangTestLanguage.g:203:3: ( rule__Path__Alternatives )
            // InternalBeeLangTestLanguage.g:203:4: rule__Path__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__Path__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPathAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 12, rulePath_StartIndex); }

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "rulePath"


    // $ANTLR start "entryRuleParameterList"
    // InternalBeeLangTestLanguage.g:213:1: entryRuleParameterList : ruleParameterList EOF ;
    public final void entryRuleParameterList() throws RecognitionException {
        int entryRuleParameterList_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 13) ) { return ; }
            // InternalBeeLangTestLanguage.g:214:1: ( ruleParameterList EOF )
            // InternalBeeLangTestLanguage.g:215:1: ruleParameterList EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterListRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleParameterList();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterListRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 13, entryRuleParameterList_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleParameterList"


    // $ANTLR start "ruleParameterList"
    // InternalBeeLangTestLanguage.g:222:1: ruleParameterList : ( ( rule__ParameterList__Group__0 ) ) ;
    public final void ruleParameterList() throws RecognitionException {
        int ruleParameterList_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 14) ) { return ; }
            // InternalBeeLangTestLanguage.g:226:2: ( ( ( rule__ParameterList__Group__0 ) ) )
            // InternalBeeLangTestLanguage.g:227:2: ( ( rule__ParameterList__Group__0 ) )
            {
            // InternalBeeLangTestLanguage.g:227:2: ( ( rule__ParameterList__Group__0 ) )
            // InternalBeeLangTestLanguage.g:228:3: ( rule__ParameterList__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterListAccess().getGroup()); 
            }
            // InternalBeeLangTestLanguage.g:229:3: ( rule__ParameterList__Group__0 )
            // InternalBeeLangTestLanguage.g:229:4: rule__ParameterList__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__ParameterList__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterListAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 14, ruleParameterList_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleParameterList"


    // $ANTLR start "entryRuleFirstParameter"
    // InternalBeeLangTestLanguage.g:238:1: entryRuleFirstParameter : ruleFirstParameter EOF ;
    public final void entryRuleFirstParameter() throws RecognitionException {
        int entryRuleFirstParameter_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 15) ) { return ; }
            // InternalBeeLangTestLanguage.g:239:1: ( ruleFirstParameter EOF )
            // InternalBeeLangTestLanguage.g:240:1: ruleFirstParameter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFirstParameterRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleFirstParameter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFirstParameterRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 15, entryRuleFirstParameter_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleFirstParameter"


    // $ANTLR start "ruleFirstParameter"
    // InternalBeeLangTestLanguage.g:247:1: ruleFirstParameter : ( ( rule__FirstParameter__Alternatives ) ) ;
    public final void ruleFirstParameter() throws RecognitionException {
        int ruleFirstParameter_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 16) ) { return ; }
            // InternalBeeLangTestLanguage.g:251:2: ( ( ( rule__FirstParameter__Alternatives ) ) )
            // InternalBeeLangTestLanguage.g:252:2: ( ( rule__FirstParameter__Alternatives ) )
            {
            // InternalBeeLangTestLanguage.g:252:2: ( ( rule__FirstParameter__Alternatives ) )
            // InternalBeeLangTestLanguage.g:253:3: ( rule__FirstParameter__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFirstParameterAccess().getAlternatives()); 
            }
            // InternalBeeLangTestLanguage.g:254:3: ( rule__FirstParameter__Alternatives )
            // InternalBeeLangTestLanguage.g:254:4: rule__FirstParameter__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__FirstParameter__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFirstParameterAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 16, ruleFirstParameter_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFirstParameter"


    // $ANTLR start "entryRuleParameter"
    // InternalBeeLangTestLanguage.g:263:1: entryRuleParameter : ruleParameter EOF ;
    public final void entryRuleParameter() throws RecognitionException {
        int entryRuleParameter_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 17) ) { return ; }
            // InternalBeeLangTestLanguage.g:264:1: ( ruleParameter EOF )
            // InternalBeeLangTestLanguage.g:265:1: ruleParameter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleParameter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 17, entryRuleParameter_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleParameter"


    // $ANTLR start "ruleParameter"
    // InternalBeeLangTestLanguage.g:272:1: ruleParameter : ( ( rule__Parameter__ExprAssignment ) ) ;
    public final void ruleParameter() throws RecognitionException {
        int ruleParameter_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 18) ) { return ; }
            // InternalBeeLangTestLanguage.g:276:2: ( ( ( rule__Parameter__ExprAssignment ) ) )
            // InternalBeeLangTestLanguage.g:277:2: ( ( rule__Parameter__ExprAssignment ) )
            {
            // InternalBeeLangTestLanguage.g:277:2: ( ( rule__Parameter__ExprAssignment ) )
            // InternalBeeLangTestLanguage.g:278:3: ( rule__Parameter__ExprAssignment )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterAccess().getExprAssignment()); 
            }
            // InternalBeeLangTestLanguage.g:279:3: ( rule__Parameter__ExprAssignment )
            // InternalBeeLangTestLanguage.g:279:4: rule__Parameter__ExprAssignment
            {
            pushFollow(FOLLOW_2);
            rule__Parameter__ExprAssignment();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterAccess().getExprAssignment()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 18, ruleParameter_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleParameter"


    // $ANTLR start "entryRuleClosureParameter"
    // InternalBeeLangTestLanguage.g:288:1: entryRuleClosureParameter : ruleClosureParameter EOF ;
    public final void entryRuleClosureParameter() throws RecognitionException {
        int entryRuleClosureParameter_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 19) ) { return ; }
            // InternalBeeLangTestLanguage.g:289:1: ( ruleClosureParameter EOF )
            // InternalBeeLangTestLanguage.g:290:1: ruleClosureParameter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureParameterRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleClosureParameter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureParameterRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 19, entryRuleClosureParameter_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleClosureParameter"


    // $ANTLR start "ruleClosureParameter"
    // InternalBeeLangTestLanguage.g:297:1: ruleClosureParameter : ( ( rule__ClosureParameter__ExprAssignment ) ) ;
    public final void ruleClosureParameter() throws RecognitionException {
        int ruleClosureParameter_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 20) ) { return ; }
            // InternalBeeLangTestLanguage.g:301:2: ( ( ( rule__ClosureParameter__ExprAssignment ) ) )
            // InternalBeeLangTestLanguage.g:302:2: ( ( rule__ClosureParameter__ExprAssignment ) )
            {
            // InternalBeeLangTestLanguage.g:302:2: ( ( rule__ClosureParameter__ExprAssignment ) )
            // InternalBeeLangTestLanguage.g:303:3: ( rule__ClosureParameter__ExprAssignment )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureParameterAccess().getExprAssignment()); 
            }
            // InternalBeeLangTestLanguage.g:304:3: ( rule__ClosureParameter__ExprAssignment )
            // InternalBeeLangTestLanguage.g:304:4: rule__ClosureParameter__ExprAssignment
            {
            pushFollow(FOLLOW_2);
            rule__ClosureParameter__ExprAssignment();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureParameterAccess().getExprAssignment()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 20, ruleClosureParameter_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleClosureParameter"


    // $ANTLR start "entryRuleParameterDeclaration"
    // InternalBeeLangTestLanguage.g:313:1: entryRuleParameterDeclaration : ruleParameterDeclaration EOF ;
    public final void entryRuleParameterDeclaration() throws RecognitionException {
        int entryRuleParameterDeclaration_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 21) ) { return ; }
            // InternalBeeLangTestLanguage.g:314:1: ( ruleParameterDeclaration EOF )
            // InternalBeeLangTestLanguage.g:315:1: ruleParameterDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleParameterDeclaration();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterDeclarationRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 21, entryRuleParameterDeclaration_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleParameterDeclaration"


    // $ANTLR start "ruleParameterDeclaration"
    // InternalBeeLangTestLanguage.g:322:1: ruleParameterDeclaration : ( ( rule__ParameterDeclaration__Group__0 ) ) ;
    public final void ruleParameterDeclaration() throws RecognitionException {
        int ruleParameterDeclaration_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 22) ) { return ; }
            // InternalBeeLangTestLanguage.g:326:2: ( ( ( rule__ParameterDeclaration__Group__0 ) ) )
            // InternalBeeLangTestLanguage.g:327:2: ( ( rule__ParameterDeclaration__Group__0 ) )
            {
            // InternalBeeLangTestLanguage.g:327:2: ( ( rule__ParameterDeclaration__Group__0 ) )
            // InternalBeeLangTestLanguage.g:328:3: ( rule__ParameterDeclaration__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterDeclarationAccess().getGroup()); 
            }
            // InternalBeeLangTestLanguage.g:329:3: ( rule__ParameterDeclaration__Group__0 )
            // InternalBeeLangTestLanguage.g:329:4: rule__ParameterDeclaration__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__ParameterDeclaration__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterDeclarationAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 22, ruleParameterDeclaration_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleParameterDeclaration"


    // $ANTLR start "entryRuleFunction"
    // InternalBeeLangTestLanguage.g:338:1: entryRuleFunction : ruleFunction EOF ;
    public final void entryRuleFunction() throws RecognitionException {
        int entryRuleFunction_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 23) ) { return ; }
            // InternalBeeLangTestLanguage.g:339:1: ( ruleFunction EOF )
            // InternalBeeLangTestLanguage.g:340:1: ruleFunction EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleFunction();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 23, entryRuleFunction_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleFunction"


    // $ANTLR start "ruleFunction"
    // InternalBeeLangTestLanguage.g:347:1: ruleFunction : ( ( rule__Function__Group__0 ) ) ;
    public final void ruleFunction() throws RecognitionException {
        int ruleFunction_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 24) ) { return ; }
            // InternalBeeLangTestLanguage.g:351:2: ( ( ( rule__Function__Group__0 ) ) )
            // InternalBeeLangTestLanguage.g:352:2: ( ( rule__Function__Group__0 ) )
            {
            // InternalBeeLangTestLanguage.g:352:2: ( ( rule__Function__Group__0 ) )
            // InternalBeeLangTestLanguage.g:353:3: ( rule__Function__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getGroup()); 
            }
            // InternalBeeLangTestLanguage.g:354:3: ( rule__Function__Group__0 )
            // InternalBeeLangTestLanguage.g:354:4: rule__Function__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Function__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 24, ruleFunction_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFunction"


    // $ANTLR start "entryRuleGuardExpression"
    // InternalBeeLangTestLanguage.g:363:1: entryRuleGuardExpression : ruleGuardExpression EOF ;
    public final void entryRuleGuardExpression() throws RecognitionException {
        int entryRuleGuardExpression_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 25) ) { return ; }
            // InternalBeeLangTestLanguage.g:364:1: ( ruleGuardExpression EOF )
            // InternalBeeLangTestLanguage.g:365:1: ruleGuardExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGuardExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleGuardExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getGuardExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 25, entryRuleGuardExpression_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleGuardExpression"


    // $ANTLR start "ruleGuardExpression"
    // InternalBeeLangTestLanguage.g:372:1: ruleGuardExpression : ( ( rule__GuardExpression__Alternatives ) ) ;
    public final void ruleGuardExpression() throws RecognitionException {
        int ruleGuardExpression_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 26) ) { return ; }
            // InternalBeeLangTestLanguage.g:376:2: ( ( ( rule__GuardExpression__Alternatives ) ) )
            // InternalBeeLangTestLanguage.g:377:2: ( ( rule__GuardExpression__Alternatives ) )
            {
            // InternalBeeLangTestLanguage.g:377:2: ( ( rule__GuardExpression__Alternatives ) )
            // InternalBeeLangTestLanguage.g:378:3: ( rule__GuardExpression__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGuardExpressionAccess().getAlternatives()); 
            }
            // InternalBeeLangTestLanguage.g:379:3: ( rule__GuardExpression__Alternatives )
            // InternalBeeLangTestLanguage.g:379:4: rule__GuardExpression__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__GuardExpression__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getGuardExpressionAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 26, ruleGuardExpression_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleGuardExpression"


    // $ANTLR start "entryRuleAssignmentOperator"
    // InternalBeeLangTestLanguage.g:388:1: entryRuleAssignmentOperator : ruleAssignmentOperator EOF ;
    public final void entryRuleAssignmentOperator() throws RecognitionException {
        int entryRuleAssignmentOperator_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 27) ) { return ; }
            // InternalBeeLangTestLanguage.g:389:1: ( ruleAssignmentOperator EOF )
            // InternalBeeLangTestLanguage.g:390:1: ruleAssignmentOperator EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAssignmentOperatorRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleAssignmentOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAssignmentOperatorRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 27, entryRuleAssignmentOperator_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleAssignmentOperator"


    // $ANTLR start "ruleAssignmentOperator"
    // InternalBeeLangTestLanguage.g:397:1: ruleAssignmentOperator : ( ( rule__AssignmentOperator__Alternatives ) ) ;
    public final void ruleAssignmentOperator() throws RecognitionException {
        int ruleAssignmentOperator_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 28) ) { return ; }
            // InternalBeeLangTestLanguage.g:401:2: ( ( ( rule__AssignmentOperator__Alternatives ) ) )
            // InternalBeeLangTestLanguage.g:402:2: ( ( rule__AssignmentOperator__Alternatives ) )
            {
            // InternalBeeLangTestLanguage.g:402:2: ( ( rule__AssignmentOperator__Alternatives ) )
            // InternalBeeLangTestLanguage.g:403:3: ( rule__AssignmentOperator__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAssignmentOperatorAccess().getAlternatives()); 
            }
            // InternalBeeLangTestLanguage.g:404:3: ( rule__AssignmentOperator__Alternatives )
            // InternalBeeLangTestLanguage.g:404:4: rule__AssignmentOperator__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__AssignmentOperator__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAssignmentOperatorAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 28, ruleAssignmentOperator_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAssignmentOperator"


    // $ANTLR start "entryRuleRelationalOperator"
    // InternalBeeLangTestLanguage.g:413:1: entryRuleRelationalOperator : ruleRelationalOperator EOF ;
    public final void entryRuleRelationalOperator() throws RecognitionException {
        int entryRuleRelationalOperator_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 29) ) { return ; }
            // InternalBeeLangTestLanguage.g:414:1: ( ruleRelationalOperator EOF )
            // InternalBeeLangTestLanguage.g:415:1: ruleRelationalOperator EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRelationalOperatorRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleRelationalOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRelationalOperatorRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 29, entryRuleRelationalOperator_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleRelationalOperator"


    // $ANTLR start "ruleRelationalOperator"
    // InternalBeeLangTestLanguage.g:422:1: ruleRelationalOperator : ( ( rule__RelationalOperator__Alternatives ) ) ;
    public final void ruleRelationalOperator() throws RecognitionException {
        int ruleRelationalOperator_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 30) ) { return ; }
            // InternalBeeLangTestLanguage.g:426:2: ( ( ( rule__RelationalOperator__Alternatives ) ) )
            // InternalBeeLangTestLanguage.g:427:2: ( ( rule__RelationalOperator__Alternatives ) )
            {
            // InternalBeeLangTestLanguage.g:427:2: ( ( rule__RelationalOperator__Alternatives ) )
            // InternalBeeLangTestLanguage.g:428:3: ( rule__RelationalOperator__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRelationalOperatorAccess().getAlternatives()); 
            }
            // InternalBeeLangTestLanguage.g:429:3: ( rule__RelationalOperator__Alternatives )
            // InternalBeeLangTestLanguage.g:429:4: rule__RelationalOperator__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__RelationalOperator__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRelationalOperatorAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 30, ruleRelationalOperator_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleRelationalOperator"


    // $ANTLR start "entryRuleTopLevelExpression"
    // InternalBeeLangTestLanguage.g:438:1: entryRuleTopLevelExpression : ruleTopLevelExpression EOF ;
    public final void entryRuleTopLevelExpression() throws RecognitionException {
        int entryRuleTopLevelExpression_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 31) ) { return ; }
            // InternalBeeLangTestLanguage.g:439:1: ( ruleTopLevelExpression EOF )
            // InternalBeeLangTestLanguage.g:440:1: ruleTopLevelExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTopLevelExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleTopLevelExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTopLevelExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 31, entryRuleTopLevelExpression_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleTopLevelExpression"


    // $ANTLR start "ruleTopLevelExpression"
    // InternalBeeLangTestLanguage.g:447:1: ruleTopLevelExpression : ( ( rule__TopLevelExpression__Alternatives ) ) ;
    public final void ruleTopLevelExpression() throws RecognitionException {
        int ruleTopLevelExpression_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 32) ) { return ; }
            // InternalBeeLangTestLanguage.g:451:2: ( ( ( rule__TopLevelExpression__Alternatives ) ) )
            // InternalBeeLangTestLanguage.g:452:2: ( ( rule__TopLevelExpression__Alternatives ) )
            {
            // InternalBeeLangTestLanguage.g:452:2: ( ( rule__TopLevelExpression__Alternatives ) )
            // InternalBeeLangTestLanguage.g:453:3: ( rule__TopLevelExpression__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTopLevelExpressionAccess().getAlternatives()); 
            }
            // InternalBeeLangTestLanguage.g:454:3: ( rule__TopLevelExpression__Alternatives )
            // InternalBeeLangTestLanguage.g:454:4: rule__TopLevelExpression__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__TopLevelExpression__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTopLevelExpressionAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 32, ruleTopLevelExpression_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTopLevelExpression"


    // $ANTLR start "entryRuleExpression"
    // InternalBeeLangTestLanguage.g:463:1: entryRuleExpression : ruleExpression EOF ;
    public final void entryRuleExpression() throws RecognitionException {
        int entryRuleExpression_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 33) ) { return ; }
            // InternalBeeLangTestLanguage.g:464:1: ( ruleExpression EOF )
            // InternalBeeLangTestLanguage.g:465:1: ruleExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 33, entryRuleExpression_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleExpression"


    // $ANTLR start "ruleExpression"
    // InternalBeeLangTestLanguage.g:472:1: ruleExpression : ( ruleAssignmentExpression ) ;
    public final void ruleExpression() throws RecognitionException {
        int ruleExpression_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 34) ) { return ; }
            // InternalBeeLangTestLanguage.g:476:2: ( ( ruleAssignmentExpression ) )
            // InternalBeeLangTestLanguage.g:477:2: ( ruleAssignmentExpression )
            {
            // InternalBeeLangTestLanguage.g:477:2: ( ruleAssignmentExpression )
            // InternalBeeLangTestLanguage.g:478:3: ruleAssignmentExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionAccess().getAssignmentExpressionParserRuleCall()); 
            }
            pushFollow(FOLLOW_2);
            ruleAssignmentExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionAccess().getAssignmentExpressionParserRuleCall()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 34, ruleExpression_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleExpression"


    // $ANTLR start "entryRuleAssignmentExpression"
    // InternalBeeLangTestLanguage.g:488:1: entryRuleAssignmentExpression : ruleAssignmentExpression EOF ;
    public final void entryRuleAssignmentExpression() throws RecognitionException {
        int entryRuleAssignmentExpression_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 35) ) { return ; }
            // InternalBeeLangTestLanguage.g:489:1: ( ruleAssignmentExpression EOF )
            // InternalBeeLangTestLanguage.g:490:1: ruleAssignmentExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAssignmentExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleAssignmentExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAssignmentExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 35, entryRuleAssignmentExpression_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleAssignmentExpression"


    // $ANTLR start "ruleAssignmentExpression"
    // InternalBeeLangTestLanguage.g:497:1: ruleAssignmentExpression : ( ( rule__AssignmentExpression__Group__0 ) ) ;
    public final void ruleAssignmentExpression() throws RecognitionException {
        int ruleAssignmentExpression_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 36) ) { return ; }
            // InternalBeeLangTestLanguage.g:501:2: ( ( ( rule__AssignmentExpression__Group__0 ) ) )
            // InternalBeeLangTestLanguage.g:502:2: ( ( rule__AssignmentExpression__Group__0 ) )
            {
            // InternalBeeLangTestLanguage.g:502:2: ( ( rule__AssignmentExpression__Group__0 ) )
            // InternalBeeLangTestLanguage.g:503:3: ( rule__AssignmentExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAssignmentExpressionAccess().getGroup()); 
            }
            // InternalBeeLangTestLanguage.g:504:3: ( rule__AssignmentExpression__Group__0 )
            // InternalBeeLangTestLanguage.g:504:4: rule__AssignmentExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__AssignmentExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAssignmentExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 36, ruleAssignmentExpression_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAssignmentExpression"


    // $ANTLR start "entryRuleVarDeclaration"
    // InternalBeeLangTestLanguage.g:513:1: entryRuleVarDeclaration : ruleVarDeclaration EOF ;
    public final void entryRuleVarDeclaration() throws RecognitionException {
        int entryRuleVarDeclaration_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 37) ) { return ; }
            // InternalBeeLangTestLanguage.g:514:1: ( ruleVarDeclaration EOF )
            // InternalBeeLangTestLanguage.g:515:1: ruleVarDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleVarDeclaration();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 37, entryRuleVarDeclaration_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleVarDeclaration"


    // $ANTLR start "ruleVarDeclaration"
    // InternalBeeLangTestLanguage.g:522:1: ruleVarDeclaration : ( ( rule__VarDeclaration__Group__0 ) ) ;
    public final void ruleVarDeclaration() throws RecognitionException {
        int ruleVarDeclaration_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 38) ) { return ; }
            // InternalBeeLangTestLanguage.g:526:2: ( ( ( rule__VarDeclaration__Group__0 ) ) )
            // InternalBeeLangTestLanguage.g:527:2: ( ( rule__VarDeclaration__Group__0 ) )
            {
            // InternalBeeLangTestLanguage.g:527:2: ( ( rule__VarDeclaration__Group__0 ) )
            // InternalBeeLangTestLanguage.g:528:3: ( rule__VarDeclaration__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getGroup()); 
            }
            // InternalBeeLangTestLanguage.g:529:3: ( rule__VarDeclaration__Group__0 )
            // InternalBeeLangTestLanguage.g:529:4: rule__VarDeclaration__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 38, ruleVarDeclaration_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleVarDeclaration"


    // $ANTLR start "entryRuleValDeclaration"
    // InternalBeeLangTestLanguage.g:538:1: entryRuleValDeclaration : ruleValDeclaration EOF ;
    public final void entryRuleValDeclaration() throws RecognitionException {
        int entryRuleValDeclaration_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 39) ) { return ; }
            // InternalBeeLangTestLanguage.g:539:1: ( ruleValDeclaration EOF )
            // InternalBeeLangTestLanguage.g:540:1: ruleValDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleValDeclaration();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getValDeclarationRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 39, entryRuleValDeclaration_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleValDeclaration"


    // $ANTLR start "ruleValDeclaration"
    // InternalBeeLangTestLanguage.g:547:1: ruleValDeclaration : ( ( rule__ValDeclaration__Group__0 ) ) ;
    public final void ruleValDeclaration() throws RecognitionException {
        int ruleValDeclaration_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 40) ) { return ; }
            // InternalBeeLangTestLanguage.g:551:2: ( ( ( rule__ValDeclaration__Group__0 ) ) )
            // InternalBeeLangTestLanguage.g:552:2: ( ( rule__ValDeclaration__Group__0 ) )
            {
            // InternalBeeLangTestLanguage.g:552:2: ( ( rule__ValDeclaration__Group__0 ) )
            // InternalBeeLangTestLanguage.g:553:3: ( rule__ValDeclaration__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValDeclarationAccess().getGroup()); 
            }
            // InternalBeeLangTestLanguage.g:554:3: ( rule__ValDeclaration__Group__0 )
            // InternalBeeLangTestLanguage.g:554:4: rule__ValDeclaration__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__ValDeclaration__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getValDeclarationAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 40, ruleValDeclaration_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleValDeclaration"


    // $ANTLR start "entryRuleTypeRef"
    // InternalBeeLangTestLanguage.g:563:1: entryRuleTypeRef : ruleTypeRef EOF ;
    public final void entryRuleTypeRef() throws RecognitionException {
        int entryRuleTypeRef_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 41) ) { return ; }
            // InternalBeeLangTestLanguage.g:564:1: ( ruleTypeRef EOF )
            // InternalBeeLangTestLanguage.g:565:1: ruleTypeRef EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeRefRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleTypeRef();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeRefRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 41, entryRuleTypeRef_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleTypeRef"


    // $ANTLR start "ruleTypeRef"
    // InternalBeeLangTestLanguage.g:572:1: ruleTypeRef : ( ( rule__TypeRef__Alternatives ) ) ;
    public final void ruleTypeRef() throws RecognitionException {
        int ruleTypeRef_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 42) ) { return ; }
            // InternalBeeLangTestLanguage.g:576:2: ( ( ( rule__TypeRef__Alternatives ) ) )
            // InternalBeeLangTestLanguage.g:577:2: ( ( rule__TypeRef__Alternatives ) )
            {
            // InternalBeeLangTestLanguage.g:577:2: ( ( rule__TypeRef__Alternatives ) )
            // InternalBeeLangTestLanguage.g:578:3: ( rule__TypeRef__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeRefAccess().getAlternatives()); 
            }
            // InternalBeeLangTestLanguage.g:579:3: ( rule__TypeRef__Alternatives )
            // InternalBeeLangTestLanguage.g:579:4: rule__TypeRef__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__TypeRef__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeRefAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 42, ruleTypeRef_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTypeRef"


    // $ANTLR start "entryRuleSimpleTypeRef"
    // InternalBeeLangTestLanguage.g:588:1: entryRuleSimpleTypeRef : ruleSimpleTypeRef EOF ;
    public final void entryRuleSimpleTypeRef() throws RecognitionException {
        int entryRuleSimpleTypeRef_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 43) ) { return ; }
            // InternalBeeLangTestLanguage.g:589:1: ( ruleSimpleTypeRef EOF )
            // InternalBeeLangTestLanguage.g:590:1: ruleSimpleTypeRef EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSimpleTypeRefRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSimpleTypeRef();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSimpleTypeRefRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 43, entryRuleSimpleTypeRef_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleSimpleTypeRef"


    // $ANTLR start "ruleSimpleTypeRef"
    // InternalBeeLangTestLanguage.g:597:1: ruleSimpleTypeRef : ( ( rule__SimpleTypeRef__Group__0 ) ) ;
    public final void ruleSimpleTypeRef() throws RecognitionException {
        int ruleSimpleTypeRef_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 44) ) { return ; }
            // InternalBeeLangTestLanguage.g:601:2: ( ( ( rule__SimpleTypeRef__Group__0 ) ) )
            // InternalBeeLangTestLanguage.g:602:2: ( ( rule__SimpleTypeRef__Group__0 ) )
            {
            // InternalBeeLangTestLanguage.g:602:2: ( ( rule__SimpleTypeRef__Group__0 ) )
            // InternalBeeLangTestLanguage.g:603:3: ( rule__SimpleTypeRef__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSimpleTypeRefAccess().getGroup()); 
            }
            // InternalBeeLangTestLanguage.g:604:3: ( rule__SimpleTypeRef__Group__0 )
            // InternalBeeLangTestLanguage.g:604:4: rule__SimpleTypeRef__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__SimpleTypeRef__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSimpleTypeRefAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 44, ruleSimpleTypeRef_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSimpleTypeRef"


    // $ANTLR start "entryRuleClosureTypeRef"
    // InternalBeeLangTestLanguage.g:613:1: entryRuleClosureTypeRef : ruleClosureTypeRef EOF ;
    public final void entryRuleClosureTypeRef() throws RecognitionException {
        int entryRuleClosureTypeRef_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 45) ) { return ; }
            // InternalBeeLangTestLanguage.g:614:1: ( ruleClosureTypeRef EOF )
            // InternalBeeLangTestLanguage.g:615:1: ruleClosureTypeRef EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureTypeRefRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleClosureTypeRef();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureTypeRefRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 45, entryRuleClosureTypeRef_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleClosureTypeRef"


    // $ANTLR start "ruleClosureTypeRef"
    // InternalBeeLangTestLanguage.g:622:1: ruleClosureTypeRef : ( ( rule__ClosureTypeRef__Group__0 ) ) ;
    public final void ruleClosureTypeRef() throws RecognitionException {
        int ruleClosureTypeRef_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 46) ) { return ; }
            // InternalBeeLangTestLanguage.g:626:2: ( ( ( rule__ClosureTypeRef__Group__0 ) ) )
            // InternalBeeLangTestLanguage.g:627:2: ( ( rule__ClosureTypeRef__Group__0 ) )
            {
            // InternalBeeLangTestLanguage.g:627:2: ( ( rule__ClosureTypeRef__Group__0 ) )
            // InternalBeeLangTestLanguage.g:628:3: ( rule__ClosureTypeRef__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureTypeRefAccess().getGroup()); 
            }
            // InternalBeeLangTestLanguage.g:629:3: ( rule__ClosureTypeRef__Group__0 )
            // InternalBeeLangTestLanguage.g:629:4: rule__ClosureTypeRef__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__ClosureTypeRef__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureTypeRefAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 46, ruleClosureTypeRef_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleClosureTypeRef"


    // $ANTLR start "entryRuleCachedExpression"
    // InternalBeeLangTestLanguage.g:638:1: entryRuleCachedExpression : ruleCachedExpression EOF ;
    public final void entryRuleCachedExpression() throws RecognitionException {
        int entryRuleCachedExpression_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 47) ) { return ; }
            // InternalBeeLangTestLanguage.g:639:1: ( ruleCachedExpression EOF )
            // InternalBeeLangTestLanguage.g:640:1: ruleCachedExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCachedExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleCachedExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCachedExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 47, entryRuleCachedExpression_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleCachedExpression"


    // $ANTLR start "ruleCachedExpression"
    // InternalBeeLangTestLanguage.g:647:1: ruleCachedExpression : ( ( rule__CachedExpression__Alternatives ) ) ;
    public final void ruleCachedExpression() throws RecognitionException {
        int ruleCachedExpression_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 48) ) { return ; }
            // InternalBeeLangTestLanguage.g:651:2: ( ( ( rule__CachedExpression__Alternatives ) ) )
            // InternalBeeLangTestLanguage.g:652:2: ( ( rule__CachedExpression__Alternatives ) )
            {
            // InternalBeeLangTestLanguage.g:652:2: ( ( rule__CachedExpression__Alternatives ) )
            // InternalBeeLangTestLanguage.g:653:3: ( rule__CachedExpression__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCachedExpressionAccess().getAlternatives()); 
            }
            // InternalBeeLangTestLanguage.g:654:3: ( rule__CachedExpression__Alternatives )
            // InternalBeeLangTestLanguage.g:654:4: rule__CachedExpression__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__CachedExpression__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCachedExpressionAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 48, ruleCachedExpression_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleCachedExpression"


    // $ANTLR start "entryRuleOrExpression"
    // InternalBeeLangTestLanguage.g:663:1: entryRuleOrExpression : ruleOrExpression EOF ;
    public final void entryRuleOrExpression() throws RecognitionException {
        int entryRuleOrExpression_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 49) ) { return ; }
            // InternalBeeLangTestLanguage.g:664:1: ( ruleOrExpression EOF )
            // InternalBeeLangTestLanguage.g:665:1: ruleOrExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleOrExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 49, entryRuleOrExpression_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleOrExpression"


    // $ANTLR start "ruleOrExpression"
    // InternalBeeLangTestLanguage.g:672:1: ruleOrExpression : ( ( rule__OrExpression__Group__0 ) ) ;
    public final void ruleOrExpression() throws RecognitionException {
        int ruleOrExpression_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 50) ) { return ; }
            // InternalBeeLangTestLanguage.g:676:2: ( ( ( rule__OrExpression__Group__0 ) ) )
            // InternalBeeLangTestLanguage.g:677:2: ( ( rule__OrExpression__Group__0 ) )
            {
            // InternalBeeLangTestLanguage.g:677:2: ( ( rule__OrExpression__Group__0 ) )
            // InternalBeeLangTestLanguage.g:678:3: ( rule__OrExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrExpressionAccess().getGroup()); 
            }
            // InternalBeeLangTestLanguage.g:679:3: ( rule__OrExpression__Group__0 )
            // InternalBeeLangTestLanguage.g:679:4: rule__OrExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__OrExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 50, ruleOrExpression_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOrExpression"


    // $ANTLR start "entryRuleAndExpression"
    // InternalBeeLangTestLanguage.g:688:1: entryRuleAndExpression : ruleAndExpression EOF ;
    public final void entryRuleAndExpression() throws RecognitionException {
        int entryRuleAndExpression_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 51) ) { return ; }
            // InternalBeeLangTestLanguage.g:689:1: ( ruleAndExpression EOF )
            // InternalBeeLangTestLanguage.g:690:1: ruleAndExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleAndExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 51, entryRuleAndExpression_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleAndExpression"


    // $ANTLR start "ruleAndExpression"
    // InternalBeeLangTestLanguage.g:697:1: ruleAndExpression : ( ( rule__AndExpression__Group__0 ) ) ;
    public final void ruleAndExpression() throws RecognitionException {
        int ruleAndExpression_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 52) ) { return ; }
            // InternalBeeLangTestLanguage.g:701:2: ( ( ( rule__AndExpression__Group__0 ) ) )
            // InternalBeeLangTestLanguage.g:702:2: ( ( rule__AndExpression__Group__0 ) )
            {
            // InternalBeeLangTestLanguage.g:702:2: ( ( rule__AndExpression__Group__0 ) )
            // InternalBeeLangTestLanguage.g:703:3: ( rule__AndExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndExpressionAccess().getGroup()); 
            }
            // InternalBeeLangTestLanguage.g:704:3: ( rule__AndExpression__Group__0 )
            // InternalBeeLangTestLanguage.g:704:4: rule__AndExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__AndExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 52, ruleAndExpression_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAndExpression"


    // $ANTLR start "entryRuleRelationalExpression"
    // InternalBeeLangTestLanguage.g:713:1: entryRuleRelationalExpression : ruleRelationalExpression EOF ;
    public final void entryRuleRelationalExpression() throws RecognitionException {
        int entryRuleRelationalExpression_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 53) ) { return ; }
            // InternalBeeLangTestLanguage.g:714:1: ( ruleRelationalExpression EOF )
            // InternalBeeLangTestLanguage.g:715:1: ruleRelationalExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRelationalExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleRelationalExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRelationalExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 53, entryRuleRelationalExpression_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleRelationalExpression"


    // $ANTLR start "ruleRelationalExpression"
    // InternalBeeLangTestLanguage.g:722:1: ruleRelationalExpression : ( ( rule__RelationalExpression__Group__0 ) ) ;
    public final void ruleRelationalExpression() throws RecognitionException {
        int ruleRelationalExpression_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 54) ) { return ; }
            // InternalBeeLangTestLanguage.g:726:2: ( ( ( rule__RelationalExpression__Group__0 ) ) )
            // InternalBeeLangTestLanguage.g:727:2: ( ( rule__RelationalExpression__Group__0 ) )
            {
            // InternalBeeLangTestLanguage.g:727:2: ( ( rule__RelationalExpression__Group__0 ) )
            // InternalBeeLangTestLanguage.g:728:3: ( rule__RelationalExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRelationalExpressionAccess().getGroup()); 
            }
            // InternalBeeLangTestLanguage.g:729:3: ( rule__RelationalExpression__Group__0 )
            // InternalBeeLangTestLanguage.g:729:4: rule__RelationalExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__RelationalExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRelationalExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 54, ruleRelationalExpression_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleRelationalExpression"


    // $ANTLR start "entryRuleAdditiveExpression"
    // InternalBeeLangTestLanguage.g:738:1: entryRuleAdditiveExpression : ruleAdditiveExpression EOF ;
    public final void entryRuleAdditiveExpression() throws RecognitionException {
        int entryRuleAdditiveExpression_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 55) ) { return ; }
            // InternalBeeLangTestLanguage.g:739:1: ( ruleAdditiveExpression EOF )
            // InternalBeeLangTestLanguage.g:740:1: ruleAdditiveExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAdditiveExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleAdditiveExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAdditiveExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 55, entryRuleAdditiveExpression_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleAdditiveExpression"


    // $ANTLR start "ruleAdditiveExpression"
    // InternalBeeLangTestLanguage.g:747:1: ruleAdditiveExpression : ( ( rule__AdditiveExpression__Group__0 ) ) ;
    public final void ruleAdditiveExpression() throws RecognitionException {
        int ruleAdditiveExpression_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 56) ) { return ; }
            // InternalBeeLangTestLanguage.g:751:2: ( ( ( rule__AdditiveExpression__Group__0 ) ) )
            // InternalBeeLangTestLanguage.g:752:2: ( ( rule__AdditiveExpression__Group__0 ) )
            {
            // InternalBeeLangTestLanguage.g:752:2: ( ( rule__AdditiveExpression__Group__0 ) )
            // InternalBeeLangTestLanguage.g:753:3: ( rule__AdditiveExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAdditiveExpressionAccess().getGroup()); 
            }
            // InternalBeeLangTestLanguage.g:754:3: ( rule__AdditiveExpression__Group__0 )
            // InternalBeeLangTestLanguage.g:754:4: rule__AdditiveExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__AdditiveExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAdditiveExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 56, ruleAdditiveExpression_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAdditiveExpression"


    // $ANTLR start "entryRuleMultiplicativeExpression"
    // InternalBeeLangTestLanguage.g:763:1: entryRuleMultiplicativeExpression : ruleMultiplicativeExpression EOF ;
    public final void entryRuleMultiplicativeExpression() throws RecognitionException {
        int entryRuleMultiplicativeExpression_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 57) ) { return ; }
            // InternalBeeLangTestLanguage.g:764:1: ( ruleMultiplicativeExpression EOF )
            // InternalBeeLangTestLanguage.g:765:1: ruleMultiplicativeExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMultiplicativeExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleMultiplicativeExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMultiplicativeExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 57, entryRuleMultiplicativeExpression_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleMultiplicativeExpression"


    // $ANTLR start "ruleMultiplicativeExpression"
    // InternalBeeLangTestLanguage.g:772:1: ruleMultiplicativeExpression : ( ( rule__MultiplicativeExpression__Group__0 ) ) ;
    public final void ruleMultiplicativeExpression() throws RecognitionException {
        int ruleMultiplicativeExpression_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 58) ) { return ; }
            // InternalBeeLangTestLanguage.g:776:2: ( ( ( rule__MultiplicativeExpression__Group__0 ) ) )
            // InternalBeeLangTestLanguage.g:777:2: ( ( rule__MultiplicativeExpression__Group__0 ) )
            {
            // InternalBeeLangTestLanguage.g:777:2: ( ( rule__MultiplicativeExpression__Group__0 ) )
            // InternalBeeLangTestLanguage.g:778:3: ( rule__MultiplicativeExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMultiplicativeExpressionAccess().getGroup()); 
            }
            // InternalBeeLangTestLanguage.g:779:3: ( rule__MultiplicativeExpression__Group__0 )
            // InternalBeeLangTestLanguage.g:779:4: rule__MultiplicativeExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__MultiplicativeExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMultiplicativeExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 58, ruleMultiplicativeExpression_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleMultiplicativeExpression"


    // $ANTLR start "entryRuleSetExpression"
    // InternalBeeLangTestLanguage.g:788:1: entryRuleSetExpression : ruleSetExpression EOF ;
    public final void entryRuleSetExpression() throws RecognitionException {
        int entryRuleSetExpression_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 59) ) { return ; }
            // InternalBeeLangTestLanguage.g:789:1: ( ruleSetExpression EOF )
            // InternalBeeLangTestLanguage.g:790:1: ruleSetExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSetExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSetExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSetExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 59, entryRuleSetExpression_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleSetExpression"


    // $ANTLR start "ruleSetExpression"
    // InternalBeeLangTestLanguage.g:797:1: ruleSetExpression : ( ( rule__SetExpression__Group__0 ) ) ;
    public final void ruleSetExpression() throws RecognitionException {
        int ruleSetExpression_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 60) ) { return ; }
            // InternalBeeLangTestLanguage.g:801:2: ( ( ( rule__SetExpression__Group__0 ) ) )
            // InternalBeeLangTestLanguage.g:802:2: ( ( rule__SetExpression__Group__0 ) )
            {
            // InternalBeeLangTestLanguage.g:802:2: ( ( rule__SetExpression__Group__0 ) )
            // InternalBeeLangTestLanguage.g:803:3: ( rule__SetExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSetExpressionAccess().getGroup()); 
            }
            // InternalBeeLangTestLanguage.g:804:3: ( rule__SetExpression__Group__0 )
            // InternalBeeLangTestLanguage.g:804:4: rule__SetExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__SetExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSetExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 60, ruleSetExpression_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSetExpression"


    // $ANTLR start "entryRuleUnaryOrInfixExpression"
    // InternalBeeLangTestLanguage.g:813:1: entryRuleUnaryOrInfixExpression : ruleUnaryOrInfixExpression EOF ;
    public final void entryRuleUnaryOrInfixExpression() throws RecognitionException {
        int entryRuleUnaryOrInfixExpression_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 61) ) { return ; }
            // InternalBeeLangTestLanguage.g:814:1: ( ruleUnaryOrInfixExpression EOF )
            // InternalBeeLangTestLanguage.g:815:1: ruleUnaryOrInfixExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnaryOrInfixExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleUnaryOrInfixExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnaryOrInfixExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 61, entryRuleUnaryOrInfixExpression_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleUnaryOrInfixExpression"


    // $ANTLR start "ruleUnaryOrInfixExpression"
    // InternalBeeLangTestLanguage.g:822:1: ruleUnaryOrInfixExpression : ( ( rule__UnaryOrInfixExpression__Alternatives ) ) ;
    public final void ruleUnaryOrInfixExpression() throws RecognitionException {
        int ruleUnaryOrInfixExpression_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 62) ) { return ; }
            // InternalBeeLangTestLanguage.g:826:2: ( ( ( rule__UnaryOrInfixExpression__Alternatives ) ) )
            // InternalBeeLangTestLanguage.g:827:2: ( ( rule__UnaryOrInfixExpression__Alternatives ) )
            {
            // InternalBeeLangTestLanguage.g:827:2: ( ( rule__UnaryOrInfixExpression__Alternatives ) )
            // InternalBeeLangTestLanguage.g:828:3: ( rule__UnaryOrInfixExpression__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnaryOrInfixExpressionAccess().getAlternatives()); 
            }
            // InternalBeeLangTestLanguage.g:829:3: ( rule__UnaryOrInfixExpression__Alternatives )
            // InternalBeeLangTestLanguage.g:829:4: rule__UnaryOrInfixExpression__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__UnaryOrInfixExpression__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnaryOrInfixExpressionAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 62, ruleUnaryOrInfixExpression_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleUnaryOrInfixExpression"


    // $ANTLR start "entryRuleUnaryExpression"
    // InternalBeeLangTestLanguage.g:838:1: entryRuleUnaryExpression : ruleUnaryExpression EOF ;
    public final void entryRuleUnaryExpression() throws RecognitionException {
        int entryRuleUnaryExpression_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 63) ) { return ; }
            // InternalBeeLangTestLanguage.g:839:1: ( ruleUnaryExpression EOF )
            // InternalBeeLangTestLanguage.g:840:1: ruleUnaryExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnaryExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleUnaryExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnaryExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 63, entryRuleUnaryExpression_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleUnaryExpression"


    // $ANTLR start "ruleUnaryExpression"
    // InternalBeeLangTestLanguage.g:847:1: ruleUnaryExpression : ( ( rule__UnaryExpression__Group__0 ) ) ;
    public final void ruleUnaryExpression() throws RecognitionException {
        int ruleUnaryExpression_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 64) ) { return ; }
            // InternalBeeLangTestLanguage.g:851:2: ( ( ( rule__UnaryExpression__Group__0 ) ) )
            // InternalBeeLangTestLanguage.g:852:2: ( ( rule__UnaryExpression__Group__0 ) )
            {
            // InternalBeeLangTestLanguage.g:852:2: ( ( rule__UnaryExpression__Group__0 ) )
            // InternalBeeLangTestLanguage.g:853:3: ( rule__UnaryExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnaryExpressionAccess().getGroup()); 
            }
            // InternalBeeLangTestLanguage.g:854:3: ( rule__UnaryExpression__Group__0 )
            // InternalBeeLangTestLanguage.g:854:4: rule__UnaryExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__UnaryExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnaryExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 64, ruleUnaryExpression_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleUnaryExpression"


    // $ANTLR start "entryRulePreopExpression"
    // InternalBeeLangTestLanguage.g:863:1: entryRulePreopExpression : rulePreopExpression EOF ;
    public final void entryRulePreopExpression() throws RecognitionException {
        int entryRulePreopExpression_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 65) ) { return ; }
            // InternalBeeLangTestLanguage.g:864:1: ( rulePreopExpression EOF )
            // InternalBeeLangTestLanguage.g:865:1: rulePreopExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPreopExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            rulePreopExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPreopExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 65, entryRulePreopExpression_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRulePreopExpression"


    // $ANTLR start "rulePreopExpression"
    // InternalBeeLangTestLanguage.g:872:1: rulePreopExpression : ( ( rule__PreopExpression__Group__0 ) ) ;
    public final void rulePreopExpression() throws RecognitionException {
        int rulePreopExpression_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 66) ) { return ; }
            // InternalBeeLangTestLanguage.g:876:2: ( ( ( rule__PreopExpression__Group__0 ) ) )
            // InternalBeeLangTestLanguage.g:877:2: ( ( rule__PreopExpression__Group__0 ) )
            {
            // InternalBeeLangTestLanguage.g:877:2: ( ( rule__PreopExpression__Group__0 ) )
            // InternalBeeLangTestLanguage.g:878:3: ( rule__PreopExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPreopExpressionAccess().getGroup()); 
            }
            // InternalBeeLangTestLanguage.g:879:3: ( rule__PreopExpression__Group__0 )
            // InternalBeeLangTestLanguage.g:879:4: rule__PreopExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__PreopExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPreopExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 66, rulePreopExpression_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePreopExpression"


    // $ANTLR start "entryRulePostopExpression"
    // InternalBeeLangTestLanguage.g:888:1: entryRulePostopExpression : rulePostopExpression EOF ;
    public final void entryRulePostopExpression() throws RecognitionException {
        int entryRulePostopExpression_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 67) ) { return ; }
            // InternalBeeLangTestLanguage.g:889:1: ( rulePostopExpression EOF )
            // InternalBeeLangTestLanguage.g:890:1: rulePostopExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPostopExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            rulePostopExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPostopExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 67, entryRulePostopExpression_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRulePostopExpression"


    // $ANTLR start "rulePostopExpression"
    // InternalBeeLangTestLanguage.g:897:1: rulePostopExpression : ( ( rule__PostopExpression__Group__0 ) ) ;
    public final void rulePostopExpression() throws RecognitionException {
        int rulePostopExpression_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 68) ) { return ; }
            // InternalBeeLangTestLanguage.g:901:2: ( ( ( rule__PostopExpression__Group__0 ) ) )
            // InternalBeeLangTestLanguage.g:902:2: ( ( rule__PostopExpression__Group__0 ) )
            {
            // InternalBeeLangTestLanguage.g:902:2: ( ( rule__PostopExpression__Group__0 ) )
            // InternalBeeLangTestLanguage.g:903:3: ( rule__PostopExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPostopExpressionAccess().getGroup()); 
            }
            // InternalBeeLangTestLanguage.g:904:3: ( rule__PostopExpression__Group__0 )
            // InternalBeeLangTestLanguage.g:904:4: rule__PostopExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__PostopExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPostopExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 68, rulePostopExpression_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePostopExpression"


    // $ANTLR start "entryRuleInfixExpression"
    // InternalBeeLangTestLanguage.g:913:1: entryRuleInfixExpression : ruleInfixExpression EOF ;
    public final void entryRuleInfixExpression() throws RecognitionException {
        int entryRuleInfixExpression_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 69) ) { return ; }
            // InternalBeeLangTestLanguage.g:914:1: ( ruleInfixExpression EOF )
            // InternalBeeLangTestLanguage.g:915:1: ruleInfixExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInfixExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleInfixExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInfixExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 69, entryRuleInfixExpression_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleInfixExpression"


    // $ANTLR start "ruleInfixExpression"
    // InternalBeeLangTestLanguage.g:922:1: ruleInfixExpression : ( ( rule__InfixExpression__Group__0 ) ) ;
    public final void ruleInfixExpression() throws RecognitionException {
        int ruleInfixExpression_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 70) ) { return ; }
            // InternalBeeLangTestLanguage.g:926:2: ( ( ( rule__InfixExpression__Group__0 ) ) )
            // InternalBeeLangTestLanguage.g:927:2: ( ( rule__InfixExpression__Group__0 ) )
            {
            // InternalBeeLangTestLanguage.g:927:2: ( ( rule__InfixExpression__Group__0 ) )
            // InternalBeeLangTestLanguage.g:928:3: ( rule__InfixExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInfixExpressionAccess().getGroup()); 
            }
            // InternalBeeLangTestLanguage.g:929:3: ( rule__InfixExpression__Group__0 )
            // InternalBeeLangTestLanguage.g:929:4: rule__InfixExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__InfixExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInfixExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 70, ruleInfixExpression_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleInfixExpression"


    // $ANTLR start "entryRuleCallExpression"
    // InternalBeeLangTestLanguage.g:938:1: entryRuleCallExpression : ruleCallExpression EOF ;
    public final void entryRuleCallExpression() throws RecognitionException {
        int entryRuleCallExpression_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 71) ) { return ; }
            // InternalBeeLangTestLanguage.g:939:1: ( ruleCallExpression EOF )
            // InternalBeeLangTestLanguage.g:940:1: ruleCallExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCallExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleCallExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCallExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 71, entryRuleCallExpression_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleCallExpression"


    // $ANTLR start "ruleCallExpression"
    // InternalBeeLangTestLanguage.g:947:1: ruleCallExpression : ( ( rule__CallExpression__Group__0 ) ) ;
    public final void ruleCallExpression() throws RecognitionException {
        int ruleCallExpression_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 72) ) { return ; }
            // InternalBeeLangTestLanguage.g:951:2: ( ( ( rule__CallExpression__Group__0 ) ) )
            // InternalBeeLangTestLanguage.g:952:2: ( ( rule__CallExpression__Group__0 ) )
            {
            // InternalBeeLangTestLanguage.g:952:2: ( ( rule__CallExpression__Group__0 ) )
            // InternalBeeLangTestLanguage.g:953:3: ( rule__CallExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCallExpressionAccess().getGroup()); 
            }
            // InternalBeeLangTestLanguage.g:954:3: ( rule__CallExpression__Group__0 )
            // InternalBeeLangTestLanguage.g:954:4: rule__CallExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__CallExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCallExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 72, ruleCallExpression_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleCallExpression"


    // $ANTLR start "entryRulePrimaryExpression"
    // InternalBeeLangTestLanguage.g:963:1: entryRulePrimaryExpression : rulePrimaryExpression EOF ;
    public final void entryRulePrimaryExpression() throws RecognitionException {
        int entryRulePrimaryExpression_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 73) ) { return ; }
            // InternalBeeLangTestLanguage.g:964:1: ( rulePrimaryExpression EOF )
            // InternalBeeLangTestLanguage.g:965:1: rulePrimaryExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimaryExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            rulePrimaryExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimaryExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 73, entryRulePrimaryExpression_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRulePrimaryExpression"


    // $ANTLR start "rulePrimaryExpression"
    // InternalBeeLangTestLanguage.g:972:1: rulePrimaryExpression : ( ( rule__PrimaryExpression__Alternatives ) ) ;
    public final void rulePrimaryExpression() throws RecognitionException {
        int rulePrimaryExpression_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 74) ) { return ; }
            // InternalBeeLangTestLanguage.g:976:2: ( ( ( rule__PrimaryExpression__Alternatives ) ) )
            // InternalBeeLangTestLanguage.g:977:2: ( ( rule__PrimaryExpression__Alternatives ) )
            {
            // InternalBeeLangTestLanguage.g:977:2: ( ( rule__PrimaryExpression__Alternatives ) )
            // InternalBeeLangTestLanguage.g:978:3: ( rule__PrimaryExpression__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimaryExpressionAccess().getAlternatives()); 
            }
            // InternalBeeLangTestLanguage.g:979:3: ( rule__PrimaryExpression__Alternatives )
            // InternalBeeLangTestLanguage.g:979:4: rule__PrimaryExpression__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__PrimaryExpression__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimaryExpressionAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 74, rulePrimaryExpression_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePrimaryExpression"


    // $ANTLR start "entryRuleWithExpression"
    // InternalBeeLangTestLanguage.g:988:1: entryRuleWithExpression : ruleWithExpression EOF ;
    public final void entryRuleWithExpression() throws RecognitionException {
        int entryRuleWithExpression_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 75) ) { return ; }
            // InternalBeeLangTestLanguage.g:989:1: ( ruleWithExpression EOF )
            // InternalBeeLangTestLanguage.g:990:1: ruleWithExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleWithExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 75, entryRuleWithExpression_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleWithExpression"


    // $ANTLR start "ruleWithExpression"
    // InternalBeeLangTestLanguage.g:997:1: ruleWithExpression : ( ( rule__WithExpression__Group__0 ) ) ;
    public final void ruleWithExpression() throws RecognitionException {
        int ruleWithExpression_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 76) ) { return ; }
            // InternalBeeLangTestLanguage.g:1001:2: ( ( ( rule__WithExpression__Group__0 ) ) )
            // InternalBeeLangTestLanguage.g:1002:2: ( ( rule__WithExpression__Group__0 ) )
            {
            // InternalBeeLangTestLanguage.g:1002:2: ( ( rule__WithExpression__Group__0 ) )
            // InternalBeeLangTestLanguage.g:1003:3: ( rule__WithExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithExpressionAccess().getGroup()); 
            }
            // InternalBeeLangTestLanguage.g:1004:3: ( rule__WithExpression__Group__0 )
            // InternalBeeLangTestLanguage.g:1004:4: rule__WithExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__WithExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 76, ruleWithExpression_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleWithExpression"


    // $ANTLR start "entryRuleWithContextExpression"
    // InternalBeeLangTestLanguage.g:1013:1: entryRuleWithContextExpression : ruleWithContextExpression EOF ;
    public final void entryRuleWithContextExpression() throws RecognitionException {
        int entryRuleWithContextExpression_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 77) ) { return ; }
            // InternalBeeLangTestLanguage.g:1014:1: ( ruleWithContextExpression EOF )
            // InternalBeeLangTestLanguage.g:1015:1: ruleWithContextExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithContextExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleWithContextExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithContextExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 77, entryRuleWithContextExpression_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleWithContextExpression"


    // $ANTLR start "ruleWithContextExpression"
    // InternalBeeLangTestLanguage.g:1022:1: ruleWithContextExpression : ( ( rule__WithContextExpression__Group__0 ) ) ;
    public final void ruleWithContextExpression() throws RecognitionException {
        int ruleWithContextExpression_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 78) ) { return ; }
            // InternalBeeLangTestLanguage.g:1026:2: ( ( ( rule__WithContextExpression__Group__0 ) ) )
            // InternalBeeLangTestLanguage.g:1027:2: ( ( rule__WithContextExpression__Group__0 ) )
            {
            // InternalBeeLangTestLanguage.g:1027:2: ( ( rule__WithContextExpression__Group__0 ) )
            // InternalBeeLangTestLanguage.g:1028:3: ( rule__WithContextExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithContextExpressionAccess().getGroup()); 
            }
            // InternalBeeLangTestLanguage.g:1029:3: ( rule__WithContextExpression__Group__0 )
            // InternalBeeLangTestLanguage.g:1029:4: rule__WithContextExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__WithContextExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithContextExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 78, ruleWithContextExpression_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleWithContextExpression"


    // $ANTLR start "entryRuleBlockExpression"
    // InternalBeeLangTestLanguage.g:1038:1: entryRuleBlockExpression : ruleBlockExpression EOF ;
    public final void entryRuleBlockExpression() throws RecognitionException {
        int entryRuleBlockExpression_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 79) ) { return ; }
            // InternalBeeLangTestLanguage.g:1039:1: ( ruleBlockExpression EOF )
            // InternalBeeLangTestLanguage.g:1040:1: ruleBlockExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBlockExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleBlockExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBlockExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 79, entryRuleBlockExpression_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleBlockExpression"


    // $ANTLR start "ruleBlockExpression"
    // InternalBeeLangTestLanguage.g:1047:1: ruleBlockExpression : ( ( rule__BlockExpression__Group__0 ) ) ;
    public final void ruleBlockExpression() throws RecognitionException {
        int ruleBlockExpression_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 80) ) { return ; }
            // InternalBeeLangTestLanguage.g:1051:2: ( ( ( rule__BlockExpression__Group__0 ) ) )
            // InternalBeeLangTestLanguage.g:1052:2: ( ( rule__BlockExpression__Group__0 ) )
            {
            // InternalBeeLangTestLanguage.g:1052:2: ( ( rule__BlockExpression__Group__0 ) )
            // InternalBeeLangTestLanguage.g:1053:3: ( rule__BlockExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBlockExpressionAccess().getGroup()); 
            }
            // InternalBeeLangTestLanguage.g:1054:3: ( rule__BlockExpression__Group__0 )
            // InternalBeeLangTestLanguage.g:1054:4: rule__BlockExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__BlockExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBlockExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 80, ruleBlockExpression_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleBlockExpression"


    // $ANTLR start "entryRuleValue"
    // InternalBeeLangTestLanguage.g:1063:1: entryRuleValue : ruleValue EOF ;
    public final void entryRuleValue() throws RecognitionException {
        int entryRuleValue_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 81) ) { return ; }
            // InternalBeeLangTestLanguage.g:1064:1: ( ruleValue EOF )
            // InternalBeeLangTestLanguage.g:1065:1: ruleValue EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValueRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getValueRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 81, entryRuleValue_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleValue"


    // $ANTLR start "ruleValue"
    // InternalBeeLangTestLanguage.g:1072:1: ruleValue : ( ( rule__Value__Group__0 ) ) ;
    public final void ruleValue() throws RecognitionException {
        int ruleValue_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 82) ) { return ; }
            // InternalBeeLangTestLanguage.g:1076:2: ( ( ( rule__Value__Group__0 ) ) )
            // InternalBeeLangTestLanguage.g:1077:2: ( ( rule__Value__Group__0 ) )
            {
            // InternalBeeLangTestLanguage.g:1077:2: ( ( rule__Value__Group__0 ) )
            // InternalBeeLangTestLanguage.g:1078:3: ( rule__Value__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValueAccess().getGroup()); 
            }
            // InternalBeeLangTestLanguage.g:1079:3: ( rule__Value__Group__0 )
            // InternalBeeLangTestLanguage.g:1079:4: rule__Value__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Value__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getValueAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 82, ruleValue_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleValue"


    // $ANTLR start "entryRuleKeywordVariables"
    // InternalBeeLangTestLanguage.g:1088:1: entryRuleKeywordVariables : ruleKeywordVariables EOF ;
    public final void entryRuleKeywordVariables() throws RecognitionException {
        int entryRuleKeywordVariables_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 83) ) { return ; }
            // InternalBeeLangTestLanguage.g:1089:1: ( ruleKeywordVariables EOF )
            // InternalBeeLangTestLanguage.g:1090:1: ruleKeywordVariables EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getKeywordVariablesRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleKeywordVariables();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getKeywordVariablesRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 83, entryRuleKeywordVariables_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleKeywordVariables"


    // $ANTLR start "ruleKeywordVariables"
    // InternalBeeLangTestLanguage.g:1097:1: ruleKeywordVariables : ( ( rule__KeywordVariables__Group__0 ) ) ;
    public final void ruleKeywordVariables() throws RecognitionException {
        int ruleKeywordVariables_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 84) ) { return ; }
            // InternalBeeLangTestLanguage.g:1101:2: ( ( ( rule__KeywordVariables__Group__0 ) ) )
            // InternalBeeLangTestLanguage.g:1102:2: ( ( rule__KeywordVariables__Group__0 ) )
            {
            // InternalBeeLangTestLanguage.g:1102:2: ( ( rule__KeywordVariables__Group__0 ) )
            // InternalBeeLangTestLanguage.g:1103:3: ( rule__KeywordVariables__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getKeywordVariablesAccess().getGroup()); 
            }
            // InternalBeeLangTestLanguage.g:1104:3: ( rule__KeywordVariables__Group__0 )
            // InternalBeeLangTestLanguage.g:1104:4: rule__KeywordVariables__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__KeywordVariables__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getKeywordVariablesAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 84, ruleKeywordVariables_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleKeywordVariables"


    // $ANTLR start "entryRuleFeatureCall"
    // InternalBeeLangTestLanguage.g:1113:1: entryRuleFeatureCall : ruleFeatureCall EOF ;
    public final void entryRuleFeatureCall() throws RecognitionException {
        int entryRuleFeatureCall_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 85) ) { return ; }
            // InternalBeeLangTestLanguage.g:1114:1: ( ruleFeatureCall EOF )
            // InternalBeeLangTestLanguage.g:1115:1: ruleFeatureCall EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFeatureCallRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleFeatureCall();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFeatureCallRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 85, entryRuleFeatureCall_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleFeatureCall"


    // $ANTLR start "ruleFeatureCall"
    // InternalBeeLangTestLanguage.g:1122:1: ruleFeatureCall : ( ruleOperationCall ) ;
    public final void ruleFeatureCall() throws RecognitionException {
        int ruleFeatureCall_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 86) ) { return ; }
            // InternalBeeLangTestLanguage.g:1126:2: ( ( ruleOperationCall ) )
            // InternalBeeLangTestLanguage.g:1127:2: ( ruleOperationCall )
            {
            // InternalBeeLangTestLanguage.g:1127:2: ( ruleOperationCall )
            // InternalBeeLangTestLanguage.g:1128:3: ruleOperationCall
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFeatureCallAccess().getOperationCallParserRuleCall()); 
            }
            pushFollow(FOLLOW_2);
            ruleOperationCall();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFeatureCallAccess().getOperationCallParserRuleCall()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 86, ruleFeatureCall_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFeatureCall"


    // $ANTLR start "entryRuleOperationCall"
    // InternalBeeLangTestLanguage.g:1138:1: entryRuleOperationCall : ruleOperationCall EOF ;
    public final void entryRuleOperationCall() throws RecognitionException {
        int entryRuleOperationCall_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 87) ) { return ; }
            // InternalBeeLangTestLanguage.g:1139:1: ( ruleOperationCall EOF )
            // InternalBeeLangTestLanguage.g:1140:1: ruleOperationCall EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperationCallRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleOperationCall();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperationCallRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 87, entryRuleOperationCall_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleOperationCall"


    // $ANTLR start "ruleOperationCall"
    // InternalBeeLangTestLanguage.g:1147:1: ruleOperationCall : ( ( rule__OperationCall__Group__0 ) ) ;
    public final void ruleOperationCall() throws RecognitionException {
        int ruleOperationCall_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 88) ) { return ; }
            // InternalBeeLangTestLanguage.g:1151:2: ( ( ( rule__OperationCall__Group__0 ) ) )
            // InternalBeeLangTestLanguage.g:1152:2: ( ( rule__OperationCall__Group__0 ) )
            {
            // InternalBeeLangTestLanguage.g:1152:2: ( ( rule__OperationCall__Group__0 ) )
            // InternalBeeLangTestLanguage.g:1153:3: ( rule__OperationCall__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperationCallAccess().getGroup()); 
            }
            // InternalBeeLangTestLanguage.g:1154:3: ( rule__OperationCall__Group__0 )
            // InternalBeeLangTestLanguage.g:1154:4: rule__OperationCall__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__OperationCall__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperationCallAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 88, ruleOperationCall_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOperationCall"


    // $ANTLR start "entryRuleConstructorCallExpression"
    // InternalBeeLangTestLanguage.g:1163:1: entryRuleConstructorCallExpression : ruleConstructorCallExpression EOF ;
    public final void entryRuleConstructorCallExpression() throws RecognitionException {
        int entryRuleConstructorCallExpression_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 89) ) { return ; }
            // InternalBeeLangTestLanguage.g:1164:1: ( ruleConstructorCallExpression EOF )
            // InternalBeeLangTestLanguage.g:1165:1: ruleConstructorCallExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConstructorCallExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleConstructorCallExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConstructorCallExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 89, entryRuleConstructorCallExpression_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleConstructorCallExpression"


    // $ANTLR start "ruleConstructorCallExpression"
    // InternalBeeLangTestLanguage.g:1172:1: ruleConstructorCallExpression : ( ( rule__ConstructorCallExpression__Group__0 ) ) ;
    public final void ruleConstructorCallExpression() throws RecognitionException {
        int ruleConstructorCallExpression_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 90) ) { return ; }
            // InternalBeeLangTestLanguage.g:1176:2: ( ( ( rule__ConstructorCallExpression__Group__0 ) ) )
            // InternalBeeLangTestLanguage.g:1177:2: ( ( rule__ConstructorCallExpression__Group__0 ) )
            {
            // InternalBeeLangTestLanguage.g:1177:2: ( ( rule__ConstructorCallExpression__Group__0 ) )
            // InternalBeeLangTestLanguage.g:1178:3: ( rule__ConstructorCallExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConstructorCallExpressionAccess().getGroup()); 
            }
            // InternalBeeLangTestLanguage.g:1179:3: ( rule__ConstructorCallExpression__Group__0 )
            // InternalBeeLangTestLanguage.g:1179:4: rule__ConstructorCallExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__ConstructorCallExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConstructorCallExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 90, ruleConstructorCallExpression_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleConstructorCallExpression"


    // $ANTLR start "entryRuleInitializationBlockExpression"
    // InternalBeeLangTestLanguage.g:1188:1: entryRuleInitializationBlockExpression : ruleInitializationBlockExpression EOF ;
    public final void entryRuleInitializationBlockExpression() throws RecognitionException {
        int entryRuleInitializationBlockExpression_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 91) ) { return ; }
            // InternalBeeLangTestLanguage.g:1189:1: ( ruleInitializationBlockExpression EOF )
            // InternalBeeLangTestLanguage.g:1190:1: ruleInitializationBlockExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInitializationBlockExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleInitializationBlockExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInitializationBlockExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 91, entryRuleInitializationBlockExpression_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleInitializationBlockExpression"


    // $ANTLR start "ruleInitializationBlockExpression"
    // InternalBeeLangTestLanguage.g:1197:1: ruleInitializationBlockExpression : ( ( rule__InitializationBlockExpression__Group__0 ) ) ;
    public final void ruleInitializationBlockExpression() throws RecognitionException {
        int ruleInitializationBlockExpression_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 92) ) { return ; }
            // InternalBeeLangTestLanguage.g:1201:2: ( ( ( rule__InitializationBlockExpression__Group__0 ) ) )
            // InternalBeeLangTestLanguage.g:1202:2: ( ( rule__InitializationBlockExpression__Group__0 ) )
            {
            // InternalBeeLangTestLanguage.g:1202:2: ( ( rule__InitializationBlockExpression__Group__0 ) )
            // InternalBeeLangTestLanguage.g:1203:3: ( rule__InitializationBlockExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInitializationBlockExpressionAccess().getGroup()); 
            }
            // InternalBeeLangTestLanguage.g:1204:3: ( rule__InitializationBlockExpression__Group__0 )
            // InternalBeeLangTestLanguage.g:1204:4: rule__InitializationBlockExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__InitializationBlockExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInitializationBlockExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 92, ruleInitializationBlockExpression_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleInitializationBlockExpression"


    // $ANTLR start "entryRuleInitializationExpression"
    // InternalBeeLangTestLanguage.g:1213:1: entryRuleInitializationExpression : ruleInitializationExpression EOF ;
    public final void entryRuleInitializationExpression() throws RecognitionException {
        int entryRuleInitializationExpression_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 93) ) { return ; }
            // InternalBeeLangTestLanguage.g:1214:1: ( ruleInitializationExpression EOF )
            // InternalBeeLangTestLanguage.g:1215:1: ruleInitializationExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInitializationExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleInitializationExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInitializationExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 93, entryRuleInitializationExpression_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleInitializationExpression"


    // $ANTLR start "ruleInitializationExpression"
    // InternalBeeLangTestLanguage.g:1222:1: ruleInitializationExpression : ( ( rule__InitializationExpression__Group__0 ) ) ;
    public final void ruleInitializationExpression() throws RecognitionException {
        int ruleInitializationExpression_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 94) ) { return ; }
            // InternalBeeLangTestLanguage.g:1226:2: ( ( ( rule__InitializationExpression__Group__0 ) ) )
            // InternalBeeLangTestLanguage.g:1227:2: ( ( rule__InitializationExpression__Group__0 ) )
            {
            // InternalBeeLangTestLanguage.g:1227:2: ( ( rule__InitializationExpression__Group__0 ) )
            // InternalBeeLangTestLanguage.g:1228:3: ( rule__InitializationExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInitializationExpressionAccess().getGroup()); 
            }
            // InternalBeeLangTestLanguage.g:1229:3: ( rule__InitializationExpression__Group__0 )
            // InternalBeeLangTestLanguage.g:1229:4: rule__InitializationExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__InitializationExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInitializationExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 94, ruleInitializationExpression_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleInitializationExpression"


    // $ANTLR start "entryRuleFeatureOfThis"
    // InternalBeeLangTestLanguage.g:1238:1: entryRuleFeatureOfThis : ruleFeatureOfThis EOF ;
    public final void entryRuleFeatureOfThis() throws RecognitionException {
        int entryRuleFeatureOfThis_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 95) ) { return ; }
            // InternalBeeLangTestLanguage.g:1239:1: ( ruleFeatureOfThis EOF )
            // InternalBeeLangTestLanguage.g:1240:1: ruleFeatureOfThis EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFeatureOfThisRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleFeatureOfThis();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFeatureOfThisRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 95, entryRuleFeatureOfThis_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleFeatureOfThis"


    // $ANTLR start "ruleFeatureOfThis"
    // InternalBeeLangTestLanguage.g:1247:1: ruleFeatureOfThis : ( ( rule__FeatureOfThis__Group__0 ) ) ;
    public final void ruleFeatureOfThis() throws RecognitionException {
        int ruleFeatureOfThis_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 96) ) { return ; }
            // InternalBeeLangTestLanguage.g:1251:2: ( ( ( rule__FeatureOfThis__Group__0 ) ) )
            // InternalBeeLangTestLanguage.g:1252:2: ( ( rule__FeatureOfThis__Group__0 ) )
            {
            // InternalBeeLangTestLanguage.g:1252:2: ( ( rule__FeatureOfThis__Group__0 ) )
            // InternalBeeLangTestLanguage.g:1253:3: ( rule__FeatureOfThis__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFeatureOfThisAccess().getGroup()); 
            }
            // InternalBeeLangTestLanguage.g:1254:3: ( rule__FeatureOfThis__Group__0 )
            // InternalBeeLangTestLanguage.g:1254:4: rule__FeatureOfThis__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__FeatureOfThis__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFeatureOfThisAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 96, ruleFeatureOfThis_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFeatureOfThis"


    // $ANTLR start "entryRuleLiteral"
    // InternalBeeLangTestLanguage.g:1263:1: entryRuleLiteral : ruleLiteral EOF ;
    public final void entryRuleLiteral() throws RecognitionException {
        int entryRuleLiteral_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 97) ) { return ; }
            // InternalBeeLangTestLanguage.g:1264:1: ( ruleLiteral EOF )
            // InternalBeeLangTestLanguage.g:1265:1: ruleLiteral EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleLiteral();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLiteralRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 97, entryRuleLiteral_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleLiteral"


    // $ANTLR start "ruleLiteral"
    // InternalBeeLangTestLanguage.g:1272:1: ruleLiteral : ( ( rule__Literal__Alternatives ) ) ;
    public final void ruleLiteral() throws RecognitionException {
        int ruleLiteral_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 98) ) { return ; }
            // InternalBeeLangTestLanguage.g:1276:2: ( ( ( rule__Literal__Alternatives ) ) )
            // InternalBeeLangTestLanguage.g:1277:2: ( ( rule__Literal__Alternatives ) )
            {
            // InternalBeeLangTestLanguage.g:1277:2: ( ( rule__Literal__Alternatives ) )
            // InternalBeeLangTestLanguage.g:1278:3: ( rule__Literal__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLiteralAccess().getAlternatives()); 
            }
            // InternalBeeLangTestLanguage.g:1279:3: ( rule__Literal__Alternatives )
            // InternalBeeLangTestLanguage.g:1279:4: rule__Literal__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__Literal__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLiteralAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 98, ruleLiteral_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleLiteral"


    // $ANTLR start "entryRuleLiteralFunction"
    // InternalBeeLangTestLanguage.g:1288:1: entryRuleLiteralFunction : ruleLiteralFunction EOF ;
    public final void entryRuleLiteralFunction() throws RecognitionException {
        int entryRuleLiteralFunction_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 99) ) { return ; }
            // InternalBeeLangTestLanguage.g:1289:1: ( ruleLiteralFunction EOF )
            // InternalBeeLangTestLanguage.g:1290:1: ruleLiteralFunction EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLiteralFunctionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleLiteralFunction();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLiteralFunctionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 99, entryRuleLiteralFunction_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleLiteralFunction"


    // $ANTLR start "ruleLiteralFunction"
    // InternalBeeLangTestLanguage.g:1297:1: ruleLiteralFunction : ( ( rule__LiteralFunction__Group__0 ) ) ;
    public final void ruleLiteralFunction() throws RecognitionException {
        int ruleLiteralFunction_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 100) ) { return ; }
            // InternalBeeLangTestLanguage.g:1301:2: ( ( ( rule__LiteralFunction__Group__0 ) ) )
            // InternalBeeLangTestLanguage.g:1302:2: ( ( rule__LiteralFunction__Group__0 ) )
            {
            // InternalBeeLangTestLanguage.g:1302:2: ( ( rule__LiteralFunction__Group__0 ) )
            // InternalBeeLangTestLanguage.g:1303:3: ( rule__LiteralFunction__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLiteralFunctionAccess().getGroup()); 
            }
            // InternalBeeLangTestLanguage.g:1304:3: ( rule__LiteralFunction__Group__0 )
            // InternalBeeLangTestLanguage.g:1304:4: rule__LiteralFunction__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__LiteralFunction__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLiteralFunctionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 100, ruleLiteralFunction_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleLiteralFunction"


    // $ANTLR start "entryRuleClosureExpression"
    // InternalBeeLangTestLanguage.g:1313:1: entryRuleClosureExpression : ruleClosureExpression EOF ;
    public final void entryRuleClosureExpression() throws RecognitionException {
        int entryRuleClosureExpression_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 101) ) { return ; }
            // InternalBeeLangTestLanguage.g:1314:1: ( ruleClosureExpression EOF )
            // InternalBeeLangTestLanguage.g:1315:1: ruleClosureExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleClosureExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 101, entryRuleClosureExpression_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleClosureExpression"


    // $ANTLR start "ruleClosureExpression"
    // InternalBeeLangTestLanguage.g:1322:1: ruleClosureExpression : ( ( rule__ClosureExpression__Group__0 ) ) ;
    public final void ruleClosureExpression() throws RecognitionException {
        int ruleClosureExpression_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 102) ) { return ; }
            // InternalBeeLangTestLanguage.g:1326:2: ( ( ( rule__ClosureExpression__Group__0 ) ) )
            // InternalBeeLangTestLanguage.g:1327:2: ( ( rule__ClosureExpression__Group__0 ) )
            {
            // InternalBeeLangTestLanguage.g:1327:2: ( ( rule__ClosureExpression__Group__0 ) )
            // InternalBeeLangTestLanguage.g:1328:3: ( rule__ClosureExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureExpressionAccess().getGroup()); 
            }
            // InternalBeeLangTestLanguage.g:1329:3: ( rule__ClosureExpression__Group__0 )
            // InternalBeeLangTestLanguage.g:1329:4: rule__ClosureExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__ClosureExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 102, ruleClosureExpression_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleClosureExpression"


    // $ANTLR start "entryRuleOneOrManyExpressions"
    // InternalBeeLangTestLanguage.g:1338:1: entryRuleOneOrManyExpressions : ruleOneOrManyExpressions EOF ;
    public final void entryRuleOneOrManyExpressions() throws RecognitionException {
        int entryRuleOneOrManyExpressions_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 103) ) { return ; }
            // InternalBeeLangTestLanguage.g:1339:1: ( ruleOneOrManyExpressions EOF )
            // InternalBeeLangTestLanguage.g:1340:1: ruleOneOrManyExpressions EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOneOrManyExpressionsRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleOneOrManyExpressions();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOneOrManyExpressionsRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 103, entryRuleOneOrManyExpressions_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleOneOrManyExpressions"


    // $ANTLR start "ruleOneOrManyExpressions"
    // InternalBeeLangTestLanguage.g:1347:1: ruleOneOrManyExpressions : ( ( rule__OneOrManyExpressions__Alternatives ) ) ;
    public final void ruleOneOrManyExpressions() throws RecognitionException {
        int ruleOneOrManyExpressions_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 104) ) { return ; }
            // InternalBeeLangTestLanguage.g:1351:2: ( ( ( rule__OneOrManyExpressions__Alternatives ) ) )
            // InternalBeeLangTestLanguage.g:1352:2: ( ( rule__OneOrManyExpressions__Alternatives ) )
            {
            // InternalBeeLangTestLanguage.g:1352:2: ( ( rule__OneOrManyExpressions__Alternatives ) )
            // InternalBeeLangTestLanguage.g:1353:3: ( rule__OneOrManyExpressions__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOneOrManyExpressionsAccess().getAlternatives()); 
            }
            // InternalBeeLangTestLanguage.g:1354:3: ( rule__OneOrManyExpressions__Alternatives )
            // InternalBeeLangTestLanguage.g:1354:4: rule__OneOrManyExpressions__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__OneOrManyExpressions__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOneOrManyExpressionsAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 104, ruleOneOrManyExpressions_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOneOrManyExpressions"


    // $ANTLR start "entryRuleBlockExpressionWithoutBrackets"
    // InternalBeeLangTestLanguage.g:1363:1: entryRuleBlockExpressionWithoutBrackets : ruleBlockExpressionWithoutBrackets EOF ;
    public final void entryRuleBlockExpressionWithoutBrackets() throws RecognitionException {
        int entryRuleBlockExpressionWithoutBrackets_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 105) ) { return ; }
            // InternalBeeLangTestLanguage.g:1364:1: ( ruleBlockExpressionWithoutBrackets EOF )
            // InternalBeeLangTestLanguage.g:1365:1: ruleBlockExpressionWithoutBrackets EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBlockExpressionWithoutBracketsRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleBlockExpressionWithoutBrackets();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBlockExpressionWithoutBracketsRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 105, entryRuleBlockExpressionWithoutBrackets_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleBlockExpressionWithoutBrackets"


    // $ANTLR start "ruleBlockExpressionWithoutBrackets"
    // InternalBeeLangTestLanguage.g:1372:1: ruleBlockExpressionWithoutBrackets : ( ( rule__BlockExpressionWithoutBrackets__Group__0 ) ) ;
    public final void ruleBlockExpressionWithoutBrackets() throws RecognitionException {
        int ruleBlockExpressionWithoutBrackets_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 106) ) { return ; }
            // InternalBeeLangTestLanguage.g:1376:2: ( ( ( rule__BlockExpressionWithoutBrackets__Group__0 ) ) )
            // InternalBeeLangTestLanguage.g:1377:2: ( ( rule__BlockExpressionWithoutBrackets__Group__0 ) )
            {
            // InternalBeeLangTestLanguage.g:1377:2: ( ( rule__BlockExpressionWithoutBrackets__Group__0 ) )
            // InternalBeeLangTestLanguage.g:1378:3: ( rule__BlockExpressionWithoutBrackets__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBlockExpressionWithoutBracketsAccess().getGroup()); 
            }
            // InternalBeeLangTestLanguage.g:1379:3: ( rule__BlockExpressionWithoutBrackets__Group__0 )
            // InternalBeeLangTestLanguage.g:1379:4: rule__BlockExpressionWithoutBrackets__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__BlockExpressionWithoutBrackets__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBlockExpressionWithoutBracketsAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 106, ruleBlockExpressionWithoutBrackets_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleBlockExpressionWithoutBrackets"


    // $ANTLR start "entryRuleValueLiteral"
    // InternalBeeLangTestLanguage.g:1388:1: entryRuleValueLiteral : ruleValueLiteral EOF ;
    public final void entryRuleValueLiteral() throws RecognitionException {
        int entryRuleValueLiteral_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 107) ) { return ; }
            // InternalBeeLangTestLanguage.g:1389:1: ( ruleValueLiteral EOF )
            // InternalBeeLangTestLanguage.g:1390:1: ruleValueLiteral EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValueLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleValueLiteral();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getValueLiteralRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 107, entryRuleValueLiteral_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleValueLiteral"


    // $ANTLR start "ruleValueLiteral"
    // InternalBeeLangTestLanguage.g:1397:1: ruleValueLiteral : ( ( rule__ValueLiteral__ValueAssignment ) ) ;
    public final void ruleValueLiteral() throws RecognitionException {
        int ruleValueLiteral_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 108) ) { return ; }
            // InternalBeeLangTestLanguage.g:1401:2: ( ( ( rule__ValueLiteral__ValueAssignment ) ) )
            // InternalBeeLangTestLanguage.g:1402:2: ( ( rule__ValueLiteral__ValueAssignment ) )
            {
            // InternalBeeLangTestLanguage.g:1402:2: ( ( rule__ValueLiteral__ValueAssignment ) )
            // InternalBeeLangTestLanguage.g:1403:3: ( rule__ValueLiteral__ValueAssignment )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValueLiteralAccess().getValueAssignment()); 
            }
            // InternalBeeLangTestLanguage.g:1404:3: ( rule__ValueLiteral__ValueAssignment )
            // InternalBeeLangTestLanguage.g:1404:4: rule__ValueLiteral__ValueAssignment
            {
            pushFollow(FOLLOW_2);
            rule__ValueLiteral__ValueAssignment();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getValueLiteralAccess().getValueAssignment()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 108, ruleValueLiteral_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleValueLiteral"


    // $ANTLR start "entryRuleParanthesizedExpression"
    // InternalBeeLangTestLanguage.g:1413:1: entryRuleParanthesizedExpression : ruleParanthesizedExpression EOF ;
    public final void entryRuleParanthesizedExpression() throws RecognitionException {
        int entryRuleParanthesizedExpression_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 109) ) { return ; }
            // InternalBeeLangTestLanguage.g:1414:1: ( ruleParanthesizedExpression EOF )
            // InternalBeeLangTestLanguage.g:1415:1: ruleParanthesizedExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParanthesizedExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleParanthesizedExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParanthesizedExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 109, entryRuleParanthesizedExpression_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleParanthesizedExpression"


    // $ANTLR start "ruleParanthesizedExpression"
    // InternalBeeLangTestLanguage.g:1422:1: ruleParanthesizedExpression : ( ( rule__ParanthesizedExpression__Group__0 ) ) ;
    public final void ruleParanthesizedExpression() throws RecognitionException {
        int ruleParanthesizedExpression_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 110) ) { return ; }
            // InternalBeeLangTestLanguage.g:1426:2: ( ( ( rule__ParanthesizedExpression__Group__0 ) ) )
            // InternalBeeLangTestLanguage.g:1427:2: ( ( rule__ParanthesizedExpression__Group__0 ) )
            {
            // InternalBeeLangTestLanguage.g:1427:2: ( ( rule__ParanthesizedExpression__Group__0 ) )
            // InternalBeeLangTestLanguage.g:1428:3: ( rule__ParanthesizedExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParanthesizedExpressionAccess().getGroup()); 
            }
            // InternalBeeLangTestLanguage.g:1429:3: ( rule__ParanthesizedExpression__Group__0 )
            // InternalBeeLangTestLanguage.g:1429:4: rule__ParanthesizedExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__ParanthesizedExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParanthesizedExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 110, ruleParanthesizedExpression_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleParanthesizedExpression"


    // $ANTLR start "entryRuleQID"
    // InternalBeeLangTestLanguage.g:1438:1: entryRuleQID : ruleQID EOF ;
    public final void entryRuleQID() throws RecognitionException {
        int entryRuleQID_StartIndex = input.index();
         
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 111) ) { return ; }
            // InternalBeeLangTestLanguage.g:1442:1: ( ruleQID EOF )
            // InternalBeeLangTestLanguage.g:1443:1: ruleQID EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQIDRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleQID();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getQIDRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 111, entryRuleQID_StartIndex); }

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleQID"


    // $ANTLR start "ruleQID"
    // InternalBeeLangTestLanguage.g:1453:1: ruleQID : ( ( rule__QID__Group__0 ) ) ;
    public final void ruleQID() throws RecognitionException {
        int ruleQID_StartIndex = input.index();

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 112) ) { return ; }
            // InternalBeeLangTestLanguage.g:1458:2: ( ( ( rule__QID__Group__0 ) ) )
            // InternalBeeLangTestLanguage.g:1459:2: ( ( rule__QID__Group__0 ) )
            {
            // InternalBeeLangTestLanguage.g:1459:2: ( ( rule__QID__Group__0 ) )
            // InternalBeeLangTestLanguage.g:1460:3: ( rule__QID__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQIDAccess().getGroup()); 
            }
            // InternalBeeLangTestLanguage.g:1461:3: ( rule__QID__Group__0 )
            // InternalBeeLangTestLanguage.g:1461:4: rule__QID__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__QID__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getQIDAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 112, ruleQID_StartIndex); }

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleQID"


    // $ANTLR start "rule__Model__Alternatives"
    // InternalBeeLangTestLanguage.g:1470:1: rule__Model__Alternatives : ( ( ( rule__Model__UnitsAssignment_0 )* ) | ( ( rule__Model__FunctionsAssignment_1 )* ) );
    public final void rule__Model__Alternatives() throws RecognitionException {
        int rule__Model__Alternatives_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 113) ) { return ; }
            // InternalBeeLangTestLanguage.g:1474:1: ( ( ( rule__Model__UnitsAssignment_0 )* ) | ( ( rule__Model__FunctionsAssignment_1 )* ) )
            int alt3=2;
            switch ( input.LA(1) ) {
            case RULE_DOCUMENTATION:
                {
                int LA3_1 = input.LA(2);

                if ( (LA3_1==RULE_ID||LA3_1==59||LA3_1==74) ) {
                    alt3=2;
                }
                else if ( (LA3_1==13) ) {
                    alt3=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 3, 1, input);

                    throw nvae;
                }
                }
                break;
            case 13:
                {
                alt3=1;
                }
                break;
            case EOF:
                {
                int LA3_3 = input.LA(2);

                if ( (synpred2_InternalBeeLangTestLanguage()) ) {
                    alt3=1;
                }
                else if ( (true) ) {
                    alt3=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 3, 3, input);

                    throw nvae;
                }
                }
                break;
            case RULE_ID:
            case 59:
            case 74:
                {
                alt3=2;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 3, 0, input);

                throw nvae;
            }

            switch (alt3) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:1475:2: ( ( rule__Model__UnitsAssignment_0 )* )
                    {
                    // InternalBeeLangTestLanguage.g:1475:2: ( ( rule__Model__UnitsAssignment_0 )* )
                    // InternalBeeLangTestLanguage.g:1476:3: ( rule__Model__UnitsAssignment_0 )*
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getModelAccess().getUnitsAssignment_0()); 
                    }
                    // InternalBeeLangTestLanguage.g:1477:3: ( rule__Model__UnitsAssignment_0 )*
                    loop1:
                    do {
                        int alt1=2;
                        int LA1_0 = input.LA(1);

                        if ( (LA1_0==RULE_DOCUMENTATION||LA1_0==13) ) {
                            alt1=1;
                        }


                        switch (alt1) {
                    	case 1 :
                    	    // InternalBeeLangTestLanguage.g:1477:4: rule__Model__UnitsAssignment_0
                    	    {
                    	    pushFollow(FOLLOW_3);
                    	    rule__Model__UnitsAssignment_0();

                    	    state._fsp--;
                    	    if (state.failed) return ;

                    	    }
                    	    break;

                    	default :
                    	    break loop1;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getModelAccess().getUnitsAssignment_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalBeeLangTestLanguage.g:1481:2: ( ( rule__Model__FunctionsAssignment_1 )* )
                    {
                    // InternalBeeLangTestLanguage.g:1481:2: ( ( rule__Model__FunctionsAssignment_1 )* )
                    // InternalBeeLangTestLanguage.g:1482:3: ( rule__Model__FunctionsAssignment_1 )*
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getModelAccess().getFunctionsAssignment_1()); 
                    }
                    // InternalBeeLangTestLanguage.g:1483:3: ( rule__Model__FunctionsAssignment_1 )*
                    loop2:
                    do {
                        int alt2=2;
                        int LA2_0 = input.LA(1);

                        if ( ((LA2_0>=RULE_ID && LA2_0<=RULE_DOCUMENTATION)||LA2_0==59||LA2_0==74) ) {
                            alt2=1;
                        }


                        switch (alt2) {
                    	case 1 :
                    	    // InternalBeeLangTestLanguage.g:1483:4: rule__Model__FunctionsAssignment_1
                    	    {
                    	    pushFollow(FOLLOW_4);
                    	    rule__Model__FunctionsAssignment_1();

                    	    state._fsp--;
                    	    if (state.failed) return ;

                    	    }
                    	    break;

                    	default :
                    	    break loop2;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getModelAccess().getFunctionsAssignment_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 113, rule__Model__Alternatives_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Model__Alternatives"


    // $ANTLR start "rule__ProvidedCapability__Alternatives_1"
    // InternalBeeLangTestLanguage.g:1491:1: rule__ProvidedCapability__Alternatives_1 : ( ( ( rule__ProvidedCapability__NameSpaceAssignment_1_0 ) ) | ( 'unit' ) );
    public final void rule__ProvidedCapability__Alternatives_1() throws RecognitionException {
        int rule__ProvidedCapability__Alternatives_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 114) ) { return ; }
            // InternalBeeLangTestLanguage.g:1495:1: ( ( ( rule__ProvidedCapability__NameSpaceAssignment_1_0 ) ) | ( 'unit' ) )
            int alt4=2;
            int LA4_0 = input.LA(1);

            if ( (LA4_0==RULE_ID) ) {
                alt4=1;
            }
            else if ( (LA4_0==13) ) {
                alt4=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 4, 0, input);

                throw nvae;
            }
            switch (alt4) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:1496:2: ( ( rule__ProvidedCapability__NameSpaceAssignment_1_0 ) )
                    {
                    // InternalBeeLangTestLanguage.g:1496:2: ( ( rule__ProvidedCapability__NameSpaceAssignment_1_0 ) )
                    // InternalBeeLangTestLanguage.g:1497:3: ( rule__ProvidedCapability__NameSpaceAssignment_1_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getProvidedCapabilityAccess().getNameSpaceAssignment_1_0()); 
                    }
                    // InternalBeeLangTestLanguage.g:1498:3: ( rule__ProvidedCapability__NameSpaceAssignment_1_0 )
                    // InternalBeeLangTestLanguage.g:1498:4: rule__ProvidedCapability__NameSpaceAssignment_1_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ProvidedCapability__NameSpaceAssignment_1_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getProvidedCapabilityAccess().getNameSpaceAssignment_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalBeeLangTestLanguage.g:1502:2: ( 'unit' )
                    {
                    // InternalBeeLangTestLanguage.g:1502:2: ( 'unit' )
                    // InternalBeeLangTestLanguage.g:1503:3: 'unit'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getProvidedCapabilityAccess().getUnitKeyword_1_1()); 
                    }
                    match(input,13,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getProvidedCapabilityAccess().getUnitKeyword_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 114, rule__ProvidedCapability__Alternatives_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__Alternatives_1"


    // $ANTLR start "rule__AliasedRequiredCapability__Alternatives_0"
    // InternalBeeLangTestLanguage.g:1512:1: rule__AliasedRequiredCapability__Alternatives_0 : ( ( ( rule__AliasedRequiredCapability__NameSpaceAssignment_0_0 ) ) | ( 'unit' ) );
    public final void rule__AliasedRequiredCapability__Alternatives_0() throws RecognitionException {
        int rule__AliasedRequiredCapability__Alternatives_0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 115) ) { return ; }
            // InternalBeeLangTestLanguage.g:1516:1: ( ( ( rule__AliasedRequiredCapability__NameSpaceAssignment_0_0 ) ) | ( 'unit' ) )
            int alt5=2;
            int LA5_0 = input.LA(1);

            if ( (LA5_0==RULE_ID) ) {
                alt5=1;
            }
            else if ( (LA5_0==13) ) {
                alt5=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 5, 0, input);

                throw nvae;
            }
            switch (alt5) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:1517:2: ( ( rule__AliasedRequiredCapability__NameSpaceAssignment_0_0 ) )
                    {
                    // InternalBeeLangTestLanguage.g:1517:2: ( ( rule__AliasedRequiredCapability__NameSpaceAssignment_0_0 ) )
                    // InternalBeeLangTestLanguage.g:1518:3: ( rule__AliasedRequiredCapability__NameSpaceAssignment_0_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAliasedRequiredCapabilityAccess().getNameSpaceAssignment_0_0()); 
                    }
                    // InternalBeeLangTestLanguage.g:1519:3: ( rule__AliasedRequiredCapability__NameSpaceAssignment_0_0 )
                    // InternalBeeLangTestLanguage.g:1519:4: rule__AliasedRequiredCapability__NameSpaceAssignment_0_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__AliasedRequiredCapability__NameSpaceAssignment_0_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAliasedRequiredCapabilityAccess().getNameSpaceAssignment_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalBeeLangTestLanguage.g:1523:2: ( 'unit' )
                    {
                    // InternalBeeLangTestLanguage.g:1523:2: ( 'unit' )
                    // InternalBeeLangTestLanguage.g:1524:3: 'unit'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAliasedRequiredCapabilityAccess().getUnitKeyword_0_1()); 
                    }
                    match(input,13,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAliasedRequiredCapabilityAccess().getUnitKeyword_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 115, rule__AliasedRequiredCapability__Alternatives_0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Alternatives_0"


    // $ANTLR start "rule__RequiredCapability__Alternatives_1"
    // InternalBeeLangTestLanguage.g:1533:1: rule__RequiredCapability__Alternatives_1 : ( ( ( rule__RequiredCapability__NameSpaceAssignment_1_0 ) ) | ( 'unit' ) );
    public final void rule__RequiredCapability__Alternatives_1() throws RecognitionException {
        int rule__RequiredCapability__Alternatives_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 116) ) { return ; }
            // InternalBeeLangTestLanguage.g:1537:1: ( ( ( rule__RequiredCapability__NameSpaceAssignment_1_0 ) ) | ( 'unit' ) )
            int alt6=2;
            int LA6_0 = input.LA(1);

            if ( (LA6_0==RULE_ID) ) {
                alt6=1;
            }
            else if ( (LA6_0==13) ) {
                alt6=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 6, 0, input);

                throw nvae;
            }
            switch (alt6) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:1538:2: ( ( rule__RequiredCapability__NameSpaceAssignment_1_0 ) )
                    {
                    // InternalBeeLangTestLanguage.g:1538:2: ( ( rule__RequiredCapability__NameSpaceAssignment_1_0 ) )
                    // InternalBeeLangTestLanguage.g:1539:3: ( rule__RequiredCapability__NameSpaceAssignment_1_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getRequiredCapabilityAccess().getNameSpaceAssignment_1_0()); 
                    }
                    // InternalBeeLangTestLanguage.g:1540:3: ( rule__RequiredCapability__NameSpaceAssignment_1_0 )
                    // InternalBeeLangTestLanguage.g:1540:4: rule__RequiredCapability__NameSpaceAssignment_1_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__RequiredCapability__NameSpaceAssignment_1_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getRequiredCapabilityAccess().getNameSpaceAssignment_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalBeeLangTestLanguage.g:1544:2: ( 'unit' )
                    {
                    // InternalBeeLangTestLanguage.g:1544:2: ( 'unit' )
                    // InternalBeeLangTestLanguage.g:1545:3: 'unit'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getRequiredCapabilityAccess().getUnitKeyword_1_1()); 
                    }
                    match(input,13,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getRequiredCapabilityAccess().getUnitKeyword_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 116, rule__RequiredCapability__Alternatives_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Alternatives_1"


    // $ANTLR start "rule__Path__Alternatives"
    // InternalBeeLangTestLanguage.g:1554:1: rule__Path__Alternatives : ( ( RULE_STRING ) | ( ( rule__Path__Group_1__0 ) ) );
    public final void rule__Path__Alternatives() throws RecognitionException {
        int rule__Path__Alternatives_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 117) ) { return ; }
            // InternalBeeLangTestLanguage.g:1558:1: ( ( RULE_STRING ) | ( ( rule__Path__Group_1__0 ) ) )
            int alt7=2;
            int LA7_0 = input.LA(1);

            if ( (LA7_0==RULE_STRING) ) {
                alt7=1;
            }
            else if ( (LA7_0==RULE_ID||LA7_0==33) ) {
                alt7=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 7, 0, input);

                throw nvae;
            }
            switch (alt7) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:1559:2: ( RULE_STRING )
                    {
                    // InternalBeeLangTestLanguage.g:1559:2: ( RULE_STRING )
                    // InternalBeeLangTestLanguage.g:1560:3: RULE_STRING
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPathAccess().getSTRINGTerminalRuleCall_0()); 
                    }
                    match(input,RULE_STRING,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPathAccess().getSTRINGTerminalRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalBeeLangTestLanguage.g:1565:2: ( ( rule__Path__Group_1__0 ) )
                    {
                    // InternalBeeLangTestLanguage.g:1565:2: ( ( rule__Path__Group_1__0 ) )
                    // InternalBeeLangTestLanguage.g:1566:3: ( rule__Path__Group_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPathAccess().getGroup_1()); 
                    }
                    // InternalBeeLangTestLanguage.g:1567:3: ( rule__Path__Group_1__0 )
                    // InternalBeeLangTestLanguage.g:1567:4: rule__Path__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Path__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPathAccess().getGroup_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 117, rule__Path__Alternatives_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Path__Alternatives"


    // $ANTLR start "rule__FirstParameter__Alternatives"
    // InternalBeeLangTestLanguage.g:1575:1: rule__FirstParameter__Alternatives : ( ( ruleClosureParameter ) | ( ruleParameter ) );
    public final void rule__FirstParameter__Alternatives() throws RecognitionException {
        int rule__FirstParameter__Alternatives_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 118) ) { return ; }
            // InternalBeeLangTestLanguage.g:1579:1: ( ( ruleClosureParameter ) | ( ruleParameter ) )
            int alt8=2;
            alt8 = dfa8.predict(input);
            switch (alt8) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:1580:2: ( ruleClosureParameter )
                    {
                    // InternalBeeLangTestLanguage.g:1580:2: ( ruleClosureParameter )
                    // InternalBeeLangTestLanguage.g:1581:3: ruleClosureParameter
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getFirstParameterAccess().getClosureParameterParserRuleCall_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleClosureParameter();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getFirstParameterAccess().getClosureParameterParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalBeeLangTestLanguage.g:1586:2: ( ruleParameter )
                    {
                    // InternalBeeLangTestLanguage.g:1586:2: ( ruleParameter )
                    // InternalBeeLangTestLanguage.g:1587:3: ruleParameter
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getFirstParameterAccess().getParameterParserRuleCall_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleParameter();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getFirstParameterAccess().getParameterParserRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 118, rule__FirstParameter__Alternatives_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FirstParameter__Alternatives"


    // $ANTLR start "rule__Function__Alternatives_6_1"
    // InternalBeeLangTestLanguage.g:1596:1: rule__Function__Alternatives_6_1 : ( ( ( rule__Function__Group_6_1_0__0 ) ) | ( ( rule__Function__Group_6_1_1__0 ) ) );
    public final void rule__Function__Alternatives_6_1() throws RecognitionException {
        int rule__Function__Alternatives_6_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 119) ) { return ; }
            // InternalBeeLangTestLanguage.g:1600:1: ( ( ( rule__Function__Group_6_1_0__0 ) ) | ( ( rule__Function__Group_6_1_1__0 ) ) )
            int alt9=2;
            int LA9_0 = input.LA(1);

            if ( (LA9_0==RULE_ID||LA9_0==60) ) {
                alt9=1;
            }
            else if ( (LA9_0==75) ) {
                alt9=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 9, 0, input);

                throw nvae;
            }
            switch (alt9) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:1601:2: ( ( rule__Function__Group_6_1_0__0 ) )
                    {
                    // InternalBeeLangTestLanguage.g:1601:2: ( ( rule__Function__Group_6_1_0__0 ) )
                    // InternalBeeLangTestLanguage.g:1602:3: ( rule__Function__Group_6_1_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getFunctionAccess().getGroup_6_1_0()); 
                    }
                    // InternalBeeLangTestLanguage.g:1603:3: ( rule__Function__Group_6_1_0__0 )
                    // InternalBeeLangTestLanguage.g:1603:4: rule__Function__Group_6_1_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Function__Group_6_1_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getFunctionAccess().getGroup_6_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalBeeLangTestLanguage.g:1607:2: ( ( rule__Function__Group_6_1_1__0 ) )
                    {
                    // InternalBeeLangTestLanguage.g:1607:2: ( ( rule__Function__Group_6_1_1__0 ) )
                    // InternalBeeLangTestLanguage.g:1608:3: ( rule__Function__Group_6_1_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getFunctionAccess().getGroup_6_1_1()); 
                    }
                    // InternalBeeLangTestLanguage.g:1609:3: ( rule__Function__Group_6_1_1__0 )
                    // InternalBeeLangTestLanguage.g:1609:4: rule__Function__Group_6_1_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Function__Group_6_1_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getFunctionAccess().getGroup_6_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 119, rule__Function__Alternatives_6_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Alternatives_6_1"


    // $ANTLR start "rule__Function__Alternatives_8"
    // InternalBeeLangTestLanguage.g:1617:1: rule__Function__Alternatives_8 : ( ( ( rule__Function__Group_8_0__0 ) ) | ( ( rule__Function__FuncExprAssignment_8_1 ) ) );
    public final void rule__Function__Alternatives_8() throws RecognitionException {
        int rule__Function__Alternatives_8_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 120) ) { return ; }
            // InternalBeeLangTestLanguage.g:1621:1: ( ( ( rule__Function__Group_8_0__0 ) ) | ( ( rule__Function__FuncExprAssignment_8_1 ) ) )
            int alt10=2;
            int LA10_0 = input.LA(1);

            if ( (LA10_0==49) ) {
                alt10=1;
            }
            else if ( (LA10_0==44) ) {
                alt10=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 10, 0, input);

                throw nvae;
            }
            switch (alt10) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:1622:2: ( ( rule__Function__Group_8_0__0 ) )
                    {
                    // InternalBeeLangTestLanguage.g:1622:2: ( ( rule__Function__Group_8_0__0 ) )
                    // InternalBeeLangTestLanguage.g:1623:3: ( rule__Function__Group_8_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getFunctionAccess().getGroup_8_0()); 
                    }
                    // InternalBeeLangTestLanguage.g:1624:3: ( rule__Function__Group_8_0__0 )
                    // InternalBeeLangTestLanguage.g:1624:4: rule__Function__Group_8_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Function__Group_8_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getFunctionAccess().getGroup_8_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalBeeLangTestLanguage.g:1628:2: ( ( rule__Function__FuncExprAssignment_8_1 ) )
                    {
                    // InternalBeeLangTestLanguage.g:1628:2: ( ( rule__Function__FuncExprAssignment_8_1 ) )
                    // InternalBeeLangTestLanguage.g:1629:3: ( rule__Function__FuncExprAssignment_8_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getFunctionAccess().getFuncExprAssignment_8_1()); 
                    }
                    // InternalBeeLangTestLanguage.g:1630:3: ( rule__Function__FuncExprAssignment_8_1 )
                    // InternalBeeLangTestLanguage.g:1630:4: rule__Function__FuncExprAssignment_8_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__Function__FuncExprAssignment_8_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getFunctionAccess().getFuncExprAssignment_8_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 120, rule__Function__Alternatives_8_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Alternatives_8"


    // $ANTLR start "rule__GuardExpression__Alternatives"
    // InternalBeeLangTestLanguage.g:1638:1: rule__GuardExpression__Alternatives : ( ( ( rule__GuardExpression__Group_0__0 ) ) | ( ( rule__GuardExpression__GuardExprAssignment_1 ) ) );
    public final void rule__GuardExpression__Alternatives() throws RecognitionException {
        int rule__GuardExpression__Alternatives_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 121) ) { return ; }
            // InternalBeeLangTestLanguage.g:1642:1: ( ( ( rule__GuardExpression__Group_0__0 ) ) | ( ( rule__GuardExpression__GuardExprAssignment_1 ) ) )
            int alt11=2;
            int LA11_0 = input.LA(1);

            if ( (LA11_0==49) ) {
                alt11=1;
            }
            else if ( (LA11_0==44) ) {
                alt11=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 11, 0, input);

                throw nvae;
            }
            switch (alt11) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:1643:2: ( ( rule__GuardExpression__Group_0__0 ) )
                    {
                    // InternalBeeLangTestLanguage.g:1643:2: ( ( rule__GuardExpression__Group_0__0 ) )
                    // InternalBeeLangTestLanguage.g:1644:3: ( rule__GuardExpression__Group_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getGuardExpressionAccess().getGroup_0()); 
                    }
                    // InternalBeeLangTestLanguage.g:1645:3: ( rule__GuardExpression__Group_0__0 )
                    // InternalBeeLangTestLanguage.g:1645:4: rule__GuardExpression__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__GuardExpression__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getGuardExpressionAccess().getGroup_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalBeeLangTestLanguage.g:1649:2: ( ( rule__GuardExpression__GuardExprAssignment_1 ) )
                    {
                    // InternalBeeLangTestLanguage.g:1649:2: ( ( rule__GuardExpression__GuardExprAssignment_1 ) )
                    // InternalBeeLangTestLanguage.g:1650:3: ( rule__GuardExpression__GuardExprAssignment_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getGuardExpressionAccess().getGuardExprAssignment_1()); 
                    }
                    // InternalBeeLangTestLanguage.g:1651:3: ( rule__GuardExpression__GuardExprAssignment_1 )
                    // InternalBeeLangTestLanguage.g:1651:4: rule__GuardExpression__GuardExprAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__GuardExpression__GuardExprAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getGuardExpressionAccess().getGuardExprAssignment_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 121, rule__GuardExpression__Alternatives_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GuardExpression__Alternatives"


    // $ANTLR start "rule__AssignmentOperator__Alternatives"
    // InternalBeeLangTestLanguage.g:1659:1: rule__AssignmentOperator__Alternatives : ( ( '=' ) | ( '+=' ) | ( '-=' ) | ( '*=' ) | ( '/=' ) | ( '%=' ) );
    public final void rule__AssignmentOperator__Alternatives() throws RecognitionException {
        int rule__AssignmentOperator__Alternatives_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 122) ) { return ; }
            // InternalBeeLangTestLanguage.g:1663:1: ( ( '=' ) | ( '+=' ) | ( '-=' ) | ( '*=' ) | ( '/=' ) | ( '%=' ) )
            int alt12=6;
            switch ( input.LA(1) ) {
            case 14:
                {
                alt12=1;
                }
                break;
            case 15:
                {
                alt12=2;
                }
                break;
            case 16:
                {
                alt12=3;
                }
                break;
            case 17:
                {
                alt12=4;
                }
                break;
            case 18:
                {
                alt12=5;
                }
                break;
            case 19:
                {
                alt12=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 12, 0, input);

                throw nvae;
            }

            switch (alt12) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:1664:2: ( '=' )
                    {
                    // InternalBeeLangTestLanguage.g:1664:2: ( '=' )
                    // InternalBeeLangTestLanguage.g:1665:3: '='
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAssignmentOperatorAccess().getEqualsSignKeyword_0()); 
                    }
                    match(input,14,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAssignmentOperatorAccess().getEqualsSignKeyword_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalBeeLangTestLanguage.g:1670:2: ( '+=' )
                    {
                    // InternalBeeLangTestLanguage.g:1670:2: ( '+=' )
                    // InternalBeeLangTestLanguage.g:1671:3: '+='
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAssignmentOperatorAccess().getPlusSignEqualsSignKeyword_1()); 
                    }
                    match(input,15,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAssignmentOperatorAccess().getPlusSignEqualsSignKeyword_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalBeeLangTestLanguage.g:1676:2: ( '-=' )
                    {
                    // InternalBeeLangTestLanguage.g:1676:2: ( '-=' )
                    // InternalBeeLangTestLanguage.g:1677:3: '-='
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAssignmentOperatorAccess().getHyphenMinusEqualsSignKeyword_2()); 
                    }
                    match(input,16,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAssignmentOperatorAccess().getHyphenMinusEqualsSignKeyword_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalBeeLangTestLanguage.g:1682:2: ( '*=' )
                    {
                    // InternalBeeLangTestLanguage.g:1682:2: ( '*=' )
                    // InternalBeeLangTestLanguage.g:1683:3: '*='
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAssignmentOperatorAccess().getAsteriskEqualsSignKeyword_3()); 
                    }
                    match(input,17,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAssignmentOperatorAccess().getAsteriskEqualsSignKeyword_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalBeeLangTestLanguage.g:1688:2: ( '/=' )
                    {
                    // InternalBeeLangTestLanguage.g:1688:2: ( '/=' )
                    // InternalBeeLangTestLanguage.g:1689:3: '/='
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAssignmentOperatorAccess().getSolidusEqualsSignKeyword_4()); 
                    }
                    match(input,18,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAssignmentOperatorAccess().getSolidusEqualsSignKeyword_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalBeeLangTestLanguage.g:1694:2: ( '%=' )
                    {
                    // InternalBeeLangTestLanguage.g:1694:2: ( '%=' )
                    // InternalBeeLangTestLanguage.g:1695:3: '%='
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAssignmentOperatorAccess().getPercentSignEqualsSignKeyword_5()); 
                    }
                    match(input,19,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAssignmentOperatorAccess().getPercentSignEqualsSignKeyword_5()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 122, rule__AssignmentOperator__Alternatives_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AssignmentOperator__Alternatives"


    // $ANTLR start "rule__RelationalOperator__Alternatives"
    // InternalBeeLangTestLanguage.g:1704:1: rule__RelationalOperator__Alternatives : ( ( '~=' ) | ( '==' ) | ( '===' ) | ( '!=' ) | ( '!==' ) | ( '>=' ) | ( '<=' ) | ( '>' ) | ( '<' ) );
    public final void rule__RelationalOperator__Alternatives() throws RecognitionException {
        int rule__RelationalOperator__Alternatives_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 123) ) { return ; }
            // InternalBeeLangTestLanguage.g:1708:1: ( ( '~=' ) | ( '==' ) | ( '===' ) | ( '!=' ) | ( '!==' ) | ( '>=' ) | ( '<=' ) | ( '>' ) | ( '<' ) )
            int alt13=9;
            switch ( input.LA(1) ) {
            case 20:
                {
                alt13=1;
                }
                break;
            case 21:
                {
                alt13=2;
                }
                break;
            case 22:
                {
                alt13=3;
                }
                break;
            case 23:
                {
                alt13=4;
                }
                break;
            case 24:
                {
                alt13=5;
                }
                break;
            case 25:
                {
                alt13=6;
                }
                break;
            case 26:
                {
                alt13=7;
                }
                break;
            case 27:
                {
                alt13=8;
                }
                break;
            case 28:
                {
                alt13=9;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 13, 0, input);

                throw nvae;
            }

            switch (alt13) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:1709:2: ( '~=' )
                    {
                    // InternalBeeLangTestLanguage.g:1709:2: ( '~=' )
                    // InternalBeeLangTestLanguage.g:1710:3: '~='
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getRelationalOperatorAccess().getTildeEqualsSignKeyword_0()); 
                    }
                    match(input,20,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getRelationalOperatorAccess().getTildeEqualsSignKeyword_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalBeeLangTestLanguage.g:1715:2: ( '==' )
                    {
                    // InternalBeeLangTestLanguage.g:1715:2: ( '==' )
                    // InternalBeeLangTestLanguage.g:1716:3: '=='
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getRelationalOperatorAccess().getEqualsSignEqualsSignKeyword_1()); 
                    }
                    match(input,21,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getRelationalOperatorAccess().getEqualsSignEqualsSignKeyword_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalBeeLangTestLanguage.g:1721:2: ( '===' )
                    {
                    // InternalBeeLangTestLanguage.g:1721:2: ( '===' )
                    // InternalBeeLangTestLanguage.g:1722:3: '==='
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getRelationalOperatorAccess().getEqualsSignEqualsSignEqualsSignKeyword_2()); 
                    }
                    match(input,22,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getRelationalOperatorAccess().getEqualsSignEqualsSignEqualsSignKeyword_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalBeeLangTestLanguage.g:1727:2: ( '!=' )
                    {
                    // InternalBeeLangTestLanguage.g:1727:2: ( '!=' )
                    // InternalBeeLangTestLanguage.g:1728:3: '!='
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getRelationalOperatorAccess().getExclamationMarkEqualsSignKeyword_3()); 
                    }
                    match(input,23,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getRelationalOperatorAccess().getExclamationMarkEqualsSignKeyword_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalBeeLangTestLanguage.g:1733:2: ( '!==' )
                    {
                    // InternalBeeLangTestLanguage.g:1733:2: ( '!==' )
                    // InternalBeeLangTestLanguage.g:1734:3: '!=='
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getRelationalOperatorAccess().getExclamationMarkEqualsSignEqualsSignKeyword_4()); 
                    }
                    match(input,24,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getRelationalOperatorAccess().getExclamationMarkEqualsSignEqualsSignKeyword_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalBeeLangTestLanguage.g:1739:2: ( '>=' )
                    {
                    // InternalBeeLangTestLanguage.g:1739:2: ( '>=' )
                    // InternalBeeLangTestLanguage.g:1740:3: '>='
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getRelationalOperatorAccess().getGreaterThanSignEqualsSignKeyword_5()); 
                    }
                    match(input,25,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getRelationalOperatorAccess().getGreaterThanSignEqualsSignKeyword_5()); 
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalBeeLangTestLanguage.g:1745:2: ( '<=' )
                    {
                    // InternalBeeLangTestLanguage.g:1745:2: ( '<=' )
                    // InternalBeeLangTestLanguage.g:1746:3: '<='
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getRelationalOperatorAccess().getLessThanSignEqualsSignKeyword_6()); 
                    }
                    match(input,26,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getRelationalOperatorAccess().getLessThanSignEqualsSignKeyword_6()); 
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalBeeLangTestLanguage.g:1751:2: ( '>' )
                    {
                    // InternalBeeLangTestLanguage.g:1751:2: ( '>' )
                    // InternalBeeLangTestLanguage.g:1752:3: '>'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getRelationalOperatorAccess().getGreaterThanSignKeyword_7()); 
                    }
                    match(input,27,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getRelationalOperatorAccess().getGreaterThanSignKeyword_7()); 
                    }

                    }


                    }
                    break;
                case 9 :
                    // InternalBeeLangTestLanguage.g:1757:2: ( '<' )
                    {
                    // InternalBeeLangTestLanguage.g:1757:2: ( '<' )
                    // InternalBeeLangTestLanguage.g:1758:3: '<'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getRelationalOperatorAccess().getLessThanSignKeyword_8()); 
                    }
                    match(input,28,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getRelationalOperatorAccess().getLessThanSignKeyword_8()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 123, rule__RelationalOperator__Alternatives_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RelationalOperator__Alternatives"


    // $ANTLR start "rule__TopLevelExpression__Alternatives"
    // InternalBeeLangTestLanguage.g:1767:1: rule__TopLevelExpression__Alternatives : ( ( ruleVarDeclaration ) | ( ruleValDeclaration ) | ( ruleAssignmentExpression ) );
    public final void rule__TopLevelExpression__Alternatives() throws RecognitionException {
        int rule__TopLevelExpression__Alternatives_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 124) ) { return ; }
            // InternalBeeLangTestLanguage.g:1771:1: ( ( ruleVarDeclaration ) | ( ruleValDeclaration ) | ( ruleAssignmentExpression ) )
            int alt14=3;
            alt14 = dfa14.predict(input);
            switch (alt14) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:1772:2: ( ruleVarDeclaration )
                    {
                    // InternalBeeLangTestLanguage.g:1772:2: ( ruleVarDeclaration )
                    // InternalBeeLangTestLanguage.g:1773:3: ruleVarDeclaration
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTopLevelExpressionAccess().getVarDeclarationParserRuleCall_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleVarDeclaration();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTopLevelExpressionAccess().getVarDeclarationParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalBeeLangTestLanguage.g:1778:2: ( ruleValDeclaration )
                    {
                    // InternalBeeLangTestLanguage.g:1778:2: ( ruleValDeclaration )
                    // InternalBeeLangTestLanguage.g:1779:3: ruleValDeclaration
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTopLevelExpressionAccess().getValDeclarationParserRuleCall_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleValDeclaration();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTopLevelExpressionAccess().getValDeclarationParserRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalBeeLangTestLanguage.g:1784:2: ( ruleAssignmentExpression )
                    {
                    // InternalBeeLangTestLanguage.g:1784:2: ( ruleAssignmentExpression )
                    // InternalBeeLangTestLanguage.g:1785:3: ruleAssignmentExpression
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTopLevelExpressionAccess().getAssignmentExpressionParserRuleCall_2()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleAssignmentExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTopLevelExpressionAccess().getAssignmentExpressionParserRuleCall_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 124, rule__TopLevelExpression__Alternatives_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TopLevelExpression__Alternatives"


    // $ANTLR start "rule__VarDeclaration__Alternatives_2_0"
    // InternalBeeLangTestLanguage.g:1794:1: rule__VarDeclaration__Alternatives_2_0 : ( ( 'var' ) | ( ( rule__VarDeclaration__TypeAssignment_2_0_1 ) ) );
    public final void rule__VarDeclaration__Alternatives_2_0() throws RecognitionException {
        int rule__VarDeclaration__Alternatives_2_0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 125) ) { return ; }
            // InternalBeeLangTestLanguage.g:1798:1: ( ( 'var' ) | ( ( rule__VarDeclaration__TypeAssignment_2_0_1 ) ) )
            int alt15=2;
            int LA15_0 = input.LA(1);

            if ( (LA15_0==29) ) {
                alt15=1;
            }
            else if ( (LA15_0==RULE_ID||LA15_0==60) ) {
                alt15=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 15, 0, input);

                throw nvae;
            }
            switch (alt15) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:1799:2: ( 'var' )
                    {
                    // InternalBeeLangTestLanguage.g:1799:2: ( 'var' )
                    // InternalBeeLangTestLanguage.g:1800:3: 'var'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getVarDeclarationAccess().getVarKeyword_2_0_0()); 
                    }
                    match(input,29,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getVarDeclarationAccess().getVarKeyword_2_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalBeeLangTestLanguage.g:1805:2: ( ( rule__VarDeclaration__TypeAssignment_2_0_1 ) )
                    {
                    // InternalBeeLangTestLanguage.g:1805:2: ( ( rule__VarDeclaration__TypeAssignment_2_0_1 ) )
                    // InternalBeeLangTestLanguage.g:1806:3: ( rule__VarDeclaration__TypeAssignment_2_0_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getVarDeclarationAccess().getTypeAssignment_2_0_1()); 
                    }
                    // InternalBeeLangTestLanguage.g:1807:3: ( rule__VarDeclaration__TypeAssignment_2_0_1 )
                    // InternalBeeLangTestLanguage.g:1807:4: rule__VarDeclaration__TypeAssignment_2_0_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__VarDeclaration__TypeAssignment_2_0_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getVarDeclarationAccess().getTypeAssignment_2_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 125, rule__VarDeclaration__Alternatives_2_0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Alternatives_2_0"


    // $ANTLR start "rule__TypeRef__Alternatives"
    // InternalBeeLangTestLanguage.g:1815:1: rule__TypeRef__Alternatives : ( ( ruleClosureTypeRef ) | ( ruleSimpleTypeRef ) );
    public final void rule__TypeRef__Alternatives() throws RecognitionException {
        int rule__TypeRef__Alternatives_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 126) ) { return ; }
            // InternalBeeLangTestLanguage.g:1819:1: ( ( ruleClosureTypeRef ) | ( ruleSimpleTypeRef ) )
            int alt16=2;
            int LA16_0 = input.LA(1);

            if ( (LA16_0==60) ) {
                alt16=1;
            }
            else if ( (LA16_0==RULE_ID) ) {
                alt16=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 16, 0, input);

                throw nvae;
            }
            switch (alt16) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:1820:2: ( ruleClosureTypeRef )
                    {
                    // InternalBeeLangTestLanguage.g:1820:2: ( ruleClosureTypeRef )
                    // InternalBeeLangTestLanguage.g:1821:3: ruleClosureTypeRef
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTypeRefAccess().getClosureTypeRefParserRuleCall_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleClosureTypeRef();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTypeRefAccess().getClosureTypeRefParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalBeeLangTestLanguage.g:1826:2: ( ruleSimpleTypeRef )
                    {
                    // InternalBeeLangTestLanguage.g:1826:2: ( ruleSimpleTypeRef )
                    // InternalBeeLangTestLanguage.g:1827:3: ruleSimpleTypeRef
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTypeRefAccess().getSimpleTypeRefParserRuleCall_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSimpleTypeRef();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTypeRefAccess().getSimpleTypeRefParserRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 126, rule__TypeRef__Alternatives_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeRef__Alternatives"


    // $ANTLR start "rule__ClosureTypeRef__Alternatives_1"
    // InternalBeeLangTestLanguage.g:1836:1: rule__ClosureTypeRef__Alternatives_1 : ( ( ( rule__ClosureTypeRef__Group_1_0__0 ) ) | ( ( rule__ClosureTypeRef__Group_1_1__0 ) ) );
    public final void rule__ClosureTypeRef__Alternatives_1() throws RecognitionException {
        int rule__ClosureTypeRef__Alternatives_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 127) ) { return ; }
            // InternalBeeLangTestLanguage.g:1840:1: ( ( ( rule__ClosureTypeRef__Group_1_0__0 ) ) | ( ( rule__ClosureTypeRef__Group_1_1__0 ) ) )
            int alt17=2;
            int LA17_0 = input.LA(1);

            if ( (LA17_0==RULE_ID) ) {
                alt17=1;
            }
            else if ( (LA17_0==75) ) {
                alt17=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 17, 0, input);

                throw nvae;
            }
            switch (alt17) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:1841:2: ( ( rule__ClosureTypeRef__Group_1_0__0 ) )
                    {
                    // InternalBeeLangTestLanguage.g:1841:2: ( ( rule__ClosureTypeRef__Group_1_0__0 ) )
                    // InternalBeeLangTestLanguage.g:1842:3: ( rule__ClosureTypeRef__Group_1_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getClosureTypeRefAccess().getGroup_1_0()); 
                    }
                    // InternalBeeLangTestLanguage.g:1843:3: ( rule__ClosureTypeRef__Group_1_0__0 )
                    // InternalBeeLangTestLanguage.g:1843:4: rule__ClosureTypeRef__Group_1_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ClosureTypeRef__Group_1_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getClosureTypeRefAccess().getGroup_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalBeeLangTestLanguage.g:1847:2: ( ( rule__ClosureTypeRef__Group_1_1__0 ) )
                    {
                    // InternalBeeLangTestLanguage.g:1847:2: ( ( rule__ClosureTypeRef__Group_1_1__0 ) )
                    // InternalBeeLangTestLanguage.g:1848:3: ( rule__ClosureTypeRef__Group_1_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getClosureTypeRefAccess().getGroup_1_1()); 
                    }
                    // InternalBeeLangTestLanguage.g:1849:3: ( rule__ClosureTypeRef__Group_1_1__0 )
                    // InternalBeeLangTestLanguage.g:1849:4: rule__ClosureTypeRef__Group_1_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ClosureTypeRef__Group_1_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getClosureTypeRefAccess().getGroup_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 127, rule__ClosureTypeRef__Alternatives_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureTypeRef__Alternatives_1"


    // $ANTLR start "rule__CachedExpression__Alternatives"
    // InternalBeeLangTestLanguage.g:1857:1: rule__CachedExpression__Alternatives : ( ( ( rule__CachedExpression__Group_0__0 ) ) | ( ruleOrExpression ) );
    public final void rule__CachedExpression__Alternatives() throws RecognitionException {
        int rule__CachedExpression__Alternatives_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 128) ) { return ; }
            // InternalBeeLangTestLanguage.g:1861:1: ( ( ( rule__CachedExpression__Group_0__0 ) ) | ( ruleOrExpression ) )
            int alt18=2;
            int LA18_0 = input.LA(1);

            if ( (LA18_0==63) ) {
                alt18=1;
            }
            else if ( (LA18_0==RULE_STRING||LA18_0==RULE_ID||LA18_0==13||LA18_0==31||(LA18_0>=35 && LA18_0<=44)||LA18_0==60||LA18_0==69||LA18_0==71) ) {
                alt18=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 18, 0, input);

                throw nvae;
            }
            switch (alt18) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:1862:2: ( ( rule__CachedExpression__Group_0__0 ) )
                    {
                    // InternalBeeLangTestLanguage.g:1862:2: ( ( rule__CachedExpression__Group_0__0 ) )
                    // InternalBeeLangTestLanguage.g:1863:3: ( rule__CachedExpression__Group_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getCachedExpressionAccess().getGroup_0()); 
                    }
                    // InternalBeeLangTestLanguage.g:1864:3: ( rule__CachedExpression__Group_0__0 )
                    // InternalBeeLangTestLanguage.g:1864:4: rule__CachedExpression__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__CachedExpression__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getCachedExpressionAccess().getGroup_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalBeeLangTestLanguage.g:1868:2: ( ruleOrExpression )
                    {
                    // InternalBeeLangTestLanguage.g:1868:2: ( ruleOrExpression )
                    // InternalBeeLangTestLanguage.g:1869:3: ruleOrExpression
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getCachedExpressionAccess().getOrExpressionParserRuleCall_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleOrExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getCachedExpressionAccess().getOrExpressionParserRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 128, rule__CachedExpression__Alternatives_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CachedExpression__Alternatives"


    // $ANTLR start "rule__AdditiveExpression__FunctionNameAlternatives_1_1_0"
    // InternalBeeLangTestLanguage.g:1878:1: rule__AdditiveExpression__FunctionNameAlternatives_1_1_0 : ( ( '+' ) | ( '-' ) );
    public final void rule__AdditiveExpression__FunctionNameAlternatives_1_1_0() throws RecognitionException {
        int rule__AdditiveExpression__FunctionNameAlternatives_1_1_0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 129) ) { return ; }
            // InternalBeeLangTestLanguage.g:1882:1: ( ( '+' ) | ( '-' ) )
            int alt19=2;
            int LA19_0 = input.LA(1);

            if ( (LA19_0==30) ) {
                alt19=1;
            }
            else if ( (LA19_0==31) ) {
                alt19=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 19, 0, input);

                throw nvae;
            }
            switch (alt19) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:1883:2: ( '+' )
                    {
                    // InternalBeeLangTestLanguage.g:1883:2: ( '+' )
                    // InternalBeeLangTestLanguage.g:1884:3: '+'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAdditiveExpressionAccess().getFunctionNamePlusSignKeyword_1_1_0_0()); 
                    }
                    match(input,30,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAdditiveExpressionAccess().getFunctionNamePlusSignKeyword_1_1_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalBeeLangTestLanguage.g:1889:2: ( '-' )
                    {
                    // InternalBeeLangTestLanguage.g:1889:2: ( '-' )
                    // InternalBeeLangTestLanguage.g:1890:3: '-'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAdditiveExpressionAccess().getFunctionNameHyphenMinusKeyword_1_1_0_1()); 
                    }
                    match(input,31,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAdditiveExpressionAccess().getFunctionNameHyphenMinusKeyword_1_1_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 129, rule__AdditiveExpression__FunctionNameAlternatives_1_1_0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AdditiveExpression__FunctionNameAlternatives_1_1_0"


    // $ANTLR start "rule__MultiplicativeExpression__FunctionNameAlternatives_1_1_0"
    // InternalBeeLangTestLanguage.g:1899:1: rule__MultiplicativeExpression__FunctionNameAlternatives_1_1_0 : ( ( '*' ) | ( '/' ) | ( '%' ) );
    public final void rule__MultiplicativeExpression__FunctionNameAlternatives_1_1_0() throws RecognitionException {
        int rule__MultiplicativeExpression__FunctionNameAlternatives_1_1_0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 130) ) { return ; }
            // InternalBeeLangTestLanguage.g:1903:1: ( ( '*' ) | ( '/' ) | ( '%' ) )
            int alt20=3;
            switch ( input.LA(1) ) {
            case 32:
                {
                alt20=1;
                }
                break;
            case 33:
                {
                alt20=2;
                }
                break;
            case 34:
                {
                alt20=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 20, 0, input);

                throw nvae;
            }

            switch (alt20) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:1904:2: ( '*' )
                    {
                    // InternalBeeLangTestLanguage.g:1904:2: ( '*' )
                    // InternalBeeLangTestLanguage.g:1905:3: '*'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getMultiplicativeExpressionAccess().getFunctionNameAsteriskKeyword_1_1_0_0()); 
                    }
                    match(input,32,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getMultiplicativeExpressionAccess().getFunctionNameAsteriskKeyword_1_1_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalBeeLangTestLanguage.g:1910:2: ( '/' )
                    {
                    // InternalBeeLangTestLanguage.g:1910:2: ( '/' )
                    // InternalBeeLangTestLanguage.g:1911:3: '/'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getMultiplicativeExpressionAccess().getFunctionNameSolidusKeyword_1_1_0_1()); 
                    }
                    match(input,33,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getMultiplicativeExpressionAccess().getFunctionNameSolidusKeyword_1_1_0_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalBeeLangTestLanguage.g:1916:2: ( '%' )
                    {
                    // InternalBeeLangTestLanguage.g:1916:2: ( '%' )
                    // InternalBeeLangTestLanguage.g:1917:3: '%'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getMultiplicativeExpressionAccess().getFunctionNamePercentSignKeyword_1_1_0_2()); 
                    }
                    match(input,34,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getMultiplicativeExpressionAccess().getFunctionNamePercentSignKeyword_1_1_0_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 130, rule__MultiplicativeExpression__FunctionNameAlternatives_1_1_0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultiplicativeExpression__FunctionNameAlternatives_1_1_0"


    // $ANTLR start "rule__UnaryOrInfixExpression__Alternatives"
    // InternalBeeLangTestLanguage.g:1926:1: rule__UnaryOrInfixExpression__Alternatives : ( ( rulePostopExpression ) | ( ruleUnaryExpression ) | ( rulePreopExpression ) );
    public final void rule__UnaryOrInfixExpression__Alternatives() throws RecognitionException {
        int rule__UnaryOrInfixExpression__Alternatives_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 131) ) { return ; }
            // InternalBeeLangTestLanguage.g:1930:1: ( ( rulePostopExpression ) | ( ruleUnaryExpression ) | ( rulePreopExpression ) )
            int alt21=3;
            switch ( input.LA(1) ) {
            case RULE_STRING:
            case RULE_ID:
            case 13:
            case 38:
            case 39:
            case 40:
            case 41:
            case 42:
            case 43:
            case 44:
            case 60:
            case 69:
            case 71:
                {
                alt21=1;
                }
                break;
            case 31:
            case 35:
                {
                alt21=2;
                }
                break;
            case 36:
            case 37:
                {
                alt21=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 21, 0, input);

                throw nvae;
            }

            switch (alt21) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:1931:2: ( rulePostopExpression )
                    {
                    // InternalBeeLangTestLanguage.g:1931:2: ( rulePostopExpression )
                    // InternalBeeLangTestLanguage.g:1932:3: rulePostopExpression
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnaryOrInfixExpressionAccess().getPostopExpressionParserRuleCall_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    rulePostopExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnaryOrInfixExpressionAccess().getPostopExpressionParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalBeeLangTestLanguage.g:1937:2: ( ruleUnaryExpression )
                    {
                    // InternalBeeLangTestLanguage.g:1937:2: ( ruleUnaryExpression )
                    // InternalBeeLangTestLanguage.g:1938:3: ruleUnaryExpression
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnaryOrInfixExpressionAccess().getUnaryExpressionParserRuleCall_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleUnaryExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnaryOrInfixExpressionAccess().getUnaryExpressionParserRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalBeeLangTestLanguage.g:1943:2: ( rulePreopExpression )
                    {
                    // InternalBeeLangTestLanguage.g:1943:2: ( rulePreopExpression )
                    // InternalBeeLangTestLanguage.g:1944:3: rulePreopExpression
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnaryOrInfixExpressionAccess().getPreopExpressionParserRuleCall_2()); 
                    }
                    pushFollow(FOLLOW_2);
                    rulePreopExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnaryOrInfixExpressionAccess().getPreopExpressionParserRuleCall_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 131, rule__UnaryOrInfixExpression__Alternatives_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnaryOrInfixExpression__Alternatives"


    // $ANTLR start "rule__UnaryExpression__FunctionNameAlternatives_1_0"
    // InternalBeeLangTestLanguage.g:1953:1: rule__UnaryExpression__FunctionNameAlternatives_1_0 : ( ( '!' ) | ( '-' ) );
    public final void rule__UnaryExpression__FunctionNameAlternatives_1_0() throws RecognitionException {
        int rule__UnaryExpression__FunctionNameAlternatives_1_0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 132) ) { return ; }
            // InternalBeeLangTestLanguage.g:1957:1: ( ( '!' ) | ( '-' ) )
            int alt22=2;
            int LA22_0 = input.LA(1);

            if ( (LA22_0==35) ) {
                alt22=1;
            }
            else if ( (LA22_0==31) ) {
                alt22=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 22, 0, input);

                throw nvae;
            }
            switch (alt22) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:1958:2: ( '!' )
                    {
                    // InternalBeeLangTestLanguage.g:1958:2: ( '!' )
                    // InternalBeeLangTestLanguage.g:1959:3: '!'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnaryExpressionAccess().getFunctionNameExclamationMarkKeyword_1_0_0()); 
                    }
                    match(input,35,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnaryExpressionAccess().getFunctionNameExclamationMarkKeyword_1_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalBeeLangTestLanguage.g:1964:2: ( '-' )
                    {
                    // InternalBeeLangTestLanguage.g:1964:2: ( '-' )
                    // InternalBeeLangTestLanguage.g:1965:3: '-'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnaryExpressionAccess().getFunctionNameHyphenMinusKeyword_1_0_1()); 
                    }
                    match(input,31,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnaryExpressionAccess().getFunctionNameHyphenMinusKeyword_1_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 132, rule__UnaryExpression__FunctionNameAlternatives_1_0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnaryExpression__FunctionNameAlternatives_1_0"


    // $ANTLR start "rule__PreopExpression__FunctionNameAlternatives_1_0"
    // InternalBeeLangTestLanguage.g:1974:1: rule__PreopExpression__FunctionNameAlternatives_1_0 : ( ( '++' ) | ( '--' ) );
    public final void rule__PreopExpression__FunctionNameAlternatives_1_0() throws RecognitionException {
        int rule__PreopExpression__FunctionNameAlternatives_1_0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 133) ) { return ; }
            // InternalBeeLangTestLanguage.g:1978:1: ( ( '++' ) | ( '--' ) )
            int alt23=2;
            int LA23_0 = input.LA(1);

            if ( (LA23_0==36) ) {
                alt23=1;
            }
            else if ( (LA23_0==37) ) {
                alt23=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 23, 0, input);

                throw nvae;
            }
            switch (alt23) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:1979:2: ( '++' )
                    {
                    // InternalBeeLangTestLanguage.g:1979:2: ( '++' )
                    // InternalBeeLangTestLanguage.g:1980:3: '++'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPreopExpressionAccess().getFunctionNamePlusSignPlusSignKeyword_1_0_0()); 
                    }
                    match(input,36,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPreopExpressionAccess().getFunctionNamePlusSignPlusSignKeyword_1_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalBeeLangTestLanguage.g:1985:2: ( '--' )
                    {
                    // InternalBeeLangTestLanguage.g:1985:2: ( '--' )
                    // InternalBeeLangTestLanguage.g:1986:3: '--'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPreopExpressionAccess().getFunctionNameHyphenMinusHyphenMinusKeyword_1_0_1()); 
                    }
                    match(input,37,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPreopExpressionAccess().getFunctionNameHyphenMinusHyphenMinusKeyword_1_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 133, rule__PreopExpression__FunctionNameAlternatives_1_0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PreopExpression__FunctionNameAlternatives_1_0"


    // $ANTLR start "rule__PostopExpression__FunctionNameAlternatives_1_1_0"
    // InternalBeeLangTestLanguage.g:1995:1: rule__PostopExpression__FunctionNameAlternatives_1_1_0 : ( ( '--' ) | ( '++' ) );
    public final void rule__PostopExpression__FunctionNameAlternatives_1_1_0() throws RecognitionException {
        int rule__PostopExpression__FunctionNameAlternatives_1_1_0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 134) ) { return ; }
            // InternalBeeLangTestLanguage.g:1999:1: ( ( '--' ) | ( '++' ) )
            int alt24=2;
            int LA24_0 = input.LA(1);

            if ( (LA24_0==37) ) {
                alt24=1;
            }
            else if ( (LA24_0==36) ) {
                alt24=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 24, 0, input);

                throw nvae;
            }
            switch (alt24) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:2000:2: ( '--' )
                    {
                    // InternalBeeLangTestLanguage.g:2000:2: ( '--' )
                    // InternalBeeLangTestLanguage.g:2001:3: '--'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPostopExpressionAccess().getFunctionNameHyphenMinusHyphenMinusKeyword_1_1_0_0()); 
                    }
                    match(input,37,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPostopExpressionAccess().getFunctionNameHyphenMinusHyphenMinusKeyword_1_1_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalBeeLangTestLanguage.g:2006:2: ( '++' )
                    {
                    // InternalBeeLangTestLanguage.g:2006:2: ( '++' )
                    // InternalBeeLangTestLanguage.g:2007:3: '++'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPostopExpressionAccess().getFunctionNamePlusSignPlusSignKeyword_1_1_0_1()); 
                    }
                    match(input,36,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPostopExpressionAccess().getFunctionNamePlusSignPlusSignKeyword_1_1_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 134, rule__PostopExpression__FunctionNameAlternatives_1_1_0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PostopExpression__FunctionNameAlternatives_1_1_0"


    // $ANTLR start "rule__InfixExpression__Alternatives_1"
    // InternalBeeLangTestLanguage.g:2016:1: rule__InfixExpression__Alternatives_1 : ( ( ( rule__InfixExpression__Group_1_0__0 ) ) | ( ( rule__InfixExpression__Group_1_1__0 ) ) | ( ( rule__InfixExpression__Group_1_2__0 ) ) );
    public final void rule__InfixExpression__Alternatives_1() throws RecognitionException {
        int rule__InfixExpression__Alternatives_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 135) ) { return ; }
            // InternalBeeLangTestLanguage.g:2020:1: ( ( ( rule__InfixExpression__Group_1_0__0 ) ) | ( ( rule__InfixExpression__Group_1_1__0 ) ) | ( ( rule__InfixExpression__Group_1_2__0 ) ) )
            int alt25=3;
            int LA25_0 = input.LA(1);

            if ( (LA25_0==66) ) {
                int LA25_1 = input.LA(2);

                if ( (synpred39_InternalBeeLangTestLanguage()) ) {
                    alt25=1;
                }
                else if ( (true) ) {
                    alt25=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 25, 1, input);

                    throw nvae;
                }
            }
            else if ( (LA25_0==67) ) {
                alt25=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 25, 0, input);

                throw nvae;
            }
            switch (alt25) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:2021:2: ( ( rule__InfixExpression__Group_1_0__0 ) )
                    {
                    // InternalBeeLangTestLanguage.g:2021:2: ( ( rule__InfixExpression__Group_1_0__0 ) )
                    // InternalBeeLangTestLanguage.g:2022:3: ( rule__InfixExpression__Group_1_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getInfixExpressionAccess().getGroup_1_0()); 
                    }
                    // InternalBeeLangTestLanguage.g:2023:3: ( rule__InfixExpression__Group_1_0__0 )
                    // InternalBeeLangTestLanguage.g:2023:4: rule__InfixExpression__Group_1_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__InfixExpression__Group_1_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getInfixExpressionAccess().getGroup_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalBeeLangTestLanguage.g:2027:2: ( ( rule__InfixExpression__Group_1_1__0 ) )
                    {
                    // InternalBeeLangTestLanguage.g:2027:2: ( ( rule__InfixExpression__Group_1_1__0 ) )
                    // InternalBeeLangTestLanguage.g:2028:3: ( rule__InfixExpression__Group_1_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getInfixExpressionAccess().getGroup_1_1()); 
                    }
                    // InternalBeeLangTestLanguage.g:2029:3: ( rule__InfixExpression__Group_1_1__0 )
                    // InternalBeeLangTestLanguage.g:2029:4: rule__InfixExpression__Group_1_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__InfixExpression__Group_1_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getInfixExpressionAccess().getGroup_1_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalBeeLangTestLanguage.g:2033:2: ( ( rule__InfixExpression__Group_1_2__0 ) )
                    {
                    // InternalBeeLangTestLanguage.g:2033:2: ( ( rule__InfixExpression__Group_1_2__0 ) )
                    // InternalBeeLangTestLanguage.g:2034:3: ( rule__InfixExpression__Group_1_2__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getInfixExpressionAccess().getGroup_1_2()); 
                    }
                    // InternalBeeLangTestLanguage.g:2035:3: ( rule__InfixExpression__Group_1_2__0 )
                    // InternalBeeLangTestLanguage.g:2035:4: rule__InfixExpression__Group_1_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__InfixExpression__Group_1_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getInfixExpressionAccess().getGroup_1_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 135, rule__InfixExpression__Alternatives_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InfixExpression__Alternatives_1"


    // $ANTLR start "rule__PrimaryExpression__Alternatives"
    // InternalBeeLangTestLanguage.g:2043:1: rule__PrimaryExpression__Alternatives : ( ( ruleFeatureCall ) | ( ruleConstructorCallExpression ) | ( ruleValue ) | ( ruleLiteral ) | ( ruleKeywordVariables ) | ( ruleParanthesizedExpression ) | ( ruleBlockExpression ) | ( ruleWithExpression ) | ( ruleWithContextExpression ) );
    public final void rule__PrimaryExpression__Alternatives() throws RecognitionException {
        int rule__PrimaryExpression__Alternatives_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 136) ) { return ; }
            // InternalBeeLangTestLanguage.g:2047:1: ( ( ruleFeatureCall ) | ( ruleConstructorCallExpression ) | ( ruleValue ) | ( ruleLiteral ) | ( ruleKeywordVariables ) | ( ruleParanthesizedExpression ) | ( ruleBlockExpression ) | ( ruleWithExpression ) | ( ruleWithContextExpression ) )
            int alt26=9;
            alt26 = dfa26.predict(input);
            switch (alt26) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:2048:2: ( ruleFeatureCall )
                    {
                    // InternalBeeLangTestLanguage.g:2048:2: ( ruleFeatureCall )
                    // InternalBeeLangTestLanguage.g:2049:3: ruleFeatureCall
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPrimaryExpressionAccess().getFeatureCallParserRuleCall_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleFeatureCall();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPrimaryExpressionAccess().getFeatureCallParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalBeeLangTestLanguage.g:2054:2: ( ruleConstructorCallExpression )
                    {
                    // InternalBeeLangTestLanguage.g:2054:2: ( ruleConstructorCallExpression )
                    // InternalBeeLangTestLanguage.g:2055:3: ruleConstructorCallExpression
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPrimaryExpressionAccess().getConstructorCallExpressionParserRuleCall_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleConstructorCallExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPrimaryExpressionAccess().getConstructorCallExpressionParserRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalBeeLangTestLanguage.g:2060:2: ( ruleValue )
                    {
                    // InternalBeeLangTestLanguage.g:2060:2: ( ruleValue )
                    // InternalBeeLangTestLanguage.g:2061:3: ruleValue
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPrimaryExpressionAccess().getValueParserRuleCall_2()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleValue();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPrimaryExpressionAccess().getValueParserRuleCall_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalBeeLangTestLanguage.g:2066:2: ( ruleLiteral )
                    {
                    // InternalBeeLangTestLanguage.g:2066:2: ( ruleLiteral )
                    // InternalBeeLangTestLanguage.g:2067:3: ruleLiteral
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPrimaryExpressionAccess().getLiteralParserRuleCall_3()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleLiteral();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPrimaryExpressionAccess().getLiteralParserRuleCall_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalBeeLangTestLanguage.g:2072:2: ( ruleKeywordVariables )
                    {
                    // InternalBeeLangTestLanguage.g:2072:2: ( ruleKeywordVariables )
                    // InternalBeeLangTestLanguage.g:2073:3: ruleKeywordVariables
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPrimaryExpressionAccess().getKeywordVariablesParserRuleCall_4()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleKeywordVariables();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPrimaryExpressionAccess().getKeywordVariablesParserRuleCall_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalBeeLangTestLanguage.g:2078:2: ( ruleParanthesizedExpression )
                    {
                    // InternalBeeLangTestLanguage.g:2078:2: ( ruleParanthesizedExpression )
                    // InternalBeeLangTestLanguage.g:2079:3: ruleParanthesizedExpression
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPrimaryExpressionAccess().getParanthesizedExpressionParserRuleCall_5()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleParanthesizedExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPrimaryExpressionAccess().getParanthesizedExpressionParserRuleCall_5()); 
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalBeeLangTestLanguage.g:2084:2: ( ruleBlockExpression )
                    {
                    // InternalBeeLangTestLanguage.g:2084:2: ( ruleBlockExpression )
                    // InternalBeeLangTestLanguage.g:2085:3: ruleBlockExpression
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPrimaryExpressionAccess().getBlockExpressionParserRuleCall_6()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleBlockExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPrimaryExpressionAccess().getBlockExpressionParserRuleCall_6()); 
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalBeeLangTestLanguage.g:2090:2: ( ruleWithExpression )
                    {
                    // InternalBeeLangTestLanguage.g:2090:2: ( ruleWithExpression )
                    // InternalBeeLangTestLanguage.g:2091:3: ruleWithExpression
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPrimaryExpressionAccess().getWithExpressionParserRuleCall_7()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleWithExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPrimaryExpressionAccess().getWithExpressionParserRuleCall_7()); 
                    }

                    }


                    }
                    break;
                case 9 :
                    // InternalBeeLangTestLanguage.g:2096:2: ( ruleWithContextExpression )
                    {
                    // InternalBeeLangTestLanguage.g:2096:2: ( ruleWithContextExpression )
                    // InternalBeeLangTestLanguage.g:2097:3: ruleWithContextExpression
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPrimaryExpressionAccess().getWithContextExpressionParserRuleCall_8()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleWithContextExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPrimaryExpressionAccess().getWithContextExpressionParserRuleCall_8()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 136, rule__PrimaryExpression__Alternatives_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PrimaryExpression__Alternatives"


    // $ANTLR start "rule__WithExpression__Alternatives_2"
    // InternalBeeLangTestLanguage.g:2106:1: rule__WithExpression__Alternatives_2 : ( ( ( rule__WithExpression__Group_2_0__0 ) ) | ( ( rule__WithExpression__Group_2_1__0 ) ) );
    public final void rule__WithExpression__Alternatives_2() throws RecognitionException {
        int rule__WithExpression__Alternatives_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 137) ) { return ; }
            // InternalBeeLangTestLanguage.g:2110:1: ( ( ( rule__WithExpression__Group_2_0__0 ) ) | ( ( rule__WithExpression__Group_2_1__0 ) ) )
            int alt27=2;
            int LA27_0 = input.LA(1);

            if ( (LA27_0==49) ) {
                alt27=1;
            }
            else if ( (LA27_0==44) ) {
                alt27=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 27, 0, input);

                throw nvae;
            }
            switch (alt27) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:2111:2: ( ( rule__WithExpression__Group_2_0__0 ) )
                    {
                    // InternalBeeLangTestLanguage.g:2111:2: ( ( rule__WithExpression__Group_2_0__0 ) )
                    // InternalBeeLangTestLanguage.g:2112:3: ( rule__WithExpression__Group_2_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getWithExpressionAccess().getGroup_2_0()); 
                    }
                    // InternalBeeLangTestLanguage.g:2113:3: ( rule__WithExpression__Group_2_0__0 )
                    // InternalBeeLangTestLanguage.g:2113:4: rule__WithExpression__Group_2_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__WithExpression__Group_2_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getWithExpressionAccess().getGroup_2_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalBeeLangTestLanguage.g:2117:2: ( ( rule__WithExpression__Group_2_1__0 ) )
                    {
                    // InternalBeeLangTestLanguage.g:2117:2: ( ( rule__WithExpression__Group_2_1__0 ) )
                    // InternalBeeLangTestLanguage.g:2118:3: ( rule__WithExpression__Group_2_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getWithExpressionAccess().getGroup_2_1()); 
                    }
                    // InternalBeeLangTestLanguage.g:2119:3: ( rule__WithExpression__Group_2_1__0 )
                    // InternalBeeLangTestLanguage.g:2119:4: rule__WithExpression__Group_2_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__WithExpression__Group_2_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getWithExpressionAccess().getGroup_2_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 137, rule__WithExpression__Alternatives_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithExpression__Alternatives_2"


    // $ANTLR start "rule__KeywordVariables__NameAlternatives_1_0"
    // InternalBeeLangTestLanguage.g:2127:1: rule__KeywordVariables__NameAlternatives_1_0 : ( ( 'input' ) | ( 'output' ) | ( 'source' ) | ( 'properties' ) | ( 'builder' ) | ( 'unit' ) | ( 'this' ) );
    public final void rule__KeywordVariables__NameAlternatives_1_0() throws RecognitionException {
        int rule__KeywordVariables__NameAlternatives_1_0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 138) ) { return ; }
            // InternalBeeLangTestLanguage.g:2131:1: ( ( 'input' ) | ( 'output' ) | ( 'source' ) | ( 'properties' ) | ( 'builder' ) | ( 'unit' ) | ( 'this' ) )
            int alt28=7;
            switch ( input.LA(1) ) {
            case 38:
                {
                alt28=1;
                }
                break;
            case 39:
                {
                alt28=2;
                }
                break;
            case 40:
                {
                alt28=3;
                }
                break;
            case 41:
                {
                alt28=4;
                }
                break;
            case 42:
                {
                alt28=5;
                }
                break;
            case 13:
                {
                alt28=6;
                }
                break;
            case 43:
                {
                alt28=7;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 28, 0, input);

                throw nvae;
            }

            switch (alt28) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:2132:2: ( 'input' )
                    {
                    // InternalBeeLangTestLanguage.g:2132:2: ( 'input' )
                    // InternalBeeLangTestLanguage.g:2133:3: 'input'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getKeywordVariablesAccess().getNameInputKeyword_1_0_0()); 
                    }
                    match(input,38,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getKeywordVariablesAccess().getNameInputKeyword_1_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalBeeLangTestLanguage.g:2138:2: ( 'output' )
                    {
                    // InternalBeeLangTestLanguage.g:2138:2: ( 'output' )
                    // InternalBeeLangTestLanguage.g:2139:3: 'output'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getKeywordVariablesAccess().getNameOutputKeyword_1_0_1()); 
                    }
                    match(input,39,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getKeywordVariablesAccess().getNameOutputKeyword_1_0_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalBeeLangTestLanguage.g:2144:2: ( 'source' )
                    {
                    // InternalBeeLangTestLanguage.g:2144:2: ( 'source' )
                    // InternalBeeLangTestLanguage.g:2145:3: 'source'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getKeywordVariablesAccess().getNameSourceKeyword_1_0_2()); 
                    }
                    match(input,40,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getKeywordVariablesAccess().getNameSourceKeyword_1_0_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalBeeLangTestLanguage.g:2150:2: ( 'properties' )
                    {
                    // InternalBeeLangTestLanguage.g:2150:2: ( 'properties' )
                    // InternalBeeLangTestLanguage.g:2151:3: 'properties'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getKeywordVariablesAccess().getNamePropertiesKeyword_1_0_3()); 
                    }
                    match(input,41,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getKeywordVariablesAccess().getNamePropertiesKeyword_1_0_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalBeeLangTestLanguage.g:2156:2: ( 'builder' )
                    {
                    // InternalBeeLangTestLanguage.g:2156:2: ( 'builder' )
                    // InternalBeeLangTestLanguage.g:2157:3: 'builder'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getKeywordVariablesAccess().getNameBuilderKeyword_1_0_4()); 
                    }
                    match(input,42,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getKeywordVariablesAccess().getNameBuilderKeyword_1_0_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalBeeLangTestLanguage.g:2162:2: ( 'unit' )
                    {
                    // InternalBeeLangTestLanguage.g:2162:2: ( 'unit' )
                    // InternalBeeLangTestLanguage.g:2163:3: 'unit'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getKeywordVariablesAccess().getNameUnitKeyword_1_0_5()); 
                    }
                    match(input,13,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getKeywordVariablesAccess().getNameUnitKeyword_1_0_5()); 
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalBeeLangTestLanguage.g:2168:2: ( 'this' )
                    {
                    // InternalBeeLangTestLanguage.g:2168:2: ( 'this' )
                    // InternalBeeLangTestLanguage.g:2169:3: 'this'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getKeywordVariablesAccess().getNameThisKeyword_1_0_6()); 
                    }
                    match(input,43,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getKeywordVariablesAccess().getNameThisKeyword_1_0_6()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 138, rule__KeywordVariables__NameAlternatives_1_0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__KeywordVariables__NameAlternatives_1_0"


    // $ANTLR start "rule__Literal__Alternatives"
    // InternalBeeLangTestLanguage.g:2178:1: rule__Literal__Alternatives : ( ( ruleValueLiteral ) | ( ruleLiteralFunction ) );
    public final void rule__Literal__Alternatives() throws RecognitionException {
        int rule__Literal__Alternatives_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 139) ) { return ; }
            // InternalBeeLangTestLanguage.g:2182:1: ( ( ruleValueLiteral ) | ( ruleLiteralFunction ) )
            int alt29=2;
            int LA29_0 = input.LA(1);

            if ( (LA29_0==RULE_STRING) ) {
                alt29=1;
            }
            else if ( (LA29_0==44) ) {
                alt29=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 29, 0, input);

                throw nvae;
            }
            switch (alt29) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:2183:2: ( ruleValueLiteral )
                    {
                    // InternalBeeLangTestLanguage.g:2183:2: ( ruleValueLiteral )
                    // InternalBeeLangTestLanguage.g:2184:3: ruleValueLiteral
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getLiteralAccess().getValueLiteralParserRuleCall_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleValueLiteral();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getLiteralAccess().getValueLiteralParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalBeeLangTestLanguage.g:2189:2: ( ruleLiteralFunction )
                    {
                    // InternalBeeLangTestLanguage.g:2189:2: ( ruleLiteralFunction )
                    // InternalBeeLangTestLanguage.g:2190:3: ruleLiteralFunction
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getLiteralAccess().getLiteralFunctionParserRuleCall_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleLiteralFunction();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getLiteralAccess().getLiteralFunctionParserRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 139, rule__Literal__Alternatives_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Literal__Alternatives"


    // $ANTLR start "rule__ClosureExpression__Alternatives_2"
    // InternalBeeLangTestLanguage.g:2199:1: rule__ClosureExpression__Alternatives_2 : ( ( ( rule__ClosureExpression__Group_2_0__0 ) ) | ( ( rule__ClosureExpression__Group_2_1__0 ) ) );
    public final void rule__ClosureExpression__Alternatives_2() throws RecognitionException {
        int rule__ClosureExpression__Alternatives_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 140) ) { return ; }
            // InternalBeeLangTestLanguage.g:2203:1: ( ( ( rule__ClosureExpression__Group_2_0__0 ) ) | ( ( rule__ClosureExpression__Group_2_1__0 ) ) )
            int alt30=2;
            int LA30_0 = input.LA(1);

            if ( (LA30_0==RULE_ID||LA30_0==60||LA30_0==72) ) {
                alt30=1;
            }
            else if ( (LA30_0==75) ) {
                alt30=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 30, 0, input);

                throw nvae;
            }
            switch (alt30) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:2204:2: ( ( rule__ClosureExpression__Group_2_0__0 ) )
                    {
                    // InternalBeeLangTestLanguage.g:2204:2: ( ( rule__ClosureExpression__Group_2_0__0 ) )
                    // InternalBeeLangTestLanguage.g:2205:3: ( rule__ClosureExpression__Group_2_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getClosureExpressionAccess().getGroup_2_0()); 
                    }
                    // InternalBeeLangTestLanguage.g:2206:3: ( rule__ClosureExpression__Group_2_0__0 )
                    // InternalBeeLangTestLanguage.g:2206:4: rule__ClosureExpression__Group_2_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ClosureExpression__Group_2_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getClosureExpressionAccess().getGroup_2_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalBeeLangTestLanguage.g:2210:2: ( ( rule__ClosureExpression__Group_2_1__0 ) )
                    {
                    // InternalBeeLangTestLanguage.g:2210:2: ( ( rule__ClosureExpression__Group_2_1__0 ) )
                    // InternalBeeLangTestLanguage.g:2211:3: ( rule__ClosureExpression__Group_2_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getClosureExpressionAccess().getGroup_2_1()); 
                    }
                    // InternalBeeLangTestLanguage.g:2212:3: ( rule__ClosureExpression__Group_2_1__0 )
                    // InternalBeeLangTestLanguage.g:2212:4: rule__ClosureExpression__Group_2_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ClosureExpression__Group_2_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getClosureExpressionAccess().getGroup_2_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 140, rule__ClosureExpression__Alternatives_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Alternatives_2"


    // $ANTLR start "rule__OneOrManyExpressions__Alternatives"
    // InternalBeeLangTestLanguage.g:2220:1: rule__OneOrManyExpressions__Alternatives : ( ( ruleBlockExpressionWithoutBrackets ) | ( ruleExpression ) );
    public final void rule__OneOrManyExpressions__Alternatives() throws RecognitionException {
        int rule__OneOrManyExpressions__Alternatives_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 141) ) { return ; }
            // InternalBeeLangTestLanguage.g:2224:1: ( ( ruleBlockExpressionWithoutBrackets ) | ( ruleExpression ) )
            int alt31=2;
            alt31 = dfa31.predict(input);
            switch (alt31) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:2225:2: ( ruleBlockExpressionWithoutBrackets )
                    {
                    // InternalBeeLangTestLanguage.g:2225:2: ( ruleBlockExpressionWithoutBrackets )
                    // InternalBeeLangTestLanguage.g:2226:3: ruleBlockExpressionWithoutBrackets
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOneOrManyExpressionsAccess().getBlockExpressionWithoutBracketsParserRuleCall_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleBlockExpressionWithoutBrackets();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOneOrManyExpressionsAccess().getBlockExpressionWithoutBracketsParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalBeeLangTestLanguage.g:2231:2: ( ruleExpression )
                    {
                    // InternalBeeLangTestLanguage.g:2231:2: ( ruleExpression )
                    // InternalBeeLangTestLanguage.g:2232:3: ruleExpression
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOneOrManyExpressionsAccess().getExpressionParserRuleCall_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOneOrManyExpressionsAccess().getExpressionParserRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 141, rule__OneOrManyExpressions__Alternatives_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OneOrManyExpressions__Alternatives"


    // $ANTLR start "rule__QID__Alternatives_1"
    // InternalBeeLangTestLanguage.g:2241:1: rule__QID__Alternatives_1 : ( ( RULE_INT ) | ( RULE_HEX ) | ( RULE_ID ) );
    public final void rule__QID__Alternatives_1() throws RecognitionException {
        int rule__QID__Alternatives_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 142) ) { return ; }
            // InternalBeeLangTestLanguage.g:2245:1: ( ( RULE_INT ) | ( RULE_HEX ) | ( RULE_ID ) )
            int alt32=3;
            switch ( input.LA(1) ) {
            case RULE_INT:
                {
                alt32=1;
                }
                break;
            case RULE_HEX:
                {
                alt32=2;
                }
                break;
            case RULE_ID:
                {
                alt32=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 32, 0, input);

                throw nvae;
            }

            switch (alt32) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:2246:2: ( RULE_INT )
                    {
                    // InternalBeeLangTestLanguage.g:2246:2: ( RULE_INT )
                    // InternalBeeLangTestLanguage.g:2247:3: RULE_INT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getQIDAccess().getINTTerminalRuleCall_1_0()); 
                    }
                    match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getQIDAccess().getINTTerminalRuleCall_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalBeeLangTestLanguage.g:2252:2: ( RULE_HEX )
                    {
                    // InternalBeeLangTestLanguage.g:2252:2: ( RULE_HEX )
                    // InternalBeeLangTestLanguage.g:2253:3: RULE_HEX
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getQIDAccess().getHEXTerminalRuleCall_1_1()); 
                    }
                    match(input,RULE_HEX,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getQIDAccess().getHEXTerminalRuleCall_1_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalBeeLangTestLanguage.g:2258:2: ( RULE_ID )
                    {
                    // InternalBeeLangTestLanguage.g:2258:2: ( RULE_ID )
                    // InternalBeeLangTestLanguage.g:2259:3: RULE_ID
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getQIDAccess().getIDTerminalRuleCall_1_2()); 
                    }
                    match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getQIDAccess().getIDTerminalRuleCall_1_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 142, rule__QID__Alternatives_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QID__Alternatives_1"


    // $ANTLR start "rule__QID__Alternatives_2_2"
    // InternalBeeLangTestLanguage.g:2268:1: rule__QID__Alternatives_2_2 : ( ( RULE_INT ) | ( RULE_HEX ) | ( RULE_ID ) );
    public final void rule__QID__Alternatives_2_2() throws RecognitionException {
        int rule__QID__Alternatives_2_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 143) ) { return ; }
            // InternalBeeLangTestLanguage.g:2272:1: ( ( RULE_INT ) | ( RULE_HEX ) | ( RULE_ID ) )
            int alt33=3;
            switch ( input.LA(1) ) {
            case RULE_INT:
                {
                alt33=1;
                }
                break;
            case RULE_HEX:
                {
                alt33=2;
                }
                break;
            case RULE_ID:
                {
                alt33=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 33, 0, input);

                throw nvae;
            }

            switch (alt33) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:2273:2: ( RULE_INT )
                    {
                    // InternalBeeLangTestLanguage.g:2273:2: ( RULE_INT )
                    // InternalBeeLangTestLanguage.g:2274:3: RULE_INT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getQIDAccess().getINTTerminalRuleCall_2_2_0()); 
                    }
                    match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getQIDAccess().getINTTerminalRuleCall_2_2_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalBeeLangTestLanguage.g:2279:2: ( RULE_HEX )
                    {
                    // InternalBeeLangTestLanguage.g:2279:2: ( RULE_HEX )
                    // InternalBeeLangTestLanguage.g:2280:3: RULE_HEX
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getQIDAccess().getHEXTerminalRuleCall_2_2_1()); 
                    }
                    match(input,RULE_HEX,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getQIDAccess().getHEXTerminalRuleCall_2_2_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalBeeLangTestLanguage.g:2285:2: ( RULE_ID )
                    {
                    // InternalBeeLangTestLanguage.g:2285:2: ( RULE_ID )
                    // InternalBeeLangTestLanguage.g:2286:3: RULE_ID
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getQIDAccess().getIDTerminalRuleCall_2_2_2()); 
                    }
                    match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getQIDAccess().getIDTerminalRuleCall_2_2_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 143, rule__QID__Alternatives_2_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QID__Alternatives_2_2"


    // $ANTLR start "rule__Unit__Group__0"
    // InternalBeeLangTestLanguage.g:2295:1: rule__Unit__Group__0 : rule__Unit__Group__0__Impl rule__Unit__Group__1 ;
    public final void rule__Unit__Group__0() throws RecognitionException {
        int rule__Unit__Group__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 144) ) { return ; }
            // InternalBeeLangTestLanguage.g:2299:1: ( rule__Unit__Group__0__Impl rule__Unit__Group__1 )
            // InternalBeeLangTestLanguage.g:2300:2: rule__Unit__Group__0__Impl rule__Unit__Group__1
            {
            pushFollow(FOLLOW_5);
            rule__Unit__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Unit__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 144, rule__Unit__Group__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group__0"


    // $ANTLR start "rule__Unit__Group__0__Impl"
    // InternalBeeLangTestLanguage.g:2307:1: rule__Unit__Group__0__Impl : ( () ) ;
    public final void rule__Unit__Group__0__Impl() throws RecognitionException {
        int rule__Unit__Group__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 145) ) { return ; }
            // InternalBeeLangTestLanguage.g:2311:1: ( ( () ) )
            // InternalBeeLangTestLanguage.g:2312:1: ( () )
            {
            // InternalBeeLangTestLanguage.g:2312:1: ( () )
            // InternalBeeLangTestLanguage.g:2313:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getUnitAction_0()); 
            }
            // InternalBeeLangTestLanguage.g:2314:2: ()
            // InternalBeeLangTestLanguage.g:2314:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getUnitAction_0()); 
            }

            }


            }

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 145, rule__Unit__Group__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group__0__Impl"


    // $ANTLR start "rule__Unit__Group__1"
    // InternalBeeLangTestLanguage.g:2322:1: rule__Unit__Group__1 : rule__Unit__Group__1__Impl rule__Unit__Group__2 ;
    public final void rule__Unit__Group__1() throws RecognitionException {
        int rule__Unit__Group__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 146) ) { return ; }
            // InternalBeeLangTestLanguage.g:2326:1: ( rule__Unit__Group__1__Impl rule__Unit__Group__2 )
            // InternalBeeLangTestLanguage.g:2327:2: rule__Unit__Group__1__Impl rule__Unit__Group__2
            {
            pushFollow(FOLLOW_5);
            rule__Unit__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Unit__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 146, rule__Unit__Group__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group__1"


    // $ANTLR start "rule__Unit__Group__1__Impl"
    // InternalBeeLangTestLanguage.g:2334:1: rule__Unit__Group__1__Impl : ( ( rule__Unit__DocumentationAssignment_1 )? ) ;
    public final void rule__Unit__Group__1__Impl() throws RecognitionException {
        int rule__Unit__Group__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 147) ) { return ; }
            // InternalBeeLangTestLanguage.g:2338:1: ( ( ( rule__Unit__DocumentationAssignment_1 )? ) )
            // InternalBeeLangTestLanguage.g:2339:1: ( ( rule__Unit__DocumentationAssignment_1 )? )
            {
            // InternalBeeLangTestLanguage.g:2339:1: ( ( rule__Unit__DocumentationAssignment_1 )? )
            // InternalBeeLangTestLanguage.g:2340:2: ( rule__Unit__DocumentationAssignment_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getDocumentationAssignment_1()); 
            }
            // InternalBeeLangTestLanguage.g:2341:2: ( rule__Unit__DocumentationAssignment_1 )?
            int alt34=2;
            int LA34_0 = input.LA(1);

            if ( (LA34_0==RULE_DOCUMENTATION) ) {
                alt34=1;
            }
            switch (alt34) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:2341:3: rule__Unit__DocumentationAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__Unit__DocumentationAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getDocumentationAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 147, rule__Unit__Group__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group__1__Impl"


    // $ANTLR start "rule__Unit__Group__2"
    // InternalBeeLangTestLanguage.g:2349:1: rule__Unit__Group__2 : rule__Unit__Group__2__Impl rule__Unit__Group__3 ;
    public final void rule__Unit__Group__2() throws RecognitionException {
        int rule__Unit__Group__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 148) ) { return ; }
            // InternalBeeLangTestLanguage.g:2353:1: ( rule__Unit__Group__2__Impl rule__Unit__Group__3 )
            // InternalBeeLangTestLanguage.g:2354:2: rule__Unit__Group__2__Impl rule__Unit__Group__3
            {
            pushFollow(FOLLOW_6);
            rule__Unit__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Unit__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 148, rule__Unit__Group__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group__2"


    // $ANTLR start "rule__Unit__Group__2__Impl"
    // InternalBeeLangTestLanguage.g:2361:1: rule__Unit__Group__2__Impl : ( 'unit' ) ;
    public final void rule__Unit__Group__2__Impl() throws RecognitionException {
        int rule__Unit__Group__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 149) ) { return ; }
            // InternalBeeLangTestLanguage.g:2365:1: ( ( 'unit' ) )
            // InternalBeeLangTestLanguage.g:2366:1: ( 'unit' )
            {
            // InternalBeeLangTestLanguage.g:2366:1: ( 'unit' )
            // InternalBeeLangTestLanguage.g:2367:2: 'unit'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getUnitKeyword_2()); 
            }
            match(input,13,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getUnitKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 149, rule__Unit__Group__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group__2__Impl"


    // $ANTLR start "rule__Unit__Group__3"
    // InternalBeeLangTestLanguage.g:2376:1: rule__Unit__Group__3 : rule__Unit__Group__3__Impl rule__Unit__Group__4 ;
    public final void rule__Unit__Group__3() throws RecognitionException {
        int rule__Unit__Group__3_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 150) ) { return ; }
            // InternalBeeLangTestLanguage.g:2380:1: ( rule__Unit__Group__3__Impl rule__Unit__Group__4 )
            // InternalBeeLangTestLanguage.g:2381:2: rule__Unit__Group__3__Impl rule__Unit__Group__4
            {
            pushFollow(FOLLOW_6);
            rule__Unit__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Unit__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 150, rule__Unit__Group__3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group__3"


    // $ANTLR start "rule__Unit__Group__3__Impl"
    // InternalBeeLangTestLanguage.g:2388:1: rule__Unit__Group__3__Impl : ( ( rule__Unit__NameAssignment_3 )? ) ;
    public final void rule__Unit__Group__3__Impl() throws RecognitionException {
        int rule__Unit__Group__3__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 151) ) { return ; }
            // InternalBeeLangTestLanguage.g:2392:1: ( ( ( rule__Unit__NameAssignment_3 )? ) )
            // InternalBeeLangTestLanguage.g:2393:1: ( ( rule__Unit__NameAssignment_3 )? )
            {
            // InternalBeeLangTestLanguage.g:2393:1: ( ( rule__Unit__NameAssignment_3 )? )
            // InternalBeeLangTestLanguage.g:2394:2: ( rule__Unit__NameAssignment_3 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getNameAssignment_3()); 
            }
            // InternalBeeLangTestLanguage.g:2395:2: ( rule__Unit__NameAssignment_3 )?
            int alt35=2;
            int LA35_0 = input.LA(1);

            if ( (LA35_0==RULE_ID) ) {
                alt35=1;
            }
            switch (alt35) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:2395:3: rule__Unit__NameAssignment_3
                    {
                    pushFollow(FOLLOW_2);
                    rule__Unit__NameAssignment_3();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getNameAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 151, rule__Unit__Group__3__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group__3__Impl"


    // $ANTLR start "rule__Unit__Group__4"
    // InternalBeeLangTestLanguage.g:2403:1: rule__Unit__Group__4 : rule__Unit__Group__4__Impl rule__Unit__Group__5 ;
    public final void rule__Unit__Group__4() throws RecognitionException {
        int rule__Unit__Group__4_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 152) ) { return ; }
            // InternalBeeLangTestLanguage.g:2407:1: ( rule__Unit__Group__4__Impl rule__Unit__Group__5 )
            // InternalBeeLangTestLanguage.g:2408:2: rule__Unit__Group__4__Impl rule__Unit__Group__5
            {
            pushFollow(FOLLOW_6);
            rule__Unit__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Unit__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 152, rule__Unit__Group__4_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group__4"


    // $ANTLR start "rule__Unit__Group__4__Impl"
    // InternalBeeLangTestLanguage.g:2415:1: rule__Unit__Group__4__Impl : ( ( rule__Unit__Group_4__0 )? ) ;
    public final void rule__Unit__Group__4__Impl() throws RecognitionException {
        int rule__Unit__Group__4__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 153) ) { return ; }
            // InternalBeeLangTestLanguage.g:2419:1: ( ( ( rule__Unit__Group_4__0 )? ) )
            // InternalBeeLangTestLanguage.g:2420:1: ( ( rule__Unit__Group_4__0 )? )
            {
            // InternalBeeLangTestLanguage.g:2420:1: ( ( rule__Unit__Group_4__0 )? )
            // InternalBeeLangTestLanguage.g:2421:2: ( rule__Unit__Group_4__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getGroup_4()); 
            }
            // InternalBeeLangTestLanguage.g:2422:2: ( rule__Unit__Group_4__0 )?
            int alt36=2;
            int LA36_0 = input.LA(1);

            if ( (LA36_0==46) ) {
                alt36=1;
            }
            switch (alt36) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:2422:3: rule__Unit__Group_4__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Unit__Group_4__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getGroup_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 153, rule__Unit__Group__4__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group__4__Impl"


    // $ANTLR start "rule__Unit__Group__5"
    // InternalBeeLangTestLanguage.g:2430:1: rule__Unit__Group__5 : rule__Unit__Group__5__Impl rule__Unit__Group__6 ;
    public final void rule__Unit__Group__5() throws RecognitionException {
        int rule__Unit__Group__5_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 154) ) { return ; }
            // InternalBeeLangTestLanguage.g:2434:1: ( rule__Unit__Group__5__Impl rule__Unit__Group__6 )
            // InternalBeeLangTestLanguage.g:2435:2: rule__Unit__Group__5__Impl rule__Unit__Group__6
            {
            pushFollow(FOLLOW_6);
            rule__Unit__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Unit__Group__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 154, rule__Unit__Group__5_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group__5"


    // $ANTLR start "rule__Unit__Group__5__Impl"
    // InternalBeeLangTestLanguage.g:2442:1: rule__Unit__Group__5__Impl : ( ( rule__Unit__Group_5__0 )? ) ;
    public final void rule__Unit__Group__5__Impl() throws RecognitionException {
        int rule__Unit__Group__5__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 155) ) { return ; }
            // InternalBeeLangTestLanguage.g:2446:1: ( ( ( rule__Unit__Group_5__0 )? ) )
            // InternalBeeLangTestLanguage.g:2447:1: ( ( rule__Unit__Group_5__0 )? )
            {
            // InternalBeeLangTestLanguage.g:2447:1: ( ( rule__Unit__Group_5__0 )? )
            // InternalBeeLangTestLanguage.g:2448:2: ( rule__Unit__Group_5__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getGroup_5()); 
            }
            // InternalBeeLangTestLanguage.g:2449:2: ( rule__Unit__Group_5__0 )?
            int alt37=2;
            int LA37_0 = input.LA(1);

            if ( (LA37_0==47) ) {
                alt37=1;
            }
            switch (alt37) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:2449:3: rule__Unit__Group_5__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Unit__Group_5__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getGroup_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 155, rule__Unit__Group__5__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group__5__Impl"


    // $ANTLR start "rule__Unit__Group__6"
    // InternalBeeLangTestLanguage.g:2457:1: rule__Unit__Group__6 : rule__Unit__Group__6__Impl rule__Unit__Group__7 ;
    public final void rule__Unit__Group__6() throws RecognitionException {
        int rule__Unit__Group__6_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 156) ) { return ; }
            // InternalBeeLangTestLanguage.g:2461:1: ( rule__Unit__Group__6__Impl rule__Unit__Group__7 )
            // InternalBeeLangTestLanguage.g:2462:2: rule__Unit__Group__6__Impl rule__Unit__Group__7
            {
            pushFollow(FOLLOW_7);
            rule__Unit__Group__6__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Unit__Group__7();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 156, rule__Unit__Group__6_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group__6"


    // $ANTLR start "rule__Unit__Group__6__Impl"
    // InternalBeeLangTestLanguage.g:2469:1: rule__Unit__Group__6__Impl : ( '{' ) ;
    public final void rule__Unit__Group__6__Impl() throws RecognitionException {
        int rule__Unit__Group__6__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 157) ) { return ; }
            // InternalBeeLangTestLanguage.g:2473:1: ( ( '{' ) )
            // InternalBeeLangTestLanguage.g:2474:1: ( '{' )
            {
            // InternalBeeLangTestLanguage.g:2474:1: ( '{' )
            // InternalBeeLangTestLanguage.g:2475:2: '{'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getLeftCurlyBracketKeyword_6()); 
            }
            match(input,44,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getLeftCurlyBracketKeyword_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 157, rule__Unit__Group__6__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group__6__Impl"


    // $ANTLR start "rule__Unit__Group__7"
    // InternalBeeLangTestLanguage.g:2484:1: rule__Unit__Group__7 : rule__Unit__Group__7__Impl rule__Unit__Group__8 ;
    public final void rule__Unit__Group__7() throws RecognitionException {
        int rule__Unit__Group__7_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 158) ) { return ; }
            // InternalBeeLangTestLanguage.g:2488:1: ( rule__Unit__Group__7__Impl rule__Unit__Group__8 )
            // InternalBeeLangTestLanguage.g:2489:2: rule__Unit__Group__7__Impl rule__Unit__Group__8
            {
            pushFollow(FOLLOW_8);
            rule__Unit__Group__7__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Unit__Group__8();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 158, rule__Unit__Group__7_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group__7"


    // $ANTLR start "rule__Unit__Group__7__Impl"
    // InternalBeeLangTestLanguage.g:2496:1: rule__Unit__Group__7__Impl : ( ( rule__Unit__UnorderedGroup_7 ) ) ;
    public final void rule__Unit__Group__7__Impl() throws RecognitionException {
        int rule__Unit__Group__7__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 159) ) { return ; }
            // InternalBeeLangTestLanguage.g:2500:1: ( ( ( rule__Unit__UnorderedGroup_7 ) ) )
            // InternalBeeLangTestLanguage.g:2501:1: ( ( rule__Unit__UnorderedGroup_7 ) )
            {
            // InternalBeeLangTestLanguage.g:2501:1: ( ( rule__Unit__UnorderedGroup_7 ) )
            // InternalBeeLangTestLanguage.g:2502:2: ( rule__Unit__UnorderedGroup_7 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getUnorderedGroup_7()); 
            }
            // InternalBeeLangTestLanguage.g:2503:2: ( rule__Unit__UnorderedGroup_7 )
            // InternalBeeLangTestLanguage.g:2503:3: rule__Unit__UnorderedGroup_7
            {
            pushFollow(FOLLOW_2);
            rule__Unit__UnorderedGroup_7();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getUnorderedGroup_7()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 159, rule__Unit__Group__7__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group__7__Impl"


    // $ANTLR start "rule__Unit__Group__8"
    // InternalBeeLangTestLanguage.g:2511:1: rule__Unit__Group__8 : rule__Unit__Group__8__Impl ;
    public final void rule__Unit__Group__8() throws RecognitionException {
        int rule__Unit__Group__8_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 160) ) { return ; }
            // InternalBeeLangTestLanguage.g:2515:1: ( rule__Unit__Group__8__Impl )
            // InternalBeeLangTestLanguage.g:2516:2: rule__Unit__Group__8__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Unit__Group__8__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 160, rule__Unit__Group__8_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group__8"


    // $ANTLR start "rule__Unit__Group__8__Impl"
    // InternalBeeLangTestLanguage.g:2522:1: rule__Unit__Group__8__Impl : ( '}' ) ;
    public final void rule__Unit__Group__8__Impl() throws RecognitionException {
        int rule__Unit__Group__8__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 161) ) { return ; }
            // InternalBeeLangTestLanguage.g:2526:1: ( ( '}' ) )
            // InternalBeeLangTestLanguage.g:2527:1: ( '}' )
            {
            // InternalBeeLangTestLanguage.g:2527:1: ( '}' )
            // InternalBeeLangTestLanguage.g:2528:2: '}'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getRightCurlyBracketKeyword_8()); 
            }
            match(input,45,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getRightCurlyBracketKeyword_8()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 161, rule__Unit__Group__8__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group__8__Impl"


    // $ANTLR start "rule__Unit__Group_4__0"
    // InternalBeeLangTestLanguage.g:2538:1: rule__Unit__Group_4__0 : rule__Unit__Group_4__0__Impl rule__Unit__Group_4__1 ;
    public final void rule__Unit__Group_4__0() throws RecognitionException {
        int rule__Unit__Group_4__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 162) ) { return ; }
            // InternalBeeLangTestLanguage.g:2542:1: ( rule__Unit__Group_4__0__Impl rule__Unit__Group_4__1 )
            // InternalBeeLangTestLanguage.g:2543:2: rule__Unit__Group_4__0__Impl rule__Unit__Group_4__1
            {
            pushFollow(FOLLOW_9);
            rule__Unit__Group_4__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Unit__Group_4__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 162, rule__Unit__Group_4__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_4__0"


    // $ANTLR start "rule__Unit__Group_4__0__Impl"
    // InternalBeeLangTestLanguage.g:2550:1: rule__Unit__Group_4__0__Impl : ( 'version' ) ;
    public final void rule__Unit__Group_4__0__Impl() throws RecognitionException {
        int rule__Unit__Group_4__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 163) ) { return ; }
            // InternalBeeLangTestLanguage.g:2554:1: ( ( 'version' ) )
            // InternalBeeLangTestLanguage.g:2555:1: ( 'version' )
            {
            // InternalBeeLangTestLanguage.g:2555:1: ( 'version' )
            // InternalBeeLangTestLanguage.g:2556:2: 'version'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getVersionKeyword_4_0()); 
            }
            match(input,46,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getVersionKeyword_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 163, rule__Unit__Group_4__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_4__0__Impl"


    // $ANTLR start "rule__Unit__Group_4__1"
    // InternalBeeLangTestLanguage.g:2565:1: rule__Unit__Group_4__1 : rule__Unit__Group_4__1__Impl ;
    public final void rule__Unit__Group_4__1() throws RecognitionException {
        int rule__Unit__Group_4__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 164) ) { return ; }
            // InternalBeeLangTestLanguage.g:2569:1: ( rule__Unit__Group_4__1__Impl )
            // InternalBeeLangTestLanguage.g:2570:2: rule__Unit__Group_4__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Unit__Group_4__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 164, rule__Unit__Group_4__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_4__1"


    // $ANTLR start "rule__Unit__Group_4__1__Impl"
    // InternalBeeLangTestLanguage.g:2576:1: rule__Unit__Group_4__1__Impl : ( ( rule__Unit__VersionAssignment_4_1 ) ) ;
    public final void rule__Unit__Group_4__1__Impl() throws RecognitionException {
        int rule__Unit__Group_4__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 165) ) { return ; }
            // InternalBeeLangTestLanguage.g:2580:1: ( ( ( rule__Unit__VersionAssignment_4_1 ) ) )
            // InternalBeeLangTestLanguage.g:2581:1: ( ( rule__Unit__VersionAssignment_4_1 ) )
            {
            // InternalBeeLangTestLanguage.g:2581:1: ( ( rule__Unit__VersionAssignment_4_1 ) )
            // InternalBeeLangTestLanguage.g:2582:2: ( rule__Unit__VersionAssignment_4_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getVersionAssignment_4_1()); 
            }
            // InternalBeeLangTestLanguage.g:2583:2: ( rule__Unit__VersionAssignment_4_1 )
            // InternalBeeLangTestLanguage.g:2583:3: rule__Unit__VersionAssignment_4_1
            {
            pushFollow(FOLLOW_2);
            rule__Unit__VersionAssignment_4_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getVersionAssignment_4_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 165, rule__Unit__Group_4__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_4__1__Impl"


    // $ANTLR start "rule__Unit__Group_5__0"
    // InternalBeeLangTestLanguage.g:2592:1: rule__Unit__Group_5__0 : rule__Unit__Group_5__0__Impl rule__Unit__Group_5__1 ;
    public final void rule__Unit__Group_5__0() throws RecognitionException {
        int rule__Unit__Group_5__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 166) ) { return ; }
            // InternalBeeLangTestLanguage.g:2596:1: ( rule__Unit__Group_5__0__Impl rule__Unit__Group_5__1 )
            // InternalBeeLangTestLanguage.g:2597:2: rule__Unit__Group_5__0__Impl rule__Unit__Group_5__1
            {
            pushFollow(FOLLOW_9);
            rule__Unit__Group_5__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Unit__Group_5__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 166, rule__Unit__Group_5__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_5__0"


    // $ANTLR start "rule__Unit__Group_5__0__Impl"
    // InternalBeeLangTestLanguage.g:2604:1: rule__Unit__Group_5__0__Impl : ( 'implements' ) ;
    public final void rule__Unit__Group_5__0__Impl() throws RecognitionException {
        int rule__Unit__Group_5__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 167) ) { return ; }
            // InternalBeeLangTestLanguage.g:2608:1: ( ( 'implements' ) )
            // InternalBeeLangTestLanguage.g:2609:1: ( 'implements' )
            {
            // InternalBeeLangTestLanguage.g:2609:1: ( 'implements' )
            // InternalBeeLangTestLanguage.g:2610:2: 'implements'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getImplementsKeyword_5_0()); 
            }
            match(input,47,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getImplementsKeyword_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 167, rule__Unit__Group_5__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_5__0__Impl"


    // $ANTLR start "rule__Unit__Group_5__1"
    // InternalBeeLangTestLanguage.g:2619:1: rule__Unit__Group_5__1 : rule__Unit__Group_5__1__Impl rule__Unit__Group_5__2 ;
    public final void rule__Unit__Group_5__1() throws RecognitionException {
        int rule__Unit__Group_5__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 168) ) { return ; }
            // InternalBeeLangTestLanguage.g:2623:1: ( rule__Unit__Group_5__1__Impl rule__Unit__Group_5__2 )
            // InternalBeeLangTestLanguage.g:2624:2: rule__Unit__Group_5__1__Impl rule__Unit__Group_5__2
            {
            pushFollow(FOLLOW_10);
            rule__Unit__Group_5__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Unit__Group_5__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 168, rule__Unit__Group_5__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_5__1"


    // $ANTLR start "rule__Unit__Group_5__1__Impl"
    // InternalBeeLangTestLanguage.g:2631:1: rule__Unit__Group_5__1__Impl : ( ( rule__Unit__ImplementsAssignment_5_1 ) ) ;
    public final void rule__Unit__Group_5__1__Impl() throws RecognitionException {
        int rule__Unit__Group_5__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 169) ) { return ; }
            // InternalBeeLangTestLanguage.g:2635:1: ( ( ( rule__Unit__ImplementsAssignment_5_1 ) ) )
            // InternalBeeLangTestLanguage.g:2636:1: ( ( rule__Unit__ImplementsAssignment_5_1 ) )
            {
            // InternalBeeLangTestLanguage.g:2636:1: ( ( rule__Unit__ImplementsAssignment_5_1 ) )
            // InternalBeeLangTestLanguage.g:2637:2: ( rule__Unit__ImplementsAssignment_5_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getImplementsAssignment_5_1()); 
            }
            // InternalBeeLangTestLanguage.g:2638:2: ( rule__Unit__ImplementsAssignment_5_1 )
            // InternalBeeLangTestLanguage.g:2638:3: rule__Unit__ImplementsAssignment_5_1
            {
            pushFollow(FOLLOW_2);
            rule__Unit__ImplementsAssignment_5_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getImplementsAssignment_5_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 169, rule__Unit__Group_5__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_5__1__Impl"


    // $ANTLR start "rule__Unit__Group_5__2"
    // InternalBeeLangTestLanguage.g:2646:1: rule__Unit__Group_5__2 : rule__Unit__Group_5__2__Impl ;
    public final void rule__Unit__Group_5__2() throws RecognitionException {
        int rule__Unit__Group_5__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 170) ) { return ; }
            // InternalBeeLangTestLanguage.g:2650:1: ( rule__Unit__Group_5__2__Impl )
            // InternalBeeLangTestLanguage.g:2651:2: rule__Unit__Group_5__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Unit__Group_5__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 170, rule__Unit__Group_5__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_5__2"


    // $ANTLR start "rule__Unit__Group_5__2__Impl"
    // InternalBeeLangTestLanguage.g:2657:1: rule__Unit__Group_5__2__Impl : ( ( rule__Unit__Group_5_2__0 )* ) ;
    public final void rule__Unit__Group_5__2__Impl() throws RecognitionException {
        int rule__Unit__Group_5__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 171) ) { return ; }
            // InternalBeeLangTestLanguage.g:2661:1: ( ( ( rule__Unit__Group_5_2__0 )* ) )
            // InternalBeeLangTestLanguage.g:2662:1: ( ( rule__Unit__Group_5_2__0 )* )
            {
            // InternalBeeLangTestLanguage.g:2662:1: ( ( rule__Unit__Group_5_2__0 )* )
            // InternalBeeLangTestLanguage.g:2663:2: ( rule__Unit__Group_5_2__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getGroup_5_2()); 
            }
            // InternalBeeLangTestLanguage.g:2664:2: ( rule__Unit__Group_5_2__0 )*
            loop38:
            do {
                int alt38=2;
                int LA38_0 = input.LA(1);

                if ( (LA38_0==48) ) {
                    alt38=1;
                }


                switch (alt38) {
            	case 1 :
            	    // InternalBeeLangTestLanguage.g:2664:3: rule__Unit__Group_5_2__0
            	    {
            	    pushFollow(FOLLOW_11);
            	    rule__Unit__Group_5_2__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop38;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getGroup_5_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 171, rule__Unit__Group_5__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_5__2__Impl"


    // $ANTLR start "rule__Unit__Group_5_2__0"
    // InternalBeeLangTestLanguage.g:2673:1: rule__Unit__Group_5_2__0 : rule__Unit__Group_5_2__0__Impl rule__Unit__Group_5_2__1 ;
    public final void rule__Unit__Group_5_2__0() throws RecognitionException {
        int rule__Unit__Group_5_2__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 172) ) { return ; }
            // InternalBeeLangTestLanguage.g:2677:1: ( rule__Unit__Group_5_2__0__Impl rule__Unit__Group_5_2__1 )
            // InternalBeeLangTestLanguage.g:2678:2: rule__Unit__Group_5_2__0__Impl rule__Unit__Group_5_2__1
            {
            pushFollow(FOLLOW_9);
            rule__Unit__Group_5_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Unit__Group_5_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 172, rule__Unit__Group_5_2__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_5_2__0"


    // $ANTLR start "rule__Unit__Group_5_2__0__Impl"
    // InternalBeeLangTestLanguage.g:2685:1: rule__Unit__Group_5_2__0__Impl : ( ',' ) ;
    public final void rule__Unit__Group_5_2__0__Impl() throws RecognitionException {
        int rule__Unit__Group_5_2__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 173) ) { return ; }
            // InternalBeeLangTestLanguage.g:2689:1: ( ( ',' ) )
            // InternalBeeLangTestLanguage.g:2690:1: ( ',' )
            {
            // InternalBeeLangTestLanguage.g:2690:1: ( ',' )
            // InternalBeeLangTestLanguage.g:2691:2: ','
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getCommaKeyword_5_2_0()); 
            }
            match(input,48,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getCommaKeyword_5_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 173, rule__Unit__Group_5_2__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_5_2__0__Impl"


    // $ANTLR start "rule__Unit__Group_5_2__1"
    // InternalBeeLangTestLanguage.g:2700:1: rule__Unit__Group_5_2__1 : rule__Unit__Group_5_2__1__Impl ;
    public final void rule__Unit__Group_5_2__1() throws RecognitionException {
        int rule__Unit__Group_5_2__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 174) ) { return ; }
            // InternalBeeLangTestLanguage.g:2704:1: ( rule__Unit__Group_5_2__1__Impl )
            // InternalBeeLangTestLanguage.g:2705:2: rule__Unit__Group_5_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Unit__Group_5_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 174, rule__Unit__Group_5_2__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_5_2__1"


    // $ANTLR start "rule__Unit__Group_5_2__1__Impl"
    // InternalBeeLangTestLanguage.g:2711:1: rule__Unit__Group_5_2__1__Impl : ( ( rule__Unit__ImplementsAssignment_5_2_1 ) ) ;
    public final void rule__Unit__Group_5_2__1__Impl() throws RecognitionException {
        int rule__Unit__Group_5_2__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 175) ) { return ; }
            // InternalBeeLangTestLanguage.g:2715:1: ( ( ( rule__Unit__ImplementsAssignment_5_2_1 ) ) )
            // InternalBeeLangTestLanguage.g:2716:1: ( ( rule__Unit__ImplementsAssignment_5_2_1 ) )
            {
            // InternalBeeLangTestLanguage.g:2716:1: ( ( rule__Unit__ImplementsAssignment_5_2_1 ) )
            // InternalBeeLangTestLanguage.g:2717:2: ( rule__Unit__ImplementsAssignment_5_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getImplementsAssignment_5_2_1()); 
            }
            // InternalBeeLangTestLanguage.g:2718:2: ( rule__Unit__ImplementsAssignment_5_2_1 )
            // InternalBeeLangTestLanguage.g:2718:3: rule__Unit__ImplementsAssignment_5_2_1
            {
            pushFollow(FOLLOW_2);
            rule__Unit__ImplementsAssignment_5_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getImplementsAssignment_5_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 175, rule__Unit__Group_5_2__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_5_2__1__Impl"


    // $ANTLR start "rule__Unit__Group_7_0__0"
    // InternalBeeLangTestLanguage.g:2727:1: rule__Unit__Group_7_0__0 : rule__Unit__Group_7_0__0__Impl rule__Unit__Group_7_0__1 ;
    public final void rule__Unit__Group_7_0__0() throws RecognitionException {
        int rule__Unit__Group_7_0__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 176) ) { return ; }
            // InternalBeeLangTestLanguage.g:2731:1: ( rule__Unit__Group_7_0__0__Impl rule__Unit__Group_7_0__1 )
            // InternalBeeLangTestLanguage.g:2732:2: rule__Unit__Group_7_0__0__Impl rule__Unit__Group_7_0__1
            {
            pushFollow(FOLLOW_12);
            rule__Unit__Group_7_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Unit__Group_7_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 176, rule__Unit__Group_7_0__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_0__0"


    // $ANTLR start "rule__Unit__Group_7_0__0__Impl"
    // InternalBeeLangTestLanguage.g:2739:1: rule__Unit__Group_7_0__0__Impl : ( 'source' ) ;
    public final void rule__Unit__Group_7_0__0__Impl() throws RecognitionException {
        int rule__Unit__Group_7_0__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 177) ) { return ; }
            // InternalBeeLangTestLanguage.g:2743:1: ( ( 'source' ) )
            // InternalBeeLangTestLanguage.g:2744:1: ( 'source' )
            {
            // InternalBeeLangTestLanguage.g:2744:1: ( 'source' )
            // InternalBeeLangTestLanguage.g:2745:2: 'source'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getSourceKeyword_7_0_0()); 
            }
            match(input,40,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getSourceKeyword_7_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 177, rule__Unit__Group_7_0__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_0__0__Impl"


    // $ANTLR start "rule__Unit__Group_7_0__1"
    // InternalBeeLangTestLanguage.g:2754:1: rule__Unit__Group_7_0__1 : rule__Unit__Group_7_0__1__Impl rule__Unit__Group_7_0__2 ;
    public final void rule__Unit__Group_7_0__1() throws RecognitionException {
        int rule__Unit__Group_7_0__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 178) ) { return ; }
            // InternalBeeLangTestLanguage.g:2758:1: ( rule__Unit__Group_7_0__1__Impl rule__Unit__Group_7_0__2 )
            // InternalBeeLangTestLanguage.g:2759:2: rule__Unit__Group_7_0__1__Impl rule__Unit__Group_7_0__2
            {
            pushFollow(FOLLOW_13);
            rule__Unit__Group_7_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Unit__Group_7_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 178, rule__Unit__Group_7_0__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_0__1"


    // $ANTLR start "rule__Unit__Group_7_0__1__Impl"
    // InternalBeeLangTestLanguage.g:2766:1: rule__Unit__Group_7_0__1__Impl : ( ':' ) ;
    public final void rule__Unit__Group_7_0__1__Impl() throws RecognitionException {
        int rule__Unit__Group_7_0__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 179) ) { return ; }
            // InternalBeeLangTestLanguage.g:2770:1: ( ( ':' ) )
            // InternalBeeLangTestLanguage.g:2771:1: ( ':' )
            {
            // InternalBeeLangTestLanguage.g:2771:1: ( ':' )
            // InternalBeeLangTestLanguage.g:2772:2: ':'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getColonKeyword_7_0_1()); 
            }
            match(input,49,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getColonKeyword_7_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 179, rule__Unit__Group_7_0__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_0__1__Impl"


    // $ANTLR start "rule__Unit__Group_7_0__2"
    // InternalBeeLangTestLanguage.g:2781:1: rule__Unit__Group_7_0__2 : rule__Unit__Group_7_0__2__Impl rule__Unit__Group_7_0__3 ;
    public final void rule__Unit__Group_7_0__2() throws RecognitionException {
        int rule__Unit__Group_7_0__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 180) ) { return ; }
            // InternalBeeLangTestLanguage.g:2785:1: ( rule__Unit__Group_7_0__2__Impl rule__Unit__Group_7_0__3 )
            // InternalBeeLangTestLanguage.g:2786:2: rule__Unit__Group_7_0__2__Impl rule__Unit__Group_7_0__3
            {
            pushFollow(FOLLOW_14);
            rule__Unit__Group_7_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Unit__Group_7_0__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 180, rule__Unit__Group_7_0__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_0__2"


    // $ANTLR start "rule__Unit__Group_7_0__2__Impl"
    // InternalBeeLangTestLanguage.g:2793:1: rule__Unit__Group_7_0__2__Impl : ( ( rule__Unit__SourceLocationAssignment_7_0_2 ) ) ;
    public final void rule__Unit__Group_7_0__2__Impl() throws RecognitionException {
        int rule__Unit__Group_7_0__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 181) ) { return ; }
            // InternalBeeLangTestLanguage.g:2797:1: ( ( ( rule__Unit__SourceLocationAssignment_7_0_2 ) ) )
            // InternalBeeLangTestLanguage.g:2798:1: ( ( rule__Unit__SourceLocationAssignment_7_0_2 ) )
            {
            // InternalBeeLangTestLanguage.g:2798:1: ( ( rule__Unit__SourceLocationAssignment_7_0_2 ) )
            // InternalBeeLangTestLanguage.g:2799:2: ( rule__Unit__SourceLocationAssignment_7_0_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getSourceLocationAssignment_7_0_2()); 
            }
            // InternalBeeLangTestLanguage.g:2800:2: ( rule__Unit__SourceLocationAssignment_7_0_2 )
            // InternalBeeLangTestLanguage.g:2800:3: rule__Unit__SourceLocationAssignment_7_0_2
            {
            pushFollow(FOLLOW_2);
            rule__Unit__SourceLocationAssignment_7_0_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getSourceLocationAssignment_7_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 181, rule__Unit__Group_7_0__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_0__2__Impl"


    // $ANTLR start "rule__Unit__Group_7_0__3"
    // InternalBeeLangTestLanguage.g:2808:1: rule__Unit__Group_7_0__3 : rule__Unit__Group_7_0__3__Impl ;
    public final void rule__Unit__Group_7_0__3() throws RecognitionException {
        int rule__Unit__Group_7_0__3_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 182) ) { return ; }
            // InternalBeeLangTestLanguage.g:2812:1: ( rule__Unit__Group_7_0__3__Impl )
            // InternalBeeLangTestLanguage.g:2813:2: rule__Unit__Group_7_0__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Unit__Group_7_0__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 182, rule__Unit__Group_7_0__3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_0__3"


    // $ANTLR start "rule__Unit__Group_7_0__3__Impl"
    // InternalBeeLangTestLanguage.g:2819:1: rule__Unit__Group_7_0__3__Impl : ( ';' ) ;
    public final void rule__Unit__Group_7_0__3__Impl() throws RecognitionException {
        int rule__Unit__Group_7_0__3__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 183) ) { return ; }
            // InternalBeeLangTestLanguage.g:2823:1: ( ( ';' ) )
            // InternalBeeLangTestLanguage.g:2824:1: ( ';' )
            {
            // InternalBeeLangTestLanguage.g:2824:1: ( ';' )
            // InternalBeeLangTestLanguage.g:2825:2: ';'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getSemicolonKeyword_7_0_3()); 
            }
            match(input,50,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getSemicolonKeyword_7_0_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 183, rule__Unit__Group_7_0__3__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_0__3__Impl"


    // $ANTLR start "rule__Unit__Group_7_1__0"
    // InternalBeeLangTestLanguage.g:2835:1: rule__Unit__Group_7_1__0 : rule__Unit__Group_7_1__0__Impl rule__Unit__Group_7_1__1 ;
    public final void rule__Unit__Group_7_1__0() throws RecognitionException {
        int rule__Unit__Group_7_1__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 184) ) { return ; }
            // InternalBeeLangTestLanguage.g:2839:1: ( rule__Unit__Group_7_1__0__Impl rule__Unit__Group_7_1__1 )
            // InternalBeeLangTestLanguage.g:2840:2: rule__Unit__Group_7_1__0__Impl rule__Unit__Group_7_1__1
            {
            pushFollow(FOLLOW_12);
            rule__Unit__Group_7_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Unit__Group_7_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 184, rule__Unit__Group_7_1__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_1__0"


    // $ANTLR start "rule__Unit__Group_7_1__0__Impl"
    // InternalBeeLangTestLanguage.g:2847:1: rule__Unit__Group_7_1__0__Impl : ( 'output' ) ;
    public final void rule__Unit__Group_7_1__0__Impl() throws RecognitionException {
        int rule__Unit__Group_7_1__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 185) ) { return ; }
            // InternalBeeLangTestLanguage.g:2851:1: ( ( 'output' ) )
            // InternalBeeLangTestLanguage.g:2852:1: ( 'output' )
            {
            // InternalBeeLangTestLanguage.g:2852:1: ( 'output' )
            // InternalBeeLangTestLanguage.g:2853:2: 'output'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getOutputKeyword_7_1_0()); 
            }
            match(input,39,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getOutputKeyword_7_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 185, rule__Unit__Group_7_1__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_1__0__Impl"


    // $ANTLR start "rule__Unit__Group_7_1__1"
    // InternalBeeLangTestLanguage.g:2862:1: rule__Unit__Group_7_1__1 : rule__Unit__Group_7_1__1__Impl rule__Unit__Group_7_1__2 ;
    public final void rule__Unit__Group_7_1__1() throws RecognitionException {
        int rule__Unit__Group_7_1__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 186) ) { return ; }
            // InternalBeeLangTestLanguage.g:2866:1: ( rule__Unit__Group_7_1__1__Impl rule__Unit__Group_7_1__2 )
            // InternalBeeLangTestLanguage.g:2867:2: rule__Unit__Group_7_1__1__Impl rule__Unit__Group_7_1__2
            {
            pushFollow(FOLLOW_13);
            rule__Unit__Group_7_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Unit__Group_7_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 186, rule__Unit__Group_7_1__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_1__1"


    // $ANTLR start "rule__Unit__Group_7_1__1__Impl"
    // InternalBeeLangTestLanguage.g:2874:1: rule__Unit__Group_7_1__1__Impl : ( ':' ) ;
    public final void rule__Unit__Group_7_1__1__Impl() throws RecognitionException {
        int rule__Unit__Group_7_1__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 187) ) { return ; }
            // InternalBeeLangTestLanguage.g:2878:1: ( ( ':' ) )
            // InternalBeeLangTestLanguage.g:2879:1: ( ':' )
            {
            // InternalBeeLangTestLanguage.g:2879:1: ( ':' )
            // InternalBeeLangTestLanguage.g:2880:2: ':'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getColonKeyword_7_1_1()); 
            }
            match(input,49,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getColonKeyword_7_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 187, rule__Unit__Group_7_1__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_1__1__Impl"


    // $ANTLR start "rule__Unit__Group_7_1__2"
    // InternalBeeLangTestLanguage.g:2889:1: rule__Unit__Group_7_1__2 : rule__Unit__Group_7_1__2__Impl rule__Unit__Group_7_1__3 ;
    public final void rule__Unit__Group_7_1__2() throws RecognitionException {
        int rule__Unit__Group_7_1__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 188) ) { return ; }
            // InternalBeeLangTestLanguage.g:2893:1: ( rule__Unit__Group_7_1__2__Impl rule__Unit__Group_7_1__3 )
            // InternalBeeLangTestLanguage.g:2894:2: rule__Unit__Group_7_1__2__Impl rule__Unit__Group_7_1__3
            {
            pushFollow(FOLLOW_14);
            rule__Unit__Group_7_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Unit__Group_7_1__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 188, rule__Unit__Group_7_1__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_1__2"


    // $ANTLR start "rule__Unit__Group_7_1__2__Impl"
    // InternalBeeLangTestLanguage.g:2901:1: rule__Unit__Group_7_1__2__Impl : ( ( rule__Unit__OutputLocationAssignment_7_1_2 ) ) ;
    public final void rule__Unit__Group_7_1__2__Impl() throws RecognitionException {
        int rule__Unit__Group_7_1__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 189) ) { return ; }
            // InternalBeeLangTestLanguage.g:2905:1: ( ( ( rule__Unit__OutputLocationAssignment_7_1_2 ) ) )
            // InternalBeeLangTestLanguage.g:2906:1: ( ( rule__Unit__OutputLocationAssignment_7_1_2 ) )
            {
            // InternalBeeLangTestLanguage.g:2906:1: ( ( rule__Unit__OutputLocationAssignment_7_1_2 ) )
            // InternalBeeLangTestLanguage.g:2907:2: ( rule__Unit__OutputLocationAssignment_7_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getOutputLocationAssignment_7_1_2()); 
            }
            // InternalBeeLangTestLanguage.g:2908:2: ( rule__Unit__OutputLocationAssignment_7_1_2 )
            // InternalBeeLangTestLanguage.g:2908:3: rule__Unit__OutputLocationAssignment_7_1_2
            {
            pushFollow(FOLLOW_2);
            rule__Unit__OutputLocationAssignment_7_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getOutputLocationAssignment_7_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 189, rule__Unit__Group_7_1__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_1__2__Impl"


    // $ANTLR start "rule__Unit__Group_7_1__3"
    // InternalBeeLangTestLanguage.g:2916:1: rule__Unit__Group_7_1__3 : rule__Unit__Group_7_1__3__Impl ;
    public final void rule__Unit__Group_7_1__3() throws RecognitionException {
        int rule__Unit__Group_7_1__3_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 190) ) { return ; }
            // InternalBeeLangTestLanguage.g:2920:1: ( rule__Unit__Group_7_1__3__Impl )
            // InternalBeeLangTestLanguage.g:2921:2: rule__Unit__Group_7_1__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Unit__Group_7_1__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 190, rule__Unit__Group_7_1__3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_1__3"


    // $ANTLR start "rule__Unit__Group_7_1__3__Impl"
    // InternalBeeLangTestLanguage.g:2927:1: rule__Unit__Group_7_1__3__Impl : ( ';' ) ;
    public final void rule__Unit__Group_7_1__3__Impl() throws RecognitionException {
        int rule__Unit__Group_7_1__3__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 191) ) { return ; }
            // InternalBeeLangTestLanguage.g:2931:1: ( ( ';' ) )
            // InternalBeeLangTestLanguage.g:2932:1: ( ';' )
            {
            // InternalBeeLangTestLanguage.g:2932:1: ( ';' )
            // InternalBeeLangTestLanguage.g:2933:2: ';'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getSemicolonKeyword_7_1_3()); 
            }
            match(input,50,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getSemicolonKeyword_7_1_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 191, rule__Unit__Group_7_1__3__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_1__3__Impl"


    // $ANTLR start "rule__Unit__Group_7_2__0"
    // InternalBeeLangTestLanguage.g:2943:1: rule__Unit__Group_7_2__0 : rule__Unit__Group_7_2__0__Impl rule__Unit__Group_7_2__1 ;
    public final void rule__Unit__Group_7_2__0() throws RecognitionException {
        int rule__Unit__Group_7_2__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 192) ) { return ; }
            // InternalBeeLangTestLanguage.g:2947:1: ( rule__Unit__Group_7_2__0__Impl rule__Unit__Group_7_2__1 )
            // InternalBeeLangTestLanguage.g:2948:2: rule__Unit__Group_7_2__0__Impl rule__Unit__Group_7_2__1
            {
            pushFollow(FOLLOW_12);
            rule__Unit__Group_7_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Unit__Group_7_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 192, rule__Unit__Group_7_2__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_2__0"


    // $ANTLR start "rule__Unit__Group_7_2__0__Impl"
    // InternalBeeLangTestLanguage.g:2955:1: rule__Unit__Group_7_2__0__Impl : ( 'provides' ) ;
    public final void rule__Unit__Group_7_2__0__Impl() throws RecognitionException {
        int rule__Unit__Group_7_2__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 193) ) { return ; }
            // InternalBeeLangTestLanguage.g:2959:1: ( ( 'provides' ) )
            // InternalBeeLangTestLanguage.g:2960:1: ( 'provides' )
            {
            // InternalBeeLangTestLanguage.g:2960:1: ( 'provides' )
            // InternalBeeLangTestLanguage.g:2961:2: 'provides'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getProvidesKeyword_7_2_0()); 
            }
            match(input,51,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getProvidesKeyword_7_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 193, rule__Unit__Group_7_2__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_2__0__Impl"


    // $ANTLR start "rule__Unit__Group_7_2__1"
    // InternalBeeLangTestLanguage.g:2970:1: rule__Unit__Group_7_2__1 : rule__Unit__Group_7_2__1__Impl rule__Unit__Group_7_2__2 ;
    public final void rule__Unit__Group_7_2__1() throws RecognitionException {
        int rule__Unit__Group_7_2__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 194) ) { return ; }
            // InternalBeeLangTestLanguage.g:2974:1: ( rule__Unit__Group_7_2__1__Impl rule__Unit__Group_7_2__2 )
            // InternalBeeLangTestLanguage.g:2975:2: rule__Unit__Group_7_2__1__Impl rule__Unit__Group_7_2__2
            {
            pushFollow(FOLLOW_15);
            rule__Unit__Group_7_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Unit__Group_7_2__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 194, rule__Unit__Group_7_2__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_2__1"


    // $ANTLR start "rule__Unit__Group_7_2__1__Impl"
    // InternalBeeLangTestLanguage.g:2982:1: rule__Unit__Group_7_2__1__Impl : ( ':' ) ;
    public final void rule__Unit__Group_7_2__1__Impl() throws RecognitionException {
        int rule__Unit__Group_7_2__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 195) ) { return ; }
            // InternalBeeLangTestLanguage.g:2986:1: ( ( ':' ) )
            // InternalBeeLangTestLanguage.g:2987:1: ( ':' )
            {
            // InternalBeeLangTestLanguage.g:2987:1: ( ':' )
            // InternalBeeLangTestLanguage.g:2988:2: ':'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getColonKeyword_7_2_1()); 
            }
            match(input,49,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getColonKeyword_7_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 195, rule__Unit__Group_7_2__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_2__1__Impl"


    // $ANTLR start "rule__Unit__Group_7_2__2"
    // InternalBeeLangTestLanguage.g:2997:1: rule__Unit__Group_7_2__2 : rule__Unit__Group_7_2__2__Impl rule__Unit__Group_7_2__3 ;
    public final void rule__Unit__Group_7_2__2() throws RecognitionException {
        int rule__Unit__Group_7_2__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 196) ) { return ; }
            // InternalBeeLangTestLanguage.g:3001:1: ( rule__Unit__Group_7_2__2__Impl rule__Unit__Group_7_2__3 )
            // InternalBeeLangTestLanguage.g:3002:2: rule__Unit__Group_7_2__2__Impl rule__Unit__Group_7_2__3
            {
            pushFollow(FOLLOW_14);
            rule__Unit__Group_7_2__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Unit__Group_7_2__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 196, rule__Unit__Group_7_2__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_2__2"


    // $ANTLR start "rule__Unit__Group_7_2__2__Impl"
    // InternalBeeLangTestLanguage.g:3009:1: rule__Unit__Group_7_2__2__Impl : ( ( rule__Unit__ProvidedCapabilitiesAssignment_7_2_2 ) ) ;
    public final void rule__Unit__Group_7_2__2__Impl() throws RecognitionException {
        int rule__Unit__Group_7_2__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 197) ) { return ; }
            // InternalBeeLangTestLanguage.g:3013:1: ( ( ( rule__Unit__ProvidedCapabilitiesAssignment_7_2_2 ) ) )
            // InternalBeeLangTestLanguage.g:3014:1: ( ( rule__Unit__ProvidedCapabilitiesAssignment_7_2_2 ) )
            {
            // InternalBeeLangTestLanguage.g:3014:1: ( ( rule__Unit__ProvidedCapabilitiesAssignment_7_2_2 ) )
            // InternalBeeLangTestLanguage.g:3015:2: ( rule__Unit__ProvidedCapabilitiesAssignment_7_2_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getProvidedCapabilitiesAssignment_7_2_2()); 
            }
            // InternalBeeLangTestLanguage.g:3016:2: ( rule__Unit__ProvidedCapabilitiesAssignment_7_2_2 )
            // InternalBeeLangTestLanguage.g:3016:3: rule__Unit__ProvidedCapabilitiesAssignment_7_2_2
            {
            pushFollow(FOLLOW_2);
            rule__Unit__ProvidedCapabilitiesAssignment_7_2_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getProvidedCapabilitiesAssignment_7_2_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 197, rule__Unit__Group_7_2__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_2__2__Impl"


    // $ANTLR start "rule__Unit__Group_7_2__3"
    // InternalBeeLangTestLanguage.g:3024:1: rule__Unit__Group_7_2__3 : rule__Unit__Group_7_2__3__Impl ;
    public final void rule__Unit__Group_7_2__3() throws RecognitionException {
        int rule__Unit__Group_7_2__3_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 198) ) { return ; }
            // InternalBeeLangTestLanguage.g:3028:1: ( rule__Unit__Group_7_2__3__Impl )
            // InternalBeeLangTestLanguage.g:3029:2: rule__Unit__Group_7_2__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Unit__Group_7_2__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 198, rule__Unit__Group_7_2__3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_2__3"


    // $ANTLR start "rule__Unit__Group_7_2__3__Impl"
    // InternalBeeLangTestLanguage.g:3035:1: rule__Unit__Group_7_2__3__Impl : ( ';' ) ;
    public final void rule__Unit__Group_7_2__3__Impl() throws RecognitionException {
        int rule__Unit__Group_7_2__3__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 199) ) { return ; }
            // InternalBeeLangTestLanguage.g:3039:1: ( ( ';' ) )
            // InternalBeeLangTestLanguage.g:3040:1: ( ';' )
            {
            // InternalBeeLangTestLanguage.g:3040:1: ( ';' )
            // InternalBeeLangTestLanguage.g:3041:2: ';'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getSemicolonKeyword_7_2_3()); 
            }
            match(input,50,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getSemicolonKeyword_7_2_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 199, rule__Unit__Group_7_2__3__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_2__3__Impl"


    // $ANTLR start "rule__Unit__Group_7_3__0"
    // InternalBeeLangTestLanguage.g:3051:1: rule__Unit__Group_7_3__0 : rule__Unit__Group_7_3__0__Impl rule__Unit__Group_7_3__1 ;
    public final void rule__Unit__Group_7_3__0() throws RecognitionException {
        int rule__Unit__Group_7_3__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 200) ) { return ; }
            // InternalBeeLangTestLanguage.g:3055:1: ( rule__Unit__Group_7_3__0__Impl rule__Unit__Group_7_3__1 )
            // InternalBeeLangTestLanguage.g:3056:2: rule__Unit__Group_7_3__0__Impl rule__Unit__Group_7_3__1
            {
            pushFollow(FOLLOW_12);
            rule__Unit__Group_7_3__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Unit__Group_7_3__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 200, rule__Unit__Group_7_3__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_3__0"


    // $ANTLR start "rule__Unit__Group_7_3__0__Impl"
    // InternalBeeLangTestLanguage.g:3063:1: rule__Unit__Group_7_3__0__Impl : ( 'requires' ) ;
    public final void rule__Unit__Group_7_3__0__Impl() throws RecognitionException {
        int rule__Unit__Group_7_3__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 201) ) { return ; }
            // InternalBeeLangTestLanguage.g:3067:1: ( ( 'requires' ) )
            // InternalBeeLangTestLanguage.g:3068:1: ( 'requires' )
            {
            // InternalBeeLangTestLanguage.g:3068:1: ( 'requires' )
            // InternalBeeLangTestLanguage.g:3069:2: 'requires'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getRequiresKeyword_7_3_0()); 
            }
            match(input,52,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getRequiresKeyword_7_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 201, rule__Unit__Group_7_3__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_3__0__Impl"


    // $ANTLR start "rule__Unit__Group_7_3__1"
    // InternalBeeLangTestLanguage.g:3078:1: rule__Unit__Group_7_3__1 : rule__Unit__Group_7_3__1__Impl rule__Unit__Group_7_3__2 ;
    public final void rule__Unit__Group_7_3__1() throws RecognitionException {
        int rule__Unit__Group_7_3__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 202) ) { return ; }
            // InternalBeeLangTestLanguage.g:3082:1: ( rule__Unit__Group_7_3__1__Impl rule__Unit__Group_7_3__2 )
            // InternalBeeLangTestLanguage.g:3083:2: rule__Unit__Group_7_3__1__Impl rule__Unit__Group_7_3__2
            {
            pushFollow(FOLLOW_15);
            rule__Unit__Group_7_3__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Unit__Group_7_3__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 202, rule__Unit__Group_7_3__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_3__1"


    // $ANTLR start "rule__Unit__Group_7_3__1__Impl"
    // InternalBeeLangTestLanguage.g:3090:1: rule__Unit__Group_7_3__1__Impl : ( ':' ) ;
    public final void rule__Unit__Group_7_3__1__Impl() throws RecognitionException {
        int rule__Unit__Group_7_3__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 203) ) { return ; }
            // InternalBeeLangTestLanguage.g:3094:1: ( ( ':' ) )
            // InternalBeeLangTestLanguage.g:3095:1: ( ':' )
            {
            // InternalBeeLangTestLanguage.g:3095:1: ( ':' )
            // InternalBeeLangTestLanguage.g:3096:2: ':'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getColonKeyword_7_3_1()); 
            }
            match(input,49,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getColonKeyword_7_3_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 203, rule__Unit__Group_7_3__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_3__1__Impl"


    // $ANTLR start "rule__Unit__Group_7_3__2"
    // InternalBeeLangTestLanguage.g:3105:1: rule__Unit__Group_7_3__2 : rule__Unit__Group_7_3__2__Impl rule__Unit__Group_7_3__3 ;
    public final void rule__Unit__Group_7_3__2() throws RecognitionException {
        int rule__Unit__Group_7_3__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 204) ) { return ; }
            // InternalBeeLangTestLanguage.g:3109:1: ( rule__Unit__Group_7_3__2__Impl rule__Unit__Group_7_3__3 )
            // InternalBeeLangTestLanguage.g:3110:2: rule__Unit__Group_7_3__2__Impl rule__Unit__Group_7_3__3
            {
            pushFollow(FOLLOW_14);
            rule__Unit__Group_7_3__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Unit__Group_7_3__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 204, rule__Unit__Group_7_3__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_3__2"


    // $ANTLR start "rule__Unit__Group_7_3__2__Impl"
    // InternalBeeLangTestLanguage.g:3117:1: rule__Unit__Group_7_3__2__Impl : ( ( rule__Unit__RequiredCapabilitiesAssignment_7_3_2 ) ) ;
    public final void rule__Unit__Group_7_3__2__Impl() throws RecognitionException {
        int rule__Unit__Group_7_3__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 205) ) { return ; }
            // InternalBeeLangTestLanguage.g:3121:1: ( ( ( rule__Unit__RequiredCapabilitiesAssignment_7_3_2 ) ) )
            // InternalBeeLangTestLanguage.g:3122:1: ( ( rule__Unit__RequiredCapabilitiesAssignment_7_3_2 ) )
            {
            // InternalBeeLangTestLanguage.g:3122:1: ( ( rule__Unit__RequiredCapabilitiesAssignment_7_3_2 ) )
            // InternalBeeLangTestLanguage.g:3123:2: ( rule__Unit__RequiredCapabilitiesAssignment_7_3_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getRequiredCapabilitiesAssignment_7_3_2()); 
            }
            // InternalBeeLangTestLanguage.g:3124:2: ( rule__Unit__RequiredCapabilitiesAssignment_7_3_2 )
            // InternalBeeLangTestLanguage.g:3124:3: rule__Unit__RequiredCapabilitiesAssignment_7_3_2
            {
            pushFollow(FOLLOW_2);
            rule__Unit__RequiredCapabilitiesAssignment_7_3_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getRequiredCapabilitiesAssignment_7_3_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 205, rule__Unit__Group_7_3__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_3__2__Impl"


    // $ANTLR start "rule__Unit__Group_7_3__3"
    // InternalBeeLangTestLanguage.g:3132:1: rule__Unit__Group_7_3__3 : rule__Unit__Group_7_3__3__Impl ;
    public final void rule__Unit__Group_7_3__3() throws RecognitionException {
        int rule__Unit__Group_7_3__3_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 206) ) { return ; }
            // InternalBeeLangTestLanguage.g:3136:1: ( rule__Unit__Group_7_3__3__Impl )
            // InternalBeeLangTestLanguage.g:3137:2: rule__Unit__Group_7_3__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Unit__Group_7_3__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 206, rule__Unit__Group_7_3__3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_3__3"


    // $ANTLR start "rule__Unit__Group_7_3__3__Impl"
    // InternalBeeLangTestLanguage.g:3143:1: rule__Unit__Group_7_3__3__Impl : ( ';' ) ;
    public final void rule__Unit__Group_7_3__3__Impl() throws RecognitionException {
        int rule__Unit__Group_7_3__3__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 207) ) { return ; }
            // InternalBeeLangTestLanguage.g:3147:1: ( ( ';' ) )
            // InternalBeeLangTestLanguage.g:3148:1: ( ';' )
            {
            // InternalBeeLangTestLanguage.g:3148:1: ( ';' )
            // InternalBeeLangTestLanguage.g:3149:2: ';'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getSemicolonKeyword_7_3_3()); 
            }
            match(input,50,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getSemicolonKeyword_7_3_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 207, rule__Unit__Group_7_3__3__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_3__3__Impl"


    // $ANTLR start "rule__Unit__Group_7_4__0"
    // InternalBeeLangTestLanguage.g:3159:1: rule__Unit__Group_7_4__0 : rule__Unit__Group_7_4__0__Impl rule__Unit__Group_7_4__1 ;
    public final void rule__Unit__Group_7_4__0() throws RecognitionException {
        int rule__Unit__Group_7_4__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 208) ) { return ; }
            // InternalBeeLangTestLanguage.g:3163:1: ( rule__Unit__Group_7_4__0__Impl rule__Unit__Group_7_4__1 )
            // InternalBeeLangTestLanguage.g:3164:2: rule__Unit__Group_7_4__0__Impl rule__Unit__Group_7_4__1
            {
            pushFollow(FOLLOW_16);
            rule__Unit__Group_7_4__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Unit__Group_7_4__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 208, rule__Unit__Group_7_4__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_4__0"


    // $ANTLR start "rule__Unit__Group_7_4__0__Impl"
    // InternalBeeLangTestLanguage.g:3171:1: rule__Unit__Group_7_4__0__Impl : ( 'requires' ) ;
    public final void rule__Unit__Group_7_4__0__Impl() throws RecognitionException {
        int rule__Unit__Group_7_4__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 209) ) { return ; }
            // InternalBeeLangTestLanguage.g:3175:1: ( ( 'requires' ) )
            // InternalBeeLangTestLanguage.g:3176:1: ( 'requires' )
            {
            // InternalBeeLangTestLanguage.g:3176:1: ( 'requires' )
            // InternalBeeLangTestLanguage.g:3177:2: 'requires'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getRequiresKeyword_7_4_0()); 
            }
            match(input,52,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getRequiresKeyword_7_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 209, rule__Unit__Group_7_4__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_4__0__Impl"


    // $ANTLR start "rule__Unit__Group_7_4__1"
    // InternalBeeLangTestLanguage.g:3186:1: rule__Unit__Group_7_4__1 : rule__Unit__Group_7_4__1__Impl rule__Unit__Group_7_4__2 ;
    public final void rule__Unit__Group_7_4__1() throws RecognitionException {
        int rule__Unit__Group_7_4__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 210) ) { return ; }
            // InternalBeeLangTestLanguage.g:3190:1: ( rule__Unit__Group_7_4__1__Impl rule__Unit__Group_7_4__2 )
            // InternalBeeLangTestLanguage.g:3191:2: rule__Unit__Group_7_4__1__Impl rule__Unit__Group_7_4__2
            {
            pushFollow(FOLLOW_12);
            rule__Unit__Group_7_4__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Unit__Group_7_4__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 210, rule__Unit__Group_7_4__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_4__1"


    // $ANTLR start "rule__Unit__Group_7_4__1__Impl"
    // InternalBeeLangTestLanguage.g:3198:1: rule__Unit__Group_7_4__1__Impl : ( 'env' ) ;
    public final void rule__Unit__Group_7_4__1__Impl() throws RecognitionException {
        int rule__Unit__Group_7_4__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 211) ) { return ; }
            // InternalBeeLangTestLanguage.g:3202:1: ( ( 'env' ) )
            // InternalBeeLangTestLanguage.g:3203:1: ( 'env' )
            {
            // InternalBeeLangTestLanguage.g:3203:1: ( 'env' )
            // InternalBeeLangTestLanguage.g:3204:2: 'env'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getEnvKeyword_7_4_1()); 
            }
            match(input,53,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getEnvKeyword_7_4_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 211, rule__Unit__Group_7_4__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_4__1__Impl"


    // $ANTLR start "rule__Unit__Group_7_4__2"
    // InternalBeeLangTestLanguage.g:3213:1: rule__Unit__Group_7_4__2 : rule__Unit__Group_7_4__2__Impl rule__Unit__Group_7_4__3 ;
    public final void rule__Unit__Group_7_4__2() throws RecognitionException {
        int rule__Unit__Group_7_4__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 212) ) { return ; }
            // InternalBeeLangTestLanguage.g:3217:1: ( rule__Unit__Group_7_4__2__Impl rule__Unit__Group_7_4__3 )
            // InternalBeeLangTestLanguage.g:3218:2: rule__Unit__Group_7_4__2__Impl rule__Unit__Group_7_4__3
            {
            pushFollow(FOLLOW_15);
            rule__Unit__Group_7_4__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Unit__Group_7_4__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 212, rule__Unit__Group_7_4__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_4__2"


    // $ANTLR start "rule__Unit__Group_7_4__2__Impl"
    // InternalBeeLangTestLanguage.g:3225:1: rule__Unit__Group_7_4__2__Impl : ( ':' ) ;
    public final void rule__Unit__Group_7_4__2__Impl() throws RecognitionException {
        int rule__Unit__Group_7_4__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 213) ) { return ; }
            // InternalBeeLangTestLanguage.g:3229:1: ( ( ':' ) )
            // InternalBeeLangTestLanguage.g:3230:1: ( ':' )
            {
            // InternalBeeLangTestLanguage.g:3230:1: ( ':' )
            // InternalBeeLangTestLanguage.g:3231:2: ':'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getColonKeyword_7_4_2()); 
            }
            match(input,49,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getColonKeyword_7_4_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 213, rule__Unit__Group_7_4__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_4__2__Impl"


    // $ANTLR start "rule__Unit__Group_7_4__3"
    // InternalBeeLangTestLanguage.g:3240:1: rule__Unit__Group_7_4__3 : rule__Unit__Group_7_4__3__Impl rule__Unit__Group_7_4__4 ;
    public final void rule__Unit__Group_7_4__3() throws RecognitionException {
        int rule__Unit__Group_7_4__3_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 214) ) { return ; }
            // InternalBeeLangTestLanguage.g:3244:1: ( rule__Unit__Group_7_4__3__Impl rule__Unit__Group_7_4__4 )
            // InternalBeeLangTestLanguage.g:3245:2: rule__Unit__Group_7_4__3__Impl rule__Unit__Group_7_4__4
            {
            pushFollow(FOLLOW_14);
            rule__Unit__Group_7_4__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Unit__Group_7_4__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 214, rule__Unit__Group_7_4__3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_4__3"


    // $ANTLR start "rule__Unit__Group_7_4__3__Impl"
    // InternalBeeLangTestLanguage.g:3252:1: rule__Unit__Group_7_4__3__Impl : ( ( rule__Unit__MetaRequiredCapabilitiesAssignment_7_4_3 ) ) ;
    public final void rule__Unit__Group_7_4__3__Impl() throws RecognitionException {
        int rule__Unit__Group_7_4__3__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 215) ) { return ; }
            // InternalBeeLangTestLanguage.g:3256:1: ( ( ( rule__Unit__MetaRequiredCapabilitiesAssignment_7_4_3 ) ) )
            // InternalBeeLangTestLanguage.g:3257:1: ( ( rule__Unit__MetaRequiredCapabilitiesAssignment_7_4_3 ) )
            {
            // InternalBeeLangTestLanguage.g:3257:1: ( ( rule__Unit__MetaRequiredCapabilitiesAssignment_7_4_3 ) )
            // InternalBeeLangTestLanguage.g:3258:2: ( rule__Unit__MetaRequiredCapabilitiesAssignment_7_4_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getMetaRequiredCapabilitiesAssignment_7_4_3()); 
            }
            // InternalBeeLangTestLanguage.g:3259:2: ( rule__Unit__MetaRequiredCapabilitiesAssignment_7_4_3 )
            // InternalBeeLangTestLanguage.g:3259:3: rule__Unit__MetaRequiredCapabilitiesAssignment_7_4_3
            {
            pushFollow(FOLLOW_2);
            rule__Unit__MetaRequiredCapabilitiesAssignment_7_4_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getMetaRequiredCapabilitiesAssignment_7_4_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 215, rule__Unit__Group_7_4__3__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_4__3__Impl"


    // $ANTLR start "rule__Unit__Group_7_4__4"
    // InternalBeeLangTestLanguage.g:3267:1: rule__Unit__Group_7_4__4 : rule__Unit__Group_7_4__4__Impl ;
    public final void rule__Unit__Group_7_4__4() throws RecognitionException {
        int rule__Unit__Group_7_4__4_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 216) ) { return ; }
            // InternalBeeLangTestLanguage.g:3271:1: ( rule__Unit__Group_7_4__4__Impl )
            // InternalBeeLangTestLanguage.g:3272:2: rule__Unit__Group_7_4__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Unit__Group_7_4__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 216, rule__Unit__Group_7_4__4_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_4__4"


    // $ANTLR start "rule__Unit__Group_7_4__4__Impl"
    // InternalBeeLangTestLanguage.g:3278:1: rule__Unit__Group_7_4__4__Impl : ( ';' ) ;
    public final void rule__Unit__Group_7_4__4__Impl() throws RecognitionException {
        int rule__Unit__Group_7_4__4__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 217) ) { return ; }
            // InternalBeeLangTestLanguage.g:3282:1: ( ( ';' ) )
            // InternalBeeLangTestLanguage.g:3283:1: ( ';' )
            {
            // InternalBeeLangTestLanguage.g:3283:1: ( ';' )
            // InternalBeeLangTestLanguage.g:3284:2: ';'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getSemicolonKeyword_7_4_4()); 
            }
            match(input,50,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getSemicolonKeyword_7_4_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 217, rule__Unit__Group_7_4__4__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_4__4__Impl"


    // $ANTLR start "rule__ProvidedCapability__Group__0"
    // InternalBeeLangTestLanguage.g:3294:1: rule__ProvidedCapability__Group__0 : rule__ProvidedCapability__Group__0__Impl rule__ProvidedCapability__Group__1 ;
    public final void rule__ProvidedCapability__Group__0() throws RecognitionException {
        int rule__ProvidedCapability__Group__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 218) ) { return ; }
            // InternalBeeLangTestLanguage.g:3298:1: ( rule__ProvidedCapability__Group__0__Impl rule__ProvidedCapability__Group__1 )
            // InternalBeeLangTestLanguage.g:3299:2: rule__ProvidedCapability__Group__0__Impl rule__ProvidedCapability__Group__1
            {
            pushFollow(FOLLOW_15);
            rule__ProvidedCapability__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ProvidedCapability__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 218, rule__ProvidedCapability__Group__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__Group__0"


    // $ANTLR start "rule__ProvidedCapability__Group__0__Impl"
    // InternalBeeLangTestLanguage.g:3306:1: rule__ProvidedCapability__Group__0__Impl : ( () ) ;
    public final void rule__ProvidedCapability__Group__0__Impl() throws RecognitionException {
        int rule__ProvidedCapability__Group__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 219) ) { return ; }
            // InternalBeeLangTestLanguage.g:3310:1: ( ( () ) )
            // InternalBeeLangTestLanguage.g:3311:1: ( () )
            {
            // InternalBeeLangTestLanguage.g:3311:1: ( () )
            // InternalBeeLangTestLanguage.g:3312:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProvidedCapabilityAccess().getProvidedCapabilityAction_0()); 
            }
            // InternalBeeLangTestLanguage.g:3313:2: ()
            // InternalBeeLangTestLanguage.g:3313:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getProvidedCapabilityAccess().getProvidedCapabilityAction_0()); 
            }

            }


            }

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 219, rule__ProvidedCapability__Group__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__Group__0__Impl"


    // $ANTLR start "rule__ProvidedCapability__Group__1"
    // InternalBeeLangTestLanguage.g:3321:1: rule__ProvidedCapability__Group__1 : rule__ProvidedCapability__Group__1__Impl rule__ProvidedCapability__Group__2 ;
    public final void rule__ProvidedCapability__Group__1() throws RecognitionException {
        int rule__ProvidedCapability__Group__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 220) ) { return ; }
            // InternalBeeLangTestLanguage.g:3325:1: ( rule__ProvidedCapability__Group__1__Impl rule__ProvidedCapability__Group__2 )
            // InternalBeeLangTestLanguage.g:3326:2: rule__ProvidedCapability__Group__1__Impl rule__ProvidedCapability__Group__2
            {
            pushFollow(FOLLOW_17);
            rule__ProvidedCapability__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ProvidedCapability__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 220, rule__ProvidedCapability__Group__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__Group__1"


    // $ANTLR start "rule__ProvidedCapability__Group__1__Impl"
    // InternalBeeLangTestLanguage.g:3333:1: rule__ProvidedCapability__Group__1__Impl : ( ( rule__ProvidedCapability__Alternatives_1 ) ) ;
    public final void rule__ProvidedCapability__Group__1__Impl() throws RecognitionException {
        int rule__ProvidedCapability__Group__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 221) ) { return ; }
            // InternalBeeLangTestLanguage.g:3337:1: ( ( ( rule__ProvidedCapability__Alternatives_1 ) ) )
            // InternalBeeLangTestLanguage.g:3338:1: ( ( rule__ProvidedCapability__Alternatives_1 ) )
            {
            // InternalBeeLangTestLanguage.g:3338:1: ( ( rule__ProvidedCapability__Alternatives_1 ) )
            // InternalBeeLangTestLanguage.g:3339:2: ( rule__ProvidedCapability__Alternatives_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProvidedCapabilityAccess().getAlternatives_1()); 
            }
            // InternalBeeLangTestLanguage.g:3340:2: ( rule__ProvidedCapability__Alternatives_1 )
            // InternalBeeLangTestLanguage.g:3340:3: rule__ProvidedCapability__Alternatives_1
            {
            pushFollow(FOLLOW_2);
            rule__ProvidedCapability__Alternatives_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getProvidedCapabilityAccess().getAlternatives_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 221, rule__ProvidedCapability__Group__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__Group__1__Impl"


    // $ANTLR start "rule__ProvidedCapability__Group__2"
    // InternalBeeLangTestLanguage.g:3348:1: rule__ProvidedCapability__Group__2 : rule__ProvidedCapability__Group__2__Impl ;
    public final void rule__ProvidedCapability__Group__2() throws RecognitionException {
        int rule__ProvidedCapability__Group__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 222) ) { return ; }
            // InternalBeeLangTestLanguage.g:3352:1: ( rule__ProvidedCapability__Group__2__Impl )
            // InternalBeeLangTestLanguage.g:3353:2: rule__ProvidedCapability__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ProvidedCapability__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 222, rule__ProvidedCapability__Group__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__Group__2"


    // $ANTLR start "rule__ProvidedCapability__Group__2__Impl"
    // InternalBeeLangTestLanguage.g:3359:1: rule__ProvidedCapability__Group__2__Impl : ( ( rule__ProvidedCapability__Group_2__0 )? ) ;
    public final void rule__ProvidedCapability__Group__2__Impl() throws RecognitionException {
        int rule__ProvidedCapability__Group__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 223) ) { return ; }
            // InternalBeeLangTestLanguage.g:3363:1: ( ( ( rule__ProvidedCapability__Group_2__0 )? ) )
            // InternalBeeLangTestLanguage.g:3364:1: ( ( rule__ProvidedCapability__Group_2__0 )? )
            {
            // InternalBeeLangTestLanguage.g:3364:1: ( ( rule__ProvidedCapability__Group_2__0 )? )
            // InternalBeeLangTestLanguage.g:3365:2: ( rule__ProvidedCapability__Group_2__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProvidedCapabilityAccess().getGroup_2()); 
            }
            // InternalBeeLangTestLanguage.g:3366:2: ( rule__ProvidedCapability__Group_2__0 )?
            int alt39=2;
            int LA39_0 = input.LA(1);

            if ( (LA39_0==44) ) {
                alt39=1;
            }
            switch (alt39) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:3366:3: rule__ProvidedCapability__Group_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ProvidedCapability__Group_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getProvidedCapabilityAccess().getGroup_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 223, rule__ProvidedCapability__Group__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__Group__2__Impl"


    // $ANTLR start "rule__ProvidedCapability__Group_2__0"
    // InternalBeeLangTestLanguage.g:3375:1: rule__ProvidedCapability__Group_2__0 : rule__ProvidedCapability__Group_2__0__Impl rule__ProvidedCapability__Group_2__1 ;
    public final void rule__ProvidedCapability__Group_2__0() throws RecognitionException {
        int rule__ProvidedCapability__Group_2__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 224) ) { return ; }
            // InternalBeeLangTestLanguage.g:3379:1: ( rule__ProvidedCapability__Group_2__0__Impl rule__ProvidedCapability__Group_2__1 )
            // InternalBeeLangTestLanguage.g:3380:2: rule__ProvidedCapability__Group_2__0__Impl rule__ProvidedCapability__Group_2__1
            {
            pushFollow(FOLLOW_18);
            rule__ProvidedCapability__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ProvidedCapability__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 224, rule__ProvidedCapability__Group_2__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__Group_2__0"


    // $ANTLR start "rule__ProvidedCapability__Group_2__0__Impl"
    // InternalBeeLangTestLanguage.g:3387:1: rule__ProvidedCapability__Group_2__0__Impl : ( '{' ) ;
    public final void rule__ProvidedCapability__Group_2__0__Impl() throws RecognitionException {
        int rule__ProvidedCapability__Group_2__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 225) ) { return ; }
            // InternalBeeLangTestLanguage.g:3391:1: ( ( '{' ) )
            // InternalBeeLangTestLanguage.g:3392:1: ( '{' )
            {
            // InternalBeeLangTestLanguage.g:3392:1: ( '{' )
            // InternalBeeLangTestLanguage.g:3393:2: '{'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProvidedCapabilityAccess().getLeftCurlyBracketKeyword_2_0()); 
            }
            match(input,44,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getProvidedCapabilityAccess().getLeftCurlyBracketKeyword_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 225, rule__ProvidedCapability__Group_2__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__Group_2__0__Impl"


    // $ANTLR start "rule__ProvidedCapability__Group_2__1"
    // InternalBeeLangTestLanguage.g:3402:1: rule__ProvidedCapability__Group_2__1 : rule__ProvidedCapability__Group_2__1__Impl rule__ProvidedCapability__Group_2__2 ;
    public final void rule__ProvidedCapability__Group_2__1() throws RecognitionException {
        int rule__ProvidedCapability__Group_2__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 226) ) { return ; }
            // InternalBeeLangTestLanguage.g:3406:1: ( rule__ProvidedCapability__Group_2__1__Impl rule__ProvidedCapability__Group_2__2 )
            // InternalBeeLangTestLanguage.g:3407:2: rule__ProvidedCapability__Group_2__1__Impl rule__ProvidedCapability__Group_2__2
            {
            pushFollow(FOLLOW_8);
            rule__ProvidedCapability__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ProvidedCapability__Group_2__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 226, rule__ProvidedCapability__Group_2__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__Group_2__1"


    // $ANTLR start "rule__ProvidedCapability__Group_2__1__Impl"
    // InternalBeeLangTestLanguage.g:3414:1: rule__ProvidedCapability__Group_2__1__Impl : ( ( rule__ProvidedCapability__UnorderedGroup_2_1 ) ) ;
    public final void rule__ProvidedCapability__Group_2__1__Impl() throws RecognitionException {
        int rule__ProvidedCapability__Group_2__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 227) ) { return ; }
            // InternalBeeLangTestLanguage.g:3418:1: ( ( ( rule__ProvidedCapability__UnorderedGroup_2_1 ) ) )
            // InternalBeeLangTestLanguage.g:3419:1: ( ( rule__ProvidedCapability__UnorderedGroup_2_1 ) )
            {
            // InternalBeeLangTestLanguage.g:3419:1: ( ( rule__ProvidedCapability__UnorderedGroup_2_1 ) )
            // InternalBeeLangTestLanguage.g:3420:2: ( rule__ProvidedCapability__UnorderedGroup_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1()); 
            }
            // InternalBeeLangTestLanguage.g:3421:2: ( rule__ProvidedCapability__UnorderedGroup_2_1 )
            // InternalBeeLangTestLanguage.g:3421:3: rule__ProvidedCapability__UnorderedGroup_2_1
            {
            pushFollow(FOLLOW_2);
            rule__ProvidedCapability__UnorderedGroup_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 227, rule__ProvidedCapability__Group_2__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__Group_2__1__Impl"


    // $ANTLR start "rule__ProvidedCapability__Group_2__2"
    // InternalBeeLangTestLanguage.g:3429:1: rule__ProvidedCapability__Group_2__2 : rule__ProvidedCapability__Group_2__2__Impl ;
    public final void rule__ProvidedCapability__Group_2__2() throws RecognitionException {
        int rule__ProvidedCapability__Group_2__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 228) ) { return ; }
            // InternalBeeLangTestLanguage.g:3433:1: ( rule__ProvidedCapability__Group_2__2__Impl )
            // InternalBeeLangTestLanguage.g:3434:2: rule__ProvidedCapability__Group_2__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ProvidedCapability__Group_2__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 228, rule__ProvidedCapability__Group_2__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__Group_2__2"


    // $ANTLR start "rule__ProvidedCapability__Group_2__2__Impl"
    // InternalBeeLangTestLanguage.g:3440:1: rule__ProvidedCapability__Group_2__2__Impl : ( '}' ) ;
    public final void rule__ProvidedCapability__Group_2__2__Impl() throws RecognitionException {
        int rule__ProvidedCapability__Group_2__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 229) ) { return ; }
            // InternalBeeLangTestLanguage.g:3444:1: ( ( '}' ) )
            // InternalBeeLangTestLanguage.g:3445:1: ( '}' )
            {
            // InternalBeeLangTestLanguage.g:3445:1: ( '}' )
            // InternalBeeLangTestLanguage.g:3446:2: '}'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProvidedCapabilityAccess().getRightCurlyBracketKeyword_2_2()); 
            }
            match(input,45,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getProvidedCapabilityAccess().getRightCurlyBracketKeyword_2_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 229, rule__ProvidedCapability__Group_2__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__Group_2__2__Impl"


    // $ANTLR start "rule__ProvidedCapability__Group_2_1_0__0"
    // InternalBeeLangTestLanguage.g:3456:1: rule__ProvidedCapability__Group_2_1_0__0 : rule__ProvidedCapability__Group_2_1_0__0__Impl rule__ProvidedCapability__Group_2_1_0__1 ;
    public final void rule__ProvidedCapability__Group_2_1_0__0() throws RecognitionException {
        int rule__ProvidedCapability__Group_2_1_0__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 230) ) { return ; }
            // InternalBeeLangTestLanguage.g:3460:1: ( rule__ProvidedCapability__Group_2_1_0__0__Impl rule__ProvidedCapability__Group_2_1_0__1 )
            // InternalBeeLangTestLanguage.g:3461:2: rule__ProvidedCapability__Group_2_1_0__0__Impl rule__ProvidedCapability__Group_2_1_0__1
            {
            pushFollow(FOLLOW_12);
            rule__ProvidedCapability__Group_2_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ProvidedCapability__Group_2_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 230, rule__ProvidedCapability__Group_2_1_0__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__Group_2_1_0__0"


    // $ANTLR start "rule__ProvidedCapability__Group_2_1_0__0__Impl"
    // InternalBeeLangTestLanguage.g:3468:1: rule__ProvidedCapability__Group_2_1_0__0__Impl : ( 'when' ) ;
    public final void rule__ProvidedCapability__Group_2_1_0__0__Impl() throws RecognitionException {
        int rule__ProvidedCapability__Group_2_1_0__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 231) ) { return ; }
            // InternalBeeLangTestLanguage.g:3472:1: ( ( 'when' ) )
            // InternalBeeLangTestLanguage.g:3473:1: ( 'when' )
            {
            // InternalBeeLangTestLanguage.g:3473:1: ( 'when' )
            // InternalBeeLangTestLanguage.g:3474:2: 'when'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProvidedCapabilityAccess().getWhenKeyword_2_1_0_0()); 
            }
            match(input,54,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getProvidedCapabilityAccess().getWhenKeyword_2_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 231, rule__ProvidedCapability__Group_2_1_0__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__Group_2_1_0__0__Impl"


    // $ANTLR start "rule__ProvidedCapability__Group_2_1_0__1"
    // InternalBeeLangTestLanguage.g:3483:1: rule__ProvidedCapability__Group_2_1_0__1 : rule__ProvidedCapability__Group_2_1_0__1__Impl rule__ProvidedCapability__Group_2_1_0__2 ;
    public final void rule__ProvidedCapability__Group_2_1_0__1() throws RecognitionException {
        int rule__ProvidedCapability__Group_2_1_0__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 232) ) { return ; }
            // InternalBeeLangTestLanguage.g:3487:1: ( rule__ProvidedCapability__Group_2_1_0__1__Impl rule__ProvidedCapability__Group_2_1_0__2 )
            // InternalBeeLangTestLanguage.g:3488:2: rule__ProvidedCapability__Group_2_1_0__1__Impl rule__ProvidedCapability__Group_2_1_0__2
            {
            pushFollow(FOLLOW_19);
            rule__ProvidedCapability__Group_2_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ProvidedCapability__Group_2_1_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 232, rule__ProvidedCapability__Group_2_1_0__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__Group_2_1_0__1"


    // $ANTLR start "rule__ProvidedCapability__Group_2_1_0__1__Impl"
    // InternalBeeLangTestLanguage.g:3495:1: rule__ProvidedCapability__Group_2_1_0__1__Impl : ( ':' ) ;
    public final void rule__ProvidedCapability__Group_2_1_0__1__Impl() throws RecognitionException {
        int rule__ProvidedCapability__Group_2_1_0__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 233) ) { return ; }
            // InternalBeeLangTestLanguage.g:3499:1: ( ( ':' ) )
            // InternalBeeLangTestLanguage.g:3500:1: ( ':' )
            {
            // InternalBeeLangTestLanguage.g:3500:1: ( ':' )
            // InternalBeeLangTestLanguage.g:3501:2: ':'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProvidedCapabilityAccess().getColonKeyword_2_1_0_1()); 
            }
            match(input,49,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getProvidedCapabilityAccess().getColonKeyword_2_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 233, rule__ProvidedCapability__Group_2_1_0__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__Group_2_1_0__1__Impl"


    // $ANTLR start "rule__ProvidedCapability__Group_2_1_0__2"
    // InternalBeeLangTestLanguage.g:3510:1: rule__ProvidedCapability__Group_2_1_0__2 : rule__ProvidedCapability__Group_2_1_0__2__Impl rule__ProvidedCapability__Group_2_1_0__3 ;
    public final void rule__ProvidedCapability__Group_2_1_0__2() throws RecognitionException {
        int rule__ProvidedCapability__Group_2_1_0__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 234) ) { return ; }
            // InternalBeeLangTestLanguage.g:3514:1: ( rule__ProvidedCapability__Group_2_1_0__2__Impl rule__ProvidedCapability__Group_2_1_0__3 )
            // InternalBeeLangTestLanguage.g:3515:2: rule__ProvidedCapability__Group_2_1_0__2__Impl rule__ProvidedCapability__Group_2_1_0__3
            {
            pushFollow(FOLLOW_14);
            rule__ProvidedCapability__Group_2_1_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ProvidedCapability__Group_2_1_0__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 234, rule__ProvidedCapability__Group_2_1_0__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__Group_2_1_0__2"


    // $ANTLR start "rule__ProvidedCapability__Group_2_1_0__2__Impl"
    // InternalBeeLangTestLanguage.g:3522:1: rule__ProvidedCapability__Group_2_1_0__2__Impl : ( ( rule__ProvidedCapability__CondExprAssignment_2_1_0_2 ) ) ;
    public final void rule__ProvidedCapability__Group_2_1_0__2__Impl() throws RecognitionException {
        int rule__ProvidedCapability__Group_2_1_0__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 235) ) { return ; }
            // InternalBeeLangTestLanguage.g:3526:1: ( ( ( rule__ProvidedCapability__CondExprAssignment_2_1_0_2 ) ) )
            // InternalBeeLangTestLanguage.g:3527:1: ( ( rule__ProvidedCapability__CondExprAssignment_2_1_0_2 ) )
            {
            // InternalBeeLangTestLanguage.g:3527:1: ( ( rule__ProvidedCapability__CondExprAssignment_2_1_0_2 ) )
            // InternalBeeLangTestLanguage.g:3528:2: ( rule__ProvidedCapability__CondExprAssignment_2_1_0_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProvidedCapabilityAccess().getCondExprAssignment_2_1_0_2()); 
            }
            // InternalBeeLangTestLanguage.g:3529:2: ( rule__ProvidedCapability__CondExprAssignment_2_1_0_2 )
            // InternalBeeLangTestLanguage.g:3529:3: rule__ProvidedCapability__CondExprAssignment_2_1_0_2
            {
            pushFollow(FOLLOW_2);
            rule__ProvidedCapability__CondExprAssignment_2_1_0_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getProvidedCapabilityAccess().getCondExprAssignment_2_1_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 235, rule__ProvidedCapability__Group_2_1_0__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__Group_2_1_0__2__Impl"


    // $ANTLR start "rule__ProvidedCapability__Group_2_1_0__3"
    // InternalBeeLangTestLanguage.g:3537:1: rule__ProvidedCapability__Group_2_1_0__3 : rule__ProvidedCapability__Group_2_1_0__3__Impl ;
    public final void rule__ProvidedCapability__Group_2_1_0__3() throws RecognitionException {
        int rule__ProvidedCapability__Group_2_1_0__3_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 236) ) { return ; }
            // InternalBeeLangTestLanguage.g:3541:1: ( rule__ProvidedCapability__Group_2_1_0__3__Impl )
            // InternalBeeLangTestLanguage.g:3542:2: rule__ProvidedCapability__Group_2_1_0__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ProvidedCapability__Group_2_1_0__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 236, rule__ProvidedCapability__Group_2_1_0__3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__Group_2_1_0__3"


    // $ANTLR start "rule__ProvidedCapability__Group_2_1_0__3__Impl"
    // InternalBeeLangTestLanguage.g:3548:1: rule__ProvidedCapability__Group_2_1_0__3__Impl : ( ';' ) ;
    public final void rule__ProvidedCapability__Group_2_1_0__3__Impl() throws RecognitionException {
        int rule__ProvidedCapability__Group_2_1_0__3__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 237) ) { return ; }
            // InternalBeeLangTestLanguage.g:3552:1: ( ( ';' ) )
            // InternalBeeLangTestLanguage.g:3553:1: ( ';' )
            {
            // InternalBeeLangTestLanguage.g:3553:1: ( ';' )
            // InternalBeeLangTestLanguage.g:3554:2: ';'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProvidedCapabilityAccess().getSemicolonKeyword_2_1_0_3()); 
            }
            match(input,50,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getProvidedCapabilityAccess().getSemicolonKeyword_2_1_0_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 237, rule__ProvidedCapability__Group_2_1_0__3__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__Group_2_1_0__3__Impl"


    // $ANTLR start "rule__ProvidedCapability__Group_2_1_1__0"
    // InternalBeeLangTestLanguage.g:3564:1: rule__ProvidedCapability__Group_2_1_1__0 : rule__ProvidedCapability__Group_2_1_1__0__Impl rule__ProvidedCapability__Group_2_1_1__1 ;
    public final void rule__ProvidedCapability__Group_2_1_1__0() throws RecognitionException {
        int rule__ProvidedCapability__Group_2_1_1__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 238) ) { return ; }
            // InternalBeeLangTestLanguage.g:3568:1: ( rule__ProvidedCapability__Group_2_1_1__0__Impl rule__ProvidedCapability__Group_2_1_1__1 )
            // InternalBeeLangTestLanguage.g:3569:2: rule__ProvidedCapability__Group_2_1_1__0__Impl rule__ProvidedCapability__Group_2_1_1__1
            {
            pushFollow(FOLLOW_12);
            rule__ProvidedCapability__Group_2_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ProvidedCapability__Group_2_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 238, rule__ProvidedCapability__Group_2_1_1__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__Group_2_1_1__0"


    // $ANTLR start "rule__ProvidedCapability__Group_2_1_1__0__Impl"
    // InternalBeeLangTestLanguage.g:3576:1: rule__ProvidedCapability__Group_2_1_1__0__Impl : ( 'name' ) ;
    public final void rule__ProvidedCapability__Group_2_1_1__0__Impl() throws RecognitionException {
        int rule__ProvidedCapability__Group_2_1_1__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 239) ) { return ; }
            // InternalBeeLangTestLanguage.g:3580:1: ( ( 'name' ) )
            // InternalBeeLangTestLanguage.g:3581:1: ( 'name' )
            {
            // InternalBeeLangTestLanguage.g:3581:1: ( 'name' )
            // InternalBeeLangTestLanguage.g:3582:2: 'name'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProvidedCapabilityAccess().getNameKeyword_2_1_1_0()); 
            }
            match(input,55,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getProvidedCapabilityAccess().getNameKeyword_2_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 239, rule__ProvidedCapability__Group_2_1_1__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__Group_2_1_1__0__Impl"


    // $ANTLR start "rule__ProvidedCapability__Group_2_1_1__1"
    // InternalBeeLangTestLanguage.g:3591:1: rule__ProvidedCapability__Group_2_1_1__1 : rule__ProvidedCapability__Group_2_1_1__1__Impl rule__ProvidedCapability__Group_2_1_1__2 ;
    public final void rule__ProvidedCapability__Group_2_1_1__1() throws RecognitionException {
        int rule__ProvidedCapability__Group_2_1_1__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 240) ) { return ; }
            // InternalBeeLangTestLanguage.g:3595:1: ( rule__ProvidedCapability__Group_2_1_1__1__Impl rule__ProvidedCapability__Group_2_1_1__2 )
            // InternalBeeLangTestLanguage.g:3596:2: rule__ProvidedCapability__Group_2_1_1__1__Impl rule__ProvidedCapability__Group_2_1_1__2
            {
            pushFollow(FOLLOW_9);
            rule__ProvidedCapability__Group_2_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ProvidedCapability__Group_2_1_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 240, rule__ProvidedCapability__Group_2_1_1__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__Group_2_1_1__1"


    // $ANTLR start "rule__ProvidedCapability__Group_2_1_1__1__Impl"
    // InternalBeeLangTestLanguage.g:3603:1: rule__ProvidedCapability__Group_2_1_1__1__Impl : ( ':' ) ;
    public final void rule__ProvidedCapability__Group_2_1_1__1__Impl() throws RecognitionException {
        int rule__ProvidedCapability__Group_2_1_1__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 241) ) { return ; }
            // InternalBeeLangTestLanguage.g:3607:1: ( ( ':' ) )
            // InternalBeeLangTestLanguage.g:3608:1: ( ':' )
            {
            // InternalBeeLangTestLanguage.g:3608:1: ( ':' )
            // InternalBeeLangTestLanguage.g:3609:2: ':'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProvidedCapabilityAccess().getColonKeyword_2_1_1_1()); 
            }
            match(input,49,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getProvidedCapabilityAccess().getColonKeyword_2_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 241, rule__ProvidedCapability__Group_2_1_1__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__Group_2_1_1__1__Impl"


    // $ANTLR start "rule__ProvidedCapability__Group_2_1_1__2"
    // InternalBeeLangTestLanguage.g:3618:1: rule__ProvidedCapability__Group_2_1_1__2 : rule__ProvidedCapability__Group_2_1_1__2__Impl rule__ProvidedCapability__Group_2_1_1__3 ;
    public final void rule__ProvidedCapability__Group_2_1_1__2() throws RecognitionException {
        int rule__ProvidedCapability__Group_2_1_1__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 242) ) { return ; }
            // InternalBeeLangTestLanguage.g:3622:1: ( rule__ProvidedCapability__Group_2_1_1__2__Impl rule__ProvidedCapability__Group_2_1_1__3 )
            // InternalBeeLangTestLanguage.g:3623:2: rule__ProvidedCapability__Group_2_1_1__2__Impl rule__ProvidedCapability__Group_2_1_1__3
            {
            pushFollow(FOLLOW_14);
            rule__ProvidedCapability__Group_2_1_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ProvidedCapability__Group_2_1_1__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 242, rule__ProvidedCapability__Group_2_1_1__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__Group_2_1_1__2"


    // $ANTLR start "rule__ProvidedCapability__Group_2_1_1__2__Impl"
    // InternalBeeLangTestLanguage.g:3630:1: rule__ProvidedCapability__Group_2_1_1__2__Impl : ( ( rule__ProvidedCapability__NameAssignment_2_1_1_2 ) ) ;
    public final void rule__ProvidedCapability__Group_2_1_1__2__Impl() throws RecognitionException {
        int rule__ProvidedCapability__Group_2_1_1__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 243) ) { return ; }
            // InternalBeeLangTestLanguage.g:3634:1: ( ( ( rule__ProvidedCapability__NameAssignment_2_1_1_2 ) ) )
            // InternalBeeLangTestLanguage.g:3635:1: ( ( rule__ProvidedCapability__NameAssignment_2_1_1_2 ) )
            {
            // InternalBeeLangTestLanguage.g:3635:1: ( ( rule__ProvidedCapability__NameAssignment_2_1_1_2 ) )
            // InternalBeeLangTestLanguage.g:3636:2: ( rule__ProvidedCapability__NameAssignment_2_1_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProvidedCapabilityAccess().getNameAssignment_2_1_1_2()); 
            }
            // InternalBeeLangTestLanguage.g:3637:2: ( rule__ProvidedCapability__NameAssignment_2_1_1_2 )
            // InternalBeeLangTestLanguage.g:3637:3: rule__ProvidedCapability__NameAssignment_2_1_1_2
            {
            pushFollow(FOLLOW_2);
            rule__ProvidedCapability__NameAssignment_2_1_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getProvidedCapabilityAccess().getNameAssignment_2_1_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 243, rule__ProvidedCapability__Group_2_1_1__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__Group_2_1_1__2__Impl"


    // $ANTLR start "rule__ProvidedCapability__Group_2_1_1__3"
    // InternalBeeLangTestLanguage.g:3645:1: rule__ProvidedCapability__Group_2_1_1__3 : rule__ProvidedCapability__Group_2_1_1__3__Impl ;
    public final void rule__ProvidedCapability__Group_2_1_1__3() throws RecognitionException {
        int rule__ProvidedCapability__Group_2_1_1__3_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 244) ) { return ; }
            // InternalBeeLangTestLanguage.g:3649:1: ( rule__ProvidedCapability__Group_2_1_1__3__Impl )
            // InternalBeeLangTestLanguage.g:3650:2: rule__ProvidedCapability__Group_2_1_1__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ProvidedCapability__Group_2_1_1__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 244, rule__ProvidedCapability__Group_2_1_1__3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__Group_2_1_1__3"


    // $ANTLR start "rule__ProvidedCapability__Group_2_1_1__3__Impl"
    // InternalBeeLangTestLanguage.g:3656:1: rule__ProvidedCapability__Group_2_1_1__3__Impl : ( ';' ) ;
    public final void rule__ProvidedCapability__Group_2_1_1__3__Impl() throws RecognitionException {
        int rule__ProvidedCapability__Group_2_1_1__3__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 245) ) { return ; }
            // InternalBeeLangTestLanguage.g:3660:1: ( ( ';' ) )
            // InternalBeeLangTestLanguage.g:3661:1: ( ';' )
            {
            // InternalBeeLangTestLanguage.g:3661:1: ( ';' )
            // InternalBeeLangTestLanguage.g:3662:2: ';'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProvidedCapabilityAccess().getSemicolonKeyword_2_1_1_3()); 
            }
            match(input,50,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getProvidedCapabilityAccess().getSemicolonKeyword_2_1_1_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 245, rule__ProvidedCapability__Group_2_1_1__3__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__Group_2_1_1__3__Impl"


    // $ANTLR start "rule__ProvidedCapability__Group_2_1_2__0"
    // InternalBeeLangTestLanguage.g:3672:1: rule__ProvidedCapability__Group_2_1_2__0 : rule__ProvidedCapability__Group_2_1_2__0__Impl rule__ProvidedCapability__Group_2_1_2__1 ;
    public final void rule__ProvidedCapability__Group_2_1_2__0() throws RecognitionException {
        int rule__ProvidedCapability__Group_2_1_2__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 246) ) { return ; }
            // InternalBeeLangTestLanguage.g:3676:1: ( rule__ProvidedCapability__Group_2_1_2__0__Impl rule__ProvidedCapability__Group_2_1_2__1 )
            // InternalBeeLangTestLanguage.g:3677:2: rule__ProvidedCapability__Group_2_1_2__0__Impl rule__ProvidedCapability__Group_2_1_2__1
            {
            pushFollow(FOLLOW_12);
            rule__ProvidedCapability__Group_2_1_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ProvidedCapability__Group_2_1_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 246, rule__ProvidedCapability__Group_2_1_2__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__Group_2_1_2__0"


    // $ANTLR start "rule__ProvidedCapability__Group_2_1_2__0__Impl"
    // InternalBeeLangTestLanguage.g:3684:1: rule__ProvidedCapability__Group_2_1_2__0__Impl : ( 'version' ) ;
    public final void rule__ProvidedCapability__Group_2_1_2__0__Impl() throws RecognitionException {
        int rule__ProvidedCapability__Group_2_1_2__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 247) ) { return ; }
            // InternalBeeLangTestLanguage.g:3688:1: ( ( 'version' ) )
            // InternalBeeLangTestLanguage.g:3689:1: ( 'version' )
            {
            // InternalBeeLangTestLanguage.g:3689:1: ( 'version' )
            // InternalBeeLangTestLanguage.g:3690:2: 'version'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProvidedCapabilityAccess().getVersionKeyword_2_1_2_0()); 
            }
            match(input,46,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getProvidedCapabilityAccess().getVersionKeyword_2_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 247, rule__ProvidedCapability__Group_2_1_2__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__Group_2_1_2__0__Impl"


    // $ANTLR start "rule__ProvidedCapability__Group_2_1_2__1"
    // InternalBeeLangTestLanguage.g:3699:1: rule__ProvidedCapability__Group_2_1_2__1 : rule__ProvidedCapability__Group_2_1_2__1__Impl rule__ProvidedCapability__Group_2_1_2__2 ;
    public final void rule__ProvidedCapability__Group_2_1_2__1() throws RecognitionException {
        int rule__ProvidedCapability__Group_2_1_2__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 248) ) { return ; }
            // InternalBeeLangTestLanguage.g:3703:1: ( rule__ProvidedCapability__Group_2_1_2__1__Impl rule__ProvidedCapability__Group_2_1_2__2 )
            // InternalBeeLangTestLanguage.g:3704:2: rule__ProvidedCapability__Group_2_1_2__1__Impl rule__ProvidedCapability__Group_2_1_2__2
            {
            pushFollow(FOLLOW_9);
            rule__ProvidedCapability__Group_2_1_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ProvidedCapability__Group_2_1_2__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 248, rule__ProvidedCapability__Group_2_1_2__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__Group_2_1_2__1"


    // $ANTLR start "rule__ProvidedCapability__Group_2_1_2__1__Impl"
    // InternalBeeLangTestLanguage.g:3711:1: rule__ProvidedCapability__Group_2_1_2__1__Impl : ( ':' ) ;
    public final void rule__ProvidedCapability__Group_2_1_2__1__Impl() throws RecognitionException {
        int rule__ProvidedCapability__Group_2_1_2__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 249) ) { return ; }
            // InternalBeeLangTestLanguage.g:3715:1: ( ( ':' ) )
            // InternalBeeLangTestLanguage.g:3716:1: ( ':' )
            {
            // InternalBeeLangTestLanguage.g:3716:1: ( ':' )
            // InternalBeeLangTestLanguage.g:3717:2: ':'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProvidedCapabilityAccess().getColonKeyword_2_1_2_1()); 
            }
            match(input,49,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getProvidedCapabilityAccess().getColonKeyword_2_1_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 249, rule__ProvidedCapability__Group_2_1_2__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__Group_2_1_2__1__Impl"


    // $ANTLR start "rule__ProvidedCapability__Group_2_1_2__2"
    // InternalBeeLangTestLanguage.g:3726:1: rule__ProvidedCapability__Group_2_1_2__2 : rule__ProvidedCapability__Group_2_1_2__2__Impl rule__ProvidedCapability__Group_2_1_2__3 ;
    public final void rule__ProvidedCapability__Group_2_1_2__2() throws RecognitionException {
        int rule__ProvidedCapability__Group_2_1_2__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 250) ) { return ; }
            // InternalBeeLangTestLanguage.g:3730:1: ( rule__ProvidedCapability__Group_2_1_2__2__Impl rule__ProvidedCapability__Group_2_1_2__3 )
            // InternalBeeLangTestLanguage.g:3731:2: rule__ProvidedCapability__Group_2_1_2__2__Impl rule__ProvidedCapability__Group_2_1_2__3
            {
            pushFollow(FOLLOW_14);
            rule__ProvidedCapability__Group_2_1_2__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ProvidedCapability__Group_2_1_2__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 250, rule__ProvidedCapability__Group_2_1_2__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__Group_2_1_2__2"


    // $ANTLR start "rule__ProvidedCapability__Group_2_1_2__2__Impl"
    // InternalBeeLangTestLanguage.g:3738:1: rule__ProvidedCapability__Group_2_1_2__2__Impl : ( ( rule__ProvidedCapability__VersionAssignment_2_1_2_2 ) ) ;
    public final void rule__ProvidedCapability__Group_2_1_2__2__Impl() throws RecognitionException {
        int rule__ProvidedCapability__Group_2_1_2__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 251) ) { return ; }
            // InternalBeeLangTestLanguage.g:3742:1: ( ( ( rule__ProvidedCapability__VersionAssignment_2_1_2_2 ) ) )
            // InternalBeeLangTestLanguage.g:3743:1: ( ( rule__ProvidedCapability__VersionAssignment_2_1_2_2 ) )
            {
            // InternalBeeLangTestLanguage.g:3743:1: ( ( rule__ProvidedCapability__VersionAssignment_2_1_2_2 ) )
            // InternalBeeLangTestLanguage.g:3744:2: ( rule__ProvidedCapability__VersionAssignment_2_1_2_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProvidedCapabilityAccess().getVersionAssignment_2_1_2_2()); 
            }
            // InternalBeeLangTestLanguage.g:3745:2: ( rule__ProvidedCapability__VersionAssignment_2_1_2_2 )
            // InternalBeeLangTestLanguage.g:3745:3: rule__ProvidedCapability__VersionAssignment_2_1_2_2
            {
            pushFollow(FOLLOW_2);
            rule__ProvidedCapability__VersionAssignment_2_1_2_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getProvidedCapabilityAccess().getVersionAssignment_2_1_2_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 251, rule__ProvidedCapability__Group_2_1_2__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__Group_2_1_2__2__Impl"


    // $ANTLR start "rule__ProvidedCapability__Group_2_1_2__3"
    // InternalBeeLangTestLanguage.g:3753:1: rule__ProvidedCapability__Group_2_1_2__3 : rule__ProvidedCapability__Group_2_1_2__3__Impl ;
    public final void rule__ProvidedCapability__Group_2_1_2__3() throws RecognitionException {
        int rule__ProvidedCapability__Group_2_1_2__3_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 252) ) { return ; }
            // InternalBeeLangTestLanguage.g:3757:1: ( rule__ProvidedCapability__Group_2_1_2__3__Impl )
            // InternalBeeLangTestLanguage.g:3758:2: rule__ProvidedCapability__Group_2_1_2__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ProvidedCapability__Group_2_1_2__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 252, rule__ProvidedCapability__Group_2_1_2__3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__Group_2_1_2__3"


    // $ANTLR start "rule__ProvidedCapability__Group_2_1_2__3__Impl"
    // InternalBeeLangTestLanguage.g:3764:1: rule__ProvidedCapability__Group_2_1_2__3__Impl : ( ';' ) ;
    public final void rule__ProvidedCapability__Group_2_1_2__3__Impl() throws RecognitionException {
        int rule__ProvidedCapability__Group_2_1_2__3__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 253) ) { return ; }
            // InternalBeeLangTestLanguage.g:3768:1: ( ( ';' ) )
            // InternalBeeLangTestLanguage.g:3769:1: ( ';' )
            {
            // InternalBeeLangTestLanguage.g:3769:1: ( ';' )
            // InternalBeeLangTestLanguage.g:3770:2: ';'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProvidedCapabilityAccess().getSemicolonKeyword_2_1_2_3()); 
            }
            match(input,50,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getProvidedCapabilityAccess().getSemicolonKeyword_2_1_2_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 253, rule__ProvidedCapability__Group_2_1_2__3__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__Group_2_1_2__3__Impl"


    // $ANTLR start "rule__AliasedRequiredCapability__Group__0"
    // InternalBeeLangTestLanguage.g:3780:1: rule__AliasedRequiredCapability__Group__0 : rule__AliasedRequiredCapability__Group__0__Impl rule__AliasedRequiredCapability__Group__1 ;
    public final void rule__AliasedRequiredCapability__Group__0() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 254) ) { return ; }
            // InternalBeeLangTestLanguage.g:3784:1: ( rule__AliasedRequiredCapability__Group__0__Impl rule__AliasedRequiredCapability__Group__1 )
            // InternalBeeLangTestLanguage.g:3785:2: rule__AliasedRequiredCapability__Group__0__Impl rule__AliasedRequiredCapability__Group__1
            {
            pushFollow(FOLLOW_9);
            rule__AliasedRequiredCapability__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AliasedRequiredCapability__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 254, rule__AliasedRequiredCapability__Group__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group__0"


    // $ANTLR start "rule__AliasedRequiredCapability__Group__0__Impl"
    // InternalBeeLangTestLanguage.g:3792:1: rule__AliasedRequiredCapability__Group__0__Impl : ( ( rule__AliasedRequiredCapability__Alternatives_0 ) ) ;
    public final void rule__AliasedRequiredCapability__Group__0__Impl() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 255) ) { return ; }
            // InternalBeeLangTestLanguage.g:3796:1: ( ( ( rule__AliasedRequiredCapability__Alternatives_0 ) ) )
            // InternalBeeLangTestLanguage.g:3797:1: ( ( rule__AliasedRequiredCapability__Alternatives_0 ) )
            {
            // InternalBeeLangTestLanguage.g:3797:1: ( ( rule__AliasedRequiredCapability__Alternatives_0 ) )
            // InternalBeeLangTestLanguage.g:3798:2: ( rule__AliasedRequiredCapability__Alternatives_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAliasedRequiredCapabilityAccess().getAlternatives_0()); 
            }
            // InternalBeeLangTestLanguage.g:3799:2: ( rule__AliasedRequiredCapability__Alternatives_0 )
            // InternalBeeLangTestLanguage.g:3799:3: rule__AliasedRequiredCapability__Alternatives_0
            {
            pushFollow(FOLLOW_2);
            rule__AliasedRequiredCapability__Alternatives_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAliasedRequiredCapabilityAccess().getAlternatives_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 255, rule__AliasedRequiredCapability__Group__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group__0__Impl"


    // $ANTLR start "rule__AliasedRequiredCapability__Group__1"
    // InternalBeeLangTestLanguage.g:3807:1: rule__AliasedRequiredCapability__Group__1 : rule__AliasedRequiredCapability__Group__1__Impl rule__AliasedRequiredCapability__Group__2 ;
    public final void rule__AliasedRequiredCapability__Group__1() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 256) ) { return ; }
            // InternalBeeLangTestLanguage.g:3811:1: ( rule__AliasedRequiredCapability__Group__1__Impl rule__AliasedRequiredCapability__Group__2 )
            // InternalBeeLangTestLanguage.g:3812:2: rule__AliasedRequiredCapability__Group__1__Impl rule__AliasedRequiredCapability__Group__2
            {
            pushFollow(FOLLOW_20);
            rule__AliasedRequiredCapability__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AliasedRequiredCapability__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 256, rule__AliasedRequiredCapability__Group__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group__1"


    // $ANTLR start "rule__AliasedRequiredCapability__Group__1__Impl"
    // InternalBeeLangTestLanguage.g:3819:1: rule__AliasedRequiredCapability__Group__1__Impl : ( ( rule__AliasedRequiredCapability__NameAssignment_1 ) ) ;
    public final void rule__AliasedRequiredCapability__Group__1__Impl() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 257) ) { return ; }
            // InternalBeeLangTestLanguage.g:3823:1: ( ( ( rule__AliasedRequiredCapability__NameAssignment_1 ) ) )
            // InternalBeeLangTestLanguage.g:3824:1: ( ( rule__AliasedRequiredCapability__NameAssignment_1 ) )
            {
            // InternalBeeLangTestLanguage.g:3824:1: ( ( rule__AliasedRequiredCapability__NameAssignment_1 ) )
            // InternalBeeLangTestLanguage.g:3825:2: ( rule__AliasedRequiredCapability__NameAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAliasedRequiredCapabilityAccess().getNameAssignment_1()); 
            }
            // InternalBeeLangTestLanguage.g:3826:2: ( rule__AliasedRequiredCapability__NameAssignment_1 )
            // InternalBeeLangTestLanguage.g:3826:3: rule__AliasedRequiredCapability__NameAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__AliasedRequiredCapability__NameAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAliasedRequiredCapabilityAccess().getNameAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 257, rule__AliasedRequiredCapability__Group__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group__1__Impl"


    // $ANTLR start "rule__AliasedRequiredCapability__Group__2"
    // InternalBeeLangTestLanguage.g:3834:1: rule__AliasedRequiredCapability__Group__2 : rule__AliasedRequiredCapability__Group__2__Impl rule__AliasedRequiredCapability__Group__3 ;
    public final void rule__AliasedRequiredCapability__Group__2() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 258) ) { return ; }
            // InternalBeeLangTestLanguage.g:3838:1: ( rule__AliasedRequiredCapability__Group__2__Impl rule__AliasedRequiredCapability__Group__3 )
            // InternalBeeLangTestLanguage.g:3839:2: rule__AliasedRequiredCapability__Group__2__Impl rule__AliasedRequiredCapability__Group__3
            {
            pushFollow(FOLLOW_20);
            rule__AliasedRequiredCapability__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AliasedRequiredCapability__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 258, rule__AliasedRequiredCapability__Group__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group__2"


    // $ANTLR start "rule__AliasedRequiredCapability__Group__2__Impl"
    // InternalBeeLangTestLanguage.g:3846:1: rule__AliasedRequiredCapability__Group__2__Impl : ( ( rule__AliasedRequiredCapability__Group_2__0 )? ) ;
    public final void rule__AliasedRequiredCapability__Group__2__Impl() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 259) ) { return ; }
            // InternalBeeLangTestLanguage.g:3850:1: ( ( ( rule__AliasedRequiredCapability__Group_2__0 )? ) )
            // InternalBeeLangTestLanguage.g:3851:1: ( ( rule__AliasedRequiredCapability__Group_2__0 )? )
            {
            // InternalBeeLangTestLanguage.g:3851:1: ( ( rule__AliasedRequiredCapability__Group_2__0 )? )
            // InternalBeeLangTestLanguage.g:3852:2: ( rule__AliasedRequiredCapability__Group_2__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAliasedRequiredCapabilityAccess().getGroup_2()); 
            }
            // InternalBeeLangTestLanguage.g:3853:2: ( rule__AliasedRequiredCapability__Group_2__0 )?
            int alt40=2;
            int LA40_0 = input.LA(1);

            if ( (LA40_0==56) ) {
                alt40=1;
            }
            switch (alt40) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:3853:3: rule__AliasedRequiredCapability__Group_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__AliasedRequiredCapability__Group_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAliasedRequiredCapabilityAccess().getGroup_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 259, rule__AliasedRequiredCapability__Group__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group__2__Impl"


    // $ANTLR start "rule__AliasedRequiredCapability__Group__3"
    // InternalBeeLangTestLanguage.g:3861:1: rule__AliasedRequiredCapability__Group__3 : rule__AliasedRequiredCapability__Group__3__Impl ;
    public final void rule__AliasedRequiredCapability__Group__3() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group__3_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 260) ) { return ; }
            // InternalBeeLangTestLanguage.g:3865:1: ( rule__AliasedRequiredCapability__Group__3__Impl )
            // InternalBeeLangTestLanguage.g:3866:2: rule__AliasedRequiredCapability__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AliasedRequiredCapability__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 260, rule__AliasedRequiredCapability__Group__3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group__3"


    // $ANTLR start "rule__AliasedRequiredCapability__Group__3__Impl"
    // InternalBeeLangTestLanguage.g:3872:1: rule__AliasedRequiredCapability__Group__3__Impl : ( ( rule__AliasedRequiredCapability__Group_3__0 ) ) ;
    public final void rule__AliasedRequiredCapability__Group__3__Impl() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group__3__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 261) ) { return ; }
            // InternalBeeLangTestLanguage.g:3876:1: ( ( ( rule__AliasedRequiredCapability__Group_3__0 ) ) )
            // InternalBeeLangTestLanguage.g:3877:1: ( ( rule__AliasedRequiredCapability__Group_3__0 ) )
            {
            // InternalBeeLangTestLanguage.g:3877:1: ( ( rule__AliasedRequiredCapability__Group_3__0 ) )
            // InternalBeeLangTestLanguage.g:3878:2: ( rule__AliasedRequiredCapability__Group_3__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAliasedRequiredCapabilityAccess().getGroup_3()); 
            }
            // InternalBeeLangTestLanguage.g:3879:2: ( rule__AliasedRequiredCapability__Group_3__0 )
            // InternalBeeLangTestLanguage.g:3879:3: rule__AliasedRequiredCapability__Group_3__0
            {
            pushFollow(FOLLOW_2);
            rule__AliasedRequiredCapability__Group_3__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAliasedRequiredCapabilityAccess().getGroup_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 261, rule__AliasedRequiredCapability__Group__3__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group__3__Impl"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_2__0"
    // InternalBeeLangTestLanguage.g:3888:1: rule__AliasedRequiredCapability__Group_2__0 : rule__AliasedRequiredCapability__Group_2__0__Impl rule__AliasedRequiredCapability__Group_2__1 ;
    public final void rule__AliasedRequiredCapability__Group_2__0() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_2__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 262) ) { return ; }
            // InternalBeeLangTestLanguage.g:3892:1: ( rule__AliasedRequiredCapability__Group_2__0__Impl rule__AliasedRequiredCapability__Group_2__1 )
            // InternalBeeLangTestLanguage.g:3893:2: rule__AliasedRequiredCapability__Group_2__0__Impl rule__AliasedRequiredCapability__Group_2__1
            {
            pushFollow(FOLLOW_9);
            rule__AliasedRequiredCapability__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AliasedRequiredCapability__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 262, rule__AliasedRequiredCapability__Group_2__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_2__0"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_2__0__Impl"
    // InternalBeeLangTestLanguage.g:3900:1: rule__AliasedRequiredCapability__Group_2__0__Impl : ( 'as' ) ;
    public final void rule__AliasedRequiredCapability__Group_2__0__Impl() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_2__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 263) ) { return ; }
            // InternalBeeLangTestLanguage.g:3904:1: ( ( 'as' ) )
            // InternalBeeLangTestLanguage.g:3905:1: ( 'as' )
            {
            // InternalBeeLangTestLanguage.g:3905:1: ( 'as' )
            // InternalBeeLangTestLanguage.g:3906:2: 'as'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAliasedRequiredCapabilityAccess().getAsKeyword_2_0()); 
            }
            match(input,56,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAliasedRequiredCapabilityAccess().getAsKeyword_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 263, rule__AliasedRequiredCapability__Group_2__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_2__0__Impl"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_2__1"
    // InternalBeeLangTestLanguage.g:3915:1: rule__AliasedRequiredCapability__Group_2__1 : rule__AliasedRequiredCapability__Group_2__1__Impl ;
    public final void rule__AliasedRequiredCapability__Group_2__1() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_2__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 264) ) { return ; }
            // InternalBeeLangTestLanguage.g:3919:1: ( rule__AliasedRequiredCapability__Group_2__1__Impl )
            // InternalBeeLangTestLanguage.g:3920:2: rule__AliasedRequiredCapability__Group_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AliasedRequiredCapability__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 264, rule__AliasedRequiredCapability__Group_2__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_2__1"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_2__1__Impl"
    // InternalBeeLangTestLanguage.g:3926:1: rule__AliasedRequiredCapability__Group_2__1__Impl : ( ( rule__AliasedRequiredCapability__AliasAssignment_2_1 ) ) ;
    public final void rule__AliasedRequiredCapability__Group_2__1__Impl() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_2__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 265) ) { return ; }
            // InternalBeeLangTestLanguage.g:3930:1: ( ( ( rule__AliasedRequiredCapability__AliasAssignment_2_1 ) ) )
            // InternalBeeLangTestLanguage.g:3931:1: ( ( rule__AliasedRequiredCapability__AliasAssignment_2_1 ) )
            {
            // InternalBeeLangTestLanguage.g:3931:1: ( ( rule__AliasedRequiredCapability__AliasAssignment_2_1 ) )
            // InternalBeeLangTestLanguage.g:3932:2: ( rule__AliasedRequiredCapability__AliasAssignment_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAliasedRequiredCapabilityAccess().getAliasAssignment_2_1()); 
            }
            // InternalBeeLangTestLanguage.g:3933:2: ( rule__AliasedRequiredCapability__AliasAssignment_2_1 )
            // InternalBeeLangTestLanguage.g:3933:3: rule__AliasedRequiredCapability__AliasAssignment_2_1
            {
            pushFollow(FOLLOW_2);
            rule__AliasedRequiredCapability__AliasAssignment_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAliasedRequiredCapabilityAccess().getAliasAssignment_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 265, rule__AliasedRequiredCapability__Group_2__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_2__1__Impl"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3__0"
    // InternalBeeLangTestLanguage.g:3942:1: rule__AliasedRequiredCapability__Group_3__0 : rule__AliasedRequiredCapability__Group_3__0__Impl rule__AliasedRequiredCapability__Group_3__1 ;
    public final void rule__AliasedRequiredCapability__Group_3__0() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 266) ) { return ; }
            // InternalBeeLangTestLanguage.g:3946:1: ( rule__AliasedRequiredCapability__Group_3__0__Impl rule__AliasedRequiredCapability__Group_3__1 )
            // InternalBeeLangTestLanguage.g:3947:2: rule__AliasedRequiredCapability__Group_3__0__Impl rule__AliasedRequiredCapability__Group_3__1
            {
            pushFollow(FOLLOW_21);
            rule__AliasedRequiredCapability__Group_3__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AliasedRequiredCapability__Group_3__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 266, rule__AliasedRequiredCapability__Group_3__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3__0"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3__0__Impl"
    // InternalBeeLangTestLanguage.g:3954:1: rule__AliasedRequiredCapability__Group_3__0__Impl : ( '{' ) ;
    public final void rule__AliasedRequiredCapability__Group_3__0__Impl() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 267) ) { return ; }
            // InternalBeeLangTestLanguage.g:3958:1: ( ( '{' ) )
            // InternalBeeLangTestLanguage.g:3959:1: ( '{' )
            {
            // InternalBeeLangTestLanguage.g:3959:1: ( '{' )
            // InternalBeeLangTestLanguage.g:3960:2: '{'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAliasedRequiredCapabilityAccess().getLeftCurlyBracketKeyword_3_0()); 
            }
            match(input,44,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAliasedRequiredCapabilityAccess().getLeftCurlyBracketKeyword_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 267, rule__AliasedRequiredCapability__Group_3__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3__0__Impl"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3__1"
    // InternalBeeLangTestLanguage.g:3969:1: rule__AliasedRequiredCapability__Group_3__1 : rule__AliasedRequiredCapability__Group_3__1__Impl rule__AliasedRequiredCapability__Group_3__2 ;
    public final void rule__AliasedRequiredCapability__Group_3__1() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 268) ) { return ; }
            // InternalBeeLangTestLanguage.g:3973:1: ( rule__AliasedRequiredCapability__Group_3__1__Impl rule__AliasedRequiredCapability__Group_3__2 )
            // InternalBeeLangTestLanguage.g:3974:2: rule__AliasedRequiredCapability__Group_3__1__Impl rule__AliasedRequiredCapability__Group_3__2
            {
            pushFollow(FOLLOW_8);
            rule__AliasedRequiredCapability__Group_3__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AliasedRequiredCapability__Group_3__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 268, rule__AliasedRequiredCapability__Group_3__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3__1"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3__1__Impl"
    // InternalBeeLangTestLanguage.g:3981:1: rule__AliasedRequiredCapability__Group_3__1__Impl : ( ( rule__AliasedRequiredCapability__UnorderedGroup_3_1 ) ) ;
    public final void rule__AliasedRequiredCapability__Group_3__1__Impl() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 269) ) { return ; }
            // InternalBeeLangTestLanguage.g:3985:1: ( ( ( rule__AliasedRequiredCapability__UnorderedGroup_3_1 ) ) )
            // InternalBeeLangTestLanguage.g:3986:1: ( ( rule__AliasedRequiredCapability__UnorderedGroup_3_1 ) )
            {
            // InternalBeeLangTestLanguage.g:3986:1: ( ( rule__AliasedRequiredCapability__UnorderedGroup_3_1 ) )
            // InternalBeeLangTestLanguage.g:3987:2: ( rule__AliasedRequiredCapability__UnorderedGroup_3_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1()); 
            }
            // InternalBeeLangTestLanguage.g:3988:2: ( rule__AliasedRequiredCapability__UnorderedGroup_3_1 )
            // InternalBeeLangTestLanguage.g:3988:3: rule__AliasedRequiredCapability__UnorderedGroup_3_1
            {
            pushFollow(FOLLOW_2);
            rule__AliasedRequiredCapability__UnorderedGroup_3_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 269, rule__AliasedRequiredCapability__Group_3__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3__1__Impl"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3__2"
    // InternalBeeLangTestLanguage.g:3996:1: rule__AliasedRequiredCapability__Group_3__2 : rule__AliasedRequiredCapability__Group_3__2__Impl ;
    public final void rule__AliasedRequiredCapability__Group_3__2() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 270) ) { return ; }
            // InternalBeeLangTestLanguage.g:4000:1: ( rule__AliasedRequiredCapability__Group_3__2__Impl )
            // InternalBeeLangTestLanguage.g:4001:2: rule__AliasedRequiredCapability__Group_3__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AliasedRequiredCapability__Group_3__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 270, rule__AliasedRequiredCapability__Group_3__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3__2"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3__2__Impl"
    // InternalBeeLangTestLanguage.g:4007:1: rule__AliasedRequiredCapability__Group_3__2__Impl : ( '}' ) ;
    public final void rule__AliasedRequiredCapability__Group_3__2__Impl() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 271) ) { return ; }
            // InternalBeeLangTestLanguage.g:4011:1: ( ( '}' ) )
            // InternalBeeLangTestLanguage.g:4012:1: ( '}' )
            {
            // InternalBeeLangTestLanguage.g:4012:1: ( '}' )
            // InternalBeeLangTestLanguage.g:4013:2: '}'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAliasedRequiredCapabilityAccess().getRightCurlyBracketKeyword_3_2()); 
            }
            match(input,45,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAliasedRequiredCapabilityAccess().getRightCurlyBracketKeyword_3_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 271, rule__AliasedRequiredCapability__Group_3__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3__2__Impl"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3_1_0__0"
    // InternalBeeLangTestLanguage.g:4023:1: rule__AliasedRequiredCapability__Group_3_1_0__0 : rule__AliasedRequiredCapability__Group_3_1_0__0__Impl rule__AliasedRequiredCapability__Group_3_1_0__1 ;
    public final void rule__AliasedRequiredCapability__Group_3_1_0__0() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3_1_0__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 272) ) { return ; }
            // InternalBeeLangTestLanguage.g:4027:1: ( rule__AliasedRequiredCapability__Group_3_1_0__0__Impl rule__AliasedRequiredCapability__Group_3_1_0__1 )
            // InternalBeeLangTestLanguage.g:4028:2: rule__AliasedRequiredCapability__Group_3_1_0__0__Impl rule__AliasedRequiredCapability__Group_3_1_0__1
            {
            pushFollow(FOLLOW_12);
            rule__AliasedRequiredCapability__Group_3_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AliasedRequiredCapability__Group_3_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 272, rule__AliasedRequiredCapability__Group_3_1_0__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3_1_0__0"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3_1_0__0__Impl"
    // InternalBeeLangTestLanguage.g:4035:1: rule__AliasedRequiredCapability__Group_3_1_0__0__Impl : ( 'when' ) ;
    public final void rule__AliasedRequiredCapability__Group_3_1_0__0__Impl() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3_1_0__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 273) ) { return ; }
            // InternalBeeLangTestLanguage.g:4039:1: ( ( 'when' ) )
            // InternalBeeLangTestLanguage.g:4040:1: ( 'when' )
            {
            // InternalBeeLangTestLanguage.g:4040:1: ( 'when' )
            // InternalBeeLangTestLanguage.g:4041:2: 'when'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAliasedRequiredCapabilityAccess().getWhenKeyword_3_1_0_0()); 
            }
            match(input,54,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAliasedRequiredCapabilityAccess().getWhenKeyword_3_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 273, rule__AliasedRequiredCapability__Group_3_1_0__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3_1_0__0__Impl"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3_1_0__1"
    // InternalBeeLangTestLanguage.g:4050:1: rule__AliasedRequiredCapability__Group_3_1_0__1 : rule__AliasedRequiredCapability__Group_3_1_0__1__Impl rule__AliasedRequiredCapability__Group_3_1_0__2 ;
    public final void rule__AliasedRequiredCapability__Group_3_1_0__1() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3_1_0__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 274) ) { return ; }
            // InternalBeeLangTestLanguage.g:4054:1: ( rule__AliasedRequiredCapability__Group_3_1_0__1__Impl rule__AliasedRequiredCapability__Group_3_1_0__2 )
            // InternalBeeLangTestLanguage.g:4055:2: rule__AliasedRequiredCapability__Group_3_1_0__1__Impl rule__AliasedRequiredCapability__Group_3_1_0__2
            {
            pushFollow(FOLLOW_19);
            rule__AliasedRequiredCapability__Group_3_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AliasedRequiredCapability__Group_3_1_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 274, rule__AliasedRequiredCapability__Group_3_1_0__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3_1_0__1"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3_1_0__1__Impl"
    // InternalBeeLangTestLanguage.g:4062:1: rule__AliasedRequiredCapability__Group_3_1_0__1__Impl : ( ':' ) ;
    public final void rule__AliasedRequiredCapability__Group_3_1_0__1__Impl() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3_1_0__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 275) ) { return ; }
            // InternalBeeLangTestLanguage.g:4066:1: ( ( ':' ) )
            // InternalBeeLangTestLanguage.g:4067:1: ( ':' )
            {
            // InternalBeeLangTestLanguage.g:4067:1: ( ':' )
            // InternalBeeLangTestLanguage.g:4068:2: ':'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAliasedRequiredCapabilityAccess().getColonKeyword_3_1_0_1()); 
            }
            match(input,49,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAliasedRequiredCapabilityAccess().getColonKeyword_3_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 275, rule__AliasedRequiredCapability__Group_3_1_0__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3_1_0__1__Impl"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3_1_0__2"
    // InternalBeeLangTestLanguage.g:4077:1: rule__AliasedRequiredCapability__Group_3_1_0__2 : rule__AliasedRequiredCapability__Group_3_1_0__2__Impl rule__AliasedRequiredCapability__Group_3_1_0__3 ;
    public final void rule__AliasedRequiredCapability__Group_3_1_0__2() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3_1_0__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 276) ) { return ; }
            // InternalBeeLangTestLanguage.g:4081:1: ( rule__AliasedRequiredCapability__Group_3_1_0__2__Impl rule__AliasedRequiredCapability__Group_3_1_0__3 )
            // InternalBeeLangTestLanguage.g:4082:2: rule__AliasedRequiredCapability__Group_3_1_0__2__Impl rule__AliasedRequiredCapability__Group_3_1_0__3
            {
            pushFollow(FOLLOW_14);
            rule__AliasedRequiredCapability__Group_3_1_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AliasedRequiredCapability__Group_3_1_0__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 276, rule__AliasedRequiredCapability__Group_3_1_0__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3_1_0__2"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3_1_0__2__Impl"
    // InternalBeeLangTestLanguage.g:4089:1: rule__AliasedRequiredCapability__Group_3_1_0__2__Impl : ( ( rule__AliasedRequiredCapability__CondExprAssignment_3_1_0_2 ) ) ;
    public final void rule__AliasedRequiredCapability__Group_3_1_0__2__Impl() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3_1_0__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 277) ) { return ; }
            // InternalBeeLangTestLanguage.g:4093:1: ( ( ( rule__AliasedRequiredCapability__CondExprAssignment_3_1_0_2 ) ) )
            // InternalBeeLangTestLanguage.g:4094:1: ( ( rule__AliasedRequiredCapability__CondExprAssignment_3_1_0_2 ) )
            {
            // InternalBeeLangTestLanguage.g:4094:1: ( ( rule__AliasedRequiredCapability__CondExprAssignment_3_1_0_2 ) )
            // InternalBeeLangTestLanguage.g:4095:2: ( rule__AliasedRequiredCapability__CondExprAssignment_3_1_0_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAliasedRequiredCapabilityAccess().getCondExprAssignment_3_1_0_2()); 
            }
            // InternalBeeLangTestLanguage.g:4096:2: ( rule__AliasedRequiredCapability__CondExprAssignment_3_1_0_2 )
            // InternalBeeLangTestLanguage.g:4096:3: rule__AliasedRequiredCapability__CondExprAssignment_3_1_0_2
            {
            pushFollow(FOLLOW_2);
            rule__AliasedRequiredCapability__CondExprAssignment_3_1_0_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAliasedRequiredCapabilityAccess().getCondExprAssignment_3_1_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 277, rule__AliasedRequiredCapability__Group_3_1_0__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3_1_0__2__Impl"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3_1_0__3"
    // InternalBeeLangTestLanguage.g:4104:1: rule__AliasedRequiredCapability__Group_3_1_0__3 : rule__AliasedRequiredCapability__Group_3_1_0__3__Impl ;
    public final void rule__AliasedRequiredCapability__Group_3_1_0__3() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3_1_0__3_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 278) ) { return ; }
            // InternalBeeLangTestLanguage.g:4108:1: ( rule__AliasedRequiredCapability__Group_3_1_0__3__Impl )
            // InternalBeeLangTestLanguage.g:4109:2: rule__AliasedRequiredCapability__Group_3_1_0__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AliasedRequiredCapability__Group_3_1_0__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 278, rule__AliasedRequiredCapability__Group_3_1_0__3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3_1_0__3"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3_1_0__3__Impl"
    // InternalBeeLangTestLanguage.g:4115:1: rule__AliasedRequiredCapability__Group_3_1_0__3__Impl : ( ';' ) ;
    public final void rule__AliasedRequiredCapability__Group_3_1_0__3__Impl() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3_1_0__3__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 279) ) { return ; }
            // InternalBeeLangTestLanguage.g:4119:1: ( ( ';' ) )
            // InternalBeeLangTestLanguage.g:4120:1: ( ';' )
            {
            // InternalBeeLangTestLanguage.g:4120:1: ( ';' )
            // InternalBeeLangTestLanguage.g:4121:2: ';'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAliasedRequiredCapabilityAccess().getSemicolonKeyword_3_1_0_3()); 
            }
            match(input,50,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAliasedRequiredCapabilityAccess().getSemicolonKeyword_3_1_0_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 279, rule__AliasedRequiredCapability__Group_3_1_0__3__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3_1_0__3__Impl"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3_1_1__0"
    // InternalBeeLangTestLanguage.g:4131:1: rule__AliasedRequiredCapability__Group_3_1_1__0 : rule__AliasedRequiredCapability__Group_3_1_1__0__Impl rule__AliasedRequiredCapability__Group_3_1_1__1 ;
    public final void rule__AliasedRequiredCapability__Group_3_1_1__0() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3_1_1__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 280) ) { return ; }
            // InternalBeeLangTestLanguage.g:4135:1: ( rule__AliasedRequiredCapability__Group_3_1_1__0__Impl rule__AliasedRequiredCapability__Group_3_1_1__1 )
            // InternalBeeLangTestLanguage.g:4136:2: rule__AliasedRequiredCapability__Group_3_1_1__0__Impl rule__AliasedRequiredCapability__Group_3_1_1__1
            {
            pushFollow(FOLLOW_14);
            rule__AliasedRequiredCapability__Group_3_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AliasedRequiredCapability__Group_3_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 280, rule__AliasedRequiredCapability__Group_3_1_1__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3_1_1__0"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3_1_1__0__Impl"
    // InternalBeeLangTestLanguage.g:4143:1: rule__AliasedRequiredCapability__Group_3_1_1__0__Impl : ( ( rule__AliasedRequiredCapability__GreedyAssignment_3_1_1_0 ) ) ;
    public final void rule__AliasedRequiredCapability__Group_3_1_1__0__Impl() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3_1_1__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 281) ) { return ; }
            // InternalBeeLangTestLanguage.g:4147:1: ( ( ( rule__AliasedRequiredCapability__GreedyAssignment_3_1_1_0 ) ) )
            // InternalBeeLangTestLanguage.g:4148:1: ( ( rule__AliasedRequiredCapability__GreedyAssignment_3_1_1_0 ) )
            {
            // InternalBeeLangTestLanguage.g:4148:1: ( ( rule__AliasedRequiredCapability__GreedyAssignment_3_1_1_0 ) )
            // InternalBeeLangTestLanguage.g:4149:2: ( rule__AliasedRequiredCapability__GreedyAssignment_3_1_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAliasedRequiredCapabilityAccess().getGreedyAssignment_3_1_1_0()); 
            }
            // InternalBeeLangTestLanguage.g:4150:2: ( rule__AliasedRequiredCapability__GreedyAssignment_3_1_1_0 )
            // InternalBeeLangTestLanguage.g:4150:3: rule__AliasedRequiredCapability__GreedyAssignment_3_1_1_0
            {
            pushFollow(FOLLOW_2);
            rule__AliasedRequiredCapability__GreedyAssignment_3_1_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAliasedRequiredCapabilityAccess().getGreedyAssignment_3_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 281, rule__AliasedRequiredCapability__Group_3_1_1__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3_1_1__0__Impl"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3_1_1__1"
    // InternalBeeLangTestLanguage.g:4158:1: rule__AliasedRequiredCapability__Group_3_1_1__1 : rule__AliasedRequiredCapability__Group_3_1_1__1__Impl ;
    public final void rule__AliasedRequiredCapability__Group_3_1_1__1() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3_1_1__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 282) ) { return ; }
            // InternalBeeLangTestLanguage.g:4162:1: ( rule__AliasedRequiredCapability__Group_3_1_1__1__Impl )
            // InternalBeeLangTestLanguage.g:4163:2: rule__AliasedRequiredCapability__Group_3_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AliasedRequiredCapability__Group_3_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 282, rule__AliasedRequiredCapability__Group_3_1_1__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3_1_1__1"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3_1_1__1__Impl"
    // InternalBeeLangTestLanguage.g:4169:1: rule__AliasedRequiredCapability__Group_3_1_1__1__Impl : ( ';' ) ;
    public final void rule__AliasedRequiredCapability__Group_3_1_1__1__Impl() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3_1_1__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 283) ) { return ; }
            // InternalBeeLangTestLanguage.g:4173:1: ( ( ';' ) )
            // InternalBeeLangTestLanguage.g:4174:1: ( ';' )
            {
            // InternalBeeLangTestLanguage.g:4174:1: ( ';' )
            // InternalBeeLangTestLanguage.g:4175:2: ';'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAliasedRequiredCapabilityAccess().getSemicolonKeyword_3_1_1_1()); 
            }
            match(input,50,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAliasedRequiredCapabilityAccess().getSemicolonKeyword_3_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 283, rule__AliasedRequiredCapability__Group_3_1_1__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3_1_1__1__Impl"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3_1_2__0"
    // InternalBeeLangTestLanguage.g:4185:1: rule__AliasedRequiredCapability__Group_3_1_2__0 : rule__AliasedRequiredCapability__Group_3_1_2__0__Impl rule__AliasedRequiredCapability__Group_3_1_2__1 ;
    public final void rule__AliasedRequiredCapability__Group_3_1_2__0() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3_1_2__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 284) ) { return ; }
            // InternalBeeLangTestLanguage.g:4189:1: ( rule__AliasedRequiredCapability__Group_3_1_2__0__Impl rule__AliasedRequiredCapability__Group_3_1_2__1 )
            // InternalBeeLangTestLanguage.g:4190:2: rule__AliasedRequiredCapability__Group_3_1_2__0__Impl rule__AliasedRequiredCapability__Group_3_1_2__1
            {
            pushFollow(FOLLOW_12);
            rule__AliasedRequiredCapability__Group_3_1_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AliasedRequiredCapability__Group_3_1_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 284, rule__AliasedRequiredCapability__Group_3_1_2__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3_1_2__0"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3_1_2__0__Impl"
    // InternalBeeLangTestLanguage.g:4197:1: rule__AliasedRequiredCapability__Group_3_1_2__0__Impl : ( 'requires-min' ) ;
    public final void rule__AliasedRequiredCapability__Group_3_1_2__0__Impl() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3_1_2__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 285) ) { return ; }
            // InternalBeeLangTestLanguage.g:4201:1: ( ( 'requires-min' ) )
            // InternalBeeLangTestLanguage.g:4202:1: ( 'requires-min' )
            {
            // InternalBeeLangTestLanguage.g:4202:1: ( 'requires-min' )
            // InternalBeeLangTestLanguage.g:4203:2: 'requires-min'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAliasedRequiredCapabilityAccess().getRequiresMinKeyword_3_1_2_0()); 
            }
            match(input,57,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAliasedRequiredCapabilityAccess().getRequiresMinKeyword_3_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 285, rule__AliasedRequiredCapability__Group_3_1_2__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3_1_2__0__Impl"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3_1_2__1"
    // InternalBeeLangTestLanguage.g:4212:1: rule__AliasedRequiredCapability__Group_3_1_2__1 : rule__AliasedRequiredCapability__Group_3_1_2__1__Impl rule__AliasedRequiredCapability__Group_3_1_2__2 ;
    public final void rule__AliasedRequiredCapability__Group_3_1_2__1() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3_1_2__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 286) ) { return ; }
            // InternalBeeLangTestLanguage.g:4216:1: ( rule__AliasedRequiredCapability__Group_3_1_2__1__Impl rule__AliasedRequiredCapability__Group_3_1_2__2 )
            // InternalBeeLangTestLanguage.g:4217:2: rule__AliasedRequiredCapability__Group_3_1_2__1__Impl rule__AliasedRequiredCapability__Group_3_1_2__2
            {
            pushFollow(FOLLOW_22);
            rule__AliasedRequiredCapability__Group_3_1_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AliasedRequiredCapability__Group_3_1_2__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 286, rule__AliasedRequiredCapability__Group_3_1_2__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3_1_2__1"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3_1_2__1__Impl"
    // InternalBeeLangTestLanguage.g:4224:1: rule__AliasedRequiredCapability__Group_3_1_2__1__Impl : ( ':' ) ;
    public final void rule__AliasedRequiredCapability__Group_3_1_2__1__Impl() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3_1_2__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 287) ) { return ; }
            // InternalBeeLangTestLanguage.g:4228:1: ( ( ':' ) )
            // InternalBeeLangTestLanguage.g:4229:1: ( ':' )
            {
            // InternalBeeLangTestLanguage.g:4229:1: ( ':' )
            // InternalBeeLangTestLanguage.g:4230:2: ':'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAliasedRequiredCapabilityAccess().getColonKeyword_3_1_2_1()); 
            }
            match(input,49,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAliasedRequiredCapabilityAccess().getColonKeyword_3_1_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 287, rule__AliasedRequiredCapability__Group_3_1_2__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3_1_2__1__Impl"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3_1_2__2"
    // InternalBeeLangTestLanguage.g:4239:1: rule__AliasedRequiredCapability__Group_3_1_2__2 : rule__AliasedRequiredCapability__Group_3_1_2__2__Impl rule__AliasedRequiredCapability__Group_3_1_2__3 ;
    public final void rule__AliasedRequiredCapability__Group_3_1_2__2() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3_1_2__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 288) ) { return ; }
            // InternalBeeLangTestLanguage.g:4243:1: ( rule__AliasedRequiredCapability__Group_3_1_2__2__Impl rule__AliasedRequiredCapability__Group_3_1_2__3 )
            // InternalBeeLangTestLanguage.g:4244:2: rule__AliasedRequiredCapability__Group_3_1_2__2__Impl rule__AliasedRequiredCapability__Group_3_1_2__3
            {
            pushFollow(FOLLOW_14);
            rule__AliasedRequiredCapability__Group_3_1_2__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AliasedRequiredCapability__Group_3_1_2__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 288, rule__AliasedRequiredCapability__Group_3_1_2__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3_1_2__2"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3_1_2__2__Impl"
    // InternalBeeLangTestLanguage.g:4251:1: rule__AliasedRequiredCapability__Group_3_1_2__2__Impl : ( ( rule__AliasedRequiredCapability__MinAssignment_3_1_2_2 ) ) ;
    public final void rule__AliasedRequiredCapability__Group_3_1_2__2__Impl() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3_1_2__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 289) ) { return ; }
            // InternalBeeLangTestLanguage.g:4255:1: ( ( ( rule__AliasedRequiredCapability__MinAssignment_3_1_2_2 ) ) )
            // InternalBeeLangTestLanguage.g:4256:1: ( ( rule__AliasedRequiredCapability__MinAssignment_3_1_2_2 ) )
            {
            // InternalBeeLangTestLanguage.g:4256:1: ( ( rule__AliasedRequiredCapability__MinAssignment_3_1_2_2 ) )
            // InternalBeeLangTestLanguage.g:4257:2: ( rule__AliasedRequiredCapability__MinAssignment_3_1_2_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAliasedRequiredCapabilityAccess().getMinAssignment_3_1_2_2()); 
            }
            // InternalBeeLangTestLanguage.g:4258:2: ( rule__AliasedRequiredCapability__MinAssignment_3_1_2_2 )
            // InternalBeeLangTestLanguage.g:4258:3: rule__AliasedRequiredCapability__MinAssignment_3_1_2_2
            {
            pushFollow(FOLLOW_2);
            rule__AliasedRequiredCapability__MinAssignment_3_1_2_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAliasedRequiredCapabilityAccess().getMinAssignment_3_1_2_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 289, rule__AliasedRequiredCapability__Group_3_1_2__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3_1_2__2__Impl"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3_1_2__3"
    // InternalBeeLangTestLanguage.g:4266:1: rule__AliasedRequiredCapability__Group_3_1_2__3 : rule__AliasedRequiredCapability__Group_3_1_2__3__Impl ;
    public final void rule__AliasedRequiredCapability__Group_3_1_2__3() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3_1_2__3_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 290) ) { return ; }
            // InternalBeeLangTestLanguage.g:4270:1: ( rule__AliasedRequiredCapability__Group_3_1_2__3__Impl )
            // InternalBeeLangTestLanguage.g:4271:2: rule__AliasedRequiredCapability__Group_3_1_2__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AliasedRequiredCapability__Group_3_1_2__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 290, rule__AliasedRequiredCapability__Group_3_1_2__3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3_1_2__3"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3_1_2__3__Impl"
    // InternalBeeLangTestLanguage.g:4277:1: rule__AliasedRequiredCapability__Group_3_1_2__3__Impl : ( ';' ) ;
    public final void rule__AliasedRequiredCapability__Group_3_1_2__3__Impl() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3_1_2__3__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 291) ) { return ; }
            // InternalBeeLangTestLanguage.g:4281:1: ( ( ';' ) )
            // InternalBeeLangTestLanguage.g:4282:1: ( ';' )
            {
            // InternalBeeLangTestLanguage.g:4282:1: ( ';' )
            // InternalBeeLangTestLanguage.g:4283:2: ';'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAliasedRequiredCapabilityAccess().getSemicolonKeyword_3_1_2_3()); 
            }
            match(input,50,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAliasedRequiredCapabilityAccess().getSemicolonKeyword_3_1_2_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 291, rule__AliasedRequiredCapability__Group_3_1_2__3__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3_1_2__3__Impl"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3_1_3__0"
    // InternalBeeLangTestLanguage.g:4293:1: rule__AliasedRequiredCapability__Group_3_1_3__0 : rule__AliasedRequiredCapability__Group_3_1_3__0__Impl rule__AliasedRequiredCapability__Group_3_1_3__1 ;
    public final void rule__AliasedRequiredCapability__Group_3_1_3__0() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3_1_3__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 292) ) { return ; }
            // InternalBeeLangTestLanguage.g:4297:1: ( rule__AliasedRequiredCapability__Group_3_1_3__0__Impl rule__AliasedRequiredCapability__Group_3_1_3__1 )
            // InternalBeeLangTestLanguage.g:4298:2: rule__AliasedRequiredCapability__Group_3_1_3__0__Impl rule__AliasedRequiredCapability__Group_3_1_3__1
            {
            pushFollow(FOLLOW_12);
            rule__AliasedRequiredCapability__Group_3_1_3__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AliasedRequiredCapability__Group_3_1_3__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 292, rule__AliasedRequiredCapability__Group_3_1_3__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3_1_3__0"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3_1_3__0__Impl"
    // InternalBeeLangTestLanguage.g:4305:1: rule__AliasedRequiredCapability__Group_3_1_3__0__Impl : ( 'requires-max' ) ;
    public final void rule__AliasedRequiredCapability__Group_3_1_3__0__Impl() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3_1_3__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 293) ) { return ; }
            // InternalBeeLangTestLanguage.g:4309:1: ( ( 'requires-max' ) )
            // InternalBeeLangTestLanguage.g:4310:1: ( 'requires-max' )
            {
            // InternalBeeLangTestLanguage.g:4310:1: ( 'requires-max' )
            // InternalBeeLangTestLanguage.g:4311:2: 'requires-max'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAliasedRequiredCapabilityAccess().getRequiresMaxKeyword_3_1_3_0()); 
            }
            match(input,58,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAliasedRequiredCapabilityAccess().getRequiresMaxKeyword_3_1_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 293, rule__AliasedRequiredCapability__Group_3_1_3__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3_1_3__0__Impl"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3_1_3__1"
    // InternalBeeLangTestLanguage.g:4320:1: rule__AliasedRequiredCapability__Group_3_1_3__1 : rule__AliasedRequiredCapability__Group_3_1_3__1__Impl rule__AliasedRequiredCapability__Group_3_1_3__2 ;
    public final void rule__AliasedRequiredCapability__Group_3_1_3__1() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3_1_3__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 294) ) { return ; }
            // InternalBeeLangTestLanguage.g:4324:1: ( rule__AliasedRequiredCapability__Group_3_1_3__1__Impl rule__AliasedRequiredCapability__Group_3_1_3__2 )
            // InternalBeeLangTestLanguage.g:4325:2: rule__AliasedRequiredCapability__Group_3_1_3__1__Impl rule__AliasedRequiredCapability__Group_3_1_3__2
            {
            pushFollow(FOLLOW_22);
            rule__AliasedRequiredCapability__Group_3_1_3__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AliasedRequiredCapability__Group_3_1_3__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 294, rule__AliasedRequiredCapability__Group_3_1_3__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3_1_3__1"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3_1_3__1__Impl"
    // InternalBeeLangTestLanguage.g:4332:1: rule__AliasedRequiredCapability__Group_3_1_3__1__Impl : ( ':' ) ;
    public final void rule__AliasedRequiredCapability__Group_3_1_3__1__Impl() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3_1_3__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 295) ) { return ; }
            // InternalBeeLangTestLanguage.g:4336:1: ( ( ':' ) )
            // InternalBeeLangTestLanguage.g:4337:1: ( ':' )
            {
            // InternalBeeLangTestLanguage.g:4337:1: ( ':' )
            // InternalBeeLangTestLanguage.g:4338:2: ':'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAliasedRequiredCapabilityAccess().getColonKeyword_3_1_3_1()); 
            }
            match(input,49,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAliasedRequiredCapabilityAccess().getColonKeyword_3_1_3_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 295, rule__AliasedRequiredCapability__Group_3_1_3__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3_1_3__1__Impl"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3_1_3__2"
    // InternalBeeLangTestLanguage.g:4347:1: rule__AliasedRequiredCapability__Group_3_1_3__2 : rule__AliasedRequiredCapability__Group_3_1_3__2__Impl rule__AliasedRequiredCapability__Group_3_1_3__3 ;
    public final void rule__AliasedRequiredCapability__Group_3_1_3__2() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3_1_3__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 296) ) { return ; }
            // InternalBeeLangTestLanguage.g:4351:1: ( rule__AliasedRequiredCapability__Group_3_1_3__2__Impl rule__AliasedRequiredCapability__Group_3_1_3__3 )
            // InternalBeeLangTestLanguage.g:4352:2: rule__AliasedRequiredCapability__Group_3_1_3__2__Impl rule__AliasedRequiredCapability__Group_3_1_3__3
            {
            pushFollow(FOLLOW_14);
            rule__AliasedRequiredCapability__Group_3_1_3__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AliasedRequiredCapability__Group_3_1_3__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 296, rule__AliasedRequiredCapability__Group_3_1_3__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3_1_3__2"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3_1_3__2__Impl"
    // InternalBeeLangTestLanguage.g:4359:1: rule__AliasedRequiredCapability__Group_3_1_3__2__Impl : ( ( rule__AliasedRequiredCapability__MaxAssignment_3_1_3_2 ) ) ;
    public final void rule__AliasedRequiredCapability__Group_3_1_3__2__Impl() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3_1_3__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 297) ) { return ; }
            // InternalBeeLangTestLanguage.g:4363:1: ( ( ( rule__AliasedRequiredCapability__MaxAssignment_3_1_3_2 ) ) )
            // InternalBeeLangTestLanguage.g:4364:1: ( ( rule__AliasedRequiredCapability__MaxAssignment_3_1_3_2 ) )
            {
            // InternalBeeLangTestLanguage.g:4364:1: ( ( rule__AliasedRequiredCapability__MaxAssignment_3_1_3_2 ) )
            // InternalBeeLangTestLanguage.g:4365:2: ( rule__AliasedRequiredCapability__MaxAssignment_3_1_3_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAliasedRequiredCapabilityAccess().getMaxAssignment_3_1_3_2()); 
            }
            // InternalBeeLangTestLanguage.g:4366:2: ( rule__AliasedRequiredCapability__MaxAssignment_3_1_3_2 )
            // InternalBeeLangTestLanguage.g:4366:3: rule__AliasedRequiredCapability__MaxAssignment_3_1_3_2
            {
            pushFollow(FOLLOW_2);
            rule__AliasedRequiredCapability__MaxAssignment_3_1_3_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAliasedRequiredCapabilityAccess().getMaxAssignment_3_1_3_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 297, rule__AliasedRequiredCapability__Group_3_1_3__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3_1_3__2__Impl"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3_1_3__3"
    // InternalBeeLangTestLanguage.g:4374:1: rule__AliasedRequiredCapability__Group_3_1_3__3 : rule__AliasedRequiredCapability__Group_3_1_3__3__Impl ;
    public final void rule__AliasedRequiredCapability__Group_3_1_3__3() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3_1_3__3_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 298) ) { return ; }
            // InternalBeeLangTestLanguage.g:4378:1: ( rule__AliasedRequiredCapability__Group_3_1_3__3__Impl )
            // InternalBeeLangTestLanguage.g:4379:2: rule__AliasedRequiredCapability__Group_3_1_3__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AliasedRequiredCapability__Group_3_1_3__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 298, rule__AliasedRequiredCapability__Group_3_1_3__3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3_1_3__3"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3_1_3__3__Impl"
    // InternalBeeLangTestLanguage.g:4385:1: rule__AliasedRequiredCapability__Group_3_1_3__3__Impl : ( ';' ) ;
    public final void rule__AliasedRequiredCapability__Group_3_1_3__3__Impl() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3_1_3__3__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 299) ) { return ; }
            // InternalBeeLangTestLanguage.g:4389:1: ( ( ';' ) )
            // InternalBeeLangTestLanguage.g:4390:1: ( ';' )
            {
            // InternalBeeLangTestLanguage.g:4390:1: ( ';' )
            // InternalBeeLangTestLanguage.g:4391:2: ';'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAliasedRequiredCapabilityAccess().getSemicolonKeyword_3_1_3_3()); 
            }
            match(input,50,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAliasedRequiredCapabilityAccess().getSemicolonKeyword_3_1_3_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 299, rule__AliasedRequiredCapability__Group_3_1_3__3__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3_1_3__3__Impl"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3_1_4__0"
    // InternalBeeLangTestLanguage.g:4401:1: rule__AliasedRequiredCapability__Group_3_1_4__0 : rule__AliasedRequiredCapability__Group_3_1_4__0__Impl rule__AliasedRequiredCapability__Group_3_1_4__1 ;
    public final void rule__AliasedRequiredCapability__Group_3_1_4__0() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3_1_4__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 300) ) { return ; }
            // InternalBeeLangTestLanguage.g:4405:1: ( rule__AliasedRequiredCapability__Group_3_1_4__0__Impl rule__AliasedRequiredCapability__Group_3_1_4__1 )
            // InternalBeeLangTestLanguage.g:4406:2: rule__AliasedRequiredCapability__Group_3_1_4__0__Impl rule__AliasedRequiredCapability__Group_3_1_4__1
            {
            pushFollow(FOLLOW_12);
            rule__AliasedRequiredCapability__Group_3_1_4__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AliasedRequiredCapability__Group_3_1_4__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 300, rule__AliasedRequiredCapability__Group_3_1_4__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3_1_4__0"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3_1_4__0__Impl"
    // InternalBeeLangTestLanguage.g:4413:1: rule__AliasedRequiredCapability__Group_3_1_4__0__Impl : ( 'version' ) ;
    public final void rule__AliasedRequiredCapability__Group_3_1_4__0__Impl() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3_1_4__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 301) ) { return ; }
            // InternalBeeLangTestLanguage.g:4417:1: ( ( 'version' ) )
            // InternalBeeLangTestLanguage.g:4418:1: ( 'version' )
            {
            // InternalBeeLangTestLanguage.g:4418:1: ( 'version' )
            // InternalBeeLangTestLanguage.g:4419:2: 'version'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAliasedRequiredCapabilityAccess().getVersionKeyword_3_1_4_0()); 
            }
            match(input,46,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAliasedRequiredCapabilityAccess().getVersionKeyword_3_1_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 301, rule__AliasedRequiredCapability__Group_3_1_4__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3_1_4__0__Impl"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3_1_4__1"
    // InternalBeeLangTestLanguage.g:4428:1: rule__AliasedRequiredCapability__Group_3_1_4__1 : rule__AliasedRequiredCapability__Group_3_1_4__1__Impl rule__AliasedRequiredCapability__Group_3_1_4__2 ;
    public final void rule__AliasedRequiredCapability__Group_3_1_4__1() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3_1_4__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 302) ) { return ; }
            // InternalBeeLangTestLanguage.g:4432:1: ( rule__AliasedRequiredCapability__Group_3_1_4__1__Impl rule__AliasedRequiredCapability__Group_3_1_4__2 )
            // InternalBeeLangTestLanguage.g:4433:2: rule__AliasedRequiredCapability__Group_3_1_4__1__Impl rule__AliasedRequiredCapability__Group_3_1_4__2
            {
            pushFollow(FOLLOW_9);
            rule__AliasedRequiredCapability__Group_3_1_4__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AliasedRequiredCapability__Group_3_1_4__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 302, rule__AliasedRequiredCapability__Group_3_1_4__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3_1_4__1"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3_1_4__1__Impl"
    // InternalBeeLangTestLanguage.g:4440:1: rule__AliasedRequiredCapability__Group_3_1_4__1__Impl : ( ':' ) ;
    public final void rule__AliasedRequiredCapability__Group_3_1_4__1__Impl() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3_1_4__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 303) ) { return ; }
            // InternalBeeLangTestLanguage.g:4444:1: ( ( ':' ) )
            // InternalBeeLangTestLanguage.g:4445:1: ( ':' )
            {
            // InternalBeeLangTestLanguage.g:4445:1: ( ':' )
            // InternalBeeLangTestLanguage.g:4446:2: ':'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAliasedRequiredCapabilityAccess().getColonKeyword_3_1_4_1()); 
            }
            match(input,49,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAliasedRequiredCapabilityAccess().getColonKeyword_3_1_4_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 303, rule__AliasedRequiredCapability__Group_3_1_4__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3_1_4__1__Impl"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3_1_4__2"
    // InternalBeeLangTestLanguage.g:4455:1: rule__AliasedRequiredCapability__Group_3_1_4__2 : rule__AliasedRequiredCapability__Group_3_1_4__2__Impl rule__AliasedRequiredCapability__Group_3_1_4__3 ;
    public final void rule__AliasedRequiredCapability__Group_3_1_4__2() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3_1_4__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 304) ) { return ; }
            // InternalBeeLangTestLanguage.g:4459:1: ( rule__AliasedRequiredCapability__Group_3_1_4__2__Impl rule__AliasedRequiredCapability__Group_3_1_4__3 )
            // InternalBeeLangTestLanguage.g:4460:2: rule__AliasedRequiredCapability__Group_3_1_4__2__Impl rule__AliasedRequiredCapability__Group_3_1_4__3
            {
            pushFollow(FOLLOW_14);
            rule__AliasedRequiredCapability__Group_3_1_4__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AliasedRequiredCapability__Group_3_1_4__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 304, rule__AliasedRequiredCapability__Group_3_1_4__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3_1_4__2"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3_1_4__2__Impl"
    // InternalBeeLangTestLanguage.g:4467:1: rule__AliasedRequiredCapability__Group_3_1_4__2__Impl : ( ( rule__AliasedRequiredCapability__VersionRangeAssignment_3_1_4_2 ) ) ;
    public final void rule__AliasedRequiredCapability__Group_3_1_4__2__Impl() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3_1_4__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 305) ) { return ; }
            // InternalBeeLangTestLanguage.g:4471:1: ( ( ( rule__AliasedRequiredCapability__VersionRangeAssignment_3_1_4_2 ) ) )
            // InternalBeeLangTestLanguage.g:4472:1: ( ( rule__AliasedRequiredCapability__VersionRangeAssignment_3_1_4_2 ) )
            {
            // InternalBeeLangTestLanguage.g:4472:1: ( ( rule__AliasedRequiredCapability__VersionRangeAssignment_3_1_4_2 ) )
            // InternalBeeLangTestLanguage.g:4473:2: ( rule__AliasedRequiredCapability__VersionRangeAssignment_3_1_4_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAliasedRequiredCapabilityAccess().getVersionRangeAssignment_3_1_4_2()); 
            }
            // InternalBeeLangTestLanguage.g:4474:2: ( rule__AliasedRequiredCapability__VersionRangeAssignment_3_1_4_2 )
            // InternalBeeLangTestLanguage.g:4474:3: rule__AliasedRequiredCapability__VersionRangeAssignment_3_1_4_2
            {
            pushFollow(FOLLOW_2);
            rule__AliasedRequiredCapability__VersionRangeAssignment_3_1_4_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAliasedRequiredCapabilityAccess().getVersionRangeAssignment_3_1_4_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 305, rule__AliasedRequiredCapability__Group_3_1_4__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3_1_4__2__Impl"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3_1_4__3"
    // InternalBeeLangTestLanguage.g:4482:1: rule__AliasedRequiredCapability__Group_3_1_4__3 : rule__AliasedRequiredCapability__Group_3_1_4__3__Impl ;
    public final void rule__AliasedRequiredCapability__Group_3_1_4__3() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3_1_4__3_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 306) ) { return ; }
            // InternalBeeLangTestLanguage.g:4486:1: ( rule__AliasedRequiredCapability__Group_3_1_4__3__Impl )
            // InternalBeeLangTestLanguage.g:4487:2: rule__AliasedRequiredCapability__Group_3_1_4__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AliasedRequiredCapability__Group_3_1_4__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 306, rule__AliasedRequiredCapability__Group_3_1_4__3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3_1_4__3"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3_1_4__3__Impl"
    // InternalBeeLangTestLanguage.g:4493:1: rule__AliasedRequiredCapability__Group_3_1_4__3__Impl : ( ';' ) ;
    public final void rule__AliasedRequiredCapability__Group_3_1_4__3__Impl() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3_1_4__3__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 307) ) { return ; }
            // InternalBeeLangTestLanguage.g:4497:1: ( ( ';' ) )
            // InternalBeeLangTestLanguage.g:4498:1: ( ';' )
            {
            // InternalBeeLangTestLanguage.g:4498:1: ( ';' )
            // InternalBeeLangTestLanguage.g:4499:2: ';'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAliasedRequiredCapabilityAccess().getSemicolonKeyword_3_1_4_3()); 
            }
            match(input,50,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAliasedRequiredCapabilityAccess().getSemicolonKeyword_3_1_4_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 307, rule__AliasedRequiredCapability__Group_3_1_4__3__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3_1_4__3__Impl"


    // $ANTLR start "rule__RequiredCapability__Group__0"
    // InternalBeeLangTestLanguage.g:4509:1: rule__RequiredCapability__Group__0 : rule__RequiredCapability__Group__0__Impl rule__RequiredCapability__Group__1 ;
    public final void rule__RequiredCapability__Group__0() throws RecognitionException {
        int rule__RequiredCapability__Group__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 308) ) { return ; }
            // InternalBeeLangTestLanguage.g:4513:1: ( rule__RequiredCapability__Group__0__Impl rule__RequiredCapability__Group__1 )
            // InternalBeeLangTestLanguage.g:4514:2: rule__RequiredCapability__Group__0__Impl rule__RequiredCapability__Group__1
            {
            pushFollow(FOLLOW_15);
            rule__RequiredCapability__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__RequiredCapability__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 308, rule__RequiredCapability__Group__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group__0"


    // $ANTLR start "rule__RequiredCapability__Group__0__Impl"
    // InternalBeeLangTestLanguage.g:4521:1: rule__RequiredCapability__Group__0__Impl : ( () ) ;
    public final void rule__RequiredCapability__Group__0__Impl() throws RecognitionException {
        int rule__RequiredCapability__Group__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 309) ) { return ; }
            // InternalBeeLangTestLanguage.g:4525:1: ( ( () ) )
            // InternalBeeLangTestLanguage.g:4526:1: ( () )
            {
            // InternalBeeLangTestLanguage.g:4526:1: ( () )
            // InternalBeeLangTestLanguage.g:4527:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRequiredCapabilityAccess().getRequiredCapabilityAction_0()); 
            }
            // InternalBeeLangTestLanguage.g:4528:2: ()
            // InternalBeeLangTestLanguage.g:4528:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRequiredCapabilityAccess().getRequiredCapabilityAction_0()); 
            }

            }


            }

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 309, rule__RequiredCapability__Group__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group__0__Impl"


    // $ANTLR start "rule__RequiredCapability__Group__1"
    // InternalBeeLangTestLanguage.g:4536:1: rule__RequiredCapability__Group__1 : rule__RequiredCapability__Group__1__Impl rule__RequiredCapability__Group__2 ;
    public final void rule__RequiredCapability__Group__1() throws RecognitionException {
        int rule__RequiredCapability__Group__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 310) ) { return ; }
            // InternalBeeLangTestLanguage.g:4540:1: ( rule__RequiredCapability__Group__1__Impl rule__RequiredCapability__Group__2 )
            // InternalBeeLangTestLanguage.g:4541:2: rule__RequiredCapability__Group__1__Impl rule__RequiredCapability__Group__2
            {
            pushFollow(FOLLOW_9);
            rule__RequiredCapability__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__RequiredCapability__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 310, rule__RequiredCapability__Group__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group__1"


    // $ANTLR start "rule__RequiredCapability__Group__1__Impl"
    // InternalBeeLangTestLanguage.g:4548:1: rule__RequiredCapability__Group__1__Impl : ( ( rule__RequiredCapability__Alternatives_1 ) ) ;
    public final void rule__RequiredCapability__Group__1__Impl() throws RecognitionException {
        int rule__RequiredCapability__Group__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 311) ) { return ; }
            // InternalBeeLangTestLanguage.g:4552:1: ( ( ( rule__RequiredCapability__Alternatives_1 ) ) )
            // InternalBeeLangTestLanguage.g:4553:1: ( ( rule__RequiredCapability__Alternatives_1 ) )
            {
            // InternalBeeLangTestLanguage.g:4553:1: ( ( rule__RequiredCapability__Alternatives_1 ) )
            // InternalBeeLangTestLanguage.g:4554:2: ( rule__RequiredCapability__Alternatives_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRequiredCapabilityAccess().getAlternatives_1()); 
            }
            // InternalBeeLangTestLanguage.g:4555:2: ( rule__RequiredCapability__Alternatives_1 )
            // InternalBeeLangTestLanguage.g:4555:3: rule__RequiredCapability__Alternatives_1
            {
            pushFollow(FOLLOW_2);
            rule__RequiredCapability__Alternatives_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRequiredCapabilityAccess().getAlternatives_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 311, rule__RequiredCapability__Group__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group__1__Impl"


    // $ANTLR start "rule__RequiredCapability__Group__2"
    // InternalBeeLangTestLanguage.g:4563:1: rule__RequiredCapability__Group__2 : rule__RequiredCapability__Group__2__Impl rule__RequiredCapability__Group__3 ;
    public final void rule__RequiredCapability__Group__2() throws RecognitionException {
        int rule__RequiredCapability__Group__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 312) ) { return ; }
            // InternalBeeLangTestLanguage.g:4567:1: ( rule__RequiredCapability__Group__2__Impl rule__RequiredCapability__Group__3 )
            // InternalBeeLangTestLanguage.g:4568:2: rule__RequiredCapability__Group__2__Impl rule__RequiredCapability__Group__3
            {
            pushFollow(FOLLOW_17);
            rule__RequiredCapability__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__RequiredCapability__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 312, rule__RequiredCapability__Group__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group__2"


    // $ANTLR start "rule__RequiredCapability__Group__2__Impl"
    // InternalBeeLangTestLanguage.g:4575:1: rule__RequiredCapability__Group__2__Impl : ( ( rule__RequiredCapability__NameAssignment_2 ) ) ;
    public final void rule__RequiredCapability__Group__2__Impl() throws RecognitionException {
        int rule__RequiredCapability__Group__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 313) ) { return ; }
            // InternalBeeLangTestLanguage.g:4579:1: ( ( ( rule__RequiredCapability__NameAssignment_2 ) ) )
            // InternalBeeLangTestLanguage.g:4580:1: ( ( rule__RequiredCapability__NameAssignment_2 ) )
            {
            // InternalBeeLangTestLanguage.g:4580:1: ( ( rule__RequiredCapability__NameAssignment_2 ) )
            // InternalBeeLangTestLanguage.g:4581:2: ( rule__RequiredCapability__NameAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRequiredCapabilityAccess().getNameAssignment_2()); 
            }
            // InternalBeeLangTestLanguage.g:4582:2: ( rule__RequiredCapability__NameAssignment_2 )
            // InternalBeeLangTestLanguage.g:4582:3: rule__RequiredCapability__NameAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__RequiredCapability__NameAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRequiredCapabilityAccess().getNameAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 313, rule__RequiredCapability__Group__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group__2__Impl"


    // $ANTLR start "rule__RequiredCapability__Group__3"
    // InternalBeeLangTestLanguage.g:4590:1: rule__RequiredCapability__Group__3 : rule__RequiredCapability__Group__3__Impl ;
    public final void rule__RequiredCapability__Group__3() throws RecognitionException {
        int rule__RequiredCapability__Group__3_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 314) ) { return ; }
            // InternalBeeLangTestLanguage.g:4594:1: ( rule__RequiredCapability__Group__3__Impl )
            // InternalBeeLangTestLanguage.g:4595:2: rule__RequiredCapability__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__RequiredCapability__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 314, rule__RequiredCapability__Group__3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group__3"


    // $ANTLR start "rule__RequiredCapability__Group__3__Impl"
    // InternalBeeLangTestLanguage.g:4601:1: rule__RequiredCapability__Group__3__Impl : ( ( rule__RequiredCapability__Group_3__0 ) ) ;
    public final void rule__RequiredCapability__Group__3__Impl() throws RecognitionException {
        int rule__RequiredCapability__Group__3__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 315) ) { return ; }
            // InternalBeeLangTestLanguage.g:4605:1: ( ( ( rule__RequiredCapability__Group_3__0 ) ) )
            // InternalBeeLangTestLanguage.g:4606:1: ( ( rule__RequiredCapability__Group_3__0 ) )
            {
            // InternalBeeLangTestLanguage.g:4606:1: ( ( rule__RequiredCapability__Group_3__0 ) )
            // InternalBeeLangTestLanguage.g:4607:2: ( rule__RequiredCapability__Group_3__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRequiredCapabilityAccess().getGroup_3()); 
            }
            // InternalBeeLangTestLanguage.g:4608:2: ( rule__RequiredCapability__Group_3__0 )
            // InternalBeeLangTestLanguage.g:4608:3: rule__RequiredCapability__Group_3__0
            {
            pushFollow(FOLLOW_2);
            rule__RequiredCapability__Group_3__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRequiredCapabilityAccess().getGroup_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 315, rule__RequiredCapability__Group__3__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group__3__Impl"


    // $ANTLR start "rule__RequiredCapability__Group_3__0"
    // InternalBeeLangTestLanguage.g:4617:1: rule__RequiredCapability__Group_3__0 : rule__RequiredCapability__Group_3__0__Impl rule__RequiredCapability__Group_3__1 ;
    public final void rule__RequiredCapability__Group_3__0() throws RecognitionException {
        int rule__RequiredCapability__Group_3__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 316) ) { return ; }
            // InternalBeeLangTestLanguage.g:4621:1: ( rule__RequiredCapability__Group_3__0__Impl rule__RequiredCapability__Group_3__1 )
            // InternalBeeLangTestLanguage.g:4622:2: rule__RequiredCapability__Group_3__0__Impl rule__RequiredCapability__Group_3__1
            {
            pushFollow(FOLLOW_21);
            rule__RequiredCapability__Group_3__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__RequiredCapability__Group_3__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 316, rule__RequiredCapability__Group_3__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3__0"


    // $ANTLR start "rule__RequiredCapability__Group_3__0__Impl"
    // InternalBeeLangTestLanguage.g:4629:1: rule__RequiredCapability__Group_3__0__Impl : ( '{' ) ;
    public final void rule__RequiredCapability__Group_3__0__Impl() throws RecognitionException {
        int rule__RequiredCapability__Group_3__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 317) ) { return ; }
            // InternalBeeLangTestLanguage.g:4633:1: ( ( '{' ) )
            // InternalBeeLangTestLanguage.g:4634:1: ( '{' )
            {
            // InternalBeeLangTestLanguage.g:4634:1: ( '{' )
            // InternalBeeLangTestLanguage.g:4635:2: '{'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRequiredCapabilityAccess().getLeftCurlyBracketKeyword_3_0()); 
            }
            match(input,44,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRequiredCapabilityAccess().getLeftCurlyBracketKeyword_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 317, rule__RequiredCapability__Group_3__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3__0__Impl"


    // $ANTLR start "rule__RequiredCapability__Group_3__1"
    // InternalBeeLangTestLanguage.g:4644:1: rule__RequiredCapability__Group_3__1 : rule__RequiredCapability__Group_3__1__Impl rule__RequiredCapability__Group_3__2 ;
    public final void rule__RequiredCapability__Group_3__1() throws RecognitionException {
        int rule__RequiredCapability__Group_3__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 318) ) { return ; }
            // InternalBeeLangTestLanguage.g:4648:1: ( rule__RequiredCapability__Group_3__1__Impl rule__RequiredCapability__Group_3__2 )
            // InternalBeeLangTestLanguage.g:4649:2: rule__RequiredCapability__Group_3__1__Impl rule__RequiredCapability__Group_3__2
            {
            pushFollow(FOLLOW_8);
            rule__RequiredCapability__Group_3__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__RequiredCapability__Group_3__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 318, rule__RequiredCapability__Group_3__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3__1"


    // $ANTLR start "rule__RequiredCapability__Group_3__1__Impl"
    // InternalBeeLangTestLanguage.g:4656:1: rule__RequiredCapability__Group_3__1__Impl : ( ( rule__RequiredCapability__UnorderedGroup_3_1 ) ) ;
    public final void rule__RequiredCapability__Group_3__1__Impl() throws RecognitionException {
        int rule__RequiredCapability__Group_3__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 319) ) { return ; }
            // InternalBeeLangTestLanguage.g:4660:1: ( ( ( rule__RequiredCapability__UnorderedGroup_3_1 ) ) )
            // InternalBeeLangTestLanguage.g:4661:1: ( ( rule__RequiredCapability__UnorderedGroup_3_1 ) )
            {
            // InternalBeeLangTestLanguage.g:4661:1: ( ( rule__RequiredCapability__UnorderedGroup_3_1 ) )
            // InternalBeeLangTestLanguage.g:4662:2: ( rule__RequiredCapability__UnorderedGroup_3_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1()); 
            }
            // InternalBeeLangTestLanguage.g:4663:2: ( rule__RequiredCapability__UnorderedGroup_3_1 )
            // InternalBeeLangTestLanguage.g:4663:3: rule__RequiredCapability__UnorderedGroup_3_1
            {
            pushFollow(FOLLOW_2);
            rule__RequiredCapability__UnorderedGroup_3_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 319, rule__RequiredCapability__Group_3__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3__1__Impl"


    // $ANTLR start "rule__RequiredCapability__Group_3__2"
    // InternalBeeLangTestLanguage.g:4671:1: rule__RequiredCapability__Group_3__2 : rule__RequiredCapability__Group_3__2__Impl ;
    public final void rule__RequiredCapability__Group_3__2() throws RecognitionException {
        int rule__RequiredCapability__Group_3__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 320) ) { return ; }
            // InternalBeeLangTestLanguage.g:4675:1: ( rule__RequiredCapability__Group_3__2__Impl )
            // InternalBeeLangTestLanguage.g:4676:2: rule__RequiredCapability__Group_3__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__RequiredCapability__Group_3__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 320, rule__RequiredCapability__Group_3__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3__2"


    // $ANTLR start "rule__RequiredCapability__Group_3__2__Impl"
    // InternalBeeLangTestLanguage.g:4682:1: rule__RequiredCapability__Group_3__2__Impl : ( '}' ) ;
    public final void rule__RequiredCapability__Group_3__2__Impl() throws RecognitionException {
        int rule__RequiredCapability__Group_3__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 321) ) { return ; }
            // InternalBeeLangTestLanguage.g:4686:1: ( ( '}' ) )
            // InternalBeeLangTestLanguage.g:4687:1: ( '}' )
            {
            // InternalBeeLangTestLanguage.g:4687:1: ( '}' )
            // InternalBeeLangTestLanguage.g:4688:2: '}'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRequiredCapabilityAccess().getRightCurlyBracketKeyword_3_2()); 
            }
            match(input,45,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRequiredCapabilityAccess().getRightCurlyBracketKeyword_3_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 321, rule__RequiredCapability__Group_3__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3__2__Impl"


    // $ANTLR start "rule__RequiredCapability__Group_3_1_0__0"
    // InternalBeeLangTestLanguage.g:4698:1: rule__RequiredCapability__Group_3_1_0__0 : rule__RequiredCapability__Group_3_1_0__0__Impl rule__RequiredCapability__Group_3_1_0__1 ;
    public final void rule__RequiredCapability__Group_3_1_0__0() throws RecognitionException {
        int rule__RequiredCapability__Group_3_1_0__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 322) ) { return ; }
            // InternalBeeLangTestLanguage.g:4702:1: ( rule__RequiredCapability__Group_3_1_0__0__Impl rule__RequiredCapability__Group_3_1_0__1 )
            // InternalBeeLangTestLanguage.g:4703:2: rule__RequiredCapability__Group_3_1_0__0__Impl rule__RequiredCapability__Group_3_1_0__1
            {
            pushFollow(FOLLOW_12);
            rule__RequiredCapability__Group_3_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__RequiredCapability__Group_3_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 322, rule__RequiredCapability__Group_3_1_0__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3_1_0__0"


    // $ANTLR start "rule__RequiredCapability__Group_3_1_0__0__Impl"
    // InternalBeeLangTestLanguage.g:4710:1: rule__RequiredCapability__Group_3_1_0__0__Impl : ( 'when' ) ;
    public final void rule__RequiredCapability__Group_3_1_0__0__Impl() throws RecognitionException {
        int rule__RequiredCapability__Group_3_1_0__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 323) ) { return ; }
            // InternalBeeLangTestLanguage.g:4714:1: ( ( 'when' ) )
            // InternalBeeLangTestLanguage.g:4715:1: ( 'when' )
            {
            // InternalBeeLangTestLanguage.g:4715:1: ( 'when' )
            // InternalBeeLangTestLanguage.g:4716:2: 'when'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRequiredCapabilityAccess().getWhenKeyword_3_1_0_0()); 
            }
            match(input,54,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRequiredCapabilityAccess().getWhenKeyword_3_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 323, rule__RequiredCapability__Group_3_1_0__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3_1_0__0__Impl"


    // $ANTLR start "rule__RequiredCapability__Group_3_1_0__1"
    // InternalBeeLangTestLanguage.g:4725:1: rule__RequiredCapability__Group_3_1_0__1 : rule__RequiredCapability__Group_3_1_0__1__Impl rule__RequiredCapability__Group_3_1_0__2 ;
    public final void rule__RequiredCapability__Group_3_1_0__1() throws RecognitionException {
        int rule__RequiredCapability__Group_3_1_0__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 324) ) { return ; }
            // InternalBeeLangTestLanguage.g:4729:1: ( rule__RequiredCapability__Group_3_1_0__1__Impl rule__RequiredCapability__Group_3_1_0__2 )
            // InternalBeeLangTestLanguage.g:4730:2: rule__RequiredCapability__Group_3_1_0__1__Impl rule__RequiredCapability__Group_3_1_0__2
            {
            pushFollow(FOLLOW_19);
            rule__RequiredCapability__Group_3_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__RequiredCapability__Group_3_1_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 324, rule__RequiredCapability__Group_3_1_0__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3_1_0__1"


    // $ANTLR start "rule__RequiredCapability__Group_3_1_0__1__Impl"
    // InternalBeeLangTestLanguage.g:4737:1: rule__RequiredCapability__Group_3_1_0__1__Impl : ( ':' ) ;
    public final void rule__RequiredCapability__Group_3_1_0__1__Impl() throws RecognitionException {
        int rule__RequiredCapability__Group_3_1_0__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 325) ) { return ; }
            // InternalBeeLangTestLanguage.g:4741:1: ( ( ':' ) )
            // InternalBeeLangTestLanguage.g:4742:1: ( ':' )
            {
            // InternalBeeLangTestLanguage.g:4742:1: ( ':' )
            // InternalBeeLangTestLanguage.g:4743:2: ':'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRequiredCapabilityAccess().getColonKeyword_3_1_0_1()); 
            }
            match(input,49,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRequiredCapabilityAccess().getColonKeyword_3_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 325, rule__RequiredCapability__Group_3_1_0__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3_1_0__1__Impl"


    // $ANTLR start "rule__RequiredCapability__Group_3_1_0__2"
    // InternalBeeLangTestLanguage.g:4752:1: rule__RequiredCapability__Group_3_1_0__2 : rule__RequiredCapability__Group_3_1_0__2__Impl rule__RequiredCapability__Group_3_1_0__3 ;
    public final void rule__RequiredCapability__Group_3_1_0__2() throws RecognitionException {
        int rule__RequiredCapability__Group_3_1_0__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 326) ) { return ; }
            // InternalBeeLangTestLanguage.g:4756:1: ( rule__RequiredCapability__Group_3_1_0__2__Impl rule__RequiredCapability__Group_3_1_0__3 )
            // InternalBeeLangTestLanguage.g:4757:2: rule__RequiredCapability__Group_3_1_0__2__Impl rule__RequiredCapability__Group_3_1_0__3
            {
            pushFollow(FOLLOW_14);
            rule__RequiredCapability__Group_3_1_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__RequiredCapability__Group_3_1_0__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 326, rule__RequiredCapability__Group_3_1_0__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3_1_0__2"


    // $ANTLR start "rule__RequiredCapability__Group_3_1_0__2__Impl"
    // InternalBeeLangTestLanguage.g:4764:1: rule__RequiredCapability__Group_3_1_0__2__Impl : ( ( rule__RequiredCapability__CondExprAssignment_3_1_0_2 ) ) ;
    public final void rule__RequiredCapability__Group_3_1_0__2__Impl() throws RecognitionException {
        int rule__RequiredCapability__Group_3_1_0__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 327) ) { return ; }
            // InternalBeeLangTestLanguage.g:4768:1: ( ( ( rule__RequiredCapability__CondExprAssignment_3_1_0_2 ) ) )
            // InternalBeeLangTestLanguage.g:4769:1: ( ( rule__RequiredCapability__CondExprAssignment_3_1_0_2 ) )
            {
            // InternalBeeLangTestLanguage.g:4769:1: ( ( rule__RequiredCapability__CondExprAssignment_3_1_0_2 ) )
            // InternalBeeLangTestLanguage.g:4770:2: ( rule__RequiredCapability__CondExprAssignment_3_1_0_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRequiredCapabilityAccess().getCondExprAssignment_3_1_0_2()); 
            }
            // InternalBeeLangTestLanguage.g:4771:2: ( rule__RequiredCapability__CondExprAssignment_3_1_0_2 )
            // InternalBeeLangTestLanguage.g:4771:3: rule__RequiredCapability__CondExprAssignment_3_1_0_2
            {
            pushFollow(FOLLOW_2);
            rule__RequiredCapability__CondExprAssignment_3_1_0_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRequiredCapabilityAccess().getCondExprAssignment_3_1_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 327, rule__RequiredCapability__Group_3_1_0__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3_1_0__2__Impl"


    // $ANTLR start "rule__RequiredCapability__Group_3_1_0__3"
    // InternalBeeLangTestLanguage.g:4779:1: rule__RequiredCapability__Group_3_1_0__3 : rule__RequiredCapability__Group_3_1_0__3__Impl ;
    public final void rule__RequiredCapability__Group_3_1_0__3() throws RecognitionException {
        int rule__RequiredCapability__Group_3_1_0__3_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 328) ) { return ; }
            // InternalBeeLangTestLanguage.g:4783:1: ( rule__RequiredCapability__Group_3_1_0__3__Impl )
            // InternalBeeLangTestLanguage.g:4784:2: rule__RequiredCapability__Group_3_1_0__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__RequiredCapability__Group_3_1_0__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 328, rule__RequiredCapability__Group_3_1_0__3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3_1_0__3"


    // $ANTLR start "rule__RequiredCapability__Group_3_1_0__3__Impl"
    // InternalBeeLangTestLanguage.g:4790:1: rule__RequiredCapability__Group_3_1_0__3__Impl : ( ';' ) ;
    public final void rule__RequiredCapability__Group_3_1_0__3__Impl() throws RecognitionException {
        int rule__RequiredCapability__Group_3_1_0__3__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 329) ) { return ; }
            // InternalBeeLangTestLanguage.g:4794:1: ( ( ';' ) )
            // InternalBeeLangTestLanguage.g:4795:1: ( ';' )
            {
            // InternalBeeLangTestLanguage.g:4795:1: ( ';' )
            // InternalBeeLangTestLanguage.g:4796:2: ';'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRequiredCapabilityAccess().getSemicolonKeyword_3_1_0_3()); 
            }
            match(input,50,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRequiredCapabilityAccess().getSemicolonKeyword_3_1_0_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 329, rule__RequiredCapability__Group_3_1_0__3__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3_1_0__3__Impl"


    // $ANTLR start "rule__RequiredCapability__Group_3_1_1__0"
    // InternalBeeLangTestLanguage.g:4806:1: rule__RequiredCapability__Group_3_1_1__0 : rule__RequiredCapability__Group_3_1_1__0__Impl rule__RequiredCapability__Group_3_1_1__1 ;
    public final void rule__RequiredCapability__Group_3_1_1__0() throws RecognitionException {
        int rule__RequiredCapability__Group_3_1_1__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 330) ) { return ; }
            // InternalBeeLangTestLanguage.g:4810:1: ( rule__RequiredCapability__Group_3_1_1__0__Impl rule__RequiredCapability__Group_3_1_1__1 )
            // InternalBeeLangTestLanguage.g:4811:2: rule__RequiredCapability__Group_3_1_1__0__Impl rule__RequiredCapability__Group_3_1_1__1
            {
            pushFollow(FOLLOW_14);
            rule__RequiredCapability__Group_3_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__RequiredCapability__Group_3_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 330, rule__RequiredCapability__Group_3_1_1__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3_1_1__0"


    // $ANTLR start "rule__RequiredCapability__Group_3_1_1__0__Impl"
    // InternalBeeLangTestLanguage.g:4818:1: rule__RequiredCapability__Group_3_1_1__0__Impl : ( ( rule__RequiredCapability__GreedyAssignment_3_1_1_0 ) ) ;
    public final void rule__RequiredCapability__Group_3_1_1__0__Impl() throws RecognitionException {
        int rule__RequiredCapability__Group_3_1_1__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 331) ) { return ; }
            // InternalBeeLangTestLanguage.g:4822:1: ( ( ( rule__RequiredCapability__GreedyAssignment_3_1_1_0 ) ) )
            // InternalBeeLangTestLanguage.g:4823:1: ( ( rule__RequiredCapability__GreedyAssignment_3_1_1_0 ) )
            {
            // InternalBeeLangTestLanguage.g:4823:1: ( ( rule__RequiredCapability__GreedyAssignment_3_1_1_0 ) )
            // InternalBeeLangTestLanguage.g:4824:2: ( rule__RequiredCapability__GreedyAssignment_3_1_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRequiredCapabilityAccess().getGreedyAssignment_3_1_1_0()); 
            }
            // InternalBeeLangTestLanguage.g:4825:2: ( rule__RequiredCapability__GreedyAssignment_3_1_1_0 )
            // InternalBeeLangTestLanguage.g:4825:3: rule__RequiredCapability__GreedyAssignment_3_1_1_0
            {
            pushFollow(FOLLOW_2);
            rule__RequiredCapability__GreedyAssignment_3_1_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRequiredCapabilityAccess().getGreedyAssignment_3_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 331, rule__RequiredCapability__Group_3_1_1__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3_1_1__0__Impl"


    // $ANTLR start "rule__RequiredCapability__Group_3_1_1__1"
    // InternalBeeLangTestLanguage.g:4833:1: rule__RequiredCapability__Group_3_1_1__1 : rule__RequiredCapability__Group_3_1_1__1__Impl ;
    public final void rule__RequiredCapability__Group_3_1_1__1() throws RecognitionException {
        int rule__RequiredCapability__Group_3_1_1__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 332) ) { return ; }
            // InternalBeeLangTestLanguage.g:4837:1: ( rule__RequiredCapability__Group_3_1_1__1__Impl )
            // InternalBeeLangTestLanguage.g:4838:2: rule__RequiredCapability__Group_3_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__RequiredCapability__Group_3_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 332, rule__RequiredCapability__Group_3_1_1__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3_1_1__1"


    // $ANTLR start "rule__RequiredCapability__Group_3_1_1__1__Impl"
    // InternalBeeLangTestLanguage.g:4844:1: rule__RequiredCapability__Group_3_1_1__1__Impl : ( ';' ) ;
    public final void rule__RequiredCapability__Group_3_1_1__1__Impl() throws RecognitionException {
        int rule__RequiredCapability__Group_3_1_1__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 333) ) { return ; }
            // InternalBeeLangTestLanguage.g:4848:1: ( ( ';' ) )
            // InternalBeeLangTestLanguage.g:4849:1: ( ';' )
            {
            // InternalBeeLangTestLanguage.g:4849:1: ( ';' )
            // InternalBeeLangTestLanguage.g:4850:2: ';'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRequiredCapabilityAccess().getSemicolonKeyword_3_1_1_1()); 
            }
            match(input,50,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRequiredCapabilityAccess().getSemicolonKeyword_3_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 333, rule__RequiredCapability__Group_3_1_1__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3_1_1__1__Impl"


    // $ANTLR start "rule__RequiredCapability__Group_3_1_2__0"
    // InternalBeeLangTestLanguage.g:4860:1: rule__RequiredCapability__Group_3_1_2__0 : rule__RequiredCapability__Group_3_1_2__0__Impl rule__RequiredCapability__Group_3_1_2__1 ;
    public final void rule__RequiredCapability__Group_3_1_2__0() throws RecognitionException {
        int rule__RequiredCapability__Group_3_1_2__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 334) ) { return ; }
            // InternalBeeLangTestLanguage.g:4864:1: ( rule__RequiredCapability__Group_3_1_2__0__Impl rule__RequiredCapability__Group_3_1_2__1 )
            // InternalBeeLangTestLanguage.g:4865:2: rule__RequiredCapability__Group_3_1_2__0__Impl rule__RequiredCapability__Group_3_1_2__1
            {
            pushFollow(FOLLOW_12);
            rule__RequiredCapability__Group_3_1_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__RequiredCapability__Group_3_1_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 334, rule__RequiredCapability__Group_3_1_2__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3_1_2__0"


    // $ANTLR start "rule__RequiredCapability__Group_3_1_2__0__Impl"
    // InternalBeeLangTestLanguage.g:4872:1: rule__RequiredCapability__Group_3_1_2__0__Impl : ( 'requires-min' ) ;
    public final void rule__RequiredCapability__Group_3_1_2__0__Impl() throws RecognitionException {
        int rule__RequiredCapability__Group_3_1_2__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 335) ) { return ; }
            // InternalBeeLangTestLanguage.g:4876:1: ( ( 'requires-min' ) )
            // InternalBeeLangTestLanguage.g:4877:1: ( 'requires-min' )
            {
            // InternalBeeLangTestLanguage.g:4877:1: ( 'requires-min' )
            // InternalBeeLangTestLanguage.g:4878:2: 'requires-min'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRequiredCapabilityAccess().getRequiresMinKeyword_3_1_2_0()); 
            }
            match(input,57,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRequiredCapabilityAccess().getRequiresMinKeyword_3_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 335, rule__RequiredCapability__Group_3_1_2__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3_1_2__0__Impl"


    // $ANTLR start "rule__RequiredCapability__Group_3_1_2__1"
    // InternalBeeLangTestLanguage.g:4887:1: rule__RequiredCapability__Group_3_1_2__1 : rule__RequiredCapability__Group_3_1_2__1__Impl rule__RequiredCapability__Group_3_1_2__2 ;
    public final void rule__RequiredCapability__Group_3_1_2__1() throws RecognitionException {
        int rule__RequiredCapability__Group_3_1_2__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 336) ) { return ; }
            // InternalBeeLangTestLanguage.g:4891:1: ( rule__RequiredCapability__Group_3_1_2__1__Impl rule__RequiredCapability__Group_3_1_2__2 )
            // InternalBeeLangTestLanguage.g:4892:2: rule__RequiredCapability__Group_3_1_2__1__Impl rule__RequiredCapability__Group_3_1_2__2
            {
            pushFollow(FOLLOW_22);
            rule__RequiredCapability__Group_3_1_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__RequiredCapability__Group_3_1_2__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 336, rule__RequiredCapability__Group_3_1_2__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3_1_2__1"


    // $ANTLR start "rule__RequiredCapability__Group_3_1_2__1__Impl"
    // InternalBeeLangTestLanguage.g:4899:1: rule__RequiredCapability__Group_3_1_2__1__Impl : ( ':' ) ;
    public final void rule__RequiredCapability__Group_3_1_2__1__Impl() throws RecognitionException {
        int rule__RequiredCapability__Group_3_1_2__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 337) ) { return ; }
            // InternalBeeLangTestLanguage.g:4903:1: ( ( ':' ) )
            // InternalBeeLangTestLanguage.g:4904:1: ( ':' )
            {
            // InternalBeeLangTestLanguage.g:4904:1: ( ':' )
            // InternalBeeLangTestLanguage.g:4905:2: ':'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRequiredCapabilityAccess().getColonKeyword_3_1_2_1()); 
            }
            match(input,49,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRequiredCapabilityAccess().getColonKeyword_3_1_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 337, rule__RequiredCapability__Group_3_1_2__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3_1_2__1__Impl"


    // $ANTLR start "rule__RequiredCapability__Group_3_1_2__2"
    // InternalBeeLangTestLanguage.g:4914:1: rule__RequiredCapability__Group_3_1_2__2 : rule__RequiredCapability__Group_3_1_2__2__Impl rule__RequiredCapability__Group_3_1_2__3 ;
    public final void rule__RequiredCapability__Group_3_1_2__2() throws RecognitionException {
        int rule__RequiredCapability__Group_3_1_2__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 338) ) { return ; }
            // InternalBeeLangTestLanguage.g:4918:1: ( rule__RequiredCapability__Group_3_1_2__2__Impl rule__RequiredCapability__Group_3_1_2__3 )
            // InternalBeeLangTestLanguage.g:4919:2: rule__RequiredCapability__Group_3_1_2__2__Impl rule__RequiredCapability__Group_3_1_2__3
            {
            pushFollow(FOLLOW_14);
            rule__RequiredCapability__Group_3_1_2__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__RequiredCapability__Group_3_1_2__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 338, rule__RequiredCapability__Group_3_1_2__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3_1_2__2"


    // $ANTLR start "rule__RequiredCapability__Group_3_1_2__2__Impl"
    // InternalBeeLangTestLanguage.g:4926:1: rule__RequiredCapability__Group_3_1_2__2__Impl : ( ( rule__RequiredCapability__MinAssignment_3_1_2_2 ) ) ;
    public final void rule__RequiredCapability__Group_3_1_2__2__Impl() throws RecognitionException {
        int rule__RequiredCapability__Group_3_1_2__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 339) ) { return ; }
            // InternalBeeLangTestLanguage.g:4930:1: ( ( ( rule__RequiredCapability__MinAssignment_3_1_2_2 ) ) )
            // InternalBeeLangTestLanguage.g:4931:1: ( ( rule__RequiredCapability__MinAssignment_3_1_2_2 ) )
            {
            // InternalBeeLangTestLanguage.g:4931:1: ( ( rule__RequiredCapability__MinAssignment_3_1_2_2 ) )
            // InternalBeeLangTestLanguage.g:4932:2: ( rule__RequiredCapability__MinAssignment_3_1_2_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRequiredCapabilityAccess().getMinAssignment_3_1_2_2()); 
            }
            // InternalBeeLangTestLanguage.g:4933:2: ( rule__RequiredCapability__MinAssignment_3_1_2_2 )
            // InternalBeeLangTestLanguage.g:4933:3: rule__RequiredCapability__MinAssignment_3_1_2_2
            {
            pushFollow(FOLLOW_2);
            rule__RequiredCapability__MinAssignment_3_1_2_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRequiredCapabilityAccess().getMinAssignment_3_1_2_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 339, rule__RequiredCapability__Group_3_1_2__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3_1_2__2__Impl"


    // $ANTLR start "rule__RequiredCapability__Group_3_1_2__3"
    // InternalBeeLangTestLanguage.g:4941:1: rule__RequiredCapability__Group_3_1_2__3 : rule__RequiredCapability__Group_3_1_2__3__Impl ;
    public final void rule__RequiredCapability__Group_3_1_2__3() throws RecognitionException {
        int rule__RequiredCapability__Group_3_1_2__3_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 340) ) { return ; }
            // InternalBeeLangTestLanguage.g:4945:1: ( rule__RequiredCapability__Group_3_1_2__3__Impl )
            // InternalBeeLangTestLanguage.g:4946:2: rule__RequiredCapability__Group_3_1_2__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__RequiredCapability__Group_3_1_2__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 340, rule__RequiredCapability__Group_3_1_2__3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3_1_2__3"


    // $ANTLR start "rule__RequiredCapability__Group_3_1_2__3__Impl"
    // InternalBeeLangTestLanguage.g:4952:1: rule__RequiredCapability__Group_3_1_2__3__Impl : ( ';' ) ;
    public final void rule__RequiredCapability__Group_3_1_2__3__Impl() throws RecognitionException {
        int rule__RequiredCapability__Group_3_1_2__3__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 341) ) { return ; }
            // InternalBeeLangTestLanguage.g:4956:1: ( ( ';' ) )
            // InternalBeeLangTestLanguage.g:4957:1: ( ';' )
            {
            // InternalBeeLangTestLanguage.g:4957:1: ( ';' )
            // InternalBeeLangTestLanguage.g:4958:2: ';'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRequiredCapabilityAccess().getSemicolonKeyword_3_1_2_3()); 
            }
            match(input,50,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRequiredCapabilityAccess().getSemicolonKeyword_3_1_2_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 341, rule__RequiredCapability__Group_3_1_2__3__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3_1_2__3__Impl"


    // $ANTLR start "rule__RequiredCapability__Group_3_1_3__0"
    // InternalBeeLangTestLanguage.g:4968:1: rule__RequiredCapability__Group_3_1_3__0 : rule__RequiredCapability__Group_3_1_3__0__Impl rule__RequiredCapability__Group_3_1_3__1 ;
    public final void rule__RequiredCapability__Group_3_1_3__0() throws RecognitionException {
        int rule__RequiredCapability__Group_3_1_3__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 342) ) { return ; }
            // InternalBeeLangTestLanguage.g:4972:1: ( rule__RequiredCapability__Group_3_1_3__0__Impl rule__RequiredCapability__Group_3_1_3__1 )
            // InternalBeeLangTestLanguage.g:4973:2: rule__RequiredCapability__Group_3_1_3__0__Impl rule__RequiredCapability__Group_3_1_3__1
            {
            pushFollow(FOLLOW_12);
            rule__RequiredCapability__Group_3_1_3__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__RequiredCapability__Group_3_1_3__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 342, rule__RequiredCapability__Group_3_1_3__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3_1_3__0"


    // $ANTLR start "rule__RequiredCapability__Group_3_1_3__0__Impl"
    // InternalBeeLangTestLanguage.g:4980:1: rule__RequiredCapability__Group_3_1_3__0__Impl : ( 'requires-max' ) ;
    public final void rule__RequiredCapability__Group_3_1_3__0__Impl() throws RecognitionException {
        int rule__RequiredCapability__Group_3_1_3__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 343) ) { return ; }
            // InternalBeeLangTestLanguage.g:4984:1: ( ( 'requires-max' ) )
            // InternalBeeLangTestLanguage.g:4985:1: ( 'requires-max' )
            {
            // InternalBeeLangTestLanguage.g:4985:1: ( 'requires-max' )
            // InternalBeeLangTestLanguage.g:4986:2: 'requires-max'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRequiredCapabilityAccess().getRequiresMaxKeyword_3_1_3_0()); 
            }
            match(input,58,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRequiredCapabilityAccess().getRequiresMaxKeyword_3_1_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 343, rule__RequiredCapability__Group_3_1_3__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3_1_3__0__Impl"


    // $ANTLR start "rule__RequiredCapability__Group_3_1_3__1"
    // InternalBeeLangTestLanguage.g:4995:1: rule__RequiredCapability__Group_3_1_3__1 : rule__RequiredCapability__Group_3_1_3__1__Impl rule__RequiredCapability__Group_3_1_3__2 ;
    public final void rule__RequiredCapability__Group_3_1_3__1() throws RecognitionException {
        int rule__RequiredCapability__Group_3_1_3__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 344) ) { return ; }
            // InternalBeeLangTestLanguage.g:4999:1: ( rule__RequiredCapability__Group_3_1_3__1__Impl rule__RequiredCapability__Group_3_1_3__2 )
            // InternalBeeLangTestLanguage.g:5000:2: rule__RequiredCapability__Group_3_1_3__1__Impl rule__RequiredCapability__Group_3_1_3__2
            {
            pushFollow(FOLLOW_22);
            rule__RequiredCapability__Group_3_1_3__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__RequiredCapability__Group_3_1_3__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 344, rule__RequiredCapability__Group_3_1_3__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3_1_3__1"


    // $ANTLR start "rule__RequiredCapability__Group_3_1_3__1__Impl"
    // InternalBeeLangTestLanguage.g:5007:1: rule__RequiredCapability__Group_3_1_3__1__Impl : ( ':' ) ;
    public final void rule__RequiredCapability__Group_3_1_3__1__Impl() throws RecognitionException {
        int rule__RequiredCapability__Group_3_1_3__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 345) ) { return ; }
            // InternalBeeLangTestLanguage.g:5011:1: ( ( ':' ) )
            // InternalBeeLangTestLanguage.g:5012:1: ( ':' )
            {
            // InternalBeeLangTestLanguage.g:5012:1: ( ':' )
            // InternalBeeLangTestLanguage.g:5013:2: ':'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRequiredCapabilityAccess().getColonKeyword_3_1_3_1()); 
            }
            match(input,49,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRequiredCapabilityAccess().getColonKeyword_3_1_3_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 345, rule__RequiredCapability__Group_3_1_3__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3_1_3__1__Impl"


    // $ANTLR start "rule__RequiredCapability__Group_3_1_3__2"
    // InternalBeeLangTestLanguage.g:5022:1: rule__RequiredCapability__Group_3_1_3__2 : rule__RequiredCapability__Group_3_1_3__2__Impl rule__RequiredCapability__Group_3_1_3__3 ;
    public final void rule__RequiredCapability__Group_3_1_3__2() throws RecognitionException {
        int rule__RequiredCapability__Group_3_1_3__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 346) ) { return ; }
            // InternalBeeLangTestLanguage.g:5026:1: ( rule__RequiredCapability__Group_3_1_3__2__Impl rule__RequiredCapability__Group_3_1_3__3 )
            // InternalBeeLangTestLanguage.g:5027:2: rule__RequiredCapability__Group_3_1_3__2__Impl rule__RequiredCapability__Group_3_1_3__3
            {
            pushFollow(FOLLOW_14);
            rule__RequiredCapability__Group_3_1_3__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__RequiredCapability__Group_3_1_3__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 346, rule__RequiredCapability__Group_3_1_3__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3_1_3__2"


    // $ANTLR start "rule__RequiredCapability__Group_3_1_3__2__Impl"
    // InternalBeeLangTestLanguage.g:5034:1: rule__RequiredCapability__Group_3_1_3__2__Impl : ( ( rule__RequiredCapability__MaxAssignment_3_1_3_2 ) ) ;
    public final void rule__RequiredCapability__Group_3_1_3__2__Impl() throws RecognitionException {
        int rule__RequiredCapability__Group_3_1_3__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 347) ) { return ; }
            // InternalBeeLangTestLanguage.g:5038:1: ( ( ( rule__RequiredCapability__MaxAssignment_3_1_3_2 ) ) )
            // InternalBeeLangTestLanguage.g:5039:1: ( ( rule__RequiredCapability__MaxAssignment_3_1_3_2 ) )
            {
            // InternalBeeLangTestLanguage.g:5039:1: ( ( rule__RequiredCapability__MaxAssignment_3_1_3_2 ) )
            // InternalBeeLangTestLanguage.g:5040:2: ( rule__RequiredCapability__MaxAssignment_3_1_3_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRequiredCapabilityAccess().getMaxAssignment_3_1_3_2()); 
            }
            // InternalBeeLangTestLanguage.g:5041:2: ( rule__RequiredCapability__MaxAssignment_3_1_3_2 )
            // InternalBeeLangTestLanguage.g:5041:3: rule__RequiredCapability__MaxAssignment_3_1_3_2
            {
            pushFollow(FOLLOW_2);
            rule__RequiredCapability__MaxAssignment_3_1_3_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRequiredCapabilityAccess().getMaxAssignment_3_1_3_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 347, rule__RequiredCapability__Group_3_1_3__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3_1_3__2__Impl"


    // $ANTLR start "rule__RequiredCapability__Group_3_1_3__3"
    // InternalBeeLangTestLanguage.g:5049:1: rule__RequiredCapability__Group_3_1_3__3 : rule__RequiredCapability__Group_3_1_3__3__Impl ;
    public final void rule__RequiredCapability__Group_3_1_3__3() throws RecognitionException {
        int rule__RequiredCapability__Group_3_1_3__3_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 348) ) { return ; }
            // InternalBeeLangTestLanguage.g:5053:1: ( rule__RequiredCapability__Group_3_1_3__3__Impl )
            // InternalBeeLangTestLanguage.g:5054:2: rule__RequiredCapability__Group_3_1_3__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__RequiredCapability__Group_3_1_3__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 348, rule__RequiredCapability__Group_3_1_3__3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3_1_3__3"


    // $ANTLR start "rule__RequiredCapability__Group_3_1_3__3__Impl"
    // InternalBeeLangTestLanguage.g:5060:1: rule__RequiredCapability__Group_3_1_3__3__Impl : ( ';' ) ;
    public final void rule__RequiredCapability__Group_3_1_3__3__Impl() throws RecognitionException {
        int rule__RequiredCapability__Group_3_1_3__3__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 349) ) { return ; }
            // InternalBeeLangTestLanguage.g:5064:1: ( ( ';' ) )
            // InternalBeeLangTestLanguage.g:5065:1: ( ';' )
            {
            // InternalBeeLangTestLanguage.g:5065:1: ( ';' )
            // InternalBeeLangTestLanguage.g:5066:2: ';'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRequiredCapabilityAccess().getSemicolonKeyword_3_1_3_3()); 
            }
            match(input,50,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRequiredCapabilityAccess().getSemicolonKeyword_3_1_3_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 349, rule__RequiredCapability__Group_3_1_3__3__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3_1_3__3__Impl"


    // $ANTLR start "rule__RequiredCapability__Group_3_1_4__0"
    // InternalBeeLangTestLanguage.g:5076:1: rule__RequiredCapability__Group_3_1_4__0 : rule__RequiredCapability__Group_3_1_4__0__Impl rule__RequiredCapability__Group_3_1_4__1 ;
    public final void rule__RequiredCapability__Group_3_1_4__0() throws RecognitionException {
        int rule__RequiredCapability__Group_3_1_4__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 350) ) { return ; }
            // InternalBeeLangTestLanguage.g:5080:1: ( rule__RequiredCapability__Group_3_1_4__0__Impl rule__RequiredCapability__Group_3_1_4__1 )
            // InternalBeeLangTestLanguage.g:5081:2: rule__RequiredCapability__Group_3_1_4__0__Impl rule__RequiredCapability__Group_3_1_4__1
            {
            pushFollow(FOLLOW_12);
            rule__RequiredCapability__Group_3_1_4__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__RequiredCapability__Group_3_1_4__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 350, rule__RequiredCapability__Group_3_1_4__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3_1_4__0"


    // $ANTLR start "rule__RequiredCapability__Group_3_1_4__0__Impl"
    // InternalBeeLangTestLanguage.g:5088:1: rule__RequiredCapability__Group_3_1_4__0__Impl : ( 'version' ) ;
    public final void rule__RequiredCapability__Group_3_1_4__0__Impl() throws RecognitionException {
        int rule__RequiredCapability__Group_3_1_4__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 351) ) { return ; }
            // InternalBeeLangTestLanguage.g:5092:1: ( ( 'version' ) )
            // InternalBeeLangTestLanguage.g:5093:1: ( 'version' )
            {
            // InternalBeeLangTestLanguage.g:5093:1: ( 'version' )
            // InternalBeeLangTestLanguage.g:5094:2: 'version'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRequiredCapabilityAccess().getVersionKeyword_3_1_4_0()); 
            }
            match(input,46,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRequiredCapabilityAccess().getVersionKeyword_3_1_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 351, rule__RequiredCapability__Group_3_1_4__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3_1_4__0__Impl"


    // $ANTLR start "rule__RequiredCapability__Group_3_1_4__1"
    // InternalBeeLangTestLanguage.g:5103:1: rule__RequiredCapability__Group_3_1_4__1 : rule__RequiredCapability__Group_3_1_4__1__Impl rule__RequiredCapability__Group_3_1_4__2 ;
    public final void rule__RequiredCapability__Group_3_1_4__1() throws RecognitionException {
        int rule__RequiredCapability__Group_3_1_4__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 352) ) { return ; }
            // InternalBeeLangTestLanguage.g:5107:1: ( rule__RequiredCapability__Group_3_1_4__1__Impl rule__RequiredCapability__Group_3_1_4__2 )
            // InternalBeeLangTestLanguage.g:5108:2: rule__RequiredCapability__Group_3_1_4__1__Impl rule__RequiredCapability__Group_3_1_4__2
            {
            pushFollow(FOLLOW_9);
            rule__RequiredCapability__Group_3_1_4__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__RequiredCapability__Group_3_1_4__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 352, rule__RequiredCapability__Group_3_1_4__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3_1_4__1"


    // $ANTLR start "rule__RequiredCapability__Group_3_1_4__1__Impl"
    // InternalBeeLangTestLanguage.g:5115:1: rule__RequiredCapability__Group_3_1_4__1__Impl : ( ':' ) ;
    public final void rule__RequiredCapability__Group_3_1_4__1__Impl() throws RecognitionException {
        int rule__RequiredCapability__Group_3_1_4__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 353) ) { return ; }
            // InternalBeeLangTestLanguage.g:5119:1: ( ( ':' ) )
            // InternalBeeLangTestLanguage.g:5120:1: ( ':' )
            {
            // InternalBeeLangTestLanguage.g:5120:1: ( ':' )
            // InternalBeeLangTestLanguage.g:5121:2: ':'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRequiredCapabilityAccess().getColonKeyword_3_1_4_1()); 
            }
            match(input,49,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRequiredCapabilityAccess().getColonKeyword_3_1_4_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 353, rule__RequiredCapability__Group_3_1_4__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3_1_4__1__Impl"


    // $ANTLR start "rule__RequiredCapability__Group_3_1_4__2"
    // InternalBeeLangTestLanguage.g:5130:1: rule__RequiredCapability__Group_3_1_4__2 : rule__RequiredCapability__Group_3_1_4__2__Impl rule__RequiredCapability__Group_3_1_4__3 ;
    public final void rule__RequiredCapability__Group_3_1_4__2() throws RecognitionException {
        int rule__RequiredCapability__Group_3_1_4__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 354) ) { return ; }
            // InternalBeeLangTestLanguage.g:5134:1: ( rule__RequiredCapability__Group_3_1_4__2__Impl rule__RequiredCapability__Group_3_1_4__3 )
            // InternalBeeLangTestLanguage.g:5135:2: rule__RequiredCapability__Group_3_1_4__2__Impl rule__RequiredCapability__Group_3_1_4__3
            {
            pushFollow(FOLLOW_14);
            rule__RequiredCapability__Group_3_1_4__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__RequiredCapability__Group_3_1_4__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 354, rule__RequiredCapability__Group_3_1_4__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3_1_4__2"


    // $ANTLR start "rule__RequiredCapability__Group_3_1_4__2__Impl"
    // InternalBeeLangTestLanguage.g:5142:1: rule__RequiredCapability__Group_3_1_4__2__Impl : ( ( rule__RequiredCapability__VersionRangeAssignment_3_1_4_2 ) ) ;
    public final void rule__RequiredCapability__Group_3_1_4__2__Impl() throws RecognitionException {
        int rule__RequiredCapability__Group_3_1_4__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 355) ) { return ; }
            // InternalBeeLangTestLanguage.g:5146:1: ( ( ( rule__RequiredCapability__VersionRangeAssignment_3_1_4_2 ) ) )
            // InternalBeeLangTestLanguage.g:5147:1: ( ( rule__RequiredCapability__VersionRangeAssignment_3_1_4_2 ) )
            {
            // InternalBeeLangTestLanguage.g:5147:1: ( ( rule__RequiredCapability__VersionRangeAssignment_3_1_4_2 ) )
            // InternalBeeLangTestLanguage.g:5148:2: ( rule__RequiredCapability__VersionRangeAssignment_3_1_4_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRequiredCapabilityAccess().getVersionRangeAssignment_3_1_4_2()); 
            }
            // InternalBeeLangTestLanguage.g:5149:2: ( rule__RequiredCapability__VersionRangeAssignment_3_1_4_2 )
            // InternalBeeLangTestLanguage.g:5149:3: rule__RequiredCapability__VersionRangeAssignment_3_1_4_2
            {
            pushFollow(FOLLOW_2);
            rule__RequiredCapability__VersionRangeAssignment_3_1_4_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRequiredCapabilityAccess().getVersionRangeAssignment_3_1_4_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 355, rule__RequiredCapability__Group_3_1_4__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3_1_4__2__Impl"


    // $ANTLR start "rule__RequiredCapability__Group_3_1_4__3"
    // InternalBeeLangTestLanguage.g:5157:1: rule__RequiredCapability__Group_3_1_4__3 : rule__RequiredCapability__Group_3_1_4__3__Impl ;
    public final void rule__RequiredCapability__Group_3_1_4__3() throws RecognitionException {
        int rule__RequiredCapability__Group_3_1_4__3_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 356) ) { return ; }
            // InternalBeeLangTestLanguage.g:5161:1: ( rule__RequiredCapability__Group_3_1_4__3__Impl )
            // InternalBeeLangTestLanguage.g:5162:2: rule__RequiredCapability__Group_3_1_4__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__RequiredCapability__Group_3_1_4__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 356, rule__RequiredCapability__Group_3_1_4__3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3_1_4__3"


    // $ANTLR start "rule__RequiredCapability__Group_3_1_4__3__Impl"
    // InternalBeeLangTestLanguage.g:5168:1: rule__RequiredCapability__Group_3_1_4__3__Impl : ( ';' ) ;
    public final void rule__RequiredCapability__Group_3_1_4__3__Impl() throws RecognitionException {
        int rule__RequiredCapability__Group_3_1_4__3__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 357) ) { return ; }
            // InternalBeeLangTestLanguage.g:5172:1: ( ( ';' ) )
            // InternalBeeLangTestLanguage.g:5173:1: ( ';' )
            {
            // InternalBeeLangTestLanguage.g:5173:1: ( ';' )
            // InternalBeeLangTestLanguage.g:5174:2: ';'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRequiredCapabilityAccess().getSemicolonKeyword_3_1_4_3()); 
            }
            match(input,50,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRequiredCapabilityAccess().getSemicolonKeyword_3_1_4_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 357, rule__RequiredCapability__Group_3_1_4__3__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3_1_4__3__Impl"


    // $ANTLR start "rule__Path__Group_1__0"
    // InternalBeeLangTestLanguage.g:5184:1: rule__Path__Group_1__0 : rule__Path__Group_1__0__Impl rule__Path__Group_1__1 ;
    public final void rule__Path__Group_1__0() throws RecognitionException {
        int rule__Path__Group_1__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 358) ) { return ; }
            // InternalBeeLangTestLanguage.g:5188:1: ( rule__Path__Group_1__0__Impl rule__Path__Group_1__1 )
            // InternalBeeLangTestLanguage.g:5189:2: rule__Path__Group_1__0__Impl rule__Path__Group_1__1
            {
            pushFollow(FOLLOW_13);
            rule__Path__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Path__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 358, rule__Path__Group_1__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Path__Group_1__0"


    // $ANTLR start "rule__Path__Group_1__0__Impl"
    // InternalBeeLangTestLanguage.g:5196:1: rule__Path__Group_1__0__Impl : ( ( '/' )? ) ;
    public final void rule__Path__Group_1__0__Impl() throws RecognitionException {
        int rule__Path__Group_1__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 359) ) { return ; }
            // InternalBeeLangTestLanguage.g:5200:1: ( ( ( '/' )? ) )
            // InternalBeeLangTestLanguage.g:5201:1: ( ( '/' )? )
            {
            // InternalBeeLangTestLanguage.g:5201:1: ( ( '/' )? )
            // InternalBeeLangTestLanguage.g:5202:2: ( '/' )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPathAccess().getSolidusKeyword_1_0()); 
            }
            // InternalBeeLangTestLanguage.g:5203:2: ( '/' )?
            int alt41=2;
            int LA41_0 = input.LA(1);

            if ( (LA41_0==33) ) {
                alt41=1;
            }
            switch (alt41) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:5203:3: '/'
                    {
                    match(input,33,FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPathAccess().getSolidusKeyword_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 359, rule__Path__Group_1__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Path__Group_1__0__Impl"


    // $ANTLR start "rule__Path__Group_1__1"
    // InternalBeeLangTestLanguage.g:5211:1: rule__Path__Group_1__1 : rule__Path__Group_1__1__Impl rule__Path__Group_1__2 ;
    public final void rule__Path__Group_1__1() throws RecognitionException {
        int rule__Path__Group_1__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 360) ) { return ; }
            // InternalBeeLangTestLanguage.g:5215:1: ( rule__Path__Group_1__1__Impl rule__Path__Group_1__2 )
            // InternalBeeLangTestLanguage.g:5216:2: rule__Path__Group_1__1__Impl rule__Path__Group_1__2
            {
            pushFollow(FOLLOW_23);
            rule__Path__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Path__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 360, rule__Path__Group_1__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Path__Group_1__1"


    // $ANTLR start "rule__Path__Group_1__1__Impl"
    // InternalBeeLangTestLanguage.g:5223:1: rule__Path__Group_1__1__Impl : ( ruleQID ) ;
    public final void rule__Path__Group_1__1__Impl() throws RecognitionException {
        int rule__Path__Group_1__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 361) ) { return ; }
            // InternalBeeLangTestLanguage.g:5227:1: ( ( ruleQID ) )
            // InternalBeeLangTestLanguage.g:5228:1: ( ruleQID )
            {
            // InternalBeeLangTestLanguage.g:5228:1: ( ruleQID )
            // InternalBeeLangTestLanguage.g:5229:2: ruleQID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPathAccess().getQIDParserRuleCall_1_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleQID();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPathAccess().getQIDParserRuleCall_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 361, rule__Path__Group_1__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Path__Group_1__1__Impl"


    // $ANTLR start "rule__Path__Group_1__2"
    // InternalBeeLangTestLanguage.g:5238:1: rule__Path__Group_1__2 : rule__Path__Group_1__2__Impl rule__Path__Group_1__3 ;
    public final void rule__Path__Group_1__2() throws RecognitionException {
        int rule__Path__Group_1__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 362) ) { return ; }
            // InternalBeeLangTestLanguage.g:5242:1: ( rule__Path__Group_1__2__Impl rule__Path__Group_1__3 )
            // InternalBeeLangTestLanguage.g:5243:2: rule__Path__Group_1__2__Impl rule__Path__Group_1__3
            {
            pushFollow(FOLLOW_23);
            rule__Path__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Path__Group_1__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 362, rule__Path__Group_1__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Path__Group_1__2"


    // $ANTLR start "rule__Path__Group_1__2__Impl"
    // InternalBeeLangTestLanguage.g:5250:1: rule__Path__Group_1__2__Impl : ( ( rule__Path__Group_1_2__0 )* ) ;
    public final void rule__Path__Group_1__2__Impl() throws RecognitionException {
        int rule__Path__Group_1__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 363) ) { return ; }
            // InternalBeeLangTestLanguage.g:5254:1: ( ( ( rule__Path__Group_1_2__0 )* ) )
            // InternalBeeLangTestLanguage.g:5255:1: ( ( rule__Path__Group_1_2__0 )* )
            {
            // InternalBeeLangTestLanguage.g:5255:1: ( ( rule__Path__Group_1_2__0 )* )
            // InternalBeeLangTestLanguage.g:5256:2: ( rule__Path__Group_1_2__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPathAccess().getGroup_1_2()); 
            }
            // InternalBeeLangTestLanguage.g:5257:2: ( rule__Path__Group_1_2__0 )*
            loop42:
            do {
                int alt42=2;
                int LA42_0 = input.LA(1);

                if ( (LA42_0==33) ) {
                    int LA42_1 = input.LA(2);

                    if ( (LA42_1==RULE_ID) ) {
                        alt42=1;
                    }


                }


                switch (alt42) {
            	case 1 :
            	    // InternalBeeLangTestLanguage.g:5257:3: rule__Path__Group_1_2__0
            	    {
            	    pushFollow(FOLLOW_24);
            	    rule__Path__Group_1_2__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop42;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPathAccess().getGroup_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 363, rule__Path__Group_1__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Path__Group_1__2__Impl"


    // $ANTLR start "rule__Path__Group_1__3"
    // InternalBeeLangTestLanguage.g:5265:1: rule__Path__Group_1__3 : rule__Path__Group_1__3__Impl ;
    public final void rule__Path__Group_1__3() throws RecognitionException {
        int rule__Path__Group_1__3_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 364) ) { return ; }
            // InternalBeeLangTestLanguage.g:5269:1: ( rule__Path__Group_1__3__Impl )
            // InternalBeeLangTestLanguage.g:5270:2: rule__Path__Group_1__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Path__Group_1__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 364, rule__Path__Group_1__3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Path__Group_1__3"


    // $ANTLR start "rule__Path__Group_1__3__Impl"
    // InternalBeeLangTestLanguage.g:5276:1: rule__Path__Group_1__3__Impl : ( ( '/' )? ) ;
    public final void rule__Path__Group_1__3__Impl() throws RecognitionException {
        int rule__Path__Group_1__3__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 365) ) { return ; }
            // InternalBeeLangTestLanguage.g:5280:1: ( ( ( '/' )? ) )
            // InternalBeeLangTestLanguage.g:5281:1: ( ( '/' )? )
            {
            // InternalBeeLangTestLanguage.g:5281:1: ( ( '/' )? )
            // InternalBeeLangTestLanguage.g:5282:2: ( '/' )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPathAccess().getSolidusKeyword_1_3()); 
            }
            // InternalBeeLangTestLanguage.g:5283:2: ( '/' )?
            int alt43=2;
            int LA43_0 = input.LA(1);

            if ( (LA43_0==33) ) {
                alt43=1;
            }
            switch (alt43) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:5283:3: '/'
                    {
                    match(input,33,FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPathAccess().getSolidusKeyword_1_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 365, rule__Path__Group_1__3__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Path__Group_1__3__Impl"


    // $ANTLR start "rule__Path__Group_1_2__0"
    // InternalBeeLangTestLanguage.g:5292:1: rule__Path__Group_1_2__0 : rule__Path__Group_1_2__0__Impl rule__Path__Group_1_2__1 ;
    public final void rule__Path__Group_1_2__0() throws RecognitionException {
        int rule__Path__Group_1_2__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 366) ) { return ; }
            // InternalBeeLangTestLanguage.g:5296:1: ( rule__Path__Group_1_2__0__Impl rule__Path__Group_1_2__1 )
            // InternalBeeLangTestLanguage.g:5297:2: rule__Path__Group_1_2__0__Impl rule__Path__Group_1_2__1
            {
            pushFollow(FOLLOW_13);
            rule__Path__Group_1_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Path__Group_1_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 366, rule__Path__Group_1_2__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Path__Group_1_2__0"


    // $ANTLR start "rule__Path__Group_1_2__0__Impl"
    // InternalBeeLangTestLanguage.g:5304:1: rule__Path__Group_1_2__0__Impl : ( '/' ) ;
    public final void rule__Path__Group_1_2__0__Impl() throws RecognitionException {
        int rule__Path__Group_1_2__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 367) ) { return ; }
            // InternalBeeLangTestLanguage.g:5308:1: ( ( '/' ) )
            // InternalBeeLangTestLanguage.g:5309:1: ( '/' )
            {
            // InternalBeeLangTestLanguage.g:5309:1: ( '/' )
            // InternalBeeLangTestLanguage.g:5310:2: '/'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPathAccess().getSolidusKeyword_1_2_0()); 
            }
            match(input,33,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPathAccess().getSolidusKeyword_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 367, rule__Path__Group_1_2__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Path__Group_1_2__0__Impl"


    // $ANTLR start "rule__Path__Group_1_2__1"
    // InternalBeeLangTestLanguage.g:5319:1: rule__Path__Group_1_2__1 : rule__Path__Group_1_2__1__Impl ;
    public final void rule__Path__Group_1_2__1() throws RecognitionException {
        int rule__Path__Group_1_2__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 368) ) { return ; }
            // InternalBeeLangTestLanguage.g:5323:1: ( rule__Path__Group_1_2__1__Impl )
            // InternalBeeLangTestLanguage.g:5324:2: rule__Path__Group_1_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Path__Group_1_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 368, rule__Path__Group_1_2__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Path__Group_1_2__1"


    // $ANTLR start "rule__Path__Group_1_2__1__Impl"
    // InternalBeeLangTestLanguage.g:5330:1: rule__Path__Group_1_2__1__Impl : ( ruleQID ) ;
    public final void rule__Path__Group_1_2__1__Impl() throws RecognitionException {
        int rule__Path__Group_1_2__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 369) ) { return ; }
            // InternalBeeLangTestLanguage.g:5334:1: ( ( ruleQID ) )
            // InternalBeeLangTestLanguage.g:5335:1: ( ruleQID )
            {
            // InternalBeeLangTestLanguage.g:5335:1: ( ruleQID )
            // InternalBeeLangTestLanguage.g:5336:2: ruleQID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPathAccess().getQIDParserRuleCall_1_2_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleQID();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPathAccess().getQIDParserRuleCall_1_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 369, rule__Path__Group_1_2__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Path__Group_1_2__1__Impl"


    // $ANTLR start "rule__ParameterList__Group__0"
    // InternalBeeLangTestLanguage.g:5346:1: rule__ParameterList__Group__0 : rule__ParameterList__Group__0__Impl rule__ParameterList__Group__1 ;
    public final void rule__ParameterList__Group__0() throws RecognitionException {
        int rule__ParameterList__Group__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 370) ) { return ; }
            // InternalBeeLangTestLanguage.g:5350:1: ( rule__ParameterList__Group__0__Impl rule__ParameterList__Group__1 )
            // InternalBeeLangTestLanguage.g:5351:2: rule__ParameterList__Group__0__Impl rule__ParameterList__Group__1
            {
            pushFollow(FOLLOW_10);
            rule__ParameterList__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ParameterList__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 370, rule__ParameterList__Group__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterList__Group__0"


    // $ANTLR start "rule__ParameterList__Group__0__Impl"
    // InternalBeeLangTestLanguage.g:5358:1: rule__ParameterList__Group__0__Impl : ( ( rule__ParameterList__ParametersAssignment_0 ) ) ;
    public final void rule__ParameterList__Group__0__Impl() throws RecognitionException {
        int rule__ParameterList__Group__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 371) ) { return ; }
            // InternalBeeLangTestLanguage.g:5362:1: ( ( ( rule__ParameterList__ParametersAssignment_0 ) ) )
            // InternalBeeLangTestLanguage.g:5363:1: ( ( rule__ParameterList__ParametersAssignment_0 ) )
            {
            // InternalBeeLangTestLanguage.g:5363:1: ( ( rule__ParameterList__ParametersAssignment_0 ) )
            // InternalBeeLangTestLanguage.g:5364:2: ( rule__ParameterList__ParametersAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterListAccess().getParametersAssignment_0()); 
            }
            // InternalBeeLangTestLanguage.g:5365:2: ( rule__ParameterList__ParametersAssignment_0 )
            // InternalBeeLangTestLanguage.g:5365:3: rule__ParameterList__ParametersAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__ParameterList__ParametersAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterListAccess().getParametersAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 371, rule__ParameterList__Group__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterList__Group__0__Impl"


    // $ANTLR start "rule__ParameterList__Group__1"
    // InternalBeeLangTestLanguage.g:5373:1: rule__ParameterList__Group__1 : rule__ParameterList__Group__1__Impl ;
    public final void rule__ParameterList__Group__1() throws RecognitionException {
        int rule__ParameterList__Group__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 372) ) { return ; }
            // InternalBeeLangTestLanguage.g:5377:1: ( rule__ParameterList__Group__1__Impl )
            // InternalBeeLangTestLanguage.g:5378:2: rule__ParameterList__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ParameterList__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 372, rule__ParameterList__Group__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterList__Group__1"


    // $ANTLR start "rule__ParameterList__Group__1__Impl"
    // InternalBeeLangTestLanguage.g:5384:1: rule__ParameterList__Group__1__Impl : ( ( rule__ParameterList__Group_1__0 )* ) ;
    public final void rule__ParameterList__Group__1__Impl() throws RecognitionException {
        int rule__ParameterList__Group__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 373) ) { return ; }
            // InternalBeeLangTestLanguage.g:5388:1: ( ( ( rule__ParameterList__Group_1__0 )* ) )
            // InternalBeeLangTestLanguage.g:5389:1: ( ( rule__ParameterList__Group_1__0 )* )
            {
            // InternalBeeLangTestLanguage.g:5389:1: ( ( rule__ParameterList__Group_1__0 )* )
            // InternalBeeLangTestLanguage.g:5390:2: ( rule__ParameterList__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterListAccess().getGroup_1()); 
            }
            // InternalBeeLangTestLanguage.g:5391:2: ( rule__ParameterList__Group_1__0 )*
            loop44:
            do {
                int alt44=2;
                int LA44_0 = input.LA(1);

                if ( (LA44_0==48) ) {
                    alt44=1;
                }


                switch (alt44) {
            	case 1 :
            	    // InternalBeeLangTestLanguage.g:5391:3: rule__ParameterList__Group_1__0
            	    {
            	    pushFollow(FOLLOW_11);
            	    rule__ParameterList__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop44;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterListAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 373, rule__ParameterList__Group__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterList__Group__1__Impl"


    // $ANTLR start "rule__ParameterList__Group_1__0"
    // InternalBeeLangTestLanguage.g:5400:1: rule__ParameterList__Group_1__0 : rule__ParameterList__Group_1__0__Impl rule__ParameterList__Group_1__1 ;
    public final void rule__ParameterList__Group_1__0() throws RecognitionException {
        int rule__ParameterList__Group_1__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 374) ) { return ; }
            // InternalBeeLangTestLanguage.g:5404:1: ( rule__ParameterList__Group_1__0__Impl rule__ParameterList__Group_1__1 )
            // InternalBeeLangTestLanguage.g:5405:2: rule__ParameterList__Group_1__0__Impl rule__ParameterList__Group_1__1
            {
            pushFollow(FOLLOW_25);
            rule__ParameterList__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ParameterList__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 374, rule__ParameterList__Group_1__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterList__Group_1__0"


    // $ANTLR start "rule__ParameterList__Group_1__0__Impl"
    // InternalBeeLangTestLanguage.g:5412:1: rule__ParameterList__Group_1__0__Impl : ( ',' ) ;
    public final void rule__ParameterList__Group_1__0__Impl() throws RecognitionException {
        int rule__ParameterList__Group_1__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 375) ) { return ; }
            // InternalBeeLangTestLanguage.g:5416:1: ( ( ',' ) )
            // InternalBeeLangTestLanguage.g:5417:1: ( ',' )
            {
            // InternalBeeLangTestLanguage.g:5417:1: ( ',' )
            // InternalBeeLangTestLanguage.g:5418:2: ','
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterListAccess().getCommaKeyword_1_0()); 
            }
            match(input,48,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterListAccess().getCommaKeyword_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 375, rule__ParameterList__Group_1__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterList__Group_1__0__Impl"


    // $ANTLR start "rule__ParameterList__Group_1__1"
    // InternalBeeLangTestLanguage.g:5427:1: rule__ParameterList__Group_1__1 : rule__ParameterList__Group_1__1__Impl ;
    public final void rule__ParameterList__Group_1__1() throws RecognitionException {
        int rule__ParameterList__Group_1__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 376) ) { return ; }
            // InternalBeeLangTestLanguage.g:5431:1: ( rule__ParameterList__Group_1__1__Impl )
            // InternalBeeLangTestLanguage.g:5432:2: rule__ParameterList__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ParameterList__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 376, rule__ParameterList__Group_1__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterList__Group_1__1"


    // $ANTLR start "rule__ParameterList__Group_1__1__Impl"
    // InternalBeeLangTestLanguage.g:5438:1: rule__ParameterList__Group_1__1__Impl : ( ( rule__ParameterList__ParametersAssignment_1_1 ) ) ;
    public final void rule__ParameterList__Group_1__1__Impl() throws RecognitionException {
        int rule__ParameterList__Group_1__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 377) ) { return ; }
            // InternalBeeLangTestLanguage.g:5442:1: ( ( ( rule__ParameterList__ParametersAssignment_1_1 ) ) )
            // InternalBeeLangTestLanguage.g:5443:1: ( ( rule__ParameterList__ParametersAssignment_1_1 ) )
            {
            // InternalBeeLangTestLanguage.g:5443:1: ( ( rule__ParameterList__ParametersAssignment_1_1 ) )
            // InternalBeeLangTestLanguage.g:5444:2: ( rule__ParameterList__ParametersAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterListAccess().getParametersAssignment_1_1()); 
            }
            // InternalBeeLangTestLanguage.g:5445:2: ( rule__ParameterList__ParametersAssignment_1_1 )
            // InternalBeeLangTestLanguage.g:5445:3: rule__ParameterList__ParametersAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__ParameterList__ParametersAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterListAccess().getParametersAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 377, rule__ParameterList__Group_1__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterList__Group_1__1__Impl"


    // $ANTLR start "rule__ParameterDeclaration__Group__0"
    // InternalBeeLangTestLanguage.g:5454:1: rule__ParameterDeclaration__Group__0 : rule__ParameterDeclaration__Group__0__Impl rule__ParameterDeclaration__Group__1 ;
    public final void rule__ParameterDeclaration__Group__0() throws RecognitionException {
        int rule__ParameterDeclaration__Group__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 378) ) { return ; }
            // InternalBeeLangTestLanguage.g:5458:1: ( rule__ParameterDeclaration__Group__0__Impl rule__ParameterDeclaration__Group__1 )
            // InternalBeeLangTestLanguage.g:5459:2: rule__ParameterDeclaration__Group__0__Impl rule__ParameterDeclaration__Group__1
            {
            pushFollow(FOLLOW_26);
            rule__ParameterDeclaration__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ParameterDeclaration__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 378, rule__ParameterDeclaration__Group__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterDeclaration__Group__0"


    // $ANTLR start "rule__ParameterDeclaration__Group__0__Impl"
    // InternalBeeLangTestLanguage.g:5466:1: rule__ParameterDeclaration__Group__0__Impl : ( ( rule__ParameterDeclaration__TypeAssignment_0 )? ) ;
    public final void rule__ParameterDeclaration__Group__0__Impl() throws RecognitionException {
        int rule__ParameterDeclaration__Group__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 379) ) { return ; }
            // InternalBeeLangTestLanguage.g:5470:1: ( ( ( rule__ParameterDeclaration__TypeAssignment_0 )? ) )
            // InternalBeeLangTestLanguage.g:5471:1: ( ( rule__ParameterDeclaration__TypeAssignment_0 )? )
            {
            // InternalBeeLangTestLanguage.g:5471:1: ( ( rule__ParameterDeclaration__TypeAssignment_0 )? )
            // InternalBeeLangTestLanguage.g:5472:2: ( rule__ParameterDeclaration__TypeAssignment_0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterDeclarationAccess().getTypeAssignment_0()); 
            }
            // InternalBeeLangTestLanguage.g:5473:2: ( rule__ParameterDeclaration__TypeAssignment_0 )?
            int alt45=2;
            int LA45_0 = input.LA(1);

            if ( (LA45_0==60) ) {
                alt45=1;
            }
            else if ( (LA45_0==RULE_ID) ) {
                int LA45_2 = input.LA(2);

                if ( (LA45_2==RULE_ID||LA45_2==28) ) {
                    alt45=1;
                }
            }
            switch (alt45) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:5473:3: rule__ParameterDeclaration__TypeAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ParameterDeclaration__TypeAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterDeclarationAccess().getTypeAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 379, rule__ParameterDeclaration__Group__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterDeclaration__Group__0__Impl"


    // $ANTLR start "rule__ParameterDeclaration__Group__1"
    // InternalBeeLangTestLanguage.g:5481:1: rule__ParameterDeclaration__Group__1 : rule__ParameterDeclaration__Group__1__Impl ;
    public final void rule__ParameterDeclaration__Group__1() throws RecognitionException {
        int rule__ParameterDeclaration__Group__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 380) ) { return ; }
            // InternalBeeLangTestLanguage.g:5485:1: ( rule__ParameterDeclaration__Group__1__Impl )
            // InternalBeeLangTestLanguage.g:5486:2: rule__ParameterDeclaration__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ParameterDeclaration__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 380, rule__ParameterDeclaration__Group__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterDeclaration__Group__1"


    // $ANTLR start "rule__ParameterDeclaration__Group__1__Impl"
    // InternalBeeLangTestLanguage.g:5492:1: rule__ParameterDeclaration__Group__1__Impl : ( ( rule__ParameterDeclaration__NameAssignment_1 ) ) ;
    public final void rule__ParameterDeclaration__Group__1__Impl() throws RecognitionException {
        int rule__ParameterDeclaration__Group__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 381) ) { return ; }
            // InternalBeeLangTestLanguage.g:5496:1: ( ( ( rule__ParameterDeclaration__NameAssignment_1 ) ) )
            // InternalBeeLangTestLanguage.g:5497:1: ( ( rule__ParameterDeclaration__NameAssignment_1 ) )
            {
            // InternalBeeLangTestLanguage.g:5497:1: ( ( rule__ParameterDeclaration__NameAssignment_1 ) )
            // InternalBeeLangTestLanguage.g:5498:2: ( rule__ParameterDeclaration__NameAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterDeclarationAccess().getNameAssignment_1()); 
            }
            // InternalBeeLangTestLanguage.g:5499:2: ( rule__ParameterDeclaration__NameAssignment_1 )
            // InternalBeeLangTestLanguage.g:5499:3: rule__ParameterDeclaration__NameAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__ParameterDeclaration__NameAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterDeclarationAccess().getNameAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 381, rule__ParameterDeclaration__Group__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterDeclaration__Group__1__Impl"


    // $ANTLR start "rule__Function__Group__0"
    // InternalBeeLangTestLanguage.g:5508:1: rule__Function__Group__0 : rule__Function__Group__0__Impl rule__Function__Group__1 ;
    public final void rule__Function__Group__0() throws RecognitionException {
        int rule__Function__Group__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 382) ) { return ; }
            // InternalBeeLangTestLanguage.g:5512:1: ( rule__Function__Group__0__Impl rule__Function__Group__1 )
            // InternalBeeLangTestLanguage.g:5513:2: rule__Function__Group__0__Impl rule__Function__Group__1
            {
            pushFollow(FOLLOW_27);
            rule__Function__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Function__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 382, rule__Function__Group__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group__0"


    // $ANTLR start "rule__Function__Group__0__Impl"
    // InternalBeeLangTestLanguage.g:5520:1: rule__Function__Group__0__Impl : ( ( rule__Function__DocumentationAssignment_0 )? ) ;
    public final void rule__Function__Group__0__Impl() throws RecognitionException {
        int rule__Function__Group__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 383) ) { return ; }
            // InternalBeeLangTestLanguage.g:5524:1: ( ( ( rule__Function__DocumentationAssignment_0 )? ) )
            // InternalBeeLangTestLanguage.g:5525:1: ( ( rule__Function__DocumentationAssignment_0 )? )
            {
            // InternalBeeLangTestLanguage.g:5525:1: ( ( rule__Function__DocumentationAssignment_0 )? )
            // InternalBeeLangTestLanguage.g:5526:2: ( rule__Function__DocumentationAssignment_0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getDocumentationAssignment_0()); 
            }
            // InternalBeeLangTestLanguage.g:5527:2: ( rule__Function__DocumentationAssignment_0 )?
            int alt46=2;
            int LA46_0 = input.LA(1);

            if ( (LA46_0==RULE_DOCUMENTATION) ) {
                alt46=1;
            }
            switch (alt46) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:5527:3: rule__Function__DocumentationAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Function__DocumentationAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getDocumentationAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 383, rule__Function__Group__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group__0__Impl"


    // $ANTLR start "rule__Function__Group__1"
    // InternalBeeLangTestLanguage.g:5535:1: rule__Function__Group__1 : rule__Function__Group__1__Impl rule__Function__Group__2 ;
    public final void rule__Function__Group__1() throws RecognitionException {
        int rule__Function__Group__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 384) ) { return ; }
            // InternalBeeLangTestLanguage.g:5539:1: ( rule__Function__Group__1__Impl rule__Function__Group__2 )
            // InternalBeeLangTestLanguage.g:5540:2: rule__Function__Group__1__Impl rule__Function__Group__2
            {
            pushFollow(FOLLOW_27);
            rule__Function__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Function__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 384, rule__Function__Group__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group__1"


    // $ANTLR start "rule__Function__Group__1__Impl"
    // InternalBeeLangTestLanguage.g:5547:1: rule__Function__Group__1__Impl : ( ( rule__Function__VisibilityAssignment_1 )? ) ;
    public final void rule__Function__Group__1__Impl() throws RecognitionException {
        int rule__Function__Group__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 385) ) { return ; }
            // InternalBeeLangTestLanguage.g:5551:1: ( ( ( rule__Function__VisibilityAssignment_1 )? ) )
            // InternalBeeLangTestLanguage.g:5552:1: ( ( rule__Function__VisibilityAssignment_1 )? )
            {
            // InternalBeeLangTestLanguage.g:5552:1: ( ( rule__Function__VisibilityAssignment_1 )? )
            // InternalBeeLangTestLanguage.g:5553:2: ( rule__Function__VisibilityAssignment_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getVisibilityAssignment_1()); 
            }
            // InternalBeeLangTestLanguage.g:5554:2: ( rule__Function__VisibilityAssignment_1 )?
            int alt47=2;
            int LA47_0 = input.LA(1);

            if ( (LA47_0==RULE_ID) ) {
                alt47=1;
            }
            switch (alt47) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:5554:3: rule__Function__VisibilityAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__Function__VisibilityAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getVisibilityAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 385, rule__Function__Group__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group__1__Impl"


    // $ANTLR start "rule__Function__Group__2"
    // InternalBeeLangTestLanguage.g:5562:1: rule__Function__Group__2 : rule__Function__Group__2__Impl rule__Function__Group__3 ;
    public final void rule__Function__Group__2() throws RecognitionException {
        int rule__Function__Group__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 386) ) { return ; }
            // InternalBeeLangTestLanguage.g:5566:1: ( rule__Function__Group__2__Impl rule__Function__Group__3 )
            // InternalBeeLangTestLanguage.g:5567:2: rule__Function__Group__2__Impl rule__Function__Group__3
            {
            pushFollow(FOLLOW_27);
            rule__Function__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Function__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 386, rule__Function__Group__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group__2"


    // $ANTLR start "rule__Function__Group__2__Impl"
    // InternalBeeLangTestLanguage.g:5574:1: rule__Function__Group__2__Impl : ( ( rule__Function__FinalAssignment_2 )? ) ;
    public final void rule__Function__Group__2__Impl() throws RecognitionException {
        int rule__Function__Group__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 387) ) { return ; }
            // InternalBeeLangTestLanguage.g:5578:1: ( ( ( rule__Function__FinalAssignment_2 )? ) )
            // InternalBeeLangTestLanguage.g:5579:1: ( ( rule__Function__FinalAssignment_2 )? )
            {
            // InternalBeeLangTestLanguage.g:5579:1: ( ( rule__Function__FinalAssignment_2 )? )
            // InternalBeeLangTestLanguage.g:5580:2: ( rule__Function__FinalAssignment_2 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getFinalAssignment_2()); 
            }
            // InternalBeeLangTestLanguage.g:5581:2: ( rule__Function__FinalAssignment_2 )?
            int alt48=2;
            int LA48_0 = input.LA(1);

            if ( (LA48_0==74) ) {
                alt48=1;
            }
            switch (alt48) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:5581:3: rule__Function__FinalAssignment_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__Function__FinalAssignment_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getFinalAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 387, rule__Function__Group__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group__2__Impl"


    // $ANTLR start "rule__Function__Group__3"
    // InternalBeeLangTestLanguage.g:5589:1: rule__Function__Group__3 : rule__Function__Group__3__Impl rule__Function__Group__4 ;
    public final void rule__Function__Group__3() throws RecognitionException {
        int rule__Function__Group__3_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 388) ) { return ; }
            // InternalBeeLangTestLanguage.g:5593:1: ( rule__Function__Group__3__Impl rule__Function__Group__4 )
            // InternalBeeLangTestLanguage.g:5594:2: rule__Function__Group__3__Impl rule__Function__Group__4
            {
            pushFollow(FOLLOW_28);
            rule__Function__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Function__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 388, rule__Function__Group__3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group__3"


    // $ANTLR start "rule__Function__Group__3__Impl"
    // InternalBeeLangTestLanguage.g:5601:1: rule__Function__Group__3__Impl : ( 'function' ) ;
    public final void rule__Function__Group__3__Impl() throws RecognitionException {
        int rule__Function__Group__3__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 389) ) { return ; }
            // InternalBeeLangTestLanguage.g:5605:1: ( ( 'function' ) )
            // InternalBeeLangTestLanguage.g:5606:1: ( 'function' )
            {
            // InternalBeeLangTestLanguage.g:5606:1: ( 'function' )
            // InternalBeeLangTestLanguage.g:5607:2: 'function'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getFunctionKeyword_3()); 
            }
            match(input,59,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getFunctionKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 389, rule__Function__Group__3__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group__3__Impl"


    // $ANTLR start "rule__Function__Group__4"
    // InternalBeeLangTestLanguage.g:5616:1: rule__Function__Group__4 : rule__Function__Group__4__Impl rule__Function__Group__5 ;
    public final void rule__Function__Group__4() throws RecognitionException {
        int rule__Function__Group__4_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 390) ) { return ; }
            // InternalBeeLangTestLanguage.g:5620:1: ( rule__Function__Group__4__Impl rule__Function__Group__5 )
            // InternalBeeLangTestLanguage.g:5621:2: rule__Function__Group__4__Impl rule__Function__Group__5
            {
            pushFollow(FOLLOW_28);
            rule__Function__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Function__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 390, rule__Function__Group__4_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group__4"


    // $ANTLR start "rule__Function__Group__4__Impl"
    // InternalBeeLangTestLanguage.g:5628:1: rule__Function__Group__4__Impl : ( ( rule__Function__ReturnTypeAssignment_4 )? ) ;
    public final void rule__Function__Group__4__Impl() throws RecognitionException {
        int rule__Function__Group__4__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 391) ) { return ; }
            // InternalBeeLangTestLanguage.g:5632:1: ( ( ( rule__Function__ReturnTypeAssignment_4 )? ) )
            // InternalBeeLangTestLanguage.g:5633:1: ( ( rule__Function__ReturnTypeAssignment_4 )? )
            {
            // InternalBeeLangTestLanguage.g:5633:1: ( ( rule__Function__ReturnTypeAssignment_4 )? )
            // InternalBeeLangTestLanguage.g:5634:2: ( rule__Function__ReturnTypeAssignment_4 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getReturnTypeAssignment_4()); 
            }
            // InternalBeeLangTestLanguage.g:5635:2: ( rule__Function__ReturnTypeAssignment_4 )?
            int alt49=2;
            int LA49_0 = input.LA(1);

            if ( (LA49_0==60) ) {
                alt49=1;
            }
            else if ( (LA49_0==RULE_ID) ) {
                int LA49_2 = input.LA(2);

                if ( (LA49_2==RULE_ID||LA49_2==28) ) {
                    alt49=1;
                }
            }
            switch (alt49) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:5635:3: rule__Function__ReturnTypeAssignment_4
                    {
                    pushFollow(FOLLOW_2);
                    rule__Function__ReturnTypeAssignment_4();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getReturnTypeAssignment_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 391, rule__Function__Group__4__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group__4__Impl"


    // $ANTLR start "rule__Function__Group__5"
    // InternalBeeLangTestLanguage.g:5643:1: rule__Function__Group__5 : rule__Function__Group__5__Impl rule__Function__Group__6 ;
    public final void rule__Function__Group__5() throws RecognitionException {
        int rule__Function__Group__5_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 392) ) { return ; }
            // InternalBeeLangTestLanguage.g:5647:1: ( rule__Function__Group__5__Impl rule__Function__Group__6 )
            // InternalBeeLangTestLanguage.g:5648:2: rule__Function__Group__5__Impl rule__Function__Group__6
            {
            pushFollow(FOLLOW_29);
            rule__Function__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Function__Group__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 392, rule__Function__Group__5_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group__5"


    // $ANTLR start "rule__Function__Group__5__Impl"
    // InternalBeeLangTestLanguage.g:5655:1: rule__Function__Group__5__Impl : ( ( rule__Function__NameAssignment_5 ) ) ;
    public final void rule__Function__Group__5__Impl() throws RecognitionException {
        int rule__Function__Group__5__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 393) ) { return ; }
            // InternalBeeLangTestLanguage.g:5659:1: ( ( ( rule__Function__NameAssignment_5 ) ) )
            // InternalBeeLangTestLanguage.g:5660:1: ( ( rule__Function__NameAssignment_5 ) )
            {
            // InternalBeeLangTestLanguage.g:5660:1: ( ( rule__Function__NameAssignment_5 ) )
            // InternalBeeLangTestLanguage.g:5661:2: ( rule__Function__NameAssignment_5 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getNameAssignment_5()); 
            }
            // InternalBeeLangTestLanguage.g:5662:2: ( rule__Function__NameAssignment_5 )
            // InternalBeeLangTestLanguage.g:5662:3: rule__Function__NameAssignment_5
            {
            pushFollow(FOLLOW_2);
            rule__Function__NameAssignment_5();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getNameAssignment_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 393, rule__Function__Group__5__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group__5__Impl"


    // $ANTLR start "rule__Function__Group__6"
    // InternalBeeLangTestLanguage.g:5670:1: rule__Function__Group__6 : rule__Function__Group__6__Impl rule__Function__Group__7 ;
    public final void rule__Function__Group__6() throws RecognitionException {
        int rule__Function__Group__6_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 394) ) { return ; }
            // InternalBeeLangTestLanguage.g:5674:1: ( rule__Function__Group__6__Impl rule__Function__Group__7 )
            // InternalBeeLangTestLanguage.g:5675:2: rule__Function__Group__6__Impl rule__Function__Group__7
            {
            pushFollow(FOLLOW_29);
            rule__Function__Group__6__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Function__Group__7();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 394, rule__Function__Group__6_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group__6"


    // $ANTLR start "rule__Function__Group__6__Impl"
    // InternalBeeLangTestLanguage.g:5682:1: rule__Function__Group__6__Impl : ( ( rule__Function__Group_6__0 )? ) ;
    public final void rule__Function__Group__6__Impl() throws RecognitionException {
        int rule__Function__Group__6__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 395) ) { return ; }
            // InternalBeeLangTestLanguage.g:5686:1: ( ( ( rule__Function__Group_6__0 )? ) )
            // InternalBeeLangTestLanguage.g:5687:1: ( ( rule__Function__Group_6__0 )? )
            {
            // InternalBeeLangTestLanguage.g:5687:1: ( ( rule__Function__Group_6__0 )? )
            // InternalBeeLangTestLanguage.g:5688:2: ( rule__Function__Group_6__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getGroup_6()); 
            }
            // InternalBeeLangTestLanguage.g:5689:2: ( rule__Function__Group_6__0 )?
            int alt50=2;
            int LA50_0 = input.LA(1);

            if ( (LA50_0==60) ) {
                alt50=1;
            }
            switch (alt50) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:5689:3: rule__Function__Group_6__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Function__Group_6__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getGroup_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 395, rule__Function__Group__6__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group__6__Impl"


    // $ANTLR start "rule__Function__Group__7"
    // InternalBeeLangTestLanguage.g:5697:1: rule__Function__Group__7 : rule__Function__Group__7__Impl rule__Function__Group__8 ;
    public final void rule__Function__Group__7() throws RecognitionException {
        int rule__Function__Group__7_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 396) ) { return ; }
            // InternalBeeLangTestLanguage.g:5701:1: ( rule__Function__Group__7__Impl rule__Function__Group__8 )
            // InternalBeeLangTestLanguage.g:5702:2: rule__Function__Group__7__Impl rule__Function__Group__8
            {
            pushFollow(FOLLOW_29);
            rule__Function__Group__7__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Function__Group__8();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 396, rule__Function__Group__7_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group__7"


    // $ANTLR start "rule__Function__Group__7__Impl"
    // InternalBeeLangTestLanguage.g:5709:1: rule__Function__Group__7__Impl : ( ( rule__Function__Group_7__0 )? ) ;
    public final void rule__Function__Group__7__Impl() throws RecognitionException {
        int rule__Function__Group__7__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 397) ) { return ; }
            // InternalBeeLangTestLanguage.g:5713:1: ( ( ( rule__Function__Group_7__0 )? ) )
            // InternalBeeLangTestLanguage.g:5714:1: ( ( rule__Function__Group_7__0 )? )
            {
            // InternalBeeLangTestLanguage.g:5714:1: ( ( rule__Function__Group_7__0 )? )
            // InternalBeeLangTestLanguage.g:5715:2: ( rule__Function__Group_7__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getGroup_7()); 
            }
            // InternalBeeLangTestLanguage.g:5716:2: ( rule__Function__Group_7__0 )?
            int alt51=2;
            int LA51_0 = input.LA(1);

            if ( (LA51_0==54) ) {
                alt51=1;
            }
            switch (alt51) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:5716:3: rule__Function__Group_7__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Function__Group_7__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getGroup_7()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 397, rule__Function__Group__7__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group__7__Impl"


    // $ANTLR start "rule__Function__Group__8"
    // InternalBeeLangTestLanguage.g:5724:1: rule__Function__Group__8 : rule__Function__Group__8__Impl ;
    public final void rule__Function__Group__8() throws RecognitionException {
        int rule__Function__Group__8_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 398) ) { return ; }
            // InternalBeeLangTestLanguage.g:5728:1: ( rule__Function__Group__8__Impl )
            // InternalBeeLangTestLanguage.g:5729:2: rule__Function__Group__8__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Function__Group__8__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 398, rule__Function__Group__8_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group__8"


    // $ANTLR start "rule__Function__Group__8__Impl"
    // InternalBeeLangTestLanguage.g:5735:1: rule__Function__Group__8__Impl : ( ( rule__Function__Alternatives_8 ) ) ;
    public final void rule__Function__Group__8__Impl() throws RecognitionException {
        int rule__Function__Group__8__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 399) ) { return ; }
            // InternalBeeLangTestLanguage.g:5739:1: ( ( ( rule__Function__Alternatives_8 ) ) )
            // InternalBeeLangTestLanguage.g:5740:1: ( ( rule__Function__Alternatives_8 ) )
            {
            // InternalBeeLangTestLanguage.g:5740:1: ( ( rule__Function__Alternatives_8 ) )
            // InternalBeeLangTestLanguage.g:5741:2: ( rule__Function__Alternatives_8 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getAlternatives_8()); 
            }
            // InternalBeeLangTestLanguage.g:5742:2: ( rule__Function__Alternatives_8 )
            // InternalBeeLangTestLanguage.g:5742:3: rule__Function__Alternatives_8
            {
            pushFollow(FOLLOW_2);
            rule__Function__Alternatives_8();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getAlternatives_8()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 399, rule__Function__Group__8__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group__8__Impl"


    // $ANTLR start "rule__Function__Group_6__0"
    // InternalBeeLangTestLanguage.g:5751:1: rule__Function__Group_6__0 : rule__Function__Group_6__0__Impl rule__Function__Group_6__1 ;
    public final void rule__Function__Group_6__0() throws RecognitionException {
        int rule__Function__Group_6__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 400) ) { return ; }
            // InternalBeeLangTestLanguage.g:5755:1: ( rule__Function__Group_6__0__Impl rule__Function__Group_6__1 )
            // InternalBeeLangTestLanguage.g:5756:2: rule__Function__Group_6__0__Impl rule__Function__Group_6__1
            {
            pushFollow(FOLLOW_30);
            rule__Function__Group_6__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Function__Group_6__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 400, rule__Function__Group_6__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_6__0"


    // $ANTLR start "rule__Function__Group_6__0__Impl"
    // InternalBeeLangTestLanguage.g:5763:1: rule__Function__Group_6__0__Impl : ( '(' ) ;
    public final void rule__Function__Group_6__0__Impl() throws RecognitionException {
        int rule__Function__Group_6__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 401) ) { return ; }
            // InternalBeeLangTestLanguage.g:5767:1: ( ( '(' ) )
            // InternalBeeLangTestLanguage.g:5768:1: ( '(' )
            {
            // InternalBeeLangTestLanguage.g:5768:1: ( '(' )
            // InternalBeeLangTestLanguage.g:5769:2: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getLeftParenthesisKeyword_6_0()); 
            }
            match(input,60,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getLeftParenthesisKeyword_6_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 401, rule__Function__Group_6__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_6__0__Impl"


    // $ANTLR start "rule__Function__Group_6__1"
    // InternalBeeLangTestLanguage.g:5778:1: rule__Function__Group_6__1 : rule__Function__Group_6__1__Impl rule__Function__Group_6__2 ;
    public final void rule__Function__Group_6__1() throws RecognitionException {
        int rule__Function__Group_6__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 402) ) { return ; }
            // InternalBeeLangTestLanguage.g:5782:1: ( rule__Function__Group_6__1__Impl rule__Function__Group_6__2 )
            // InternalBeeLangTestLanguage.g:5783:2: rule__Function__Group_6__1__Impl rule__Function__Group_6__2
            {
            pushFollow(FOLLOW_30);
            rule__Function__Group_6__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Function__Group_6__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 402, rule__Function__Group_6__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_6__1"


    // $ANTLR start "rule__Function__Group_6__1__Impl"
    // InternalBeeLangTestLanguage.g:5790:1: rule__Function__Group_6__1__Impl : ( ( rule__Function__Alternatives_6_1 )? ) ;
    public final void rule__Function__Group_6__1__Impl() throws RecognitionException {
        int rule__Function__Group_6__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 403) ) { return ; }
            // InternalBeeLangTestLanguage.g:5794:1: ( ( ( rule__Function__Alternatives_6_1 )? ) )
            // InternalBeeLangTestLanguage.g:5795:1: ( ( rule__Function__Alternatives_6_1 )? )
            {
            // InternalBeeLangTestLanguage.g:5795:1: ( ( rule__Function__Alternatives_6_1 )? )
            // InternalBeeLangTestLanguage.g:5796:2: ( rule__Function__Alternatives_6_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getAlternatives_6_1()); 
            }
            // InternalBeeLangTestLanguage.g:5797:2: ( rule__Function__Alternatives_6_1 )?
            int alt52=2;
            int LA52_0 = input.LA(1);

            if ( (LA52_0==RULE_ID||LA52_0==60||LA52_0==75) ) {
                alt52=1;
            }
            switch (alt52) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:5797:3: rule__Function__Alternatives_6_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__Function__Alternatives_6_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getAlternatives_6_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 403, rule__Function__Group_6__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_6__1__Impl"


    // $ANTLR start "rule__Function__Group_6__2"
    // InternalBeeLangTestLanguage.g:5805:1: rule__Function__Group_6__2 : rule__Function__Group_6__2__Impl ;
    public final void rule__Function__Group_6__2() throws RecognitionException {
        int rule__Function__Group_6__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 404) ) { return ; }
            // InternalBeeLangTestLanguage.g:5809:1: ( rule__Function__Group_6__2__Impl )
            // InternalBeeLangTestLanguage.g:5810:2: rule__Function__Group_6__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Function__Group_6__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 404, rule__Function__Group_6__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_6__2"


    // $ANTLR start "rule__Function__Group_6__2__Impl"
    // InternalBeeLangTestLanguage.g:5816:1: rule__Function__Group_6__2__Impl : ( ')' ) ;
    public final void rule__Function__Group_6__2__Impl() throws RecognitionException {
        int rule__Function__Group_6__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 405) ) { return ; }
            // InternalBeeLangTestLanguage.g:5820:1: ( ( ')' ) )
            // InternalBeeLangTestLanguage.g:5821:1: ( ')' )
            {
            // InternalBeeLangTestLanguage.g:5821:1: ( ')' )
            // InternalBeeLangTestLanguage.g:5822:2: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getRightParenthesisKeyword_6_2()); 
            }
            match(input,61,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getRightParenthesisKeyword_6_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 405, rule__Function__Group_6__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_6__2__Impl"


    // $ANTLR start "rule__Function__Group_6_1_0__0"
    // InternalBeeLangTestLanguage.g:5832:1: rule__Function__Group_6_1_0__0 : rule__Function__Group_6_1_0__0__Impl rule__Function__Group_6_1_0__1 ;
    public final void rule__Function__Group_6_1_0__0() throws RecognitionException {
        int rule__Function__Group_6_1_0__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 406) ) { return ; }
            // InternalBeeLangTestLanguage.g:5836:1: ( rule__Function__Group_6_1_0__0__Impl rule__Function__Group_6_1_0__1 )
            // InternalBeeLangTestLanguage.g:5837:2: rule__Function__Group_6_1_0__0__Impl rule__Function__Group_6_1_0__1
            {
            pushFollow(FOLLOW_10);
            rule__Function__Group_6_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Function__Group_6_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 406, rule__Function__Group_6_1_0__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_6_1_0__0"


    // $ANTLR start "rule__Function__Group_6_1_0__0__Impl"
    // InternalBeeLangTestLanguage.g:5844:1: rule__Function__Group_6_1_0__0__Impl : ( ( rule__Function__ParametersAssignment_6_1_0_0 ) ) ;
    public final void rule__Function__Group_6_1_0__0__Impl() throws RecognitionException {
        int rule__Function__Group_6_1_0__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 407) ) { return ; }
            // InternalBeeLangTestLanguage.g:5848:1: ( ( ( rule__Function__ParametersAssignment_6_1_0_0 ) ) )
            // InternalBeeLangTestLanguage.g:5849:1: ( ( rule__Function__ParametersAssignment_6_1_0_0 ) )
            {
            // InternalBeeLangTestLanguage.g:5849:1: ( ( rule__Function__ParametersAssignment_6_1_0_0 ) )
            // InternalBeeLangTestLanguage.g:5850:2: ( rule__Function__ParametersAssignment_6_1_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getParametersAssignment_6_1_0_0()); 
            }
            // InternalBeeLangTestLanguage.g:5851:2: ( rule__Function__ParametersAssignment_6_1_0_0 )
            // InternalBeeLangTestLanguage.g:5851:3: rule__Function__ParametersAssignment_6_1_0_0
            {
            pushFollow(FOLLOW_2);
            rule__Function__ParametersAssignment_6_1_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getParametersAssignment_6_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 407, rule__Function__Group_6_1_0__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_6_1_0__0__Impl"


    // $ANTLR start "rule__Function__Group_6_1_0__1"
    // InternalBeeLangTestLanguage.g:5859:1: rule__Function__Group_6_1_0__1 : rule__Function__Group_6_1_0__1__Impl rule__Function__Group_6_1_0__2 ;
    public final void rule__Function__Group_6_1_0__1() throws RecognitionException {
        int rule__Function__Group_6_1_0__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 408) ) { return ; }
            // InternalBeeLangTestLanguage.g:5863:1: ( rule__Function__Group_6_1_0__1__Impl rule__Function__Group_6_1_0__2 )
            // InternalBeeLangTestLanguage.g:5864:2: rule__Function__Group_6_1_0__1__Impl rule__Function__Group_6_1_0__2
            {
            pushFollow(FOLLOW_10);
            rule__Function__Group_6_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Function__Group_6_1_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 408, rule__Function__Group_6_1_0__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_6_1_0__1"


    // $ANTLR start "rule__Function__Group_6_1_0__1__Impl"
    // InternalBeeLangTestLanguage.g:5871:1: rule__Function__Group_6_1_0__1__Impl : ( ( rule__Function__Group_6_1_0_1__0 )* ) ;
    public final void rule__Function__Group_6_1_0__1__Impl() throws RecognitionException {
        int rule__Function__Group_6_1_0__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 409) ) { return ; }
            // InternalBeeLangTestLanguage.g:5875:1: ( ( ( rule__Function__Group_6_1_0_1__0 )* ) )
            // InternalBeeLangTestLanguage.g:5876:1: ( ( rule__Function__Group_6_1_0_1__0 )* )
            {
            // InternalBeeLangTestLanguage.g:5876:1: ( ( rule__Function__Group_6_1_0_1__0 )* )
            // InternalBeeLangTestLanguage.g:5877:2: ( rule__Function__Group_6_1_0_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getGroup_6_1_0_1()); 
            }
            // InternalBeeLangTestLanguage.g:5878:2: ( rule__Function__Group_6_1_0_1__0 )*
            loop53:
            do {
                int alt53=2;
                int LA53_0 = input.LA(1);

                if ( (LA53_0==48) ) {
                    int LA53_1 = input.LA(2);

                    if ( (LA53_1==RULE_ID||LA53_1==60) ) {
                        alt53=1;
                    }


                }


                switch (alt53) {
            	case 1 :
            	    // InternalBeeLangTestLanguage.g:5878:3: rule__Function__Group_6_1_0_1__0
            	    {
            	    pushFollow(FOLLOW_11);
            	    rule__Function__Group_6_1_0_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop53;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getGroup_6_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 409, rule__Function__Group_6_1_0__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_6_1_0__1__Impl"


    // $ANTLR start "rule__Function__Group_6_1_0__2"
    // InternalBeeLangTestLanguage.g:5886:1: rule__Function__Group_6_1_0__2 : rule__Function__Group_6_1_0__2__Impl ;
    public final void rule__Function__Group_6_1_0__2() throws RecognitionException {
        int rule__Function__Group_6_1_0__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 410) ) { return ; }
            // InternalBeeLangTestLanguage.g:5890:1: ( rule__Function__Group_6_1_0__2__Impl )
            // InternalBeeLangTestLanguage.g:5891:2: rule__Function__Group_6_1_0__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Function__Group_6_1_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 410, rule__Function__Group_6_1_0__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_6_1_0__2"


    // $ANTLR start "rule__Function__Group_6_1_0__2__Impl"
    // InternalBeeLangTestLanguage.g:5897:1: rule__Function__Group_6_1_0__2__Impl : ( ( rule__Function__Group_6_1_0_2__0 )? ) ;
    public final void rule__Function__Group_6_1_0__2__Impl() throws RecognitionException {
        int rule__Function__Group_6_1_0__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 411) ) { return ; }
            // InternalBeeLangTestLanguage.g:5901:1: ( ( ( rule__Function__Group_6_1_0_2__0 )? ) )
            // InternalBeeLangTestLanguage.g:5902:1: ( ( rule__Function__Group_6_1_0_2__0 )? )
            {
            // InternalBeeLangTestLanguage.g:5902:1: ( ( rule__Function__Group_6_1_0_2__0 )? )
            // InternalBeeLangTestLanguage.g:5903:2: ( rule__Function__Group_6_1_0_2__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getGroup_6_1_0_2()); 
            }
            // InternalBeeLangTestLanguage.g:5904:2: ( rule__Function__Group_6_1_0_2__0 )?
            int alt54=2;
            int LA54_0 = input.LA(1);

            if ( (LA54_0==48) ) {
                alt54=1;
            }
            switch (alt54) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:5904:3: rule__Function__Group_6_1_0_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Function__Group_6_1_0_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getGroup_6_1_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 411, rule__Function__Group_6_1_0__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_6_1_0__2__Impl"


    // $ANTLR start "rule__Function__Group_6_1_0_1__0"
    // InternalBeeLangTestLanguage.g:5913:1: rule__Function__Group_6_1_0_1__0 : rule__Function__Group_6_1_0_1__0__Impl rule__Function__Group_6_1_0_1__1 ;
    public final void rule__Function__Group_6_1_0_1__0() throws RecognitionException {
        int rule__Function__Group_6_1_0_1__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 412) ) { return ; }
            // InternalBeeLangTestLanguage.g:5917:1: ( rule__Function__Group_6_1_0_1__0__Impl rule__Function__Group_6_1_0_1__1 )
            // InternalBeeLangTestLanguage.g:5918:2: rule__Function__Group_6_1_0_1__0__Impl rule__Function__Group_6_1_0_1__1
            {
            pushFollow(FOLLOW_26);
            rule__Function__Group_6_1_0_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Function__Group_6_1_0_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 412, rule__Function__Group_6_1_0_1__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_6_1_0_1__0"


    // $ANTLR start "rule__Function__Group_6_1_0_1__0__Impl"
    // InternalBeeLangTestLanguage.g:5925:1: rule__Function__Group_6_1_0_1__0__Impl : ( ',' ) ;
    public final void rule__Function__Group_6_1_0_1__0__Impl() throws RecognitionException {
        int rule__Function__Group_6_1_0_1__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 413) ) { return ; }
            // InternalBeeLangTestLanguage.g:5929:1: ( ( ',' ) )
            // InternalBeeLangTestLanguage.g:5930:1: ( ',' )
            {
            // InternalBeeLangTestLanguage.g:5930:1: ( ',' )
            // InternalBeeLangTestLanguage.g:5931:2: ','
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getCommaKeyword_6_1_0_1_0()); 
            }
            match(input,48,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getCommaKeyword_6_1_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 413, rule__Function__Group_6_1_0_1__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_6_1_0_1__0__Impl"


    // $ANTLR start "rule__Function__Group_6_1_0_1__1"
    // InternalBeeLangTestLanguage.g:5940:1: rule__Function__Group_6_1_0_1__1 : rule__Function__Group_6_1_0_1__1__Impl ;
    public final void rule__Function__Group_6_1_0_1__1() throws RecognitionException {
        int rule__Function__Group_6_1_0_1__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 414) ) { return ; }
            // InternalBeeLangTestLanguage.g:5944:1: ( rule__Function__Group_6_1_0_1__1__Impl )
            // InternalBeeLangTestLanguage.g:5945:2: rule__Function__Group_6_1_0_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Function__Group_6_1_0_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 414, rule__Function__Group_6_1_0_1__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_6_1_0_1__1"


    // $ANTLR start "rule__Function__Group_6_1_0_1__1__Impl"
    // InternalBeeLangTestLanguage.g:5951:1: rule__Function__Group_6_1_0_1__1__Impl : ( ( rule__Function__ParametersAssignment_6_1_0_1_1 ) ) ;
    public final void rule__Function__Group_6_1_0_1__1__Impl() throws RecognitionException {
        int rule__Function__Group_6_1_0_1__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 415) ) { return ; }
            // InternalBeeLangTestLanguage.g:5955:1: ( ( ( rule__Function__ParametersAssignment_6_1_0_1_1 ) ) )
            // InternalBeeLangTestLanguage.g:5956:1: ( ( rule__Function__ParametersAssignment_6_1_0_1_1 ) )
            {
            // InternalBeeLangTestLanguage.g:5956:1: ( ( rule__Function__ParametersAssignment_6_1_0_1_1 ) )
            // InternalBeeLangTestLanguage.g:5957:2: ( rule__Function__ParametersAssignment_6_1_0_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getParametersAssignment_6_1_0_1_1()); 
            }
            // InternalBeeLangTestLanguage.g:5958:2: ( rule__Function__ParametersAssignment_6_1_0_1_1 )
            // InternalBeeLangTestLanguage.g:5958:3: rule__Function__ParametersAssignment_6_1_0_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Function__ParametersAssignment_6_1_0_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getParametersAssignment_6_1_0_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 415, rule__Function__Group_6_1_0_1__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_6_1_0_1__1__Impl"


    // $ANTLR start "rule__Function__Group_6_1_0_2__0"
    // InternalBeeLangTestLanguage.g:5967:1: rule__Function__Group_6_1_0_2__0 : rule__Function__Group_6_1_0_2__0__Impl rule__Function__Group_6_1_0_2__1 ;
    public final void rule__Function__Group_6_1_0_2__0() throws RecognitionException {
        int rule__Function__Group_6_1_0_2__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 416) ) { return ; }
            // InternalBeeLangTestLanguage.g:5971:1: ( rule__Function__Group_6_1_0_2__0__Impl rule__Function__Group_6_1_0_2__1 )
            // InternalBeeLangTestLanguage.g:5972:2: rule__Function__Group_6_1_0_2__0__Impl rule__Function__Group_6_1_0_2__1
            {
            pushFollow(FOLLOW_31);
            rule__Function__Group_6_1_0_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Function__Group_6_1_0_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 416, rule__Function__Group_6_1_0_2__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_6_1_0_2__0"


    // $ANTLR start "rule__Function__Group_6_1_0_2__0__Impl"
    // InternalBeeLangTestLanguage.g:5979:1: rule__Function__Group_6_1_0_2__0__Impl : ( ',' ) ;
    public final void rule__Function__Group_6_1_0_2__0__Impl() throws RecognitionException {
        int rule__Function__Group_6_1_0_2__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 417) ) { return ; }
            // InternalBeeLangTestLanguage.g:5983:1: ( ( ',' ) )
            // InternalBeeLangTestLanguage.g:5984:1: ( ',' )
            {
            // InternalBeeLangTestLanguage.g:5984:1: ( ',' )
            // InternalBeeLangTestLanguage.g:5985:2: ','
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getCommaKeyword_6_1_0_2_0()); 
            }
            match(input,48,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getCommaKeyword_6_1_0_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 417, rule__Function__Group_6_1_0_2__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_6_1_0_2__0__Impl"


    // $ANTLR start "rule__Function__Group_6_1_0_2__1"
    // InternalBeeLangTestLanguage.g:5994:1: rule__Function__Group_6_1_0_2__1 : rule__Function__Group_6_1_0_2__1__Impl rule__Function__Group_6_1_0_2__2 ;
    public final void rule__Function__Group_6_1_0_2__1() throws RecognitionException {
        int rule__Function__Group_6_1_0_2__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 418) ) { return ; }
            // InternalBeeLangTestLanguage.g:5998:1: ( rule__Function__Group_6_1_0_2__1__Impl rule__Function__Group_6_1_0_2__2 )
            // InternalBeeLangTestLanguage.g:5999:2: rule__Function__Group_6_1_0_2__1__Impl rule__Function__Group_6_1_0_2__2
            {
            pushFollow(FOLLOW_26);
            rule__Function__Group_6_1_0_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Function__Group_6_1_0_2__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 418, rule__Function__Group_6_1_0_2__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_6_1_0_2__1"


    // $ANTLR start "rule__Function__Group_6_1_0_2__1__Impl"
    // InternalBeeLangTestLanguage.g:6006:1: rule__Function__Group_6_1_0_2__1__Impl : ( ( rule__Function__VarArgsAssignment_6_1_0_2_1 ) ) ;
    public final void rule__Function__Group_6_1_0_2__1__Impl() throws RecognitionException {
        int rule__Function__Group_6_1_0_2__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 419) ) { return ; }
            // InternalBeeLangTestLanguage.g:6010:1: ( ( ( rule__Function__VarArgsAssignment_6_1_0_2_1 ) ) )
            // InternalBeeLangTestLanguage.g:6011:1: ( ( rule__Function__VarArgsAssignment_6_1_0_2_1 ) )
            {
            // InternalBeeLangTestLanguage.g:6011:1: ( ( rule__Function__VarArgsAssignment_6_1_0_2_1 ) )
            // InternalBeeLangTestLanguage.g:6012:2: ( rule__Function__VarArgsAssignment_6_1_0_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getVarArgsAssignment_6_1_0_2_1()); 
            }
            // InternalBeeLangTestLanguage.g:6013:2: ( rule__Function__VarArgsAssignment_6_1_0_2_1 )
            // InternalBeeLangTestLanguage.g:6013:3: rule__Function__VarArgsAssignment_6_1_0_2_1
            {
            pushFollow(FOLLOW_2);
            rule__Function__VarArgsAssignment_6_1_0_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getVarArgsAssignment_6_1_0_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 419, rule__Function__Group_6_1_0_2__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_6_1_0_2__1__Impl"


    // $ANTLR start "rule__Function__Group_6_1_0_2__2"
    // InternalBeeLangTestLanguage.g:6021:1: rule__Function__Group_6_1_0_2__2 : rule__Function__Group_6_1_0_2__2__Impl ;
    public final void rule__Function__Group_6_1_0_2__2() throws RecognitionException {
        int rule__Function__Group_6_1_0_2__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 420) ) { return ; }
            // InternalBeeLangTestLanguage.g:6025:1: ( rule__Function__Group_6_1_0_2__2__Impl )
            // InternalBeeLangTestLanguage.g:6026:2: rule__Function__Group_6_1_0_2__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Function__Group_6_1_0_2__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 420, rule__Function__Group_6_1_0_2__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_6_1_0_2__2"


    // $ANTLR start "rule__Function__Group_6_1_0_2__2__Impl"
    // InternalBeeLangTestLanguage.g:6032:1: rule__Function__Group_6_1_0_2__2__Impl : ( ( rule__Function__ParametersAssignment_6_1_0_2_2 ) ) ;
    public final void rule__Function__Group_6_1_0_2__2__Impl() throws RecognitionException {
        int rule__Function__Group_6_1_0_2__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 421) ) { return ; }
            // InternalBeeLangTestLanguage.g:6036:1: ( ( ( rule__Function__ParametersAssignment_6_1_0_2_2 ) ) )
            // InternalBeeLangTestLanguage.g:6037:1: ( ( rule__Function__ParametersAssignment_6_1_0_2_2 ) )
            {
            // InternalBeeLangTestLanguage.g:6037:1: ( ( rule__Function__ParametersAssignment_6_1_0_2_2 ) )
            // InternalBeeLangTestLanguage.g:6038:2: ( rule__Function__ParametersAssignment_6_1_0_2_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getParametersAssignment_6_1_0_2_2()); 
            }
            // InternalBeeLangTestLanguage.g:6039:2: ( rule__Function__ParametersAssignment_6_1_0_2_2 )
            // InternalBeeLangTestLanguage.g:6039:3: rule__Function__ParametersAssignment_6_1_0_2_2
            {
            pushFollow(FOLLOW_2);
            rule__Function__ParametersAssignment_6_1_0_2_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getParametersAssignment_6_1_0_2_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 421, rule__Function__Group_6_1_0_2__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_6_1_0_2__2__Impl"


    // $ANTLR start "rule__Function__Group_6_1_1__0"
    // InternalBeeLangTestLanguage.g:6048:1: rule__Function__Group_6_1_1__0 : rule__Function__Group_6_1_1__0__Impl rule__Function__Group_6_1_1__1 ;
    public final void rule__Function__Group_6_1_1__0() throws RecognitionException {
        int rule__Function__Group_6_1_1__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 422) ) { return ; }
            // InternalBeeLangTestLanguage.g:6052:1: ( rule__Function__Group_6_1_1__0__Impl rule__Function__Group_6_1_1__1 )
            // InternalBeeLangTestLanguage.g:6053:2: rule__Function__Group_6_1_1__0__Impl rule__Function__Group_6_1_1__1
            {
            pushFollow(FOLLOW_26);
            rule__Function__Group_6_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Function__Group_6_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 422, rule__Function__Group_6_1_1__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_6_1_1__0"


    // $ANTLR start "rule__Function__Group_6_1_1__0__Impl"
    // InternalBeeLangTestLanguage.g:6060:1: rule__Function__Group_6_1_1__0__Impl : ( ( rule__Function__VarArgsAssignment_6_1_1_0 ) ) ;
    public final void rule__Function__Group_6_1_1__0__Impl() throws RecognitionException {
        int rule__Function__Group_6_1_1__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 423) ) { return ; }
            // InternalBeeLangTestLanguage.g:6064:1: ( ( ( rule__Function__VarArgsAssignment_6_1_1_0 ) ) )
            // InternalBeeLangTestLanguage.g:6065:1: ( ( rule__Function__VarArgsAssignment_6_1_1_0 ) )
            {
            // InternalBeeLangTestLanguage.g:6065:1: ( ( rule__Function__VarArgsAssignment_6_1_1_0 ) )
            // InternalBeeLangTestLanguage.g:6066:2: ( rule__Function__VarArgsAssignment_6_1_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getVarArgsAssignment_6_1_1_0()); 
            }
            // InternalBeeLangTestLanguage.g:6067:2: ( rule__Function__VarArgsAssignment_6_1_1_0 )
            // InternalBeeLangTestLanguage.g:6067:3: rule__Function__VarArgsAssignment_6_1_1_0
            {
            pushFollow(FOLLOW_2);
            rule__Function__VarArgsAssignment_6_1_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getVarArgsAssignment_6_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 423, rule__Function__Group_6_1_1__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_6_1_1__0__Impl"


    // $ANTLR start "rule__Function__Group_6_1_1__1"
    // InternalBeeLangTestLanguage.g:6075:1: rule__Function__Group_6_1_1__1 : rule__Function__Group_6_1_1__1__Impl ;
    public final void rule__Function__Group_6_1_1__1() throws RecognitionException {
        int rule__Function__Group_6_1_1__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 424) ) { return ; }
            // InternalBeeLangTestLanguage.g:6079:1: ( rule__Function__Group_6_1_1__1__Impl )
            // InternalBeeLangTestLanguage.g:6080:2: rule__Function__Group_6_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Function__Group_6_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 424, rule__Function__Group_6_1_1__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_6_1_1__1"


    // $ANTLR start "rule__Function__Group_6_1_1__1__Impl"
    // InternalBeeLangTestLanguage.g:6086:1: rule__Function__Group_6_1_1__1__Impl : ( ( rule__Function__ParametersAssignment_6_1_1_1 ) ) ;
    public final void rule__Function__Group_6_1_1__1__Impl() throws RecognitionException {
        int rule__Function__Group_6_1_1__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 425) ) { return ; }
            // InternalBeeLangTestLanguage.g:6090:1: ( ( ( rule__Function__ParametersAssignment_6_1_1_1 ) ) )
            // InternalBeeLangTestLanguage.g:6091:1: ( ( rule__Function__ParametersAssignment_6_1_1_1 ) )
            {
            // InternalBeeLangTestLanguage.g:6091:1: ( ( rule__Function__ParametersAssignment_6_1_1_1 ) )
            // InternalBeeLangTestLanguage.g:6092:2: ( rule__Function__ParametersAssignment_6_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getParametersAssignment_6_1_1_1()); 
            }
            // InternalBeeLangTestLanguage.g:6093:2: ( rule__Function__ParametersAssignment_6_1_1_1 )
            // InternalBeeLangTestLanguage.g:6093:3: rule__Function__ParametersAssignment_6_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Function__ParametersAssignment_6_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getParametersAssignment_6_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 425, rule__Function__Group_6_1_1__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_6_1_1__1__Impl"


    // $ANTLR start "rule__Function__Group_7__0"
    // InternalBeeLangTestLanguage.g:6102:1: rule__Function__Group_7__0 : rule__Function__Group_7__0__Impl rule__Function__Group_7__1 ;
    public final void rule__Function__Group_7__0() throws RecognitionException {
        int rule__Function__Group_7__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 426) ) { return ; }
            // InternalBeeLangTestLanguage.g:6106:1: ( rule__Function__Group_7__0__Impl rule__Function__Group_7__1 )
            // InternalBeeLangTestLanguage.g:6107:2: rule__Function__Group_7__0__Impl rule__Function__Group_7__1
            {
            pushFollow(FOLLOW_32);
            rule__Function__Group_7__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Function__Group_7__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 426, rule__Function__Group_7__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_7__0"


    // $ANTLR start "rule__Function__Group_7__0__Impl"
    // InternalBeeLangTestLanguage.g:6114:1: rule__Function__Group_7__0__Impl : ( 'when' ) ;
    public final void rule__Function__Group_7__0__Impl() throws RecognitionException {
        int rule__Function__Group_7__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 427) ) { return ; }
            // InternalBeeLangTestLanguage.g:6118:1: ( ( 'when' ) )
            // InternalBeeLangTestLanguage.g:6119:1: ( 'when' )
            {
            // InternalBeeLangTestLanguage.g:6119:1: ( 'when' )
            // InternalBeeLangTestLanguage.g:6120:2: 'when'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getWhenKeyword_7_0()); 
            }
            match(input,54,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getWhenKeyword_7_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 427, rule__Function__Group_7__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_7__0__Impl"


    // $ANTLR start "rule__Function__Group_7__1"
    // InternalBeeLangTestLanguage.g:6129:1: rule__Function__Group_7__1 : rule__Function__Group_7__1__Impl ;
    public final void rule__Function__Group_7__1() throws RecognitionException {
        int rule__Function__Group_7__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 428) ) { return ; }
            // InternalBeeLangTestLanguage.g:6133:1: ( rule__Function__Group_7__1__Impl )
            // InternalBeeLangTestLanguage.g:6134:2: rule__Function__Group_7__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Function__Group_7__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 428, rule__Function__Group_7__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_7__1"


    // $ANTLR start "rule__Function__Group_7__1__Impl"
    // InternalBeeLangTestLanguage.g:6140:1: rule__Function__Group_7__1__Impl : ( ( rule__Function__GuardAssignment_7_1 ) ) ;
    public final void rule__Function__Group_7__1__Impl() throws RecognitionException {
        int rule__Function__Group_7__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 429) ) { return ; }
            // InternalBeeLangTestLanguage.g:6144:1: ( ( ( rule__Function__GuardAssignment_7_1 ) ) )
            // InternalBeeLangTestLanguage.g:6145:1: ( ( rule__Function__GuardAssignment_7_1 ) )
            {
            // InternalBeeLangTestLanguage.g:6145:1: ( ( rule__Function__GuardAssignment_7_1 ) )
            // InternalBeeLangTestLanguage.g:6146:2: ( rule__Function__GuardAssignment_7_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getGuardAssignment_7_1()); 
            }
            // InternalBeeLangTestLanguage.g:6147:2: ( rule__Function__GuardAssignment_7_1 )
            // InternalBeeLangTestLanguage.g:6147:3: rule__Function__GuardAssignment_7_1
            {
            pushFollow(FOLLOW_2);
            rule__Function__GuardAssignment_7_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getGuardAssignment_7_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 429, rule__Function__Group_7__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_7__1__Impl"


    // $ANTLR start "rule__Function__Group_8_0__0"
    // InternalBeeLangTestLanguage.g:6156:1: rule__Function__Group_8_0__0 : rule__Function__Group_8_0__0__Impl rule__Function__Group_8_0__1 ;
    public final void rule__Function__Group_8_0__0() throws RecognitionException {
        int rule__Function__Group_8_0__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 430) ) { return ; }
            // InternalBeeLangTestLanguage.g:6160:1: ( rule__Function__Group_8_0__0__Impl rule__Function__Group_8_0__1 )
            // InternalBeeLangTestLanguage.g:6161:2: rule__Function__Group_8_0__0__Impl rule__Function__Group_8_0__1
            {
            pushFollow(FOLLOW_19);
            rule__Function__Group_8_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Function__Group_8_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 430, rule__Function__Group_8_0__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_8_0__0"


    // $ANTLR start "rule__Function__Group_8_0__0__Impl"
    // InternalBeeLangTestLanguage.g:6168:1: rule__Function__Group_8_0__0__Impl : ( ':' ) ;
    public final void rule__Function__Group_8_0__0__Impl() throws RecognitionException {
        int rule__Function__Group_8_0__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 431) ) { return ; }
            // InternalBeeLangTestLanguage.g:6172:1: ( ( ':' ) )
            // InternalBeeLangTestLanguage.g:6173:1: ( ':' )
            {
            // InternalBeeLangTestLanguage.g:6173:1: ( ':' )
            // InternalBeeLangTestLanguage.g:6174:2: ':'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getColonKeyword_8_0_0()); 
            }
            match(input,49,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getColonKeyword_8_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 431, rule__Function__Group_8_0__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_8_0__0__Impl"


    // $ANTLR start "rule__Function__Group_8_0__1"
    // InternalBeeLangTestLanguage.g:6183:1: rule__Function__Group_8_0__1 : rule__Function__Group_8_0__1__Impl rule__Function__Group_8_0__2 ;
    public final void rule__Function__Group_8_0__1() throws RecognitionException {
        int rule__Function__Group_8_0__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 432) ) { return ; }
            // InternalBeeLangTestLanguage.g:6187:1: ( rule__Function__Group_8_0__1__Impl rule__Function__Group_8_0__2 )
            // InternalBeeLangTestLanguage.g:6188:2: rule__Function__Group_8_0__1__Impl rule__Function__Group_8_0__2
            {
            pushFollow(FOLLOW_14);
            rule__Function__Group_8_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Function__Group_8_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 432, rule__Function__Group_8_0__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_8_0__1"


    // $ANTLR start "rule__Function__Group_8_0__1__Impl"
    // InternalBeeLangTestLanguage.g:6195:1: rule__Function__Group_8_0__1__Impl : ( ( rule__Function__FuncExprAssignment_8_0_1 ) ) ;
    public final void rule__Function__Group_8_0__1__Impl() throws RecognitionException {
        int rule__Function__Group_8_0__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 433) ) { return ; }
            // InternalBeeLangTestLanguage.g:6199:1: ( ( ( rule__Function__FuncExprAssignment_8_0_1 ) ) )
            // InternalBeeLangTestLanguage.g:6200:1: ( ( rule__Function__FuncExprAssignment_8_0_1 ) )
            {
            // InternalBeeLangTestLanguage.g:6200:1: ( ( rule__Function__FuncExprAssignment_8_0_1 ) )
            // InternalBeeLangTestLanguage.g:6201:2: ( rule__Function__FuncExprAssignment_8_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getFuncExprAssignment_8_0_1()); 
            }
            // InternalBeeLangTestLanguage.g:6202:2: ( rule__Function__FuncExprAssignment_8_0_1 )
            // InternalBeeLangTestLanguage.g:6202:3: rule__Function__FuncExprAssignment_8_0_1
            {
            pushFollow(FOLLOW_2);
            rule__Function__FuncExprAssignment_8_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getFuncExprAssignment_8_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 433, rule__Function__Group_8_0__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_8_0__1__Impl"


    // $ANTLR start "rule__Function__Group_8_0__2"
    // InternalBeeLangTestLanguage.g:6210:1: rule__Function__Group_8_0__2 : rule__Function__Group_8_0__2__Impl ;
    public final void rule__Function__Group_8_0__2() throws RecognitionException {
        int rule__Function__Group_8_0__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 434) ) { return ; }
            // InternalBeeLangTestLanguage.g:6214:1: ( rule__Function__Group_8_0__2__Impl )
            // InternalBeeLangTestLanguage.g:6215:2: rule__Function__Group_8_0__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Function__Group_8_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 434, rule__Function__Group_8_0__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_8_0__2"


    // $ANTLR start "rule__Function__Group_8_0__2__Impl"
    // InternalBeeLangTestLanguage.g:6221:1: rule__Function__Group_8_0__2__Impl : ( ';' ) ;
    public final void rule__Function__Group_8_0__2__Impl() throws RecognitionException {
        int rule__Function__Group_8_0__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 435) ) { return ; }
            // InternalBeeLangTestLanguage.g:6225:1: ( ( ';' ) )
            // InternalBeeLangTestLanguage.g:6226:1: ( ';' )
            {
            // InternalBeeLangTestLanguage.g:6226:1: ( ';' )
            // InternalBeeLangTestLanguage.g:6227:2: ';'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getSemicolonKeyword_8_0_2()); 
            }
            match(input,50,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getSemicolonKeyword_8_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 435, rule__Function__Group_8_0__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_8_0__2__Impl"


    // $ANTLR start "rule__GuardExpression__Group_0__0"
    // InternalBeeLangTestLanguage.g:6237:1: rule__GuardExpression__Group_0__0 : rule__GuardExpression__Group_0__0__Impl rule__GuardExpression__Group_0__1 ;
    public final void rule__GuardExpression__Group_0__0() throws RecognitionException {
        int rule__GuardExpression__Group_0__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 436) ) { return ; }
            // InternalBeeLangTestLanguage.g:6241:1: ( rule__GuardExpression__Group_0__0__Impl rule__GuardExpression__Group_0__1 )
            // InternalBeeLangTestLanguage.g:6242:2: rule__GuardExpression__Group_0__0__Impl rule__GuardExpression__Group_0__1
            {
            pushFollow(FOLLOW_19);
            rule__GuardExpression__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__GuardExpression__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 436, rule__GuardExpression__Group_0__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GuardExpression__Group_0__0"


    // $ANTLR start "rule__GuardExpression__Group_0__0__Impl"
    // InternalBeeLangTestLanguage.g:6249:1: rule__GuardExpression__Group_0__0__Impl : ( ':' ) ;
    public final void rule__GuardExpression__Group_0__0__Impl() throws RecognitionException {
        int rule__GuardExpression__Group_0__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 437) ) { return ; }
            // InternalBeeLangTestLanguage.g:6253:1: ( ( ':' ) )
            // InternalBeeLangTestLanguage.g:6254:1: ( ':' )
            {
            // InternalBeeLangTestLanguage.g:6254:1: ( ':' )
            // InternalBeeLangTestLanguage.g:6255:2: ':'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGuardExpressionAccess().getColonKeyword_0_0()); 
            }
            match(input,49,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getGuardExpressionAccess().getColonKeyword_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 437, rule__GuardExpression__Group_0__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GuardExpression__Group_0__0__Impl"


    // $ANTLR start "rule__GuardExpression__Group_0__1"
    // InternalBeeLangTestLanguage.g:6264:1: rule__GuardExpression__Group_0__1 : rule__GuardExpression__Group_0__1__Impl rule__GuardExpression__Group_0__2 ;
    public final void rule__GuardExpression__Group_0__1() throws RecognitionException {
        int rule__GuardExpression__Group_0__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 438) ) { return ; }
            // InternalBeeLangTestLanguage.g:6268:1: ( rule__GuardExpression__Group_0__1__Impl rule__GuardExpression__Group_0__2 )
            // InternalBeeLangTestLanguage.g:6269:2: rule__GuardExpression__Group_0__1__Impl rule__GuardExpression__Group_0__2
            {
            pushFollow(FOLLOW_14);
            rule__GuardExpression__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__GuardExpression__Group_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 438, rule__GuardExpression__Group_0__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GuardExpression__Group_0__1"


    // $ANTLR start "rule__GuardExpression__Group_0__1__Impl"
    // InternalBeeLangTestLanguage.g:6276:1: rule__GuardExpression__Group_0__1__Impl : ( ( rule__GuardExpression__GuardExprAssignment_0_1 ) ) ;
    public final void rule__GuardExpression__Group_0__1__Impl() throws RecognitionException {
        int rule__GuardExpression__Group_0__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 439) ) { return ; }
            // InternalBeeLangTestLanguage.g:6280:1: ( ( ( rule__GuardExpression__GuardExprAssignment_0_1 ) ) )
            // InternalBeeLangTestLanguage.g:6281:1: ( ( rule__GuardExpression__GuardExprAssignment_0_1 ) )
            {
            // InternalBeeLangTestLanguage.g:6281:1: ( ( rule__GuardExpression__GuardExprAssignment_0_1 ) )
            // InternalBeeLangTestLanguage.g:6282:2: ( rule__GuardExpression__GuardExprAssignment_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGuardExpressionAccess().getGuardExprAssignment_0_1()); 
            }
            // InternalBeeLangTestLanguage.g:6283:2: ( rule__GuardExpression__GuardExprAssignment_0_1 )
            // InternalBeeLangTestLanguage.g:6283:3: rule__GuardExpression__GuardExprAssignment_0_1
            {
            pushFollow(FOLLOW_2);
            rule__GuardExpression__GuardExprAssignment_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getGuardExpressionAccess().getGuardExprAssignment_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 439, rule__GuardExpression__Group_0__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GuardExpression__Group_0__1__Impl"


    // $ANTLR start "rule__GuardExpression__Group_0__2"
    // InternalBeeLangTestLanguage.g:6291:1: rule__GuardExpression__Group_0__2 : rule__GuardExpression__Group_0__2__Impl ;
    public final void rule__GuardExpression__Group_0__2() throws RecognitionException {
        int rule__GuardExpression__Group_0__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 440) ) { return ; }
            // InternalBeeLangTestLanguage.g:6295:1: ( rule__GuardExpression__Group_0__2__Impl )
            // InternalBeeLangTestLanguage.g:6296:2: rule__GuardExpression__Group_0__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__GuardExpression__Group_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 440, rule__GuardExpression__Group_0__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GuardExpression__Group_0__2"


    // $ANTLR start "rule__GuardExpression__Group_0__2__Impl"
    // InternalBeeLangTestLanguage.g:6302:1: rule__GuardExpression__Group_0__2__Impl : ( ';' ) ;
    public final void rule__GuardExpression__Group_0__2__Impl() throws RecognitionException {
        int rule__GuardExpression__Group_0__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 441) ) { return ; }
            // InternalBeeLangTestLanguage.g:6306:1: ( ( ';' ) )
            // InternalBeeLangTestLanguage.g:6307:1: ( ';' )
            {
            // InternalBeeLangTestLanguage.g:6307:1: ( ';' )
            // InternalBeeLangTestLanguage.g:6308:2: ';'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGuardExpressionAccess().getSemicolonKeyword_0_2()); 
            }
            match(input,50,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getGuardExpressionAccess().getSemicolonKeyword_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 441, rule__GuardExpression__Group_0__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GuardExpression__Group_0__2__Impl"


    // $ANTLR start "rule__AssignmentExpression__Group__0"
    // InternalBeeLangTestLanguage.g:6318:1: rule__AssignmentExpression__Group__0 : rule__AssignmentExpression__Group__0__Impl rule__AssignmentExpression__Group__1 ;
    public final void rule__AssignmentExpression__Group__0() throws RecognitionException {
        int rule__AssignmentExpression__Group__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 442) ) { return ; }
            // InternalBeeLangTestLanguage.g:6322:1: ( rule__AssignmentExpression__Group__0__Impl rule__AssignmentExpression__Group__1 )
            // InternalBeeLangTestLanguage.g:6323:2: rule__AssignmentExpression__Group__0__Impl rule__AssignmentExpression__Group__1
            {
            pushFollow(FOLLOW_33);
            rule__AssignmentExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AssignmentExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 442, rule__AssignmentExpression__Group__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AssignmentExpression__Group__0"


    // $ANTLR start "rule__AssignmentExpression__Group__0__Impl"
    // InternalBeeLangTestLanguage.g:6330:1: rule__AssignmentExpression__Group__0__Impl : ( ruleCachedExpression ) ;
    public final void rule__AssignmentExpression__Group__0__Impl() throws RecognitionException {
        int rule__AssignmentExpression__Group__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 443) ) { return ; }
            // InternalBeeLangTestLanguage.g:6334:1: ( ( ruleCachedExpression ) )
            // InternalBeeLangTestLanguage.g:6335:1: ( ruleCachedExpression )
            {
            // InternalBeeLangTestLanguage.g:6335:1: ( ruleCachedExpression )
            // InternalBeeLangTestLanguage.g:6336:2: ruleCachedExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAssignmentExpressionAccess().getCachedExpressionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleCachedExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAssignmentExpressionAccess().getCachedExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 443, rule__AssignmentExpression__Group__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AssignmentExpression__Group__0__Impl"


    // $ANTLR start "rule__AssignmentExpression__Group__1"
    // InternalBeeLangTestLanguage.g:6345:1: rule__AssignmentExpression__Group__1 : rule__AssignmentExpression__Group__1__Impl ;
    public final void rule__AssignmentExpression__Group__1() throws RecognitionException {
        int rule__AssignmentExpression__Group__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 444) ) { return ; }
            // InternalBeeLangTestLanguage.g:6349:1: ( rule__AssignmentExpression__Group__1__Impl )
            // InternalBeeLangTestLanguage.g:6350:2: rule__AssignmentExpression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AssignmentExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 444, rule__AssignmentExpression__Group__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AssignmentExpression__Group__1"


    // $ANTLR start "rule__AssignmentExpression__Group__1__Impl"
    // InternalBeeLangTestLanguage.g:6356:1: rule__AssignmentExpression__Group__1__Impl : ( ( rule__AssignmentExpression__Group_1__0 )? ) ;
    public final void rule__AssignmentExpression__Group__1__Impl() throws RecognitionException {
        int rule__AssignmentExpression__Group__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 445) ) { return ; }
            // InternalBeeLangTestLanguage.g:6360:1: ( ( ( rule__AssignmentExpression__Group_1__0 )? ) )
            // InternalBeeLangTestLanguage.g:6361:1: ( ( rule__AssignmentExpression__Group_1__0 )? )
            {
            // InternalBeeLangTestLanguage.g:6361:1: ( ( rule__AssignmentExpression__Group_1__0 )? )
            // InternalBeeLangTestLanguage.g:6362:2: ( rule__AssignmentExpression__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAssignmentExpressionAccess().getGroup_1()); 
            }
            // InternalBeeLangTestLanguage.g:6363:2: ( rule__AssignmentExpression__Group_1__0 )?
            int alt55=2;
            switch ( input.LA(1) ) {
                case 14:
                    {
                    int LA55_1 = input.LA(2);

                    if ( (synpred84_InternalBeeLangTestLanguage()) ) {
                        alt55=1;
                    }
                    }
                    break;
                case 15:
                    {
                    int LA55_2 = input.LA(2);

                    if ( (synpred84_InternalBeeLangTestLanguage()) ) {
                        alt55=1;
                    }
                    }
                    break;
                case 16:
                    {
                    int LA55_3 = input.LA(2);

                    if ( (synpred84_InternalBeeLangTestLanguage()) ) {
                        alt55=1;
                    }
                    }
                    break;
                case 17:
                    {
                    int LA55_4 = input.LA(2);

                    if ( (synpred84_InternalBeeLangTestLanguage()) ) {
                        alt55=1;
                    }
                    }
                    break;
                case 18:
                    {
                    int LA55_5 = input.LA(2);

                    if ( (synpred84_InternalBeeLangTestLanguage()) ) {
                        alt55=1;
                    }
                    }
                    break;
                case 19:
                    {
                    int LA55_6 = input.LA(2);

                    if ( (synpred84_InternalBeeLangTestLanguage()) ) {
                        alt55=1;
                    }
                    }
                    break;
            }

            switch (alt55) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:6363:3: rule__AssignmentExpression__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__AssignmentExpression__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAssignmentExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 445, rule__AssignmentExpression__Group__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AssignmentExpression__Group__1__Impl"


    // $ANTLR start "rule__AssignmentExpression__Group_1__0"
    // InternalBeeLangTestLanguage.g:6372:1: rule__AssignmentExpression__Group_1__0 : rule__AssignmentExpression__Group_1__0__Impl rule__AssignmentExpression__Group_1__1 ;
    public final void rule__AssignmentExpression__Group_1__0() throws RecognitionException {
        int rule__AssignmentExpression__Group_1__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 446) ) { return ; }
            // InternalBeeLangTestLanguage.g:6376:1: ( rule__AssignmentExpression__Group_1__0__Impl rule__AssignmentExpression__Group_1__1 )
            // InternalBeeLangTestLanguage.g:6377:2: rule__AssignmentExpression__Group_1__0__Impl rule__AssignmentExpression__Group_1__1
            {
            pushFollow(FOLLOW_33);
            rule__AssignmentExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AssignmentExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 446, rule__AssignmentExpression__Group_1__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AssignmentExpression__Group_1__0"


    // $ANTLR start "rule__AssignmentExpression__Group_1__0__Impl"
    // InternalBeeLangTestLanguage.g:6384:1: rule__AssignmentExpression__Group_1__0__Impl : ( () ) ;
    public final void rule__AssignmentExpression__Group_1__0__Impl() throws RecognitionException {
        int rule__AssignmentExpression__Group_1__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 447) ) { return ; }
            // InternalBeeLangTestLanguage.g:6388:1: ( ( () ) )
            // InternalBeeLangTestLanguage.g:6389:1: ( () )
            {
            // InternalBeeLangTestLanguage.g:6389:1: ( () )
            // InternalBeeLangTestLanguage.g:6390:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAssignmentExpressionAccess().getAssignmentExpressionLeftExprAction_1_0()); 
            }
            // InternalBeeLangTestLanguage.g:6391:2: ()
            // InternalBeeLangTestLanguage.g:6391:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAssignmentExpressionAccess().getAssignmentExpressionLeftExprAction_1_0()); 
            }

            }


            }

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 447, rule__AssignmentExpression__Group_1__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AssignmentExpression__Group_1__0__Impl"


    // $ANTLR start "rule__AssignmentExpression__Group_1__1"
    // InternalBeeLangTestLanguage.g:6399:1: rule__AssignmentExpression__Group_1__1 : rule__AssignmentExpression__Group_1__1__Impl rule__AssignmentExpression__Group_1__2 ;
    public final void rule__AssignmentExpression__Group_1__1() throws RecognitionException {
        int rule__AssignmentExpression__Group_1__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 448) ) { return ; }
            // InternalBeeLangTestLanguage.g:6403:1: ( rule__AssignmentExpression__Group_1__1__Impl rule__AssignmentExpression__Group_1__2 )
            // InternalBeeLangTestLanguage.g:6404:2: rule__AssignmentExpression__Group_1__1__Impl rule__AssignmentExpression__Group_1__2
            {
            pushFollow(FOLLOW_19);
            rule__AssignmentExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AssignmentExpression__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 448, rule__AssignmentExpression__Group_1__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AssignmentExpression__Group_1__1"


    // $ANTLR start "rule__AssignmentExpression__Group_1__1__Impl"
    // InternalBeeLangTestLanguage.g:6411:1: rule__AssignmentExpression__Group_1__1__Impl : ( ( rule__AssignmentExpression__FunctionNameAssignment_1_1 ) ) ;
    public final void rule__AssignmentExpression__Group_1__1__Impl() throws RecognitionException {
        int rule__AssignmentExpression__Group_1__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 449) ) { return ; }
            // InternalBeeLangTestLanguage.g:6415:1: ( ( ( rule__AssignmentExpression__FunctionNameAssignment_1_1 ) ) )
            // InternalBeeLangTestLanguage.g:6416:1: ( ( rule__AssignmentExpression__FunctionNameAssignment_1_1 ) )
            {
            // InternalBeeLangTestLanguage.g:6416:1: ( ( rule__AssignmentExpression__FunctionNameAssignment_1_1 ) )
            // InternalBeeLangTestLanguage.g:6417:2: ( rule__AssignmentExpression__FunctionNameAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAssignmentExpressionAccess().getFunctionNameAssignment_1_1()); 
            }
            // InternalBeeLangTestLanguage.g:6418:2: ( rule__AssignmentExpression__FunctionNameAssignment_1_1 )
            // InternalBeeLangTestLanguage.g:6418:3: rule__AssignmentExpression__FunctionNameAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__AssignmentExpression__FunctionNameAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAssignmentExpressionAccess().getFunctionNameAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 449, rule__AssignmentExpression__Group_1__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AssignmentExpression__Group_1__1__Impl"


    // $ANTLR start "rule__AssignmentExpression__Group_1__2"
    // InternalBeeLangTestLanguage.g:6426:1: rule__AssignmentExpression__Group_1__2 : rule__AssignmentExpression__Group_1__2__Impl ;
    public final void rule__AssignmentExpression__Group_1__2() throws RecognitionException {
        int rule__AssignmentExpression__Group_1__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 450) ) { return ; }
            // InternalBeeLangTestLanguage.g:6430:1: ( rule__AssignmentExpression__Group_1__2__Impl )
            // InternalBeeLangTestLanguage.g:6431:2: rule__AssignmentExpression__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AssignmentExpression__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 450, rule__AssignmentExpression__Group_1__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AssignmentExpression__Group_1__2"


    // $ANTLR start "rule__AssignmentExpression__Group_1__2__Impl"
    // InternalBeeLangTestLanguage.g:6437:1: rule__AssignmentExpression__Group_1__2__Impl : ( ( rule__AssignmentExpression__RightExprAssignment_1_2 ) ) ;
    public final void rule__AssignmentExpression__Group_1__2__Impl() throws RecognitionException {
        int rule__AssignmentExpression__Group_1__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 451) ) { return ; }
            // InternalBeeLangTestLanguage.g:6441:1: ( ( ( rule__AssignmentExpression__RightExprAssignment_1_2 ) ) )
            // InternalBeeLangTestLanguage.g:6442:1: ( ( rule__AssignmentExpression__RightExprAssignment_1_2 ) )
            {
            // InternalBeeLangTestLanguage.g:6442:1: ( ( rule__AssignmentExpression__RightExprAssignment_1_2 ) )
            // InternalBeeLangTestLanguage.g:6443:2: ( rule__AssignmentExpression__RightExprAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAssignmentExpressionAccess().getRightExprAssignment_1_2()); 
            }
            // InternalBeeLangTestLanguage.g:6444:2: ( rule__AssignmentExpression__RightExprAssignment_1_2 )
            // InternalBeeLangTestLanguage.g:6444:3: rule__AssignmentExpression__RightExprAssignment_1_2
            {
            pushFollow(FOLLOW_2);
            rule__AssignmentExpression__RightExprAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAssignmentExpressionAccess().getRightExprAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 451, rule__AssignmentExpression__Group_1__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AssignmentExpression__Group_1__2__Impl"


    // $ANTLR start "rule__VarDeclaration__Group__0"
    // InternalBeeLangTestLanguage.g:6453:1: rule__VarDeclaration__Group__0 : rule__VarDeclaration__Group__0__Impl rule__VarDeclaration__Group__1 ;
    public final void rule__VarDeclaration__Group__0() throws RecognitionException {
        int rule__VarDeclaration__Group__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 452) ) { return ; }
            // InternalBeeLangTestLanguage.g:6457:1: ( rule__VarDeclaration__Group__0__Impl rule__VarDeclaration__Group__1 )
            // InternalBeeLangTestLanguage.g:6458:2: rule__VarDeclaration__Group__0__Impl rule__VarDeclaration__Group__1
            {
            pushFollow(FOLLOW_34);
            rule__VarDeclaration__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 452, rule__VarDeclaration__Group__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group__0"


    // $ANTLR start "rule__VarDeclaration__Group__0__Impl"
    // InternalBeeLangTestLanguage.g:6465:1: rule__VarDeclaration__Group__0__Impl : ( () ) ;
    public final void rule__VarDeclaration__Group__0__Impl() throws RecognitionException {
        int rule__VarDeclaration__Group__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 453) ) { return ; }
            // InternalBeeLangTestLanguage.g:6469:1: ( ( () ) )
            // InternalBeeLangTestLanguage.g:6470:1: ( () )
            {
            // InternalBeeLangTestLanguage.g:6470:1: ( () )
            // InternalBeeLangTestLanguage.g:6471:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getDefValueAction_0()); 
            }
            // InternalBeeLangTestLanguage.g:6472:2: ()
            // InternalBeeLangTestLanguage.g:6472:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getDefValueAction_0()); 
            }

            }


            }

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 453, rule__VarDeclaration__Group__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group__0__Impl"


    // $ANTLR start "rule__VarDeclaration__Group__1"
    // InternalBeeLangTestLanguage.g:6480:1: rule__VarDeclaration__Group__1 : rule__VarDeclaration__Group__1__Impl rule__VarDeclaration__Group__2 ;
    public final void rule__VarDeclaration__Group__1() throws RecognitionException {
        int rule__VarDeclaration__Group__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 454) ) { return ; }
            // InternalBeeLangTestLanguage.g:6484:1: ( rule__VarDeclaration__Group__1__Impl rule__VarDeclaration__Group__2 )
            // InternalBeeLangTestLanguage.g:6485:2: rule__VarDeclaration__Group__1__Impl rule__VarDeclaration__Group__2
            {
            pushFollow(FOLLOW_34);
            rule__VarDeclaration__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 454, rule__VarDeclaration__Group__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group__1"


    // $ANTLR start "rule__VarDeclaration__Group__1__Impl"
    // InternalBeeLangTestLanguage.g:6492:1: rule__VarDeclaration__Group__1__Impl : ( ( rule__VarDeclaration__FinalAssignment_1 )? ) ;
    public final void rule__VarDeclaration__Group__1__Impl() throws RecognitionException {
        int rule__VarDeclaration__Group__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 455) ) { return ; }
            // InternalBeeLangTestLanguage.g:6496:1: ( ( ( rule__VarDeclaration__FinalAssignment_1 )? ) )
            // InternalBeeLangTestLanguage.g:6497:1: ( ( rule__VarDeclaration__FinalAssignment_1 )? )
            {
            // InternalBeeLangTestLanguage.g:6497:1: ( ( rule__VarDeclaration__FinalAssignment_1 )? )
            // InternalBeeLangTestLanguage.g:6498:2: ( rule__VarDeclaration__FinalAssignment_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getFinalAssignment_1()); 
            }
            // InternalBeeLangTestLanguage.g:6499:2: ( rule__VarDeclaration__FinalAssignment_1 )?
            int alt56=2;
            int LA56_0 = input.LA(1);

            if ( (LA56_0==74) ) {
                alt56=1;
            }
            switch (alt56) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:6499:3: rule__VarDeclaration__FinalAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__VarDeclaration__FinalAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getFinalAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 455, rule__VarDeclaration__Group__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group__1__Impl"


    // $ANTLR start "rule__VarDeclaration__Group__2"
    // InternalBeeLangTestLanguage.g:6507:1: rule__VarDeclaration__Group__2 : rule__VarDeclaration__Group__2__Impl rule__VarDeclaration__Group__3 ;
    public final void rule__VarDeclaration__Group__2() throws RecognitionException {
        int rule__VarDeclaration__Group__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 456) ) { return ; }
            // InternalBeeLangTestLanguage.g:6511:1: ( rule__VarDeclaration__Group__2__Impl rule__VarDeclaration__Group__3 )
            // InternalBeeLangTestLanguage.g:6512:2: rule__VarDeclaration__Group__2__Impl rule__VarDeclaration__Group__3
            {
            pushFollow(FOLLOW_35);
            rule__VarDeclaration__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 456, rule__VarDeclaration__Group__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group__2"


    // $ANTLR start "rule__VarDeclaration__Group__2__Impl"
    // InternalBeeLangTestLanguage.g:6519:1: rule__VarDeclaration__Group__2__Impl : ( ( rule__VarDeclaration__Group_2__0 ) ) ;
    public final void rule__VarDeclaration__Group__2__Impl() throws RecognitionException {
        int rule__VarDeclaration__Group__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 457) ) { return ; }
            // InternalBeeLangTestLanguage.g:6523:1: ( ( ( rule__VarDeclaration__Group_2__0 ) ) )
            // InternalBeeLangTestLanguage.g:6524:1: ( ( rule__VarDeclaration__Group_2__0 ) )
            {
            // InternalBeeLangTestLanguage.g:6524:1: ( ( rule__VarDeclaration__Group_2__0 ) )
            // InternalBeeLangTestLanguage.g:6525:2: ( rule__VarDeclaration__Group_2__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getGroup_2()); 
            }
            // InternalBeeLangTestLanguage.g:6526:2: ( rule__VarDeclaration__Group_2__0 )
            // InternalBeeLangTestLanguage.g:6526:3: rule__VarDeclaration__Group_2__0
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_2__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getGroup_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 457, rule__VarDeclaration__Group__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group__2__Impl"


    // $ANTLR start "rule__VarDeclaration__Group__3"
    // InternalBeeLangTestLanguage.g:6534:1: rule__VarDeclaration__Group__3 : rule__VarDeclaration__Group__3__Impl ;
    public final void rule__VarDeclaration__Group__3() throws RecognitionException {
        int rule__VarDeclaration__Group__3_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 458) ) { return ; }
            // InternalBeeLangTestLanguage.g:6538:1: ( rule__VarDeclaration__Group__3__Impl )
            // InternalBeeLangTestLanguage.g:6539:2: rule__VarDeclaration__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 458, rule__VarDeclaration__Group__3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group__3"


    // $ANTLR start "rule__VarDeclaration__Group__3__Impl"
    // InternalBeeLangTestLanguage.g:6545:1: rule__VarDeclaration__Group__3__Impl : ( ( rule__VarDeclaration__Group_3__0 )? ) ;
    public final void rule__VarDeclaration__Group__3__Impl() throws RecognitionException {
        int rule__VarDeclaration__Group__3__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 459) ) { return ; }
            // InternalBeeLangTestLanguage.g:6549:1: ( ( ( rule__VarDeclaration__Group_3__0 )? ) )
            // InternalBeeLangTestLanguage.g:6550:1: ( ( rule__VarDeclaration__Group_3__0 )? )
            {
            // InternalBeeLangTestLanguage.g:6550:1: ( ( rule__VarDeclaration__Group_3__0 )? )
            // InternalBeeLangTestLanguage.g:6551:2: ( rule__VarDeclaration__Group_3__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getGroup_3()); 
            }
            // InternalBeeLangTestLanguage.g:6552:2: ( rule__VarDeclaration__Group_3__0 )?
            int alt57=2;
            int LA57_0 = input.LA(1);

            if ( (LA57_0==14) ) {
                alt57=1;
            }
            switch (alt57) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:6552:3: rule__VarDeclaration__Group_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__VarDeclaration__Group_3__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getGroup_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 459, rule__VarDeclaration__Group__3__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group__3__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_2__0"
    // InternalBeeLangTestLanguage.g:6561:1: rule__VarDeclaration__Group_2__0 : rule__VarDeclaration__Group_2__0__Impl rule__VarDeclaration__Group_2__1 ;
    public final void rule__VarDeclaration__Group_2__0() throws RecognitionException {
        int rule__VarDeclaration__Group_2__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 460) ) { return ; }
            // InternalBeeLangTestLanguage.g:6565:1: ( rule__VarDeclaration__Group_2__0__Impl rule__VarDeclaration__Group_2__1 )
            // InternalBeeLangTestLanguage.g:6566:2: rule__VarDeclaration__Group_2__0__Impl rule__VarDeclaration__Group_2__1
            {
            pushFollow(FOLLOW_9);
            rule__VarDeclaration__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 460, rule__VarDeclaration__Group_2__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_2__0"


    // $ANTLR start "rule__VarDeclaration__Group_2__0__Impl"
    // InternalBeeLangTestLanguage.g:6573:1: rule__VarDeclaration__Group_2__0__Impl : ( ( rule__VarDeclaration__Alternatives_2_0 ) ) ;
    public final void rule__VarDeclaration__Group_2__0__Impl() throws RecognitionException {
        int rule__VarDeclaration__Group_2__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 461) ) { return ; }
            // InternalBeeLangTestLanguage.g:6577:1: ( ( ( rule__VarDeclaration__Alternatives_2_0 ) ) )
            // InternalBeeLangTestLanguage.g:6578:1: ( ( rule__VarDeclaration__Alternatives_2_0 ) )
            {
            // InternalBeeLangTestLanguage.g:6578:1: ( ( rule__VarDeclaration__Alternatives_2_0 ) )
            // InternalBeeLangTestLanguage.g:6579:2: ( rule__VarDeclaration__Alternatives_2_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getAlternatives_2_0()); 
            }
            // InternalBeeLangTestLanguage.g:6580:2: ( rule__VarDeclaration__Alternatives_2_0 )
            // InternalBeeLangTestLanguage.g:6580:3: rule__VarDeclaration__Alternatives_2_0
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Alternatives_2_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getAlternatives_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 461, rule__VarDeclaration__Group_2__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_2__0__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_2__1"
    // InternalBeeLangTestLanguage.g:6588:1: rule__VarDeclaration__Group_2__1 : rule__VarDeclaration__Group_2__1__Impl ;
    public final void rule__VarDeclaration__Group_2__1() throws RecognitionException {
        int rule__VarDeclaration__Group_2__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 462) ) { return ; }
            // InternalBeeLangTestLanguage.g:6592:1: ( rule__VarDeclaration__Group_2__1__Impl )
            // InternalBeeLangTestLanguage.g:6593:2: rule__VarDeclaration__Group_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 462, rule__VarDeclaration__Group_2__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_2__1"


    // $ANTLR start "rule__VarDeclaration__Group_2__1__Impl"
    // InternalBeeLangTestLanguage.g:6599:1: rule__VarDeclaration__Group_2__1__Impl : ( ( rule__VarDeclaration__NameAssignment_2_1 ) ) ;
    public final void rule__VarDeclaration__Group_2__1__Impl() throws RecognitionException {
        int rule__VarDeclaration__Group_2__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 463) ) { return ; }
            // InternalBeeLangTestLanguage.g:6603:1: ( ( ( rule__VarDeclaration__NameAssignment_2_1 ) ) )
            // InternalBeeLangTestLanguage.g:6604:1: ( ( rule__VarDeclaration__NameAssignment_2_1 ) )
            {
            // InternalBeeLangTestLanguage.g:6604:1: ( ( rule__VarDeclaration__NameAssignment_2_1 ) )
            // InternalBeeLangTestLanguage.g:6605:2: ( rule__VarDeclaration__NameAssignment_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getNameAssignment_2_1()); 
            }
            // InternalBeeLangTestLanguage.g:6606:2: ( rule__VarDeclaration__NameAssignment_2_1 )
            // InternalBeeLangTestLanguage.g:6606:3: rule__VarDeclaration__NameAssignment_2_1
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__NameAssignment_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getNameAssignment_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 463, rule__VarDeclaration__Group_2__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_2__1__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_3__0"
    // InternalBeeLangTestLanguage.g:6615:1: rule__VarDeclaration__Group_3__0 : rule__VarDeclaration__Group_3__0__Impl rule__VarDeclaration__Group_3__1 ;
    public final void rule__VarDeclaration__Group_3__0() throws RecognitionException {
        int rule__VarDeclaration__Group_3__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 464) ) { return ; }
            // InternalBeeLangTestLanguage.g:6619:1: ( rule__VarDeclaration__Group_3__0__Impl rule__VarDeclaration__Group_3__1 )
            // InternalBeeLangTestLanguage.g:6620:2: rule__VarDeclaration__Group_3__0__Impl rule__VarDeclaration__Group_3__1
            {
            pushFollow(FOLLOW_19);
            rule__VarDeclaration__Group_3__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_3__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 464, rule__VarDeclaration__Group_3__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3__0"


    // $ANTLR start "rule__VarDeclaration__Group_3__0__Impl"
    // InternalBeeLangTestLanguage.g:6627:1: rule__VarDeclaration__Group_3__0__Impl : ( '=' ) ;
    public final void rule__VarDeclaration__Group_3__0__Impl() throws RecognitionException {
        int rule__VarDeclaration__Group_3__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 465) ) { return ; }
            // InternalBeeLangTestLanguage.g:6631:1: ( ( '=' ) )
            // InternalBeeLangTestLanguage.g:6632:1: ( '=' )
            {
            // InternalBeeLangTestLanguage.g:6632:1: ( '=' )
            // InternalBeeLangTestLanguage.g:6633:2: '='
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getEqualsSignKeyword_3_0()); 
            }
            match(input,14,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getEqualsSignKeyword_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 465, rule__VarDeclaration__Group_3__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3__0__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_3__1"
    // InternalBeeLangTestLanguage.g:6642:1: rule__VarDeclaration__Group_3__1 : rule__VarDeclaration__Group_3__1__Impl ;
    public final void rule__VarDeclaration__Group_3__1() throws RecognitionException {
        int rule__VarDeclaration__Group_3__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 466) ) { return ; }
            // InternalBeeLangTestLanguage.g:6646:1: ( rule__VarDeclaration__Group_3__1__Impl )
            // InternalBeeLangTestLanguage.g:6647:2: rule__VarDeclaration__Group_3__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_3__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 466, rule__VarDeclaration__Group_3__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3__1"


    // $ANTLR start "rule__VarDeclaration__Group_3__1__Impl"
    // InternalBeeLangTestLanguage.g:6653:1: rule__VarDeclaration__Group_3__1__Impl : ( ( rule__VarDeclaration__ValueExprAssignment_3_1 ) ) ;
    public final void rule__VarDeclaration__Group_3__1__Impl() throws RecognitionException {
        int rule__VarDeclaration__Group_3__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 467) ) { return ; }
            // InternalBeeLangTestLanguage.g:6657:1: ( ( ( rule__VarDeclaration__ValueExprAssignment_3_1 ) ) )
            // InternalBeeLangTestLanguage.g:6658:1: ( ( rule__VarDeclaration__ValueExprAssignment_3_1 ) )
            {
            // InternalBeeLangTestLanguage.g:6658:1: ( ( rule__VarDeclaration__ValueExprAssignment_3_1 ) )
            // InternalBeeLangTestLanguage.g:6659:2: ( rule__VarDeclaration__ValueExprAssignment_3_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getValueExprAssignment_3_1()); 
            }
            // InternalBeeLangTestLanguage.g:6660:2: ( rule__VarDeclaration__ValueExprAssignment_3_1 )
            // InternalBeeLangTestLanguage.g:6660:3: rule__VarDeclaration__ValueExprAssignment_3_1
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__ValueExprAssignment_3_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getValueExprAssignment_3_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 467, rule__VarDeclaration__Group_3__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3__1__Impl"


    // $ANTLR start "rule__ValDeclaration__Group__0"
    // InternalBeeLangTestLanguage.g:6669:1: rule__ValDeclaration__Group__0 : rule__ValDeclaration__Group__0__Impl rule__ValDeclaration__Group__1 ;
    public final void rule__ValDeclaration__Group__0() throws RecognitionException {
        int rule__ValDeclaration__Group__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 468) ) { return ; }
            // InternalBeeLangTestLanguage.g:6673:1: ( rule__ValDeclaration__Group__0__Impl rule__ValDeclaration__Group__1 )
            // InternalBeeLangTestLanguage.g:6674:2: rule__ValDeclaration__Group__0__Impl rule__ValDeclaration__Group__1
            {
            pushFollow(FOLLOW_36);
            rule__ValDeclaration__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ValDeclaration__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 468, rule__ValDeclaration__Group__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValDeclaration__Group__0"


    // $ANTLR start "rule__ValDeclaration__Group__0__Impl"
    // InternalBeeLangTestLanguage.g:6681:1: rule__ValDeclaration__Group__0__Impl : ( () ) ;
    public final void rule__ValDeclaration__Group__0__Impl() throws RecognitionException {
        int rule__ValDeclaration__Group__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 469) ) { return ; }
            // InternalBeeLangTestLanguage.g:6685:1: ( ( () ) )
            // InternalBeeLangTestLanguage.g:6686:1: ( () )
            {
            // InternalBeeLangTestLanguage.g:6686:1: ( () )
            // InternalBeeLangTestLanguage.g:6687:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValDeclarationAccess().getDefValueAction_0()); 
            }
            // InternalBeeLangTestLanguage.g:6688:2: ()
            // InternalBeeLangTestLanguage.g:6688:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getValDeclarationAccess().getDefValueAction_0()); 
            }

            }


            }

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 469, rule__ValDeclaration__Group__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValDeclaration__Group__0__Impl"


    // $ANTLR start "rule__ValDeclaration__Group__1"
    // InternalBeeLangTestLanguage.g:6696:1: rule__ValDeclaration__Group__1 : rule__ValDeclaration__Group__1__Impl rule__ValDeclaration__Group__2 ;
    public final void rule__ValDeclaration__Group__1() throws RecognitionException {
        int rule__ValDeclaration__Group__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 470) ) { return ; }
            // InternalBeeLangTestLanguage.g:6700:1: ( rule__ValDeclaration__Group__1__Impl rule__ValDeclaration__Group__2 )
            // InternalBeeLangTestLanguage.g:6701:2: rule__ValDeclaration__Group__1__Impl rule__ValDeclaration__Group__2
            {
            pushFollow(FOLLOW_36);
            rule__ValDeclaration__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ValDeclaration__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 470, rule__ValDeclaration__Group__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValDeclaration__Group__1"


    // $ANTLR start "rule__ValDeclaration__Group__1__Impl"
    // InternalBeeLangTestLanguage.g:6708:1: rule__ValDeclaration__Group__1__Impl : ( ( rule__ValDeclaration__FinalAssignment_1 )? ) ;
    public final void rule__ValDeclaration__Group__1__Impl() throws RecognitionException {
        int rule__ValDeclaration__Group__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 471) ) { return ; }
            // InternalBeeLangTestLanguage.g:6712:1: ( ( ( rule__ValDeclaration__FinalAssignment_1 )? ) )
            // InternalBeeLangTestLanguage.g:6713:1: ( ( rule__ValDeclaration__FinalAssignment_1 )? )
            {
            // InternalBeeLangTestLanguage.g:6713:1: ( ( rule__ValDeclaration__FinalAssignment_1 )? )
            // InternalBeeLangTestLanguage.g:6714:2: ( rule__ValDeclaration__FinalAssignment_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValDeclarationAccess().getFinalAssignment_1()); 
            }
            // InternalBeeLangTestLanguage.g:6715:2: ( rule__ValDeclaration__FinalAssignment_1 )?
            int alt58=2;
            int LA58_0 = input.LA(1);

            if ( (LA58_0==74) ) {
                alt58=1;
            }
            switch (alt58) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:6715:3: rule__ValDeclaration__FinalAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__ValDeclaration__FinalAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getValDeclarationAccess().getFinalAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 471, rule__ValDeclaration__Group__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValDeclaration__Group__1__Impl"


    // $ANTLR start "rule__ValDeclaration__Group__2"
    // InternalBeeLangTestLanguage.g:6723:1: rule__ValDeclaration__Group__2 : rule__ValDeclaration__Group__2__Impl rule__ValDeclaration__Group__3 ;
    public final void rule__ValDeclaration__Group__2() throws RecognitionException {
        int rule__ValDeclaration__Group__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 472) ) { return ; }
            // InternalBeeLangTestLanguage.g:6727:1: ( rule__ValDeclaration__Group__2__Impl rule__ValDeclaration__Group__3 )
            // InternalBeeLangTestLanguage.g:6728:2: rule__ValDeclaration__Group__2__Impl rule__ValDeclaration__Group__3
            {
            pushFollow(FOLLOW_28);
            rule__ValDeclaration__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ValDeclaration__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 472, rule__ValDeclaration__Group__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValDeclaration__Group__2"


    // $ANTLR start "rule__ValDeclaration__Group__2__Impl"
    // InternalBeeLangTestLanguage.g:6735:1: rule__ValDeclaration__Group__2__Impl : ( ( rule__ValDeclaration__ImmutableAssignment_2 ) ) ;
    public final void rule__ValDeclaration__Group__2__Impl() throws RecognitionException {
        int rule__ValDeclaration__Group__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 473) ) { return ; }
            // InternalBeeLangTestLanguage.g:6739:1: ( ( ( rule__ValDeclaration__ImmutableAssignment_2 ) ) )
            // InternalBeeLangTestLanguage.g:6740:1: ( ( rule__ValDeclaration__ImmutableAssignment_2 ) )
            {
            // InternalBeeLangTestLanguage.g:6740:1: ( ( rule__ValDeclaration__ImmutableAssignment_2 ) )
            // InternalBeeLangTestLanguage.g:6741:2: ( rule__ValDeclaration__ImmutableAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValDeclarationAccess().getImmutableAssignment_2()); 
            }
            // InternalBeeLangTestLanguage.g:6742:2: ( rule__ValDeclaration__ImmutableAssignment_2 )
            // InternalBeeLangTestLanguage.g:6742:3: rule__ValDeclaration__ImmutableAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__ValDeclaration__ImmutableAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getValDeclarationAccess().getImmutableAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 473, rule__ValDeclaration__Group__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValDeclaration__Group__2__Impl"


    // $ANTLR start "rule__ValDeclaration__Group__3"
    // InternalBeeLangTestLanguage.g:6750:1: rule__ValDeclaration__Group__3 : rule__ValDeclaration__Group__3__Impl rule__ValDeclaration__Group__4 ;
    public final void rule__ValDeclaration__Group__3() throws RecognitionException {
        int rule__ValDeclaration__Group__3_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 474) ) { return ; }
            // InternalBeeLangTestLanguage.g:6754:1: ( rule__ValDeclaration__Group__3__Impl rule__ValDeclaration__Group__4 )
            // InternalBeeLangTestLanguage.g:6755:2: rule__ValDeclaration__Group__3__Impl rule__ValDeclaration__Group__4
            {
            pushFollow(FOLLOW_28);
            rule__ValDeclaration__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ValDeclaration__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 474, rule__ValDeclaration__Group__3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValDeclaration__Group__3"


    // $ANTLR start "rule__ValDeclaration__Group__3__Impl"
    // InternalBeeLangTestLanguage.g:6762:1: rule__ValDeclaration__Group__3__Impl : ( ( rule__ValDeclaration__TypeAssignment_3 )? ) ;
    public final void rule__ValDeclaration__Group__3__Impl() throws RecognitionException {
        int rule__ValDeclaration__Group__3__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 475) ) { return ; }
            // InternalBeeLangTestLanguage.g:6766:1: ( ( ( rule__ValDeclaration__TypeAssignment_3 )? ) )
            // InternalBeeLangTestLanguage.g:6767:1: ( ( rule__ValDeclaration__TypeAssignment_3 )? )
            {
            // InternalBeeLangTestLanguage.g:6767:1: ( ( rule__ValDeclaration__TypeAssignment_3 )? )
            // InternalBeeLangTestLanguage.g:6768:2: ( rule__ValDeclaration__TypeAssignment_3 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValDeclarationAccess().getTypeAssignment_3()); 
            }
            // InternalBeeLangTestLanguage.g:6769:2: ( rule__ValDeclaration__TypeAssignment_3 )?
            int alt59=2;
            int LA59_0 = input.LA(1);

            if ( (LA59_0==60) ) {
                alt59=1;
            }
            else if ( (LA59_0==RULE_ID) ) {
                int LA59_2 = input.LA(2);

                if ( (LA59_2==RULE_ID||LA59_2==28) ) {
                    alt59=1;
                }
            }
            switch (alt59) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:6769:3: rule__ValDeclaration__TypeAssignment_3
                    {
                    pushFollow(FOLLOW_2);
                    rule__ValDeclaration__TypeAssignment_3();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getValDeclarationAccess().getTypeAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 475, rule__ValDeclaration__Group__3__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValDeclaration__Group__3__Impl"


    // $ANTLR start "rule__ValDeclaration__Group__4"
    // InternalBeeLangTestLanguage.g:6777:1: rule__ValDeclaration__Group__4 : rule__ValDeclaration__Group__4__Impl rule__ValDeclaration__Group__5 ;
    public final void rule__ValDeclaration__Group__4() throws RecognitionException {
        int rule__ValDeclaration__Group__4_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 476) ) { return ; }
            // InternalBeeLangTestLanguage.g:6781:1: ( rule__ValDeclaration__Group__4__Impl rule__ValDeclaration__Group__5 )
            // InternalBeeLangTestLanguage.g:6782:2: rule__ValDeclaration__Group__4__Impl rule__ValDeclaration__Group__5
            {
            pushFollow(FOLLOW_35);
            rule__ValDeclaration__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ValDeclaration__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 476, rule__ValDeclaration__Group__4_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValDeclaration__Group__4"


    // $ANTLR start "rule__ValDeclaration__Group__4__Impl"
    // InternalBeeLangTestLanguage.g:6789:1: rule__ValDeclaration__Group__4__Impl : ( ( rule__ValDeclaration__NameAssignment_4 ) ) ;
    public final void rule__ValDeclaration__Group__4__Impl() throws RecognitionException {
        int rule__ValDeclaration__Group__4__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 477) ) { return ; }
            // InternalBeeLangTestLanguage.g:6793:1: ( ( ( rule__ValDeclaration__NameAssignment_4 ) ) )
            // InternalBeeLangTestLanguage.g:6794:1: ( ( rule__ValDeclaration__NameAssignment_4 ) )
            {
            // InternalBeeLangTestLanguage.g:6794:1: ( ( rule__ValDeclaration__NameAssignment_4 ) )
            // InternalBeeLangTestLanguage.g:6795:2: ( rule__ValDeclaration__NameAssignment_4 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValDeclarationAccess().getNameAssignment_4()); 
            }
            // InternalBeeLangTestLanguage.g:6796:2: ( rule__ValDeclaration__NameAssignment_4 )
            // InternalBeeLangTestLanguage.g:6796:3: rule__ValDeclaration__NameAssignment_4
            {
            pushFollow(FOLLOW_2);
            rule__ValDeclaration__NameAssignment_4();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getValDeclarationAccess().getNameAssignment_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 477, rule__ValDeclaration__Group__4__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValDeclaration__Group__4__Impl"


    // $ANTLR start "rule__ValDeclaration__Group__5"
    // InternalBeeLangTestLanguage.g:6804:1: rule__ValDeclaration__Group__5 : rule__ValDeclaration__Group__5__Impl rule__ValDeclaration__Group__6 ;
    public final void rule__ValDeclaration__Group__5() throws RecognitionException {
        int rule__ValDeclaration__Group__5_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 478) ) { return ; }
            // InternalBeeLangTestLanguage.g:6808:1: ( rule__ValDeclaration__Group__5__Impl rule__ValDeclaration__Group__6 )
            // InternalBeeLangTestLanguage.g:6809:2: rule__ValDeclaration__Group__5__Impl rule__ValDeclaration__Group__6
            {
            pushFollow(FOLLOW_19);
            rule__ValDeclaration__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ValDeclaration__Group__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 478, rule__ValDeclaration__Group__5_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValDeclaration__Group__5"


    // $ANTLR start "rule__ValDeclaration__Group__5__Impl"
    // InternalBeeLangTestLanguage.g:6816:1: rule__ValDeclaration__Group__5__Impl : ( '=' ) ;
    public final void rule__ValDeclaration__Group__5__Impl() throws RecognitionException {
        int rule__ValDeclaration__Group__5__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 479) ) { return ; }
            // InternalBeeLangTestLanguage.g:6820:1: ( ( '=' ) )
            // InternalBeeLangTestLanguage.g:6821:1: ( '=' )
            {
            // InternalBeeLangTestLanguage.g:6821:1: ( '=' )
            // InternalBeeLangTestLanguage.g:6822:2: '='
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValDeclarationAccess().getEqualsSignKeyword_5()); 
            }
            match(input,14,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getValDeclarationAccess().getEqualsSignKeyword_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 479, rule__ValDeclaration__Group__5__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValDeclaration__Group__5__Impl"


    // $ANTLR start "rule__ValDeclaration__Group__6"
    // InternalBeeLangTestLanguage.g:6831:1: rule__ValDeclaration__Group__6 : rule__ValDeclaration__Group__6__Impl ;
    public final void rule__ValDeclaration__Group__6() throws RecognitionException {
        int rule__ValDeclaration__Group__6_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 480) ) { return ; }
            // InternalBeeLangTestLanguage.g:6835:1: ( rule__ValDeclaration__Group__6__Impl )
            // InternalBeeLangTestLanguage.g:6836:2: rule__ValDeclaration__Group__6__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ValDeclaration__Group__6__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 480, rule__ValDeclaration__Group__6_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValDeclaration__Group__6"


    // $ANTLR start "rule__ValDeclaration__Group__6__Impl"
    // InternalBeeLangTestLanguage.g:6842:1: rule__ValDeclaration__Group__6__Impl : ( ( rule__ValDeclaration__ValueExprAssignment_6 ) ) ;
    public final void rule__ValDeclaration__Group__6__Impl() throws RecognitionException {
        int rule__ValDeclaration__Group__6__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 481) ) { return ; }
            // InternalBeeLangTestLanguage.g:6846:1: ( ( ( rule__ValDeclaration__ValueExprAssignment_6 ) ) )
            // InternalBeeLangTestLanguage.g:6847:1: ( ( rule__ValDeclaration__ValueExprAssignment_6 ) )
            {
            // InternalBeeLangTestLanguage.g:6847:1: ( ( rule__ValDeclaration__ValueExprAssignment_6 ) )
            // InternalBeeLangTestLanguage.g:6848:2: ( rule__ValDeclaration__ValueExprAssignment_6 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValDeclarationAccess().getValueExprAssignment_6()); 
            }
            // InternalBeeLangTestLanguage.g:6849:2: ( rule__ValDeclaration__ValueExprAssignment_6 )
            // InternalBeeLangTestLanguage.g:6849:3: rule__ValDeclaration__ValueExprAssignment_6
            {
            pushFollow(FOLLOW_2);
            rule__ValDeclaration__ValueExprAssignment_6();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getValDeclarationAccess().getValueExprAssignment_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 481, rule__ValDeclaration__Group__6__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValDeclaration__Group__6__Impl"


    // $ANTLR start "rule__SimpleTypeRef__Group__0"
    // InternalBeeLangTestLanguage.g:6858:1: rule__SimpleTypeRef__Group__0 : rule__SimpleTypeRef__Group__0__Impl rule__SimpleTypeRef__Group__1 ;
    public final void rule__SimpleTypeRef__Group__0() throws RecognitionException {
        int rule__SimpleTypeRef__Group__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 482) ) { return ; }
            // InternalBeeLangTestLanguage.g:6862:1: ( rule__SimpleTypeRef__Group__0__Impl rule__SimpleTypeRef__Group__1 )
            // InternalBeeLangTestLanguage.g:6863:2: rule__SimpleTypeRef__Group__0__Impl rule__SimpleTypeRef__Group__1
            {
            pushFollow(FOLLOW_37);
            rule__SimpleTypeRef__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SimpleTypeRef__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 482, rule__SimpleTypeRef__Group__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleTypeRef__Group__0"


    // $ANTLR start "rule__SimpleTypeRef__Group__0__Impl"
    // InternalBeeLangTestLanguage.g:6870:1: rule__SimpleTypeRef__Group__0__Impl : ( ( rule__SimpleTypeRef__RawTypeAssignment_0 ) ) ;
    public final void rule__SimpleTypeRef__Group__0__Impl() throws RecognitionException {
        int rule__SimpleTypeRef__Group__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 483) ) { return ; }
            // InternalBeeLangTestLanguage.g:6874:1: ( ( ( rule__SimpleTypeRef__RawTypeAssignment_0 ) ) )
            // InternalBeeLangTestLanguage.g:6875:1: ( ( rule__SimpleTypeRef__RawTypeAssignment_0 ) )
            {
            // InternalBeeLangTestLanguage.g:6875:1: ( ( rule__SimpleTypeRef__RawTypeAssignment_0 ) )
            // InternalBeeLangTestLanguage.g:6876:2: ( rule__SimpleTypeRef__RawTypeAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSimpleTypeRefAccess().getRawTypeAssignment_0()); 
            }
            // InternalBeeLangTestLanguage.g:6877:2: ( rule__SimpleTypeRef__RawTypeAssignment_0 )
            // InternalBeeLangTestLanguage.g:6877:3: rule__SimpleTypeRef__RawTypeAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__SimpleTypeRef__RawTypeAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSimpleTypeRefAccess().getRawTypeAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 483, rule__SimpleTypeRef__Group__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleTypeRef__Group__0__Impl"


    // $ANTLR start "rule__SimpleTypeRef__Group__1"
    // InternalBeeLangTestLanguage.g:6885:1: rule__SimpleTypeRef__Group__1 : rule__SimpleTypeRef__Group__1__Impl ;
    public final void rule__SimpleTypeRef__Group__1() throws RecognitionException {
        int rule__SimpleTypeRef__Group__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 484) ) { return ; }
            // InternalBeeLangTestLanguage.g:6889:1: ( rule__SimpleTypeRef__Group__1__Impl )
            // InternalBeeLangTestLanguage.g:6890:2: rule__SimpleTypeRef__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SimpleTypeRef__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 484, rule__SimpleTypeRef__Group__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleTypeRef__Group__1"


    // $ANTLR start "rule__SimpleTypeRef__Group__1__Impl"
    // InternalBeeLangTestLanguage.g:6896:1: rule__SimpleTypeRef__Group__1__Impl : ( ( rule__SimpleTypeRef__Group_1__0 )? ) ;
    public final void rule__SimpleTypeRef__Group__1__Impl() throws RecognitionException {
        int rule__SimpleTypeRef__Group__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 485) ) { return ; }
            // InternalBeeLangTestLanguage.g:6900:1: ( ( ( rule__SimpleTypeRef__Group_1__0 )? ) )
            // InternalBeeLangTestLanguage.g:6901:1: ( ( rule__SimpleTypeRef__Group_1__0 )? )
            {
            // InternalBeeLangTestLanguage.g:6901:1: ( ( rule__SimpleTypeRef__Group_1__0 )? )
            // InternalBeeLangTestLanguage.g:6902:2: ( rule__SimpleTypeRef__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSimpleTypeRefAccess().getGroup_1()); 
            }
            // InternalBeeLangTestLanguage.g:6903:2: ( rule__SimpleTypeRef__Group_1__0 )?
            int alt60=2;
            int LA60_0 = input.LA(1);

            if ( (LA60_0==28) ) {
                alt60=1;
            }
            switch (alt60) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:6903:3: rule__SimpleTypeRef__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__SimpleTypeRef__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSimpleTypeRefAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 485, rule__SimpleTypeRef__Group__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleTypeRef__Group__1__Impl"


    // $ANTLR start "rule__SimpleTypeRef__Group_1__0"
    // InternalBeeLangTestLanguage.g:6912:1: rule__SimpleTypeRef__Group_1__0 : rule__SimpleTypeRef__Group_1__0__Impl rule__SimpleTypeRef__Group_1__1 ;
    public final void rule__SimpleTypeRef__Group_1__0() throws RecognitionException {
        int rule__SimpleTypeRef__Group_1__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 486) ) { return ; }
            // InternalBeeLangTestLanguage.g:6916:1: ( rule__SimpleTypeRef__Group_1__0__Impl rule__SimpleTypeRef__Group_1__1 )
            // InternalBeeLangTestLanguage.g:6917:2: rule__SimpleTypeRef__Group_1__0__Impl rule__SimpleTypeRef__Group_1__1
            {
            pushFollow(FOLLOW_9);
            rule__SimpleTypeRef__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SimpleTypeRef__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 486, rule__SimpleTypeRef__Group_1__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleTypeRef__Group_1__0"


    // $ANTLR start "rule__SimpleTypeRef__Group_1__0__Impl"
    // InternalBeeLangTestLanguage.g:6924:1: rule__SimpleTypeRef__Group_1__0__Impl : ( '<' ) ;
    public final void rule__SimpleTypeRef__Group_1__0__Impl() throws RecognitionException {
        int rule__SimpleTypeRef__Group_1__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 487) ) { return ; }
            // InternalBeeLangTestLanguage.g:6928:1: ( ( '<' ) )
            // InternalBeeLangTestLanguage.g:6929:1: ( '<' )
            {
            // InternalBeeLangTestLanguage.g:6929:1: ( '<' )
            // InternalBeeLangTestLanguage.g:6930:2: '<'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSimpleTypeRefAccess().getLessThanSignKeyword_1_0()); 
            }
            match(input,28,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSimpleTypeRefAccess().getLessThanSignKeyword_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 487, rule__SimpleTypeRef__Group_1__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleTypeRef__Group_1__0__Impl"


    // $ANTLR start "rule__SimpleTypeRef__Group_1__1"
    // InternalBeeLangTestLanguage.g:6939:1: rule__SimpleTypeRef__Group_1__1 : rule__SimpleTypeRef__Group_1__1__Impl rule__SimpleTypeRef__Group_1__2 ;
    public final void rule__SimpleTypeRef__Group_1__1() throws RecognitionException {
        int rule__SimpleTypeRef__Group_1__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 488) ) { return ; }
            // InternalBeeLangTestLanguage.g:6943:1: ( rule__SimpleTypeRef__Group_1__1__Impl rule__SimpleTypeRef__Group_1__2 )
            // InternalBeeLangTestLanguage.g:6944:2: rule__SimpleTypeRef__Group_1__1__Impl rule__SimpleTypeRef__Group_1__2
            {
            pushFollow(FOLLOW_38);
            rule__SimpleTypeRef__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SimpleTypeRef__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 488, rule__SimpleTypeRef__Group_1__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleTypeRef__Group_1__1"


    // $ANTLR start "rule__SimpleTypeRef__Group_1__1__Impl"
    // InternalBeeLangTestLanguage.g:6951:1: rule__SimpleTypeRef__Group_1__1__Impl : ( ( rule__SimpleTypeRef__ActualArgumentsListAssignment_1_1 ) ) ;
    public final void rule__SimpleTypeRef__Group_1__1__Impl() throws RecognitionException {
        int rule__SimpleTypeRef__Group_1__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 489) ) { return ; }
            // InternalBeeLangTestLanguage.g:6955:1: ( ( ( rule__SimpleTypeRef__ActualArgumentsListAssignment_1_1 ) ) )
            // InternalBeeLangTestLanguage.g:6956:1: ( ( rule__SimpleTypeRef__ActualArgumentsListAssignment_1_1 ) )
            {
            // InternalBeeLangTestLanguage.g:6956:1: ( ( rule__SimpleTypeRef__ActualArgumentsListAssignment_1_1 ) )
            // InternalBeeLangTestLanguage.g:6957:2: ( rule__SimpleTypeRef__ActualArgumentsListAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSimpleTypeRefAccess().getActualArgumentsListAssignment_1_1()); 
            }
            // InternalBeeLangTestLanguage.g:6958:2: ( rule__SimpleTypeRef__ActualArgumentsListAssignment_1_1 )
            // InternalBeeLangTestLanguage.g:6958:3: rule__SimpleTypeRef__ActualArgumentsListAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__SimpleTypeRef__ActualArgumentsListAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSimpleTypeRefAccess().getActualArgumentsListAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 489, rule__SimpleTypeRef__Group_1__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleTypeRef__Group_1__1__Impl"


    // $ANTLR start "rule__SimpleTypeRef__Group_1__2"
    // InternalBeeLangTestLanguage.g:6966:1: rule__SimpleTypeRef__Group_1__2 : rule__SimpleTypeRef__Group_1__2__Impl rule__SimpleTypeRef__Group_1__3 ;
    public final void rule__SimpleTypeRef__Group_1__2() throws RecognitionException {
        int rule__SimpleTypeRef__Group_1__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 490) ) { return ; }
            // InternalBeeLangTestLanguage.g:6970:1: ( rule__SimpleTypeRef__Group_1__2__Impl rule__SimpleTypeRef__Group_1__3 )
            // InternalBeeLangTestLanguage.g:6971:2: rule__SimpleTypeRef__Group_1__2__Impl rule__SimpleTypeRef__Group_1__3
            {
            pushFollow(FOLLOW_38);
            rule__SimpleTypeRef__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SimpleTypeRef__Group_1__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 490, rule__SimpleTypeRef__Group_1__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleTypeRef__Group_1__2"


    // $ANTLR start "rule__SimpleTypeRef__Group_1__2__Impl"
    // InternalBeeLangTestLanguage.g:6978:1: rule__SimpleTypeRef__Group_1__2__Impl : ( ( rule__SimpleTypeRef__Group_1_2__0 )* ) ;
    public final void rule__SimpleTypeRef__Group_1__2__Impl() throws RecognitionException {
        int rule__SimpleTypeRef__Group_1__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 491) ) { return ; }
            // InternalBeeLangTestLanguage.g:6982:1: ( ( ( rule__SimpleTypeRef__Group_1_2__0 )* ) )
            // InternalBeeLangTestLanguage.g:6983:1: ( ( rule__SimpleTypeRef__Group_1_2__0 )* )
            {
            // InternalBeeLangTestLanguage.g:6983:1: ( ( rule__SimpleTypeRef__Group_1_2__0 )* )
            // InternalBeeLangTestLanguage.g:6984:2: ( rule__SimpleTypeRef__Group_1_2__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSimpleTypeRefAccess().getGroup_1_2()); 
            }
            // InternalBeeLangTestLanguage.g:6985:2: ( rule__SimpleTypeRef__Group_1_2__0 )*
            loop61:
            do {
                int alt61=2;
                int LA61_0 = input.LA(1);

                if ( (LA61_0==48) ) {
                    alt61=1;
                }


                switch (alt61) {
            	case 1 :
            	    // InternalBeeLangTestLanguage.g:6985:3: rule__SimpleTypeRef__Group_1_2__0
            	    {
            	    pushFollow(FOLLOW_11);
            	    rule__SimpleTypeRef__Group_1_2__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop61;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSimpleTypeRefAccess().getGroup_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 491, rule__SimpleTypeRef__Group_1__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleTypeRef__Group_1__2__Impl"


    // $ANTLR start "rule__SimpleTypeRef__Group_1__3"
    // InternalBeeLangTestLanguage.g:6993:1: rule__SimpleTypeRef__Group_1__3 : rule__SimpleTypeRef__Group_1__3__Impl ;
    public final void rule__SimpleTypeRef__Group_1__3() throws RecognitionException {
        int rule__SimpleTypeRef__Group_1__3_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 492) ) { return ; }
            // InternalBeeLangTestLanguage.g:6997:1: ( rule__SimpleTypeRef__Group_1__3__Impl )
            // InternalBeeLangTestLanguage.g:6998:2: rule__SimpleTypeRef__Group_1__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SimpleTypeRef__Group_1__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 492, rule__SimpleTypeRef__Group_1__3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleTypeRef__Group_1__3"


    // $ANTLR start "rule__SimpleTypeRef__Group_1__3__Impl"
    // InternalBeeLangTestLanguage.g:7004:1: rule__SimpleTypeRef__Group_1__3__Impl : ( '>' ) ;
    public final void rule__SimpleTypeRef__Group_1__3__Impl() throws RecognitionException {
        int rule__SimpleTypeRef__Group_1__3__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 493) ) { return ; }
            // InternalBeeLangTestLanguage.g:7008:1: ( ( '>' ) )
            // InternalBeeLangTestLanguage.g:7009:1: ( '>' )
            {
            // InternalBeeLangTestLanguage.g:7009:1: ( '>' )
            // InternalBeeLangTestLanguage.g:7010:2: '>'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSimpleTypeRefAccess().getGreaterThanSignKeyword_1_3()); 
            }
            match(input,27,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSimpleTypeRefAccess().getGreaterThanSignKeyword_1_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 493, rule__SimpleTypeRef__Group_1__3__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleTypeRef__Group_1__3__Impl"


    // $ANTLR start "rule__SimpleTypeRef__Group_1_2__0"
    // InternalBeeLangTestLanguage.g:7020:1: rule__SimpleTypeRef__Group_1_2__0 : rule__SimpleTypeRef__Group_1_2__0__Impl rule__SimpleTypeRef__Group_1_2__1 ;
    public final void rule__SimpleTypeRef__Group_1_2__0() throws RecognitionException {
        int rule__SimpleTypeRef__Group_1_2__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 494) ) { return ; }
            // InternalBeeLangTestLanguage.g:7024:1: ( rule__SimpleTypeRef__Group_1_2__0__Impl rule__SimpleTypeRef__Group_1_2__1 )
            // InternalBeeLangTestLanguage.g:7025:2: rule__SimpleTypeRef__Group_1_2__0__Impl rule__SimpleTypeRef__Group_1_2__1
            {
            pushFollow(FOLLOW_9);
            rule__SimpleTypeRef__Group_1_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SimpleTypeRef__Group_1_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 494, rule__SimpleTypeRef__Group_1_2__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleTypeRef__Group_1_2__0"


    // $ANTLR start "rule__SimpleTypeRef__Group_1_2__0__Impl"
    // InternalBeeLangTestLanguage.g:7032:1: rule__SimpleTypeRef__Group_1_2__0__Impl : ( ',' ) ;
    public final void rule__SimpleTypeRef__Group_1_2__0__Impl() throws RecognitionException {
        int rule__SimpleTypeRef__Group_1_2__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 495) ) { return ; }
            // InternalBeeLangTestLanguage.g:7036:1: ( ( ',' ) )
            // InternalBeeLangTestLanguage.g:7037:1: ( ',' )
            {
            // InternalBeeLangTestLanguage.g:7037:1: ( ',' )
            // InternalBeeLangTestLanguage.g:7038:2: ','
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSimpleTypeRefAccess().getCommaKeyword_1_2_0()); 
            }
            match(input,48,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSimpleTypeRefAccess().getCommaKeyword_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 495, rule__SimpleTypeRef__Group_1_2__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleTypeRef__Group_1_2__0__Impl"


    // $ANTLR start "rule__SimpleTypeRef__Group_1_2__1"
    // InternalBeeLangTestLanguage.g:7047:1: rule__SimpleTypeRef__Group_1_2__1 : rule__SimpleTypeRef__Group_1_2__1__Impl ;
    public final void rule__SimpleTypeRef__Group_1_2__1() throws RecognitionException {
        int rule__SimpleTypeRef__Group_1_2__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 496) ) { return ; }
            // InternalBeeLangTestLanguage.g:7051:1: ( rule__SimpleTypeRef__Group_1_2__1__Impl )
            // InternalBeeLangTestLanguage.g:7052:2: rule__SimpleTypeRef__Group_1_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SimpleTypeRef__Group_1_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 496, rule__SimpleTypeRef__Group_1_2__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleTypeRef__Group_1_2__1"


    // $ANTLR start "rule__SimpleTypeRef__Group_1_2__1__Impl"
    // InternalBeeLangTestLanguage.g:7058:1: rule__SimpleTypeRef__Group_1_2__1__Impl : ( ( rule__SimpleTypeRef__ActualArgumentsListAssignment_1_2_1 ) ) ;
    public final void rule__SimpleTypeRef__Group_1_2__1__Impl() throws RecognitionException {
        int rule__SimpleTypeRef__Group_1_2__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 497) ) { return ; }
            // InternalBeeLangTestLanguage.g:7062:1: ( ( ( rule__SimpleTypeRef__ActualArgumentsListAssignment_1_2_1 ) ) )
            // InternalBeeLangTestLanguage.g:7063:1: ( ( rule__SimpleTypeRef__ActualArgumentsListAssignment_1_2_1 ) )
            {
            // InternalBeeLangTestLanguage.g:7063:1: ( ( rule__SimpleTypeRef__ActualArgumentsListAssignment_1_2_1 ) )
            // InternalBeeLangTestLanguage.g:7064:2: ( rule__SimpleTypeRef__ActualArgumentsListAssignment_1_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSimpleTypeRefAccess().getActualArgumentsListAssignment_1_2_1()); 
            }
            // InternalBeeLangTestLanguage.g:7065:2: ( rule__SimpleTypeRef__ActualArgumentsListAssignment_1_2_1 )
            // InternalBeeLangTestLanguage.g:7065:3: rule__SimpleTypeRef__ActualArgumentsListAssignment_1_2_1
            {
            pushFollow(FOLLOW_2);
            rule__SimpleTypeRef__ActualArgumentsListAssignment_1_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSimpleTypeRefAccess().getActualArgumentsListAssignment_1_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 497, rule__SimpleTypeRef__Group_1_2__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleTypeRef__Group_1_2__1__Impl"


    // $ANTLR start "rule__ClosureTypeRef__Group__0"
    // InternalBeeLangTestLanguage.g:7074:1: rule__ClosureTypeRef__Group__0 : rule__ClosureTypeRef__Group__0__Impl rule__ClosureTypeRef__Group__1 ;
    public final void rule__ClosureTypeRef__Group__0() throws RecognitionException {
        int rule__ClosureTypeRef__Group__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 498) ) { return ; }
            // InternalBeeLangTestLanguage.g:7078:1: ( rule__ClosureTypeRef__Group__0__Impl rule__ClosureTypeRef__Group__1 )
            // InternalBeeLangTestLanguage.g:7079:2: rule__ClosureTypeRef__Group__0__Impl rule__ClosureTypeRef__Group__1
            {
            pushFollow(FOLLOW_39);
            rule__ClosureTypeRef__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ClosureTypeRef__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 498, rule__ClosureTypeRef__Group__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureTypeRef__Group__0"


    // $ANTLR start "rule__ClosureTypeRef__Group__0__Impl"
    // InternalBeeLangTestLanguage.g:7086:1: rule__ClosureTypeRef__Group__0__Impl : ( '(' ) ;
    public final void rule__ClosureTypeRef__Group__0__Impl() throws RecognitionException {
        int rule__ClosureTypeRef__Group__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 499) ) { return ; }
            // InternalBeeLangTestLanguage.g:7090:1: ( ( '(' ) )
            // InternalBeeLangTestLanguage.g:7091:1: ( '(' )
            {
            // InternalBeeLangTestLanguage.g:7091:1: ( '(' )
            // InternalBeeLangTestLanguage.g:7092:2: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureTypeRefAccess().getLeftParenthesisKeyword_0()); 
            }
            match(input,60,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureTypeRefAccess().getLeftParenthesisKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 499, rule__ClosureTypeRef__Group__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureTypeRef__Group__0__Impl"


    // $ANTLR start "rule__ClosureTypeRef__Group__1"
    // InternalBeeLangTestLanguage.g:7101:1: rule__ClosureTypeRef__Group__1 : rule__ClosureTypeRef__Group__1__Impl rule__ClosureTypeRef__Group__2 ;
    public final void rule__ClosureTypeRef__Group__1() throws RecognitionException {
        int rule__ClosureTypeRef__Group__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 500) ) { return ; }
            // InternalBeeLangTestLanguage.g:7105:1: ( rule__ClosureTypeRef__Group__1__Impl rule__ClosureTypeRef__Group__2 )
            // InternalBeeLangTestLanguage.g:7106:2: rule__ClosureTypeRef__Group__1__Impl rule__ClosureTypeRef__Group__2
            {
            pushFollow(FOLLOW_39);
            rule__ClosureTypeRef__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ClosureTypeRef__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 500, rule__ClosureTypeRef__Group__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureTypeRef__Group__1"


    // $ANTLR start "rule__ClosureTypeRef__Group__1__Impl"
    // InternalBeeLangTestLanguage.g:7113:1: rule__ClosureTypeRef__Group__1__Impl : ( ( rule__ClosureTypeRef__Alternatives_1 )? ) ;
    public final void rule__ClosureTypeRef__Group__1__Impl() throws RecognitionException {
        int rule__ClosureTypeRef__Group__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 501) ) { return ; }
            // InternalBeeLangTestLanguage.g:7117:1: ( ( ( rule__ClosureTypeRef__Alternatives_1 )? ) )
            // InternalBeeLangTestLanguage.g:7118:1: ( ( rule__ClosureTypeRef__Alternatives_1 )? )
            {
            // InternalBeeLangTestLanguage.g:7118:1: ( ( rule__ClosureTypeRef__Alternatives_1 )? )
            // InternalBeeLangTestLanguage.g:7119:2: ( rule__ClosureTypeRef__Alternatives_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureTypeRefAccess().getAlternatives_1()); 
            }
            // InternalBeeLangTestLanguage.g:7120:2: ( rule__ClosureTypeRef__Alternatives_1 )?
            int alt62=2;
            int LA62_0 = input.LA(1);

            if ( (LA62_0==RULE_ID||LA62_0==75) ) {
                alt62=1;
            }
            switch (alt62) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:7120:3: rule__ClosureTypeRef__Alternatives_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__ClosureTypeRef__Alternatives_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureTypeRefAccess().getAlternatives_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 501, rule__ClosureTypeRef__Group__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureTypeRef__Group__1__Impl"


    // $ANTLR start "rule__ClosureTypeRef__Group__2"
    // InternalBeeLangTestLanguage.g:7128:1: rule__ClosureTypeRef__Group__2 : rule__ClosureTypeRef__Group__2__Impl rule__ClosureTypeRef__Group__3 ;
    public final void rule__ClosureTypeRef__Group__2() throws RecognitionException {
        int rule__ClosureTypeRef__Group__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 502) ) { return ; }
            // InternalBeeLangTestLanguage.g:7132:1: ( rule__ClosureTypeRef__Group__2__Impl rule__ClosureTypeRef__Group__3 )
            // InternalBeeLangTestLanguage.g:7133:2: rule__ClosureTypeRef__Group__2__Impl rule__ClosureTypeRef__Group__3
            {
            pushFollow(FOLLOW_40);
            rule__ClosureTypeRef__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ClosureTypeRef__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 502, rule__ClosureTypeRef__Group__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureTypeRef__Group__2"


    // $ANTLR start "rule__ClosureTypeRef__Group__2__Impl"
    // InternalBeeLangTestLanguage.g:7140:1: rule__ClosureTypeRef__Group__2__Impl : ( ')' ) ;
    public final void rule__ClosureTypeRef__Group__2__Impl() throws RecognitionException {
        int rule__ClosureTypeRef__Group__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 503) ) { return ; }
            // InternalBeeLangTestLanguage.g:7144:1: ( ( ')' ) )
            // InternalBeeLangTestLanguage.g:7145:1: ( ')' )
            {
            // InternalBeeLangTestLanguage.g:7145:1: ( ')' )
            // InternalBeeLangTestLanguage.g:7146:2: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureTypeRefAccess().getRightParenthesisKeyword_2()); 
            }
            match(input,61,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureTypeRefAccess().getRightParenthesisKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 503, rule__ClosureTypeRef__Group__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureTypeRef__Group__2__Impl"


    // $ANTLR start "rule__ClosureTypeRef__Group__3"
    // InternalBeeLangTestLanguage.g:7155:1: rule__ClosureTypeRef__Group__3 : rule__ClosureTypeRef__Group__3__Impl rule__ClosureTypeRef__Group__4 ;
    public final void rule__ClosureTypeRef__Group__3() throws RecognitionException {
        int rule__ClosureTypeRef__Group__3_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 504) ) { return ; }
            // InternalBeeLangTestLanguage.g:7159:1: ( rule__ClosureTypeRef__Group__3__Impl rule__ClosureTypeRef__Group__4 )
            // InternalBeeLangTestLanguage.g:7160:2: rule__ClosureTypeRef__Group__3__Impl rule__ClosureTypeRef__Group__4
            {
            pushFollow(FOLLOW_9);
            rule__ClosureTypeRef__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ClosureTypeRef__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 504, rule__ClosureTypeRef__Group__3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureTypeRef__Group__3"


    // $ANTLR start "rule__ClosureTypeRef__Group__3__Impl"
    // InternalBeeLangTestLanguage.g:7167:1: rule__ClosureTypeRef__Group__3__Impl : ( '=>' ) ;
    public final void rule__ClosureTypeRef__Group__3__Impl() throws RecognitionException {
        int rule__ClosureTypeRef__Group__3__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 505) ) { return ; }
            // InternalBeeLangTestLanguage.g:7171:1: ( ( '=>' ) )
            // InternalBeeLangTestLanguage.g:7172:1: ( '=>' )
            {
            // InternalBeeLangTestLanguage.g:7172:1: ( '=>' )
            // InternalBeeLangTestLanguage.g:7173:2: '=>'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureTypeRefAccess().getEqualsSignGreaterThanSignKeyword_3()); 
            }
            match(input,62,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureTypeRefAccess().getEqualsSignGreaterThanSignKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 505, rule__ClosureTypeRef__Group__3__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureTypeRef__Group__3__Impl"


    // $ANTLR start "rule__ClosureTypeRef__Group__4"
    // InternalBeeLangTestLanguage.g:7182:1: rule__ClosureTypeRef__Group__4 : rule__ClosureTypeRef__Group__4__Impl ;
    public final void rule__ClosureTypeRef__Group__4() throws RecognitionException {
        int rule__ClosureTypeRef__Group__4_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 506) ) { return ; }
            // InternalBeeLangTestLanguage.g:7186:1: ( rule__ClosureTypeRef__Group__4__Impl )
            // InternalBeeLangTestLanguage.g:7187:2: rule__ClosureTypeRef__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ClosureTypeRef__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 506, rule__ClosureTypeRef__Group__4_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureTypeRef__Group__4"


    // $ANTLR start "rule__ClosureTypeRef__Group__4__Impl"
    // InternalBeeLangTestLanguage.g:7193:1: rule__ClosureTypeRef__Group__4__Impl : ( ( rule__ClosureTypeRef__ReturnTypeAssignment_4 ) ) ;
    public final void rule__ClosureTypeRef__Group__4__Impl() throws RecognitionException {
        int rule__ClosureTypeRef__Group__4__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 507) ) { return ; }
            // InternalBeeLangTestLanguage.g:7197:1: ( ( ( rule__ClosureTypeRef__ReturnTypeAssignment_4 ) ) )
            // InternalBeeLangTestLanguage.g:7198:1: ( ( rule__ClosureTypeRef__ReturnTypeAssignment_4 ) )
            {
            // InternalBeeLangTestLanguage.g:7198:1: ( ( rule__ClosureTypeRef__ReturnTypeAssignment_4 ) )
            // InternalBeeLangTestLanguage.g:7199:2: ( rule__ClosureTypeRef__ReturnTypeAssignment_4 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureTypeRefAccess().getReturnTypeAssignment_4()); 
            }
            // InternalBeeLangTestLanguage.g:7200:2: ( rule__ClosureTypeRef__ReturnTypeAssignment_4 )
            // InternalBeeLangTestLanguage.g:7200:3: rule__ClosureTypeRef__ReturnTypeAssignment_4
            {
            pushFollow(FOLLOW_2);
            rule__ClosureTypeRef__ReturnTypeAssignment_4();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureTypeRefAccess().getReturnTypeAssignment_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 507, rule__ClosureTypeRef__Group__4__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureTypeRef__Group__4__Impl"


    // $ANTLR start "rule__ClosureTypeRef__Group_1_0__0"
    // InternalBeeLangTestLanguage.g:7209:1: rule__ClosureTypeRef__Group_1_0__0 : rule__ClosureTypeRef__Group_1_0__0__Impl rule__ClosureTypeRef__Group_1_0__1 ;
    public final void rule__ClosureTypeRef__Group_1_0__0() throws RecognitionException {
        int rule__ClosureTypeRef__Group_1_0__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 508) ) { return ; }
            // InternalBeeLangTestLanguage.g:7213:1: ( rule__ClosureTypeRef__Group_1_0__0__Impl rule__ClosureTypeRef__Group_1_0__1 )
            // InternalBeeLangTestLanguage.g:7214:2: rule__ClosureTypeRef__Group_1_0__0__Impl rule__ClosureTypeRef__Group_1_0__1
            {
            pushFollow(FOLLOW_10);
            rule__ClosureTypeRef__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ClosureTypeRef__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 508, rule__ClosureTypeRef__Group_1_0__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureTypeRef__Group_1_0__0"


    // $ANTLR start "rule__ClosureTypeRef__Group_1_0__0__Impl"
    // InternalBeeLangTestLanguage.g:7221:1: rule__ClosureTypeRef__Group_1_0__0__Impl : ( ( rule__ClosureTypeRef__ParameterTypesAssignment_1_0_0 ) ) ;
    public final void rule__ClosureTypeRef__Group_1_0__0__Impl() throws RecognitionException {
        int rule__ClosureTypeRef__Group_1_0__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 509) ) { return ; }
            // InternalBeeLangTestLanguage.g:7225:1: ( ( ( rule__ClosureTypeRef__ParameterTypesAssignment_1_0_0 ) ) )
            // InternalBeeLangTestLanguage.g:7226:1: ( ( rule__ClosureTypeRef__ParameterTypesAssignment_1_0_0 ) )
            {
            // InternalBeeLangTestLanguage.g:7226:1: ( ( rule__ClosureTypeRef__ParameterTypesAssignment_1_0_0 ) )
            // InternalBeeLangTestLanguage.g:7227:2: ( rule__ClosureTypeRef__ParameterTypesAssignment_1_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureTypeRefAccess().getParameterTypesAssignment_1_0_0()); 
            }
            // InternalBeeLangTestLanguage.g:7228:2: ( rule__ClosureTypeRef__ParameterTypesAssignment_1_0_0 )
            // InternalBeeLangTestLanguage.g:7228:3: rule__ClosureTypeRef__ParameterTypesAssignment_1_0_0
            {
            pushFollow(FOLLOW_2);
            rule__ClosureTypeRef__ParameterTypesAssignment_1_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureTypeRefAccess().getParameterTypesAssignment_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 509, rule__ClosureTypeRef__Group_1_0__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureTypeRef__Group_1_0__0__Impl"


    // $ANTLR start "rule__ClosureTypeRef__Group_1_0__1"
    // InternalBeeLangTestLanguage.g:7236:1: rule__ClosureTypeRef__Group_1_0__1 : rule__ClosureTypeRef__Group_1_0__1__Impl rule__ClosureTypeRef__Group_1_0__2 ;
    public final void rule__ClosureTypeRef__Group_1_0__1() throws RecognitionException {
        int rule__ClosureTypeRef__Group_1_0__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 510) ) { return ; }
            // InternalBeeLangTestLanguage.g:7240:1: ( rule__ClosureTypeRef__Group_1_0__1__Impl rule__ClosureTypeRef__Group_1_0__2 )
            // InternalBeeLangTestLanguage.g:7241:2: rule__ClosureTypeRef__Group_1_0__1__Impl rule__ClosureTypeRef__Group_1_0__2
            {
            pushFollow(FOLLOW_10);
            rule__ClosureTypeRef__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ClosureTypeRef__Group_1_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 510, rule__ClosureTypeRef__Group_1_0__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureTypeRef__Group_1_0__1"


    // $ANTLR start "rule__ClosureTypeRef__Group_1_0__1__Impl"
    // InternalBeeLangTestLanguage.g:7248:1: rule__ClosureTypeRef__Group_1_0__1__Impl : ( ( rule__ClosureTypeRef__Group_1_0_1__0 )* ) ;
    public final void rule__ClosureTypeRef__Group_1_0__1__Impl() throws RecognitionException {
        int rule__ClosureTypeRef__Group_1_0__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 511) ) { return ; }
            // InternalBeeLangTestLanguage.g:7252:1: ( ( ( rule__ClosureTypeRef__Group_1_0_1__0 )* ) )
            // InternalBeeLangTestLanguage.g:7253:1: ( ( rule__ClosureTypeRef__Group_1_0_1__0 )* )
            {
            // InternalBeeLangTestLanguage.g:7253:1: ( ( rule__ClosureTypeRef__Group_1_0_1__0 )* )
            // InternalBeeLangTestLanguage.g:7254:2: ( rule__ClosureTypeRef__Group_1_0_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureTypeRefAccess().getGroup_1_0_1()); 
            }
            // InternalBeeLangTestLanguage.g:7255:2: ( rule__ClosureTypeRef__Group_1_0_1__0 )*
            loop63:
            do {
                int alt63=2;
                int LA63_0 = input.LA(1);

                if ( (LA63_0==48) ) {
                    int LA63_1 = input.LA(2);

                    if ( (LA63_1==RULE_ID) ) {
                        alt63=1;
                    }


                }


                switch (alt63) {
            	case 1 :
            	    // InternalBeeLangTestLanguage.g:7255:3: rule__ClosureTypeRef__Group_1_0_1__0
            	    {
            	    pushFollow(FOLLOW_11);
            	    rule__ClosureTypeRef__Group_1_0_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop63;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureTypeRefAccess().getGroup_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 511, rule__ClosureTypeRef__Group_1_0__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureTypeRef__Group_1_0__1__Impl"


    // $ANTLR start "rule__ClosureTypeRef__Group_1_0__2"
    // InternalBeeLangTestLanguage.g:7263:1: rule__ClosureTypeRef__Group_1_0__2 : rule__ClosureTypeRef__Group_1_0__2__Impl ;
    public final void rule__ClosureTypeRef__Group_1_0__2() throws RecognitionException {
        int rule__ClosureTypeRef__Group_1_0__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 512) ) { return ; }
            // InternalBeeLangTestLanguage.g:7267:1: ( rule__ClosureTypeRef__Group_1_0__2__Impl )
            // InternalBeeLangTestLanguage.g:7268:2: rule__ClosureTypeRef__Group_1_0__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ClosureTypeRef__Group_1_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 512, rule__ClosureTypeRef__Group_1_0__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureTypeRef__Group_1_0__2"


    // $ANTLR start "rule__ClosureTypeRef__Group_1_0__2__Impl"
    // InternalBeeLangTestLanguage.g:7274:1: rule__ClosureTypeRef__Group_1_0__2__Impl : ( ( rule__ClosureTypeRef__Group_1_0_2__0 )? ) ;
    public final void rule__ClosureTypeRef__Group_1_0__2__Impl() throws RecognitionException {
        int rule__ClosureTypeRef__Group_1_0__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 513) ) { return ; }
            // InternalBeeLangTestLanguage.g:7278:1: ( ( ( rule__ClosureTypeRef__Group_1_0_2__0 )? ) )
            // InternalBeeLangTestLanguage.g:7279:1: ( ( rule__ClosureTypeRef__Group_1_0_2__0 )? )
            {
            // InternalBeeLangTestLanguage.g:7279:1: ( ( rule__ClosureTypeRef__Group_1_0_2__0 )? )
            // InternalBeeLangTestLanguage.g:7280:2: ( rule__ClosureTypeRef__Group_1_0_2__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureTypeRefAccess().getGroup_1_0_2()); 
            }
            // InternalBeeLangTestLanguage.g:7281:2: ( rule__ClosureTypeRef__Group_1_0_2__0 )?
            int alt64=2;
            int LA64_0 = input.LA(1);

            if ( (LA64_0==48) ) {
                alt64=1;
            }
            switch (alt64) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:7281:3: rule__ClosureTypeRef__Group_1_0_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ClosureTypeRef__Group_1_0_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureTypeRefAccess().getGroup_1_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 513, rule__ClosureTypeRef__Group_1_0__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureTypeRef__Group_1_0__2__Impl"


    // $ANTLR start "rule__ClosureTypeRef__Group_1_0_1__0"
    // InternalBeeLangTestLanguage.g:7290:1: rule__ClosureTypeRef__Group_1_0_1__0 : rule__ClosureTypeRef__Group_1_0_1__0__Impl rule__ClosureTypeRef__Group_1_0_1__1 ;
    public final void rule__ClosureTypeRef__Group_1_0_1__0() throws RecognitionException {
        int rule__ClosureTypeRef__Group_1_0_1__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 514) ) { return ; }
            // InternalBeeLangTestLanguage.g:7294:1: ( rule__ClosureTypeRef__Group_1_0_1__0__Impl rule__ClosureTypeRef__Group_1_0_1__1 )
            // InternalBeeLangTestLanguage.g:7295:2: rule__ClosureTypeRef__Group_1_0_1__0__Impl rule__ClosureTypeRef__Group_1_0_1__1
            {
            pushFollow(FOLLOW_9);
            rule__ClosureTypeRef__Group_1_0_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ClosureTypeRef__Group_1_0_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 514, rule__ClosureTypeRef__Group_1_0_1__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureTypeRef__Group_1_0_1__0"


    // $ANTLR start "rule__ClosureTypeRef__Group_1_0_1__0__Impl"
    // InternalBeeLangTestLanguage.g:7302:1: rule__ClosureTypeRef__Group_1_0_1__0__Impl : ( ',' ) ;
    public final void rule__ClosureTypeRef__Group_1_0_1__0__Impl() throws RecognitionException {
        int rule__ClosureTypeRef__Group_1_0_1__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 515) ) { return ; }
            // InternalBeeLangTestLanguage.g:7306:1: ( ( ',' ) )
            // InternalBeeLangTestLanguage.g:7307:1: ( ',' )
            {
            // InternalBeeLangTestLanguage.g:7307:1: ( ',' )
            // InternalBeeLangTestLanguage.g:7308:2: ','
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureTypeRefAccess().getCommaKeyword_1_0_1_0()); 
            }
            match(input,48,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureTypeRefAccess().getCommaKeyword_1_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 515, rule__ClosureTypeRef__Group_1_0_1__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureTypeRef__Group_1_0_1__0__Impl"


    // $ANTLR start "rule__ClosureTypeRef__Group_1_0_1__1"
    // InternalBeeLangTestLanguage.g:7317:1: rule__ClosureTypeRef__Group_1_0_1__1 : rule__ClosureTypeRef__Group_1_0_1__1__Impl ;
    public final void rule__ClosureTypeRef__Group_1_0_1__1() throws RecognitionException {
        int rule__ClosureTypeRef__Group_1_0_1__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 516) ) { return ; }
            // InternalBeeLangTestLanguage.g:7321:1: ( rule__ClosureTypeRef__Group_1_0_1__1__Impl )
            // InternalBeeLangTestLanguage.g:7322:2: rule__ClosureTypeRef__Group_1_0_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ClosureTypeRef__Group_1_0_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 516, rule__ClosureTypeRef__Group_1_0_1__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureTypeRef__Group_1_0_1__1"


    // $ANTLR start "rule__ClosureTypeRef__Group_1_0_1__1__Impl"
    // InternalBeeLangTestLanguage.g:7328:1: rule__ClosureTypeRef__Group_1_0_1__1__Impl : ( ( rule__ClosureTypeRef__ParameterTypesAssignment_1_0_1_1 ) ) ;
    public final void rule__ClosureTypeRef__Group_1_0_1__1__Impl() throws RecognitionException {
        int rule__ClosureTypeRef__Group_1_0_1__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 517) ) { return ; }
            // InternalBeeLangTestLanguage.g:7332:1: ( ( ( rule__ClosureTypeRef__ParameterTypesAssignment_1_0_1_1 ) ) )
            // InternalBeeLangTestLanguage.g:7333:1: ( ( rule__ClosureTypeRef__ParameterTypesAssignment_1_0_1_1 ) )
            {
            // InternalBeeLangTestLanguage.g:7333:1: ( ( rule__ClosureTypeRef__ParameterTypesAssignment_1_0_1_1 ) )
            // InternalBeeLangTestLanguage.g:7334:2: ( rule__ClosureTypeRef__ParameterTypesAssignment_1_0_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureTypeRefAccess().getParameterTypesAssignment_1_0_1_1()); 
            }
            // InternalBeeLangTestLanguage.g:7335:2: ( rule__ClosureTypeRef__ParameterTypesAssignment_1_0_1_1 )
            // InternalBeeLangTestLanguage.g:7335:3: rule__ClosureTypeRef__ParameterTypesAssignment_1_0_1_1
            {
            pushFollow(FOLLOW_2);
            rule__ClosureTypeRef__ParameterTypesAssignment_1_0_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureTypeRefAccess().getParameterTypesAssignment_1_0_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 517, rule__ClosureTypeRef__Group_1_0_1__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureTypeRef__Group_1_0_1__1__Impl"


    // $ANTLR start "rule__ClosureTypeRef__Group_1_0_2__0"
    // InternalBeeLangTestLanguage.g:7344:1: rule__ClosureTypeRef__Group_1_0_2__0 : rule__ClosureTypeRef__Group_1_0_2__0__Impl rule__ClosureTypeRef__Group_1_0_2__1 ;
    public final void rule__ClosureTypeRef__Group_1_0_2__0() throws RecognitionException {
        int rule__ClosureTypeRef__Group_1_0_2__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 518) ) { return ; }
            // InternalBeeLangTestLanguage.g:7348:1: ( rule__ClosureTypeRef__Group_1_0_2__0__Impl rule__ClosureTypeRef__Group_1_0_2__1 )
            // InternalBeeLangTestLanguage.g:7349:2: rule__ClosureTypeRef__Group_1_0_2__0__Impl rule__ClosureTypeRef__Group_1_0_2__1
            {
            pushFollow(FOLLOW_31);
            rule__ClosureTypeRef__Group_1_0_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ClosureTypeRef__Group_1_0_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 518, rule__ClosureTypeRef__Group_1_0_2__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureTypeRef__Group_1_0_2__0"


    // $ANTLR start "rule__ClosureTypeRef__Group_1_0_2__0__Impl"
    // InternalBeeLangTestLanguage.g:7356:1: rule__ClosureTypeRef__Group_1_0_2__0__Impl : ( ',' ) ;
    public final void rule__ClosureTypeRef__Group_1_0_2__0__Impl() throws RecognitionException {
        int rule__ClosureTypeRef__Group_1_0_2__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 519) ) { return ; }
            // InternalBeeLangTestLanguage.g:7360:1: ( ( ',' ) )
            // InternalBeeLangTestLanguage.g:7361:1: ( ',' )
            {
            // InternalBeeLangTestLanguage.g:7361:1: ( ',' )
            // InternalBeeLangTestLanguage.g:7362:2: ','
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureTypeRefAccess().getCommaKeyword_1_0_2_0()); 
            }
            match(input,48,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureTypeRefAccess().getCommaKeyword_1_0_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 519, rule__ClosureTypeRef__Group_1_0_2__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureTypeRef__Group_1_0_2__0__Impl"


    // $ANTLR start "rule__ClosureTypeRef__Group_1_0_2__1"
    // InternalBeeLangTestLanguage.g:7371:1: rule__ClosureTypeRef__Group_1_0_2__1 : rule__ClosureTypeRef__Group_1_0_2__1__Impl rule__ClosureTypeRef__Group_1_0_2__2 ;
    public final void rule__ClosureTypeRef__Group_1_0_2__1() throws RecognitionException {
        int rule__ClosureTypeRef__Group_1_0_2__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 520) ) { return ; }
            // InternalBeeLangTestLanguage.g:7375:1: ( rule__ClosureTypeRef__Group_1_0_2__1__Impl rule__ClosureTypeRef__Group_1_0_2__2 )
            // InternalBeeLangTestLanguage.g:7376:2: rule__ClosureTypeRef__Group_1_0_2__1__Impl rule__ClosureTypeRef__Group_1_0_2__2
            {
            pushFollow(FOLLOW_9);
            rule__ClosureTypeRef__Group_1_0_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ClosureTypeRef__Group_1_0_2__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 520, rule__ClosureTypeRef__Group_1_0_2__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureTypeRef__Group_1_0_2__1"


    // $ANTLR start "rule__ClosureTypeRef__Group_1_0_2__1__Impl"
    // InternalBeeLangTestLanguage.g:7383:1: rule__ClosureTypeRef__Group_1_0_2__1__Impl : ( ( rule__ClosureTypeRef__VarArgsAssignment_1_0_2_1 ) ) ;
    public final void rule__ClosureTypeRef__Group_1_0_2__1__Impl() throws RecognitionException {
        int rule__ClosureTypeRef__Group_1_0_2__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 521) ) { return ; }
            // InternalBeeLangTestLanguage.g:7387:1: ( ( ( rule__ClosureTypeRef__VarArgsAssignment_1_0_2_1 ) ) )
            // InternalBeeLangTestLanguage.g:7388:1: ( ( rule__ClosureTypeRef__VarArgsAssignment_1_0_2_1 ) )
            {
            // InternalBeeLangTestLanguage.g:7388:1: ( ( rule__ClosureTypeRef__VarArgsAssignment_1_0_2_1 ) )
            // InternalBeeLangTestLanguage.g:7389:2: ( rule__ClosureTypeRef__VarArgsAssignment_1_0_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureTypeRefAccess().getVarArgsAssignment_1_0_2_1()); 
            }
            // InternalBeeLangTestLanguage.g:7390:2: ( rule__ClosureTypeRef__VarArgsAssignment_1_0_2_1 )
            // InternalBeeLangTestLanguage.g:7390:3: rule__ClosureTypeRef__VarArgsAssignment_1_0_2_1
            {
            pushFollow(FOLLOW_2);
            rule__ClosureTypeRef__VarArgsAssignment_1_0_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureTypeRefAccess().getVarArgsAssignment_1_0_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 521, rule__ClosureTypeRef__Group_1_0_2__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureTypeRef__Group_1_0_2__1__Impl"


    // $ANTLR start "rule__ClosureTypeRef__Group_1_0_2__2"
    // InternalBeeLangTestLanguage.g:7398:1: rule__ClosureTypeRef__Group_1_0_2__2 : rule__ClosureTypeRef__Group_1_0_2__2__Impl ;
    public final void rule__ClosureTypeRef__Group_1_0_2__2() throws RecognitionException {
        int rule__ClosureTypeRef__Group_1_0_2__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 522) ) { return ; }
            // InternalBeeLangTestLanguage.g:7402:1: ( rule__ClosureTypeRef__Group_1_0_2__2__Impl )
            // InternalBeeLangTestLanguage.g:7403:2: rule__ClosureTypeRef__Group_1_0_2__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ClosureTypeRef__Group_1_0_2__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 522, rule__ClosureTypeRef__Group_1_0_2__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureTypeRef__Group_1_0_2__2"


    // $ANTLR start "rule__ClosureTypeRef__Group_1_0_2__2__Impl"
    // InternalBeeLangTestLanguage.g:7409:1: rule__ClosureTypeRef__Group_1_0_2__2__Impl : ( ( rule__ClosureTypeRef__ParameterTypesAssignment_1_0_2_2 ) ) ;
    public final void rule__ClosureTypeRef__Group_1_0_2__2__Impl() throws RecognitionException {
        int rule__ClosureTypeRef__Group_1_0_2__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 523) ) { return ; }
            // InternalBeeLangTestLanguage.g:7413:1: ( ( ( rule__ClosureTypeRef__ParameterTypesAssignment_1_0_2_2 ) ) )
            // InternalBeeLangTestLanguage.g:7414:1: ( ( rule__ClosureTypeRef__ParameterTypesAssignment_1_0_2_2 ) )
            {
            // InternalBeeLangTestLanguage.g:7414:1: ( ( rule__ClosureTypeRef__ParameterTypesAssignment_1_0_2_2 ) )
            // InternalBeeLangTestLanguage.g:7415:2: ( rule__ClosureTypeRef__ParameterTypesAssignment_1_0_2_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureTypeRefAccess().getParameterTypesAssignment_1_0_2_2()); 
            }
            // InternalBeeLangTestLanguage.g:7416:2: ( rule__ClosureTypeRef__ParameterTypesAssignment_1_0_2_2 )
            // InternalBeeLangTestLanguage.g:7416:3: rule__ClosureTypeRef__ParameterTypesAssignment_1_0_2_2
            {
            pushFollow(FOLLOW_2);
            rule__ClosureTypeRef__ParameterTypesAssignment_1_0_2_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureTypeRefAccess().getParameterTypesAssignment_1_0_2_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 523, rule__ClosureTypeRef__Group_1_0_2__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureTypeRef__Group_1_0_2__2__Impl"


    // $ANTLR start "rule__ClosureTypeRef__Group_1_1__0"
    // InternalBeeLangTestLanguage.g:7425:1: rule__ClosureTypeRef__Group_1_1__0 : rule__ClosureTypeRef__Group_1_1__0__Impl rule__ClosureTypeRef__Group_1_1__1 ;
    public final void rule__ClosureTypeRef__Group_1_1__0() throws RecognitionException {
        int rule__ClosureTypeRef__Group_1_1__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 524) ) { return ; }
            // InternalBeeLangTestLanguage.g:7429:1: ( rule__ClosureTypeRef__Group_1_1__0__Impl rule__ClosureTypeRef__Group_1_1__1 )
            // InternalBeeLangTestLanguage.g:7430:2: rule__ClosureTypeRef__Group_1_1__0__Impl rule__ClosureTypeRef__Group_1_1__1
            {
            pushFollow(FOLLOW_9);
            rule__ClosureTypeRef__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ClosureTypeRef__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 524, rule__ClosureTypeRef__Group_1_1__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureTypeRef__Group_1_1__0"


    // $ANTLR start "rule__ClosureTypeRef__Group_1_1__0__Impl"
    // InternalBeeLangTestLanguage.g:7437:1: rule__ClosureTypeRef__Group_1_1__0__Impl : ( ( rule__ClosureTypeRef__VarArgsAssignment_1_1_0 ) ) ;
    public final void rule__ClosureTypeRef__Group_1_1__0__Impl() throws RecognitionException {
        int rule__ClosureTypeRef__Group_1_1__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 525) ) { return ; }
            // InternalBeeLangTestLanguage.g:7441:1: ( ( ( rule__ClosureTypeRef__VarArgsAssignment_1_1_0 ) ) )
            // InternalBeeLangTestLanguage.g:7442:1: ( ( rule__ClosureTypeRef__VarArgsAssignment_1_1_0 ) )
            {
            // InternalBeeLangTestLanguage.g:7442:1: ( ( rule__ClosureTypeRef__VarArgsAssignment_1_1_0 ) )
            // InternalBeeLangTestLanguage.g:7443:2: ( rule__ClosureTypeRef__VarArgsAssignment_1_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureTypeRefAccess().getVarArgsAssignment_1_1_0()); 
            }
            // InternalBeeLangTestLanguage.g:7444:2: ( rule__ClosureTypeRef__VarArgsAssignment_1_1_0 )
            // InternalBeeLangTestLanguage.g:7444:3: rule__ClosureTypeRef__VarArgsAssignment_1_1_0
            {
            pushFollow(FOLLOW_2);
            rule__ClosureTypeRef__VarArgsAssignment_1_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureTypeRefAccess().getVarArgsAssignment_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 525, rule__ClosureTypeRef__Group_1_1__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureTypeRef__Group_1_1__0__Impl"


    // $ANTLR start "rule__ClosureTypeRef__Group_1_1__1"
    // InternalBeeLangTestLanguage.g:7452:1: rule__ClosureTypeRef__Group_1_1__1 : rule__ClosureTypeRef__Group_1_1__1__Impl ;
    public final void rule__ClosureTypeRef__Group_1_1__1() throws RecognitionException {
        int rule__ClosureTypeRef__Group_1_1__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 526) ) { return ; }
            // InternalBeeLangTestLanguage.g:7456:1: ( rule__ClosureTypeRef__Group_1_1__1__Impl )
            // InternalBeeLangTestLanguage.g:7457:2: rule__ClosureTypeRef__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ClosureTypeRef__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 526, rule__ClosureTypeRef__Group_1_1__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureTypeRef__Group_1_1__1"


    // $ANTLR start "rule__ClosureTypeRef__Group_1_1__1__Impl"
    // InternalBeeLangTestLanguage.g:7463:1: rule__ClosureTypeRef__Group_1_1__1__Impl : ( ( rule__ClosureTypeRef__ParameterTypesAssignment_1_1_1 ) ) ;
    public final void rule__ClosureTypeRef__Group_1_1__1__Impl() throws RecognitionException {
        int rule__ClosureTypeRef__Group_1_1__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 527) ) { return ; }
            // InternalBeeLangTestLanguage.g:7467:1: ( ( ( rule__ClosureTypeRef__ParameterTypesAssignment_1_1_1 ) ) )
            // InternalBeeLangTestLanguage.g:7468:1: ( ( rule__ClosureTypeRef__ParameterTypesAssignment_1_1_1 ) )
            {
            // InternalBeeLangTestLanguage.g:7468:1: ( ( rule__ClosureTypeRef__ParameterTypesAssignment_1_1_1 ) )
            // InternalBeeLangTestLanguage.g:7469:2: ( rule__ClosureTypeRef__ParameterTypesAssignment_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureTypeRefAccess().getParameterTypesAssignment_1_1_1()); 
            }
            // InternalBeeLangTestLanguage.g:7470:2: ( rule__ClosureTypeRef__ParameterTypesAssignment_1_1_1 )
            // InternalBeeLangTestLanguage.g:7470:3: rule__ClosureTypeRef__ParameterTypesAssignment_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__ClosureTypeRef__ParameterTypesAssignment_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureTypeRefAccess().getParameterTypesAssignment_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 527, rule__ClosureTypeRef__Group_1_1__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureTypeRef__Group_1_1__1__Impl"


    // $ANTLR start "rule__CachedExpression__Group_0__0"
    // InternalBeeLangTestLanguage.g:7479:1: rule__CachedExpression__Group_0__0 : rule__CachedExpression__Group_0__0__Impl rule__CachedExpression__Group_0__1 ;
    public final void rule__CachedExpression__Group_0__0() throws RecognitionException {
        int rule__CachedExpression__Group_0__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 528) ) { return ; }
            // InternalBeeLangTestLanguage.g:7483:1: ( rule__CachedExpression__Group_0__0__Impl rule__CachedExpression__Group_0__1 )
            // InternalBeeLangTestLanguage.g:7484:2: rule__CachedExpression__Group_0__0__Impl rule__CachedExpression__Group_0__1
            {
            pushFollow(FOLLOW_41);
            rule__CachedExpression__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__CachedExpression__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 528, rule__CachedExpression__Group_0__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CachedExpression__Group_0__0"


    // $ANTLR start "rule__CachedExpression__Group_0__0__Impl"
    // InternalBeeLangTestLanguage.g:7491:1: rule__CachedExpression__Group_0__0__Impl : ( () ) ;
    public final void rule__CachedExpression__Group_0__0__Impl() throws RecognitionException {
        int rule__CachedExpression__Group_0__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 529) ) { return ; }
            // InternalBeeLangTestLanguage.g:7495:1: ( ( () ) )
            // InternalBeeLangTestLanguage.g:7496:1: ( () )
            {
            // InternalBeeLangTestLanguage.g:7496:1: ( () )
            // InternalBeeLangTestLanguage.g:7497:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCachedExpressionAccess().getCachedExpressionAction_0_0()); 
            }
            // InternalBeeLangTestLanguage.g:7498:2: ()
            // InternalBeeLangTestLanguage.g:7498:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCachedExpressionAccess().getCachedExpressionAction_0_0()); 
            }

            }


            }

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 529, rule__CachedExpression__Group_0__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CachedExpression__Group_0__0__Impl"


    // $ANTLR start "rule__CachedExpression__Group_0__1"
    // InternalBeeLangTestLanguage.g:7506:1: rule__CachedExpression__Group_0__1 : rule__CachedExpression__Group_0__1__Impl rule__CachedExpression__Group_0__2 ;
    public final void rule__CachedExpression__Group_0__1() throws RecognitionException {
        int rule__CachedExpression__Group_0__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 530) ) { return ; }
            // InternalBeeLangTestLanguage.g:7510:1: ( rule__CachedExpression__Group_0__1__Impl rule__CachedExpression__Group_0__2 )
            // InternalBeeLangTestLanguage.g:7511:2: rule__CachedExpression__Group_0__1__Impl rule__CachedExpression__Group_0__2
            {
            pushFollow(FOLLOW_19);
            rule__CachedExpression__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__CachedExpression__Group_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 530, rule__CachedExpression__Group_0__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CachedExpression__Group_0__1"


    // $ANTLR start "rule__CachedExpression__Group_0__1__Impl"
    // InternalBeeLangTestLanguage.g:7518:1: rule__CachedExpression__Group_0__1__Impl : ( 'cached' ) ;
    public final void rule__CachedExpression__Group_0__1__Impl() throws RecognitionException {
        int rule__CachedExpression__Group_0__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 531) ) { return ; }
            // InternalBeeLangTestLanguage.g:7522:1: ( ( 'cached' ) )
            // InternalBeeLangTestLanguage.g:7523:1: ( 'cached' )
            {
            // InternalBeeLangTestLanguage.g:7523:1: ( 'cached' )
            // InternalBeeLangTestLanguage.g:7524:2: 'cached'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCachedExpressionAccess().getCachedKeyword_0_1()); 
            }
            match(input,63,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCachedExpressionAccess().getCachedKeyword_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 531, rule__CachedExpression__Group_0__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CachedExpression__Group_0__1__Impl"


    // $ANTLR start "rule__CachedExpression__Group_0__2"
    // InternalBeeLangTestLanguage.g:7533:1: rule__CachedExpression__Group_0__2 : rule__CachedExpression__Group_0__2__Impl ;
    public final void rule__CachedExpression__Group_0__2() throws RecognitionException {
        int rule__CachedExpression__Group_0__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 532) ) { return ; }
            // InternalBeeLangTestLanguage.g:7537:1: ( rule__CachedExpression__Group_0__2__Impl )
            // InternalBeeLangTestLanguage.g:7538:2: rule__CachedExpression__Group_0__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__CachedExpression__Group_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 532, rule__CachedExpression__Group_0__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CachedExpression__Group_0__2"


    // $ANTLR start "rule__CachedExpression__Group_0__2__Impl"
    // InternalBeeLangTestLanguage.g:7544:1: rule__CachedExpression__Group_0__2__Impl : ( ( rule__CachedExpression__ExprAssignment_0_2 ) ) ;
    public final void rule__CachedExpression__Group_0__2__Impl() throws RecognitionException {
        int rule__CachedExpression__Group_0__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 533) ) { return ; }
            // InternalBeeLangTestLanguage.g:7548:1: ( ( ( rule__CachedExpression__ExprAssignment_0_2 ) ) )
            // InternalBeeLangTestLanguage.g:7549:1: ( ( rule__CachedExpression__ExprAssignment_0_2 ) )
            {
            // InternalBeeLangTestLanguage.g:7549:1: ( ( rule__CachedExpression__ExprAssignment_0_2 ) )
            // InternalBeeLangTestLanguage.g:7550:2: ( rule__CachedExpression__ExprAssignment_0_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCachedExpressionAccess().getExprAssignment_0_2()); 
            }
            // InternalBeeLangTestLanguage.g:7551:2: ( rule__CachedExpression__ExprAssignment_0_2 )
            // InternalBeeLangTestLanguage.g:7551:3: rule__CachedExpression__ExprAssignment_0_2
            {
            pushFollow(FOLLOW_2);
            rule__CachedExpression__ExprAssignment_0_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCachedExpressionAccess().getExprAssignment_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 533, rule__CachedExpression__Group_0__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CachedExpression__Group_0__2__Impl"


    // $ANTLR start "rule__OrExpression__Group__0"
    // InternalBeeLangTestLanguage.g:7560:1: rule__OrExpression__Group__0 : rule__OrExpression__Group__0__Impl rule__OrExpression__Group__1 ;
    public final void rule__OrExpression__Group__0() throws RecognitionException {
        int rule__OrExpression__Group__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 534) ) { return ; }
            // InternalBeeLangTestLanguage.g:7564:1: ( rule__OrExpression__Group__0__Impl rule__OrExpression__Group__1 )
            // InternalBeeLangTestLanguage.g:7565:2: rule__OrExpression__Group__0__Impl rule__OrExpression__Group__1
            {
            pushFollow(FOLLOW_42);
            rule__OrExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OrExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 534, rule__OrExpression__Group__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrExpression__Group__0"


    // $ANTLR start "rule__OrExpression__Group__0__Impl"
    // InternalBeeLangTestLanguage.g:7572:1: rule__OrExpression__Group__0__Impl : ( ruleAndExpression ) ;
    public final void rule__OrExpression__Group__0__Impl() throws RecognitionException {
        int rule__OrExpression__Group__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 535) ) { return ; }
            // InternalBeeLangTestLanguage.g:7576:1: ( ( ruleAndExpression ) )
            // InternalBeeLangTestLanguage.g:7577:1: ( ruleAndExpression )
            {
            // InternalBeeLangTestLanguage.g:7577:1: ( ruleAndExpression )
            // InternalBeeLangTestLanguage.g:7578:2: ruleAndExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrExpressionAccess().getAndExpressionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAndExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrExpressionAccess().getAndExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 535, rule__OrExpression__Group__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrExpression__Group__0__Impl"


    // $ANTLR start "rule__OrExpression__Group__1"
    // InternalBeeLangTestLanguage.g:7587:1: rule__OrExpression__Group__1 : rule__OrExpression__Group__1__Impl ;
    public final void rule__OrExpression__Group__1() throws RecognitionException {
        int rule__OrExpression__Group__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 536) ) { return ; }
            // InternalBeeLangTestLanguage.g:7591:1: ( rule__OrExpression__Group__1__Impl )
            // InternalBeeLangTestLanguage.g:7592:2: rule__OrExpression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OrExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 536, rule__OrExpression__Group__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrExpression__Group__1"


    // $ANTLR start "rule__OrExpression__Group__1__Impl"
    // InternalBeeLangTestLanguage.g:7598:1: rule__OrExpression__Group__1__Impl : ( ( rule__OrExpression__Group_1__0 )* ) ;
    public final void rule__OrExpression__Group__1__Impl() throws RecognitionException {
        int rule__OrExpression__Group__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 537) ) { return ; }
            // InternalBeeLangTestLanguage.g:7602:1: ( ( ( rule__OrExpression__Group_1__0 )* ) )
            // InternalBeeLangTestLanguage.g:7603:1: ( ( rule__OrExpression__Group_1__0 )* )
            {
            // InternalBeeLangTestLanguage.g:7603:1: ( ( rule__OrExpression__Group_1__0 )* )
            // InternalBeeLangTestLanguage.g:7604:2: ( rule__OrExpression__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrExpressionAccess().getGroup_1()); 
            }
            // InternalBeeLangTestLanguage.g:7605:2: ( rule__OrExpression__Group_1__0 )*
            loop65:
            do {
                int alt65=2;
                int LA65_0 = input.LA(1);

                if ( (LA65_0==64) ) {
                    int LA65_2 = input.LA(2);

                    if ( (synpred94_InternalBeeLangTestLanguage()) ) {
                        alt65=1;
                    }


                }


                switch (alt65) {
            	case 1 :
            	    // InternalBeeLangTestLanguage.g:7605:3: rule__OrExpression__Group_1__0
            	    {
            	    pushFollow(FOLLOW_43);
            	    rule__OrExpression__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop65;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 537, rule__OrExpression__Group__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrExpression__Group__1__Impl"


    // $ANTLR start "rule__OrExpression__Group_1__0"
    // InternalBeeLangTestLanguage.g:7614:1: rule__OrExpression__Group_1__0 : rule__OrExpression__Group_1__0__Impl rule__OrExpression__Group_1__1 ;
    public final void rule__OrExpression__Group_1__0() throws RecognitionException {
        int rule__OrExpression__Group_1__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 538) ) { return ; }
            // InternalBeeLangTestLanguage.g:7618:1: ( rule__OrExpression__Group_1__0__Impl rule__OrExpression__Group_1__1 )
            // InternalBeeLangTestLanguage.g:7619:2: rule__OrExpression__Group_1__0__Impl rule__OrExpression__Group_1__1
            {
            pushFollow(FOLLOW_42);
            rule__OrExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OrExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 538, rule__OrExpression__Group_1__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrExpression__Group_1__0"


    // $ANTLR start "rule__OrExpression__Group_1__0__Impl"
    // InternalBeeLangTestLanguage.g:7626:1: rule__OrExpression__Group_1__0__Impl : ( () ) ;
    public final void rule__OrExpression__Group_1__0__Impl() throws RecognitionException {
        int rule__OrExpression__Group_1__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 539) ) { return ; }
            // InternalBeeLangTestLanguage.g:7630:1: ( ( () ) )
            // InternalBeeLangTestLanguage.g:7631:1: ( () )
            {
            // InternalBeeLangTestLanguage.g:7631:1: ( () )
            // InternalBeeLangTestLanguage.g:7632:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrExpressionAccess().getOrExpressionLeftExprAction_1_0()); 
            }
            // InternalBeeLangTestLanguage.g:7633:2: ()
            // InternalBeeLangTestLanguage.g:7633:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrExpressionAccess().getOrExpressionLeftExprAction_1_0()); 
            }

            }


            }

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 539, rule__OrExpression__Group_1__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrExpression__Group_1__0__Impl"


    // $ANTLR start "rule__OrExpression__Group_1__1"
    // InternalBeeLangTestLanguage.g:7641:1: rule__OrExpression__Group_1__1 : rule__OrExpression__Group_1__1__Impl rule__OrExpression__Group_1__2 ;
    public final void rule__OrExpression__Group_1__1() throws RecognitionException {
        int rule__OrExpression__Group_1__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 540) ) { return ; }
            // InternalBeeLangTestLanguage.g:7645:1: ( rule__OrExpression__Group_1__1__Impl rule__OrExpression__Group_1__2 )
            // InternalBeeLangTestLanguage.g:7646:2: rule__OrExpression__Group_1__1__Impl rule__OrExpression__Group_1__2
            {
            pushFollow(FOLLOW_19);
            rule__OrExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OrExpression__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 540, rule__OrExpression__Group_1__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrExpression__Group_1__1"


    // $ANTLR start "rule__OrExpression__Group_1__1__Impl"
    // InternalBeeLangTestLanguage.g:7653:1: rule__OrExpression__Group_1__1__Impl : ( '||' ) ;
    public final void rule__OrExpression__Group_1__1__Impl() throws RecognitionException {
        int rule__OrExpression__Group_1__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 541) ) { return ; }
            // InternalBeeLangTestLanguage.g:7657:1: ( ( '||' ) )
            // InternalBeeLangTestLanguage.g:7658:1: ( '||' )
            {
            // InternalBeeLangTestLanguage.g:7658:1: ( '||' )
            // InternalBeeLangTestLanguage.g:7659:2: '||'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrExpressionAccess().getVerticalLineVerticalLineKeyword_1_1()); 
            }
            match(input,64,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrExpressionAccess().getVerticalLineVerticalLineKeyword_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 541, rule__OrExpression__Group_1__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrExpression__Group_1__1__Impl"


    // $ANTLR start "rule__OrExpression__Group_1__2"
    // InternalBeeLangTestLanguage.g:7668:1: rule__OrExpression__Group_1__2 : rule__OrExpression__Group_1__2__Impl ;
    public final void rule__OrExpression__Group_1__2() throws RecognitionException {
        int rule__OrExpression__Group_1__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 542) ) { return ; }
            // InternalBeeLangTestLanguage.g:7672:1: ( rule__OrExpression__Group_1__2__Impl )
            // InternalBeeLangTestLanguage.g:7673:2: rule__OrExpression__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OrExpression__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 542, rule__OrExpression__Group_1__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrExpression__Group_1__2"


    // $ANTLR start "rule__OrExpression__Group_1__2__Impl"
    // InternalBeeLangTestLanguage.g:7679:1: rule__OrExpression__Group_1__2__Impl : ( ( rule__OrExpression__RightExprAssignment_1_2 ) ) ;
    public final void rule__OrExpression__Group_1__2__Impl() throws RecognitionException {
        int rule__OrExpression__Group_1__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 543) ) { return ; }
            // InternalBeeLangTestLanguage.g:7683:1: ( ( ( rule__OrExpression__RightExprAssignment_1_2 ) ) )
            // InternalBeeLangTestLanguage.g:7684:1: ( ( rule__OrExpression__RightExprAssignment_1_2 ) )
            {
            // InternalBeeLangTestLanguage.g:7684:1: ( ( rule__OrExpression__RightExprAssignment_1_2 ) )
            // InternalBeeLangTestLanguage.g:7685:2: ( rule__OrExpression__RightExprAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrExpressionAccess().getRightExprAssignment_1_2()); 
            }
            // InternalBeeLangTestLanguage.g:7686:2: ( rule__OrExpression__RightExprAssignment_1_2 )
            // InternalBeeLangTestLanguage.g:7686:3: rule__OrExpression__RightExprAssignment_1_2
            {
            pushFollow(FOLLOW_2);
            rule__OrExpression__RightExprAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrExpressionAccess().getRightExprAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 543, rule__OrExpression__Group_1__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrExpression__Group_1__2__Impl"


    // $ANTLR start "rule__AndExpression__Group__0"
    // InternalBeeLangTestLanguage.g:7695:1: rule__AndExpression__Group__0 : rule__AndExpression__Group__0__Impl rule__AndExpression__Group__1 ;
    public final void rule__AndExpression__Group__0() throws RecognitionException {
        int rule__AndExpression__Group__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 544) ) { return ; }
            // InternalBeeLangTestLanguage.g:7699:1: ( rule__AndExpression__Group__0__Impl rule__AndExpression__Group__1 )
            // InternalBeeLangTestLanguage.g:7700:2: rule__AndExpression__Group__0__Impl rule__AndExpression__Group__1
            {
            pushFollow(FOLLOW_44);
            rule__AndExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AndExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 544, rule__AndExpression__Group__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndExpression__Group__0"


    // $ANTLR start "rule__AndExpression__Group__0__Impl"
    // InternalBeeLangTestLanguage.g:7707:1: rule__AndExpression__Group__0__Impl : ( ruleRelationalExpression ) ;
    public final void rule__AndExpression__Group__0__Impl() throws RecognitionException {
        int rule__AndExpression__Group__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 545) ) { return ; }
            // InternalBeeLangTestLanguage.g:7711:1: ( ( ruleRelationalExpression ) )
            // InternalBeeLangTestLanguage.g:7712:1: ( ruleRelationalExpression )
            {
            // InternalBeeLangTestLanguage.g:7712:1: ( ruleRelationalExpression )
            // InternalBeeLangTestLanguage.g:7713:2: ruleRelationalExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndExpressionAccess().getRelationalExpressionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleRelationalExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndExpressionAccess().getRelationalExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 545, rule__AndExpression__Group__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndExpression__Group__0__Impl"


    // $ANTLR start "rule__AndExpression__Group__1"
    // InternalBeeLangTestLanguage.g:7722:1: rule__AndExpression__Group__1 : rule__AndExpression__Group__1__Impl ;
    public final void rule__AndExpression__Group__1() throws RecognitionException {
        int rule__AndExpression__Group__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 546) ) { return ; }
            // InternalBeeLangTestLanguage.g:7726:1: ( rule__AndExpression__Group__1__Impl )
            // InternalBeeLangTestLanguage.g:7727:2: rule__AndExpression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AndExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 546, rule__AndExpression__Group__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndExpression__Group__1"


    // $ANTLR start "rule__AndExpression__Group__1__Impl"
    // InternalBeeLangTestLanguage.g:7733:1: rule__AndExpression__Group__1__Impl : ( ( rule__AndExpression__Group_1__0 )* ) ;
    public final void rule__AndExpression__Group__1__Impl() throws RecognitionException {
        int rule__AndExpression__Group__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 547) ) { return ; }
            // InternalBeeLangTestLanguage.g:7737:1: ( ( ( rule__AndExpression__Group_1__0 )* ) )
            // InternalBeeLangTestLanguage.g:7738:1: ( ( rule__AndExpression__Group_1__0 )* )
            {
            // InternalBeeLangTestLanguage.g:7738:1: ( ( rule__AndExpression__Group_1__0 )* )
            // InternalBeeLangTestLanguage.g:7739:2: ( rule__AndExpression__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndExpressionAccess().getGroup_1()); 
            }
            // InternalBeeLangTestLanguage.g:7740:2: ( rule__AndExpression__Group_1__0 )*
            loop66:
            do {
                int alt66=2;
                int LA66_0 = input.LA(1);

                if ( (LA66_0==65) ) {
                    int LA66_2 = input.LA(2);

                    if ( (synpred95_InternalBeeLangTestLanguage()) ) {
                        alt66=1;
                    }


                }


                switch (alt66) {
            	case 1 :
            	    // InternalBeeLangTestLanguage.g:7740:3: rule__AndExpression__Group_1__0
            	    {
            	    pushFollow(FOLLOW_45);
            	    rule__AndExpression__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop66;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 547, rule__AndExpression__Group__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndExpression__Group__1__Impl"


    // $ANTLR start "rule__AndExpression__Group_1__0"
    // InternalBeeLangTestLanguage.g:7749:1: rule__AndExpression__Group_1__0 : rule__AndExpression__Group_1__0__Impl rule__AndExpression__Group_1__1 ;
    public final void rule__AndExpression__Group_1__0() throws RecognitionException {
        int rule__AndExpression__Group_1__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 548) ) { return ; }
            // InternalBeeLangTestLanguage.g:7753:1: ( rule__AndExpression__Group_1__0__Impl rule__AndExpression__Group_1__1 )
            // InternalBeeLangTestLanguage.g:7754:2: rule__AndExpression__Group_1__0__Impl rule__AndExpression__Group_1__1
            {
            pushFollow(FOLLOW_44);
            rule__AndExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AndExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 548, rule__AndExpression__Group_1__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndExpression__Group_1__0"


    // $ANTLR start "rule__AndExpression__Group_1__0__Impl"
    // InternalBeeLangTestLanguage.g:7761:1: rule__AndExpression__Group_1__0__Impl : ( () ) ;
    public final void rule__AndExpression__Group_1__0__Impl() throws RecognitionException {
        int rule__AndExpression__Group_1__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 549) ) { return ; }
            // InternalBeeLangTestLanguage.g:7765:1: ( ( () ) )
            // InternalBeeLangTestLanguage.g:7766:1: ( () )
            {
            // InternalBeeLangTestLanguage.g:7766:1: ( () )
            // InternalBeeLangTestLanguage.g:7767:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndExpressionAccess().getAndExpressionLeftExprAction_1_0()); 
            }
            // InternalBeeLangTestLanguage.g:7768:2: ()
            // InternalBeeLangTestLanguage.g:7768:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndExpressionAccess().getAndExpressionLeftExprAction_1_0()); 
            }

            }


            }

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 549, rule__AndExpression__Group_1__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndExpression__Group_1__0__Impl"


    // $ANTLR start "rule__AndExpression__Group_1__1"
    // InternalBeeLangTestLanguage.g:7776:1: rule__AndExpression__Group_1__1 : rule__AndExpression__Group_1__1__Impl rule__AndExpression__Group_1__2 ;
    public final void rule__AndExpression__Group_1__1() throws RecognitionException {
        int rule__AndExpression__Group_1__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 550) ) { return ; }
            // InternalBeeLangTestLanguage.g:7780:1: ( rule__AndExpression__Group_1__1__Impl rule__AndExpression__Group_1__2 )
            // InternalBeeLangTestLanguage.g:7781:2: rule__AndExpression__Group_1__1__Impl rule__AndExpression__Group_1__2
            {
            pushFollow(FOLLOW_19);
            rule__AndExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AndExpression__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 550, rule__AndExpression__Group_1__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndExpression__Group_1__1"


    // $ANTLR start "rule__AndExpression__Group_1__1__Impl"
    // InternalBeeLangTestLanguage.g:7788:1: rule__AndExpression__Group_1__1__Impl : ( '&&' ) ;
    public final void rule__AndExpression__Group_1__1__Impl() throws RecognitionException {
        int rule__AndExpression__Group_1__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 551) ) { return ; }
            // InternalBeeLangTestLanguage.g:7792:1: ( ( '&&' ) )
            // InternalBeeLangTestLanguage.g:7793:1: ( '&&' )
            {
            // InternalBeeLangTestLanguage.g:7793:1: ( '&&' )
            // InternalBeeLangTestLanguage.g:7794:2: '&&'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndExpressionAccess().getAmpersandAmpersandKeyword_1_1()); 
            }
            match(input,65,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndExpressionAccess().getAmpersandAmpersandKeyword_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 551, rule__AndExpression__Group_1__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndExpression__Group_1__1__Impl"


    // $ANTLR start "rule__AndExpression__Group_1__2"
    // InternalBeeLangTestLanguage.g:7803:1: rule__AndExpression__Group_1__2 : rule__AndExpression__Group_1__2__Impl ;
    public final void rule__AndExpression__Group_1__2() throws RecognitionException {
        int rule__AndExpression__Group_1__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 552) ) { return ; }
            // InternalBeeLangTestLanguage.g:7807:1: ( rule__AndExpression__Group_1__2__Impl )
            // InternalBeeLangTestLanguage.g:7808:2: rule__AndExpression__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AndExpression__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 552, rule__AndExpression__Group_1__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndExpression__Group_1__2"


    // $ANTLR start "rule__AndExpression__Group_1__2__Impl"
    // InternalBeeLangTestLanguage.g:7814:1: rule__AndExpression__Group_1__2__Impl : ( ( rule__AndExpression__RightExprAssignment_1_2 ) ) ;
    public final void rule__AndExpression__Group_1__2__Impl() throws RecognitionException {
        int rule__AndExpression__Group_1__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 553) ) { return ; }
            // InternalBeeLangTestLanguage.g:7818:1: ( ( ( rule__AndExpression__RightExprAssignment_1_2 ) ) )
            // InternalBeeLangTestLanguage.g:7819:1: ( ( rule__AndExpression__RightExprAssignment_1_2 ) )
            {
            // InternalBeeLangTestLanguage.g:7819:1: ( ( rule__AndExpression__RightExprAssignment_1_2 ) )
            // InternalBeeLangTestLanguage.g:7820:2: ( rule__AndExpression__RightExprAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndExpressionAccess().getRightExprAssignment_1_2()); 
            }
            // InternalBeeLangTestLanguage.g:7821:2: ( rule__AndExpression__RightExprAssignment_1_2 )
            // InternalBeeLangTestLanguage.g:7821:3: rule__AndExpression__RightExprAssignment_1_2
            {
            pushFollow(FOLLOW_2);
            rule__AndExpression__RightExprAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndExpressionAccess().getRightExprAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 553, rule__AndExpression__Group_1__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndExpression__Group_1__2__Impl"


    // $ANTLR start "rule__RelationalExpression__Group__0"
    // InternalBeeLangTestLanguage.g:7830:1: rule__RelationalExpression__Group__0 : rule__RelationalExpression__Group__0__Impl rule__RelationalExpression__Group__1 ;
    public final void rule__RelationalExpression__Group__0() throws RecognitionException {
        int rule__RelationalExpression__Group__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 554) ) { return ; }
            // InternalBeeLangTestLanguage.g:7834:1: ( rule__RelationalExpression__Group__0__Impl rule__RelationalExpression__Group__1 )
            // InternalBeeLangTestLanguage.g:7835:2: rule__RelationalExpression__Group__0__Impl rule__RelationalExpression__Group__1
            {
            pushFollow(FOLLOW_46);
            rule__RelationalExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__RelationalExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 554, rule__RelationalExpression__Group__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RelationalExpression__Group__0"


    // $ANTLR start "rule__RelationalExpression__Group__0__Impl"
    // InternalBeeLangTestLanguage.g:7842:1: rule__RelationalExpression__Group__0__Impl : ( ruleAdditiveExpression ) ;
    public final void rule__RelationalExpression__Group__0__Impl() throws RecognitionException {
        int rule__RelationalExpression__Group__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 555) ) { return ; }
            // InternalBeeLangTestLanguage.g:7846:1: ( ( ruleAdditiveExpression ) )
            // InternalBeeLangTestLanguage.g:7847:1: ( ruleAdditiveExpression )
            {
            // InternalBeeLangTestLanguage.g:7847:1: ( ruleAdditiveExpression )
            // InternalBeeLangTestLanguage.g:7848:2: ruleAdditiveExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRelationalExpressionAccess().getAdditiveExpressionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAdditiveExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRelationalExpressionAccess().getAdditiveExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 555, rule__RelationalExpression__Group__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RelationalExpression__Group__0__Impl"


    // $ANTLR start "rule__RelationalExpression__Group__1"
    // InternalBeeLangTestLanguage.g:7857:1: rule__RelationalExpression__Group__1 : rule__RelationalExpression__Group__1__Impl ;
    public final void rule__RelationalExpression__Group__1() throws RecognitionException {
        int rule__RelationalExpression__Group__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 556) ) { return ; }
            // InternalBeeLangTestLanguage.g:7861:1: ( rule__RelationalExpression__Group__1__Impl )
            // InternalBeeLangTestLanguage.g:7862:2: rule__RelationalExpression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__RelationalExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 556, rule__RelationalExpression__Group__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RelationalExpression__Group__1"


    // $ANTLR start "rule__RelationalExpression__Group__1__Impl"
    // InternalBeeLangTestLanguage.g:7868:1: rule__RelationalExpression__Group__1__Impl : ( ( rule__RelationalExpression__Group_1__0 )* ) ;
    public final void rule__RelationalExpression__Group__1__Impl() throws RecognitionException {
        int rule__RelationalExpression__Group__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 557) ) { return ; }
            // InternalBeeLangTestLanguage.g:7872:1: ( ( ( rule__RelationalExpression__Group_1__0 )* ) )
            // InternalBeeLangTestLanguage.g:7873:1: ( ( rule__RelationalExpression__Group_1__0 )* )
            {
            // InternalBeeLangTestLanguage.g:7873:1: ( ( rule__RelationalExpression__Group_1__0 )* )
            // InternalBeeLangTestLanguage.g:7874:2: ( rule__RelationalExpression__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRelationalExpressionAccess().getGroup_1()); 
            }
            // InternalBeeLangTestLanguage.g:7875:2: ( rule__RelationalExpression__Group_1__0 )*
            loop67:
            do {
                int alt67=2;
                alt67 = dfa67.predict(input);
                switch (alt67) {
            	case 1 :
            	    // InternalBeeLangTestLanguage.g:7875:3: rule__RelationalExpression__Group_1__0
            	    {
            	    pushFollow(FOLLOW_47);
            	    rule__RelationalExpression__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop67;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRelationalExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 557, rule__RelationalExpression__Group__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RelationalExpression__Group__1__Impl"


    // $ANTLR start "rule__RelationalExpression__Group_1__0"
    // InternalBeeLangTestLanguage.g:7884:1: rule__RelationalExpression__Group_1__0 : rule__RelationalExpression__Group_1__0__Impl rule__RelationalExpression__Group_1__1 ;
    public final void rule__RelationalExpression__Group_1__0() throws RecognitionException {
        int rule__RelationalExpression__Group_1__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 558) ) { return ; }
            // InternalBeeLangTestLanguage.g:7888:1: ( rule__RelationalExpression__Group_1__0__Impl rule__RelationalExpression__Group_1__1 )
            // InternalBeeLangTestLanguage.g:7889:2: rule__RelationalExpression__Group_1__0__Impl rule__RelationalExpression__Group_1__1
            {
            pushFollow(FOLLOW_46);
            rule__RelationalExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__RelationalExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 558, rule__RelationalExpression__Group_1__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RelationalExpression__Group_1__0"


    // $ANTLR start "rule__RelationalExpression__Group_1__0__Impl"
    // InternalBeeLangTestLanguage.g:7896:1: rule__RelationalExpression__Group_1__0__Impl : ( () ) ;
    public final void rule__RelationalExpression__Group_1__0__Impl() throws RecognitionException {
        int rule__RelationalExpression__Group_1__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 559) ) { return ; }
            // InternalBeeLangTestLanguage.g:7900:1: ( ( () ) )
            // InternalBeeLangTestLanguage.g:7901:1: ( () )
            {
            // InternalBeeLangTestLanguage.g:7901:1: ( () )
            // InternalBeeLangTestLanguage.g:7902:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRelationalExpressionAccess().getBinaryOpExpressionLeftExprAction_1_0()); 
            }
            // InternalBeeLangTestLanguage.g:7903:2: ()
            // InternalBeeLangTestLanguage.g:7903:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRelationalExpressionAccess().getBinaryOpExpressionLeftExprAction_1_0()); 
            }

            }


            }

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 559, rule__RelationalExpression__Group_1__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RelationalExpression__Group_1__0__Impl"


    // $ANTLR start "rule__RelationalExpression__Group_1__1"
    // InternalBeeLangTestLanguage.g:7911:1: rule__RelationalExpression__Group_1__1 : rule__RelationalExpression__Group_1__1__Impl rule__RelationalExpression__Group_1__2 ;
    public final void rule__RelationalExpression__Group_1__1() throws RecognitionException {
        int rule__RelationalExpression__Group_1__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 560) ) { return ; }
            // InternalBeeLangTestLanguage.g:7915:1: ( rule__RelationalExpression__Group_1__1__Impl rule__RelationalExpression__Group_1__2 )
            // InternalBeeLangTestLanguage.g:7916:2: rule__RelationalExpression__Group_1__1__Impl rule__RelationalExpression__Group_1__2
            {
            pushFollow(FOLLOW_19);
            rule__RelationalExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__RelationalExpression__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 560, rule__RelationalExpression__Group_1__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RelationalExpression__Group_1__1"


    // $ANTLR start "rule__RelationalExpression__Group_1__1__Impl"
    // InternalBeeLangTestLanguage.g:7923:1: rule__RelationalExpression__Group_1__1__Impl : ( ( rule__RelationalExpression__FunctionNameAssignment_1_1 ) ) ;
    public final void rule__RelationalExpression__Group_1__1__Impl() throws RecognitionException {
        int rule__RelationalExpression__Group_1__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 561) ) { return ; }
            // InternalBeeLangTestLanguage.g:7927:1: ( ( ( rule__RelationalExpression__FunctionNameAssignment_1_1 ) ) )
            // InternalBeeLangTestLanguage.g:7928:1: ( ( rule__RelationalExpression__FunctionNameAssignment_1_1 ) )
            {
            // InternalBeeLangTestLanguage.g:7928:1: ( ( rule__RelationalExpression__FunctionNameAssignment_1_1 ) )
            // InternalBeeLangTestLanguage.g:7929:2: ( rule__RelationalExpression__FunctionNameAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRelationalExpressionAccess().getFunctionNameAssignment_1_1()); 
            }
            // InternalBeeLangTestLanguage.g:7930:2: ( rule__RelationalExpression__FunctionNameAssignment_1_1 )
            // InternalBeeLangTestLanguage.g:7930:3: rule__RelationalExpression__FunctionNameAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__RelationalExpression__FunctionNameAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRelationalExpressionAccess().getFunctionNameAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 561, rule__RelationalExpression__Group_1__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RelationalExpression__Group_1__1__Impl"


    // $ANTLR start "rule__RelationalExpression__Group_1__2"
    // InternalBeeLangTestLanguage.g:7938:1: rule__RelationalExpression__Group_1__2 : rule__RelationalExpression__Group_1__2__Impl ;
    public final void rule__RelationalExpression__Group_1__2() throws RecognitionException {
        int rule__RelationalExpression__Group_1__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 562) ) { return ; }
            // InternalBeeLangTestLanguage.g:7942:1: ( rule__RelationalExpression__Group_1__2__Impl )
            // InternalBeeLangTestLanguage.g:7943:2: rule__RelationalExpression__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__RelationalExpression__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 562, rule__RelationalExpression__Group_1__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RelationalExpression__Group_1__2"


    // $ANTLR start "rule__RelationalExpression__Group_1__2__Impl"
    // InternalBeeLangTestLanguage.g:7949:1: rule__RelationalExpression__Group_1__2__Impl : ( ( rule__RelationalExpression__RightExprAssignment_1_2 ) ) ;
    public final void rule__RelationalExpression__Group_1__2__Impl() throws RecognitionException {
        int rule__RelationalExpression__Group_1__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 563) ) { return ; }
            // InternalBeeLangTestLanguage.g:7953:1: ( ( ( rule__RelationalExpression__RightExprAssignment_1_2 ) ) )
            // InternalBeeLangTestLanguage.g:7954:1: ( ( rule__RelationalExpression__RightExprAssignment_1_2 ) )
            {
            // InternalBeeLangTestLanguage.g:7954:1: ( ( rule__RelationalExpression__RightExprAssignment_1_2 ) )
            // InternalBeeLangTestLanguage.g:7955:2: ( rule__RelationalExpression__RightExprAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRelationalExpressionAccess().getRightExprAssignment_1_2()); 
            }
            // InternalBeeLangTestLanguage.g:7956:2: ( rule__RelationalExpression__RightExprAssignment_1_2 )
            // InternalBeeLangTestLanguage.g:7956:3: rule__RelationalExpression__RightExprAssignment_1_2
            {
            pushFollow(FOLLOW_2);
            rule__RelationalExpression__RightExprAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRelationalExpressionAccess().getRightExprAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 563, rule__RelationalExpression__Group_1__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RelationalExpression__Group_1__2__Impl"


    // $ANTLR start "rule__AdditiveExpression__Group__0"
    // InternalBeeLangTestLanguage.g:7965:1: rule__AdditiveExpression__Group__0 : rule__AdditiveExpression__Group__0__Impl rule__AdditiveExpression__Group__1 ;
    public final void rule__AdditiveExpression__Group__0() throws RecognitionException {
        int rule__AdditiveExpression__Group__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 564) ) { return ; }
            // InternalBeeLangTestLanguage.g:7969:1: ( rule__AdditiveExpression__Group__0__Impl rule__AdditiveExpression__Group__1 )
            // InternalBeeLangTestLanguage.g:7970:2: rule__AdditiveExpression__Group__0__Impl rule__AdditiveExpression__Group__1
            {
            pushFollow(FOLLOW_48);
            rule__AdditiveExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AdditiveExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 564, rule__AdditiveExpression__Group__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AdditiveExpression__Group__0"


    // $ANTLR start "rule__AdditiveExpression__Group__0__Impl"
    // InternalBeeLangTestLanguage.g:7977:1: rule__AdditiveExpression__Group__0__Impl : ( ruleMultiplicativeExpression ) ;
    public final void rule__AdditiveExpression__Group__0__Impl() throws RecognitionException {
        int rule__AdditiveExpression__Group__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 565) ) { return ; }
            // InternalBeeLangTestLanguage.g:7981:1: ( ( ruleMultiplicativeExpression ) )
            // InternalBeeLangTestLanguage.g:7982:1: ( ruleMultiplicativeExpression )
            {
            // InternalBeeLangTestLanguage.g:7982:1: ( ruleMultiplicativeExpression )
            // InternalBeeLangTestLanguage.g:7983:2: ruleMultiplicativeExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAdditiveExpressionAccess().getMultiplicativeExpressionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleMultiplicativeExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAdditiveExpressionAccess().getMultiplicativeExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 565, rule__AdditiveExpression__Group__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AdditiveExpression__Group__0__Impl"


    // $ANTLR start "rule__AdditiveExpression__Group__1"
    // InternalBeeLangTestLanguage.g:7992:1: rule__AdditiveExpression__Group__1 : rule__AdditiveExpression__Group__1__Impl ;
    public final void rule__AdditiveExpression__Group__1() throws RecognitionException {
        int rule__AdditiveExpression__Group__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 566) ) { return ; }
            // InternalBeeLangTestLanguage.g:7996:1: ( rule__AdditiveExpression__Group__1__Impl )
            // InternalBeeLangTestLanguage.g:7997:2: rule__AdditiveExpression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AdditiveExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 566, rule__AdditiveExpression__Group__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AdditiveExpression__Group__1"


    // $ANTLR start "rule__AdditiveExpression__Group__1__Impl"
    // InternalBeeLangTestLanguage.g:8003:1: rule__AdditiveExpression__Group__1__Impl : ( ( rule__AdditiveExpression__Group_1__0 )* ) ;
    public final void rule__AdditiveExpression__Group__1__Impl() throws RecognitionException {
        int rule__AdditiveExpression__Group__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 567) ) { return ; }
            // InternalBeeLangTestLanguage.g:8007:1: ( ( ( rule__AdditiveExpression__Group_1__0 )* ) )
            // InternalBeeLangTestLanguage.g:8008:1: ( ( rule__AdditiveExpression__Group_1__0 )* )
            {
            // InternalBeeLangTestLanguage.g:8008:1: ( ( rule__AdditiveExpression__Group_1__0 )* )
            // InternalBeeLangTestLanguage.g:8009:2: ( rule__AdditiveExpression__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAdditiveExpressionAccess().getGroup_1()); 
            }
            // InternalBeeLangTestLanguage.g:8010:2: ( rule__AdditiveExpression__Group_1__0 )*
            loop68:
            do {
                int alt68=2;
                int LA68_0 = input.LA(1);

                if ( (LA68_0==30) ) {
                    int LA68_2 = input.LA(2);

                    if ( (synpred97_InternalBeeLangTestLanguage()) ) {
                        alt68=1;
                    }


                }
                else if ( (LA68_0==31) ) {
                    int LA68_3 = input.LA(2);

                    if ( (synpred97_InternalBeeLangTestLanguage()) ) {
                        alt68=1;
                    }


                }


                switch (alt68) {
            	case 1 :
            	    // InternalBeeLangTestLanguage.g:8010:3: rule__AdditiveExpression__Group_1__0
            	    {
            	    pushFollow(FOLLOW_49);
            	    rule__AdditiveExpression__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop68;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAdditiveExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 567, rule__AdditiveExpression__Group__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AdditiveExpression__Group__1__Impl"


    // $ANTLR start "rule__AdditiveExpression__Group_1__0"
    // InternalBeeLangTestLanguage.g:8019:1: rule__AdditiveExpression__Group_1__0 : rule__AdditiveExpression__Group_1__0__Impl rule__AdditiveExpression__Group_1__1 ;
    public final void rule__AdditiveExpression__Group_1__0() throws RecognitionException {
        int rule__AdditiveExpression__Group_1__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 568) ) { return ; }
            // InternalBeeLangTestLanguage.g:8023:1: ( rule__AdditiveExpression__Group_1__0__Impl rule__AdditiveExpression__Group_1__1 )
            // InternalBeeLangTestLanguage.g:8024:2: rule__AdditiveExpression__Group_1__0__Impl rule__AdditiveExpression__Group_1__1
            {
            pushFollow(FOLLOW_48);
            rule__AdditiveExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AdditiveExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 568, rule__AdditiveExpression__Group_1__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AdditiveExpression__Group_1__0"


    // $ANTLR start "rule__AdditiveExpression__Group_1__0__Impl"
    // InternalBeeLangTestLanguage.g:8031:1: rule__AdditiveExpression__Group_1__0__Impl : ( () ) ;
    public final void rule__AdditiveExpression__Group_1__0__Impl() throws RecognitionException {
        int rule__AdditiveExpression__Group_1__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 569) ) { return ; }
            // InternalBeeLangTestLanguage.g:8035:1: ( ( () ) )
            // InternalBeeLangTestLanguage.g:8036:1: ( () )
            {
            // InternalBeeLangTestLanguage.g:8036:1: ( () )
            // InternalBeeLangTestLanguage.g:8037:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAdditiveExpressionAccess().getBinaryOpExpressionLeftExprAction_1_0()); 
            }
            // InternalBeeLangTestLanguage.g:8038:2: ()
            // InternalBeeLangTestLanguage.g:8038:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAdditiveExpressionAccess().getBinaryOpExpressionLeftExprAction_1_0()); 
            }

            }


            }

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 569, rule__AdditiveExpression__Group_1__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AdditiveExpression__Group_1__0__Impl"


    // $ANTLR start "rule__AdditiveExpression__Group_1__1"
    // InternalBeeLangTestLanguage.g:8046:1: rule__AdditiveExpression__Group_1__1 : rule__AdditiveExpression__Group_1__1__Impl rule__AdditiveExpression__Group_1__2 ;
    public final void rule__AdditiveExpression__Group_1__1() throws RecognitionException {
        int rule__AdditiveExpression__Group_1__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 570) ) { return ; }
            // InternalBeeLangTestLanguage.g:8050:1: ( rule__AdditiveExpression__Group_1__1__Impl rule__AdditiveExpression__Group_1__2 )
            // InternalBeeLangTestLanguage.g:8051:2: rule__AdditiveExpression__Group_1__1__Impl rule__AdditiveExpression__Group_1__2
            {
            pushFollow(FOLLOW_19);
            rule__AdditiveExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AdditiveExpression__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 570, rule__AdditiveExpression__Group_1__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AdditiveExpression__Group_1__1"


    // $ANTLR start "rule__AdditiveExpression__Group_1__1__Impl"
    // InternalBeeLangTestLanguage.g:8058:1: rule__AdditiveExpression__Group_1__1__Impl : ( ( rule__AdditiveExpression__FunctionNameAssignment_1_1 ) ) ;
    public final void rule__AdditiveExpression__Group_1__1__Impl() throws RecognitionException {
        int rule__AdditiveExpression__Group_1__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 571) ) { return ; }
            // InternalBeeLangTestLanguage.g:8062:1: ( ( ( rule__AdditiveExpression__FunctionNameAssignment_1_1 ) ) )
            // InternalBeeLangTestLanguage.g:8063:1: ( ( rule__AdditiveExpression__FunctionNameAssignment_1_1 ) )
            {
            // InternalBeeLangTestLanguage.g:8063:1: ( ( rule__AdditiveExpression__FunctionNameAssignment_1_1 ) )
            // InternalBeeLangTestLanguage.g:8064:2: ( rule__AdditiveExpression__FunctionNameAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAdditiveExpressionAccess().getFunctionNameAssignment_1_1()); 
            }
            // InternalBeeLangTestLanguage.g:8065:2: ( rule__AdditiveExpression__FunctionNameAssignment_1_1 )
            // InternalBeeLangTestLanguage.g:8065:3: rule__AdditiveExpression__FunctionNameAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__AdditiveExpression__FunctionNameAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAdditiveExpressionAccess().getFunctionNameAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 571, rule__AdditiveExpression__Group_1__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AdditiveExpression__Group_1__1__Impl"


    // $ANTLR start "rule__AdditiveExpression__Group_1__2"
    // InternalBeeLangTestLanguage.g:8073:1: rule__AdditiveExpression__Group_1__2 : rule__AdditiveExpression__Group_1__2__Impl ;
    public final void rule__AdditiveExpression__Group_1__2() throws RecognitionException {
        int rule__AdditiveExpression__Group_1__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 572) ) { return ; }
            // InternalBeeLangTestLanguage.g:8077:1: ( rule__AdditiveExpression__Group_1__2__Impl )
            // InternalBeeLangTestLanguage.g:8078:2: rule__AdditiveExpression__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AdditiveExpression__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 572, rule__AdditiveExpression__Group_1__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AdditiveExpression__Group_1__2"


    // $ANTLR start "rule__AdditiveExpression__Group_1__2__Impl"
    // InternalBeeLangTestLanguage.g:8084:1: rule__AdditiveExpression__Group_1__2__Impl : ( ( rule__AdditiveExpression__RightExprAssignment_1_2 ) ) ;
    public final void rule__AdditiveExpression__Group_1__2__Impl() throws RecognitionException {
        int rule__AdditiveExpression__Group_1__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 573) ) { return ; }
            // InternalBeeLangTestLanguage.g:8088:1: ( ( ( rule__AdditiveExpression__RightExprAssignment_1_2 ) ) )
            // InternalBeeLangTestLanguage.g:8089:1: ( ( rule__AdditiveExpression__RightExprAssignment_1_2 ) )
            {
            // InternalBeeLangTestLanguage.g:8089:1: ( ( rule__AdditiveExpression__RightExprAssignment_1_2 ) )
            // InternalBeeLangTestLanguage.g:8090:2: ( rule__AdditiveExpression__RightExprAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAdditiveExpressionAccess().getRightExprAssignment_1_2()); 
            }
            // InternalBeeLangTestLanguage.g:8091:2: ( rule__AdditiveExpression__RightExprAssignment_1_2 )
            // InternalBeeLangTestLanguage.g:8091:3: rule__AdditiveExpression__RightExprAssignment_1_2
            {
            pushFollow(FOLLOW_2);
            rule__AdditiveExpression__RightExprAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAdditiveExpressionAccess().getRightExprAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 573, rule__AdditiveExpression__Group_1__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AdditiveExpression__Group_1__2__Impl"


    // $ANTLR start "rule__MultiplicativeExpression__Group__0"
    // InternalBeeLangTestLanguage.g:8100:1: rule__MultiplicativeExpression__Group__0 : rule__MultiplicativeExpression__Group__0__Impl rule__MultiplicativeExpression__Group__1 ;
    public final void rule__MultiplicativeExpression__Group__0() throws RecognitionException {
        int rule__MultiplicativeExpression__Group__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 574) ) { return ; }
            // InternalBeeLangTestLanguage.g:8104:1: ( rule__MultiplicativeExpression__Group__0__Impl rule__MultiplicativeExpression__Group__1 )
            // InternalBeeLangTestLanguage.g:8105:2: rule__MultiplicativeExpression__Group__0__Impl rule__MultiplicativeExpression__Group__1
            {
            pushFollow(FOLLOW_50);
            rule__MultiplicativeExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__MultiplicativeExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 574, rule__MultiplicativeExpression__Group__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultiplicativeExpression__Group__0"


    // $ANTLR start "rule__MultiplicativeExpression__Group__0__Impl"
    // InternalBeeLangTestLanguage.g:8112:1: rule__MultiplicativeExpression__Group__0__Impl : ( ruleSetExpression ) ;
    public final void rule__MultiplicativeExpression__Group__0__Impl() throws RecognitionException {
        int rule__MultiplicativeExpression__Group__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 575) ) { return ; }
            // InternalBeeLangTestLanguage.g:8116:1: ( ( ruleSetExpression ) )
            // InternalBeeLangTestLanguage.g:8117:1: ( ruleSetExpression )
            {
            // InternalBeeLangTestLanguage.g:8117:1: ( ruleSetExpression )
            // InternalBeeLangTestLanguage.g:8118:2: ruleSetExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMultiplicativeExpressionAccess().getSetExpressionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSetExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMultiplicativeExpressionAccess().getSetExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 575, rule__MultiplicativeExpression__Group__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultiplicativeExpression__Group__0__Impl"


    // $ANTLR start "rule__MultiplicativeExpression__Group__1"
    // InternalBeeLangTestLanguage.g:8127:1: rule__MultiplicativeExpression__Group__1 : rule__MultiplicativeExpression__Group__1__Impl ;
    public final void rule__MultiplicativeExpression__Group__1() throws RecognitionException {
        int rule__MultiplicativeExpression__Group__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 576) ) { return ; }
            // InternalBeeLangTestLanguage.g:8131:1: ( rule__MultiplicativeExpression__Group__1__Impl )
            // InternalBeeLangTestLanguage.g:8132:2: rule__MultiplicativeExpression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__MultiplicativeExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 576, rule__MultiplicativeExpression__Group__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultiplicativeExpression__Group__1"


    // $ANTLR start "rule__MultiplicativeExpression__Group__1__Impl"
    // InternalBeeLangTestLanguage.g:8138:1: rule__MultiplicativeExpression__Group__1__Impl : ( ( rule__MultiplicativeExpression__Group_1__0 )* ) ;
    public final void rule__MultiplicativeExpression__Group__1__Impl() throws RecognitionException {
        int rule__MultiplicativeExpression__Group__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 577) ) { return ; }
            // InternalBeeLangTestLanguage.g:8142:1: ( ( ( rule__MultiplicativeExpression__Group_1__0 )* ) )
            // InternalBeeLangTestLanguage.g:8143:1: ( ( rule__MultiplicativeExpression__Group_1__0 )* )
            {
            // InternalBeeLangTestLanguage.g:8143:1: ( ( rule__MultiplicativeExpression__Group_1__0 )* )
            // InternalBeeLangTestLanguage.g:8144:2: ( rule__MultiplicativeExpression__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMultiplicativeExpressionAccess().getGroup_1()); 
            }
            // InternalBeeLangTestLanguage.g:8145:2: ( rule__MultiplicativeExpression__Group_1__0 )*
            loop69:
            do {
                int alt69=2;
                switch ( input.LA(1) ) {
                case 32:
                    {
                    int LA69_2 = input.LA(2);

                    if ( (synpred98_InternalBeeLangTestLanguage()) ) {
                        alt69=1;
                    }


                    }
                    break;
                case 33:
                    {
                    int LA69_3 = input.LA(2);

                    if ( (synpred98_InternalBeeLangTestLanguage()) ) {
                        alt69=1;
                    }


                    }
                    break;
                case 34:
                    {
                    int LA69_4 = input.LA(2);

                    if ( (synpred98_InternalBeeLangTestLanguage()) ) {
                        alt69=1;
                    }


                    }
                    break;

                }

                switch (alt69) {
            	case 1 :
            	    // InternalBeeLangTestLanguage.g:8145:3: rule__MultiplicativeExpression__Group_1__0
            	    {
            	    pushFollow(FOLLOW_51);
            	    rule__MultiplicativeExpression__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop69;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMultiplicativeExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 577, rule__MultiplicativeExpression__Group__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultiplicativeExpression__Group__1__Impl"


    // $ANTLR start "rule__MultiplicativeExpression__Group_1__0"
    // InternalBeeLangTestLanguage.g:8154:1: rule__MultiplicativeExpression__Group_1__0 : rule__MultiplicativeExpression__Group_1__0__Impl rule__MultiplicativeExpression__Group_1__1 ;
    public final void rule__MultiplicativeExpression__Group_1__0() throws RecognitionException {
        int rule__MultiplicativeExpression__Group_1__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 578) ) { return ; }
            // InternalBeeLangTestLanguage.g:8158:1: ( rule__MultiplicativeExpression__Group_1__0__Impl rule__MultiplicativeExpression__Group_1__1 )
            // InternalBeeLangTestLanguage.g:8159:2: rule__MultiplicativeExpression__Group_1__0__Impl rule__MultiplicativeExpression__Group_1__1
            {
            pushFollow(FOLLOW_50);
            rule__MultiplicativeExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__MultiplicativeExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 578, rule__MultiplicativeExpression__Group_1__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultiplicativeExpression__Group_1__0"


    // $ANTLR start "rule__MultiplicativeExpression__Group_1__0__Impl"
    // InternalBeeLangTestLanguage.g:8166:1: rule__MultiplicativeExpression__Group_1__0__Impl : ( () ) ;
    public final void rule__MultiplicativeExpression__Group_1__0__Impl() throws RecognitionException {
        int rule__MultiplicativeExpression__Group_1__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 579) ) { return ; }
            // InternalBeeLangTestLanguage.g:8170:1: ( ( () ) )
            // InternalBeeLangTestLanguage.g:8171:1: ( () )
            {
            // InternalBeeLangTestLanguage.g:8171:1: ( () )
            // InternalBeeLangTestLanguage.g:8172:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMultiplicativeExpressionAccess().getBinaryOpExpressionLeftExprAction_1_0()); 
            }
            // InternalBeeLangTestLanguage.g:8173:2: ()
            // InternalBeeLangTestLanguage.g:8173:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMultiplicativeExpressionAccess().getBinaryOpExpressionLeftExprAction_1_0()); 
            }

            }


            }

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 579, rule__MultiplicativeExpression__Group_1__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultiplicativeExpression__Group_1__0__Impl"


    // $ANTLR start "rule__MultiplicativeExpression__Group_1__1"
    // InternalBeeLangTestLanguage.g:8181:1: rule__MultiplicativeExpression__Group_1__1 : rule__MultiplicativeExpression__Group_1__1__Impl rule__MultiplicativeExpression__Group_1__2 ;
    public final void rule__MultiplicativeExpression__Group_1__1() throws RecognitionException {
        int rule__MultiplicativeExpression__Group_1__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 580) ) { return ; }
            // InternalBeeLangTestLanguage.g:8185:1: ( rule__MultiplicativeExpression__Group_1__1__Impl rule__MultiplicativeExpression__Group_1__2 )
            // InternalBeeLangTestLanguage.g:8186:2: rule__MultiplicativeExpression__Group_1__1__Impl rule__MultiplicativeExpression__Group_1__2
            {
            pushFollow(FOLLOW_19);
            rule__MultiplicativeExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__MultiplicativeExpression__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 580, rule__MultiplicativeExpression__Group_1__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultiplicativeExpression__Group_1__1"


    // $ANTLR start "rule__MultiplicativeExpression__Group_1__1__Impl"
    // InternalBeeLangTestLanguage.g:8193:1: rule__MultiplicativeExpression__Group_1__1__Impl : ( ( rule__MultiplicativeExpression__FunctionNameAssignment_1_1 ) ) ;
    public final void rule__MultiplicativeExpression__Group_1__1__Impl() throws RecognitionException {
        int rule__MultiplicativeExpression__Group_1__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 581) ) { return ; }
            // InternalBeeLangTestLanguage.g:8197:1: ( ( ( rule__MultiplicativeExpression__FunctionNameAssignment_1_1 ) ) )
            // InternalBeeLangTestLanguage.g:8198:1: ( ( rule__MultiplicativeExpression__FunctionNameAssignment_1_1 ) )
            {
            // InternalBeeLangTestLanguage.g:8198:1: ( ( rule__MultiplicativeExpression__FunctionNameAssignment_1_1 ) )
            // InternalBeeLangTestLanguage.g:8199:2: ( rule__MultiplicativeExpression__FunctionNameAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMultiplicativeExpressionAccess().getFunctionNameAssignment_1_1()); 
            }
            // InternalBeeLangTestLanguage.g:8200:2: ( rule__MultiplicativeExpression__FunctionNameAssignment_1_1 )
            // InternalBeeLangTestLanguage.g:8200:3: rule__MultiplicativeExpression__FunctionNameAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__MultiplicativeExpression__FunctionNameAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMultiplicativeExpressionAccess().getFunctionNameAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 581, rule__MultiplicativeExpression__Group_1__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultiplicativeExpression__Group_1__1__Impl"


    // $ANTLR start "rule__MultiplicativeExpression__Group_1__2"
    // InternalBeeLangTestLanguage.g:8208:1: rule__MultiplicativeExpression__Group_1__2 : rule__MultiplicativeExpression__Group_1__2__Impl ;
    public final void rule__MultiplicativeExpression__Group_1__2() throws RecognitionException {
        int rule__MultiplicativeExpression__Group_1__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 582) ) { return ; }
            // InternalBeeLangTestLanguage.g:8212:1: ( rule__MultiplicativeExpression__Group_1__2__Impl )
            // InternalBeeLangTestLanguage.g:8213:2: rule__MultiplicativeExpression__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__MultiplicativeExpression__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 582, rule__MultiplicativeExpression__Group_1__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultiplicativeExpression__Group_1__2"


    // $ANTLR start "rule__MultiplicativeExpression__Group_1__2__Impl"
    // InternalBeeLangTestLanguage.g:8219:1: rule__MultiplicativeExpression__Group_1__2__Impl : ( ( rule__MultiplicativeExpression__RightExprAssignment_1_2 ) ) ;
    public final void rule__MultiplicativeExpression__Group_1__2__Impl() throws RecognitionException {
        int rule__MultiplicativeExpression__Group_1__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 583) ) { return ; }
            // InternalBeeLangTestLanguage.g:8223:1: ( ( ( rule__MultiplicativeExpression__RightExprAssignment_1_2 ) ) )
            // InternalBeeLangTestLanguage.g:8224:1: ( ( rule__MultiplicativeExpression__RightExprAssignment_1_2 ) )
            {
            // InternalBeeLangTestLanguage.g:8224:1: ( ( rule__MultiplicativeExpression__RightExprAssignment_1_2 ) )
            // InternalBeeLangTestLanguage.g:8225:2: ( rule__MultiplicativeExpression__RightExprAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMultiplicativeExpressionAccess().getRightExprAssignment_1_2()); 
            }
            // InternalBeeLangTestLanguage.g:8226:2: ( rule__MultiplicativeExpression__RightExprAssignment_1_2 )
            // InternalBeeLangTestLanguage.g:8226:3: rule__MultiplicativeExpression__RightExprAssignment_1_2
            {
            pushFollow(FOLLOW_2);
            rule__MultiplicativeExpression__RightExprAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMultiplicativeExpressionAccess().getRightExprAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 583, rule__MultiplicativeExpression__Group_1__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultiplicativeExpression__Group_1__2__Impl"


    // $ANTLR start "rule__SetExpression__Group__0"
    // InternalBeeLangTestLanguage.g:8235:1: rule__SetExpression__Group__0 : rule__SetExpression__Group__0__Impl rule__SetExpression__Group__1 ;
    public final void rule__SetExpression__Group__0() throws RecognitionException {
        int rule__SetExpression__Group__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 584) ) { return ; }
            // InternalBeeLangTestLanguage.g:8239:1: ( rule__SetExpression__Group__0__Impl rule__SetExpression__Group__1 )
            // InternalBeeLangTestLanguage.g:8240:2: rule__SetExpression__Group__0__Impl rule__SetExpression__Group__1
            {
            pushFollow(FOLLOW_52);
            rule__SetExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SetExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 584, rule__SetExpression__Group__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SetExpression__Group__0"


    // $ANTLR start "rule__SetExpression__Group__0__Impl"
    // InternalBeeLangTestLanguage.g:8247:1: rule__SetExpression__Group__0__Impl : ( ruleUnaryOrInfixExpression ) ;
    public final void rule__SetExpression__Group__0__Impl() throws RecognitionException {
        int rule__SetExpression__Group__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 585) ) { return ; }
            // InternalBeeLangTestLanguage.g:8251:1: ( ( ruleUnaryOrInfixExpression ) )
            // InternalBeeLangTestLanguage.g:8252:1: ( ruleUnaryOrInfixExpression )
            {
            // InternalBeeLangTestLanguage.g:8252:1: ( ruleUnaryOrInfixExpression )
            // InternalBeeLangTestLanguage.g:8253:2: ruleUnaryOrInfixExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSetExpressionAccess().getUnaryOrInfixExpressionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleUnaryOrInfixExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSetExpressionAccess().getUnaryOrInfixExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 585, rule__SetExpression__Group__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SetExpression__Group__0__Impl"


    // $ANTLR start "rule__SetExpression__Group__1"
    // InternalBeeLangTestLanguage.g:8262:1: rule__SetExpression__Group__1 : rule__SetExpression__Group__1__Impl ;
    public final void rule__SetExpression__Group__1() throws RecognitionException {
        int rule__SetExpression__Group__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 586) ) { return ; }
            // InternalBeeLangTestLanguage.g:8266:1: ( rule__SetExpression__Group__1__Impl )
            // InternalBeeLangTestLanguage.g:8267:2: rule__SetExpression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SetExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 586, rule__SetExpression__Group__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SetExpression__Group__1"


    // $ANTLR start "rule__SetExpression__Group__1__Impl"
    // InternalBeeLangTestLanguage.g:8273:1: rule__SetExpression__Group__1__Impl : ( ( rule__SetExpression__Group_1__0 )* ) ;
    public final void rule__SetExpression__Group__1__Impl() throws RecognitionException {
        int rule__SetExpression__Group__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 587) ) { return ; }
            // InternalBeeLangTestLanguage.g:8277:1: ( ( ( rule__SetExpression__Group_1__0 )* ) )
            // InternalBeeLangTestLanguage.g:8278:1: ( ( rule__SetExpression__Group_1__0 )* )
            {
            // InternalBeeLangTestLanguage.g:8278:1: ( ( rule__SetExpression__Group_1__0 )* )
            // InternalBeeLangTestLanguage.g:8279:2: ( rule__SetExpression__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSetExpressionAccess().getGroup_1()); 
            }
            // InternalBeeLangTestLanguage.g:8280:2: ( rule__SetExpression__Group_1__0 )*
            loop70:
            do {
                int alt70=2;
                int LA70_0 = input.LA(1);

                if ( (LA70_0==77) ) {
                    int LA70_2 = input.LA(2);

                    if ( (synpred99_InternalBeeLangTestLanguage()) ) {
                        alt70=1;
                    }


                }


                switch (alt70) {
            	case 1 :
            	    // InternalBeeLangTestLanguage.g:8280:3: rule__SetExpression__Group_1__0
            	    {
            	    pushFollow(FOLLOW_53);
            	    rule__SetExpression__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop70;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSetExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 587, rule__SetExpression__Group__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SetExpression__Group__1__Impl"


    // $ANTLR start "rule__SetExpression__Group_1__0"
    // InternalBeeLangTestLanguage.g:8289:1: rule__SetExpression__Group_1__0 : rule__SetExpression__Group_1__0__Impl rule__SetExpression__Group_1__1 ;
    public final void rule__SetExpression__Group_1__0() throws RecognitionException {
        int rule__SetExpression__Group_1__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 588) ) { return ; }
            // InternalBeeLangTestLanguage.g:8293:1: ( rule__SetExpression__Group_1__0__Impl rule__SetExpression__Group_1__1 )
            // InternalBeeLangTestLanguage.g:8294:2: rule__SetExpression__Group_1__0__Impl rule__SetExpression__Group_1__1
            {
            pushFollow(FOLLOW_52);
            rule__SetExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SetExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 588, rule__SetExpression__Group_1__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SetExpression__Group_1__0"


    // $ANTLR start "rule__SetExpression__Group_1__0__Impl"
    // InternalBeeLangTestLanguage.g:8301:1: rule__SetExpression__Group_1__0__Impl : ( () ) ;
    public final void rule__SetExpression__Group_1__0__Impl() throws RecognitionException {
        int rule__SetExpression__Group_1__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 589) ) { return ; }
            // InternalBeeLangTestLanguage.g:8305:1: ( ( () ) )
            // InternalBeeLangTestLanguage.g:8306:1: ( () )
            {
            // InternalBeeLangTestLanguage.g:8306:1: ( () )
            // InternalBeeLangTestLanguage.g:8307:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSetExpressionAccess().getBinaryOpExpressionLeftExprAction_1_0()); 
            }
            // InternalBeeLangTestLanguage.g:8308:2: ()
            // InternalBeeLangTestLanguage.g:8308:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSetExpressionAccess().getBinaryOpExpressionLeftExprAction_1_0()); 
            }

            }


            }

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 589, rule__SetExpression__Group_1__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SetExpression__Group_1__0__Impl"


    // $ANTLR start "rule__SetExpression__Group_1__1"
    // InternalBeeLangTestLanguage.g:8316:1: rule__SetExpression__Group_1__1 : rule__SetExpression__Group_1__1__Impl rule__SetExpression__Group_1__2 ;
    public final void rule__SetExpression__Group_1__1() throws RecognitionException {
        int rule__SetExpression__Group_1__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 590) ) { return ; }
            // InternalBeeLangTestLanguage.g:8320:1: ( rule__SetExpression__Group_1__1__Impl rule__SetExpression__Group_1__2 )
            // InternalBeeLangTestLanguage.g:8321:2: rule__SetExpression__Group_1__1__Impl rule__SetExpression__Group_1__2
            {
            pushFollow(FOLLOW_19);
            rule__SetExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SetExpression__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 590, rule__SetExpression__Group_1__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SetExpression__Group_1__1"


    // $ANTLR start "rule__SetExpression__Group_1__1__Impl"
    // InternalBeeLangTestLanguage.g:8328:1: rule__SetExpression__Group_1__1__Impl : ( ( rule__SetExpression__FunctionNameAssignment_1_1 ) ) ;
    public final void rule__SetExpression__Group_1__1__Impl() throws RecognitionException {
        int rule__SetExpression__Group_1__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 591) ) { return ; }
            // InternalBeeLangTestLanguage.g:8332:1: ( ( ( rule__SetExpression__FunctionNameAssignment_1_1 ) ) )
            // InternalBeeLangTestLanguage.g:8333:1: ( ( rule__SetExpression__FunctionNameAssignment_1_1 ) )
            {
            // InternalBeeLangTestLanguage.g:8333:1: ( ( rule__SetExpression__FunctionNameAssignment_1_1 ) )
            // InternalBeeLangTestLanguage.g:8334:2: ( rule__SetExpression__FunctionNameAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSetExpressionAccess().getFunctionNameAssignment_1_1()); 
            }
            // InternalBeeLangTestLanguage.g:8335:2: ( rule__SetExpression__FunctionNameAssignment_1_1 )
            // InternalBeeLangTestLanguage.g:8335:3: rule__SetExpression__FunctionNameAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__SetExpression__FunctionNameAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSetExpressionAccess().getFunctionNameAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 591, rule__SetExpression__Group_1__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SetExpression__Group_1__1__Impl"


    // $ANTLR start "rule__SetExpression__Group_1__2"
    // InternalBeeLangTestLanguage.g:8343:1: rule__SetExpression__Group_1__2 : rule__SetExpression__Group_1__2__Impl ;
    public final void rule__SetExpression__Group_1__2() throws RecognitionException {
        int rule__SetExpression__Group_1__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 592) ) { return ; }
            // InternalBeeLangTestLanguage.g:8347:1: ( rule__SetExpression__Group_1__2__Impl )
            // InternalBeeLangTestLanguage.g:8348:2: rule__SetExpression__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SetExpression__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 592, rule__SetExpression__Group_1__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SetExpression__Group_1__2"


    // $ANTLR start "rule__SetExpression__Group_1__2__Impl"
    // InternalBeeLangTestLanguage.g:8354:1: rule__SetExpression__Group_1__2__Impl : ( ( rule__SetExpression__RightExprAssignment_1_2 ) ) ;
    public final void rule__SetExpression__Group_1__2__Impl() throws RecognitionException {
        int rule__SetExpression__Group_1__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 593) ) { return ; }
            // InternalBeeLangTestLanguage.g:8358:1: ( ( ( rule__SetExpression__RightExprAssignment_1_2 ) ) )
            // InternalBeeLangTestLanguage.g:8359:1: ( ( rule__SetExpression__RightExprAssignment_1_2 ) )
            {
            // InternalBeeLangTestLanguage.g:8359:1: ( ( rule__SetExpression__RightExprAssignment_1_2 ) )
            // InternalBeeLangTestLanguage.g:8360:2: ( rule__SetExpression__RightExprAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSetExpressionAccess().getRightExprAssignment_1_2()); 
            }
            // InternalBeeLangTestLanguage.g:8361:2: ( rule__SetExpression__RightExprAssignment_1_2 )
            // InternalBeeLangTestLanguage.g:8361:3: rule__SetExpression__RightExprAssignment_1_2
            {
            pushFollow(FOLLOW_2);
            rule__SetExpression__RightExprAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSetExpressionAccess().getRightExprAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 593, rule__SetExpression__Group_1__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SetExpression__Group_1__2__Impl"


    // $ANTLR start "rule__UnaryExpression__Group__0"
    // InternalBeeLangTestLanguage.g:8370:1: rule__UnaryExpression__Group__0 : rule__UnaryExpression__Group__0__Impl rule__UnaryExpression__Group__1 ;
    public final void rule__UnaryExpression__Group__0() throws RecognitionException {
        int rule__UnaryExpression__Group__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 594) ) { return ; }
            // InternalBeeLangTestLanguage.g:8374:1: ( rule__UnaryExpression__Group__0__Impl rule__UnaryExpression__Group__1 )
            // InternalBeeLangTestLanguage.g:8375:2: rule__UnaryExpression__Group__0__Impl rule__UnaryExpression__Group__1
            {
            pushFollow(FOLLOW_54);
            rule__UnaryExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UnaryExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 594, rule__UnaryExpression__Group__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnaryExpression__Group__0"


    // $ANTLR start "rule__UnaryExpression__Group__0__Impl"
    // InternalBeeLangTestLanguage.g:8382:1: rule__UnaryExpression__Group__0__Impl : ( () ) ;
    public final void rule__UnaryExpression__Group__0__Impl() throws RecognitionException {
        int rule__UnaryExpression__Group__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 595) ) { return ; }
            // InternalBeeLangTestLanguage.g:8386:1: ( ( () ) )
            // InternalBeeLangTestLanguage.g:8387:1: ( () )
            {
            // InternalBeeLangTestLanguage.g:8387:1: ( () )
            // InternalBeeLangTestLanguage.g:8388:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnaryExpressionAccess().getUnaryOpExpressionAction_0()); 
            }
            // InternalBeeLangTestLanguage.g:8389:2: ()
            // InternalBeeLangTestLanguage.g:8389:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnaryExpressionAccess().getUnaryOpExpressionAction_0()); 
            }

            }


            }

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 595, rule__UnaryExpression__Group__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnaryExpression__Group__0__Impl"


    // $ANTLR start "rule__UnaryExpression__Group__1"
    // InternalBeeLangTestLanguage.g:8397:1: rule__UnaryExpression__Group__1 : rule__UnaryExpression__Group__1__Impl rule__UnaryExpression__Group__2 ;
    public final void rule__UnaryExpression__Group__1() throws RecognitionException {
        int rule__UnaryExpression__Group__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 596) ) { return ; }
            // InternalBeeLangTestLanguage.g:8401:1: ( rule__UnaryExpression__Group__1__Impl rule__UnaryExpression__Group__2 )
            // InternalBeeLangTestLanguage.g:8402:2: rule__UnaryExpression__Group__1__Impl rule__UnaryExpression__Group__2
            {
            pushFollow(FOLLOW_55);
            rule__UnaryExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UnaryExpression__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 596, rule__UnaryExpression__Group__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnaryExpression__Group__1"


    // $ANTLR start "rule__UnaryExpression__Group__1__Impl"
    // InternalBeeLangTestLanguage.g:8409:1: rule__UnaryExpression__Group__1__Impl : ( ( rule__UnaryExpression__FunctionNameAssignment_1 ) ) ;
    public final void rule__UnaryExpression__Group__1__Impl() throws RecognitionException {
        int rule__UnaryExpression__Group__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 597) ) { return ; }
            // InternalBeeLangTestLanguage.g:8413:1: ( ( ( rule__UnaryExpression__FunctionNameAssignment_1 ) ) )
            // InternalBeeLangTestLanguage.g:8414:1: ( ( rule__UnaryExpression__FunctionNameAssignment_1 ) )
            {
            // InternalBeeLangTestLanguage.g:8414:1: ( ( rule__UnaryExpression__FunctionNameAssignment_1 ) )
            // InternalBeeLangTestLanguage.g:8415:2: ( rule__UnaryExpression__FunctionNameAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnaryExpressionAccess().getFunctionNameAssignment_1()); 
            }
            // InternalBeeLangTestLanguage.g:8416:2: ( rule__UnaryExpression__FunctionNameAssignment_1 )
            // InternalBeeLangTestLanguage.g:8416:3: rule__UnaryExpression__FunctionNameAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__UnaryExpression__FunctionNameAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnaryExpressionAccess().getFunctionNameAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 597, rule__UnaryExpression__Group__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnaryExpression__Group__1__Impl"


    // $ANTLR start "rule__UnaryExpression__Group__2"
    // InternalBeeLangTestLanguage.g:8424:1: rule__UnaryExpression__Group__2 : rule__UnaryExpression__Group__2__Impl ;
    public final void rule__UnaryExpression__Group__2() throws RecognitionException {
        int rule__UnaryExpression__Group__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 598) ) { return ; }
            // InternalBeeLangTestLanguage.g:8428:1: ( rule__UnaryExpression__Group__2__Impl )
            // InternalBeeLangTestLanguage.g:8429:2: rule__UnaryExpression__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__UnaryExpression__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 598, rule__UnaryExpression__Group__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnaryExpression__Group__2"


    // $ANTLR start "rule__UnaryExpression__Group__2__Impl"
    // InternalBeeLangTestLanguage.g:8435:1: rule__UnaryExpression__Group__2__Impl : ( ( rule__UnaryExpression__ExprAssignment_2 ) ) ;
    public final void rule__UnaryExpression__Group__2__Impl() throws RecognitionException {
        int rule__UnaryExpression__Group__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 599) ) { return ; }
            // InternalBeeLangTestLanguage.g:8439:1: ( ( ( rule__UnaryExpression__ExprAssignment_2 ) ) )
            // InternalBeeLangTestLanguage.g:8440:1: ( ( rule__UnaryExpression__ExprAssignment_2 ) )
            {
            // InternalBeeLangTestLanguage.g:8440:1: ( ( rule__UnaryExpression__ExprAssignment_2 ) )
            // InternalBeeLangTestLanguage.g:8441:2: ( rule__UnaryExpression__ExprAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnaryExpressionAccess().getExprAssignment_2()); 
            }
            // InternalBeeLangTestLanguage.g:8442:2: ( rule__UnaryExpression__ExprAssignment_2 )
            // InternalBeeLangTestLanguage.g:8442:3: rule__UnaryExpression__ExprAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__UnaryExpression__ExprAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnaryExpressionAccess().getExprAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 599, rule__UnaryExpression__Group__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnaryExpression__Group__2__Impl"


    // $ANTLR start "rule__PreopExpression__Group__0"
    // InternalBeeLangTestLanguage.g:8451:1: rule__PreopExpression__Group__0 : rule__PreopExpression__Group__0__Impl rule__PreopExpression__Group__1 ;
    public final void rule__PreopExpression__Group__0() throws RecognitionException {
        int rule__PreopExpression__Group__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 600) ) { return ; }
            // InternalBeeLangTestLanguage.g:8455:1: ( rule__PreopExpression__Group__0__Impl rule__PreopExpression__Group__1 )
            // InternalBeeLangTestLanguage.g:8456:2: rule__PreopExpression__Group__0__Impl rule__PreopExpression__Group__1
            {
            pushFollow(FOLLOW_19);
            rule__PreopExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PreopExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 600, rule__PreopExpression__Group__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PreopExpression__Group__0"


    // $ANTLR start "rule__PreopExpression__Group__0__Impl"
    // InternalBeeLangTestLanguage.g:8463:1: rule__PreopExpression__Group__0__Impl : ( () ) ;
    public final void rule__PreopExpression__Group__0__Impl() throws RecognitionException {
        int rule__PreopExpression__Group__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 601) ) { return ; }
            // InternalBeeLangTestLanguage.g:8467:1: ( ( () ) )
            // InternalBeeLangTestLanguage.g:8468:1: ( () )
            {
            // InternalBeeLangTestLanguage.g:8468:1: ( () )
            // InternalBeeLangTestLanguage.g:8469:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPreopExpressionAccess().getUnaryPreOpExpressionAction_0()); 
            }
            // InternalBeeLangTestLanguage.g:8470:2: ()
            // InternalBeeLangTestLanguage.g:8470:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPreopExpressionAccess().getUnaryPreOpExpressionAction_0()); 
            }

            }


            }

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 601, rule__PreopExpression__Group__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PreopExpression__Group__0__Impl"


    // $ANTLR start "rule__PreopExpression__Group__1"
    // InternalBeeLangTestLanguage.g:8478:1: rule__PreopExpression__Group__1 : rule__PreopExpression__Group__1__Impl rule__PreopExpression__Group__2 ;
    public final void rule__PreopExpression__Group__1() throws RecognitionException {
        int rule__PreopExpression__Group__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 602) ) { return ; }
            // InternalBeeLangTestLanguage.g:8482:1: ( rule__PreopExpression__Group__1__Impl rule__PreopExpression__Group__2 )
            // InternalBeeLangTestLanguage.g:8483:2: rule__PreopExpression__Group__1__Impl rule__PreopExpression__Group__2
            {
            pushFollow(FOLLOW_55);
            rule__PreopExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PreopExpression__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 602, rule__PreopExpression__Group__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PreopExpression__Group__1"


    // $ANTLR start "rule__PreopExpression__Group__1__Impl"
    // InternalBeeLangTestLanguage.g:8490:1: rule__PreopExpression__Group__1__Impl : ( ( rule__PreopExpression__FunctionNameAssignment_1 ) ) ;
    public final void rule__PreopExpression__Group__1__Impl() throws RecognitionException {
        int rule__PreopExpression__Group__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 603) ) { return ; }
            // InternalBeeLangTestLanguage.g:8494:1: ( ( ( rule__PreopExpression__FunctionNameAssignment_1 ) ) )
            // InternalBeeLangTestLanguage.g:8495:1: ( ( rule__PreopExpression__FunctionNameAssignment_1 ) )
            {
            // InternalBeeLangTestLanguage.g:8495:1: ( ( rule__PreopExpression__FunctionNameAssignment_1 ) )
            // InternalBeeLangTestLanguage.g:8496:2: ( rule__PreopExpression__FunctionNameAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPreopExpressionAccess().getFunctionNameAssignment_1()); 
            }
            // InternalBeeLangTestLanguage.g:8497:2: ( rule__PreopExpression__FunctionNameAssignment_1 )
            // InternalBeeLangTestLanguage.g:8497:3: rule__PreopExpression__FunctionNameAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__PreopExpression__FunctionNameAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPreopExpressionAccess().getFunctionNameAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 603, rule__PreopExpression__Group__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PreopExpression__Group__1__Impl"


    // $ANTLR start "rule__PreopExpression__Group__2"
    // InternalBeeLangTestLanguage.g:8505:1: rule__PreopExpression__Group__2 : rule__PreopExpression__Group__2__Impl ;
    public final void rule__PreopExpression__Group__2() throws RecognitionException {
        int rule__PreopExpression__Group__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 604) ) { return ; }
            // InternalBeeLangTestLanguage.g:8509:1: ( rule__PreopExpression__Group__2__Impl )
            // InternalBeeLangTestLanguage.g:8510:2: rule__PreopExpression__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PreopExpression__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 604, rule__PreopExpression__Group__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PreopExpression__Group__2"


    // $ANTLR start "rule__PreopExpression__Group__2__Impl"
    // InternalBeeLangTestLanguage.g:8516:1: rule__PreopExpression__Group__2__Impl : ( ( rule__PreopExpression__ExprAssignment_2 ) ) ;
    public final void rule__PreopExpression__Group__2__Impl() throws RecognitionException {
        int rule__PreopExpression__Group__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 605) ) { return ; }
            // InternalBeeLangTestLanguage.g:8520:1: ( ( ( rule__PreopExpression__ExprAssignment_2 ) ) )
            // InternalBeeLangTestLanguage.g:8521:1: ( ( rule__PreopExpression__ExprAssignment_2 ) )
            {
            // InternalBeeLangTestLanguage.g:8521:1: ( ( rule__PreopExpression__ExprAssignment_2 ) )
            // InternalBeeLangTestLanguage.g:8522:2: ( rule__PreopExpression__ExprAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPreopExpressionAccess().getExprAssignment_2()); 
            }
            // InternalBeeLangTestLanguage.g:8523:2: ( rule__PreopExpression__ExprAssignment_2 )
            // InternalBeeLangTestLanguage.g:8523:3: rule__PreopExpression__ExprAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__PreopExpression__ExprAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPreopExpressionAccess().getExprAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 605, rule__PreopExpression__Group__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PreopExpression__Group__2__Impl"


    // $ANTLR start "rule__PostopExpression__Group__0"
    // InternalBeeLangTestLanguage.g:8532:1: rule__PostopExpression__Group__0 : rule__PostopExpression__Group__0__Impl rule__PostopExpression__Group__1 ;
    public final void rule__PostopExpression__Group__0() throws RecognitionException {
        int rule__PostopExpression__Group__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 606) ) { return ; }
            // InternalBeeLangTestLanguage.g:8536:1: ( rule__PostopExpression__Group__0__Impl rule__PostopExpression__Group__1 )
            // InternalBeeLangTestLanguage.g:8537:2: rule__PostopExpression__Group__0__Impl rule__PostopExpression__Group__1
            {
            pushFollow(FOLLOW_56);
            rule__PostopExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PostopExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 606, rule__PostopExpression__Group__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PostopExpression__Group__0"


    // $ANTLR start "rule__PostopExpression__Group__0__Impl"
    // InternalBeeLangTestLanguage.g:8544:1: rule__PostopExpression__Group__0__Impl : ( ruleInfixExpression ) ;
    public final void rule__PostopExpression__Group__0__Impl() throws RecognitionException {
        int rule__PostopExpression__Group__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 607) ) { return ; }
            // InternalBeeLangTestLanguage.g:8548:1: ( ( ruleInfixExpression ) )
            // InternalBeeLangTestLanguage.g:8549:1: ( ruleInfixExpression )
            {
            // InternalBeeLangTestLanguage.g:8549:1: ( ruleInfixExpression )
            // InternalBeeLangTestLanguage.g:8550:2: ruleInfixExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPostopExpressionAccess().getInfixExpressionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleInfixExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPostopExpressionAccess().getInfixExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 607, rule__PostopExpression__Group__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PostopExpression__Group__0__Impl"


    // $ANTLR start "rule__PostopExpression__Group__1"
    // InternalBeeLangTestLanguage.g:8559:1: rule__PostopExpression__Group__1 : rule__PostopExpression__Group__1__Impl ;
    public final void rule__PostopExpression__Group__1() throws RecognitionException {
        int rule__PostopExpression__Group__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 608) ) { return ; }
            // InternalBeeLangTestLanguage.g:8563:1: ( rule__PostopExpression__Group__1__Impl )
            // InternalBeeLangTestLanguage.g:8564:2: rule__PostopExpression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PostopExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 608, rule__PostopExpression__Group__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PostopExpression__Group__1"


    // $ANTLR start "rule__PostopExpression__Group__1__Impl"
    // InternalBeeLangTestLanguage.g:8570:1: rule__PostopExpression__Group__1__Impl : ( ( rule__PostopExpression__Group_1__0 )? ) ;
    public final void rule__PostopExpression__Group__1__Impl() throws RecognitionException {
        int rule__PostopExpression__Group__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 609) ) { return ; }
            // InternalBeeLangTestLanguage.g:8574:1: ( ( ( rule__PostopExpression__Group_1__0 )? ) )
            // InternalBeeLangTestLanguage.g:8575:1: ( ( rule__PostopExpression__Group_1__0 )? )
            {
            // InternalBeeLangTestLanguage.g:8575:1: ( ( rule__PostopExpression__Group_1__0 )? )
            // InternalBeeLangTestLanguage.g:8576:2: ( rule__PostopExpression__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPostopExpressionAccess().getGroup_1()); 
            }
            // InternalBeeLangTestLanguage.g:8577:2: ( rule__PostopExpression__Group_1__0 )?
            int alt71=2;
            int LA71_0 = input.LA(1);

            if ( (LA71_0==37) ) {
                int LA71_1 = input.LA(2);

                if ( (synpred100_InternalBeeLangTestLanguage()) ) {
                    alt71=1;
                }
            }
            else if ( (LA71_0==36) ) {
                int LA71_2 = input.LA(2);

                if ( (synpred100_InternalBeeLangTestLanguage()) ) {
                    alt71=1;
                }
            }
            switch (alt71) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:8577:3: rule__PostopExpression__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__PostopExpression__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPostopExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 609, rule__PostopExpression__Group__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PostopExpression__Group__1__Impl"


    // $ANTLR start "rule__PostopExpression__Group_1__0"
    // InternalBeeLangTestLanguage.g:8586:1: rule__PostopExpression__Group_1__0 : rule__PostopExpression__Group_1__0__Impl rule__PostopExpression__Group_1__1 ;
    public final void rule__PostopExpression__Group_1__0() throws RecognitionException {
        int rule__PostopExpression__Group_1__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 610) ) { return ; }
            // InternalBeeLangTestLanguage.g:8590:1: ( rule__PostopExpression__Group_1__0__Impl rule__PostopExpression__Group_1__1 )
            // InternalBeeLangTestLanguage.g:8591:2: rule__PostopExpression__Group_1__0__Impl rule__PostopExpression__Group_1__1
            {
            pushFollow(FOLLOW_56);
            rule__PostopExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PostopExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 610, rule__PostopExpression__Group_1__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PostopExpression__Group_1__0"


    // $ANTLR start "rule__PostopExpression__Group_1__0__Impl"
    // InternalBeeLangTestLanguage.g:8598:1: rule__PostopExpression__Group_1__0__Impl : ( () ) ;
    public final void rule__PostopExpression__Group_1__0__Impl() throws RecognitionException {
        int rule__PostopExpression__Group_1__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 611) ) { return ; }
            // InternalBeeLangTestLanguage.g:8602:1: ( ( () ) )
            // InternalBeeLangTestLanguage.g:8603:1: ( () )
            {
            // InternalBeeLangTestLanguage.g:8603:1: ( () )
            // InternalBeeLangTestLanguage.g:8604:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPostopExpressionAccess().getUnaryPostOpExpressionExprAction_1_0()); 
            }
            // InternalBeeLangTestLanguage.g:8605:2: ()
            // InternalBeeLangTestLanguage.g:8605:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPostopExpressionAccess().getUnaryPostOpExpressionExprAction_1_0()); 
            }

            }


            }

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 611, rule__PostopExpression__Group_1__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PostopExpression__Group_1__0__Impl"


    // $ANTLR start "rule__PostopExpression__Group_1__1"
    // InternalBeeLangTestLanguage.g:8613:1: rule__PostopExpression__Group_1__1 : rule__PostopExpression__Group_1__1__Impl ;
    public final void rule__PostopExpression__Group_1__1() throws RecognitionException {
        int rule__PostopExpression__Group_1__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 612) ) { return ; }
            // InternalBeeLangTestLanguage.g:8617:1: ( rule__PostopExpression__Group_1__1__Impl )
            // InternalBeeLangTestLanguage.g:8618:2: rule__PostopExpression__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PostopExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 612, rule__PostopExpression__Group_1__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PostopExpression__Group_1__1"


    // $ANTLR start "rule__PostopExpression__Group_1__1__Impl"
    // InternalBeeLangTestLanguage.g:8624:1: rule__PostopExpression__Group_1__1__Impl : ( ( rule__PostopExpression__FunctionNameAssignment_1_1 ) ) ;
    public final void rule__PostopExpression__Group_1__1__Impl() throws RecognitionException {
        int rule__PostopExpression__Group_1__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 613) ) { return ; }
            // InternalBeeLangTestLanguage.g:8628:1: ( ( ( rule__PostopExpression__FunctionNameAssignment_1_1 ) ) )
            // InternalBeeLangTestLanguage.g:8629:1: ( ( rule__PostopExpression__FunctionNameAssignment_1_1 ) )
            {
            // InternalBeeLangTestLanguage.g:8629:1: ( ( rule__PostopExpression__FunctionNameAssignment_1_1 ) )
            // InternalBeeLangTestLanguage.g:8630:2: ( rule__PostopExpression__FunctionNameAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPostopExpressionAccess().getFunctionNameAssignment_1_1()); 
            }
            // InternalBeeLangTestLanguage.g:8631:2: ( rule__PostopExpression__FunctionNameAssignment_1_1 )
            // InternalBeeLangTestLanguage.g:8631:3: rule__PostopExpression__FunctionNameAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__PostopExpression__FunctionNameAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPostopExpressionAccess().getFunctionNameAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 613, rule__PostopExpression__Group_1__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PostopExpression__Group_1__1__Impl"


    // $ANTLR start "rule__InfixExpression__Group__0"
    // InternalBeeLangTestLanguage.g:8640:1: rule__InfixExpression__Group__0 : rule__InfixExpression__Group__0__Impl rule__InfixExpression__Group__1 ;
    public final void rule__InfixExpression__Group__0() throws RecognitionException {
        int rule__InfixExpression__Group__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 614) ) { return ; }
            // InternalBeeLangTestLanguage.g:8644:1: ( rule__InfixExpression__Group__0__Impl rule__InfixExpression__Group__1 )
            // InternalBeeLangTestLanguage.g:8645:2: rule__InfixExpression__Group__0__Impl rule__InfixExpression__Group__1
            {
            pushFollow(FOLLOW_57);
            rule__InfixExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__InfixExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 614, rule__InfixExpression__Group__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InfixExpression__Group__0"


    // $ANTLR start "rule__InfixExpression__Group__0__Impl"
    // InternalBeeLangTestLanguage.g:8652:1: rule__InfixExpression__Group__0__Impl : ( ruleCallExpression ) ;
    public final void rule__InfixExpression__Group__0__Impl() throws RecognitionException {
        int rule__InfixExpression__Group__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 615) ) { return ; }
            // InternalBeeLangTestLanguage.g:8656:1: ( ( ruleCallExpression ) )
            // InternalBeeLangTestLanguage.g:8657:1: ( ruleCallExpression )
            {
            // InternalBeeLangTestLanguage.g:8657:1: ( ruleCallExpression )
            // InternalBeeLangTestLanguage.g:8658:2: ruleCallExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInfixExpressionAccess().getCallExpressionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleCallExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInfixExpressionAccess().getCallExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 615, rule__InfixExpression__Group__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InfixExpression__Group__0__Impl"


    // $ANTLR start "rule__InfixExpression__Group__1"
    // InternalBeeLangTestLanguage.g:8667:1: rule__InfixExpression__Group__1 : rule__InfixExpression__Group__1__Impl ;
    public final void rule__InfixExpression__Group__1() throws RecognitionException {
        int rule__InfixExpression__Group__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 616) ) { return ; }
            // InternalBeeLangTestLanguage.g:8671:1: ( rule__InfixExpression__Group__1__Impl )
            // InternalBeeLangTestLanguage.g:8672:2: rule__InfixExpression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__InfixExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 616, rule__InfixExpression__Group__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InfixExpression__Group__1"


    // $ANTLR start "rule__InfixExpression__Group__1__Impl"
    // InternalBeeLangTestLanguage.g:8678:1: rule__InfixExpression__Group__1__Impl : ( ( rule__InfixExpression__Alternatives_1 )* ) ;
    public final void rule__InfixExpression__Group__1__Impl() throws RecognitionException {
        int rule__InfixExpression__Group__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 617) ) { return ; }
            // InternalBeeLangTestLanguage.g:8682:1: ( ( ( rule__InfixExpression__Alternatives_1 )* ) )
            // InternalBeeLangTestLanguage.g:8683:1: ( ( rule__InfixExpression__Alternatives_1 )* )
            {
            // InternalBeeLangTestLanguage.g:8683:1: ( ( rule__InfixExpression__Alternatives_1 )* )
            // InternalBeeLangTestLanguage.g:8684:2: ( rule__InfixExpression__Alternatives_1 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInfixExpressionAccess().getAlternatives_1()); 
            }
            // InternalBeeLangTestLanguage.g:8685:2: ( rule__InfixExpression__Alternatives_1 )*
            loop72:
            do {
                int alt72=2;
                int LA72_0 = input.LA(1);

                if ( (LA72_0==66) ) {
                    int LA72_2 = input.LA(2);

                    if ( (synpred101_InternalBeeLangTestLanguage()) ) {
                        alt72=1;
                    }


                }
                else if ( (LA72_0==67) ) {
                    int LA72_3 = input.LA(2);

                    if ( (synpred101_InternalBeeLangTestLanguage()) ) {
                        alt72=1;
                    }


                }


                switch (alt72) {
            	case 1 :
            	    // InternalBeeLangTestLanguage.g:8685:3: rule__InfixExpression__Alternatives_1
            	    {
            	    pushFollow(FOLLOW_58);
            	    rule__InfixExpression__Alternatives_1();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop72;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInfixExpressionAccess().getAlternatives_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 617, rule__InfixExpression__Group__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InfixExpression__Group__1__Impl"


    // $ANTLR start "rule__InfixExpression__Group_1_0__0"
    // InternalBeeLangTestLanguage.g:8694:1: rule__InfixExpression__Group_1_0__0 : rule__InfixExpression__Group_1_0__0__Impl rule__InfixExpression__Group_1_0__1 ;
    public final void rule__InfixExpression__Group_1_0__0() throws RecognitionException {
        int rule__InfixExpression__Group_1_0__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 618) ) { return ; }
            // InternalBeeLangTestLanguage.g:8698:1: ( rule__InfixExpression__Group_1_0__0__Impl rule__InfixExpression__Group_1_0__1 )
            // InternalBeeLangTestLanguage.g:8699:2: rule__InfixExpression__Group_1_0__0__Impl rule__InfixExpression__Group_1_0__1
            {
            pushFollow(FOLLOW_59);
            rule__InfixExpression__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__InfixExpression__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 618, rule__InfixExpression__Group_1_0__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InfixExpression__Group_1_0__0"


    // $ANTLR start "rule__InfixExpression__Group_1_0__0__Impl"
    // InternalBeeLangTestLanguage.g:8706:1: rule__InfixExpression__Group_1_0__0__Impl : ( () ) ;
    public final void rule__InfixExpression__Group_1_0__0__Impl() throws RecognitionException {
        int rule__InfixExpression__Group_1_0__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 619) ) { return ; }
            // InternalBeeLangTestLanguage.g:8710:1: ( ( () ) )
            // InternalBeeLangTestLanguage.g:8711:1: ( () )
            {
            // InternalBeeLangTestLanguage.g:8711:1: ( () )
            // InternalBeeLangTestLanguage.g:8712:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInfixExpressionAccess().getCallFeatureFuncExprAction_1_0_0()); 
            }
            // InternalBeeLangTestLanguage.g:8713:2: ()
            // InternalBeeLangTestLanguage.g:8713:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInfixExpressionAccess().getCallFeatureFuncExprAction_1_0_0()); 
            }

            }


            }

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 619, rule__InfixExpression__Group_1_0__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InfixExpression__Group_1_0__0__Impl"


    // $ANTLR start "rule__InfixExpression__Group_1_0__1"
    // InternalBeeLangTestLanguage.g:8721:1: rule__InfixExpression__Group_1_0__1 : rule__InfixExpression__Group_1_0__1__Impl rule__InfixExpression__Group_1_0__2 ;
    public final void rule__InfixExpression__Group_1_0__1() throws RecognitionException {
        int rule__InfixExpression__Group_1_0__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 620) ) { return ; }
            // InternalBeeLangTestLanguage.g:8725:1: ( rule__InfixExpression__Group_1_0__1__Impl rule__InfixExpression__Group_1_0__2 )
            // InternalBeeLangTestLanguage.g:8726:2: rule__InfixExpression__Group_1_0__1__Impl rule__InfixExpression__Group_1_0__2
            {
            pushFollow(FOLLOW_9);
            rule__InfixExpression__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__InfixExpression__Group_1_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 620, rule__InfixExpression__Group_1_0__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InfixExpression__Group_1_0__1"


    // $ANTLR start "rule__InfixExpression__Group_1_0__1__Impl"
    // InternalBeeLangTestLanguage.g:8733:1: rule__InfixExpression__Group_1_0__1__Impl : ( '.' ) ;
    public final void rule__InfixExpression__Group_1_0__1__Impl() throws RecognitionException {
        int rule__InfixExpression__Group_1_0__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 621) ) { return ; }
            // InternalBeeLangTestLanguage.g:8737:1: ( ( '.' ) )
            // InternalBeeLangTestLanguage.g:8738:1: ( '.' )
            {
            // InternalBeeLangTestLanguage.g:8738:1: ( '.' )
            // InternalBeeLangTestLanguage.g:8739:2: '.'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInfixExpressionAccess().getFullStopKeyword_1_0_1()); 
            }
            match(input,66,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInfixExpressionAccess().getFullStopKeyword_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 621, rule__InfixExpression__Group_1_0__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InfixExpression__Group_1_0__1__Impl"


    // $ANTLR start "rule__InfixExpression__Group_1_0__2"
    // InternalBeeLangTestLanguage.g:8748:1: rule__InfixExpression__Group_1_0__2 : rule__InfixExpression__Group_1_0__2__Impl rule__InfixExpression__Group_1_0__3 ;
    public final void rule__InfixExpression__Group_1_0__2() throws RecognitionException {
        int rule__InfixExpression__Group_1_0__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 622) ) { return ; }
            // InternalBeeLangTestLanguage.g:8752:1: ( rule__InfixExpression__Group_1_0__2__Impl rule__InfixExpression__Group_1_0__3 )
            // InternalBeeLangTestLanguage.g:8753:2: rule__InfixExpression__Group_1_0__2__Impl rule__InfixExpression__Group_1_0__3
            {
            pushFollow(FOLLOW_60);
            rule__InfixExpression__Group_1_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__InfixExpression__Group_1_0__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 622, rule__InfixExpression__Group_1_0__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InfixExpression__Group_1_0__2"


    // $ANTLR start "rule__InfixExpression__Group_1_0__2__Impl"
    // InternalBeeLangTestLanguage.g:8760:1: rule__InfixExpression__Group_1_0__2__Impl : ( ( rule__InfixExpression__NameAssignment_1_0_2 ) ) ;
    public final void rule__InfixExpression__Group_1_0__2__Impl() throws RecognitionException {
        int rule__InfixExpression__Group_1_0__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 623) ) { return ; }
            // InternalBeeLangTestLanguage.g:8764:1: ( ( ( rule__InfixExpression__NameAssignment_1_0_2 ) ) )
            // InternalBeeLangTestLanguage.g:8765:1: ( ( rule__InfixExpression__NameAssignment_1_0_2 ) )
            {
            // InternalBeeLangTestLanguage.g:8765:1: ( ( rule__InfixExpression__NameAssignment_1_0_2 ) )
            // InternalBeeLangTestLanguage.g:8766:2: ( rule__InfixExpression__NameAssignment_1_0_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInfixExpressionAccess().getNameAssignment_1_0_2()); 
            }
            // InternalBeeLangTestLanguage.g:8767:2: ( rule__InfixExpression__NameAssignment_1_0_2 )
            // InternalBeeLangTestLanguage.g:8767:3: rule__InfixExpression__NameAssignment_1_0_2
            {
            pushFollow(FOLLOW_2);
            rule__InfixExpression__NameAssignment_1_0_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInfixExpressionAccess().getNameAssignment_1_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 623, rule__InfixExpression__Group_1_0__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InfixExpression__Group_1_0__2__Impl"


    // $ANTLR start "rule__InfixExpression__Group_1_0__3"
    // InternalBeeLangTestLanguage.g:8775:1: rule__InfixExpression__Group_1_0__3 : rule__InfixExpression__Group_1_0__3__Impl rule__InfixExpression__Group_1_0__4 ;
    public final void rule__InfixExpression__Group_1_0__3() throws RecognitionException {
        int rule__InfixExpression__Group_1_0__3_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 624) ) { return ; }
            // InternalBeeLangTestLanguage.g:8779:1: ( rule__InfixExpression__Group_1_0__3__Impl rule__InfixExpression__Group_1_0__4 )
            // InternalBeeLangTestLanguage.g:8780:2: rule__InfixExpression__Group_1_0__3__Impl rule__InfixExpression__Group_1_0__4
            {
            pushFollow(FOLLOW_61);
            rule__InfixExpression__Group_1_0__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__InfixExpression__Group_1_0__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 624, rule__InfixExpression__Group_1_0__3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InfixExpression__Group_1_0__3"


    // $ANTLR start "rule__InfixExpression__Group_1_0__3__Impl"
    // InternalBeeLangTestLanguage.g:8787:1: rule__InfixExpression__Group_1_0__3__Impl : ( '(' ) ;
    public final void rule__InfixExpression__Group_1_0__3__Impl() throws RecognitionException {
        int rule__InfixExpression__Group_1_0__3__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 625) ) { return ; }
            // InternalBeeLangTestLanguage.g:8791:1: ( ( '(' ) )
            // InternalBeeLangTestLanguage.g:8792:1: ( '(' )
            {
            // InternalBeeLangTestLanguage.g:8792:1: ( '(' )
            // InternalBeeLangTestLanguage.g:8793:2: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInfixExpressionAccess().getLeftParenthesisKeyword_1_0_3()); 
            }
            match(input,60,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInfixExpressionAccess().getLeftParenthesisKeyword_1_0_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 625, rule__InfixExpression__Group_1_0__3__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InfixExpression__Group_1_0__3__Impl"


    // $ANTLR start "rule__InfixExpression__Group_1_0__4"
    // InternalBeeLangTestLanguage.g:8802:1: rule__InfixExpression__Group_1_0__4 : rule__InfixExpression__Group_1_0__4__Impl rule__InfixExpression__Group_1_0__5 ;
    public final void rule__InfixExpression__Group_1_0__4() throws RecognitionException {
        int rule__InfixExpression__Group_1_0__4_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 626) ) { return ; }
            // InternalBeeLangTestLanguage.g:8806:1: ( rule__InfixExpression__Group_1_0__4__Impl rule__InfixExpression__Group_1_0__5 )
            // InternalBeeLangTestLanguage.g:8807:2: rule__InfixExpression__Group_1_0__4__Impl rule__InfixExpression__Group_1_0__5
            {
            pushFollow(FOLLOW_61);
            rule__InfixExpression__Group_1_0__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__InfixExpression__Group_1_0__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 626, rule__InfixExpression__Group_1_0__4_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InfixExpression__Group_1_0__4"


    // $ANTLR start "rule__InfixExpression__Group_1_0__4__Impl"
    // InternalBeeLangTestLanguage.g:8814:1: rule__InfixExpression__Group_1_0__4__Impl : ( ( rule__InfixExpression__ParameterListAssignment_1_0_4 )? ) ;
    public final void rule__InfixExpression__Group_1_0__4__Impl() throws RecognitionException {
        int rule__InfixExpression__Group_1_0__4__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 627) ) { return ; }
            // InternalBeeLangTestLanguage.g:8818:1: ( ( ( rule__InfixExpression__ParameterListAssignment_1_0_4 )? ) )
            // InternalBeeLangTestLanguage.g:8819:1: ( ( rule__InfixExpression__ParameterListAssignment_1_0_4 )? )
            {
            // InternalBeeLangTestLanguage.g:8819:1: ( ( rule__InfixExpression__ParameterListAssignment_1_0_4 )? )
            // InternalBeeLangTestLanguage.g:8820:2: ( rule__InfixExpression__ParameterListAssignment_1_0_4 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInfixExpressionAccess().getParameterListAssignment_1_0_4()); 
            }
            // InternalBeeLangTestLanguage.g:8821:2: ( rule__InfixExpression__ParameterListAssignment_1_0_4 )?
            int alt73=2;
            int LA73_0 = input.LA(1);

            if ( (LA73_0==RULE_STRING||LA73_0==RULE_ID||LA73_0==13||LA73_0==28||LA73_0==31||(LA73_0>=35 && LA73_0<=44)||LA73_0==60||LA73_0==63||LA73_0==69||(LA73_0>=71 && LA73_0<=72)||LA73_0==75) ) {
                alt73=1;
            }
            switch (alt73) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:8821:3: rule__InfixExpression__ParameterListAssignment_1_0_4
                    {
                    pushFollow(FOLLOW_2);
                    rule__InfixExpression__ParameterListAssignment_1_0_4();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInfixExpressionAccess().getParameterListAssignment_1_0_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 627, rule__InfixExpression__Group_1_0__4__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InfixExpression__Group_1_0__4__Impl"


    // $ANTLR start "rule__InfixExpression__Group_1_0__5"
    // InternalBeeLangTestLanguage.g:8829:1: rule__InfixExpression__Group_1_0__5 : rule__InfixExpression__Group_1_0__5__Impl ;
    public final void rule__InfixExpression__Group_1_0__5() throws RecognitionException {
        int rule__InfixExpression__Group_1_0__5_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 628) ) { return ; }
            // InternalBeeLangTestLanguage.g:8833:1: ( rule__InfixExpression__Group_1_0__5__Impl )
            // InternalBeeLangTestLanguage.g:8834:2: rule__InfixExpression__Group_1_0__5__Impl
            {
            pushFollow(FOLLOW_2);
            rule__InfixExpression__Group_1_0__5__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 628, rule__InfixExpression__Group_1_0__5_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InfixExpression__Group_1_0__5"


    // $ANTLR start "rule__InfixExpression__Group_1_0__5__Impl"
    // InternalBeeLangTestLanguage.g:8840:1: rule__InfixExpression__Group_1_0__5__Impl : ( ')' ) ;
    public final void rule__InfixExpression__Group_1_0__5__Impl() throws RecognitionException {
        int rule__InfixExpression__Group_1_0__5__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 629) ) { return ; }
            // InternalBeeLangTestLanguage.g:8844:1: ( ( ')' ) )
            // InternalBeeLangTestLanguage.g:8845:1: ( ')' )
            {
            // InternalBeeLangTestLanguage.g:8845:1: ( ')' )
            // InternalBeeLangTestLanguage.g:8846:2: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInfixExpressionAccess().getRightParenthesisKeyword_1_0_5()); 
            }
            match(input,61,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInfixExpressionAccess().getRightParenthesisKeyword_1_0_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 629, rule__InfixExpression__Group_1_0__5__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InfixExpression__Group_1_0__5__Impl"


    // $ANTLR start "rule__InfixExpression__Group_1_1__0"
    // InternalBeeLangTestLanguage.g:8856:1: rule__InfixExpression__Group_1_1__0 : rule__InfixExpression__Group_1_1__0__Impl rule__InfixExpression__Group_1_1__1 ;
    public final void rule__InfixExpression__Group_1_1__0() throws RecognitionException {
        int rule__InfixExpression__Group_1_1__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 630) ) { return ; }
            // InternalBeeLangTestLanguage.g:8860:1: ( rule__InfixExpression__Group_1_1__0__Impl rule__InfixExpression__Group_1_1__1 )
            // InternalBeeLangTestLanguage.g:8861:2: rule__InfixExpression__Group_1_1__0__Impl rule__InfixExpression__Group_1_1__1
            {
            pushFollow(FOLLOW_62);
            rule__InfixExpression__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__InfixExpression__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 630, rule__InfixExpression__Group_1_1__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InfixExpression__Group_1_1__0"


    // $ANTLR start "rule__InfixExpression__Group_1_1__0__Impl"
    // InternalBeeLangTestLanguage.g:8868:1: rule__InfixExpression__Group_1_1__0__Impl : ( () ) ;
    public final void rule__InfixExpression__Group_1_1__0__Impl() throws RecognitionException {
        int rule__InfixExpression__Group_1_1__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 631) ) { return ; }
            // InternalBeeLangTestLanguage.g:8872:1: ( ( () ) )
            // InternalBeeLangTestLanguage.g:8873:1: ( () )
            {
            // InternalBeeLangTestLanguage.g:8873:1: ( () )
            // InternalBeeLangTestLanguage.g:8874:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInfixExpressionAccess().getAtExpressionObjExprAction_1_1_0()); 
            }
            // InternalBeeLangTestLanguage.g:8875:2: ()
            // InternalBeeLangTestLanguage.g:8875:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInfixExpressionAccess().getAtExpressionObjExprAction_1_1_0()); 
            }

            }


            }

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 631, rule__InfixExpression__Group_1_1__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InfixExpression__Group_1_1__0__Impl"


    // $ANTLR start "rule__InfixExpression__Group_1_1__1"
    // InternalBeeLangTestLanguage.g:8883:1: rule__InfixExpression__Group_1_1__1 : rule__InfixExpression__Group_1_1__1__Impl rule__InfixExpression__Group_1_1__2 ;
    public final void rule__InfixExpression__Group_1_1__1() throws RecognitionException {
        int rule__InfixExpression__Group_1_1__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 632) ) { return ; }
            // InternalBeeLangTestLanguage.g:8887:1: ( rule__InfixExpression__Group_1_1__1__Impl rule__InfixExpression__Group_1_1__2 )
            // InternalBeeLangTestLanguage.g:8888:2: rule__InfixExpression__Group_1_1__1__Impl rule__InfixExpression__Group_1_1__2
            {
            pushFollow(FOLLOW_19);
            rule__InfixExpression__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__InfixExpression__Group_1_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 632, rule__InfixExpression__Group_1_1__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InfixExpression__Group_1_1__1"


    // $ANTLR start "rule__InfixExpression__Group_1_1__1__Impl"
    // InternalBeeLangTestLanguage.g:8895:1: rule__InfixExpression__Group_1_1__1__Impl : ( '[' ) ;
    public final void rule__InfixExpression__Group_1_1__1__Impl() throws RecognitionException {
        int rule__InfixExpression__Group_1_1__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 633) ) { return ; }
            // InternalBeeLangTestLanguage.g:8899:1: ( ( '[' ) )
            // InternalBeeLangTestLanguage.g:8900:1: ( '[' )
            {
            // InternalBeeLangTestLanguage.g:8900:1: ( '[' )
            // InternalBeeLangTestLanguage.g:8901:2: '['
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInfixExpressionAccess().getLeftSquareBracketKeyword_1_1_1()); 
            }
            match(input,67,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInfixExpressionAccess().getLeftSquareBracketKeyword_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 633, rule__InfixExpression__Group_1_1__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InfixExpression__Group_1_1__1__Impl"


    // $ANTLR start "rule__InfixExpression__Group_1_1__2"
    // InternalBeeLangTestLanguage.g:8910:1: rule__InfixExpression__Group_1_1__2 : rule__InfixExpression__Group_1_1__2__Impl rule__InfixExpression__Group_1_1__3 ;
    public final void rule__InfixExpression__Group_1_1__2() throws RecognitionException {
        int rule__InfixExpression__Group_1_1__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 634) ) { return ; }
            // InternalBeeLangTestLanguage.g:8914:1: ( rule__InfixExpression__Group_1_1__2__Impl rule__InfixExpression__Group_1_1__3 )
            // InternalBeeLangTestLanguage.g:8915:2: rule__InfixExpression__Group_1_1__2__Impl rule__InfixExpression__Group_1_1__3
            {
            pushFollow(FOLLOW_63);
            rule__InfixExpression__Group_1_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__InfixExpression__Group_1_1__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 634, rule__InfixExpression__Group_1_1__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InfixExpression__Group_1_1__2"


    // $ANTLR start "rule__InfixExpression__Group_1_1__2__Impl"
    // InternalBeeLangTestLanguage.g:8922:1: rule__InfixExpression__Group_1_1__2__Impl : ( ( rule__InfixExpression__IndexExprAssignment_1_1_2 ) ) ;
    public final void rule__InfixExpression__Group_1_1__2__Impl() throws RecognitionException {
        int rule__InfixExpression__Group_1_1__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 635) ) { return ; }
            // InternalBeeLangTestLanguage.g:8926:1: ( ( ( rule__InfixExpression__IndexExprAssignment_1_1_2 ) ) )
            // InternalBeeLangTestLanguage.g:8927:1: ( ( rule__InfixExpression__IndexExprAssignment_1_1_2 ) )
            {
            // InternalBeeLangTestLanguage.g:8927:1: ( ( rule__InfixExpression__IndexExprAssignment_1_1_2 ) )
            // InternalBeeLangTestLanguage.g:8928:2: ( rule__InfixExpression__IndexExprAssignment_1_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInfixExpressionAccess().getIndexExprAssignment_1_1_2()); 
            }
            // InternalBeeLangTestLanguage.g:8929:2: ( rule__InfixExpression__IndexExprAssignment_1_1_2 )
            // InternalBeeLangTestLanguage.g:8929:3: rule__InfixExpression__IndexExprAssignment_1_1_2
            {
            pushFollow(FOLLOW_2);
            rule__InfixExpression__IndexExprAssignment_1_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInfixExpressionAccess().getIndexExprAssignment_1_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 635, rule__InfixExpression__Group_1_1__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InfixExpression__Group_1_1__2__Impl"


    // $ANTLR start "rule__InfixExpression__Group_1_1__3"
    // InternalBeeLangTestLanguage.g:8937:1: rule__InfixExpression__Group_1_1__3 : rule__InfixExpression__Group_1_1__3__Impl ;
    public final void rule__InfixExpression__Group_1_1__3() throws RecognitionException {
        int rule__InfixExpression__Group_1_1__3_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 636) ) { return ; }
            // InternalBeeLangTestLanguage.g:8941:1: ( rule__InfixExpression__Group_1_1__3__Impl )
            // InternalBeeLangTestLanguage.g:8942:2: rule__InfixExpression__Group_1_1__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__InfixExpression__Group_1_1__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 636, rule__InfixExpression__Group_1_1__3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InfixExpression__Group_1_1__3"


    // $ANTLR start "rule__InfixExpression__Group_1_1__3__Impl"
    // InternalBeeLangTestLanguage.g:8948:1: rule__InfixExpression__Group_1_1__3__Impl : ( ']' ) ;
    public final void rule__InfixExpression__Group_1_1__3__Impl() throws RecognitionException {
        int rule__InfixExpression__Group_1_1__3__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 637) ) { return ; }
            // InternalBeeLangTestLanguage.g:8952:1: ( ( ']' ) )
            // InternalBeeLangTestLanguage.g:8953:1: ( ']' )
            {
            // InternalBeeLangTestLanguage.g:8953:1: ( ']' )
            // InternalBeeLangTestLanguage.g:8954:2: ']'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInfixExpressionAccess().getRightSquareBracketKeyword_1_1_3()); 
            }
            match(input,68,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInfixExpressionAccess().getRightSquareBracketKeyword_1_1_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 637, rule__InfixExpression__Group_1_1__3__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InfixExpression__Group_1_1__3__Impl"


    // $ANTLR start "rule__InfixExpression__Group_1_2__0"
    // InternalBeeLangTestLanguage.g:8964:1: rule__InfixExpression__Group_1_2__0 : rule__InfixExpression__Group_1_2__0__Impl rule__InfixExpression__Group_1_2__1 ;
    public final void rule__InfixExpression__Group_1_2__0() throws RecognitionException {
        int rule__InfixExpression__Group_1_2__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 638) ) { return ; }
            // InternalBeeLangTestLanguage.g:8968:1: ( rule__InfixExpression__Group_1_2__0__Impl rule__InfixExpression__Group_1_2__1 )
            // InternalBeeLangTestLanguage.g:8969:2: rule__InfixExpression__Group_1_2__0__Impl rule__InfixExpression__Group_1_2__1
            {
            pushFollow(FOLLOW_57);
            rule__InfixExpression__Group_1_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__InfixExpression__Group_1_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 638, rule__InfixExpression__Group_1_2__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InfixExpression__Group_1_2__0"


    // $ANTLR start "rule__InfixExpression__Group_1_2__0__Impl"
    // InternalBeeLangTestLanguage.g:8976:1: rule__InfixExpression__Group_1_2__0__Impl : ( () ) ;
    public final void rule__InfixExpression__Group_1_2__0__Impl() throws RecognitionException {
        int rule__InfixExpression__Group_1_2__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 639) ) { return ; }
            // InternalBeeLangTestLanguage.g:8980:1: ( ( () ) )
            // InternalBeeLangTestLanguage.g:8981:1: ( () )
            {
            // InternalBeeLangTestLanguage.g:8981:1: ( () )
            // InternalBeeLangTestLanguage.g:8982:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInfixExpressionAccess().getFeatureExpressionObjExprAction_1_2_0()); 
            }
            // InternalBeeLangTestLanguage.g:8983:2: ()
            // InternalBeeLangTestLanguage.g:8983:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInfixExpressionAccess().getFeatureExpressionObjExprAction_1_2_0()); 
            }

            }


            }

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 639, rule__InfixExpression__Group_1_2__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InfixExpression__Group_1_2__0__Impl"


    // $ANTLR start "rule__InfixExpression__Group_1_2__1"
    // InternalBeeLangTestLanguage.g:8991:1: rule__InfixExpression__Group_1_2__1 : rule__InfixExpression__Group_1_2__1__Impl rule__InfixExpression__Group_1_2__2 ;
    public final void rule__InfixExpression__Group_1_2__1() throws RecognitionException {
        int rule__InfixExpression__Group_1_2__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 640) ) { return ; }
            // InternalBeeLangTestLanguage.g:8995:1: ( rule__InfixExpression__Group_1_2__1__Impl rule__InfixExpression__Group_1_2__2 )
            // InternalBeeLangTestLanguage.g:8996:2: rule__InfixExpression__Group_1_2__1__Impl rule__InfixExpression__Group_1_2__2
            {
            pushFollow(FOLLOW_9);
            rule__InfixExpression__Group_1_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__InfixExpression__Group_1_2__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 640, rule__InfixExpression__Group_1_2__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InfixExpression__Group_1_2__1"


    // $ANTLR start "rule__InfixExpression__Group_1_2__1__Impl"
    // InternalBeeLangTestLanguage.g:9003:1: rule__InfixExpression__Group_1_2__1__Impl : ( '.' ) ;
    public final void rule__InfixExpression__Group_1_2__1__Impl() throws RecognitionException {
        int rule__InfixExpression__Group_1_2__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 641) ) { return ; }
            // InternalBeeLangTestLanguage.g:9007:1: ( ( '.' ) )
            // InternalBeeLangTestLanguage.g:9008:1: ( '.' )
            {
            // InternalBeeLangTestLanguage.g:9008:1: ( '.' )
            // InternalBeeLangTestLanguage.g:9009:2: '.'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInfixExpressionAccess().getFullStopKeyword_1_2_1()); 
            }
            match(input,66,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInfixExpressionAccess().getFullStopKeyword_1_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 641, rule__InfixExpression__Group_1_2__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InfixExpression__Group_1_2__1__Impl"


    // $ANTLR start "rule__InfixExpression__Group_1_2__2"
    // InternalBeeLangTestLanguage.g:9018:1: rule__InfixExpression__Group_1_2__2 : rule__InfixExpression__Group_1_2__2__Impl ;
    public final void rule__InfixExpression__Group_1_2__2() throws RecognitionException {
        int rule__InfixExpression__Group_1_2__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 642) ) { return ; }
            // InternalBeeLangTestLanguage.g:9022:1: ( rule__InfixExpression__Group_1_2__2__Impl )
            // InternalBeeLangTestLanguage.g:9023:2: rule__InfixExpression__Group_1_2__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__InfixExpression__Group_1_2__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 642, rule__InfixExpression__Group_1_2__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InfixExpression__Group_1_2__2"


    // $ANTLR start "rule__InfixExpression__Group_1_2__2__Impl"
    // InternalBeeLangTestLanguage.g:9029:1: rule__InfixExpression__Group_1_2__2__Impl : ( ( rule__InfixExpression__FeatureNameAssignment_1_2_2 ) ) ;
    public final void rule__InfixExpression__Group_1_2__2__Impl() throws RecognitionException {
        int rule__InfixExpression__Group_1_2__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 643) ) { return ; }
            // InternalBeeLangTestLanguage.g:9033:1: ( ( ( rule__InfixExpression__FeatureNameAssignment_1_2_2 ) ) )
            // InternalBeeLangTestLanguage.g:9034:1: ( ( rule__InfixExpression__FeatureNameAssignment_1_2_2 ) )
            {
            // InternalBeeLangTestLanguage.g:9034:1: ( ( rule__InfixExpression__FeatureNameAssignment_1_2_2 ) )
            // InternalBeeLangTestLanguage.g:9035:2: ( rule__InfixExpression__FeatureNameAssignment_1_2_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInfixExpressionAccess().getFeatureNameAssignment_1_2_2()); 
            }
            // InternalBeeLangTestLanguage.g:9036:2: ( rule__InfixExpression__FeatureNameAssignment_1_2_2 )
            // InternalBeeLangTestLanguage.g:9036:3: rule__InfixExpression__FeatureNameAssignment_1_2_2
            {
            pushFollow(FOLLOW_2);
            rule__InfixExpression__FeatureNameAssignment_1_2_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInfixExpressionAccess().getFeatureNameAssignment_1_2_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 643, rule__InfixExpression__Group_1_2__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InfixExpression__Group_1_2__2__Impl"


    // $ANTLR start "rule__CallExpression__Group__0"
    // InternalBeeLangTestLanguage.g:9045:1: rule__CallExpression__Group__0 : rule__CallExpression__Group__0__Impl rule__CallExpression__Group__1 ;
    public final void rule__CallExpression__Group__0() throws RecognitionException {
        int rule__CallExpression__Group__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 644) ) { return ; }
            // InternalBeeLangTestLanguage.g:9049:1: ( rule__CallExpression__Group__0__Impl rule__CallExpression__Group__1 )
            // InternalBeeLangTestLanguage.g:9050:2: rule__CallExpression__Group__0__Impl rule__CallExpression__Group__1
            {
            pushFollow(FOLLOW_60);
            rule__CallExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__CallExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 644, rule__CallExpression__Group__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CallExpression__Group__0"


    // $ANTLR start "rule__CallExpression__Group__0__Impl"
    // InternalBeeLangTestLanguage.g:9057:1: rule__CallExpression__Group__0__Impl : ( rulePrimaryExpression ) ;
    public final void rule__CallExpression__Group__0__Impl() throws RecognitionException {
        int rule__CallExpression__Group__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 645) ) { return ; }
            // InternalBeeLangTestLanguage.g:9061:1: ( ( rulePrimaryExpression ) )
            // InternalBeeLangTestLanguage.g:9062:1: ( rulePrimaryExpression )
            {
            // InternalBeeLangTestLanguage.g:9062:1: ( rulePrimaryExpression )
            // InternalBeeLangTestLanguage.g:9063:2: rulePrimaryExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCallExpressionAccess().getPrimaryExpressionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            rulePrimaryExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCallExpressionAccess().getPrimaryExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 645, rule__CallExpression__Group__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CallExpression__Group__0__Impl"


    // $ANTLR start "rule__CallExpression__Group__1"
    // InternalBeeLangTestLanguage.g:9072:1: rule__CallExpression__Group__1 : rule__CallExpression__Group__1__Impl ;
    public final void rule__CallExpression__Group__1() throws RecognitionException {
        int rule__CallExpression__Group__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 646) ) { return ; }
            // InternalBeeLangTestLanguage.g:9076:1: ( rule__CallExpression__Group__1__Impl )
            // InternalBeeLangTestLanguage.g:9077:2: rule__CallExpression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__CallExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 646, rule__CallExpression__Group__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CallExpression__Group__1"


    // $ANTLR start "rule__CallExpression__Group__1__Impl"
    // InternalBeeLangTestLanguage.g:9083:1: rule__CallExpression__Group__1__Impl : ( ( rule__CallExpression__Group_1__0 )* ) ;
    public final void rule__CallExpression__Group__1__Impl() throws RecognitionException {
        int rule__CallExpression__Group__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 647) ) { return ; }
            // InternalBeeLangTestLanguage.g:9087:1: ( ( ( rule__CallExpression__Group_1__0 )* ) )
            // InternalBeeLangTestLanguage.g:9088:1: ( ( rule__CallExpression__Group_1__0 )* )
            {
            // InternalBeeLangTestLanguage.g:9088:1: ( ( rule__CallExpression__Group_1__0 )* )
            // InternalBeeLangTestLanguage.g:9089:2: ( rule__CallExpression__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCallExpressionAccess().getGroup_1()); 
            }
            // InternalBeeLangTestLanguage.g:9090:2: ( rule__CallExpression__Group_1__0 )*
            loop74:
            do {
                int alt74=2;
                int LA74_0 = input.LA(1);

                if ( (LA74_0==60) ) {
                    int LA74_2 = input.LA(2);

                    if ( (synpred103_InternalBeeLangTestLanguage()) ) {
                        alt74=1;
                    }


                }


                switch (alt74) {
            	case 1 :
            	    // InternalBeeLangTestLanguage.g:9090:3: rule__CallExpression__Group_1__0
            	    {
            	    pushFollow(FOLLOW_64);
            	    rule__CallExpression__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop74;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCallExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 647, rule__CallExpression__Group__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CallExpression__Group__1__Impl"


    // $ANTLR start "rule__CallExpression__Group_1__0"
    // InternalBeeLangTestLanguage.g:9099:1: rule__CallExpression__Group_1__0 : rule__CallExpression__Group_1__0__Impl rule__CallExpression__Group_1__1 ;
    public final void rule__CallExpression__Group_1__0() throws RecognitionException {
        int rule__CallExpression__Group_1__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 648) ) { return ; }
            // InternalBeeLangTestLanguage.g:9103:1: ( rule__CallExpression__Group_1__0__Impl rule__CallExpression__Group_1__1 )
            // InternalBeeLangTestLanguage.g:9104:2: rule__CallExpression__Group_1__0__Impl rule__CallExpression__Group_1__1
            {
            pushFollow(FOLLOW_60);
            rule__CallExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__CallExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 648, rule__CallExpression__Group_1__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CallExpression__Group_1__0"


    // $ANTLR start "rule__CallExpression__Group_1__0__Impl"
    // InternalBeeLangTestLanguage.g:9111:1: rule__CallExpression__Group_1__0__Impl : ( () ) ;
    public final void rule__CallExpression__Group_1__0__Impl() throws RecognitionException {
        int rule__CallExpression__Group_1__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 649) ) { return ; }
            // InternalBeeLangTestLanguage.g:9115:1: ( ( () ) )
            // InternalBeeLangTestLanguage.g:9116:1: ( () )
            {
            // InternalBeeLangTestLanguage.g:9116:1: ( () )
            // InternalBeeLangTestLanguage.g:9117:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCallExpressionAccess().getCallFunctionFuncExprAction_1_0()); 
            }
            // InternalBeeLangTestLanguage.g:9118:2: ()
            // InternalBeeLangTestLanguage.g:9118:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCallExpressionAccess().getCallFunctionFuncExprAction_1_0()); 
            }

            }


            }

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 649, rule__CallExpression__Group_1__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CallExpression__Group_1__0__Impl"


    // $ANTLR start "rule__CallExpression__Group_1__1"
    // InternalBeeLangTestLanguage.g:9126:1: rule__CallExpression__Group_1__1 : rule__CallExpression__Group_1__1__Impl rule__CallExpression__Group_1__2 ;
    public final void rule__CallExpression__Group_1__1() throws RecognitionException {
        int rule__CallExpression__Group_1__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 650) ) { return ; }
            // InternalBeeLangTestLanguage.g:9130:1: ( rule__CallExpression__Group_1__1__Impl rule__CallExpression__Group_1__2 )
            // InternalBeeLangTestLanguage.g:9131:2: rule__CallExpression__Group_1__1__Impl rule__CallExpression__Group_1__2
            {
            pushFollow(FOLLOW_61);
            rule__CallExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__CallExpression__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 650, rule__CallExpression__Group_1__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CallExpression__Group_1__1"


    // $ANTLR start "rule__CallExpression__Group_1__1__Impl"
    // InternalBeeLangTestLanguage.g:9138:1: rule__CallExpression__Group_1__1__Impl : ( '(' ) ;
    public final void rule__CallExpression__Group_1__1__Impl() throws RecognitionException {
        int rule__CallExpression__Group_1__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 651) ) { return ; }
            // InternalBeeLangTestLanguage.g:9142:1: ( ( '(' ) )
            // InternalBeeLangTestLanguage.g:9143:1: ( '(' )
            {
            // InternalBeeLangTestLanguage.g:9143:1: ( '(' )
            // InternalBeeLangTestLanguage.g:9144:2: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCallExpressionAccess().getLeftParenthesisKeyword_1_1()); 
            }
            match(input,60,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCallExpressionAccess().getLeftParenthesisKeyword_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 651, rule__CallExpression__Group_1__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CallExpression__Group_1__1__Impl"


    // $ANTLR start "rule__CallExpression__Group_1__2"
    // InternalBeeLangTestLanguage.g:9153:1: rule__CallExpression__Group_1__2 : rule__CallExpression__Group_1__2__Impl rule__CallExpression__Group_1__3 ;
    public final void rule__CallExpression__Group_1__2() throws RecognitionException {
        int rule__CallExpression__Group_1__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 652) ) { return ; }
            // InternalBeeLangTestLanguage.g:9157:1: ( rule__CallExpression__Group_1__2__Impl rule__CallExpression__Group_1__3 )
            // InternalBeeLangTestLanguage.g:9158:2: rule__CallExpression__Group_1__2__Impl rule__CallExpression__Group_1__3
            {
            pushFollow(FOLLOW_61);
            rule__CallExpression__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__CallExpression__Group_1__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 652, rule__CallExpression__Group_1__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CallExpression__Group_1__2"


    // $ANTLR start "rule__CallExpression__Group_1__2__Impl"
    // InternalBeeLangTestLanguage.g:9165:1: rule__CallExpression__Group_1__2__Impl : ( ( rule__CallExpression__ParameterListAssignment_1_2 )? ) ;
    public final void rule__CallExpression__Group_1__2__Impl() throws RecognitionException {
        int rule__CallExpression__Group_1__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 653) ) { return ; }
            // InternalBeeLangTestLanguage.g:9169:1: ( ( ( rule__CallExpression__ParameterListAssignment_1_2 )? ) )
            // InternalBeeLangTestLanguage.g:9170:1: ( ( rule__CallExpression__ParameterListAssignment_1_2 )? )
            {
            // InternalBeeLangTestLanguage.g:9170:1: ( ( rule__CallExpression__ParameterListAssignment_1_2 )? )
            // InternalBeeLangTestLanguage.g:9171:2: ( rule__CallExpression__ParameterListAssignment_1_2 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCallExpressionAccess().getParameterListAssignment_1_2()); 
            }
            // InternalBeeLangTestLanguage.g:9172:2: ( rule__CallExpression__ParameterListAssignment_1_2 )?
            int alt75=2;
            int LA75_0 = input.LA(1);

            if ( (LA75_0==RULE_STRING||LA75_0==RULE_ID||LA75_0==13||LA75_0==28||LA75_0==31||(LA75_0>=35 && LA75_0<=44)||LA75_0==60||LA75_0==63||LA75_0==69||(LA75_0>=71 && LA75_0<=72)||LA75_0==75) ) {
                alt75=1;
            }
            switch (alt75) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:9172:3: rule__CallExpression__ParameterListAssignment_1_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__CallExpression__ParameterListAssignment_1_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCallExpressionAccess().getParameterListAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 653, rule__CallExpression__Group_1__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CallExpression__Group_1__2__Impl"


    // $ANTLR start "rule__CallExpression__Group_1__3"
    // InternalBeeLangTestLanguage.g:9180:1: rule__CallExpression__Group_1__3 : rule__CallExpression__Group_1__3__Impl ;
    public final void rule__CallExpression__Group_1__3() throws RecognitionException {
        int rule__CallExpression__Group_1__3_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 654) ) { return ; }
            // InternalBeeLangTestLanguage.g:9184:1: ( rule__CallExpression__Group_1__3__Impl )
            // InternalBeeLangTestLanguage.g:9185:2: rule__CallExpression__Group_1__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__CallExpression__Group_1__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 654, rule__CallExpression__Group_1__3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CallExpression__Group_1__3"


    // $ANTLR start "rule__CallExpression__Group_1__3__Impl"
    // InternalBeeLangTestLanguage.g:9191:1: rule__CallExpression__Group_1__3__Impl : ( ')' ) ;
    public final void rule__CallExpression__Group_1__3__Impl() throws RecognitionException {
        int rule__CallExpression__Group_1__3__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 655) ) { return ; }
            // InternalBeeLangTestLanguage.g:9195:1: ( ( ')' ) )
            // InternalBeeLangTestLanguage.g:9196:1: ( ')' )
            {
            // InternalBeeLangTestLanguage.g:9196:1: ( ')' )
            // InternalBeeLangTestLanguage.g:9197:2: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCallExpressionAccess().getRightParenthesisKeyword_1_3()); 
            }
            match(input,61,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCallExpressionAccess().getRightParenthesisKeyword_1_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 655, rule__CallExpression__Group_1__3__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CallExpression__Group_1__3__Impl"


    // $ANTLR start "rule__WithExpression__Group__0"
    // InternalBeeLangTestLanguage.g:9207:1: rule__WithExpression__Group__0 : rule__WithExpression__Group__0__Impl rule__WithExpression__Group__1 ;
    public final void rule__WithExpression__Group__0() throws RecognitionException {
        int rule__WithExpression__Group__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 656) ) { return ; }
            // InternalBeeLangTestLanguage.g:9211:1: ( rule__WithExpression__Group__0__Impl rule__WithExpression__Group__1 )
            // InternalBeeLangTestLanguage.g:9212:2: rule__WithExpression__Group__0__Impl rule__WithExpression__Group__1
            {
            pushFollow(FOLLOW_65);
            rule__WithExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WithExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 656, rule__WithExpression__Group__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithExpression__Group__0"


    // $ANTLR start "rule__WithExpression__Group__0__Impl"
    // InternalBeeLangTestLanguage.g:9219:1: rule__WithExpression__Group__0__Impl : ( 'with' ) ;
    public final void rule__WithExpression__Group__0__Impl() throws RecognitionException {
        int rule__WithExpression__Group__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 657) ) { return ; }
            // InternalBeeLangTestLanguage.g:9223:1: ( ( 'with' ) )
            // InternalBeeLangTestLanguage.g:9224:1: ( 'with' )
            {
            // InternalBeeLangTestLanguage.g:9224:1: ( 'with' )
            // InternalBeeLangTestLanguage.g:9225:2: 'with'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithExpressionAccess().getWithKeyword_0()); 
            }
            match(input,69,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithExpressionAccess().getWithKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 657, rule__WithExpression__Group__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithExpression__Group__0__Impl"


    // $ANTLR start "rule__WithExpression__Group__1"
    // InternalBeeLangTestLanguage.g:9234:1: rule__WithExpression__Group__1 : rule__WithExpression__Group__1__Impl rule__WithExpression__Group__2 ;
    public final void rule__WithExpression__Group__1() throws RecognitionException {
        int rule__WithExpression__Group__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 658) ) { return ; }
            // InternalBeeLangTestLanguage.g:9238:1: ( rule__WithExpression__Group__1__Impl rule__WithExpression__Group__2 )
            // InternalBeeLangTestLanguage.g:9239:2: rule__WithExpression__Group__1__Impl rule__WithExpression__Group__2
            {
            pushFollow(FOLLOW_65);
            rule__WithExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WithExpression__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 658, rule__WithExpression__Group__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithExpression__Group__1"


    // $ANTLR start "rule__WithExpression__Group__1__Impl"
    // InternalBeeLangTestLanguage.g:9246:1: rule__WithExpression__Group__1__Impl : ( ( rule__WithExpression__Group_1__0 )? ) ;
    public final void rule__WithExpression__Group__1__Impl() throws RecognitionException {
        int rule__WithExpression__Group__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 659) ) { return ; }
            // InternalBeeLangTestLanguage.g:9250:1: ( ( ( rule__WithExpression__Group_1__0 )? ) )
            // InternalBeeLangTestLanguage.g:9251:1: ( ( rule__WithExpression__Group_1__0 )? )
            {
            // InternalBeeLangTestLanguage.g:9251:1: ( ( rule__WithExpression__Group_1__0 )? )
            // InternalBeeLangTestLanguage.g:9252:2: ( rule__WithExpression__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithExpressionAccess().getGroup_1()); 
            }
            // InternalBeeLangTestLanguage.g:9253:2: ( rule__WithExpression__Group_1__0 )?
            int alt76=2;
            int LA76_0 = input.LA(1);

            if ( (LA76_0==RULE_ID) ) {
                alt76=1;
            }
            switch (alt76) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:9253:3: rule__WithExpression__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__WithExpression__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 659, rule__WithExpression__Group__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithExpression__Group__1__Impl"


    // $ANTLR start "rule__WithExpression__Group__2"
    // InternalBeeLangTestLanguage.g:9261:1: rule__WithExpression__Group__2 : rule__WithExpression__Group__2__Impl ;
    public final void rule__WithExpression__Group__2() throws RecognitionException {
        int rule__WithExpression__Group__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 660) ) { return ; }
            // InternalBeeLangTestLanguage.g:9265:1: ( rule__WithExpression__Group__2__Impl )
            // InternalBeeLangTestLanguage.g:9266:2: rule__WithExpression__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__WithExpression__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 660, rule__WithExpression__Group__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithExpression__Group__2"


    // $ANTLR start "rule__WithExpression__Group__2__Impl"
    // InternalBeeLangTestLanguage.g:9272:1: rule__WithExpression__Group__2__Impl : ( ( rule__WithExpression__Alternatives_2 ) ) ;
    public final void rule__WithExpression__Group__2__Impl() throws RecognitionException {
        int rule__WithExpression__Group__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 661) ) { return ; }
            // InternalBeeLangTestLanguage.g:9276:1: ( ( ( rule__WithExpression__Alternatives_2 ) ) )
            // InternalBeeLangTestLanguage.g:9277:1: ( ( rule__WithExpression__Alternatives_2 ) )
            {
            // InternalBeeLangTestLanguage.g:9277:1: ( ( rule__WithExpression__Alternatives_2 ) )
            // InternalBeeLangTestLanguage.g:9278:2: ( rule__WithExpression__Alternatives_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithExpressionAccess().getAlternatives_2()); 
            }
            // InternalBeeLangTestLanguage.g:9279:2: ( rule__WithExpression__Alternatives_2 )
            // InternalBeeLangTestLanguage.g:9279:3: rule__WithExpression__Alternatives_2
            {
            pushFollow(FOLLOW_2);
            rule__WithExpression__Alternatives_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithExpressionAccess().getAlternatives_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 661, rule__WithExpression__Group__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithExpression__Group__2__Impl"


    // $ANTLR start "rule__WithExpression__Group_1__0"
    // InternalBeeLangTestLanguage.g:9288:1: rule__WithExpression__Group_1__0 : rule__WithExpression__Group_1__0__Impl rule__WithExpression__Group_1__1 ;
    public final void rule__WithExpression__Group_1__0() throws RecognitionException {
        int rule__WithExpression__Group_1__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 662) ) { return ; }
            // InternalBeeLangTestLanguage.g:9292:1: ( rule__WithExpression__Group_1__0__Impl rule__WithExpression__Group_1__1 )
            // InternalBeeLangTestLanguage.g:9293:2: rule__WithExpression__Group_1__0__Impl rule__WithExpression__Group_1__1
            {
            pushFollow(FOLLOW_10);
            rule__WithExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WithExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 662, rule__WithExpression__Group_1__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithExpression__Group_1__0"


    // $ANTLR start "rule__WithExpression__Group_1__0__Impl"
    // InternalBeeLangTestLanguage.g:9300:1: rule__WithExpression__Group_1__0__Impl : ( ( rule__WithExpression__ReferencedAdviceAssignment_1_0 ) ) ;
    public final void rule__WithExpression__Group_1__0__Impl() throws RecognitionException {
        int rule__WithExpression__Group_1__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 663) ) { return ; }
            // InternalBeeLangTestLanguage.g:9304:1: ( ( ( rule__WithExpression__ReferencedAdviceAssignment_1_0 ) ) )
            // InternalBeeLangTestLanguage.g:9305:1: ( ( rule__WithExpression__ReferencedAdviceAssignment_1_0 ) )
            {
            // InternalBeeLangTestLanguage.g:9305:1: ( ( rule__WithExpression__ReferencedAdviceAssignment_1_0 ) )
            // InternalBeeLangTestLanguage.g:9306:2: ( rule__WithExpression__ReferencedAdviceAssignment_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithExpressionAccess().getReferencedAdviceAssignment_1_0()); 
            }
            // InternalBeeLangTestLanguage.g:9307:2: ( rule__WithExpression__ReferencedAdviceAssignment_1_0 )
            // InternalBeeLangTestLanguage.g:9307:3: rule__WithExpression__ReferencedAdviceAssignment_1_0
            {
            pushFollow(FOLLOW_2);
            rule__WithExpression__ReferencedAdviceAssignment_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithExpressionAccess().getReferencedAdviceAssignment_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 663, rule__WithExpression__Group_1__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithExpression__Group_1__0__Impl"


    // $ANTLR start "rule__WithExpression__Group_1__1"
    // InternalBeeLangTestLanguage.g:9315:1: rule__WithExpression__Group_1__1 : rule__WithExpression__Group_1__1__Impl ;
    public final void rule__WithExpression__Group_1__1() throws RecognitionException {
        int rule__WithExpression__Group_1__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 664) ) { return ; }
            // InternalBeeLangTestLanguage.g:9319:1: ( rule__WithExpression__Group_1__1__Impl )
            // InternalBeeLangTestLanguage.g:9320:2: rule__WithExpression__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__WithExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 664, rule__WithExpression__Group_1__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithExpression__Group_1__1"


    // $ANTLR start "rule__WithExpression__Group_1__1__Impl"
    // InternalBeeLangTestLanguage.g:9326:1: rule__WithExpression__Group_1__1__Impl : ( ( rule__WithExpression__Group_1_1__0 )* ) ;
    public final void rule__WithExpression__Group_1__1__Impl() throws RecognitionException {
        int rule__WithExpression__Group_1__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 665) ) { return ; }
            // InternalBeeLangTestLanguage.g:9330:1: ( ( ( rule__WithExpression__Group_1_1__0 )* ) )
            // InternalBeeLangTestLanguage.g:9331:1: ( ( rule__WithExpression__Group_1_1__0 )* )
            {
            // InternalBeeLangTestLanguage.g:9331:1: ( ( rule__WithExpression__Group_1_1__0 )* )
            // InternalBeeLangTestLanguage.g:9332:2: ( rule__WithExpression__Group_1_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithExpressionAccess().getGroup_1_1()); 
            }
            // InternalBeeLangTestLanguage.g:9333:2: ( rule__WithExpression__Group_1_1__0 )*
            loop77:
            do {
                int alt77=2;
                int LA77_0 = input.LA(1);

                if ( (LA77_0==48) ) {
                    alt77=1;
                }


                switch (alt77) {
            	case 1 :
            	    // InternalBeeLangTestLanguage.g:9333:3: rule__WithExpression__Group_1_1__0
            	    {
            	    pushFollow(FOLLOW_11);
            	    rule__WithExpression__Group_1_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop77;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithExpressionAccess().getGroup_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 665, rule__WithExpression__Group_1__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithExpression__Group_1__1__Impl"


    // $ANTLR start "rule__WithExpression__Group_1_1__0"
    // InternalBeeLangTestLanguage.g:9342:1: rule__WithExpression__Group_1_1__0 : rule__WithExpression__Group_1_1__0__Impl rule__WithExpression__Group_1_1__1 ;
    public final void rule__WithExpression__Group_1_1__0() throws RecognitionException {
        int rule__WithExpression__Group_1_1__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 666) ) { return ; }
            // InternalBeeLangTestLanguage.g:9346:1: ( rule__WithExpression__Group_1_1__0__Impl rule__WithExpression__Group_1_1__1 )
            // InternalBeeLangTestLanguage.g:9347:2: rule__WithExpression__Group_1_1__0__Impl rule__WithExpression__Group_1_1__1
            {
            pushFollow(FOLLOW_9);
            rule__WithExpression__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WithExpression__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 666, rule__WithExpression__Group_1_1__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithExpression__Group_1_1__0"


    // $ANTLR start "rule__WithExpression__Group_1_1__0__Impl"
    // InternalBeeLangTestLanguage.g:9354:1: rule__WithExpression__Group_1_1__0__Impl : ( ',' ) ;
    public final void rule__WithExpression__Group_1_1__0__Impl() throws RecognitionException {
        int rule__WithExpression__Group_1_1__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 667) ) { return ; }
            // InternalBeeLangTestLanguage.g:9358:1: ( ( ',' ) )
            // InternalBeeLangTestLanguage.g:9359:1: ( ',' )
            {
            // InternalBeeLangTestLanguage.g:9359:1: ( ',' )
            // InternalBeeLangTestLanguage.g:9360:2: ','
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithExpressionAccess().getCommaKeyword_1_1_0()); 
            }
            match(input,48,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithExpressionAccess().getCommaKeyword_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 667, rule__WithExpression__Group_1_1__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithExpression__Group_1_1__0__Impl"


    // $ANTLR start "rule__WithExpression__Group_1_1__1"
    // InternalBeeLangTestLanguage.g:9369:1: rule__WithExpression__Group_1_1__1 : rule__WithExpression__Group_1_1__1__Impl ;
    public final void rule__WithExpression__Group_1_1__1() throws RecognitionException {
        int rule__WithExpression__Group_1_1__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 668) ) { return ; }
            // InternalBeeLangTestLanguage.g:9373:1: ( rule__WithExpression__Group_1_1__1__Impl )
            // InternalBeeLangTestLanguage.g:9374:2: rule__WithExpression__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__WithExpression__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 668, rule__WithExpression__Group_1_1__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithExpression__Group_1_1__1"


    // $ANTLR start "rule__WithExpression__Group_1_1__1__Impl"
    // InternalBeeLangTestLanguage.g:9380:1: rule__WithExpression__Group_1_1__1__Impl : ( ( rule__WithExpression__ReferencedAdviceAssignment_1_1_1 ) ) ;
    public final void rule__WithExpression__Group_1_1__1__Impl() throws RecognitionException {
        int rule__WithExpression__Group_1_1__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 669) ) { return ; }
            // InternalBeeLangTestLanguage.g:9384:1: ( ( ( rule__WithExpression__ReferencedAdviceAssignment_1_1_1 ) ) )
            // InternalBeeLangTestLanguage.g:9385:1: ( ( rule__WithExpression__ReferencedAdviceAssignment_1_1_1 ) )
            {
            // InternalBeeLangTestLanguage.g:9385:1: ( ( rule__WithExpression__ReferencedAdviceAssignment_1_1_1 ) )
            // InternalBeeLangTestLanguage.g:9386:2: ( rule__WithExpression__ReferencedAdviceAssignment_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithExpressionAccess().getReferencedAdviceAssignment_1_1_1()); 
            }
            // InternalBeeLangTestLanguage.g:9387:2: ( rule__WithExpression__ReferencedAdviceAssignment_1_1_1 )
            // InternalBeeLangTestLanguage.g:9387:3: rule__WithExpression__ReferencedAdviceAssignment_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__WithExpression__ReferencedAdviceAssignment_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithExpressionAccess().getReferencedAdviceAssignment_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 669, rule__WithExpression__Group_1_1__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithExpression__Group_1_1__1__Impl"


    // $ANTLR start "rule__WithExpression__Group_2_0__0"
    // InternalBeeLangTestLanguage.g:9396:1: rule__WithExpression__Group_2_0__0 : rule__WithExpression__Group_2_0__0__Impl rule__WithExpression__Group_2_0__1 ;
    public final void rule__WithExpression__Group_2_0__0() throws RecognitionException {
        int rule__WithExpression__Group_2_0__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 670) ) { return ; }
            // InternalBeeLangTestLanguage.g:9400:1: ( rule__WithExpression__Group_2_0__0__Impl rule__WithExpression__Group_2_0__1 )
            // InternalBeeLangTestLanguage.g:9401:2: rule__WithExpression__Group_2_0__0__Impl rule__WithExpression__Group_2_0__1
            {
            pushFollow(FOLLOW_19);
            rule__WithExpression__Group_2_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WithExpression__Group_2_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 670, rule__WithExpression__Group_2_0__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithExpression__Group_2_0__0"


    // $ANTLR start "rule__WithExpression__Group_2_0__0__Impl"
    // InternalBeeLangTestLanguage.g:9408:1: rule__WithExpression__Group_2_0__0__Impl : ( ':' ) ;
    public final void rule__WithExpression__Group_2_0__0__Impl() throws RecognitionException {
        int rule__WithExpression__Group_2_0__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 671) ) { return ; }
            // InternalBeeLangTestLanguage.g:9412:1: ( ( ':' ) )
            // InternalBeeLangTestLanguage.g:9413:1: ( ':' )
            {
            // InternalBeeLangTestLanguage.g:9413:1: ( ':' )
            // InternalBeeLangTestLanguage.g:9414:2: ':'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithExpressionAccess().getColonKeyword_2_0_0()); 
            }
            match(input,49,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithExpressionAccess().getColonKeyword_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 671, rule__WithExpression__Group_2_0__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithExpression__Group_2_0__0__Impl"


    // $ANTLR start "rule__WithExpression__Group_2_0__1"
    // InternalBeeLangTestLanguage.g:9423:1: rule__WithExpression__Group_2_0__1 : rule__WithExpression__Group_2_0__1__Impl ;
    public final void rule__WithExpression__Group_2_0__1() throws RecognitionException {
        int rule__WithExpression__Group_2_0__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 672) ) { return ; }
            // InternalBeeLangTestLanguage.g:9427:1: ( rule__WithExpression__Group_2_0__1__Impl )
            // InternalBeeLangTestLanguage.g:9428:2: rule__WithExpression__Group_2_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__WithExpression__Group_2_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 672, rule__WithExpression__Group_2_0__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithExpression__Group_2_0__1"


    // $ANTLR start "rule__WithExpression__Group_2_0__1__Impl"
    // InternalBeeLangTestLanguage.g:9434:1: rule__WithExpression__Group_2_0__1__Impl : ( ( rule__WithExpression__FuncExprAssignment_2_0_1 ) ) ;
    public final void rule__WithExpression__Group_2_0__1__Impl() throws RecognitionException {
        int rule__WithExpression__Group_2_0__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 673) ) { return ; }
            // InternalBeeLangTestLanguage.g:9438:1: ( ( ( rule__WithExpression__FuncExprAssignment_2_0_1 ) ) )
            // InternalBeeLangTestLanguage.g:9439:1: ( ( rule__WithExpression__FuncExprAssignment_2_0_1 ) )
            {
            // InternalBeeLangTestLanguage.g:9439:1: ( ( rule__WithExpression__FuncExprAssignment_2_0_1 ) )
            // InternalBeeLangTestLanguage.g:9440:2: ( rule__WithExpression__FuncExprAssignment_2_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithExpressionAccess().getFuncExprAssignment_2_0_1()); 
            }
            // InternalBeeLangTestLanguage.g:9441:2: ( rule__WithExpression__FuncExprAssignment_2_0_1 )
            // InternalBeeLangTestLanguage.g:9441:3: rule__WithExpression__FuncExprAssignment_2_0_1
            {
            pushFollow(FOLLOW_2);
            rule__WithExpression__FuncExprAssignment_2_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithExpressionAccess().getFuncExprAssignment_2_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 673, rule__WithExpression__Group_2_0__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithExpression__Group_2_0__1__Impl"


    // $ANTLR start "rule__WithExpression__Group_2_1__0"
    // InternalBeeLangTestLanguage.g:9450:1: rule__WithExpression__Group_2_1__0 : rule__WithExpression__Group_2_1__0__Impl rule__WithExpression__Group_2_1__1 ;
    public final void rule__WithExpression__Group_2_1__0() throws RecognitionException {
        int rule__WithExpression__Group_2_1__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 674) ) { return ; }
            // InternalBeeLangTestLanguage.g:9454:1: ( rule__WithExpression__Group_2_1__0__Impl rule__WithExpression__Group_2_1__1 )
            // InternalBeeLangTestLanguage.g:9455:2: rule__WithExpression__Group_2_1__0__Impl rule__WithExpression__Group_2_1__1
            {
            pushFollow(FOLLOW_66);
            rule__WithExpression__Group_2_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WithExpression__Group_2_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 674, rule__WithExpression__Group_2_1__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithExpression__Group_2_1__0"


    // $ANTLR start "rule__WithExpression__Group_2_1__0__Impl"
    // InternalBeeLangTestLanguage.g:9462:1: rule__WithExpression__Group_2_1__0__Impl : ( '{' ) ;
    public final void rule__WithExpression__Group_2_1__0__Impl() throws RecognitionException {
        int rule__WithExpression__Group_2_1__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 675) ) { return ; }
            // InternalBeeLangTestLanguage.g:9466:1: ( ( '{' ) )
            // InternalBeeLangTestLanguage.g:9467:1: ( '{' )
            {
            // InternalBeeLangTestLanguage.g:9467:1: ( '{' )
            // InternalBeeLangTestLanguage.g:9468:2: '{'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithExpressionAccess().getLeftCurlyBracketKeyword_2_1_0()); 
            }
            match(input,44,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithExpressionAccess().getLeftCurlyBracketKeyword_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 675, rule__WithExpression__Group_2_1__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithExpression__Group_2_1__0__Impl"


    // $ANTLR start "rule__WithExpression__Group_2_1__1"
    // InternalBeeLangTestLanguage.g:9477:1: rule__WithExpression__Group_2_1__1 : rule__WithExpression__Group_2_1__1__Impl rule__WithExpression__Group_2_1__2 ;
    public final void rule__WithExpression__Group_2_1__1() throws RecognitionException {
        int rule__WithExpression__Group_2_1__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 676) ) { return ; }
            // InternalBeeLangTestLanguage.g:9481:1: ( rule__WithExpression__Group_2_1__1__Impl rule__WithExpression__Group_2_1__2 )
            // InternalBeeLangTestLanguage.g:9482:2: rule__WithExpression__Group_2_1__1__Impl rule__WithExpression__Group_2_1__2
            {
            pushFollow(FOLLOW_8);
            rule__WithExpression__Group_2_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WithExpression__Group_2_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 676, rule__WithExpression__Group_2_1__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithExpression__Group_2_1__1"


    // $ANTLR start "rule__WithExpression__Group_2_1__1__Impl"
    // InternalBeeLangTestLanguage.g:9489:1: rule__WithExpression__Group_2_1__1__Impl : ( ( rule__WithExpression__FuncExprAssignment_2_1_1 ) ) ;
    public final void rule__WithExpression__Group_2_1__1__Impl() throws RecognitionException {
        int rule__WithExpression__Group_2_1__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 677) ) { return ; }
            // InternalBeeLangTestLanguage.g:9493:1: ( ( ( rule__WithExpression__FuncExprAssignment_2_1_1 ) ) )
            // InternalBeeLangTestLanguage.g:9494:1: ( ( rule__WithExpression__FuncExprAssignment_2_1_1 ) )
            {
            // InternalBeeLangTestLanguage.g:9494:1: ( ( rule__WithExpression__FuncExprAssignment_2_1_1 ) )
            // InternalBeeLangTestLanguage.g:9495:2: ( rule__WithExpression__FuncExprAssignment_2_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithExpressionAccess().getFuncExprAssignment_2_1_1()); 
            }
            // InternalBeeLangTestLanguage.g:9496:2: ( rule__WithExpression__FuncExprAssignment_2_1_1 )
            // InternalBeeLangTestLanguage.g:9496:3: rule__WithExpression__FuncExprAssignment_2_1_1
            {
            pushFollow(FOLLOW_2);
            rule__WithExpression__FuncExprAssignment_2_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithExpressionAccess().getFuncExprAssignment_2_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 677, rule__WithExpression__Group_2_1__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithExpression__Group_2_1__1__Impl"


    // $ANTLR start "rule__WithExpression__Group_2_1__2"
    // InternalBeeLangTestLanguage.g:9504:1: rule__WithExpression__Group_2_1__2 : rule__WithExpression__Group_2_1__2__Impl ;
    public final void rule__WithExpression__Group_2_1__2() throws RecognitionException {
        int rule__WithExpression__Group_2_1__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 678) ) { return ; }
            // InternalBeeLangTestLanguage.g:9508:1: ( rule__WithExpression__Group_2_1__2__Impl )
            // InternalBeeLangTestLanguage.g:9509:2: rule__WithExpression__Group_2_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__WithExpression__Group_2_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 678, rule__WithExpression__Group_2_1__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithExpression__Group_2_1__2"


    // $ANTLR start "rule__WithExpression__Group_2_1__2__Impl"
    // InternalBeeLangTestLanguage.g:9515:1: rule__WithExpression__Group_2_1__2__Impl : ( '}' ) ;
    public final void rule__WithExpression__Group_2_1__2__Impl() throws RecognitionException {
        int rule__WithExpression__Group_2_1__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 679) ) { return ; }
            // InternalBeeLangTestLanguage.g:9519:1: ( ( '}' ) )
            // InternalBeeLangTestLanguage.g:9520:1: ( '}' )
            {
            // InternalBeeLangTestLanguage.g:9520:1: ( '}' )
            // InternalBeeLangTestLanguage.g:9521:2: '}'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithExpressionAccess().getRightCurlyBracketKeyword_2_1_2()); 
            }
            match(input,45,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithExpressionAccess().getRightCurlyBracketKeyword_2_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 679, rule__WithExpression__Group_2_1__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithExpression__Group_2_1__2__Impl"


    // $ANTLR start "rule__WithContextExpression__Group__0"
    // InternalBeeLangTestLanguage.g:9531:1: rule__WithContextExpression__Group__0 : rule__WithContextExpression__Group__0__Impl rule__WithContextExpression__Group__1 ;
    public final void rule__WithContextExpression__Group__0() throws RecognitionException {
        int rule__WithContextExpression__Group__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 680) ) { return ; }
            // InternalBeeLangTestLanguage.g:9535:1: ( rule__WithContextExpression__Group__0__Impl rule__WithContextExpression__Group__1 )
            // InternalBeeLangTestLanguage.g:9536:2: rule__WithContextExpression__Group__0__Impl rule__WithContextExpression__Group__1
            {
            pushFollow(FOLLOW_67);
            rule__WithContextExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WithContextExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 680, rule__WithContextExpression__Group__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithContextExpression__Group__0"


    // $ANTLR start "rule__WithContextExpression__Group__0__Impl"
    // InternalBeeLangTestLanguage.g:9543:1: rule__WithContextExpression__Group__0__Impl : ( 'with' ) ;
    public final void rule__WithContextExpression__Group__0__Impl() throws RecognitionException {
        int rule__WithContextExpression__Group__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 681) ) { return ; }
            // InternalBeeLangTestLanguage.g:9547:1: ( ( 'with' ) )
            // InternalBeeLangTestLanguage.g:9548:1: ( 'with' )
            {
            // InternalBeeLangTestLanguage.g:9548:1: ( 'with' )
            // InternalBeeLangTestLanguage.g:9549:2: 'with'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithContextExpressionAccess().getWithKeyword_0()); 
            }
            match(input,69,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithContextExpressionAccess().getWithKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 681, rule__WithContextExpression__Group__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithContextExpression__Group__0__Impl"


    // $ANTLR start "rule__WithContextExpression__Group__1"
    // InternalBeeLangTestLanguage.g:9558:1: rule__WithContextExpression__Group__1 : rule__WithContextExpression__Group__1__Impl rule__WithContextExpression__Group__2 ;
    public final void rule__WithContextExpression__Group__1() throws RecognitionException {
        int rule__WithContextExpression__Group__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 682) ) { return ; }
            // InternalBeeLangTestLanguage.g:9562:1: ( rule__WithContextExpression__Group__1__Impl rule__WithContextExpression__Group__2 )
            // InternalBeeLangTestLanguage.g:9563:2: rule__WithContextExpression__Group__1__Impl rule__WithContextExpression__Group__2
            {
            pushFollow(FOLLOW_19);
            rule__WithContextExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WithContextExpression__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 682, rule__WithContextExpression__Group__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithContextExpression__Group__1"


    // $ANTLR start "rule__WithContextExpression__Group__1__Impl"
    // InternalBeeLangTestLanguage.g:9570:1: rule__WithContextExpression__Group__1__Impl : ( 'context' ) ;
    public final void rule__WithContextExpression__Group__1__Impl() throws RecognitionException {
        int rule__WithContextExpression__Group__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 683) ) { return ; }
            // InternalBeeLangTestLanguage.g:9574:1: ( ( 'context' ) )
            // InternalBeeLangTestLanguage.g:9575:1: ( 'context' )
            {
            // InternalBeeLangTestLanguage.g:9575:1: ( 'context' )
            // InternalBeeLangTestLanguage.g:9576:2: 'context'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithContextExpressionAccess().getContextKeyword_1()); 
            }
            match(input,70,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithContextExpressionAccess().getContextKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 683, rule__WithContextExpression__Group__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithContextExpression__Group__1__Impl"


    // $ANTLR start "rule__WithContextExpression__Group__2"
    // InternalBeeLangTestLanguage.g:9585:1: rule__WithContextExpression__Group__2 : rule__WithContextExpression__Group__2__Impl rule__WithContextExpression__Group__3 ;
    public final void rule__WithContextExpression__Group__2() throws RecognitionException {
        int rule__WithContextExpression__Group__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 684) ) { return ; }
            // InternalBeeLangTestLanguage.g:9589:1: ( rule__WithContextExpression__Group__2__Impl rule__WithContextExpression__Group__3 )
            // InternalBeeLangTestLanguage.g:9590:2: rule__WithContextExpression__Group__2__Impl rule__WithContextExpression__Group__3
            {
            pushFollow(FOLLOW_20);
            rule__WithContextExpression__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WithContextExpression__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 684, rule__WithContextExpression__Group__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithContextExpression__Group__2"


    // $ANTLR start "rule__WithContextExpression__Group__2__Impl"
    // InternalBeeLangTestLanguage.g:9597:1: rule__WithContextExpression__Group__2__Impl : ( ( rule__WithContextExpression__ExprAssignment_2 ) ) ;
    public final void rule__WithContextExpression__Group__2__Impl() throws RecognitionException {
        int rule__WithContextExpression__Group__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 685) ) { return ; }
            // InternalBeeLangTestLanguage.g:9601:1: ( ( ( rule__WithContextExpression__ExprAssignment_2 ) ) )
            // InternalBeeLangTestLanguage.g:9602:1: ( ( rule__WithContextExpression__ExprAssignment_2 ) )
            {
            // InternalBeeLangTestLanguage.g:9602:1: ( ( rule__WithContextExpression__ExprAssignment_2 ) )
            // InternalBeeLangTestLanguage.g:9603:2: ( rule__WithContextExpression__ExprAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithContextExpressionAccess().getExprAssignment_2()); 
            }
            // InternalBeeLangTestLanguage.g:9604:2: ( rule__WithContextExpression__ExprAssignment_2 )
            // InternalBeeLangTestLanguage.g:9604:3: rule__WithContextExpression__ExprAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__WithContextExpression__ExprAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithContextExpressionAccess().getExprAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 685, rule__WithContextExpression__Group__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithContextExpression__Group__2__Impl"


    // $ANTLR start "rule__WithContextExpression__Group__3"
    // InternalBeeLangTestLanguage.g:9612:1: rule__WithContextExpression__Group__3 : rule__WithContextExpression__Group__3__Impl rule__WithContextExpression__Group__4 ;
    public final void rule__WithContextExpression__Group__3() throws RecognitionException {
        int rule__WithContextExpression__Group__3_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 686) ) { return ; }
            // InternalBeeLangTestLanguage.g:9616:1: ( rule__WithContextExpression__Group__3__Impl rule__WithContextExpression__Group__4 )
            // InternalBeeLangTestLanguage.g:9617:2: rule__WithContextExpression__Group__3__Impl rule__WithContextExpression__Group__4
            {
            pushFollow(FOLLOW_20);
            rule__WithContextExpression__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WithContextExpression__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 686, rule__WithContextExpression__Group__3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithContextExpression__Group__3"


    // $ANTLR start "rule__WithContextExpression__Group__3__Impl"
    // InternalBeeLangTestLanguage.g:9624:1: rule__WithContextExpression__Group__3__Impl : ( ( rule__WithContextExpression__Group_3__0 )? ) ;
    public final void rule__WithContextExpression__Group__3__Impl() throws RecognitionException {
        int rule__WithContextExpression__Group__3__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 687) ) { return ; }
            // InternalBeeLangTestLanguage.g:9628:1: ( ( ( rule__WithContextExpression__Group_3__0 )? ) )
            // InternalBeeLangTestLanguage.g:9629:1: ( ( rule__WithContextExpression__Group_3__0 )? )
            {
            // InternalBeeLangTestLanguage.g:9629:1: ( ( rule__WithContextExpression__Group_3__0 )? )
            // InternalBeeLangTestLanguage.g:9630:2: ( rule__WithContextExpression__Group_3__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithContextExpressionAccess().getGroup_3()); 
            }
            // InternalBeeLangTestLanguage.g:9631:2: ( rule__WithContextExpression__Group_3__0 )?
            int alt78=2;
            int LA78_0 = input.LA(1);

            if ( (LA78_0==56) ) {
                alt78=1;
            }
            switch (alt78) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:9631:3: rule__WithContextExpression__Group_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__WithContextExpression__Group_3__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithContextExpressionAccess().getGroup_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 687, rule__WithContextExpression__Group__3__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithContextExpression__Group__3__Impl"


    // $ANTLR start "rule__WithContextExpression__Group__4"
    // InternalBeeLangTestLanguage.g:9639:1: rule__WithContextExpression__Group__4 : rule__WithContextExpression__Group__4__Impl ;
    public final void rule__WithContextExpression__Group__4() throws RecognitionException {
        int rule__WithContextExpression__Group__4_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 688) ) { return ; }
            // InternalBeeLangTestLanguage.g:9643:1: ( rule__WithContextExpression__Group__4__Impl )
            // InternalBeeLangTestLanguage.g:9644:2: rule__WithContextExpression__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__WithContextExpression__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 688, rule__WithContextExpression__Group__4_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithContextExpression__Group__4"


    // $ANTLR start "rule__WithContextExpression__Group__4__Impl"
    // InternalBeeLangTestLanguage.g:9650:1: rule__WithContextExpression__Group__4__Impl : ( ( rule__WithContextExpression__ContextBlockAssignment_4 ) ) ;
    public final void rule__WithContextExpression__Group__4__Impl() throws RecognitionException {
        int rule__WithContextExpression__Group__4__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 689) ) { return ; }
            // InternalBeeLangTestLanguage.g:9654:1: ( ( ( rule__WithContextExpression__ContextBlockAssignment_4 ) ) )
            // InternalBeeLangTestLanguage.g:9655:1: ( ( rule__WithContextExpression__ContextBlockAssignment_4 ) )
            {
            // InternalBeeLangTestLanguage.g:9655:1: ( ( rule__WithContextExpression__ContextBlockAssignment_4 ) )
            // InternalBeeLangTestLanguage.g:9656:2: ( rule__WithContextExpression__ContextBlockAssignment_4 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithContextExpressionAccess().getContextBlockAssignment_4()); 
            }
            // InternalBeeLangTestLanguage.g:9657:2: ( rule__WithContextExpression__ContextBlockAssignment_4 )
            // InternalBeeLangTestLanguage.g:9657:3: rule__WithContextExpression__ContextBlockAssignment_4
            {
            pushFollow(FOLLOW_2);
            rule__WithContextExpression__ContextBlockAssignment_4();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithContextExpressionAccess().getContextBlockAssignment_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 689, rule__WithContextExpression__Group__4__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithContextExpression__Group__4__Impl"


    // $ANTLR start "rule__WithContextExpression__Group_3__0"
    // InternalBeeLangTestLanguage.g:9666:1: rule__WithContextExpression__Group_3__0 : rule__WithContextExpression__Group_3__0__Impl rule__WithContextExpression__Group_3__1 ;
    public final void rule__WithContextExpression__Group_3__0() throws RecognitionException {
        int rule__WithContextExpression__Group_3__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 690) ) { return ; }
            // InternalBeeLangTestLanguage.g:9670:1: ( rule__WithContextExpression__Group_3__0__Impl rule__WithContextExpression__Group_3__1 )
            // InternalBeeLangTestLanguage.g:9671:2: rule__WithContextExpression__Group_3__0__Impl rule__WithContextExpression__Group_3__1
            {
            pushFollow(FOLLOW_9);
            rule__WithContextExpression__Group_3__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WithContextExpression__Group_3__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 690, rule__WithContextExpression__Group_3__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithContextExpression__Group_3__0"


    // $ANTLR start "rule__WithContextExpression__Group_3__0__Impl"
    // InternalBeeLangTestLanguage.g:9678:1: rule__WithContextExpression__Group_3__0__Impl : ( 'as' ) ;
    public final void rule__WithContextExpression__Group_3__0__Impl() throws RecognitionException {
        int rule__WithContextExpression__Group_3__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 691) ) { return ; }
            // InternalBeeLangTestLanguage.g:9682:1: ( ( 'as' ) )
            // InternalBeeLangTestLanguage.g:9683:1: ( 'as' )
            {
            // InternalBeeLangTestLanguage.g:9683:1: ( 'as' )
            // InternalBeeLangTestLanguage.g:9684:2: 'as'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithContextExpressionAccess().getAsKeyword_3_0()); 
            }
            match(input,56,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithContextExpressionAccess().getAsKeyword_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 691, rule__WithContextExpression__Group_3__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithContextExpression__Group_3__0__Impl"


    // $ANTLR start "rule__WithContextExpression__Group_3__1"
    // InternalBeeLangTestLanguage.g:9693:1: rule__WithContextExpression__Group_3__1 : rule__WithContextExpression__Group_3__1__Impl ;
    public final void rule__WithContextExpression__Group_3__1() throws RecognitionException {
        int rule__WithContextExpression__Group_3__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 692) ) { return ; }
            // InternalBeeLangTestLanguage.g:9697:1: ( rule__WithContextExpression__Group_3__1__Impl )
            // InternalBeeLangTestLanguage.g:9698:2: rule__WithContextExpression__Group_3__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__WithContextExpression__Group_3__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 692, rule__WithContextExpression__Group_3__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithContextExpression__Group_3__1"


    // $ANTLR start "rule__WithContextExpression__Group_3__1__Impl"
    // InternalBeeLangTestLanguage.g:9704:1: rule__WithContextExpression__Group_3__1__Impl : ( ( rule__WithContextExpression__AliasAssignment_3_1 ) ) ;
    public final void rule__WithContextExpression__Group_3__1__Impl() throws RecognitionException {
        int rule__WithContextExpression__Group_3__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 693) ) { return ; }
            // InternalBeeLangTestLanguage.g:9708:1: ( ( ( rule__WithContextExpression__AliasAssignment_3_1 ) ) )
            // InternalBeeLangTestLanguage.g:9709:1: ( ( rule__WithContextExpression__AliasAssignment_3_1 ) )
            {
            // InternalBeeLangTestLanguage.g:9709:1: ( ( rule__WithContextExpression__AliasAssignment_3_1 ) )
            // InternalBeeLangTestLanguage.g:9710:2: ( rule__WithContextExpression__AliasAssignment_3_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithContextExpressionAccess().getAliasAssignment_3_1()); 
            }
            // InternalBeeLangTestLanguage.g:9711:2: ( rule__WithContextExpression__AliasAssignment_3_1 )
            // InternalBeeLangTestLanguage.g:9711:3: rule__WithContextExpression__AliasAssignment_3_1
            {
            pushFollow(FOLLOW_2);
            rule__WithContextExpression__AliasAssignment_3_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithContextExpressionAccess().getAliasAssignment_3_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 693, rule__WithContextExpression__Group_3__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithContextExpression__Group_3__1__Impl"


    // $ANTLR start "rule__BlockExpression__Group__0"
    // InternalBeeLangTestLanguage.g:9720:1: rule__BlockExpression__Group__0 : rule__BlockExpression__Group__0__Impl rule__BlockExpression__Group__1 ;
    public final void rule__BlockExpression__Group__0() throws RecognitionException {
        int rule__BlockExpression__Group__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 694) ) { return ; }
            // InternalBeeLangTestLanguage.g:9724:1: ( rule__BlockExpression__Group__0__Impl rule__BlockExpression__Group__1 )
            // InternalBeeLangTestLanguage.g:9725:2: rule__BlockExpression__Group__0__Impl rule__BlockExpression__Group__1
            {
            pushFollow(FOLLOW_17);
            rule__BlockExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__BlockExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 694, rule__BlockExpression__Group__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BlockExpression__Group__0"


    // $ANTLR start "rule__BlockExpression__Group__0__Impl"
    // InternalBeeLangTestLanguage.g:9732:1: rule__BlockExpression__Group__0__Impl : ( () ) ;
    public final void rule__BlockExpression__Group__0__Impl() throws RecognitionException {
        int rule__BlockExpression__Group__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 695) ) { return ; }
            // InternalBeeLangTestLanguage.g:9736:1: ( ( () ) )
            // InternalBeeLangTestLanguage.g:9737:1: ( () )
            {
            // InternalBeeLangTestLanguage.g:9737:1: ( () )
            // InternalBeeLangTestLanguage.g:9738:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBlockExpressionAccess().getChainedExpressionAction_0()); 
            }
            // InternalBeeLangTestLanguage.g:9739:2: ()
            // InternalBeeLangTestLanguage.g:9739:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBlockExpressionAccess().getChainedExpressionAction_0()); 
            }

            }


            }

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 695, rule__BlockExpression__Group__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BlockExpression__Group__0__Impl"


    // $ANTLR start "rule__BlockExpression__Group__1"
    // InternalBeeLangTestLanguage.g:9747:1: rule__BlockExpression__Group__1 : rule__BlockExpression__Group__1__Impl rule__BlockExpression__Group__2 ;
    public final void rule__BlockExpression__Group__1() throws RecognitionException {
        int rule__BlockExpression__Group__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 696) ) { return ; }
            // InternalBeeLangTestLanguage.g:9751:1: ( rule__BlockExpression__Group__1__Impl rule__BlockExpression__Group__2 )
            // InternalBeeLangTestLanguage.g:9752:2: rule__BlockExpression__Group__1__Impl rule__BlockExpression__Group__2
            {
            pushFollow(FOLLOW_68);
            rule__BlockExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__BlockExpression__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 696, rule__BlockExpression__Group__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BlockExpression__Group__1"


    // $ANTLR start "rule__BlockExpression__Group__1__Impl"
    // InternalBeeLangTestLanguage.g:9759:1: rule__BlockExpression__Group__1__Impl : ( '{' ) ;
    public final void rule__BlockExpression__Group__1__Impl() throws RecognitionException {
        int rule__BlockExpression__Group__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 697) ) { return ; }
            // InternalBeeLangTestLanguage.g:9763:1: ( ( '{' ) )
            // InternalBeeLangTestLanguage.g:9764:1: ( '{' )
            {
            // InternalBeeLangTestLanguage.g:9764:1: ( '{' )
            // InternalBeeLangTestLanguage.g:9765:2: '{'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBlockExpressionAccess().getLeftCurlyBracketKeyword_1()); 
            }
            match(input,44,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBlockExpressionAccess().getLeftCurlyBracketKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 697, rule__BlockExpression__Group__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BlockExpression__Group__1__Impl"


    // $ANTLR start "rule__BlockExpression__Group__2"
    // InternalBeeLangTestLanguage.g:9774:1: rule__BlockExpression__Group__2 : rule__BlockExpression__Group__2__Impl rule__BlockExpression__Group__3 ;
    public final void rule__BlockExpression__Group__2() throws RecognitionException {
        int rule__BlockExpression__Group__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 698) ) { return ; }
            // InternalBeeLangTestLanguage.g:9778:1: ( rule__BlockExpression__Group__2__Impl rule__BlockExpression__Group__3 )
            // InternalBeeLangTestLanguage.g:9779:2: rule__BlockExpression__Group__2__Impl rule__BlockExpression__Group__3
            {
            pushFollow(FOLLOW_68);
            rule__BlockExpression__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__BlockExpression__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 698, rule__BlockExpression__Group__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BlockExpression__Group__2"


    // $ANTLR start "rule__BlockExpression__Group__2__Impl"
    // InternalBeeLangTestLanguage.g:9786:1: rule__BlockExpression__Group__2__Impl : ( ( rule__BlockExpression__Group_2__0 )* ) ;
    public final void rule__BlockExpression__Group__2__Impl() throws RecognitionException {
        int rule__BlockExpression__Group__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 699) ) { return ; }
            // InternalBeeLangTestLanguage.g:9790:1: ( ( ( rule__BlockExpression__Group_2__0 )* ) )
            // InternalBeeLangTestLanguage.g:9791:1: ( ( rule__BlockExpression__Group_2__0 )* )
            {
            // InternalBeeLangTestLanguage.g:9791:1: ( ( rule__BlockExpression__Group_2__0 )* )
            // InternalBeeLangTestLanguage.g:9792:2: ( rule__BlockExpression__Group_2__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBlockExpressionAccess().getGroup_2()); 
            }
            // InternalBeeLangTestLanguage.g:9793:2: ( rule__BlockExpression__Group_2__0 )*
            loop79:
            do {
                int alt79=2;
                int LA79_0 = input.LA(1);

                if ( (LA79_0==RULE_STRING||LA79_0==RULE_ID||LA79_0==13||LA79_0==29||LA79_0==31||(LA79_0>=35 && LA79_0<=44)||LA79_0==60||LA79_0==63||LA79_0==69||LA79_0==71||LA79_0==74||LA79_0==76) ) {
                    alt79=1;
                }


                switch (alt79) {
            	case 1 :
            	    // InternalBeeLangTestLanguage.g:9793:3: rule__BlockExpression__Group_2__0
            	    {
            	    pushFollow(FOLLOW_69);
            	    rule__BlockExpression__Group_2__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop79;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBlockExpressionAccess().getGroup_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 699, rule__BlockExpression__Group__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BlockExpression__Group__2__Impl"


    // $ANTLR start "rule__BlockExpression__Group__3"
    // InternalBeeLangTestLanguage.g:9801:1: rule__BlockExpression__Group__3 : rule__BlockExpression__Group__3__Impl ;
    public final void rule__BlockExpression__Group__3() throws RecognitionException {
        int rule__BlockExpression__Group__3_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 700) ) { return ; }
            // InternalBeeLangTestLanguage.g:9805:1: ( rule__BlockExpression__Group__3__Impl )
            // InternalBeeLangTestLanguage.g:9806:2: rule__BlockExpression__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__BlockExpression__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 700, rule__BlockExpression__Group__3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BlockExpression__Group__3"


    // $ANTLR start "rule__BlockExpression__Group__3__Impl"
    // InternalBeeLangTestLanguage.g:9812:1: rule__BlockExpression__Group__3__Impl : ( '}' ) ;
    public final void rule__BlockExpression__Group__3__Impl() throws RecognitionException {
        int rule__BlockExpression__Group__3__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 701) ) { return ; }
            // InternalBeeLangTestLanguage.g:9816:1: ( ( '}' ) )
            // InternalBeeLangTestLanguage.g:9817:1: ( '}' )
            {
            // InternalBeeLangTestLanguage.g:9817:1: ( '}' )
            // InternalBeeLangTestLanguage.g:9818:2: '}'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBlockExpressionAccess().getRightCurlyBracketKeyword_3()); 
            }
            match(input,45,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBlockExpressionAccess().getRightCurlyBracketKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 701, rule__BlockExpression__Group__3__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BlockExpression__Group__3__Impl"


    // $ANTLR start "rule__BlockExpression__Group_2__0"
    // InternalBeeLangTestLanguage.g:9828:1: rule__BlockExpression__Group_2__0 : rule__BlockExpression__Group_2__0__Impl rule__BlockExpression__Group_2__1 ;
    public final void rule__BlockExpression__Group_2__0() throws RecognitionException {
        int rule__BlockExpression__Group_2__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 702) ) { return ; }
            // InternalBeeLangTestLanguage.g:9832:1: ( rule__BlockExpression__Group_2__0__Impl rule__BlockExpression__Group_2__1 )
            // InternalBeeLangTestLanguage.g:9833:2: rule__BlockExpression__Group_2__0__Impl rule__BlockExpression__Group_2__1
            {
            pushFollow(FOLLOW_14);
            rule__BlockExpression__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__BlockExpression__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 702, rule__BlockExpression__Group_2__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BlockExpression__Group_2__0"


    // $ANTLR start "rule__BlockExpression__Group_2__0__Impl"
    // InternalBeeLangTestLanguage.g:9840:1: rule__BlockExpression__Group_2__0__Impl : ( ( rule__BlockExpression__ExpressionsAssignment_2_0 ) ) ;
    public final void rule__BlockExpression__Group_2__0__Impl() throws RecognitionException {
        int rule__BlockExpression__Group_2__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 703) ) { return ; }
            // InternalBeeLangTestLanguage.g:9844:1: ( ( ( rule__BlockExpression__ExpressionsAssignment_2_0 ) ) )
            // InternalBeeLangTestLanguage.g:9845:1: ( ( rule__BlockExpression__ExpressionsAssignment_2_0 ) )
            {
            // InternalBeeLangTestLanguage.g:9845:1: ( ( rule__BlockExpression__ExpressionsAssignment_2_0 ) )
            // InternalBeeLangTestLanguage.g:9846:2: ( rule__BlockExpression__ExpressionsAssignment_2_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBlockExpressionAccess().getExpressionsAssignment_2_0()); 
            }
            // InternalBeeLangTestLanguage.g:9847:2: ( rule__BlockExpression__ExpressionsAssignment_2_0 )
            // InternalBeeLangTestLanguage.g:9847:3: rule__BlockExpression__ExpressionsAssignment_2_0
            {
            pushFollow(FOLLOW_2);
            rule__BlockExpression__ExpressionsAssignment_2_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBlockExpressionAccess().getExpressionsAssignment_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 703, rule__BlockExpression__Group_2__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BlockExpression__Group_2__0__Impl"


    // $ANTLR start "rule__BlockExpression__Group_2__1"
    // InternalBeeLangTestLanguage.g:9855:1: rule__BlockExpression__Group_2__1 : rule__BlockExpression__Group_2__1__Impl ;
    public final void rule__BlockExpression__Group_2__1() throws RecognitionException {
        int rule__BlockExpression__Group_2__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 704) ) { return ; }
            // InternalBeeLangTestLanguage.g:9859:1: ( rule__BlockExpression__Group_2__1__Impl )
            // InternalBeeLangTestLanguage.g:9860:2: rule__BlockExpression__Group_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__BlockExpression__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 704, rule__BlockExpression__Group_2__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BlockExpression__Group_2__1"


    // $ANTLR start "rule__BlockExpression__Group_2__1__Impl"
    // InternalBeeLangTestLanguage.g:9866:1: rule__BlockExpression__Group_2__1__Impl : ( ';' ) ;
    public final void rule__BlockExpression__Group_2__1__Impl() throws RecognitionException {
        int rule__BlockExpression__Group_2__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 705) ) { return ; }
            // InternalBeeLangTestLanguage.g:9870:1: ( ( ';' ) )
            // InternalBeeLangTestLanguage.g:9871:1: ( ';' )
            {
            // InternalBeeLangTestLanguage.g:9871:1: ( ';' )
            // InternalBeeLangTestLanguage.g:9872:2: ';'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBlockExpressionAccess().getSemicolonKeyword_2_1()); 
            }
            match(input,50,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBlockExpressionAccess().getSemicolonKeyword_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 705, rule__BlockExpression__Group_2__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BlockExpression__Group_2__1__Impl"


    // $ANTLR start "rule__Value__Group__0"
    // InternalBeeLangTestLanguage.g:9882:1: rule__Value__Group__0 : rule__Value__Group__0__Impl rule__Value__Group__1 ;
    public final void rule__Value__Group__0() throws RecognitionException {
        int rule__Value__Group__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 706) ) { return ; }
            // InternalBeeLangTestLanguage.g:9886:1: ( rule__Value__Group__0__Impl rule__Value__Group__1 )
            // InternalBeeLangTestLanguage.g:9887:2: rule__Value__Group__0__Impl rule__Value__Group__1
            {
            pushFollow(FOLLOW_9);
            rule__Value__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Value__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 706, rule__Value__Group__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Value__Group__0"


    // $ANTLR start "rule__Value__Group__0__Impl"
    // InternalBeeLangTestLanguage.g:9894:1: rule__Value__Group__0__Impl : ( () ) ;
    public final void rule__Value__Group__0__Impl() throws RecognitionException {
        int rule__Value__Group__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 707) ) { return ; }
            // InternalBeeLangTestLanguage.g:9898:1: ( ( () ) )
            // InternalBeeLangTestLanguage.g:9899:1: ( () )
            {
            // InternalBeeLangTestLanguage.g:9899:1: ( () )
            // InternalBeeLangTestLanguage.g:9900:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValueAccess().getVariableExpressionAction_0()); 
            }
            // InternalBeeLangTestLanguage.g:9901:2: ()
            // InternalBeeLangTestLanguage.g:9901:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getValueAccess().getVariableExpressionAction_0()); 
            }

            }


            }

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 707, rule__Value__Group__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Value__Group__0__Impl"


    // $ANTLR start "rule__Value__Group__1"
    // InternalBeeLangTestLanguage.g:9909:1: rule__Value__Group__1 : rule__Value__Group__1__Impl ;
    public final void rule__Value__Group__1() throws RecognitionException {
        int rule__Value__Group__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 708) ) { return ; }
            // InternalBeeLangTestLanguage.g:9913:1: ( rule__Value__Group__1__Impl )
            // InternalBeeLangTestLanguage.g:9914:2: rule__Value__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Value__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 708, rule__Value__Group__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Value__Group__1"


    // $ANTLR start "rule__Value__Group__1__Impl"
    // InternalBeeLangTestLanguage.g:9920:1: rule__Value__Group__1__Impl : ( ( rule__Value__NameAssignment_1 ) ) ;
    public final void rule__Value__Group__1__Impl() throws RecognitionException {
        int rule__Value__Group__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 709) ) { return ; }
            // InternalBeeLangTestLanguage.g:9924:1: ( ( ( rule__Value__NameAssignment_1 ) ) )
            // InternalBeeLangTestLanguage.g:9925:1: ( ( rule__Value__NameAssignment_1 ) )
            {
            // InternalBeeLangTestLanguage.g:9925:1: ( ( rule__Value__NameAssignment_1 ) )
            // InternalBeeLangTestLanguage.g:9926:2: ( rule__Value__NameAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValueAccess().getNameAssignment_1()); 
            }
            // InternalBeeLangTestLanguage.g:9927:2: ( rule__Value__NameAssignment_1 )
            // InternalBeeLangTestLanguage.g:9927:3: rule__Value__NameAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__Value__NameAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getValueAccess().getNameAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 709, rule__Value__Group__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Value__Group__1__Impl"


    // $ANTLR start "rule__KeywordVariables__Group__0"
    // InternalBeeLangTestLanguage.g:9936:1: rule__KeywordVariables__Group__0 : rule__KeywordVariables__Group__0__Impl rule__KeywordVariables__Group__1 ;
    public final void rule__KeywordVariables__Group__0() throws RecognitionException {
        int rule__KeywordVariables__Group__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 710) ) { return ; }
            // InternalBeeLangTestLanguage.g:9940:1: ( rule__KeywordVariables__Group__0__Impl rule__KeywordVariables__Group__1 )
            // InternalBeeLangTestLanguage.g:9941:2: rule__KeywordVariables__Group__0__Impl rule__KeywordVariables__Group__1
            {
            pushFollow(FOLLOW_70);
            rule__KeywordVariables__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__KeywordVariables__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 710, rule__KeywordVariables__Group__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__KeywordVariables__Group__0"


    // $ANTLR start "rule__KeywordVariables__Group__0__Impl"
    // InternalBeeLangTestLanguage.g:9948:1: rule__KeywordVariables__Group__0__Impl : ( () ) ;
    public final void rule__KeywordVariables__Group__0__Impl() throws RecognitionException {
        int rule__KeywordVariables__Group__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 711) ) { return ; }
            // InternalBeeLangTestLanguage.g:9952:1: ( ( () ) )
            // InternalBeeLangTestLanguage.g:9953:1: ( () )
            {
            // InternalBeeLangTestLanguage.g:9953:1: ( () )
            // InternalBeeLangTestLanguage.g:9954:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getKeywordVariablesAccess().getVariableExpressionAction_0()); 
            }
            // InternalBeeLangTestLanguage.g:9955:2: ()
            // InternalBeeLangTestLanguage.g:9955:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getKeywordVariablesAccess().getVariableExpressionAction_0()); 
            }

            }


            }

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 711, rule__KeywordVariables__Group__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__KeywordVariables__Group__0__Impl"


    // $ANTLR start "rule__KeywordVariables__Group__1"
    // InternalBeeLangTestLanguage.g:9963:1: rule__KeywordVariables__Group__1 : rule__KeywordVariables__Group__1__Impl ;
    public final void rule__KeywordVariables__Group__1() throws RecognitionException {
        int rule__KeywordVariables__Group__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 712) ) { return ; }
            // InternalBeeLangTestLanguage.g:9967:1: ( rule__KeywordVariables__Group__1__Impl )
            // InternalBeeLangTestLanguage.g:9968:2: rule__KeywordVariables__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__KeywordVariables__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 712, rule__KeywordVariables__Group__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__KeywordVariables__Group__1"


    // $ANTLR start "rule__KeywordVariables__Group__1__Impl"
    // InternalBeeLangTestLanguage.g:9974:1: rule__KeywordVariables__Group__1__Impl : ( ( rule__KeywordVariables__NameAssignment_1 ) ) ;
    public final void rule__KeywordVariables__Group__1__Impl() throws RecognitionException {
        int rule__KeywordVariables__Group__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 713) ) { return ; }
            // InternalBeeLangTestLanguage.g:9978:1: ( ( ( rule__KeywordVariables__NameAssignment_1 ) ) )
            // InternalBeeLangTestLanguage.g:9979:1: ( ( rule__KeywordVariables__NameAssignment_1 ) )
            {
            // InternalBeeLangTestLanguage.g:9979:1: ( ( rule__KeywordVariables__NameAssignment_1 ) )
            // InternalBeeLangTestLanguage.g:9980:2: ( rule__KeywordVariables__NameAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getKeywordVariablesAccess().getNameAssignment_1()); 
            }
            // InternalBeeLangTestLanguage.g:9981:2: ( rule__KeywordVariables__NameAssignment_1 )
            // InternalBeeLangTestLanguage.g:9981:3: rule__KeywordVariables__NameAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__KeywordVariables__NameAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getKeywordVariablesAccess().getNameAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 713, rule__KeywordVariables__Group__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__KeywordVariables__Group__1__Impl"


    // $ANTLR start "rule__OperationCall__Group__0"
    // InternalBeeLangTestLanguage.g:9990:1: rule__OperationCall__Group__0 : rule__OperationCall__Group__0__Impl rule__OperationCall__Group__1 ;
    public final void rule__OperationCall__Group__0() throws RecognitionException {
        int rule__OperationCall__Group__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 714) ) { return ; }
            // InternalBeeLangTestLanguage.g:9994:1: ( rule__OperationCall__Group__0__Impl rule__OperationCall__Group__1 )
            // InternalBeeLangTestLanguage.g:9995:2: rule__OperationCall__Group__0__Impl rule__OperationCall__Group__1
            {
            pushFollow(FOLLOW_9);
            rule__OperationCall__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OperationCall__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 714, rule__OperationCall__Group__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperationCall__Group__0"


    // $ANTLR start "rule__OperationCall__Group__0__Impl"
    // InternalBeeLangTestLanguage.g:10002:1: rule__OperationCall__Group__0__Impl : ( () ) ;
    public final void rule__OperationCall__Group__0__Impl() throws RecognitionException {
        int rule__OperationCall__Group__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 715) ) { return ; }
            // InternalBeeLangTestLanguage.g:10006:1: ( ( () ) )
            // InternalBeeLangTestLanguage.g:10007:1: ( () )
            {
            // InternalBeeLangTestLanguage.g:10007:1: ( () )
            // InternalBeeLangTestLanguage.g:10008:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperationCallAccess().getCallNamedFunctionAction_0()); 
            }
            // InternalBeeLangTestLanguage.g:10009:2: ()
            // InternalBeeLangTestLanguage.g:10009:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperationCallAccess().getCallNamedFunctionAction_0()); 
            }

            }


            }

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 715, rule__OperationCall__Group__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperationCall__Group__0__Impl"


    // $ANTLR start "rule__OperationCall__Group__1"
    // InternalBeeLangTestLanguage.g:10017:1: rule__OperationCall__Group__1 : rule__OperationCall__Group__1__Impl rule__OperationCall__Group__2 ;
    public final void rule__OperationCall__Group__1() throws RecognitionException {
        int rule__OperationCall__Group__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 716) ) { return ; }
            // InternalBeeLangTestLanguage.g:10021:1: ( rule__OperationCall__Group__1__Impl rule__OperationCall__Group__2 )
            // InternalBeeLangTestLanguage.g:10022:2: rule__OperationCall__Group__1__Impl rule__OperationCall__Group__2
            {
            pushFollow(FOLLOW_60);
            rule__OperationCall__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OperationCall__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 716, rule__OperationCall__Group__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperationCall__Group__1"


    // $ANTLR start "rule__OperationCall__Group__1__Impl"
    // InternalBeeLangTestLanguage.g:10029:1: rule__OperationCall__Group__1__Impl : ( ( rule__OperationCall__NameAssignment_1 ) ) ;
    public final void rule__OperationCall__Group__1__Impl() throws RecognitionException {
        int rule__OperationCall__Group__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 717) ) { return ; }
            // InternalBeeLangTestLanguage.g:10033:1: ( ( ( rule__OperationCall__NameAssignment_1 ) ) )
            // InternalBeeLangTestLanguage.g:10034:1: ( ( rule__OperationCall__NameAssignment_1 ) )
            {
            // InternalBeeLangTestLanguage.g:10034:1: ( ( rule__OperationCall__NameAssignment_1 ) )
            // InternalBeeLangTestLanguage.g:10035:2: ( rule__OperationCall__NameAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperationCallAccess().getNameAssignment_1()); 
            }
            // InternalBeeLangTestLanguage.g:10036:2: ( rule__OperationCall__NameAssignment_1 )
            // InternalBeeLangTestLanguage.g:10036:3: rule__OperationCall__NameAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__OperationCall__NameAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperationCallAccess().getNameAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 717, rule__OperationCall__Group__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperationCall__Group__1__Impl"


    // $ANTLR start "rule__OperationCall__Group__2"
    // InternalBeeLangTestLanguage.g:10044:1: rule__OperationCall__Group__2 : rule__OperationCall__Group__2__Impl rule__OperationCall__Group__3 ;
    public final void rule__OperationCall__Group__2() throws RecognitionException {
        int rule__OperationCall__Group__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 718) ) { return ; }
            // InternalBeeLangTestLanguage.g:10048:1: ( rule__OperationCall__Group__2__Impl rule__OperationCall__Group__3 )
            // InternalBeeLangTestLanguage.g:10049:2: rule__OperationCall__Group__2__Impl rule__OperationCall__Group__3
            {
            pushFollow(FOLLOW_61);
            rule__OperationCall__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OperationCall__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 718, rule__OperationCall__Group__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperationCall__Group__2"


    // $ANTLR start "rule__OperationCall__Group__2__Impl"
    // InternalBeeLangTestLanguage.g:10056:1: rule__OperationCall__Group__2__Impl : ( '(' ) ;
    public final void rule__OperationCall__Group__2__Impl() throws RecognitionException {
        int rule__OperationCall__Group__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 719) ) { return ; }
            // InternalBeeLangTestLanguage.g:10060:1: ( ( '(' ) )
            // InternalBeeLangTestLanguage.g:10061:1: ( '(' )
            {
            // InternalBeeLangTestLanguage.g:10061:1: ( '(' )
            // InternalBeeLangTestLanguage.g:10062:2: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperationCallAccess().getLeftParenthesisKeyword_2()); 
            }
            match(input,60,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperationCallAccess().getLeftParenthesisKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 719, rule__OperationCall__Group__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperationCall__Group__2__Impl"


    // $ANTLR start "rule__OperationCall__Group__3"
    // InternalBeeLangTestLanguage.g:10071:1: rule__OperationCall__Group__3 : rule__OperationCall__Group__3__Impl rule__OperationCall__Group__4 ;
    public final void rule__OperationCall__Group__3() throws RecognitionException {
        int rule__OperationCall__Group__3_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 720) ) { return ; }
            // InternalBeeLangTestLanguage.g:10075:1: ( rule__OperationCall__Group__3__Impl rule__OperationCall__Group__4 )
            // InternalBeeLangTestLanguage.g:10076:2: rule__OperationCall__Group__3__Impl rule__OperationCall__Group__4
            {
            pushFollow(FOLLOW_61);
            rule__OperationCall__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OperationCall__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 720, rule__OperationCall__Group__3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperationCall__Group__3"


    // $ANTLR start "rule__OperationCall__Group__3__Impl"
    // InternalBeeLangTestLanguage.g:10083:1: rule__OperationCall__Group__3__Impl : ( ( rule__OperationCall__ParameterListAssignment_3 )? ) ;
    public final void rule__OperationCall__Group__3__Impl() throws RecognitionException {
        int rule__OperationCall__Group__3__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 721) ) { return ; }
            // InternalBeeLangTestLanguage.g:10087:1: ( ( ( rule__OperationCall__ParameterListAssignment_3 )? ) )
            // InternalBeeLangTestLanguage.g:10088:1: ( ( rule__OperationCall__ParameterListAssignment_3 )? )
            {
            // InternalBeeLangTestLanguage.g:10088:1: ( ( rule__OperationCall__ParameterListAssignment_3 )? )
            // InternalBeeLangTestLanguage.g:10089:2: ( rule__OperationCall__ParameterListAssignment_3 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperationCallAccess().getParameterListAssignment_3()); 
            }
            // InternalBeeLangTestLanguage.g:10090:2: ( rule__OperationCall__ParameterListAssignment_3 )?
            int alt80=2;
            int LA80_0 = input.LA(1);

            if ( (LA80_0==RULE_STRING||LA80_0==RULE_ID||LA80_0==13||LA80_0==28||LA80_0==31||(LA80_0>=35 && LA80_0<=44)||LA80_0==60||LA80_0==63||LA80_0==69||(LA80_0>=71 && LA80_0<=72)||LA80_0==75) ) {
                alt80=1;
            }
            switch (alt80) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:10090:3: rule__OperationCall__ParameterListAssignment_3
                    {
                    pushFollow(FOLLOW_2);
                    rule__OperationCall__ParameterListAssignment_3();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperationCallAccess().getParameterListAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 721, rule__OperationCall__Group__3__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperationCall__Group__3__Impl"


    // $ANTLR start "rule__OperationCall__Group__4"
    // InternalBeeLangTestLanguage.g:10098:1: rule__OperationCall__Group__4 : rule__OperationCall__Group__4__Impl ;
    public final void rule__OperationCall__Group__4() throws RecognitionException {
        int rule__OperationCall__Group__4_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 722) ) { return ; }
            // InternalBeeLangTestLanguage.g:10102:1: ( rule__OperationCall__Group__4__Impl )
            // InternalBeeLangTestLanguage.g:10103:2: rule__OperationCall__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OperationCall__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 722, rule__OperationCall__Group__4_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperationCall__Group__4"


    // $ANTLR start "rule__OperationCall__Group__4__Impl"
    // InternalBeeLangTestLanguage.g:10109:1: rule__OperationCall__Group__4__Impl : ( ')' ) ;
    public final void rule__OperationCall__Group__4__Impl() throws RecognitionException {
        int rule__OperationCall__Group__4__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 723) ) { return ; }
            // InternalBeeLangTestLanguage.g:10113:1: ( ( ')' ) )
            // InternalBeeLangTestLanguage.g:10114:1: ( ')' )
            {
            // InternalBeeLangTestLanguage.g:10114:1: ( ')' )
            // InternalBeeLangTestLanguage.g:10115:2: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperationCallAccess().getRightParenthesisKeyword_4()); 
            }
            match(input,61,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperationCallAccess().getRightParenthesisKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 723, rule__OperationCall__Group__4__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperationCall__Group__4__Impl"


    // $ANTLR start "rule__ConstructorCallExpression__Group__0"
    // InternalBeeLangTestLanguage.g:10125:1: rule__ConstructorCallExpression__Group__0 : rule__ConstructorCallExpression__Group__0__Impl rule__ConstructorCallExpression__Group__1 ;
    public final void rule__ConstructorCallExpression__Group__0() throws RecognitionException {
        int rule__ConstructorCallExpression__Group__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 724) ) { return ; }
            // InternalBeeLangTestLanguage.g:10129:1: ( rule__ConstructorCallExpression__Group__0__Impl rule__ConstructorCallExpression__Group__1 )
            // InternalBeeLangTestLanguage.g:10130:2: rule__ConstructorCallExpression__Group__0__Impl rule__ConstructorCallExpression__Group__1
            {
            pushFollow(FOLLOW_71);
            rule__ConstructorCallExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ConstructorCallExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 724, rule__ConstructorCallExpression__Group__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConstructorCallExpression__Group__0"


    // $ANTLR start "rule__ConstructorCallExpression__Group__0__Impl"
    // InternalBeeLangTestLanguage.g:10137:1: rule__ConstructorCallExpression__Group__0__Impl : ( () ) ;
    public final void rule__ConstructorCallExpression__Group__0__Impl() throws RecognitionException {
        int rule__ConstructorCallExpression__Group__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 725) ) { return ; }
            // InternalBeeLangTestLanguage.g:10141:1: ( ( () ) )
            // InternalBeeLangTestLanguage.g:10142:1: ( () )
            {
            // InternalBeeLangTestLanguage.g:10142:1: ( () )
            // InternalBeeLangTestLanguage.g:10143:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConstructorCallExpressionAccess().getCreateExpressionAction_0()); 
            }
            // InternalBeeLangTestLanguage.g:10144:2: ()
            // InternalBeeLangTestLanguage.g:10144:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConstructorCallExpressionAccess().getCreateExpressionAction_0()); 
            }

            }


            }

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 725, rule__ConstructorCallExpression__Group__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConstructorCallExpression__Group__0__Impl"


    // $ANTLR start "rule__ConstructorCallExpression__Group__1"
    // InternalBeeLangTestLanguage.g:10152:1: rule__ConstructorCallExpression__Group__1 : rule__ConstructorCallExpression__Group__1__Impl rule__ConstructorCallExpression__Group__2 ;
    public final void rule__ConstructorCallExpression__Group__1() throws RecognitionException {
        int rule__ConstructorCallExpression__Group__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 726) ) { return ; }
            // InternalBeeLangTestLanguage.g:10156:1: ( rule__ConstructorCallExpression__Group__1__Impl rule__ConstructorCallExpression__Group__2 )
            // InternalBeeLangTestLanguage.g:10157:2: rule__ConstructorCallExpression__Group__1__Impl rule__ConstructorCallExpression__Group__2
            {
            pushFollow(FOLLOW_9);
            rule__ConstructorCallExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ConstructorCallExpression__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 726, rule__ConstructorCallExpression__Group__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConstructorCallExpression__Group__1"


    // $ANTLR start "rule__ConstructorCallExpression__Group__1__Impl"
    // InternalBeeLangTestLanguage.g:10164:1: rule__ConstructorCallExpression__Group__1__Impl : ( 'new' ) ;
    public final void rule__ConstructorCallExpression__Group__1__Impl() throws RecognitionException {
        int rule__ConstructorCallExpression__Group__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 727) ) { return ; }
            // InternalBeeLangTestLanguage.g:10168:1: ( ( 'new' ) )
            // InternalBeeLangTestLanguage.g:10169:1: ( 'new' )
            {
            // InternalBeeLangTestLanguage.g:10169:1: ( 'new' )
            // InternalBeeLangTestLanguage.g:10170:2: 'new'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConstructorCallExpressionAccess().getNewKeyword_1()); 
            }
            match(input,71,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConstructorCallExpressionAccess().getNewKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 727, rule__ConstructorCallExpression__Group__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConstructorCallExpression__Group__1__Impl"


    // $ANTLR start "rule__ConstructorCallExpression__Group__2"
    // InternalBeeLangTestLanguage.g:10179:1: rule__ConstructorCallExpression__Group__2 : rule__ConstructorCallExpression__Group__2__Impl rule__ConstructorCallExpression__Group__3 ;
    public final void rule__ConstructorCallExpression__Group__2() throws RecognitionException {
        int rule__ConstructorCallExpression__Group__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 728) ) { return ; }
            // InternalBeeLangTestLanguage.g:10183:1: ( rule__ConstructorCallExpression__Group__2__Impl rule__ConstructorCallExpression__Group__3 )
            // InternalBeeLangTestLanguage.g:10184:2: rule__ConstructorCallExpression__Group__2__Impl rule__ConstructorCallExpression__Group__3
            {
            pushFollow(FOLLOW_72);
            rule__ConstructorCallExpression__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ConstructorCallExpression__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 728, rule__ConstructorCallExpression__Group__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConstructorCallExpression__Group__2"


    // $ANTLR start "rule__ConstructorCallExpression__Group__2__Impl"
    // InternalBeeLangTestLanguage.g:10191:1: rule__ConstructorCallExpression__Group__2__Impl : ( ( rule__ConstructorCallExpression__TypeExprAssignment_2 ) ) ;
    public final void rule__ConstructorCallExpression__Group__2__Impl() throws RecognitionException {
        int rule__ConstructorCallExpression__Group__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 729) ) { return ; }
            // InternalBeeLangTestLanguage.g:10195:1: ( ( ( rule__ConstructorCallExpression__TypeExprAssignment_2 ) ) )
            // InternalBeeLangTestLanguage.g:10196:1: ( ( rule__ConstructorCallExpression__TypeExprAssignment_2 ) )
            {
            // InternalBeeLangTestLanguage.g:10196:1: ( ( rule__ConstructorCallExpression__TypeExprAssignment_2 ) )
            // InternalBeeLangTestLanguage.g:10197:2: ( rule__ConstructorCallExpression__TypeExprAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConstructorCallExpressionAccess().getTypeExprAssignment_2()); 
            }
            // InternalBeeLangTestLanguage.g:10198:2: ( rule__ConstructorCallExpression__TypeExprAssignment_2 )
            // InternalBeeLangTestLanguage.g:10198:3: rule__ConstructorCallExpression__TypeExprAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__ConstructorCallExpression__TypeExprAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConstructorCallExpressionAccess().getTypeExprAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 729, rule__ConstructorCallExpression__Group__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConstructorCallExpression__Group__2__Impl"


    // $ANTLR start "rule__ConstructorCallExpression__Group__3"
    // InternalBeeLangTestLanguage.g:10206:1: rule__ConstructorCallExpression__Group__3 : rule__ConstructorCallExpression__Group__3__Impl rule__ConstructorCallExpression__Group__4 ;
    public final void rule__ConstructorCallExpression__Group__3() throws RecognitionException {
        int rule__ConstructorCallExpression__Group__3_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 730) ) { return ; }
            // InternalBeeLangTestLanguage.g:10210:1: ( rule__ConstructorCallExpression__Group__3__Impl rule__ConstructorCallExpression__Group__4 )
            // InternalBeeLangTestLanguage.g:10211:2: rule__ConstructorCallExpression__Group__3__Impl rule__ConstructorCallExpression__Group__4
            {
            pushFollow(FOLLOW_72);
            rule__ConstructorCallExpression__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ConstructorCallExpression__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 730, rule__ConstructorCallExpression__Group__3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConstructorCallExpression__Group__3"


    // $ANTLR start "rule__ConstructorCallExpression__Group__3__Impl"
    // InternalBeeLangTestLanguage.g:10218:1: rule__ConstructorCallExpression__Group__3__Impl : ( ( rule__ConstructorCallExpression__Group_3__0 )? ) ;
    public final void rule__ConstructorCallExpression__Group__3__Impl() throws RecognitionException {
        int rule__ConstructorCallExpression__Group__3__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 731) ) { return ; }
            // InternalBeeLangTestLanguage.g:10222:1: ( ( ( rule__ConstructorCallExpression__Group_3__0 )? ) )
            // InternalBeeLangTestLanguage.g:10223:1: ( ( rule__ConstructorCallExpression__Group_3__0 )? )
            {
            // InternalBeeLangTestLanguage.g:10223:1: ( ( rule__ConstructorCallExpression__Group_3__0 )? )
            // InternalBeeLangTestLanguage.g:10224:2: ( rule__ConstructorCallExpression__Group_3__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConstructorCallExpressionAccess().getGroup_3()); 
            }
            // InternalBeeLangTestLanguage.g:10225:2: ( rule__ConstructorCallExpression__Group_3__0 )?
            int alt81=2;
            alt81 = dfa81.predict(input);
            switch (alt81) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:10225:3: rule__ConstructorCallExpression__Group_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ConstructorCallExpression__Group_3__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConstructorCallExpressionAccess().getGroup_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 731, rule__ConstructorCallExpression__Group__3__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConstructorCallExpression__Group__3__Impl"


    // $ANTLR start "rule__ConstructorCallExpression__Group__4"
    // InternalBeeLangTestLanguage.g:10233:1: rule__ConstructorCallExpression__Group__4 : rule__ConstructorCallExpression__Group__4__Impl rule__ConstructorCallExpression__Group__5 ;
    public final void rule__ConstructorCallExpression__Group__4() throws RecognitionException {
        int rule__ConstructorCallExpression__Group__4_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 732) ) { return ; }
            // InternalBeeLangTestLanguage.g:10237:1: ( rule__ConstructorCallExpression__Group__4__Impl rule__ConstructorCallExpression__Group__5 )
            // InternalBeeLangTestLanguage.g:10238:2: rule__ConstructorCallExpression__Group__4__Impl rule__ConstructorCallExpression__Group__5
            {
            pushFollow(FOLLOW_72);
            rule__ConstructorCallExpression__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ConstructorCallExpression__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 732, rule__ConstructorCallExpression__Group__4_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConstructorCallExpression__Group__4"


    // $ANTLR start "rule__ConstructorCallExpression__Group__4__Impl"
    // InternalBeeLangTestLanguage.g:10245:1: rule__ConstructorCallExpression__Group__4__Impl : ( ( rule__ConstructorCallExpression__Group_4__0 )? ) ;
    public final void rule__ConstructorCallExpression__Group__4__Impl() throws RecognitionException {
        int rule__ConstructorCallExpression__Group__4__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 733) ) { return ; }
            // InternalBeeLangTestLanguage.g:10249:1: ( ( ( rule__ConstructorCallExpression__Group_4__0 )? ) )
            // InternalBeeLangTestLanguage.g:10250:1: ( ( rule__ConstructorCallExpression__Group_4__0 )? )
            {
            // InternalBeeLangTestLanguage.g:10250:1: ( ( rule__ConstructorCallExpression__Group_4__0 )? )
            // InternalBeeLangTestLanguage.g:10251:2: ( rule__ConstructorCallExpression__Group_4__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConstructorCallExpressionAccess().getGroup_4()); 
            }
            // InternalBeeLangTestLanguage.g:10252:2: ( rule__ConstructorCallExpression__Group_4__0 )?
            int alt82=2;
            int LA82_0 = input.LA(1);

            if ( (LA82_0==56) ) {
                int LA82_1 = input.LA(2);

                if ( (LA82_1==RULE_ID) ) {
                    int LA82_3 = input.LA(3);

                    if ( (synpred111_InternalBeeLangTestLanguage()) ) {
                        alt82=1;
                    }
                }
            }
            switch (alt82) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:10252:3: rule__ConstructorCallExpression__Group_4__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ConstructorCallExpression__Group_4__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConstructorCallExpressionAccess().getGroup_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 733, rule__ConstructorCallExpression__Group__4__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConstructorCallExpression__Group__4__Impl"


    // $ANTLR start "rule__ConstructorCallExpression__Group__5"
    // InternalBeeLangTestLanguage.g:10260:1: rule__ConstructorCallExpression__Group__5 : rule__ConstructorCallExpression__Group__5__Impl ;
    public final void rule__ConstructorCallExpression__Group__5() throws RecognitionException {
        int rule__ConstructorCallExpression__Group__5_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 734) ) { return ; }
            // InternalBeeLangTestLanguage.g:10264:1: ( rule__ConstructorCallExpression__Group__5__Impl )
            // InternalBeeLangTestLanguage.g:10265:2: rule__ConstructorCallExpression__Group__5__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ConstructorCallExpression__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 734, rule__ConstructorCallExpression__Group__5_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConstructorCallExpression__Group__5"


    // $ANTLR start "rule__ConstructorCallExpression__Group__5__Impl"
    // InternalBeeLangTestLanguage.g:10271:1: rule__ConstructorCallExpression__Group__5__Impl : ( ( rule__ConstructorCallExpression__ContextBlockAssignment_5 )? ) ;
    public final void rule__ConstructorCallExpression__Group__5__Impl() throws RecognitionException {
        int rule__ConstructorCallExpression__Group__5__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 735) ) { return ; }
            // InternalBeeLangTestLanguage.g:10275:1: ( ( ( rule__ConstructorCallExpression__ContextBlockAssignment_5 )? ) )
            // InternalBeeLangTestLanguage.g:10276:1: ( ( rule__ConstructorCallExpression__ContextBlockAssignment_5 )? )
            {
            // InternalBeeLangTestLanguage.g:10276:1: ( ( rule__ConstructorCallExpression__ContextBlockAssignment_5 )? )
            // InternalBeeLangTestLanguage.g:10277:2: ( rule__ConstructorCallExpression__ContextBlockAssignment_5 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConstructorCallExpressionAccess().getContextBlockAssignment_5()); 
            }
            // InternalBeeLangTestLanguage.g:10278:2: ( rule__ConstructorCallExpression__ContextBlockAssignment_5 )?
            int alt83=2;
            int LA83_0 = input.LA(1);

            if ( (LA83_0==44) ) {
                int LA83_1 = input.LA(2);

                if ( (LA83_1==RULE_ID) ) {
                    int LA83_3 = input.LA(3);

                    if ( (LA83_3==49) ) {
                        alt83=1;
                    }
                }
            }
            switch (alt83) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:10278:3: rule__ConstructorCallExpression__ContextBlockAssignment_5
                    {
                    pushFollow(FOLLOW_2);
                    rule__ConstructorCallExpression__ContextBlockAssignment_5();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConstructorCallExpressionAccess().getContextBlockAssignment_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 735, rule__ConstructorCallExpression__Group__5__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConstructorCallExpression__Group__5__Impl"


    // $ANTLR start "rule__ConstructorCallExpression__Group_3__0"
    // InternalBeeLangTestLanguage.g:10287:1: rule__ConstructorCallExpression__Group_3__0 : rule__ConstructorCallExpression__Group_3__0__Impl rule__ConstructorCallExpression__Group_3__1 ;
    public final void rule__ConstructorCallExpression__Group_3__0() throws RecognitionException {
        int rule__ConstructorCallExpression__Group_3__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 736) ) { return ; }
            // InternalBeeLangTestLanguage.g:10291:1: ( rule__ConstructorCallExpression__Group_3__0__Impl rule__ConstructorCallExpression__Group_3__1 )
            // InternalBeeLangTestLanguage.g:10292:2: rule__ConstructorCallExpression__Group_3__0__Impl rule__ConstructorCallExpression__Group_3__1
            {
            pushFollow(FOLLOW_61);
            rule__ConstructorCallExpression__Group_3__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ConstructorCallExpression__Group_3__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 736, rule__ConstructorCallExpression__Group_3__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConstructorCallExpression__Group_3__0"


    // $ANTLR start "rule__ConstructorCallExpression__Group_3__0__Impl"
    // InternalBeeLangTestLanguage.g:10299:1: rule__ConstructorCallExpression__Group_3__0__Impl : ( '(' ) ;
    public final void rule__ConstructorCallExpression__Group_3__0__Impl() throws RecognitionException {
        int rule__ConstructorCallExpression__Group_3__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 737) ) { return ; }
            // InternalBeeLangTestLanguage.g:10303:1: ( ( '(' ) )
            // InternalBeeLangTestLanguage.g:10304:1: ( '(' )
            {
            // InternalBeeLangTestLanguage.g:10304:1: ( '(' )
            // InternalBeeLangTestLanguage.g:10305:2: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConstructorCallExpressionAccess().getLeftParenthesisKeyword_3_0()); 
            }
            match(input,60,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConstructorCallExpressionAccess().getLeftParenthesisKeyword_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 737, rule__ConstructorCallExpression__Group_3__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConstructorCallExpression__Group_3__0__Impl"


    // $ANTLR start "rule__ConstructorCallExpression__Group_3__1"
    // InternalBeeLangTestLanguage.g:10314:1: rule__ConstructorCallExpression__Group_3__1 : rule__ConstructorCallExpression__Group_3__1__Impl rule__ConstructorCallExpression__Group_3__2 ;
    public final void rule__ConstructorCallExpression__Group_3__1() throws RecognitionException {
        int rule__ConstructorCallExpression__Group_3__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 738) ) { return ; }
            // InternalBeeLangTestLanguage.g:10318:1: ( rule__ConstructorCallExpression__Group_3__1__Impl rule__ConstructorCallExpression__Group_3__2 )
            // InternalBeeLangTestLanguage.g:10319:2: rule__ConstructorCallExpression__Group_3__1__Impl rule__ConstructorCallExpression__Group_3__2
            {
            pushFollow(FOLLOW_61);
            rule__ConstructorCallExpression__Group_3__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ConstructorCallExpression__Group_3__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 738, rule__ConstructorCallExpression__Group_3__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConstructorCallExpression__Group_3__1"


    // $ANTLR start "rule__ConstructorCallExpression__Group_3__1__Impl"
    // InternalBeeLangTestLanguage.g:10326:1: rule__ConstructorCallExpression__Group_3__1__Impl : ( ( rule__ConstructorCallExpression__ParameterListAssignment_3_1 )? ) ;
    public final void rule__ConstructorCallExpression__Group_3__1__Impl() throws RecognitionException {
        int rule__ConstructorCallExpression__Group_3__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 739) ) { return ; }
            // InternalBeeLangTestLanguage.g:10330:1: ( ( ( rule__ConstructorCallExpression__ParameterListAssignment_3_1 )? ) )
            // InternalBeeLangTestLanguage.g:10331:1: ( ( rule__ConstructorCallExpression__ParameterListAssignment_3_1 )? )
            {
            // InternalBeeLangTestLanguage.g:10331:1: ( ( rule__ConstructorCallExpression__ParameterListAssignment_3_1 )? )
            // InternalBeeLangTestLanguage.g:10332:2: ( rule__ConstructorCallExpression__ParameterListAssignment_3_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConstructorCallExpressionAccess().getParameterListAssignment_3_1()); 
            }
            // InternalBeeLangTestLanguage.g:10333:2: ( rule__ConstructorCallExpression__ParameterListAssignment_3_1 )?
            int alt84=2;
            int LA84_0 = input.LA(1);

            if ( (LA84_0==RULE_STRING||LA84_0==RULE_ID||LA84_0==13||LA84_0==28||LA84_0==31||(LA84_0>=35 && LA84_0<=44)||LA84_0==60||LA84_0==63||LA84_0==69||(LA84_0>=71 && LA84_0<=72)||LA84_0==75) ) {
                alt84=1;
            }
            switch (alt84) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:10333:3: rule__ConstructorCallExpression__ParameterListAssignment_3_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__ConstructorCallExpression__ParameterListAssignment_3_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConstructorCallExpressionAccess().getParameterListAssignment_3_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 739, rule__ConstructorCallExpression__Group_3__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConstructorCallExpression__Group_3__1__Impl"


    // $ANTLR start "rule__ConstructorCallExpression__Group_3__2"
    // InternalBeeLangTestLanguage.g:10341:1: rule__ConstructorCallExpression__Group_3__2 : rule__ConstructorCallExpression__Group_3__2__Impl ;
    public final void rule__ConstructorCallExpression__Group_3__2() throws RecognitionException {
        int rule__ConstructorCallExpression__Group_3__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 740) ) { return ; }
            // InternalBeeLangTestLanguage.g:10345:1: ( rule__ConstructorCallExpression__Group_3__2__Impl )
            // InternalBeeLangTestLanguage.g:10346:2: rule__ConstructorCallExpression__Group_3__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ConstructorCallExpression__Group_3__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 740, rule__ConstructorCallExpression__Group_3__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConstructorCallExpression__Group_3__2"


    // $ANTLR start "rule__ConstructorCallExpression__Group_3__2__Impl"
    // InternalBeeLangTestLanguage.g:10352:1: rule__ConstructorCallExpression__Group_3__2__Impl : ( ')' ) ;
    public final void rule__ConstructorCallExpression__Group_3__2__Impl() throws RecognitionException {
        int rule__ConstructorCallExpression__Group_3__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 741) ) { return ; }
            // InternalBeeLangTestLanguage.g:10356:1: ( ( ')' ) )
            // InternalBeeLangTestLanguage.g:10357:1: ( ')' )
            {
            // InternalBeeLangTestLanguage.g:10357:1: ( ')' )
            // InternalBeeLangTestLanguage.g:10358:2: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConstructorCallExpressionAccess().getRightParenthesisKeyword_3_2()); 
            }
            match(input,61,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConstructorCallExpressionAccess().getRightParenthesisKeyword_3_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 741, rule__ConstructorCallExpression__Group_3__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConstructorCallExpression__Group_3__2__Impl"


    // $ANTLR start "rule__ConstructorCallExpression__Group_4__0"
    // InternalBeeLangTestLanguage.g:10368:1: rule__ConstructorCallExpression__Group_4__0 : rule__ConstructorCallExpression__Group_4__0__Impl rule__ConstructorCallExpression__Group_4__1 ;
    public final void rule__ConstructorCallExpression__Group_4__0() throws RecognitionException {
        int rule__ConstructorCallExpression__Group_4__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 742) ) { return ; }
            // InternalBeeLangTestLanguage.g:10372:1: ( rule__ConstructorCallExpression__Group_4__0__Impl rule__ConstructorCallExpression__Group_4__1 )
            // InternalBeeLangTestLanguage.g:10373:2: rule__ConstructorCallExpression__Group_4__0__Impl rule__ConstructorCallExpression__Group_4__1
            {
            pushFollow(FOLLOW_9);
            rule__ConstructorCallExpression__Group_4__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ConstructorCallExpression__Group_4__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 742, rule__ConstructorCallExpression__Group_4__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConstructorCallExpression__Group_4__0"


    // $ANTLR start "rule__ConstructorCallExpression__Group_4__0__Impl"
    // InternalBeeLangTestLanguage.g:10380:1: rule__ConstructorCallExpression__Group_4__0__Impl : ( 'as' ) ;
    public final void rule__ConstructorCallExpression__Group_4__0__Impl() throws RecognitionException {
        int rule__ConstructorCallExpression__Group_4__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 743) ) { return ; }
            // InternalBeeLangTestLanguage.g:10384:1: ( ( 'as' ) )
            // InternalBeeLangTestLanguage.g:10385:1: ( 'as' )
            {
            // InternalBeeLangTestLanguage.g:10385:1: ( 'as' )
            // InternalBeeLangTestLanguage.g:10386:2: 'as'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConstructorCallExpressionAccess().getAsKeyword_4_0()); 
            }
            match(input,56,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConstructorCallExpressionAccess().getAsKeyword_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 743, rule__ConstructorCallExpression__Group_4__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConstructorCallExpression__Group_4__0__Impl"


    // $ANTLR start "rule__ConstructorCallExpression__Group_4__1"
    // InternalBeeLangTestLanguage.g:10395:1: rule__ConstructorCallExpression__Group_4__1 : rule__ConstructorCallExpression__Group_4__1__Impl ;
    public final void rule__ConstructorCallExpression__Group_4__1() throws RecognitionException {
        int rule__ConstructorCallExpression__Group_4__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 744) ) { return ; }
            // InternalBeeLangTestLanguage.g:10399:1: ( rule__ConstructorCallExpression__Group_4__1__Impl )
            // InternalBeeLangTestLanguage.g:10400:2: rule__ConstructorCallExpression__Group_4__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ConstructorCallExpression__Group_4__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 744, rule__ConstructorCallExpression__Group_4__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConstructorCallExpression__Group_4__1"


    // $ANTLR start "rule__ConstructorCallExpression__Group_4__1__Impl"
    // InternalBeeLangTestLanguage.g:10406:1: rule__ConstructorCallExpression__Group_4__1__Impl : ( ( rule__ConstructorCallExpression__AliasAssignment_4_1 ) ) ;
    public final void rule__ConstructorCallExpression__Group_4__1__Impl() throws RecognitionException {
        int rule__ConstructorCallExpression__Group_4__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 745) ) { return ; }
            // InternalBeeLangTestLanguage.g:10410:1: ( ( ( rule__ConstructorCallExpression__AliasAssignment_4_1 ) ) )
            // InternalBeeLangTestLanguage.g:10411:1: ( ( rule__ConstructorCallExpression__AliasAssignment_4_1 ) )
            {
            // InternalBeeLangTestLanguage.g:10411:1: ( ( rule__ConstructorCallExpression__AliasAssignment_4_1 ) )
            // InternalBeeLangTestLanguage.g:10412:2: ( rule__ConstructorCallExpression__AliasAssignment_4_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConstructorCallExpressionAccess().getAliasAssignment_4_1()); 
            }
            // InternalBeeLangTestLanguage.g:10413:2: ( rule__ConstructorCallExpression__AliasAssignment_4_1 )
            // InternalBeeLangTestLanguage.g:10413:3: rule__ConstructorCallExpression__AliasAssignment_4_1
            {
            pushFollow(FOLLOW_2);
            rule__ConstructorCallExpression__AliasAssignment_4_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConstructorCallExpressionAccess().getAliasAssignment_4_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 745, rule__ConstructorCallExpression__Group_4__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConstructorCallExpression__Group_4__1__Impl"


    // $ANTLR start "rule__InitializationBlockExpression__Group__0"
    // InternalBeeLangTestLanguage.g:10422:1: rule__InitializationBlockExpression__Group__0 : rule__InitializationBlockExpression__Group__0__Impl rule__InitializationBlockExpression__Group__1 ;
    public final void rule__InitializationBlockExpression__Group__0() throws RecognitionException {
        int rule__InitializationBlockExpression__Group__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 746) ) { return ; }
            // InternalBeeLangTestLanguage.g:10426:1: ( rule__InitializationBlockExpression__Group__0__Impl rule__InitializationBlockExpression__Group__1 )
            // InternalBeeLangTestLanguage.g:10427:2: rule__InitializationBlockExpression__Group__0__Impl rule__InitializationBlockExpression__Group__1
            {
            pushFollow(FOLLOW_17);
            rule__InitializationBlockExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__InitializationBlockExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 746, rule__InitializationBlockExpression__Group__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InitializationBlockExpression__Group__0"


    // $ANTLR start "rule__InitializationBlockExpression__Group__0__Impl"
    // InternalBeeLangTestLanguage.g:10434:1: rule__InitializationBlockExpression__Group__0__Impl : ( () ) ;
    public final void rule__InitializationBlockExpression__Group__0__Impl() throws RecognitionException {
        int rule__InitializationBlockExpression__Group__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 747) ) { return ; }
            // InternalBeeLangTestLanguage.g:10438:1: ( ( () ) )
            // InternalBeeLangTestLanguage.g:10439:1: ( () )
            {
            // InternalBeeLangTestLanguage.g:10439:1: ( () )
            // InternalBeeLangTestLanguage.g:10440:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInitializationBlockExpressionAccess().getChainedExpressionAction_0()); 
            }
            // InternalBeeLangTestLanguage.g:10441:2: ()
            // InternalBeeLangTestLanguage.g:10441:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInitializationBlockExpressionAccess().getChainedExpressionAction_0()); 
            }

            }


            }

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 747, rule__InitializationBlockExpression__Group__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InitializationBlockExpression__Group__0__Impl"


    // $ANTLR start "rule__InitializationBlockExpression__Group__1"
    // InternalBeeLangTestLanguage.g:10449:1: rule__InitializationBlockExpression__Group__1 : rule__InitializationBlockExpression__Group__1__Impl rule__InitializationBlockExpression__Group__2 ;
    public final void rule__InitializationBlockExpression__Group__1() throws RecognitionException {
        int rule__InitializationBlockExpression__Group__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 748) ) { return ; }
            // InternalBeeLangTestLanguage.g:10453:1: ( rule__InitializationBlockExpression__Group__1__Impl rule__InitializationBlockExpression__Group__2 )
            // InternalBeeLangTestLanguage.g:10454:2: rule__InitializationBlockExpression__Group__1__Impl rule__InitializationBlockExpression__Group__2
            {
            pushFollow(FOLLOW_9);
            rule__InitializationBlockExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__InitializationBlockExpression__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 748, rule__InitializationBlockExpression__Group__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InitializationBlockExpression__Group__1"


    // $ANTLR start "rule__InitializationBlockExpression__Group__1__Impl"
    // InternalBeeLangTestLanguage.g:10461:1: rule__InitializationBlockExpression__Group__1__Impl : ( '{' ) ;
    public final void rule__InitializationBlockExpression__Group__1__Impl() throws RecognitionException {
        int rule__InitializationBlockExpression__Group__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 749) ) { return ; }
            // InternalBeeLangTestLanguage.g:10465:1: ( ( '{' ) )
            // InternalBeeLangTestLanguage.g:10466:1: ( '{' )
            {
            // InternalBeeLangTestLanguage.g:10466:1: ( '{' )
            // InternalBeeLangTestLanguage.g:10467:2: '{'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInitializationBlockExpressionAccess().getLeftCurlyBracketKeyword_1()); 
            }
            match(input,44,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInitializationBlockExpressionAccess().getLeftCurlyBracketKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 749, rule__InitializationBlockExpression__Group__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InitializationBlockExpression__Group__1__Impl"


    // $ANTLR start "rule__InitializationBlockExpression__Group__2"
    // InternalBeeLangTestLanguage.g:10476:1: rule__InitializationBlockExpression__Group__2 : rule__InitializationBlockExpression__Group__2__Impl rule__InitializationBlockExpression__Group__3 ;
    public final void rule__InitializationBlockExpression__Group__2() throws RecognitionException {
        int rule__InitializationBlockExpression__Group__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 750) ) { return ; }
            // InternalBeeLangTestLanguage.g:10480:1: ( rule__InitializationBlockExpression__Group__2__Impl rule__InitializationBlockExpression__Group__3 )
            // InternalBeeLangTestLanguage.g:10481:2: rule__InitializationBlockExpression__Group__2__Impl rule__InitializationBlockExpression__Group__3
            {
            pushFollow(FOLLOW_14);
            rule__InitializationBlockExpression__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__InitializationBlockExpression__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 750, rule__InitializationBlockExpression__Group__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InitializationBlockExpression__Group__2"


    // $ANTLR start "rule__InitializationBlockExpression__Group__2__Impl"
    // InternalBeeLangTestLanguage.g:10488:1: rule__InitializationBlockExpression__Group__2__Impl : ( ( rule__InitializationBlockExpression__ExpressionsAssignment_2 ) ) ;
    public final void rule__InitializationBlockExpression__Group__2__Impl() throws RecognitionException {
        int rule__InitializationBlockExpression__Group__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 751) ) { return ; }
            // InternalBeeLangTestLanguage.g:10492:1: ( ( ( rule__InitializationBlockExpression__ExpressionsAssignment_2 ) ) )
            // InternalBeeLangTestLanguage.g:10493:1: ( ( rule__InitializationBlockExpression__ExpressionsAssignment_2 ) )
            {
            // InternalBeeLangTestLanguage.g:10493:1: ( ( rule__InitializationBlockExpression__ExpressionsAssignment_2 ) )
            // InternalBeeLangTestLanguage.g:10494:2: ( rule__InitializationBlockExpression__ExpressionsAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInitializationBlockExpressionAccess().getExpressionsAssignment_2()); 
            }
            // InternalBeeLangTestLanguage.g:10495:2: ( rule__InitializationBlockExpression__ExpressionsAssignment_2 )
            // InternalBeeLangTestLanguage.g:10495:3: rule__InitializationBlockExpression__ExpressionsAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__InitializationBlockExpression__ExpressionsAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInitializationBlockExpressionAccess().getExpressionsAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 751, rule__InitializationBlockExpression__Group__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InitializationBlockExpression__Group__2__Impl"


    // $ANTLR start "rule__InitializationBlockExpression__Group__3"
    // InternalBeeLangTestLanguage.g:10503:1: rule__InitializationBlockExpression__Group__3 : rule__InitializationBlockExpression__Group__3__Impl rule__InitializationBlockExpression__Group__4 ;
    public final void rule__InitializationBlockExpression__Group__3() throws RecognitionException {
        int rule__InitializationBlockExpression__Group__3_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 752) ) { return ; }
            // InternalBeeLangTestLanguage.g:10507:1: ( rule__InitializationBlockExpression__Group__3__Impl rule__InitializationBlockExpression__Group__4 )
            // InternalBeeLangTestLanguage.g:10508:2: rule__InitializationBlockExpression__Group__3__Impl rule__InitializationBlockExpression__Group__4
            {
            pushFollow(FOLLOW_8);
            rule__InitializationBlockExpression__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__InitializationBlockExpression__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 752, rule__InitializationBlockExpression__Group__3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InitializationBlockExpression__Group__3"


    // $ANTLR start "rule__InitializationBlockExpression__Group__3__Impl"
    // InternalBeeLangTestLanguage.g:10515:1: rule__InitializationBlockExpression__Group__3__Impl : ( ';' ) ;
    public final void rule__InitializationBlockExpression__Group__3__Impl() throws RecognitionException {
        int rule__InitializationBlockExpression__Group__3__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 753) ) { return ; }
            // InternalBeeLangTestLanguage.g:10519:1: ( ( ';' ) )
            // InternalBeeLangTestLanguage.g:10520:1: ( ';' )
            {
            // InternalBeeLangTestLanguage.g:10520:1: ( ';' )
            // InternalBeeLangTestLanguage.g:10521:2: ';'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInitializationBlockExpressionAccess().getSemicolonKeyword_3()); 
            }
            match(input,50,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInitializationBlockExpressionAccess().getSemicolonKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 753, rule__InitializationBlockExpression__Group__3__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InitializationBlockExpression__Group__3__Impl"


    // $ANTLR start "rule__InitializationBlockExpression__Group__4"
    // InternalBeeLangTestLanguage.g:10530:1: rule__InitializationBlockExpression__Group__4 : rule__InitializationBlockExpression__Group__4__Impl ;
    public final void rule__InitializationBlockExpression__Group__4() throws RecognitionException {
        int rule__InitializationBlockExpression__Group__4_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 754) ) { return ; }
            // InternalBeeLangTestLanguage.g:10534:1: ( rule__InitializationBlockExpression__Group__4__Impl )
            // InternalBeeLangTestLanguage.g:10535:2: rule__InitializationBlockExpression__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__InitializationBlockExpression__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 754, rule__InitializationBlockExpression__Group__4_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InitializationBlockExpression__Group__4"


    // $ANTLR start "rule__InitializationBlockExpression__Group__4__Impl"
    // InternalBeeLangTestLanguage.g:10541:1: rule__InitializationBlockExpression__Group__4__Impl : ( '}' ) ;
    public final void rule__InitializationBlockExpression__Group__4__Impl() throws RecognitionException {
        int rule__InitializationBlockExpression__Group__4__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 755) ) { return ; }
            // InternalBeeLangTestLanguage.g:10545:1: ( ( '}' ) )
            // InternalBeeLangTestLanguage.g:10546:1: ( '}' )
            {
            // InternalBeeLangTestLanguage.g:10546:1: ( '}' )
            // InternalBeeLangTestLanguage.g:10547:2: '}'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInitializationBlockExpressionAccess().getRightCurlyBracketKeyword_4()); 
            }
            match(input,45,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInitializationBlockExpressionAccess().getRightCurlyBracketKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 755, rule__InitializationBlockExpression__Group__4__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InitializationBlockExpression__Group__4__Impl"


    // $ANTLR start "rule__InitializationExpression__Group__0"
    // InternalBeeLangTestLanguage.g:10557:1: rule__InitializationExpression__Group__0 : rule__InitializationExpression__Group__0__Impl rule__InitializationExpression__Group__1 ;
    public final void rule__InitializationExpression__Group__0() throws RecognitionException {
        int rule__InitializationExpression__Group__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 756) ) { return ; }
            // InternalBeeLangTestLanguage.g:10561:1: ( rule__InitializationExpression__Group__0__Impl rule__InitializationExpression__Group__1 )
            // InternalBeeLangTestLanguage.g:10562:2: rule__InitializationExpression__Group__0__Impl rule__InitializationExpression__Group__1
            {
            pushFollow(FOLLOW_9);
            rule__InitializationExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__InitializationExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 756, rule__InitializationExpression__Group__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InitializationExpression__Group__0"


    // $ANTLR start "rule__InitializationExpression__Group__0__Impl"
    // InternalBeeLangTestLanguage.g:10569:1: rule__InitializationExpression__Group__0__Impl : ( () ) ;
    public final void rule__InitializationExpression__Group__0__Impl() throws RecognitionException {
        int rule__InitializationExpression__Group__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 757) ) { return ; }
            // InternalBeeLangTestLanguage.g:10573:1: ( ( () ) )
            // InternalBeeLangTestLanguage.g:10574:1: ( () )
            {
            // InternalBeeLangTestLanguage.g:10574:1: ( () )
            // InternalBeeLangTestLanguage.g:10575:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInitializationExpressionAccess().getAssignmentExpressionAction_0()); 
            }
            // InternalBeeLangTestLanguage.g:10576:2: ()
            // InternalBeeLangTestLanguage.g:10576:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInitializationExpressionAccess().getAssignmentExpressionAction_0()); 
            }

            }


            }

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 757, rule__InitializationExpression__Group__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InitializationExpression__Group__0__Impl"


    // $ANTLR start "rule__InitializationExpression__Group__1"
    // InternalBeeLangTestLanguage.g:10584:1: rule__InitializationExpression__Group__1 : rule__InitializationExpression__Group__1__Impl rule__InitializationExpression__Group__2 ;
    public final void rule__InitializationExpression__Group__1() throws RecognitionException {
        int rule__InitializationExpression__Group__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 758) ) { return ; }
            // InternalBeeLangTestLanguage.g:10588:1: ( rule__InitializationExpression__Group__1__Impl rule__InitializationExpression__Group__2 )
            // InternalBeeLangTestLanguage.g:10589:2: rule__InitializationExpression__Group__1__Impl rule__InitializationExpression__Group__2
            {
            pushFollow(FOLLOW_12);
            rule__InitializationExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__InitializationExpression__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 758, rule__InitializationExpression__Group__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InitializationExpression__Group__1"


    // $ANTLR start "rule__InitializationExpression__Group__1__Impl"
    // InternalBeeLangTestLanguage.g:10596:1: rule__InitializationExpression__Group__1__Impl : ( ( rule__InitializationExpression__LeftExprAssignment_1 ) ) ;
    public final void rule__InitializationExpression__Group__1__Impl() throws RecognitionException {
        int rule__InitializationExpression__Group__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 759) ) { return ; }
            // InternalBeeLangTestLanguage.g:10600:1: ( ( ( rule__InitializationExpression__LeftExprAssignment_1 ) ) )
            // InternalBeeLangTestLanguage.g:10601:1: ( ( rule__InitializationExpression__LeftExprAssignment_1 ) )
            {
            // InternalBeeLangTestLanguage.g:10601:1: ( ( rule__InitializationExpression__LeftExprAssignment_1 ) )
            // InternalBeeLangTestLanguage.g:10602:2: ( rule__InitializationExpression__LeftExprAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInitializationExpressionAccess().getLeftExprAssignment_1()); 
            }
            // InternalBeeLangTestLanguage.g:10603:2: ( rule__InitializationExpression__LeftExprAssignment_1 )
            // InternalBeeLangTestLanguage.g:10603:3: rule__InitializationExpression__LeftExprAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__InitializationExpression__LeftExprAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInitializationExpressionAccess().getLeftExprAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 759, rule__InitializationExpression__Group__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InitializationExpression__Group__1__Impl"


    // $ANTLR start "rule__InitializationExpression__Group__2"
    // InternalBeeLangTestLanguage.g:10611:1: rule__InitializationExpression__Group__2 : rule__InitializationExpression__Group__2__Impl rule__InitializationExpression__Group__3 ;
    public final void rule__InitializationExpression__Group__2() throws RecognitionException {
        int rule__InitializationExpression__Group__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 760) ) { return ; }
            // InternalBeeLangTestLanguage.g:10615:1: ( rule__InitializationExpression__Group__2__Impl rule__InitializationExpression__Group__3 )
            // InternalBeeLangTestLanguage.g:10616:2: rule__InitializationExpression__Group__2__Impl rule__InitializationExpression__Group__3
            {
            pushFollow(FOLLOW_19);
            rule__InitializationExpression__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__InitializationExpression__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 760, rule__InitializationExpression__Group__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InitializationExpression__Group__2"


    // $ANTLR start "rule__InitializationExpression__Group__2__Impl"
    // InternalBeeLangTestLanguage.g:10623:1: rule__InitializationExpression__Group__2__Impl : ( ( rule__InitializationExpression__FunctionNameAssignment_2 ) ) ;
    public final void rule__InitializationExpression__Group__2__Impl() throws RecognitionException {
        int rule__InitializationExpression__Group__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 761) ) { return ; }
            // InternalBeeLangTestLanguage.g:10627:1: ( ( ( rule__InitializationExpression__FunctionNameAssignment_2 ) ) )
            // InternalBeeLangTestLanguage.g:10628:1: ( ( rule__InitializationExpression__FunctionNameAssignment_2 ) )
            {
            // InternalBeeLangTestLanguage.g:10628:1: ( ( rule__InitializationExpression__FunctionNameAssignment_2 ) )
            // InternalBeeLangTestLanguage.g:10629:2: ( rule__InitializationExpression__FunctionNameAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInitializationExpressionAccess().getFunctionNameAssignment_2()); 
            }
            // InternalBeeLangTestLanguage.g:10630:2: ( rule__InitializationExpression__FunctionNameAssignment_2 )
            // InternalBeeLangTestLanguage.g:10630:3: rule__InitializationExpression__FunctionNameAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__InitializationExpression__FunctionNameAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInitializationExpressionAccess().getFunctionNameAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 761, rule__InitializationExpression__Group__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InitializationExpression__Group__2__Impl"


    // $ANTLR start "rule__InitializationExpression__Group__3"
    // InternalBeeLangTestLanguage.g:10638:1: rule__InitializationExpression__Group__3 : rule__InitializationExpression__Group__3__Impl ;
    public final void rule__InitializationExpression__Group__3() throws RecognitionException {
        int rule__InitializationExpression__Group__3_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 762) ) { return ; }
            // InternalBeeLangTestLanguage.g:10642:1: ( rule__InitializationExpression__Group__3__Impl )
            // InternalBeeLangTestLanguage.g:10643:2: rule__InitializationExpression__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__InitializationExpression__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 762, rule__InitializationExpression__Group__3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InitializationExpression__Group__3"


    // $ANTLR start "rule__InitializationExpression__Group__3__Impl"
    // InternalBeeLangTestLanguage.g:10649:1: rule__InitializationExpression__Group__3__Impl : ( ( rule__InitializationExpression__RightExprAssignment_3 ) ) ;
    public final void rule__InitializationExpression__Group__3__Impl() throws RecognitionException {
        int rule__InitializationExpression__Group__3__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 763) ) { return ; }
            // InternalBeeLangTestLanguage.g:10653:1: ( ( ( rule__InitializationExpression__RightExprAssignment_3 ) ) )
            // InternalBeeLangTestLanguage.g:10654:1: ( ( rule__InitializationExpression__RightExprAssignment_3 ) )
            {
            // InternalBeeLangTestLanguage.g:10654:1: ( ( rule__InitializationExpression__RightExprAssignment_3 ) )
            // InternalBeeLangTestLanguage.g:10655:2: ( rule__InitializationExpression__RightExprAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInitializationExpressionAccess().getRightExprAssignment_3()); 
            }
            // InternalBeeLangTestLanguage.g:10656:2: ( rule__InitializationExpression__RightExprAssignment_3 )
            // InternalBeeLangTestLanguage.g:10656:3: rule__InitializationExpression__RightExprAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__InitializationExpression__RightExprAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInitializationExpressionAccess().getRightExprAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 763, rule__InitializationExpression__Group__3__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InitializationExpression__Group__3__Impl"


    // $ANTLR start "rule__FeatureOfThis__Group__0"
    // InternalBeeLangTestLanguage.g:10665:1: rule__FeatureOfThis__Group__0 : rule__FeatureOfThis__Group__0__Impl rule__FeatureOfThis__Group__1 ;
    public final void rule__FeatureOfThis__Group__0() throws RecognitionException {
        int rule__FeatureOfThis__Group__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 764) ) { return ; }
            // InternalBeeLangTestLanguage.g:10669:1: ( rule__FeatureOfThis__Group__0__Impl rule__FeatureOfThis__Group__1 )
            // InternalBeeLangTestLanguage.g:10670:2: rule__FeatureOfThis__Group__0__Impl rule__FeatureOfThis__Group__1
            {
            pushFollow(FOLLOW_9);
            rule__FeatureOfThis__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FeatureOfThis__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 764, rule__FeatureOfThis__Group__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FeatureOfThis__Group__0"


    // $ANTLR start "rule__FeatureOfThis__Group__0__Impl"
    // InternalBeeLangTestLanguage.g:10677:1: rule__FeatureOfThis__Group__0__Impl : ( () ) ;
    public final void rule__FeatureOfThis__Group__0__Impl() throws RecognitionException {
        int rule__FeatureOfThis__Group__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 765) ) { return ; }
            // InternalBeeLangTestLanguage.g:10681:1: ( ( () ) )
            // InternalBeeLangTestLanguage.g:10682:1: ( () )
            {
            // InternalBeeLangTestLanguage.g:10682:1: ( () )
            // InternalBeeLangTestLanguage.g:10683:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFeatureOfThisAccess().getFeatureExpressionAction_0()); 
            }
            // InternalBeeLangTestLanguage.g:10684:2: ()
            // InternalBeeLangTestLanguage.g:10684:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFeatureOfThisAccess().getFeatureExpressionAction_0()); 
            }

            }


            }

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 765, rule__FeatureOfThis__Group__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FeatureOfThis__Group__0__Impl"


    // $ANTLR start "rule__FeatureOfThis__Group__1"
    // InternalBeeLangTestLanguage.g:10692:1: rule__FeatureOfThis__Group__1 : rule__FeatureOfThis__Group__1__Impl ;
    public final void rule__FeatureOfThis__Group__1() throws RecognitionException {
        int rule__FeatureOfThis__Group__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 766) ) { return ; }
            // InternalBeeLangTestLanguage.g:10696:1: ( rule__FeatureOfThis__Group__1__Impl )
            // InternalBeeLangTestLanguage.g:10697:2: rule__FeatureOfThis__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FeatureOfThis__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 766, rule__FeatureOfThis__Group__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FeatureOfThis__Group__1"


    // $ANTLR start "rule__FeatureOfThis__Group__1__Impl"
    // InternalBeeLangTestLanguage.g:10703:1: rule__FeatureOfThis__Group__1__Impl : ( ( rule__FeatureOfThis__FeatureNameAssignment_1 ) ) ;
    public final void rule__FeatureOfThis__Group__1__Impl() throws RecognitionException {
        int rule__FeatureOfThis__Group__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 767) ) { return ; }
            // InternalBeeLangTestLanguage.g:10707:1: ( ( ( rule__FeatureOfThis__FeatureNameAssignment_1 ) ) )
            // InternalBeeLangTestLanguage.g:10708:1: ( ( rule__FeatureOfThis__FeatureNameAssignment_1 ) )
            {
            // InternalBeeLangTestLanguage.g:10708:1: ( ( rule__FeatureOfThis__FeatureNameAssignment_1 ) )
            // InternalBeeLangTestLanguage.g:10709:2: ( rule__FeatureOfThis__FeatureNameAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFeatureOfThisAccess().getFeatureNameAssignment_1()); 
            }
            // InternalBeeLangTestLanguage.g:10710:2: ( rule__FeatureOfThis__FeatureNameAssignment_1 )
            // InternalBeeLangTestLanguage.g:10710:3: rule__FeatureOfThis__FeatureNameAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__FeatureOfThis__FeatureNameAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFeatureOfThisAccess().getFeatureNameAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 767, rule__FeatureOfThis__Group__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FeatureOfThis__Group__1__Impl"


    // $ANTLR start "rule__LiteralFunction__Group__0"
    // InternalBeeLangTestLanguage.g:10719:1: rule__LiteralFunction__Group__0 : rule__LiteralFunction__Group__0__Impl rule__LiteralFunction__Group__1 ;
    public final void rule__LiteralFunction__Group__0() throws RecognitionException {
        int rule__LiteralFunction__Group__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 768) ) { return ; }
            // InternalBeeLangTestLanguage.g:10723:1: ( rule__LiteralFunction__Group__0__Impl rule__LiteralFunction__Group__1 )
            // InternalBeeLangTestLanguage.g:10724:2: rule__LiteralFunction__Group__0__Impl rule__LiteralFunction__Group__1
            {
            pushFollow(FOLLOW_73);
            rule__LiteralFunction__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__LiteralFunction__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 768, rule__LiteralFunction__Group__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralFunction__Group__0"


    // $ANTLR start "rule__LiteralFunction__Group__0__Impl"
    // InternalBeeLangTestLanguage.g:10731:1: rule__LiteralFunction__Group__0__Impl : ( '{' ) ;
    public final void rule__LiteralFunction__Group__0__Impl() throws RecognitionException {
        int rule__LiteralFunction__Group__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 769) ) { return ; }
            // InternalBeeLangTestLanguage.g:10735:1: ( ( '{' ) )
            // InternalBeeLangTestLanguage.g:10736:1: ( '{' )
            {
            // InternalBeeLangTestLanguage.g:10736:1: ( '{' )
            // InternalBeeLangTestLanguage.g:10737:2: '{'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLiteralFunctionAccess().getLeftCurlyBracketKeyword_0()); 
            }
            match(input,44,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLiteralFunctionAccess().getLeftCurlyBracketKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 769, rule__LiteralFunction__Group__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralFunction__Group__0__Impl"


    // $ANTLR start "rule__LiteralFunction__Group__1"
    // InternalBeeLangTestLanguage.g:10746:1: rule__LiteralFunction__Group__1 : rule__LiteralFunction__Group__1__Impl rule__LiteralFunction__Group__2 ;
    public final void rule__LiteralFunction__Group__1() throws RecognitionException {
        int rule__LiteralFunction__Group__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 770) ) { return ; }
            // InternalBeeLangTestLanguage.g:10750:1: ( rule__LiteralFunction__Group__1__Impl rule__LiteralFunction__Group__2 )
            // InternalBeeLangTestLanguage.g:10751:2: rule__LiteralFunction__Group__1__Impl rule__LiteralFunction__Group__2
            {
            pushFollow(FOLLOW_8);
            rule__LiteralFunction__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__LiteralFunction__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 770, rule__LiteralFunction__Group__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralFunction__Group__1"


    // $ANTLR start "rule__LiteralFunction__Group__1__Impl"
    // InternalBeeLangTestLanguage.g:10758:1: rule__LiteralFunction__Group__1__Impl : ( ruleClosureExpression ) ;
    public final void rule__LiteralFunction__Group__1__Impl() throws RecognitionException {
        int rule__LiteralFunction__Group__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 771) ) { return ; }
            // InternalBeeLangTestLanguage.g:10762:1: ( ( ruleClosureExpression ) )
            // InternalBeeLangTestLanguage.g:10763:1: ( ruleClosureExpression )
            {
            // InternalBeeLangTestLanguage.g:10763:1: ( ruleClosureExpression )
            // InternalBeeLangTestLanguage.g:10764:2: ruleClosureExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLiteralFunctionAccess().getClosureExpressionParserRuleCall_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleClosureExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLiteralFunctionAccess().getClosureExpressionParserRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 771, rule__LiteralFunction__Group__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralFunction__Group__1__Impl"


    // $ANTLR start "rule__LiteralFunction__Group__2"
    // InternalBeeLangTestLanguage.g:10773:1: rule__LiteralFunction__Group__2 : rule__LiteralFunction__Group__2__Impl ;
    public final void rule__LiteralFunction__Group__2() throws RecognitionException {
        int rule__LiteralFunction__Group__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 772) ) { return ; }
            // InternalBeeLangTestLanguage.g:10777:1: ( rule__LiteralFunction__Group__2__Impl )
            // InternalBeeLangTestLanguage.g:10778:2: rule__LiteralFunction__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__LiteralFunction__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 772, rule__LiteralFunction__Group__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralFunction__Group__2"


    // $ANTLR start "rule__LiteralFunction__Group__2__Impl"
    // InternalBeeLangTestLanguage.g:10784:1: rule__LiteralFunction__Group__2__Impl : ( '}' ) ;
    public final void rule__LiteralFunction__Group__2__Impl() throws RecognitionException {
        int rule__LiteralFunction__Group__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 773) ) { return ; }
            // InternalBeeLangTestLanguage.g:10788:1: ( ( '}' ) )
            // InternalBeeLangTestLanguage.g:10789:1: ( '}' )
            {
            // InternalBeeLangTestLanguage.g:10789:1: ( '}' )
            // InternalBeeLangTestLanguage.g:10790:2: '}'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLiteralFunctionAccess().getRightCurlyBracketKeyword_2()); 
            }
            match(input,45,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLiteralFunctionAccess().getRightCurlyBracketKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 773, rule__LiteralFunction__Group__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralFunction__Group__2__Impl"


    // $ANTLR start "rule__ClosureExpression__Group__0"
    // InternalBeeLangTestLanguage.g:10800:1: rule__ClosureExpression__Group__0 : rule__ClosureExpression__Group__0__Impl rule__ClosureExpression__Group__1 ;
    public final void rule__ClosureExpression__Group__0() throws RecognitionException {
        int rule__ClosureExpression__Group__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 774) ) { return ; }
            // InternalBeeLangTestLanguage.g:10804:1: ( rule__ClosureExpression__Group__0__Impl rule__ClosureExpression__Group__1 )
            // InternalBeeLangTestLanguage.g:10805:2: rule__ClosureExpression__Group__0__Impl rule__ClosureExpression__Group__1
            {
            pushFollow(FOLLOW_73);
            rule__ClosureExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ClosureExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 774, rule__ClosureExpression__Group__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group__0"


    // $ANTLR start "rule__ClosureExpression__Group__0__Impl"
    // InternalBeeLangTestLanguage.g:10812:1: rule__ClosureExpression__Group__0__Impl : ( () ) ;
    public final void rule__ClosureExpression__Group__0__Impl() throws RecognitionException {
        int rule__ClosureExpression__Group__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 775) ) { return ; }
            // InternalBeeLangTestLanguage.g:10816:1: ( ( () ) )
            // InternalBeeLangTestLanguage.g:10817:1: ( () )
            {
            // InternalBeeLangTestLanguage.g:10817:1: ( () )
            // InternalBeeLangTestLanguage.g:10818:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureExpressionAccess().getFunctionAction_0()); 
            }
            // InternalBeeLangTestLanguage.g:10819:2: ()
            // InternalBeeLangTestLanguage.g:10819:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureExpressionAccess().getFunctionAction_0()); 
            }

            }


            }

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 775, rule__ClosureExpression__Group__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group__0__Impl"


    // $ANTLR start "rule__ClosureExpression__Group__1"
    // InternalBeeLangTestLanguage.g:10827:1: rule__ClosureExpression__Group__1 : rule__ClosureExpression__Group__1__Impl rule__ClosureExpression__Group__2 ;
    public final void rule__ClosureExpression__Group__1() throws RecognitionException {
        int rule__ClosureExpression__Group__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 776) ) { return ; }
            // InternalBeeLangTestLanguage.g:10831:1: ( rule__ClosureExpression__Group__1__Impl rule__ClosureExpression__Group__2 )
            // InternalBeeLangTestLanguage.g:10832:2: rule__ClosureExpression__Group__1__Impl rule__ClosureExpression__Group__2
            {
            pushFollow(FOLLOW_73);
            rule__ClosureExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ClosureExpression__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 776, rule__ClosureExpression__Group__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group__1"


    // $ANTLR start "rule__ClosureExpression__Group__1__Impl"
    // InternalBeeLangTestLanguage.g:10839:1: rule__ClosureExpression__Group__1__Impl : ( ( rule__ClosureExpression__Group_1__0 )? ) ;
    public final void rule__ClosureExpression__Group__1__Impl() throws RecognitionException {
        int rule__ClosureExpression__Group__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 777) ) { return ; }
            // InternalBeeLangTestLanguage.g:10843:1: ( ( ( rule__ClosureExpression__Group_1__0 )? ) )
            // InternalBeeLangTestLanguage.g:10844:1: ( ( rule__ClosureExpression__Group_1__0 )? )
            {
            // InternalBeeLangTestLanguage.g:10844:1: ( ( rule__ClosureExpression__Group_1__0 )? )
            // InternalBeeLangTestLanguage.g:10845:2: ( rule__ClosureExpression__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureExpressionAccess().getGroup_1()); 
            }
            // InternalBeeLangTestLanguage.g:10846:2: ( rule__ClosureExpression__Group_1__0 )?
            int alt85=2;
            int LA85_0 = input.LA(1);

            if ( (LA85_0==28) ) {
                alt85=1;
            }
            switch (alt85) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:10846:3: rule__ClosureExpression__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ClosureExpression__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 777, rule__ClosureExpression__Group__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group__1__Impl"


    // $ANTLR start "rule__ClosureExpression__Group__2"
    // InternalBeeLangTestLanguage.g:10854:1: rule__ClosureExpression__Group__2 : rule__ClosureExpression__Group__2__Impl rule__ClosureExpression__Group__3 ;
    public final void rule__ClosureExpression__Group__2() throws RecognitionException {
        int rule__ClosureExpression__Group__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 778) ) { return ; }
            // InternalBeeLangTestLanguage.g:10858:1: ( rule__ClosureExpression__Group__2__Impl rule__ClosureExpression__Group__3 )
            // InternalBeeLangTestLanguage.g:10859:2: rule__ClosureExpression__Group__2__Impl rule__ClosureExpression__Group__3
            {
            pushFollow(FOLLOW_73);
            rule__ClosureExpression__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ClosureExpression__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 778, rule__ClosureExpression__Group__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group__2"


    // $ANTLR start "rule__ClosureExpression__Group__2__Impl"
    // InternalBeeLangTestLanguage.g:10866:1: rule__ClosureExpression__Group__2__Impl : ( ( rule__ClosureExpression__Alternatives_2 )? ) ;
    public final void rule__ClosureExpression__Group__2__Impl() throws RecognitionException {
        int rule__ClosureExpression__Group__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 779) ) { return ; }
            // InternalBeeLangTestLanguage.g:10870:1: ( ( ( rule__ClosureExpression__Alternatives_2 )? ) )
            // InternalBeeLangTestLanguage.g:10871:1: ( ( rule__ClosureExpression__Alternatives_2 )? )
            {
            // InternalBeeLangTestLanguage.g:10871:1: ( ( rule__ClosureExpression__Alternatives_2 )? )
            // InternalBeeLangTestLanguage.g:10872:2: ( rule__ClosureExpression__Alternatives_2 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureExpressionAccess().getAlternatives_2()); 
            }
            // InternalBeeLangTestLanguage.g:10873:2: ( rule__ClosureExpression__Alternatives_2 )?
            int alt86=2;
            alt86 = dfa86.predict(input);
            switch (alt86) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:10873:3: rule__ClosureExpression__Alternatives_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__ClosureExpression__Alternatives_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureExpressionAccess().getAlternatives_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 779, rule__ClosureExpression__Group__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group__2__Impl"


    // $ANTLR start "rule__ClosureExpression__Group__3"
    // InternalBeeLangTestLanguage.g:10881:1: rule__ClosureExpression__Group__3 : rule__ClosureExpression__Group__3__Impl rule__ClosureExpression__Group__4 ;
    public final void rule__ClosureExpression__Group__3() throws RecognitionException {
        int rule__ClosureExpression__Group__3_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 780) ) { return ; }
            // InternalBeeLangTestLanguage.g:10885:1: ( rule__ClosureExpression__Group__3__Impl rule__ClosureExpression__Group__4 )
            // InternalBeeLangTestLanguage.g:10886:2: rule__ClosureExpression__Group__3__Impl rule__ClosureExpression__Group__4
            {
            pushFollow(FOLLOW_66);
            rule__ClosureExpression__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ClosureExpression__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 780, rule__ClosureExpression__Group__3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group__3"


    // $ANTLR start "rule__ClosureExpression__Group__3__Impl"
    // InternalBeeLangTestLanguage.g:10893:1: rule__ClosureExpression__Group__3__Impl : ( '|' ) ;
    public final void rule__ClosureExpression__Group__3__Impl() throws RecognitionException {
        int rule__ClosureExpression__Group__3__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 781) ) { return ; }
            // InternalBeeLangTestLanguage.g:10897:1: ( ( '|' ) )
            // InternalBeeLangTestLanguage.g:10898:1: ( '|' )
            {
            // InternalBeeLangTestLanguage.g:10898:1: ( '|' )
            // InternalBeeLangTestLanguage.g:10899:2: '|'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureExpressionAccess().getVerticalLineKeyword_3()); 
            }
            match(input,72,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureExpressionAccess().getVerticalLineKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 781, rule__ClosureExpression__Group__3__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group__3__Impl"


    // $ANTLR start "rule__ClosureExpression__Group__4"
    // InternalBeeLangTestLanguage.g:10908:1: rule__ClosureExpression__Group__4 : rule__ClosureExpression__Group__4__Impl ;
    public final void rule__ClosureExpression__Group__4() throws RecognitionException {
        int rule__ClosureExpression__Group__4_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 782) ) { return ; }
            // InternalBeeLangTestLanguage.g:10912:1: ( rule__ClosureExpression__Group__4__Impl )
            // InternalBeeLangTestLanguage.g:10913:2: rule__ClosureExpression__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ClosureExpression__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 782, rule__ClosureExpression__Group__4_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group__4"


    // $ANTLR start "rule__ClosureExpression__Group__4__Impl"
    // InternalBeeLangTestLanguage.g:10919:1: rule__ClosureExpression__Group__4__Impl : ( ( rule__ClosureExpression__FuncExprAssignment_4 ) ) ;
    public final void rule__ClosureExpression__Group__4__Impl() throws RecognitionException {
        int rule__ClosureExpression__Group__4__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 783) ) { return ; }
            // InternalBeeLangTestLanguage.g:10923:1: ( ( ( rule__ClosureExpression__FuncExprAssignment_4 ) ) )
            // InternalBeeLangTestLanguage.g:10924:1: ( ( rule__ClosureExpression__FuncExprAssignment_4 ) )
            {
            // InternalBeeLangTestLanguage.g:10924:1: ( ( rule__ClosureExpression__FuncExprAssignment_4 ) )
            // InternalBeeLangTestLanguage.g:10925:2: ( rule__ClosureExpression__FuncExprAssignment_4 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureExpressionAccess().getFuncExprAssignment_4()); 
            }
            // InternalBeeLangTestLanguage.g:10926:2: ( rule__ClosureExpression__FuncExprAssignment_4 )
            // InternalBeeLangTestLanguage.g:10926:3: rule__ClosureExpression__FuncExprAssignment_4
            {
            pushFollow(FOLLOW_2);
            rule__ClosureExpression__FuncExprAssignment_4();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureExpressionAccess().getFuncExprAssignment_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 783, rule__ClosureExpression__Group__4__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group__4__Impl"


    // $ANTLR start "rule__ClosureExpression__Group_1__0"
    // InternalBeeLangTestLanguage.g:10935:1: rule__ClosureExpression__Group_1__0 : rule__ClosureExpression__Group_1__0__Impl rule__ClosureExpression__Group_1__1 ;
    public final void rule__ClosureExpression__Group_1__0() throws RecognitionException {
        int rule__ClosureExpression__Group_1__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 784) ) { return ; }
            // InternalBeeLangTestLanguage.g:10939:1: ( rule__ClosureExpression__Group_1__0__Impl rule__ClosureExpression__Group_1__1 )
            // InternalBeeLangTestLanguage.g:10940:2: rule__ClosureExpression__Group_1__0__Impl rule__ClosureExpression__Group_1__1
            {
            pushFollow(FOLLOW_28);
            rule__ClosureExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ClosureExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 784, rule__ClosureExpression__Group_1__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group_1__0"


    // $ANTLR start "rule__ClosureExpression__Group_1__0__Impl"
    // InternalBeeLangTestLanguage.g:10947:1: rule__ClosureExpression__Group_1__0__Impl : ( '<' ) ;
    public final void rule__ClosureExpression__Group_1__0__Impl() throws RecognitionException {
        int rule__ClosureExpression__Group_1__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 785) ) { return ; }
            // InternalBeeLangTestLanguage.g:10951:1: ( ( '<' ) )
            // InternalBeeLangTestLanguage.g:10952:1: ( '<' )
            {
            // InternalBeeLangTestLanguage.g:10952:1: ( '<' )
            // InternalBeeLangTestLanguage.g:10953:2: '<'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureExpressionAccess().getLessThanSignKeyword_1_0()); 
            }
            match(input,28,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureExpressionAccess().getLessThanSignKeyword_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 785, rule__ClosureExpression__Group_1__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group_1__0__Impl"


    // $ANTLR start "rule__ClosureExpression__Group_1__1"
    // InternalBeeLangTestLanguage.g:10962:1: rule__ClosureExpression__Group_1__1 : rule__ClosureExpression__Group_1__1__Impl rule__ClosureExpression__Group_1__2 ;
    public final void rule__ClosureExpression__Group_1__1() throws RecognitionException {
        int rule__ClosureExpression__Group_1__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 786) ) { return ; }
            // InternalBeeLangTestLanguage.g:10966:1: ( rule__ClosureExpression__Group_1__1__Impl rule__ClosureExpression__Group_1__2 )
            // InternalBeeLangTestLanguage.g:10967:2: rule__ClosureExpression__Group_1__1__Impl rule__ClosureExpression__Group_1__2
            {
            pushFollow(FOLLOW_74);
            rule__ClosureExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ClosureExpression__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 786, rule__ClosureExpression__Group_1__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group_1__1"


    // $ANTLR start "rule__ClosureExpression__Group_1__1__Impl"
    // InternalBeeLangTestLanguage.g:10974:1: rule__ClosureExpression__Group_1__1__Impl : ( ( rule__ClosureExpression__ReturnTypeAssignment_1_1 ) ) ;
    public final void rule__ClosureExpression__Group_1__1__Impl() throws RecognitionException {
        int rule__ClosureExpression__Group_1__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 787) ) { return ; }
            // InternalBeeLangTestLanguage.g:10978:1: ( ( ( rule__ClosureExpression__ReturnTypeAssignment_1_1 ) ) )
            // InternalBeeLangTestLanguage.g:10979:1: ( ( rule__ClosureExpression__ReturnTypeAssignment_1_1 ) )
            {
            // InternalBeeLangTestLanguage.g:10979:1: ( ( rule__ClosureExpression__ReturnTypeAssignment_1_1 ) )
            // InternalBeeLangTestLanguage.g:10980:2: ( rule__ClosureExpression__ReturnTypeAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureExpressionAccess().getReturnTypeAssignment_1_1()); 
            }
            // InternalBeeLangTestLanguage.g:10981:2: ( rule__ClosureExpression__ReturnTypeAssignment_1_1 )
            // InternalBeeLangTestLanguage.g:10981:3: rule__ClosureExpression__ReturnTypeAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__ClosureExpression__ReturnTypeAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureExpressionAccess().getReturnTypeAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 787, rule__ClosureExpression__Group_1__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group_1__1__Impl"


    // $ANTLR start "rule__ClosureExpression__Group_1__2"
    // InternalBeeLangTestLanguage.g:10989:1: rule__ClosureExpression__Group_1__2 : rule__ClosureExpression__Group_1__2__Impl ;
    public final void rule__ClosureExpression__Group_1__2() throws RecognitionException {
        int rule__ClosureExpression__Group_1__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 788) ) { return ; }
            // InternalBeeLangTestLanguage.g:10993:1: ( rule__ClosureExpression__Group_1__2__Impl )
            // InternalBeeLangTestLanguage.g:10994:2: rule__ClosureExpression__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ClosureExpression__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 788, rule__ClosureExpression__Group_1__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group_1__2"


    // $ANTLR start "rule__ClosureExpression__Group_1__2__Impl"
    // InternalBeeLangTestLanguage.g:11000:1: rule__ClosureExpression__Group_1__2__Impl : ( '>' ) ;
    public final void rule__ClosureExpression__Group_1__2__Impl() throws RecognitionException {
        int rule__ClosureExpression__Group_1__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 789) ) { return ; }
            // InternalBeeLangTestLanguage.g:11004:1: ( ( '>' ) )
            // InternalBeeLangTestLanguage.g:11005:1: ( '>' )
            {
            // InternalBeeLangTestLanguage.g:11005:1: ( '>' )
            // InternalBeeLangTestLanguage.g:11006:2: '>'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureExpressionAccess().getGreaterThanSignKeyword_1_2()); 
            }
            match(input,27,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureExpressionAccess().getGreaterThanSignKeyword_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 789, rule__ClosureExpression__Group_1__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group_1__2__Impl"


    // $ANTLR start "rule__ClosureExpression__Group_2_0__0"
    // InternalBeeLangTestLanguage.g:11016:1: rule__ClosureExpression__Group_2_0__0 : rule__ClosureExpression__Group_2_0__0__Impl rule__ClosureExpression__Group_2_0__1 ;
    public final void rule__ClosureExpression__Group_2_0__0() throws RecognitionException {
        int rule__ClosureExpression__Group_2_0__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 790) ) { return ; }
            // InternalBeeLangTestLanguage.g:11020:1: ( rule__ClosureExpression__Group_2_0__0__Impl rule__ClosureExpression__Group_2_0__1 )
            // InternalBeeLangTestLanguage.g:11021:2: rule__ClosureExpression__Group_2_0__0__Impl rule__ClosureExpression__Group_2_0__1
            {
            pushFollow(FOLLOW_26);
            rule__ClosureExpression__Group_2_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ClosureExpression__Group_2_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 790, rule__ClosureExpression__Group_2_0__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group_2_0__0"


    // $ANTLR start "rule__ClosureExpression__Group_2_0__0__Impl"
    // InternalBeeLangTestLanguage.g:11028:1: rule__ClosureExpression__Group_2_0__0__Impl : ( ( '|' )? ) ;
    public final void rule__ClosureExpression__Group_2_0__0__Impl() throws RecognitionException {
        int rule__ClosureExpression__Group_2_0__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 791) ) { return ; }
            // InternalBeeLangTestLanguage.g:11032:1: ( ( ( '|' )? ) )
            // InternalBeeLangTestLanguage.g:11033:1: ( ( '|' )? )
            {
            // InternalBeeLangTestLanguage.g:11033:1: ( ( '|' )? )
            // InternalBeeLangTestLanguage.g:11034:2: ( '|' )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureExpressionAccess().getVerticalLineKeyword_2_0_0()); 
            }
            // InternalBeeLangTestLanguage.g:11035:2: ( '|' )?
            int alt87=2;
            int LA87_0 = input.LA(1);

            if ( (LA87_0==72) ) {
                alt87=1;
            }
            switch (alt87) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:11035:3: '|'
                    {
                    match(input,72,FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureExpressionAccess().getVerticalLineKeyword_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 791, rule__ClosureExpression__Group_2_0__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group_2_0__0__Impl"


    // $ANTLR start "rule__ClosureExpression__Group_2_0__1"
    // InternalBeeLangTestLanguage.g:11043:1: rule__ClosureExpression__Group_2_0__1 : rule__ClosureExpression__Group_2_0__1__Impl ;
    public final void rule__ClosureExpression__Group_2_0__1() throws RecognitionException {
        int rule__ClosureExpression__Group_2_0__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 792) ) { return ; }
            // InternalBeeLangTestLanguage.g:11047:1: ( rule__ClosureExpression__Group_2_0__1__Impl )
            // InternalBeeLangTestLanguage.g:11048:2: rule__ClosureExpression__Group_2_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ClosureExpression__Group_2_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 792, rule__ClosureExpression__Group_2_0__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group_2_0__1"


    // $ANTLR start "rule__ClosureExpression__Group_2_0__1__Impl"
    // InternalBeeLangTestLanguage.g:11054:1: rule__ClosureExpression__Group_2_0__1__Impl : ( ( rule__ClosureExpression__Group_2_0_1__0 ) ) ;
    public final void rule__ClosureExpression__Group_2_0__1__Impl() throws RecognitionException {
        int rule__ClosureExpression__Group_2_0__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 793) ) { return ; }
            // InternalBeeLangTestLanguage.g:11058:1: ( ( ( rule__ClosureExpression__Group_2_0_1__0 ) ) )
            // InternalBeeLangTestLanguage.g:11059:1: ( ( rule__ClosureExpression__Group_2_0_1__0 ) )
            {
            // InternalBeeLangTestLanguage.g:11059:1: ( ( rule__ClosureExpression__Group_2_0_1__0 ) )
            // InternalBeeLangTestLanguage.g:11060:2: ( rule__ClosureExpression__Group_2_0_1__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureExpressionAccess().getGroup_2_0_1()); 
            }
            // InternalBeeLangTestLanguage.g:11061:2: ( rule__ClosureExpression__Group_2_0_1__0 )
            // InternalBeeLangTestLanguage.g:11061:3: rule__ClosureExpression__Group_2_0_1__0
            {
            pushFollow(FOLLOW_2);
            rule__ClosureExpression__Group_2_0_1__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureExpressionAccess().getGroup_2_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 793, rule__ClosureExpression__Group_2_0__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group_2_0__1__Impl"


    // $ANTLR start "rule__ClosureExpression__Group_2_0_1__0"
    // InternalBeeLangTestLanguage.g:11070:1: rule__ClosureExpression__Group_2_0_1__0 : rule__ClosureExpression__Group_2_0_1__0__Impl rule__ClosureExpression__Group_2_0_1__1 ;
    public final void rule__ClosureExpression__Group_2_0_1__0() throws RecognitionException {
        int rule__ClosureExpression__Group_2_0_1__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 794) ) { return ; }
            // InternalBeeLangTestLanguage.g:11074:1: ( rule__ClosureExpression__Group_2_0_1__0__Impl rule__ClosureExpression__Group_2_0_1__1 )
            // InternalBeeLangTestLanguage.g:11075:2: rule__ClosureExpression__Group_2_0_1__0__Impl rule__ClosureExpression__Group_2_0_1__1
            {
            pushFollow(FOLLOW_10);
            rule__ClosureExpression__Group_2_0_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ClosureExpression__Group_2_0_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 794, rule__ClosureExpression__Group_2_0_1__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group_2_0_1__0"


    // $ANTLR start "rule__ClosureExpression__Group_2_0_1__0__Impl"
    // InternalBeeLangTestLanguage.g:11082:1: rule__ClosureExpression__Group_2_0_1__0__Impl : ( ( rule__ClosureExpression__ParametersAssignment_2_0_1_0 ) ) ;
    public final void rule__ClosureExpression__Group_2_0_1__0__Impl() throws RecognitionException {
        int rule__ClosureExpression__Group_2_0_1__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 795) ) { return ; }
            // InternalBeeLangTestLanguage.g:11086:1: ( ( ( rule__ClosureExpression__ParametersAssignment_2_0_1_0 ) ) )
            // InternalBeeLangTestLanguage.g:11087:1: ( ( rule__ClosureExpression__ParametersAssignment_2_0_1_0 ) )
            {
            // InternalBeeLangTestLanguage.g:11087:1: ( ( rule__ClosureExpression__ParametersAssignment_2_0_1_0 ) )
            // InternalBeeLangTestLanguage.g:11088:2: ( rule__ClosureExpression__ParametersAssignment_2_0_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureExpressionAccess().getParametersAssignment_2_0_1_0()); 
            }
            // InternalBeeLangTestLanguage.g:11089:2: ( rule__ClosureExpression__ParametersAssignment_2_0_1_0 )
            // InternalBeeLangTestLanguage.g:11089:3: rule__ClosureExpression__ParametersAssignment_2_0_1_0
            {
            pushFollow(FOLLOW_2);
            rule__ClosureExpression__ParametersAssignment_2_0_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureExpressionAccess().getParametersAssignment_2_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 795, rule__ClosureExpression__Group_2_0_1__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group_2_0_1__0__Impl"


    // $ANTLR start "rule__ClosureExpression__Group_2_0_1__1"
    // InternalBeeLangTestLanguage.g:11097:1: rule__ClosureExpression__Group_2_0_1__1 : rule__ClosureExpression__Group_2_0_1__1__Impl rule__ClosureExpression__Group_2_0_1__2 ;
    public final void rule__ClosureExpression__Group_2_0_1__1() throws RecognitionException {
        int rule__ClosureExpression__Group_2_0_1__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 796) ) { return ; }
            // InternalBeeLangTestLanguage.g:11101:1: ( rule__ClosureExpression__Group_2_0_1__1__Impl rule__ClosureExpression__Group_2_0_1__2 )
            // InternalBeeLangTestLanguage.g:11102:2: rule__ClosureExpression__Group_2_0_1__1__Impl rule__ClosureExpression__Group_2_0_1__2
            {
            pushFollow(FOLLOW_10);
            rule__ClosureExpression__Group_2_0_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ClosureExpression__Group_2_0_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 796, rule__ClosureExpression__Group_2_0_1__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group_2_0_1__1"


    // $ANTLR start "rule__ClosureExpression__Group_2_0_1__1__Impl"
    // InternalBeeLangTestLanguage.g:11109:1: rule__ClosureExpression__Group_2_0_1__1__Impl : ( ( rule__ClosureExpression__Group_2_0_1_1__0 )* ) ;
    public final void rule__ClosureExpression__Group_2_0_1__1__Impl() throws RecognitionException {
        int rule__ClosureExpression__Group_2_0_1__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 797) ) { return ; }
            // InternalBeeLangTestLanguage.g:11113:1: ( ( ( rule__ClosureExpression__Group_2_0_1_1__0 )* ) )
            // InternalBeeLangTestLanguage.g:11114:1: ( ( rule__ClosureExpression__Group_2_0_1_1__0 )* )
            {
            // InternalBeeLangTestLanguage.g:11114:1: ( ( rule__ClosureExpression__Group_2_0_1_1__0 )* )
            // InternalBeeLangTestLanguage.g:11115:2: ( rule__ClosureExpression__Group_2_0_1_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureExpressionAccess().getGroup_2_0_1_1()); 
            }
            // InternalBeeLangTestLanguage.g:11116:2: ( rule__ClosureExpression__Group_2_0_1_1__0 )*
            loop88:
            do {
                int alt88=2;
                int LA88_0 = input.LA(1);

                if ( (LA88_0==48) ) {
                    int LA88_1 = input.LA(2);

                    if ( (LA88_1==RULE_ID||LA88_1==60) ) {
                        alt88=1;
                    }


                }


                switch (alt88) {
            	case 1 :
            	    // InternalBeeLangTestLanguage.g:11116:3: rule__ClosureExpression__Group_2_0_1_1__0
            	    {
            	    pushFollow(FOLLOW_11);
            	    rule__ClosureExpression__Group_2_0_1_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop88;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureExpressionAccess().getGroup_2_0_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 797, rule__ClosureExpression__Group_2_0_1__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group_2_0_1__1__Impl"


    // $ANTLR start "rule__ClosureExpression__Group_2_0_1__2"
    // InternalBeeLangTestLanguage.g:11124:1: rule__ClosureExpression__Group_2_0_1__2 : rule__ClosureExpression__Group_2_0_1__2__Impl ;
    public final void rule__ClosureExpression__Group_2_0_1__2() throws RecognitionException {
        int rule__ClosureExpression__Group_2_0_1__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 798) ) { return ; }
            // InternalBeeLangTestLanguage.g:11128:1: ( rule__ClosureExpression__Group_2_0_1__2__Impl )
            // InternalBeeLangTestLanguage.g:11129:2: rule__ClosureExpression__Group_2_0_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ClosureExpression__Group_2_0_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 798, rule__ClosureExpression__Group_2_0_1__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group_2_0_1__2"


    // $ANTLR start "rule__ClosureExpression__Group_2_0_1__2__Impl"
    // InternalBeeLangTestLanguage.g:11135:1: rule__ClosureExpression__Group_2_0_1__2__Impl : ( ( rule__ClosureExpression__Group_2_0_1_2__0 )? ) ;
    public final void rule__ClosureExpression__Group_2_0_1__2__Impl() throws RecognitionException {
        int rule__ClosureExpression__Group_2_0_1__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 799) ) { return ; }
            // InternalBeeLangTestLanguage.g:11139:1: ( ( ( rule__ClosureExpression__Group_2_0_1_2__0 )? ) )
            // InternalBeeLangTestLanguage.g:11140:1: ( ( rule__ClosureExpression__Group_2_0_1_2__0 )? )
            {
            // InternalBeeLangTestLanguage.g:11140:1: ( ( rule__ClosureExpression__Group_2_0_1_2__0 )? )
            // InternalBeeLangTestLanguage.g:11141:2: ( rule__ClosureExpression__Group_2_0_1_2__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureExpressionAccess().getGroup_2_0_1_2()); 
            }
            // InternalBeeLangTestLanguage.g:11142:2: ( rule__ClosureExpression__Group_2_0_1_2__0 )?
            int alt89=2;
            int LA89_0 = input.LA(1);

            if ( (LA89_0==48) ) {
                alt89=1;
            }
            switch (alt89) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:11142:3: rule__ClosureExpression__Group_2_0_1_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ClosureExpression__Group_2_0_1_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureExpressionAccess().getGroup_2_0_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 799, rule__ClosureExpression__Group_2_0_1__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group_2_0_1__2__Impl"


    // $ANTLR start "rule__ClosureExpression__Group_2_0_1_1__0"
    // InternalBeeLangTestLanguage.g:11151:1: rule__ClosureExpression__Group_2_0_1_1__0 : rule__ClosureExpression__Group_2_0_1_1__0__Impl rule__ClosureExpression__Group_2_0_1_1__1 ;
    public final void rule__ClosureExpression__Group_2_0_1_1__0() throws RecognitionException {
        int rule__ClosureExpression__Group_2_0_1_1__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 800) ) { return ; }
            // InternalBeeLangTestLanguage.g:11155:1: ( rule__ClosureExpression__Group_2_0_1_1__0__Impl rule__ClosureExpression__Group_2_0_1_1__1 )
            // InternalBeeLangTestLanguage.g:11156:2: rule__ClosureExpression__Group_2_0_1_1__0__Impl rule__ClosureExpression__Group_2_0_1_1__1
            {
            pushFollow(FOLLOW_26);
            rule__ClosureExpression__Group_2_0_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ClosureExpression__Group_2_0_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 800, rule__ClosureExpression__Group_2_0_1_1__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group_2_0_1_1__0"


    // $ANTLR start "rule__ClosureExpression__Group_2_0_1_1__0__Impl"
    // InternalBeeLangTestLanguage.g:11163:1: rule__ClosureExpression__Group_2_0_1_1__0__Impl : ( ',' ) ;
    public final void rule__ClosureExpression__Group_2_0_1_1__0__Impl() throws RecognitionException {
        int rule__ClosureExpression__Group_2_0_1_1__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 801) ) { return ; }
            // InternalBeeLangTestLanguage.g:11167:1: ( ( ',' ) )
            // InternalBeeLangTestLanguage.g:11168:1: ( ',' )
            {
            // InternalBeeLangTestLanguage.g:11168:1: ( ',' )
            // InternalBeeLangTestLanguage.g:11169:2: ','
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureExpressionAccess().getCommaKeyword_2_0_1_1_0()); 
            }
            match(input,48,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureExpressionAccess().getCommaKeyword_2_0_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 801, rule__ClosureExpression__Group_2_0_1_1__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group_2_0_1_1__0__Impl"


    // $ANTLR start "rule__ClosureExpression__Group_2_0_1_1__1"
    // InternalBeeLangTestLanguage.g:11178:1: rule__ClosureExpression__Group_2_0_1_1__1 : rule__ClosureExpression__Group_2_0_1_1__1__Impl ;
    public final void rule__ClosureExpression__Group_2_0_1_1__1() throws RecognitionException {
        int rule__ClosureExpression__Group_2_0_1_1__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 802) ) { return ; }
            // InternalBeeLangTestLanguage.g:11182:1: ( rule__ClosureExpression__Group_2_0_1_1__1__Impl )
            // InternalBeeLangTestLanguage.g:11183:2: rule__ClosureExpression__Group_2_0_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ClosureExpression__Group_2_0_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 802, rule__ClosureExpression__Group_2_0_1_1__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group_2_0_1_1__1"


    // $ANTLR start "rule__ClosureExpression__Group_2_0_1_1__1__Impl"
    // InternalBeeLangTestLanguage.g:11189:1: rule__ClosureExpression__Group_2_0_1_1__1__Impl : ( ( rule__ClosureExpression__ParametersAssignment_2_0_1_1_1 ) ) ;
    public final void rule__ClosureExpression__Group_2_0_1_1__1__Impl() throws RecognitionException {
        int rule__ClosureExpression__Group_2_0_1_1__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 803) ) { return ; }
            // InternalBeeLangTestLanguage.g:11193:1: ( ( ( rule__ClosureExpression__ParametersAssignment_2_0_1_1_1 ) ) )
            // InternalBeeLangTestLanguage.g:11194:1: ( ( rule__ClosureExpression__ParametersAssignment_2_0_1_1_1 ) )
            {
            // InternalBeeLangTestLanguage.g:11194:1: ( ( rule__ClosureExpression__ParametersAssignment_2_0_1_1_1 ) )
            // InternalBeeLangTestLanguage.g:11195:2: ( rule__ClosureExpression__ParametersAssignment_2_0_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureExpressionAccess().getParametersAssignment_2_0_1_1_1()); 
            }
            // InternalBeeLangTestLanguage.g:11196:2: ( rule__ClosureExpression__ParametersAssignment_2_0_1_1_1 )
            // InternalBeeLangTestLanguage.g:11196:3: rule__ClosureExpression__ParametersAssignment_2_0_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__ClosureExpression__ParametersAssignment_2_0_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureExpressionAccess().getParametersAssignment_2_0_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 803, rule__ClosureExpression__Group_2_0_1_1__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group_2_0_1_1__1__Impl"


    // $ANTLR start "rule__ClosureExpression__Group_2_0_1_2__0"
    // InternalBeeLangTestLanguage.g:11205:1: rule__ClosureExpression__Group_2_0_1_2__0 : rule__ClosureExpression__Group_2_0_1_2__0__Impl rule__ClosureExpression__Group_2_0_1_2__1 ;
    public final void rule__ClosureExpression__Group_2_0_1_2__0() throws RecognitionException {
        int rule__ClosureExpression__Group_2_0_1_2__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 804) ) { return ; }
            // InternalBeeLangTestLanguage.g:11209:1: ( rule__ClosureExpression__Group_2_0_1_2__0__Impl rule__ClosureExpression__Group_2_0_1_2__1 )
            // InternalBeeLangTestLanguage.g:11210:2: rule__ClosureExpression__Group_2_0_1_2__0__Impl rule__ClosureExpression__Group_2_0_1_2__1
            {
            pushFollow(FOLLOW_31);
            rule__ClosureExpression__Group_2_0_1_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ClosureExpression__Group_2_0_1_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 804, rule__ClosureExpression__Group_2_0_1_2__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group_2_0_1_2__0"


    // $ANTLR start "rule__ClosureExpression__Group_2_0_1_2__0__Impl"
    // InternalBeeLangTestLanguage.g:11217:1: rule__ClosureExpression__Group_2_0_1_2__0__Impl : ( ',' ) ;
    public final void rule__ClosureExpression__Group_2_0_1_2__0__Impl() throws RecognitionException {
        int rule__ClosureExpression__Group_2_0_1_2__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 805) ) { return ; }
            // InternalBeeLangTestLanguage.g:11221:1: ( ( ',' ) )
            // InternalBeeLangTestLanguage.g:11222:1: ( ',' )
            {
            // InternalBeeLangTestLanguage.g:11222:1: ( ',' )
            // InternalBeeLangTestLanguage.g:11223:2: ','
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureExpressionAccess().getCommaKeyword_2_0_1_2_0()); 
            }
            match(input,48,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureExpressionAccess().getCommaKeyword_2_0_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 805, rule__ClosureExpression__Group_2_0_1_2__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group_2_0_1_2__0__Impl"


    // $ANTLR start "rule__ClosureExpression__Group_2_0_1_2__1"
    // InternalBeeLangTestLanguage.g:11232:1: rule__ClosureExpression__Group_2_0_1_2__1 : rule__ClosureExpression__Group_2_0_1_2__1__Impl rule__ClosureExpression__Group_2_0_1_2__2 ;
    public final void rule__ClosureExpression__Group_2_0_1_2__1() throws RecognitionException {
        int rule__ClosureExpression__Group_2_0_1_2__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 806) ) { return ; }
            // InternalBeeLangTestLanguage.g:11236:1: ( rule__ClosureExpression__Group_2_0_1_2__1__Impl rule__ClosureExpression__Group_2_0_1_2__2 )
            // InternalBeeLangTestLanguage.g:11237:2: rule__ClosureExpression__Group_2_0_1_2__1__Impl rule__ClosureExpression__Group_2_0_1_2__2
            {
            pushFollow(FOLLOW_26);
            rule__ClosureExpression__Group_2_0_1_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ClosureExpression__Group_2_0_1_2__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 806, rule__ClosureExpression__Group_2_0_1_2__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group_2_0_1_2__1"


    // $ANTLR start "rule__ClosureExpression__Group_2_0_1_2__1__Impl"
    // InternalBeeLangTestLanguage.g:11244:1: rule__ClosureExpression__Group_2_0_1_2__1__Impl : ( ( rule__ClosureExpression__VarArgsAssignment_2_0_1_2_1 ) ) ;
    public final void rule__ClosureExpression__Group_2_0_1_2__1__Impl() throws RecognitionException {
        int rule__ClosureExpression__Group_2_0_1_2__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 807) ) { return ; }
            // InternalBeeLangTestLanguage.g:11248:1: ( ( ( rule__ClosureExpression__VarArgsAssignment_2_0_1_2_1 ) ) )
            // InternalBeeLangTestLanguage.g:11249:1: ( ( rule__ClosureExpression__VarArgsAssignment_2_0_1_2_1 ) )
            {
            // InternalBeeLangTestLanguage.g:11249:1: ( ( rule__ClosureExpression__VarArgsAssignment_2_0_1_2_1 ) )
            // InternalBeeLangTestLanguage.g:11250:2: ( rule__ClosureExpression__VarArgsAssignment_2_0_1_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureExpressionAccess().getVarArgsAssignment_2_0_1_2_1()); 
            }
            // InternalBeeLangTestLanguage.g:11251:2: ( rule__ClosureExpression__VarArgsAssignment_2_0_1_2_1 )
            // InternalBeeLangTestLanguage.g:11251:3: rule__ClosureExpression__VarArgsAssignment_2_0_1_2_1
            {
            pushFollow(FOLLOW_2);
            rule__ClosureExpression__VarArgsAssignment_2_0_1_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureExpressionAccess().getVarArgsAssignment_2_0_1_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 807, rule__ClosureExpression__Group_2_0_1_2__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group_2_0_1_2__1__Impl"


    // $ANTLR start "rule__ClosureExpression__Group_2_0_1_2__2"
    // InternalBeeLangTestLanguage.g:11259:1: rule__ClosureExpression__Group_2_0_1_2__2 : rule__ClosureExpression__Group_2_0_1_2__2__Impl ;
    public final void rule__ClosureExpression__Group_2_0_1_2__2() throws RecognitionException {
        int rule__ClosureExpression__Group_2_0_1_2__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 808) ) { return ; }
            // InternalBeeLangTestLanguage.g:11263:1: ( rule__ClosureExpression__Group_2_0_1_2__2__Impl )
            // InternalBeeLangTestLanguage.g:11264:2: rule__ClosureExpression__Group_2_0_1_2__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ClosureExpression__Group_2_0_1_2__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 808, rule__ClosureExpression__Group_2_0_1_2__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group_2_0_1_2__2"


    // $ANTLR start "rule__ClosureExpression__Group_2_0_1_2__2__Impl"
    // InternalBeeLangTestLanguage.g:11270:1: rule__ClosureExpression__Group_2_0_1_2__2__Impl : ( ( rule__ClosureExpression__ParametersAssignment_2_0_1_2_2 ) ) ;
    public final void rule__ClosureExpression__Group_2_0_1_2__2__Impl() throws RecognitionException {
        int rule__ClosureExpression__Group_2_0_1_2__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 809) ) { return ; }
            // InternalBeeLangTestLanguage.g:11274:1: ( ( ( rule__ClosureExpression__ParametersAssignment_2_0_1_2_2 ) ) )
            // InternalBeeLangTestLanguage.g:11275:1: ( ( rule__ClosureExpression__ParametersAssignment_2_0_1_2_2 ) )
            {
            // InternalBeeLangTestLanguage.g:11275:1: ( ( rule__ClosureExpression__ParametersAssignment_2_0_1_2_2 ) )
            // InternalBeeLangTestLanguage.g:11276:2: ( rule__ClosureExpression__ParametersAssignment_2_0_1_2_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureExpressionAccess().getParametersAssignment_2_0_1_2_2()); 
            }
            // InternalBeeLangTestLanguage.g:11277:2: ( rule__ClosureExpression__ParametersAssignment_2_0_1_2_2 )
            // InternalBeeLangTestLanguage.g:11277:3: rule__ClosureExpression__ParametersAssignment_2_0_1_2_2
            {
            pushFollow(FOLLOW_2);
            rule__ClosureExpression__ParametersAssignment_2_0_1_2_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureExpressionAccess().getParametersAssignment_2_0_1_2_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 809, rule__ClosureExpression__Group_2_0_1_2__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group_2_0_1_2__2__Impl"


    // $ANTLR start "rule__ClosureExpression__Group_2_1__0"
    // InternalBeeLangTestLanguage.g:11286:1: rule__ClosureExpression__Group_2_1__0 : rule__ClosureExpression__Group_2_1__0__Impl rule__ClosureExpression__Group_2_1__1 ;
    public final void rule__ClosureExpression__Group_2_1__0() throws RecognitionException {
        int rule__ClosureExpression__Group_2_1__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 810) ) { return ; }
            // InternalBeeLangTestLanguage.g:11290:1: ( rule__ClosureExpression__Group_2_1__0__Impl rule__ClosureExpression__Group_2_1__1 )
            // InternalBeeLangTestLanguage.g:11291:2: rule__ClosureExpression__Group_2_1__0__Impl rule__ClosureExpression__Group_2_1__1
            {
            pushFollow(FOLLOW_26);
            rule__ClosureExpression__Group_2_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ClosureExpression__Group_2_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 810, rule__ClosureExpression__Group_2_1__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group_2_1__0"


    // $ANTLR start "rule__ClosureExpression__Group_2_1__0__Impl"
    // InternalBeeLangTestLanguage.g:11298:1: rule__ClosureExpression__Group_2_1__0__Impl : ( ( rule__ClosureExpression__VarArgsAssignment_2_1_0 ) ) ;
    public final void rule__ClosureExpression__Group_2_1__0__Impl() throws RecognitionException {
        int rule__ClosureExpression__Group_2_1__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 811) ) { return ; }
            // InternalBeeLangTestLanguage.g:11302:1: ( ( ( rule__ClosureExpression__VarArgsAssignment_2_1_0 ) ) )
            // InternalBeeLangTestLanguage.g:11303:1: ( ( rule__ClosureExpression__VarArgsAssignment_2_1_0 ) )
            {
            // InternalBeeLangTestLanguage.g:11303:1: ( ( rule__ClosureExpression__VarArgsAssignment_2_1_0 ) )
            // InternalBeeLangTestLanguage.g:11304:2: ( rule__ClosureExpression__VarArgsAssignment_2_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureExpressionAccess().getVarArgsAssignment_2_1_0()); 
            }
            // InternalBeeLangTestLanguage.g:11305:2: ( rule__ClosureExpression__VarArgsAssignment_2_1_0 )
            // InternalBeeLangTestLanguage.g:11305:3: rule__ClosureExpression__VarArgsAssignment_2_1_0
            {
            pushFollow(FOLLOW_2);
            rule__ClosureExpression__VarArgsAssignment_2_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureExpressionAccess().getVarArgsAssignment_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 811, rule__ClosureExpression__Group_2_1__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group_2_1__0__Impl"


    // $ANTLR start "rule__ClosureExpression__Group_2_1__1"
    // InternalBeeLangTestLanguage.g:11313:1: rule__ClosureExpression__Group_2_1__1 : rule__ClosureExpression__Group_2_1__1__Impl ;
    public final void rule__ClosureExpression__Group_2_1__1() throws RecognitionException {
        int rule__ClosureExpression__Group_2_1__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 812) ) { return ; }
            // InternalBeeLangTestLanguage.g:11317:1: ( rule__ClosureExpression__Group_2_1__1__Impl )
            // InternalBeeLangTestLanguage.g:11318:2: rule__ClosureExpression__Group_2_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ClosureExpression__Group_2_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 812, rule__ClosureExpression__Group_2_1__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group_2_1__1"


    // $ANTLR start "rule__ClosureExpression__Group_2_1__1__Impl"
    // InternalBeeLangTestLanguage.g:11324:1: rule__ClosureExpression__Group_2_1__1__Impl : ( ( rule__ClosureExpression__ParametersAssignment_2_1_1 ) ) ;
    public final void rule__ClosureExpression__Group_2_1__1__Impl() throws RecognitionException {
        int rule__ClosureExpression__Group_2_1__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 813) ) { return ; }
            // InternalBeeLangTestLanguage.g:11328:1: ( ( ( rule__ClosureExpression__ParametersAssignment_2_1_1 ) ) )
            // InternalBeeLangTestLanguage.g:11329:1: ( ( rule__ClosureExpression__ParametersAssignment_2_1_1 ) )
            {
            // InternalBeeLangTestLanguage.g:11329:1: ( ( rule__ClosureExpression__ParametersAssignment_2_1_1 ) )
            // InternalBeeLangTestLanguage.g:11330:2: ( rule__ClosureExpression__ParametersAssignment_2_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureExpressionAccess().getParametersAssignment_2_1_1()); 
            }
            // InternalBeeLangTestLanguage.g:11331:2: ( rule__ClosureExpression__ParametersAssignment_2_1_1 )
            // InternalBeeLangTestLanguage.g:11331:3: rule__ClosureExpression__ParametersAssignment_2_1_1
            {
            pushFollow(FOLLOW_2);
            rule__ClosureExpression__ParametersAssignment_2_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureExpressionAccess().getParametersAssignment_2_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 813, rule__ClosureExpression__Group_2_1__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group_2_1__1__Impl"


    // $ANTLR start "rule__BlockExpressionWithoutBrackets__Group__0"
    // InternalBeeLangTestLanguage.g:11340:1: rule__BlockExpressionWithoutBrackets__Group__0 : rule__BlockExpressionWithoutBrackets__Group__0__Impl rule__BlockExpressionWithoutBrackets__Group__1 ;
    public final void rule__BlockExpressionWithoutBrackets__Group__0() throws RecognitionException {
        int rule__BlockExpressionWithoutBrackets__Group__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 814) ) { return ; }
            // InternalBeeLangTestLanguage.g:11344:1: ( rule__BlockExpressionWithoutBrackets__Group__0__Impl rule__BlockExpressionWithoutBrackets__Group__1 )
            // InternalBeeLangTestLanguage.g:11345:2: rule__BlockExpressionWithoutBrackets__Group__0__Impl rule__BlockExpressionWithoutBrackets__Group__1
            {
            pushFollow(FOLLOW_66);
            rule__BlockExpressionWithoutBrackets__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__BlockExpressionWithoutBrackets__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 814, rule__BlockExpressionWithoutBrackets__Group__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BlockExpressionWithoutBrackets__Group__0"


    // $ANTLR start "rule__BlockExpressionWithoutBrackets__Group__0__Impl"
    // InternalBeeLangTestLanguage.g:11352:1: rule__BlockExpressionWithoutBrackets__Group__0__Impl : ( () ) ;
    public final void rule__BlockExpressionWithoutBrackets__Group__0__Impl() throws RecognitionException {
        int rule__BlockExpressionWithoutBrackets__Group__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 815) ) { return ; }
            // InternalBeeLangTestLanguage.g:11356:1: ( ( () ) )
            // InternalBeeLangTestLanguage.g:11357:1: ( () )
            {
            // InternalBeeLangTestLanguage.g:11357:1: ( () )
            // InternalBeeLangTestLanguage.g:11358:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBlockExpressionWithoutBracketsAccess().getChainedExpressionAction_0()); 
            }
            // InternalBeeLangTestLanguage.g:11359:2: ()
            // InternalBeeLangTestLanguage.g:11359:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBlockExpressionWithoutBracketsAccess().getChainedExpressionAction_0()); 
            }

            }


            }

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 815, rule__BlockExpressionWithoutBrackets__Group__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BlockExpressionWithoutBrackets__Group__0__Impl"


    // $ANTLR start "rule__BlockExpressionWithoutBrackets__Group__1"
    // InternalBeeLangTestLanguage.g:11367:1: rule__BlockExpressionWithoutBrackets__Group__1 : rule__BlockExpressionWithoutBrackets__Group__1__Impl ;
    public final void rule__BlockExpressionWithoutBrackets__Group__1() throws RecognitionException {
        int rule__BlockExpressionWithoutBrackets__Group__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 816) ) { return ; }
            // InternalBeeLangTestLanguage.g:11371:1: ( rule__BlockExpressionWithoutBrackets__Group__1__Impl )
            // InternalBeeLangTestLanguage.g:11372:2: rule__BlockExpressionWithoutBrackets__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__BlockExpressionWithoutBrackets__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 816, rule__BlockExpressionWithoutBrackets__Group__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BlockExpressionWithoutBrackets__Group__1"


    // $ANTLR start "rule__BlockExpressionWithoutBrackets__Group__1__Impl"
    // InternalBeeLangTestLanguage.g:11378:1: rule__BlockExpressionWithoutBrackets__Group__1__Impl : ( ( ( rule__BlockExpressionWithoutBrackets__Group_1__0 ) ) ( ( rule__BlockExpressionWithoutBrackets__Group_1__0 )* ) ) ;
    public final void rule__BlockExpressionWithoutBrackets__Group__1__Impl() throws RecognitionException {
        int rule__BlockExpressionWithoutBrackets__Group__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 817) ) { return ; }
            // InternalBeeLangTestLanguage.g:11382:1: ( ( ( ( rule__BlockExpressionWithoutBrackets__Group_1__0 ) ) ( ( rule__BlockExpressionWithoutBrackets__Group_1__0 )* ) ) )
            // InternalBeeLangTestLanguage.g:11383:1: ( ( ( rule__BlockExpressionWithoutBrackets__Group_1__0 ) ) ( ( rule__BlockExpressionWithoutBrackets__Group_1__0 )* ) )
            {
            // InternalBeeLangTestLanguage.g:11383:1: ( ( ( rule__BlockExpressionWithoutBrackets__Group_1__0 ) ) ( ( rule__BlockExpressionWithoutBrackets__Group_1__0 )* ) )
            // InternalBeeLangTestLanguage.g:11384:2: ( ( rule__BlockExpressionWithoutBrackets__Group_1__0 ) ) ( ( rule__BlockExpressionWithoutBrackets__Group_1__0 )* )
            {
            // InternalBeeLangTestLanguage.g:11384:2: ( ( rule__BlockExpressionWithoutBrackets__Group_1__0 ) )
            // InternalBeeLangTestLanguage.g:11385:3: ( rule__BlockExpressionWithoutBrackets__Group_1__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBlockExpressionWithoutBracketsAccess().getGroup_1()); 
            }
            // InternalBeeLangTestLanguage.g:11386:3: ( rule__BlockExpressionWithoutBrackets__Group_1__0 )
            // InternalBeeLangTestLanguage.g:11386:4: rule__BlockExpressionWithoutBrackets__Group_1__0
            {
            pushFollow(FOLLOW_69);
            rule__BlockExpressionWithoutBrackets__Group_1__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBlockExpressionWithoutBracketsAccess().getGroup_1()); 
            }

            }

            // InternalBeeLangTestLanguage.g:11389:2: ( ( rule__BlockExpressionWithoutBrackets__Group_1__0 )* )
            // InternalBeeLangTestLanguage.g:11390:3: ( rule__BlockExpressionWithoutBrackets__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBlockExpressionWithoutBracketsAccess().getGroup_1()); 
            }
            // InternalBeeLangTestLanguage.g:11391:3: ( rule__BlockExpressionWithoutBrackets__Group_1__0 )*
            loop90:
            do {
                int alt90=2;
                int LA90_0 = input.LA(1);

                if ( (LA90_0==RULE_STRING||LA90_0==RULE_ID||LA90_0==13||LA90_0==29||LA90_0==31||(LA90_0>=35 && LA90_0<=44)||LA90_0==60||LA90_0==63||LA90_0==69||LA90_0==71||LA90_0==74||LA90_0==76) ) {
                    alt90=1;
                }


                switch (alt90) {
            	case 1 :
            	    // InternalBeeLangTestLanguage.g:11391:4: rule__BlockExpressionWithoutBrackets__Group_1__0
            	    {
            	    pushFollow(FOLLOW_69);
            	    rule__BlockExpressionWithoutBrackets__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop90;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBlockExpressionWithoutBracketsAccess().getGroup_1()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 817, rule__BlockExpressionWithoutBrackets__Group__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BlockExpressionWithoutBrackets__Group__1__Impl"


    // $ANTLR start "rule__BlockExpressionWithoutBrackets__Group_1__0"
    // InternalBeeLangTestLanguage.g:11401:1: rule__BlockExpressionWithoutBrackets__Group_1__0 : rule__BlockExpressionWithoutBrackets__Group_1__0__Impl rule__BlockExpressionWithoutBrackets__Group_1__1 ;
    public final void rule__BlockExpressionWithoutBrackets__Group_1__0() throws RecognitionException {
        int rule__BlockExpressionWithoutBrackets__Group_1__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 818) ) { return ; }
            // InternalBeeLangTestLanguage.g:11405:1: ( rule__BlockExpressionWithoutBrackets__Group_1__0__Impl rule__BlockExpressionWithoutBrackets__Group_1__1 )
            // InternalBeeLangTestLanguage.g:11406:2: rule__BlockExpressionWithoutBrackets__Group_1__0__Impl rule__BlockExpressionWithoutBrackets__Group_1__1
            {
            pushFollow(FOLLOW_14);
            rule__BlockExpressionWithoutBrackets__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__BlockExpressionWithoutBrackets__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 818, rule__BlockExpressionWithoutBrackets__Group_1__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BlockExpressionWithoutBrackets__Group_1__0"


    // $ANTLR start "rule__BlockExpressionWithoutBrackets__Group_1__0__Impl"
    // InternalBeeLangTestLanguage.g:11413:1: rule__BlockExpressionWithoutBrackets__Group_1__0__Impl : ( ( rule__BlockExpressionWithoutBrackets__ExpressionsAssignment_1_0 ) ) ;
    public final void rule__BlockExpressionWithoutBrackets__Group_1__0__Impl() throws RecognitionException {
        int rule__BlockExpressionWithoutBrackets__Group_1__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 819) ) { return ; }
            // InternalBeeLangTestLanguage.g:11417:1: ( ( ( rule__BlockExpressionWithoutBrackets__ExpressionsAssignment_1_0 ) ) )
            // InternalBeeLangTestLanguage.g:11418:1: ( ( rule__BlockExpressionWithoutBrackets__ExpressionsAssignment_1_0 ) )
            {
            // InternalBeeLangTestLanguage.g:11418:1: ( ( rule__BlockExpressionWithoutBrackets__ExpressionsAssignment_1_0 ) )
            // InternalBeeLangTestLanguage.g:11419:2: ( rule__BlockExpressionWithoutBrackets__ExpressionsAssignment_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBlockExpressionWithoutBracketsAccess().getExpressionsAssignment_1_0()); 
            }
            // InternalBeeLangTestLanguage.g:11420:2: ( rule__BlockExpressionWithoutBrackets__ExpressionsAssignment_1_0 )
            // InternalBeeLangTestLanguage.g:11420:3: rule__BlockExpressionWithoutBrackets__ExpressionsAssignment_1_0
            {
            pushFollow(FOLLOW_2);
            rule__BlockExpressionWithoutBrackets__ExpressionsAssignment_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBlockExpressionWithoutBracketsAccess().getExpressionsAssignment_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 819, rule__BlockExpressionWithoutBrackets__Group_1__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BlockExpressionWithoutBrackets__Group_1__0__Impl"


    // $ANTLR start "rule__BlockExpressionWithoutBrackets__Group_1__1"
    // InternalBeeLangTestLanguage.g:11428:1: rule__BlockExpressionWithoutBrackets__Group_1__1 : rule__BlockExpressionWithoutBrackets__Group_1__1__Impl ;
    public final void rule__BlockExpressionWithoutBrackets__Group_1__1() throws RecognitionException {
        int rule__BlockExpressionWithoutBrackets__Group_1__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 820) ) { return ; }
            // InternalBeeLangTestLanguage.g:11432:1: ( rule__BlockExpressionWithoutBrackets__Group_1__1__Impl )
            // InternalBeeLangTestLanguage.g:11433:2: rule__BlockExpressionWithoutBrackets__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__BlockExpressionWithoutBrackets__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 820, rule__BlockExpressionWithoutBrackets__Group_1__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BlockExpressionWithoutBrackets__Group_1__1"


    // $ANTLR start "rule__BlockExpressionWithoutBrackets__Group_1__1__Impl"
    // InternalBeeLangTestLanguage.g:11439:1: rule__BlockExpressionWithoutBrackets__Group_1__1__Impl : ( ';' ) ;
    public final void rule__BlockExpressionWithoutBrackets__Group_1__1__Impl() throws RecognitionException {
        int rule__BlockExpressionWithoutBrackets__Group_1__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 821) ) { return ; }
            // InternalBeeLangTestLanguage.g:11443:1: ( ( ';' ) )
            // InternalBeeLangTestLanguage.g:11444:1: ( ';' )
            {
            // InternalBeeLangTestLanguage.g:11444:1: ( ';' )
            // InternalBeeLangTestLanguage.g:11445:2: ';'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBlockExpressionWithoutBracketsAccess().getSemicolonKeyword_1_1()); 
            }
            match(input,50,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBlockExpressionWithoutBracketsAccess().getSemicolonKeyword_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 821, rule__BlockExpressionWithoutBrackets__Group_1__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BlockExpressionWithoutBrackets__Group_1__1__Impl"


    // $ANTLR start "rule__ParanthesizedExpression__Group__0"
    // InternalBeeLangTestLanguage.g:11455:1: rule__ParanthesizedExpression__Group__0 : rule__ParanthesizedExpression__Group__0__Impl rule__ParanthesizedExpression__Group__1 ;
    public final void rule__ParanthesizedExpression__Group__0() throws RecognitionException {
        int rule__ParanthesizedExpression__Group__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 822) ) { return ; }
            // InternalBeeLangTestLanguage.g:11459:1: ( rule__ParanthesizedExpression__Group__0__Impl rule__ParanthesizedExpression__Group__1 )
            // InternalBeeLangTestLanguage.g:11460:2: rule__ParanthesizedExpression__Group__0__Impl rule__ParanthesizedExpression__Group__1
            {
            pushFollow(FOLLOW_19);
            rule__ParanthesizedExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ParanthesizedExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 822, rule__ParanthesizedExpression__Group__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParanthesizedExpression__Group__0"


    // $ANTLR start "rule__ParanthesizedExpression__Group__0__Impl"
    // InternalBeeLangTestLanguage.g:11467:1: rule__ParanthesizedExpression__Group__0__Impl : ( '(' ) ;
    public final void rule__ParanthesizedExpression__Group__0__Impl() throws RecognitionException {
        int rule__ParanthesizedExpression__Group__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 823) ) { return ; }
            // InternalBeeLangTestLanguage.g:11471:1: ( ( '(' ) )
            // InternalBeeLangTestLanguage.g:11472:1: ( '(' )
            {
            // InternalBeeLangTestLanguage.g:11472:1: ( '(' )
            // InternalBeeLangTestLanguage.g:11473:2: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParanthesizedExpressionAccess().getLeftParenthesisKeyword_0()); 
            }
            match(input,60,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParanthesizedExpressionAccess().getLeftParenthesisKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 823, rule__ParanthesizedExpression__Group__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParanthesizedExpression__Group__0__Impl"


    // $ANTLR start "rule__ParanthesizedExpression__Group__1"
    // InternalBeeLangTestLanguage.g:11482:1: rule__ParanthesizedExpression__Group__1 : rule__ParanthesizedExpression__Group__1__Impl rule__ParanthesizedExpression__Group__2 ;
    public final void rule__ParanthesizedExpression__Group__1() throws RecognitionException {
        int rule__ParanthesizedExpression__Group__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 824) ) { return ; }
            // InternalBeeLangTestLanguage.g:11486:1: ( rule__ParanthesizedExpression__Group__1__Impl rule__ParanthesizedExpression__Group__2 )
            // InternalBeeLangTestLanguage.g:11487:2: rule__ParanthesizedExpression__Group__1__Impl rule__ParanthesizedExpression__Group__2
            {
            pushFollow(FOLLOW_75);
            rule__ParanthesizedExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ParanthesizedExpression__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 824, rule__ParanthesizedExpression__Group__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParanthesizedExpression__Group__1"


    // $ANTLR start "rule__ParanthesizedExpression__Group__1__Impl"
    // InternalBeeLangTestLanguage.g:11494:1: rule__ParanthesizedExpression__Group__1__Impl : ( ruleExpression ) ;
    public final void rule__ParanthesizedExpression__Group__1__Impl() throws RecognitionException {
        int rule__ParanthesizedExpression__Group__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 825) ) { return ; }
            // InternalBeeLangTestLanguage.g:11498:1: ( ( ruleExpression ) )
            // InternalBeeLangTestLanguage.g:11499:1: ( ruleExpression )
            {
            // InternalBeeLangTestLanguage.g:11499:1: ( ruleExpression )
            // InternalBeeLangTestLanguage.g:11500:2: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParanthesizedExpressionAccess().getExpressionParserRuleCall_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParanthesizedExpressionAccess().getExpressionParserRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 825, rule__ParanthesizedExpression__Group__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParanthesizedExpression__Group__1__Impl"


    // $ANTLR start "rule__ParanthesizedExpression__Group__2"
    // InternalBeeLangTestLanguage.g:11509:1: rule__ParanthesizedExpression__Group__2 : rule__ParanthesizedExpression__Group__2__Impl ;
    public final void rule__ParanthesizedExpression__Group__2() throws RecognitionException {
        int rule__ParanthesizedExpression__Group__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 826) ) { return ; }
            // InternalBeeLangTestLanguage.g:11513:1: ( rule__ParanthesizedExpression__Group__2__Impl )
            // InternalBeeLangTestLanguage.g:11514:2: rule__ParanthesizedExpression__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ParanthesizedExpression__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 826, rule__ParanthesizedExpression__Group__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParanthesizedExpression__Group__2"


    // $ANTLR start "rule__ParanthesizedExpression__Group__2__Impl"
    // InternalBeeLangTestLanguage.g:11520:1: rule__ParanthesizedExpression__Group__2__Impl : ( ')' ) ;
    public final void rule__ParanthesizedExpression__Group__2__Impl() throws RecognitionException {
        int rule__ParanthesizedExpression__Group__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 827) ) { return ; }
            // InternalBeeLangTestLanguage.g:11524:1: ( ( ')' ) )
            // InternalBeeLangTestLanguage.g:11525:1: ( ')' )
            {
            // InternalBeeLangTestLanguage.g:11525:1: ( ')' )
            // InternalBeeLangTestLanguage.g:11526:2: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParanthesizedExpressionAccess().getRightParenthesisKeyword_2()); 
            }
            match(input,61,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParanthesizedExpressionAccess().getRightParenthesisKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 827, rule__ParanthesizedExpression__Group__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParanthesizedExpression__Group__2__Impl"


    // $ANTLR start "rule__QID__Group__0"
    // InternalBeeLangTestLanguage.g:11536:1: rule__QID__Group__0 : rule__QID__Group__0__Impl rule__QID__Group__1 ;
    public final void rule__QID__Group__0() throws RecognitionException {
        int rule__QID__Group__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 828) ) { return ; }
            // InternalBeeLangTestLanguage.g:11540:1: ( rule__QID__Group__0__Impl rule__QID__Group__1 )
            // InternalBeeLangTestLanguage.g:11541:2: rule__QID__Group__0__Impl rule__QID__Group__1
            {
            pushFollow(FOLLOW_76);
            rule__QID__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__QID__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 828, rule__QID__Group__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QID__Group__0"


    // $ANTLR start "rule__QID__Group__0__Impl"
    // InternalBeeLangTestLanguage.g:11548:1: rule__QID__Group__0__Impl : ( RULE_ID ) ;
    public final void rule__QID__Group__0__Impl() throws RecognitionException {
        int rule__QID__Group__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 829) ) { return ; }
            // InternalBeeLangTestLanguage.g:11552:1: ( ( RULE_ID ) )
            // InternalBeeLangTestLanguage.g:11553:1: ( RULE_ID )
            {
            // InternalBeeLangTestLanguage.g:11553:1: ( RULE_ID )
            // InternalBeeLangTestLanguage.g:11554:2: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQIDAccess().getIDTerminalRuleCall_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getQIDAccess().getIDTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 829, rule__QID__Group__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QID__Group__0__Impl"


    // $ANTLR start "rule__QID__Group__1"
    // InternalBeeLangTestLanguage.g:11563:1: rule__QID__Group__1 : rule__QID__Group__1__Impl rule__QID__Group__2 ;
    public final void rule__QID__Group__1() throws RecognitionException {
        int rule__QID__Group__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 830) ) { return ; }
            // InternalBeeLangTestLanguage.g:11567:1: ( rule__QID__Group__1__Impl rule__QID__Group__2 )
            // InternalBeeLangTestLanguage.g:11568:2: rule__QID__Group__1__Impl rule__QID__Group__2
            {
            pushFollow(FOLLOW_76);
            rule__QID__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__QID__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 830, rule__QID__Group__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QID__Group__1"


    // $ANTLR start "rule__QID__Group__1__Impl"
    // InternalBeeLangTestLanguage.g:11575:1: rule__QID__Group__1__Impl : ( ( rule__QID__Alternatives_1 )* ) ;
    public final void rule__QID__Group__1__Impl() throws RecognitionException {
        int rule__QID__Group__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 831) ) { return ; }
            // InternalBeeLangTestLanguage.g:11579:1: ( ( ( rule__QID__Alternatives_1 )* ) )
            // InternalBeeLangTestLanguage.g:11580:1: ( ( rule__QID__Alternatives_1 )* )
            {
            // InternalBeeLangTestLanguage.g:11580:1: ( ( rule__QID__Alternatives_1 )* )
            // InternalBeeLangTestLanguage.g:11581:2: ( rule__QID__Alternatives_1 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQIDAccess().getAlternatives_1()); 
            }
            // InternalBeeLangTestLanguage.g:11582:2: ( rule__QID__Alternatives_1 )*
            loop91:
            do {
                int alt91=2;
                int LA91_0 = input.LA(1);

                if ( ((LA91_0>=RULE_INT && LA91_0<=RULE_ID)) ) {
                    alt91=1;
                }


                switch (alt91) {
            	case 1 :
            	    // InternalBeeLangTestLanguage.g:11582:3: rule__QID__Alternatives_1
            	    {
            	    pushFollow(FOLLOW_77);
            	    rule__QID__Alternatives_1();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop91;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getQIDAccess().getAlternatives_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 831, rule__QID__Group__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QID__Group__1__Impl"


    // $ANTLR start "rule__QID__Group__2"
    // InternalBeeLangTestLanguage.g:11590:1: rule__QID__Group__2 : rule__QID__Group__2__Impl ;
    public final void rule__QID__Group__2() throws RecognitionException {
        int rule__QID__Group__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 832) ) { return ; }
            // InternalBeeLangTestLanguage.g:11594:1: ( rule__QID__Group__2__Impl )
            // InternalBeeLangTestLanguage.g:11595:2: rule__QID__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__QID__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 832, rule__QID__Group__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QID__Group__2"


    // $ANTLR start "rule__QID__Group__2__Impl"
    // InternalBeeLangTestLanguage.g:11601:1: rule__QID__Group__2__Impl : ( ( rule__QID__Group_2__0 )* ) ;
    public final void rule__QID__Group__2__Impl() throws RecognitionException {
        int rule__QID__Group__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 833) ) { return ; }
            // InternalBeeLangTestLanguage.g:11605:1: ( ( ( rule__QID__Group_2__0 )* ) )
            // InternalBeeLangTestLanguage.g:11606:1: ( ( rule__QID__Group_2__0 )* )
            {
            // InternalBeeLangTestLanguage.g:11606:1: ( ( rule__QID__Group_2__0 )* )
            // InternalBeeLangTestLanguage.g:11607:2: ( rule__QID__Group_2__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQIDAccess().getGroup_2()); 
            }
            // InternalBeeLangTestLanguage.g:11608:2: ( rule__QID__Group_2__0 )*
            loop92:
            do {
                int alt92=2;
                int LA92_0 = input.LA(1);

                if ( (LA92_0==66) ) {
                    alt92=1;
                }


                switch (alt92) {
            	case 1 :
            	    // InternalBeeLangTestLanguage.g:11608:3: rule__QID__Group_2__0
            	    {
            	    pushFollow(FOLLOW_78);
            	    rule__QID__Group_2__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop92;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getQIDAccess().getGroup_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 833, rule__QID__Group__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QID__Group__2__Impl"


    // $ANTLR start "rule__QID__Group_2__0"
    // InternalBeeLangTestLanguage.g:11617:1: rule__QID__Group_2__0 : rule__QID__Group_2__0__Impl rule__QID__Group_2__1 ;
    public final void rule__QID__Group_2__0() throws RecognitionException {
        int rule__QID__Group_2__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 834) ) { return ; }
            // InternalBeeLangTestLanguage.g:11621:1: ( rule__QID__Group_2__0__Impl rule__QID__Group_2__1 )
            // InternalBeeLangTestLanguage.g:11622:2: rule__QID__Group_2__0__Impl rule__QID__Group_2__1
            {
            pushFollow(FOLLOW_9);
            rule__QID__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__QID__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 834, rule__QID__Group_2__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QID__Group_2__0"


    // $ANTLR start "rule__QID__Group_2__0__Impl"
    // InternalBeeLangTestLanguage.g:11629:1: rule__QID__Group_2__0__Impl : ( '.' ) ;
    public final void rule__QID__Group_2__0__Impl() throws RecognitionException {
        int rule__QID__Group_2__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 835) ) { return ; }
            // InternalBeeLangTestLanguage.g:11633:1: ( ( '.' ) )
            // InternalBeeLangTestLanguage.g:11634:1: ( '.' )
            {
            // InternalBeeLangTestLanguage.g:11634:1: ( '.' )
            // InternalBeeLangTestLanguage.g:11635:2: '.'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQIDAccess().getFullStopKeyword_2_0()); 
            }
            match(input,66,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getQIDAccess().getFullStopKeyword_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 835, rule__QID__Group_2__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QID__Group_2__0__Impl"


    // $ANTLR start "rule__QID__Group_2__1"
    // InternalBeeLangTestLanguage.g:11644:1: rule__QID__Group_2__1 : rule__QID__Group_2__1__Impl rule__QID__Group_2__2 ;
    public final void rule__QID__Group_2__1() throws RecognitionException {
        int rule__QID__Group_2__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 836) ) { return ; }
            // InternalBeeLangTestLanguage.g:11648:1: ( rule__QID__Group_2__1__Impl rule__QID__Group_2__2 )
            // InternalBeeLangTestLanguage.g:11649:2: rule__QID__Group_2__1__Impl rule__QID__Group_2__2
            {
            pushFollow(FOLLOW_79);
            rule__QID__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__QID__Group_2__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 836, rule__QID__Group_2__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QID__Group_2__1"


    // $ANTLR start "rule__QID__Group_2__1__Impl"
    // InternalBeeLangTestLanguage.g:11656:1: rule__QID__Group_2__1__Impl : ( RULE_ID ) ;
    public final void rule__QID__Group_2__1__Impl() throws RecognitionException {
        int rule__QID__Group_2__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 837) ) { return ; }
            // InternalBeeLangTestLanguage.g:11660:1: ( ( RULE_ID ) )
            // InternalBeeLangTestLanguage.g:11661:1: ( RULE_ID )
            {
            // InternalBeeLangTestLanguage.g:11661:1: ( RULE_ID )
            // InternalBeeLangTestLanguage.g:11662:2: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQIDAccess().getIDTerminalRuleCall_2_1()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getQIDAccess().getIDTerminalRuleCall_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 837, rule__QID__Group_2__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QID__Group_2__1__Impl"


    // $ANTLR start "rule__QID__Group_2__2"
    // InternalBeeLangTestLanguage.g:11671:1: rule__QID__Group_2__2 : rule__QID__Group_2__2__Impl ;
    public final void rule__QID__Group_2__2() throws RecognitionException {
        int rule__QID__Group_2__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 838) ) { return ; }
            // InternalBeeLangTestLanguage.g:11675:1: ( rule__QID__Group_2__2__Impl )
            // InternalBeeLangTestLanguage.g:11676:2: rule__QID__Group_2__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__QID__Group_2__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 838, rule__QID__Group_2__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QID__Group_2__2"


    // $ANTLR start "rule__QID__Group_2__2__Impl"
    // InternalBeeLangTestLanguage.g:11682:1: rule__QID__Group_2__2__Impl : ( ( rule__QID__Alternatives_2_2 )* ) ;
    public final void rule__QID__Group_2__2__Impl() throws RecognitionException {
        int rule__QID__Group_2__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 839) ) { return ; }
            // InternalBeeLangTestLanguage.g:11686:1: ( ( ( rule__QID__Alternatives_2_2 )* ) )
            // InternalBeeLangTestLanguage.g:11687:1: ( ( rule__QID__Alternatives_2_2 )* )
            {
            // InternalBeeLangTestLanguage.g:11687:1: ( ( rule__QID__Alternatives_2_2 )* )
            // InternalBeeLangTestLanguage.g:11688:2: ( rule__QID__Alternatives_2_2 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQIDAccess().getAlternatives_2_2()); 
            }
            // InternalBeeLangTestLanguage.g:11689:2: ( rule__QID__Alternatives_2_2 )*
            loop93:
            do {
                int alt93=2;
                int LA93_0 = input.LA(1);

                if ( ((LA93_0>=RULE_INT && LA93_0<=RULE_ID)) ) {
                    alt93=1;
                }


                switch (alt93) {
            	case 1 :
            	    // InternalBeeLangTestLanguage.g:11689:3: rule__QID__Alternatives_2_2
            	    {
            	    pushFollow(FOLLOW_77);
            	    rule__QID__Alternatives_2_2();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop93;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getQIDAccess().getAlternatives_2_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 839, rule__QID__Group_2__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QID__Group_2__2__Impl"


    // $ANTLR start "rule__Unit__UnorderedGroup_7"
    // InternalBeeLangTestLanguage.g:11698:1: rule__Unit__UnorderedGroup_7 : ( rule__Unit__UnorderedGroup_7__0 )? ;
    public final void rule__Unit__UnorderedGroup_7() throws RecognitionException {
        int rule__Unit__UnorderedGroup_7_StartIndex = input.index();

        		int stackSize = keepStackSize();
        		getUnorderedGroupHelper().enter(grammarAccess.getUnitAccess().getUnorderedGroup_7());
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 840) ) { return ; }
            // InternalBeeLangTestLanguage.g:11703:1: ( ( rule__Unit__UnorderedGroup_7__0 )? )
            // InternalBeeLangTestLanguage.g:11704:2: ( rule__Unit__UnorderedGroup_7__0 )?
            {
            // InternalBeeLangTestLanguage.g:11704:2: ( rule__Unit__UnorderedGroup_7__0 )?
            int alt94=2;
            alt94 = dfa94.predict(input);
            switch (alt94) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:0:0: rule__Unit__UnorderedGroup_7__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Unit__UnorderedGroup_7__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 840, rule__Unit__UnorderedGroup_7_StartIndex); }

            	getUnorderedGroupHelper().leave(grammarAccess.getUnitAccess().getUnorderedGroup_7());
            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__UnorderedGroup_7"


    // $ANTLR start "rule__Unit__UnorderedGroup_7__Impl"
    // InternalBeeLangTestLanguage.g:11712:1: rule__Unit__UnorderedGroup_7__Impl : ( ({...}? => ( ( ( rule__Unit__Group_7_0__0 ) ) ) ) | ({...}? => ( ( ( rule__Unit__Group_7_1__0 ) ) ) ) | ({...}? => ( ( ( ( rule__Unit__Group_7_2__0 ) ) ( ( ( rule__Unit__Group_7_2__0 )=> rule__Unit__Group_7_2__0 )* ) ) ) ) | ({...}? => ( ( ( ( rule__Unit__Group_7_3__0 ) ) ( ( ( rule__Unit__Group_7_3__0 )=> rule__Unit__Group_7_3__0 )* ) ) ) ) | ({...}? => ( ( ( ( rule__Unit__Group_7_4__0 ) ) ( ( ( rule__Unit__Group_7_4__0 )=> rule__Unit__Group_7_4__0 )* ) ) ) ) | ({...}? => ( ( ( ( rule__Unit__FunctionsAssignment_7_5 ) ) ( ( ( rule__Unit__FunctionsAssignment_7_5 )=> rule__Unit__FunctionsAssignment_7_5 )* ) ) ) ) ) ;
    public final void rule__Unit__UnorderedGroup_7__Impl() throws RecognitionException {
        int rule__Unit__UnorderedGroup_7__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        		boolean selected = false;
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 841) ) { return ; }
            // InternalBeeLangTestLanguage.g:11717:1: ( ( ({...}? => ( ( ( rule__Unit__Group_7_0__0 ) ) ) ) | ({...}? => ( ( ( rule__Unit__Group_7_1__0 ) ) ) ) | ({...}? => ( ( ( ( rule__Unit__Group_7_2__0 ) ) ( ( ( rule__Unit__Group_7_2__0 )=> rule__Unit__Group_7_2__0 )* ) ) ) ) | ({...}? => ( ( ( ( rule__Unit__Group_7_3__0 ) ) ( ( ( rule__Unit__Group_7_3__0 )=> rule__Unit__Group_7_3__0 )* ) ) ) ) | ({...}? => ( ( ( ( rule__Unit__Group_7_4__0 ) ) ( ( ( rule__Unit__Group_7_4__0 )=> rule__Unit__Group_7_4__0 )* ) ) ) ) | ({...}? => ( ( ( ( rule__Unit__FunctionsAssignment_7_5 ) ) ( ( ( rule__Unit__FunctionsAssignment_7_5 )=> rule__Unit__FunctionsAssignment_7_5 )* ) ) ) ) ) )
            // InternalBeeLangTestLanguage.g:11718:3: ( ({...}? => ( ( ( rule__Unit__Group_7_0__0 ) ) ) ) | ({...}? => ( ( ( rule__Unit__Group_7_1__0 ) ) ) ) | ({...}? => ( ( ( ( rule__Unit__Group_7_2__0 ) ) ( ( ( rule__Unit__Group_7_2__0 )=> rule__Unit__Group_7_2__0 )* ) ) ) ) | ({...}? => ( ( ( ( rule__Unit__Group_7_3__0 ) ) ( ( ( rule__Unit__Group_7_3__0 )=> rule__Unit__Group_7_3__0 )* ) ) ) ) | ({...}? => ( ( ( ( rule__Unit__Group_7_4__0 ) ) ( ( ( rule__Unit__Group_7_4__0 )=> rule__Unit__Group_7_4__0 )* ) ) ) ) | ({...}? => ( ( ( ( rule__Unit__FunctionsAssignment_7_5 ) ) ( ( ( rule__Unit__FunctionsAssignment_7_5 )=> rule__Unit__FunctionsAssignment_7_5 )* ) ) ) ) )
            {
            // InternalBeeLangTestLanguage.g:11718:3: ( ({...}? => ( ( ( rule__Unit__Group_7_0__0 ) ) ) ) | ({...}? => ( ( ( rule__Unit__Group_7_1__0 ) ) ) ) | ({...}? => ( ( ( ( rule__Unit__Group_7_2__0 ) ) ( ( ( rule__Unit__Group_7_2__0 )=> rule__Unit__Group_7_2__0 )* ) ) ) ) | ({...}? => ( ( ( ( rule__Unit__Group_7_3__0 ) ) ( ( ( rule__Unit__Group_7_3__0 )=> rule__Unit__Group_7_3__0 )* ) ) ) ) | ({...}? => ( ( ( ( rule__Unit__Group_7_4__0 ) ) ( ( ( rule__Unit__Group_7_4__0 )=> rule__Unit__Group_7_4__0 )* ) ) ) ) | ({...}? => ( ( ( ( rule__Unit__FunctionsAssignment_7_5 ) ) ( ( ( rule__Unit__FunctionsAssignment_7_5 )=> rule__Unit__FunctionsAssignment_7_5 )* ) ) ) ) )
            int alt99=6;
            int LA99_0 = input.LA(1);

            if ( LA99_0 == 40 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 0) ) {
                alt99=1;
            }
            else if ( LA99_0 == 39 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 1) ) {
                alt99=2;
            }
            else if ( LA99_0 == 51 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 2) ) {
                alt99=3;
            }
            else if ( (LA99_0==52) ) {
                int LA99_4 = input.LA(2);

                if ( LA99_4 == 49 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 3) ) {
                    alt99=4;
                }
                else if ( LA99_4 == 53 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 4) ) {
                    alt99=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 99, 4, input);

                    throw nvae;
                }
            }
            else if ( ( LA99_0 >= RULE_ID && LA99_0 <= RULE_DOCUMENTATION || LA99_0 == 59 || LA99_0 == 74 ) && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 5) ) {
                alt99=6;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 99, 0, input);

                throw nvae;
            }
            switch (alt99) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:11719:3: ({...}? => ( ( ( rule__Unit__Group_7_0__0 ) ) ) )
                    {
                    // InternalBeeLangTestLanguage.g:11719:3: ({...}? => ( ( ( rule__Unit__Group_7_0__0 ) ) ) )
                    // InternalBeeLangTestLanguage.g:11720:4: {...}? => ( ( ( rule__Unit__Group_7_0__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 0) ) {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        throw new FailedPredicateException(input, "rule__Unit__UnorderedGroup_7__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 0)");
                    }
                    // InternalBeeLangTestLanguage.g:11720:100: ( ( ( rule__Unit__Group_7_0__0 ) ) )
                    // InternalBeeLangTestLanguage.g:11721:5: ( ( rule__Unit__Group_7_0__0 ) )
                    {
                    getUnorderedGroupHelper().select(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 0);
                    selected = true;
                    // InternalBeeLangTestLanguage.g:11727:5: ( ( rule__Unit__Group_7_0__0 ) )
                    // InternalBeeLangTestLanguage.g:11728:6: ( rule__Unit__Group_7_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnitAccess().getGroup_7_0()); 
                    }
                    // InternalBeeLangTestLanguage.g:11729:6: ( rule__Unit__Group_7_0__0 )
                    // InternalBeeLangTestLanguage.g:11729:7: rule__Unit__Group_7_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Unit__Group_7_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnitAccess().getGroup_7_0()); 
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalBeeLangTestLanguage.g:11734:3: ({...}? => ( ( ( rule__Unit__Group_7_1__0 ) ) ) )
                    {
                    // InternalBeeLangTestLanguage.g:11734:3: ({...}? => ( ( ( rule__Unit__Group_7_1__0 ) ) ) )
                    // InternalBeeLangTestLanguage.g:11735:4: {...}? => ( ( ( rule__Unit__Group_7_1__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 1) ) {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        throw new FailedPredicateException(input, "rule__Unit__UnorderedGroup_7__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 1)");
                    }
                    // InternalBeeLangTestLanguage.g:11735:100: ( ( ( rule__Unit__Group_7_1__0 ) ) )
                    // InternalBeeLangTestLanguage.g:11736:5: ( ( rule__Unit__Group_7_1__0 ) )
                    {
                    getUnorderedGroupHelper().select(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 1);
                    selected = true;
                    // InternalBeeLangTestLanguage.g:11742:5: ( ( rule__Unit__Group_7_1__0 ) )
                    // InternalBeeLangTestLanguage.g:11743:6: ( rule__Unit__Group_7_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnitAccess().getGroup_7_1()); 
                    }
                    // InternalBeeLangTestLanguage.g:11744:6: ( rule__Unit__Group_7_1__0 )
                    // InternalBeeLangTestLanguage.g:11744:7: rule__Unit__Group_7_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Unit__Group_7_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnitAccess().getGroup_7_1()); 
                    }

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalBeeLangTestLanguage.g:11749:3: ({...}? => ( ( ( ( rule__Unit__Group_7_2__0 ) ) ( ( ( rule__Unit__Group_7_2__0 )=> rule__Unit__Group_7_2__0 )* ) ) ) )
                    {
                    // InternalBeeLangTestLanguage.g:11749:3: ({...}? => ( ( ( ( rule__Unit__Group_7_2__0 ) ) ( ( ( rule__Unit__Group_7_2__0 )=> rule__Unit__Group_7_2__0 )* ) ) ) )
                    // InternalBeeLangTestLanguage.g:11750:4: {...}? => ( ( ( ( rule__Unit__Group_7_2__0 ) ) ( ( ( rule__Unit__Group_7_2__0 )=> rule__Unit__Group_7_2__0 )* ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 2) ) {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        throw new FailedPredicateException(input, "rule__Unit__UnorderedGroup_7__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 2)");
                    }
                    // InternalBeeLangTestLanguage.g:11750:100: ( ( ( ( rule__Unit__Group_7_2__0 ) ) ( ( ( rule__Unit__Group_7_2__0 )=> rule__Unit__Group_7_2__0 )* ) ) )
                    // InternalBeeLangTestLanguage.g:11751:5: ( ( ( rule__Unit__Group_7_2__0 ) ) ( ( ( rule__Unit__Group_7_2__0 )=> rule__Unit__Group_7_2__0 )* ) )
                    {
                    getUnorderedGroupHelper().select(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 2);
                    selected = true;
                    // InternalBeeLangTestLanguage.g:11757:5: ( ( ( rule__Unit__Group_7_2__0 ) ) ( ( ( rule__Unit__Group_7_2__0 )=> rule__Unit__Group_7_2__0 )* ) )
                    // InternalBeeLangTestLanguage.g:11758:6: ( ( rule__Unit__Group_7_2__0 ) ) ( ( ( rule__Unit__Group_7_2__0 )=> rule__Unit__Group_7_2__0 )* )
                    {
                    // InternalBeeLangTestLanguage.g:11758:6: ( ( rule__Unit__Group_7_2__0 ) )
                    // InternalBeeLangTestLanguage.g:11759:7: ( rule__Unit__Group_7_2__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnitAccess().getGroup_7_2()); 
                    }
                    // InternalBeeLangTestLanguage.g:11760:7: ( rule__Unit__Group_7_2__0 )
                    // InternalBeeLangTestLanguage.g:11760:8: rule__Unit__Group_7_2__0
                    {
                    pushFollow(FOLLOW_80);
                    rule__Unit__Group_7_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnitAccess().getGroup_7_2()); 
                    }

                    }

                    // InternalBeeLangTestLanguage.g:11763:6: ( ( ( rule__Unit__Group_7_2__0 )=> rule__Unit__Group_7_2__0 )* )
                    // InternalBeeLangTestLanguage.g:11764:7: ( ( rule__Unit__Group_7_2__0 )=> rule__Unit__Group_7_2__0 )*
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnitAccess().getGroup_7_2()); 
                    }
                    // InternalBeeLangTestLanguage.g:11765:7: ( ( rule__Unit__Group_7_2__0 )=> rule__Unit__Group_7_2__0 )*
                    loop95:
                    do {
                        int alt95=2;
                        alt95 = dfa95.predict(input);
                        switch (alt95) {
                    	case 1 :
                    	    // InternalBeeLangTestLanguage.g:11765:8: ( rule__Unit__Group_7_2__0 )=> rule__Unit__Group_7_2__0
                    	    {
                    	    pushFollow(FOLLOW_80);
                    	    rule__Unit__Group_7_2__0();

                    	    state._fsp--;
                    	    if (state.failed) return ;

                    	    }
                    	    break;

                    	default :
                    	    break loop95;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnitAccess().getGroup_7_2()); 
                    }

                    }


                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalBeeLangTestLanguage.g:11771:3: ({...}? => ( ( ( ( rule__Unit__Group_7_3__0 ) ) ( ( ( rule__Unit__Group_7_3__0 )=> rule__Unit__Group_7_3__0 )* ) ) ) )
                    {
                    // InternalBeeLangTestLanguage.g:11771:3: ({...}? => ( ( ( ( rule__Unit__Group_7_3__0 ) ) ( ( ( rule__Unit__Group_7_3__0 )=> rule__Unit__Group_7_3__0 )* ) ) ) )
                    // InternalBeeLangTestLanguage.g:11772:4: {...}? => ( ( ( ( rule__Unit__Group_7_3__0 ) ) ( ( ( rule__Unit__Group_7_3__0 )=> rule__Unit__Group_7_3__0 )* ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 3) ) {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        throw new FailedPredicateException(input, "rule__Unit__UnorderedGroup_7__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 3)");
                    }
                    // InternalBeeLangTestLanguage.g:11772:100: ( ( ( ( rule__Unit__Group_7_3__0 ) ) ( ( ( rule__Unit__Group_7_3__0 )=> rule__Unit__Group_7_3__0 )* ) ) )
                    // InternalBeeLangTestLanguage.g:11773:5: ( ( ( rule__Unit__Group_7_3__0 ) ) ( ( ( rule__Unit__Group_7_3__0 )=> rule__Unit__Group_7_3__0 )* ) )
                    {
                    getUnorderedGroupHelper().select(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 3);
                    selected = true;
                    // InternalBeeLangTestLanguage.g:11779:5: ( ( ( rule__Unit__Group_7_3__0 ) ) ( ( ( rule__Unit__Group_7_3__0 )=> rule__Unit__Group_7_3__0 )* ) )
                    // InternalBeeLangTestLanguage.g:11780:6: ( ( rule__Unit__Group_7_3__0 ) ) ( ( ( rule__Unit__Group_7_3__0 )=> rule__Unit__Group_7_3__0 )* )
                    {
                    // InternalBeeLangTestLanguage.g:11780:6: ( ( rule__Unit__Group_7_3__0 ) )
                    // InternalBeeLangTestLanguage.g:11781:7: ( rule__Unit__Group_7_3__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnitAccess().getGroup_7_3()); 
                    }
                    // InternalBeeLangTestLanguage.g:11782:7: ( rule__Unit__Group_7_3__0 )
                    // InternalBeeLangTestLanguage.g:11782:8: rule__Unit__Group_7_3__0
                    {
                    pushFollow(FOLLOW_81);
                    rule__Unit__Group_7_3__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnitAccess().getGroup_7_3()); 
                    }

                    }

                    // InternalBeeLangTestLanguage.g:11785:6: ( ( ( rule__Unit__Group_7_3__0 )=> rule__Unit__Group_7_3__0 )* )
                    // InternalBeeLangTestLanguage.g:11786:7: ( ( rule__Unit__Group_7_3__0 )=> rule__Unit__Group_7_3__0 )*
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnitAccess().getGroup_7_3()); 
                    }
                    // InternalBeeLangTestLanguage.g:11787:7: ( ( rule__Unit__Group_7_3__0 )=> rule__Unit__Group_7_3__0 )*
                    loop96:
                    do {
                        int alt96=2;
                        alt96 = dfa96.predict(input);
                        switch (alt96) {
                    	case 1 :
                    	    // InternalBeeLangTestLanguage.g:11787:8: ( rule__Unit__Group_7_3__0 )=> rule__Unit__Group_7_3__0
                    	    {
                    	    pushFollow(FOLLOW_81);
                    	    rule__Unit__Group_7_3__0();

                    	    state._fsp--;
                    	    if (state.failed) return ;

                    	    }
                    	    break;

                    	default :
                    	    break loop96;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnitAccess().getGroup_7_3()); 
                    }

                    }


                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalBeeLangTestLanguage.g:11793:3: ({...}? => ( ( ( ( rule__Unit__Group_7_4__0 ) ) ( ( ( rule__Unit__Group_7_4__0 )=> rule__Unit__Group_7_4__0 )* ) ) ) )
                    {
                    // InternalBeeLangTestLanguage.g:11793:3: ({...}? => ( ( ( ( rule__Unit__Group_7_4__0 ) ) ( ( ( rule__Unit__Group_7_4__0 )=> rule__Unit__Group_7_4__0 )* ) ) ) )
                    // InternalBeeLangTestLanguage.g:11794:4: {...}? => ( ( ( ( rule__Unit__Group_7_4__0 ) ) ( ( ( rule__Unit__Group_7_4__0 )=> rule__Unit__Group_7_4__0 )* ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 4) ) {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        throw new FailedPredicateException(input, "rule__Unit__UnorderedGroup_7__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 4)");
                    }
                    // InternalBeeLangTestLanguage.g:11794:100: ( ( ( ( rule__Unit__Group_7_4__0 ) ) ( ( ( rule__Unit__Group_7_4__0 )=> rule__Unit__Group_7_4__0 )* ) ) )
                    // InternalBeeLangTestLanguage.g:11795:5: ( ( ( rule__Unit__Group_7_4__0 ) ) ( ( ( rule__Unit__Group_7_4__0 )=> rule__Unit__Group_7_4__0 )* ) )
                    {
                    getUnorderedGroupHelper().select(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 4);
                    selected = true;
                    // InternalBeeLangTestLanguage.g:11801:5: ( ( ( rule__Unit__Group_7_4__0 ) ) ( ( ( rule__Unit__Group_7_4__0 )=> rule__Unit__Group_7_4__0 )* ) )
                    // InternalBeeLangTestLanguage.g:11802:6: ( ( rule__Unit__Group_7_4__0 ) ) ( ( ( rule__Unit__Group_7_4__0 )=> rule__Unit__Group_7_4__0 )* )
                    {
                    // InternalBeeLangTestLanguage.g:11802:6: ( ( rule__Unit__Group_7_4__0 ) )
                    // InternalBeeLangTestLanguage.g:11803:7: ( rule__Unit__Group_7_4__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnitAccess().getGroup_7_4()); 
                    }
                    // InternalBeeLangTestLanguage.g:11804:7: ( rule__Unit__Group_7_4__0 )
                    // InternalBeeLangTestLanguage.g:11804:8: rule__Unit__Group_7_4__0
                    {
                    pushFollow(FOLLOW_81);
                    rule__Unit__Group_7_4__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnitAccess().getGroup_7_4()); 
                    }

                    }

                    // InternalBeeLangTestLanguage.g:11807:6: ( ( ( rule__Unit__Group_7_4__0 )=> rule__Unit__Group_7_4__0 )* )
                    // InternalBeeLangTestLanguage.g:11808:7: ( ( rule__Unit__Group_7_4__0 )=> rule__Unit__Group_7_4__0 )*
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnitAccess().getGroup_7_4()); 
                    }
                    // InternalBeeLangTestLanguage.g:11809:7: ( ( rule__Unit__Group_7_4__0 )=> rule__Unit__Group_7_4__0 )*
                    loop97:
                    do {
                        int alt97=2;
                        alt97 = dfa97.predict(input);
                        switch (alt97) {
                    	case 1 :
                    	    // InternalBeeLangTestLanguage.g:11809:8: ( rule__Unit__Group_7_4__0 )=> rule__Unit__Group_7_4__0
                    	    {
                    	    pushFollow(FOLLOW_81);
                    	    rule__Unit__Group_7_4__0();

                    	    state._fsp--;
                    	    if (state.failed) return ;

                    	    }
                    	    break;

                    	default :
                    	    break loop97;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnitAccess().getGroup_7_4()); 
                    }

                    }


                    }


                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalBeeLangTestLanguage.g:11815:3: ({...}? => ( ( ( ( rule__Unit__FunctionsAssignment_7_5 ) ) ( ( ( rule__Unit__FunctionsAssignment_7_5 )=> rule__Unit__FunctionsAssignment_7_5 )* ) ) ) )
                    {
                    // InternalBeeLangTestLanguage.g:11815:3: ({...}? => ( ( ( ( rule__Unit__FunctionsAssignment_7_5 ) ) ( ( ( rule__Unit__FunctionsAssignment_7_5 )=> rule__Unit__FunctionsAssignment_7_5 )* ) ) ) )
                    // InternalBeeLangTestLanguage.g:11816:4: {...}? => ( ( ( ( rule__Unit__FunctionsAssignment_7_5 ) ) ( ( ( rule__Unit__FunctionsAssignment_7_5 )=> rule__Unit__FunctionsAssignment_7_5 )* ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 5) ) {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        throw new FailedPredicateException(input, "rule__Unit__UnorderedGroup_7__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 5)");
                    }
                    // InternalBeeLangTestLanguage.g:11816:100: ( ( ( ( rule__Unit__FunctionsAssignment_7_5 ) ) ( ( ( rule__Unit__FunctionsAssignment_7_5 )=> rule__Unit__FunctionsAssignment_7_5 )* ) ) )
                    // InternalBeeLangTestLanguage.g:11817:5: ( ( ( rule__Unit__FunctionsAssignment_7_5 ) ) ( ( ( rule__Unit__FunctionsAssignment_7_5 )=> rule__Unit__FunctionsAssignment_7_5 )* ) )
                    {
                    getUnorderedGroupHelper().select(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 5);
                    selected = true;
                    // InternalBeeLangTestLanguage.g:11823:5: ( ( ( rule__Unit__FunctionsAssignment_7_5 ) ) ( ( ( rule__Unit__FunctionsAssignment_7_5 )=> rule__Unit__FunctionsAssignment_7_5 )* ) )
                    // InternalBeeLangTestLanguage.g:11824:6: ( ( rule__Unit__FunctionsAssignment_7_5 ) ) ( ( ( rule__Unit__FunctionsAssignment_7_5 )=> rule__Unit__FunctionsAssignment_7_5 )* )
                    {
                    // InternalBeeLangTestLanguage.g:11824:6: ( ( rule__Unit__FunctionsAssignment_7_5 ) )
                    // InternalBeeLangTestLanguage.g:11825:7: ( rule__Unit__FunctionsAssignment_7_5 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnitAccess().getFunctionsAssignment_7_5()); 
                    }
                    // InternalBeeLangTestLanguage.g:11826:7: ( rule__Unit__FunctionsAssignment_7_5 )
                    // InternalBeeLangTestLanguage.g:11826:8: rule__Unit__FunctionsAssignment_7_5
                    {
                    pushFollow(FOLLOW_82);
                    rule__Unit__FunctionsAssignment_7_5();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnitAccess().getFunctionsAssignment_7_5()); 
                    }

                    }

                    // InternalBeeLangTestLanguage.g:11829:6: ( ( ( rule__Unit__FunctionsAssignment_7_5 )=> rule__Unit__FunctionsAssignment_7_5 )* )
                    // InternalBeeLangTestLanguage.g:11830:7: ( ( rule__Unit__FunctionsAssignment_7_5 )=> rule__Unit__FunctionsAssignment_7_5 )*
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnitAccess().getFunctionsAssignment_7_5()); 
                    }
                    // InternalBeeLangTestLanguage.g:11831:7: ( ( rule__Unit__FunctionsAssignment_7_5 )=> rule__Unit__FunctionsAssignment_7_5 )*
                    loop98:
                    do {
                        int alt98=2;
                        alt98 = dfa98.predict(input);
                        switch (alt98) {
                    	case 1 :
                    	    // InternalBeeLangTestLanguage.g:11831:8: ( rule__Unit__FunctionsAssignment_7_5 )=> rule__Unit__FunctionsAssignment_7_5
                    	    {
                    	    pushFollow(FOLLOW_82);
                    	    rule__Unit__FunctionsAssignment_7_5();

                    	    state._fsp--;
                    	    if (state.failed) return ;

                    	    }
                    	    break;

                    	default :
                    	    break loop98;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnitAccess().getFunctionsAssignment_7_5()); 
                    }

                    }


                    }


                    }


                    }


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 841, rule__Unit__UnorderedGroup_7__Impl_StartIndex); }

            	if (selected)
            		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getUnitAccess().getUnorderedGroup_7());
            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__UnorderedGroup_7__Impl"


    // $ANTLR start "rule__Unit__UnorderedGroup_7__0"
    // InternalBeeLangTestLanguage.g:11845:1: rule__Unit__UnorderedGroup_7__0 : rule__Unit__UnorderedGroup_7__Impl ( rule__Unit__UnorderedGroup_7__1 )? ;
    public final void rule__Unit__UnorderedGroup_7__0() throws RecognitionException {
        int rule__Unit__UnorderedGroup_7__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 842) ) { return ; }
            // InternalBeeLangTestLanguage.g:11849:1: ( rule__Unit__UnorderedGroup_7__Impl ( rule__Unit__UnorderedGroup_7__1 )? )
            // InternalBeeLangTestLanguage.g:11850:2: rule__Unit__UnorderedGroup_7__Impl ( rule__Unit__UnorderedGroup_7__1 )?
            {
            pushFollow(FOLLOW_82);
            rule__Unit__UnorderedGroup_7__Impl();

            state._fsp--;
            if (state.failed) return ;
            // InternalBeeLangTestLanguage.g:11851:2: ( rule__Unit__UnorderedGroup_7__1 )?
            int alt100=2;
            alt100 = dfa100.predict(input);
            switch (alt100) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:0:0: rule__Unit__UnorderedGroup_7__1
                    {
                    pushFollow(FOLLOW_2);
                    rule__Unit__UnorderedGroup_7__1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 842, rule__Unit__UnorderedGroup_7__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__UnorderedGroup_7__0"


    // $ANTLR start "rule__Unit__UnorderedGroup_7__1"
    // InternalBeeLangTestLanguage.g:11857:1: rule__Unit__UnorderedGroup_7__1 : rule__Unit__UnorderedGroup_7__Impl ( rule__Unit__UnorderedGroup_7__2 )? ;
    public final void rule__Unit__UnorderedGroup_7__1() throws RecognitionException {
        int rule__Unit__UnorderedGroup_7__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 843) ) { return ; }
            // InternalBeeLangTestLanguage.g:11861:1: ( rule__Unit__UnorderedGroup_7__Impl ( rule__Unit__UnorderedGroup_7__2 )? )
            // InternalBeeLangTestLanguage.g:11862:2: rule__Unit__UnorderedGroup_7__Impl ( rule__Unit__UnorderedGroup_7__2 )?
            {
            pushFollow(FOLLOW_82);
            rule__Unit__UnorderedGroup_7__Impl();

            state._fsp--;
            if (state.failed) return ;
            // InternalBeeLangTestLanguage.g:11863:2: ( rule__Unit__UnorderedGroup_7__2 )?
            int alt101=2;
            alt101 = dfa101.predict(input);
            switch (alt101) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:0:0: rule__Unit__UnorderedGroup_7__2
                    {
                    pushFollow(FOLLOW_2);
                    rule__Unit__UnorderedGroup_7__2();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 843, rule__Unit__UnorderedGroup_7__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__UnorderedGroup_7__1"


    // $ANTLR start "rule__Unit__UnorderedGroup_7__2"
    // InternalBeeLangTestLanguage.g:11869:1: rule__Unit__UnorderedGroup_7__2 : rule__Unit__UnorderedGroup_7__Impl ( rule__Unit__UnorderedGroup_7__3 )? ;
    public final void rule__Unit__UnorderedGroup_7__2() throws RecognitionException {
        int rule__Unit__UnorderedGroup_7__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 844) ) { return ; }
            // InternalBeeLangTestLanguage.g:11873:1: ( rule__Unit__UnorderedGroup_7__Impl ( rule__Unit__UnorderedGroup_7__3 )? )
            // InternalBeeLangTestLanguage.g:11874:2: rule__Unit__UnorderedGroup_7__Impl ( rule__Unit__UnorderedGroup_7__3 )?
            {
            pushFollow(FOLLOW_82);
            rule__Unit__UnorderedGroup_7__Impl();

            state._fsp--;
            if (state.failed) return ;
            // InternalBeeLangTestLanguage.g:11875:2: ( rule__Unit__UnorderedGroup_7__3 )?
            int alt102=2;
            alt102 = dfa102.predict(input);
            switch (alt102) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:0:0: rule__Unit__UnorderedGroup_7__3
                    {
                    pushFollow(FOLLOW_2);
                    rule__Unit__UnorderedGroup_7__3();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 844, rule__Unit__UnorderedGroup_7__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__UnorderedGroup_7__2"


    // $ANTLR start "rule__Unit__UnorderedGroup_7__3"
    // InternalBeeLangTestLanguage.g:11881:1: rule__Unit__UnorderedGroup_7__3 : rule__Unit__UnorderedGroup_7__Impl ( rule__Unit__UnorderedGroup_7__4 )? ;
    public final void rule__Unit__UnorderedGroup_7__3() throws RecognitionException {
        int rule__Unit__UnorderedGroup_7__3_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 845) ) { return ; }
            // InternalBeeLangTestLanguage.g:11885:1: ( rule__Unit__UnorderedGroup_7__Impl ( rule__Unit__UnorderedGroup_7__4 )? )
            // InternalBeeLangTestLanguage.g:11886:2: rule__Unit__UnorderedGroup_7__Impl ( rule__Unit__UnorderedGroup_7__4 )?
            {
            pushFollow(FOLLOW_82);
            rule__Unit__UnorderedGroup_7__Impl();

            state._fsp--;
            if (state.failed) return ;
            // InternalBeeLangTestLanguage.g:11887:2: ( rule__Unit__UnorderedGroup_7__4 )?
            int alt103=2;
            alt103 = dfa103.predict(input);
            switch (alt103) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:0:0: rule__Unit__UnorderedGroup_7__4
                    {
                    pushFollow(FOLLOW_2);
                    rule__Unit__UnorderedGroup_7__4();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 845, rule__Unit__UnorderedGroup_7__3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__UnorderedGroup_7__3"


    // $ANTLR start "rule__Unit__UnorderedGroup_7__4"
    // InternalBeeLangTestLanguage.g:11893:1: rule__Unit__UnorderedGroup_7__4 : rule__Unit__UnorderedGroup_7__Impl ( rule__Unit__UnorderedGroup_7__5 )? ;
    public final void rule__Unit__UnorderedGroup_7__4() throws RecognitionException {
        int rule__Unit__UnorderedGroup_7__4_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 846) ) { return ; }
            // InternalBeeLangTestLanguage.g:11897:1: ( rule__Unit__UnorderedGroup_7__Impl ( rule__Unit__UnorderedGroup_7__5 )? )
            // InternalBeeLangTestLanguage.g:11898:2: rule__Unit__UnorderedGroup_7__Impl ( rule__Unit__UnorderedGroup_7__5 )?
            {
            pushFollow(FOLLOW_82);
            rule__Unit__UnorderedGroup_7__Impl();

            state._fsp--;
            if (state.failed) return ;
            // InternalBeeLangTestLanguage.g:11899:2: ( rule__Unit__UnorderedGroup_7__5 )?
            int alt104=2;
            alt104 = dfa104.predict(input);
            switch (alt104) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:0:0: rule__Unit__UnorderedGroup_7__5
                    {
                    pushFollow(FOLLOW_2);
                    rule__Unit__UnorderedGroup_7__5();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 846, rule__Unit__UnorderedGroup_7__4_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__UnorderedGroup_7__4"


    // $ANTLR start "rule__Unit__UnorderedGroup_7__5"
    // InternalBeeLangTestLanguage.g:11905:1: rule__Unit__UnorderedGroup_7__5 : rule__Unit__UnorderedGroup_7__Impl ;
    public final void rule__Unit__UnorderedGroup_7__5() throws RecognitionException {
        int rule__Unit__UnorderedGroup_7__5_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 847) ) { return ; }
            // InternalBeeLangTestLanguage.g:11909:1: ( rule__Unit__UnorderedGroup_7__Impl )
            // InternalBeeLangTestLanguage.g:11910:2: rule__Unit__UnorderedGroup_7__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Unit__UnorderedGroup_7__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 847, rule__Unit__UnorderedGroup_7__5_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__UnorderedGroup_7__5"


    // $ANTLR start "rule__ProvidedCapability__UnorderedGroup_2_1"
    // InternalBeeLangTestLanguage.g:11917:1: rule__ProvidedCapability__UnorderedGroup_2_1 : rule__ProvidedCapability__UnorderedGroup_2_1__0 {...}?;
    public final void rule__ProvidedCapability__UnorderedGroup_2_1() throws RecognitionException {
        int rule__ProvidedCapability__UnorderedGroup_2_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        		getUnorderedGroupHelper().enter(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1());
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 848) ) { return ; }
            // InternalBeeLangTestLanguage.g:11922:1: ( rule__ProvidedCapability__UnorderedGroup_2_1__0 {...}?)
            // InternalBeeLangTestLanguage.g:11923:2: rule__ProvidedCapability__UnorderedGroup_2_1__0 {...}?
            {
            pushFollow(FOLLOW_2);
            rule__ProvidedCapability__UnorderedGroup_2_1__0();

            state._fsp--;
            if (state.failed) return ;
            if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1()) ) {
                if (state.backtracking>0) {state.failed=true; return ;}
                throw new FailedPredicateException(input, "rule__ProvidedCapability__UnorderedGroup_2_1", "getUnorderedGroupHelper().canLeave(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1())");
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 848, rule__ProvidedCapability__UnorderedGroup_2_1_StartIndex); }

            	getUnorderedGroupHelper().leave(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1());
            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__UnorderedGroup_2_1"


    // $ANTLR start "rule__ProvidedCapability__UnorderedGroup_2_1__Impl"
    // InternalBeeLangTestLanguage.g:11931:1: rule__ProvidedCapability__UnorderedGroup_2_1__Impl : ( ({...}? => ( ( ( rule__ProvidedCapability__Group_2_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__ProvidedCapability__Group_2_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__ProvidedCapability__Group_2_1_2__0 ) ) ) ) ) ;
    public final void rule__ProvidedCapability__UnorderedGroup_2_1__Impl() throws RecognitionException {
        int rule__ProvidedCapability__UnorderedGroup_2_1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        		boolean selected = false;
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 849) ) { return ; }
            // InternalBeeLangTestLanguage.g:11936:1: ( ( ({...}? => ( ( ( rule__ProvidedCapability__Group_2_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__ProvidedCapability__Group_2_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__ProvidedCapability__Group_2_1_2__0 ) ) ) ) ) )
            // InternalBeeLangTestLanguage.g:11937:3: ( ({...}? => ( ( ( rule__ProvidedCapability__Group_2_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__ProvidedCapability__Group_2_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__ProvidedCapability__Group_2_1_2__0 ) ) ) ) )
            {
            // InternalBeeLangTestLanguage.g:11937:3: ( ({...}? => ( ( ( rule__ProvidedCapability__Group_2_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__ProvidedCapability__Group_2_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__ProvidedCapability__Group_2_1_2__0 ) ) ) ) )
            int alt105=3;
            int LA105_0 = input.LA(1);

            if ( LA105_0 == 54 && getUnorderedGroupHelper().canSelect(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1(), 0) ) {
                alt105=1;
            }
            else if ( LA105_0 == 55 && getUnorderedGroupHelper().canSelect(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1(), 1) ) {
                alt105=2;
            }
            else if ( LA105_0 == 46 && getUnorderedGroupHelper().canSelect(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1(), 2) ) {
                alt105=3;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 105, 0, input);

                throw nvae;
            }
            switch (alt105) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:11938:3: ({...}? => ( ( ( rule__ProvidedCapability__Group_2_1_0__0 ) ) ) )
                    {
                    // InternalBeeLangTestLanguage.g:11938:3: ({...}? => ( ( ( rule__ProvidedCapability__Group_2_1_0__0 ) ) ) )
                    // InternalBeeLangTestLanguage.g:11939:4: {...}? => ( ( ( rule__ProvidedCapability__Group_2_1_0__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1(), 0) ) {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        throw new FailedPredicateException(input, "rule__ProvidedCapability__UnorderedGroup_2_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1(), 0)");
                    }
                    // InternalBeeLangTestLanguage.g:11939:116: ( ( ( rule__ProvidedCapability__Group_2_1_0__0 ) ) )
                    // InternalBeeLangTestLanguage.g:11940:5: ( ( rule__ProvidedCapability__Group_2_1_0__0 ) )
                    {
                    getUnorderedGroupHelper().select(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1(), 0);
                    selected = true;
                    // InternalBeeLangTestLanguage.g:11946:5: ( ( rule__ProvidedCapability__Group_2_1_0__0 ) )
                    // InternalBeeLangTestLanguage.g:11947:6: ( rule__ProvidedCapability__Group_2_1_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getProvidedCapabilityAccess().getGroup_2_1_0()); 
                    }
                    // InternalBeeLangTestLanguage.g:11948:6: ( rule__ProvidedCapability__Group_2_1_0__0 )
                    // InternalBeeLangTestLanguage.g:11948:7: rule__ProvidedCapability__Group_2_1_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ProvidedCapability__Group_2_1_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getProvidedCapabilityAccess().getGroup_2_1_0()); 
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalBeeLangTestLanguage.g:11953:3: ({...}? => ( ( ( rule__ProvidedCapability__Group_2_1_1__0 ) ) ) )
                    {
                    // InternalBeeLangTestLanguage.g:11953:3: ({...}? => ( ( ( rule__ProvidedCapability__Group_2_1_1__0 ) ) ) )
                    // InternalBeeLangTestLanguage.g:11954:4: {...}? => ( ( ( rule__ProvidedCapability__Group_2_1_1__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1(), 1) ) {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        throw new FailedPredicateException(input, "rule__ProvidedCapability__UnorderedGroup_2_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1(), 1)");
                    }
                    // InternalBeeLangTestLanguage.g:11954:116: ( ( ( rule__ProvidedCapability__Group_2_1_1__0 ) ) )
                    // InternalBeeLangTestLanguage.g:11955:5: ( ( rule__ProvidedCapability__Group_2_1_1__0 ) )
                    {
                    getUnorderedGroupHelper().select(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1(), 1);
                    selected = true;
                    // InternalBeeLangTestLanguage.g:11961:5: ( ( rule__ProvidedCapability__Group_2_1_1__0 ) )
                    // InternalBeeLangTestLanguage.g:11962:6: ( rule__ProvidedCapability__Group_2_1_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getProvidedCapabilityAccess().getGroup_2_1_1()); 
                    }
                    // InternalBeeLangTestLanguage.g:11963:6: ( rule__ProvidedCapability__Group_2_1_1__0 )
                    // InternalBeeLangTestLanguage.g:11963:7: rule__ProvidedCapability__Group_2_1_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ProvidedCapability__Group_2_1_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getProvidedCapabilityAccess().getGroup_2_1_1()); 
                    }

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalBeeLangTestLanguage.g:11968:3: ({...}? => ( ( ( rule__ProvidedCapability__Group_2_1_2__0 ) ) ) )
                    {
                    // InternalBeeLangTestLanguage.g:11968:3: ({...}? => ( ( ( rule__ProvidedCapability__Group_2_1_2__0 ) ) ) )
                    // InternalBeeLangTestLanguage.g:11969:4: {...}? => ( ( ( rule__ProvidedCapability__Group_2_1_2__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1(), 2) ) {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        throw new FailedPredicateException(input, "rule__ProvidedCapability__UnorderedGroup_2_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1(), 2)");
                    }
                    // InternalBeeLangTestLanguage.g:11969:116: ( ( ( rule__ProvidedCapability__Group_2_1_2__0 ) ) )
                    // InternalBeeLangTestLanguage.g:11970:5: ( ( rule__ProvidedCapability__Group_2_1_2__0 ) )
                    {
                    getUnorderedGroupHelper().select(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1(), 2);
                    selected = true;
                    // InternalBeeLangTestLanguage.g:11976:5: ( ( rule__ProvidedCapability__Group_2_1_2__0 ) )
                    // InternalBeeLangTestLanguage.g:11977:6: ( rule__ProvidedCapability__Group_2_1_2__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getProvidedCapabilityAccess().getGroup_2_1_2()); 
                    }
                    // InternalBeeLangTestLanguage.g:11978:6: ( rule__ProvidedCapability__Group_2_1_2__0 )
                    // InternalBeeLangTestLanguage.g:11978:7: rule__ProvidedCapability__Group_2_1_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ProvidedCapability__Group_2_1_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getProvidedCapabilityAccess().getGroup_2_1_2()); 
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 849, rule__ProvidedCapability__UnorderedGroup_2_1__Impl_StartIndex); }

            	if (selected)
            		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1());
            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__UnorderedGroup_2_1__Impl"


    // $ANTLR start "rule__ProvidedCapability__UnorderedGroup_2_1__0"
    // InternalBeeLangTestLanguage.g:11991:1: rule__ProvidedCapability__UnorderedGroup_2_1__0 : rule__ProvidedCapability__UnorderedGroup_2_1__Impl ( rule__ProvidedCapability__UnorderedGroup_2_1__1 )? ;
    public final void rule__ProvidedCapability__UnorderedGroup_2_1__0() throws RecognitionException {
        int rule__ProvidedCapability__UnorderedGroup_2_1__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 850) ) { return ; }
            // InternalBeeLangTestLanguage.g:11995:1: ( rule__ProvidedCapability__UnorderedGroup_2_1__Impl ( rule__ProvidedCapability__UnorderedGroup_2_1__1 )? )
            // InternalBeeLangTestLanguage.g:11996:2: rule__ProvidedCapability__UnorderedGroup_2_1__Impl ( rule__ProvidedCapability__UnorderedGroup_2_1__1 )?
            {
            pushFollow(FOLLOW_83);
            rule__ProvidedCapability__UnorderedGroup_2_1__Impl();

            state._fsp--;
            if (state.failed) return ;
            // InternalBeeLangTestLanguage.g:11997:2: ( rule__ProvidedCapability__UnorderedGroup_2_1__1 )?
            int alt106=2;
            int LA106_0 = input.LA(1);

            if ( LA106_0 == 54 && getUnorderedGroupHelper().canSelect(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1(), 0) ) {
                alt106=1;
            }
            else if ( LA106_0 == 55 && getUnorderedGroupHelper().canSelect(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1(), 1) ) {
                alt106=1;
            }
            else if ( LA106_0 == 46 && getUnorderedGroupHelper().canSelect(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1(), 2) ) {
                alt106=1;
            }
            switch (alt106) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:0:0: rule__ProvidedCapability__UnorderedGroup_2_1__1
                    {
                    pushFollow(FOLLOW_2);
                    rule__ProvidedCapability__UnorderedGroup_2_1__1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 850, rule__ProvidedCapability__UnorderedGroup_2_1__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__UnorderedGroup_2_1__0"


    // $ANTLR start "rule__ProvidedCapability__UnorderedGroup_2_1__1"
    // InternalBeeLangTestLanguage.g:12003:1: rule__ProvidedCapability__UnorderedGroup_2_1__1 : rule__ProvidedCapability__UnorderedGroup_2_1__Impl ( rule__ProvidedCapability__UnorderedGroup_2_1__2 )? ;
    public final void rule__ProvidedCapability__UnorderedGroup_2_1__1() throws RecognitionException {
        int rule__ProvidedCapability__UnorderedGroup_2_1__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 851) ) { return ; }
            // InternalBeeLangTestLanguage.g:12007:1: ( rule__ProvidedCapability__UnorderedGroup_2_1__Impl ( rule__ProvidedCapability__UnorderedGroup_2_1__2 )? )
            // InternalBeeLangTestLanguage.g:12008:2: rule__ProvidedCapability__UnorderedGroup_2_1__Impl ( rule__ProvidedCapability__UnorderedGroup_2_1__2 )?
            {
            pushFollow(FOLLOW_83);
            rule__ProvidedCapability__UnorderedGroup_2_1__Impl();

            state._fsp--;
            if (state.failed) return ;
            // InternalBeeLangTestLanguage.g:12009:2: ( rule__ProvidedCapability__UnorderedGroup_2_1__2 )?
            int alt107=2;
            int LA107_0 = input.LA(1);

            if ( LA107_0 == 54 && getUnorderedGroupHelper().canSelect(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1(), 0) ) {
                alt107=1;
            }
            else if ( LA107_0 == 55 && getUnorderedGroupHelper().canSelect(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1(), 1) ) {
                alt107=1;
            }
            else if ( LA107_0 == 46 && getUnorderedGroupHelper().canSelect(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1(), 2) ) {
                alt107=1;
            }
            switch (alt107) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:0:0: rule__ProvidedCapability__UnorderedGroup_2_1__2
                    {
                    pushFollow(FOLLOW_2);
                    rule__ProvidedCapability__UnorderedGroup_2_1__2();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 851, rule__ProvidedCapability__UnorderedGroup_2_1__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__UnorderedGroup_2_1__1"


    // $ANTLR start "rule__ProvidedCapability__UnorderedGroup_2_1__2"
    // InternalBeeLangTestLanguage.g:12015:1: rule__ProvidedCapability__UnorderedGroup_2_1__2 : rule__ProvidedCapability__UnorderedGroup_2_1__Impl ;
    public final void rule__ProvidedCapability__UnorderedGroup_2_1__2() throws RecognitionException {
        int rule__ProvidedCapability__UnorderedGroup_2_1__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 852) ) { return ; }
            // InternalBeeLangTestLanguage.g:12019:1: ( rule__ProvidedCapability__UnorderedGroup_2_1__Impl )
            // InternalBeeLangTestLanguage.g:12020:2: rule__ProvidedCapability__UnorderedGroup_2_1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ProvidedCapability__UnorderedGroup_2_1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 852, rule__ProvidedCapability__UnorderedGroup_2_1__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__UnorderedGroup_2_1__2"


    // $ANTLR start "rule__AliasedRequiredCapability__UnorderedGroup_3_1"
    // InternalBeeLangTestLanguage.g:12027:1: rule__AliasedRequiredCapability__UnorderedGroup_3_1 : ( rule__AliasedRequiredCapability__UnorderedGroup_3_1__0 )? ;
    public final void rule__AliasedRequiredCapability__UnorderedGroup_3_1() throws RecognitionException {
        int rule__AliasedRequiredCapability__UnorderedGroup_3_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        		getUnorderedGroupHelper().enter(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1());
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 853) ) { return ; }
            // InternalBeeLangTestLanguage.g:12032:1: ( ( rule__AliasedRequiredCapability__UnorderedGroup_3_1__0 )? )
            // InternalBeeLangTestLanguage.g:12033:2: ( rule__AliasedRequiredCapability__UnorderedGroup_3_1__0 )?
            {
            // InternalBeeLangTestLanguage.g:12033:2: ( rule__AliasedRequiredCapability__UnorderedGroup_3_1__0 )?
            int alt108=2;
            int LA108_0 = input.LA(1);

            if ( LA108_0 == 54 && getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 0) ) {
                alt108=1;
            }
            else if ( LA108_0 == 73 && getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 1) ) {
                alt108=1;
            }
            else if ( LA108_0 == 57 && getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 2) ) {
                alt108=1;
            }
            else if ( LA108_0 == 58 && getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 3) ) {
                alt108=1;
            }
            else if ( LA108_0 == 46 && getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 4) ) {
                alt108=1;
            }
            switch (alt108) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:0:0: rule__AliasedRequiredCapability__UnorderedGroup_3_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__AliasedRequiredCapability__UnorderedGroup_3_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 853, rule__AliasedRequiredCapability__UnorderedGroup_3_1_StartIndex); }

            	getUnorderedGroupHelper().leave(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1());
            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__UnorderedGroup_3_1"


    // $ANTLR start "rule__AliasedRequiredCapability__UnorderedGroup_3_1__Impl"
    // InternalBeeLangTestLanguage.g:12041:1: rule__AliasedRequiredCapability__UnorderedGroup_3_1__Impl : ( ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_2__0 ) ) ) ) | ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_3__0 ) ) ) ) | ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_4__0 ) ) ) ) ) ;
    public final void rule__AliasedRequiredCapability__UnorderedGroup_3_1__Impl() throws RecognitionException {
        int rule__AliasedRequiredCapability__UnorderedGroup_3_1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        		boolean selected = false;
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 854) ) { return ; }
            // InternalBeeLangTestLanguage.g:12046:1: ( ( ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_2__0 ) ) ) ) | ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_3__0 ) ) ) ) | ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_4__0 ) ) ) ) ) )
            // InternalBeeLangTestLanguage.g:12047:3: ( ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_2__0 ) ) ) ) | ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_3__0 ) ) ) ) | ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_4__0 ) ) ) ) )
            {
            // InternalBeeLangTestLanguage.g:12047:3: ( ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_2__0 ) ) ) ) | ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_3__0 ) ) ) ) | ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_4__0 ) ) ) ) )
            int alt109=5;
            int LA109_0 = input.LA(1);

            if ( LA109_0 == 54 && getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 0) ) {
                alt109=1;
            }
            else if ( LA109_0 == 73 && getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 1) ) {
                alt109=2;
            }
            else if ( LA109_0 == 57 && getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 2) ) {
                alt109=3;
            }
            else if ( LA109_0 == 58 && getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 3) ) {
                alt109=4;
            }
            else if ( LA109_0 == 46 && getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 4) ) {
                alt109=5;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 109, 0, input);

                throw nvae;
            }
            switch (alt109) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:12048:3: ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_0__0 ) ) ) )
                    {
                    // InternalBeeLangTestLanguage.g:12048:3: ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_0__0 ) ) ) )
                    // InternalBeeLangTestLanguage.g:12049:4: {...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_0__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 0) ) {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        throw new FailedPredicateException(input, "rule__AliasedRequiredCapability__UnorderedGroup_3_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 0)");
                    }
                    // InternalBeeLangTestLanguage.g:12049:123: ( ( ( rule__AliasedRequiredCapability__Group_3_1_0__0 ) ) )
                    // InternalBeeLangTestLanguage.g:12050:5: ( ( rule__AliasedRequiredCapability__Group_3_1_0__0 ) )
                    {
                    getUnorderedGroupHelper().select(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 0);
                    selected = true;
                    // InternalBeeLangTestLanguage.g:12056:5: ( ( rule__AliasedRequiredCapability__Group_3_1_0__0 ) )
                    // InternalBeeLangTestLanguage.g:12057:6: ( rule__AliasedRequiredCapability__Group_3_1_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAliasedRequiredCapabilityAccess().getGroup_3_1_0()); 
                    }
                    // InternalBeeLangTestLanguage.g:12058:6: ( rule__AliasedRequiredCapability__Group_3_1_0__0 )
                    // InternalBeeLangTestLanguage.g:12058:7: rule__AliasedRequiredCapability__Group_3_1_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__AliasedRequiredCapability__Group_3_1_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAliasedRequiredCapabilityAccess().getGroup_3_1_0()); 
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalBeeLangTestLanguage.g:12063:3: ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_1__0 ) ) ) )
                    {
                    // InternalBeeLangTestLanguage.g:12063:3: ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_1__0 ) ) ) )
                    // InternalBeeLangTestLanguage.g:12064:4: {...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_1__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 1) ) {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        throw new FailedPredicateException(input, "rule__AliasedRequiredCapability__UnorderedGroup_3_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 1)");
                    }
                    // InternalBeeLangTestLanguage.g:12064:123: ( ( ( rule__AliasedRequiredCapability__Group_3_1_1__0 ) ) )
                    // InternalBeeLangTestLanguage.g:12065:5: ( ( rule__AliasedRequiredCapability__Group_3_1_1__0 ) )
                    {
                    getUnorderedGroupHelper().select(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 1);
                    selected = true;
                    // InternalBeeLangTestLanguage.g:12071:5: ( ( rule__AliasedRequiredCapability__Group_3_1_1__0 ) )
                    // InternalBeeLangTestLanguage.g:12072:6: ( rule__AliasedRequiredCapability__Group_3_1_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAliasedRequiredCapabilityAccess().getGroup_3_1_1()); 
                    }
                    // InternalBeeLangTestLanguage.g:12073:6: ( rule__AliasedRequiredCapability__Group_3_1_1__0 )
                    // InternalBeeLangTestLanguage.g:12073:7: rule__AliasedRequiredCapability__Group_3_1_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__AliasedRequiredCapability__Group_3_1_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAliasedRequiredCapabilityAccess().getGroup_3_1_1()); 
                    }

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalBeeLangTestLanguage.g:12078:3: ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_2__0 ) ) ) )
                    {
                    // InternalBeeLangTestLanguage.g:12078:3: ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_2__0 ) ) ) )
                    // InternalBeeLangTestLanguage.g:12079:4: {...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_2__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 2) ) {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        throw new FailedPredicateException(input, "rule__AliasedRequiredCapability__UnorderedGroup_3_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 2)");
                    }
                    // InternalBeeLangTestLanguage.g:12079:123: ( ( ( rule__AliasedRequiredCapability__Group_3_1_2__0 ) ) )
                    // InternalBeeLangTestLanguage.g:12080:5: ( ( rule__AliasedRequiredCapability__Group_3_1_2__0 ) )
                    {
                    getUnorderedGroupHelper().select(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 2);
                    selected = true;
                    // InternalBeeLangTestLanguage.g:12086:5: ( ( rule__AliasedRequiredCapability__Group_3_1_2__0 ) )
                    // InternalBeeLangTestLanguage.g:12087:6: ( rule__AliasedRequiredCapability__Group_3_1_2__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAliasedRequiredCapabilityAccess().getGroup_3_1_2()); 
                    }
                    // InternalBeeLangTestLanguage.g:12088:6: ( rule__AliasedRequiredCapability__Group_3_1_2__0 )
                    // InternalBeeLangTestLanguage.g:12088:7: rule__AliasedRequiredCapability__Group_3_1_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__AliasedRequiredCapability__Group_3_1_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAliasedRequiredCapabilityAccess().getGroup_3_1_2()); 
                    }

                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalBeeLangTestLanguage.g:12093:3: ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_3__0 ) ) ) )
                    {
                    // InternalBeeLangTestLanguage.g:12093:3: ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_3__0 ) ) ) )
                    // InternalBeeLangTestLanguage.g:12094:4: {...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_3__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 3) ) {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        throw new FailedPredicateException(input, "rule__AliasedRequiredCapability__UnorderedGroup_3_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 3)");
                    }
                    // InternalBeeLangTestLanguage.g:12094:123: ( ( ( rule__AliasedRequiredCapability__Group_3_1_3__0 ) ) )
                    // InternalBeeLangTestLanguage.g:12095:5: ( ( rule__AliasedRequiredCapability__Group_3_1_3__0 ) )
                    {
                    getUnorderedGroupHelper().select(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 3);
                    selected = true;
                    // InternalBeeLangTestLanguage.g:12101:5: ( ( rule__AliasedRequiredCapability__Group_3_1_3__0 ) )
                    // InternalBeeLangTestLanguage.g:12102:6: ( rule__AliasedRequiredCapability__Group_3_1_3__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAliasedRequiredCapabilityAccess().getGroup_3_1_3()); 
                    }
                    // InternalBeeLangTestLanguage.g:12103:6: ( rule__AliasedRequiredCapability__Group_3_1_3__0 )
                    // InternalBeeLangTestLanguage.g:12103:7: rule__AliasedRequiredCapability__Group_3_1_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__AliasedRequiredCapability__Group_3_1_3__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAliasedRequiredCapabilityAccess().getGroup_3_1_3()); 
                    }

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalBeeLangTestLanguage.g:12108:3: ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_4__0 ) ) ) )
                    {
                    // InternalBeeLangTestLanguage.g:12108:3: ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_4__0 ) ) ) )
                    // InternalBeeLangTestLanguage.g:12109:4: {...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_4__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 4) ) {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        throw new FailedPredicateException(input, "rule__AliasedRequiredCapability__UnorderedGroup_3_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 4)");
                    }
                    // InternalBeeLangTestLanguage.g:12109:123: ( ( ( rule__AliasedRequiredCapability__Group_3_1_4__0 ) ) )
                    // InternalBeeLangTestLanguage.g:12110:5: ( ( rule__AliasedRequiredCapability__Group_3_1_4__0 ) )
                    {
                    getUnorderedGroupHelper().select(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 4);
                    selected = true;
                    // InternalBeeLangTestLanguage.g:12116:5: ( ( rule__AliasedRequiredCapability__Group_3_1_4__0 ) )
                    // InternalBeeLangTestLanguage.g:12117:6: ( rule__AliasedRequiredCapability__Group_3_1_4__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAliasedRequiredCapabilityAccess().getGroup_3_1_4()); 
                    }
                    // InternalBeeLangTestLanguage.g:12118:6: ( rule__AliasedRequiredCapability__Group_3_1_4__0 )
                    // InternalBeeLangTestLanguage.g:12118:7: rule__AliasedRequiredCapability__Group_3_1_4__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__AliasedRequiredCapability__Group_3_1_4__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAliasedRequiredCapabilityAccess().getGroup_3_1_4()); 
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 854, rule__AliasedRequiredCapability__UnorderedGroup_3_1__Impl_StartIndex); }

            	if (selected)
            		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1());
            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__UnorderedGroup_3_1__Impl"


    // $ANTLR start "rule__AliasedRequiredCapability__UnorderedGroup_3_1__0"
    // InternalBeeLangTestLanguage.g:12131:1: rule__AliasedRequiredCapability__UnorderedGroup_3_1__0 : rule__AliasedRequiredCapability__UnorderedGroup_3_1__Impl ( rule__AliasedRequiredCapability__UnorderedGroup_3_1__1 )? ;
    public final void rule__AliasedRequiredCapability__UnorderedGroup_3_1__0() throws RecognitionException {
        int rule__AliasedRequiredCapability__UnorderedGroup_3_1__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 855) ) { return ; }
            // InternalBeeLangTestLanguage.g:12135:1: ( rule__AliasedRequiredCapability__UnorderedGroup_3_1__Impl ( rule__AliasedRequiredCapability__UnorderedGroup_3_1__1 )? )
            // InternalBeeLangTestLanguage.g:12136:2: rule__AliasedRequiredCapability__UnorderedGroup_3_1__Impl ( rule__AliasedRequiredCapability__UnorderedGroup_3_1__1 )?
            {
            pushFollow(FOLLOW_84);
            rule__AliasedRequiredCapability__UnorderedGroup_3_1__Impl();

            state._fsp--;
            if (state.failed) return ;
            // InternalBeeLangTestLanguage.g:12137:2: ( rule__AliasedRequiredCapability__UnorderedGroup_3_1__1 )?
            int alt110=2;
            int LA110_0 = input.LA(1);

            if ( LA110_0 == 54 && getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 0) ) {
                alt110=1;
            }
            else if ( LA110_0 == 73 && getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 1) ) {
                alt110=1;
            }
            else if ( LA110_0 == 57 && getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 2) ) {
                alt110=1;
            }
            else if ( LA110_0 == 58 && getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 3) ) {
                alt110=1;
            }
            else if ( LA110_0 == 46 && getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 4) ) {
                alt110=1;
            }
            switch (alt110) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:0:0: rule__AliasedRequiredCapability__UnorderedGroup_3_1__1
                    {
                    pushFollow(FOLLOW_2);
                    rule__AliasedRequiredCapability__UnorderedGroup_3_1__1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 855, rule__AliasedRequiredCapability__UnorderedGroup_3_1__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__UnorderedGroup_3_1__0"


    // $ANTLR start "rule__AliasedRequiredCapability__UnorderedGroup_3_1__1"
    // InternalBeeLangTestLanguage.g:12143:1: rule__AliasedRequiredCapability__UnorderedGroup_3_1__1 : rule__AliasedRequiredCapability__UnorderedGroup_3_1__Impl ( rule__AliasedRequiredCapability__UnorderedGroup_3_1__2 )? ;
    public final void rule__AliasedRequiredCapability__UnorderedGroup_3_1__1() throws RecognitionException {
        int rule__AliasedRequiredCapability__UnorderedGroup_3_1__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 856) ) { return ; }
            // InternalBeeLangTestLanguage.g:12147:1: ( rule__AliasedRequiredCapability__UnorderedGroup_3_1__Impl ( rule__AliasedRequiredCapability__UnorderedGroup_3_1__2 )? )
            // InternalBeeLangTestLanguage.g:12148:2: rule__AliasedRequiredCapability__UnorderedGroup_3_1__Impl ( rule__AliasedRequiredCapability__UnorderedGroup_3_1__2 )?
            {
            pushFollow(FOLLOW_84);
            rule__AliasedRequiredCapability__UnorderedGroup_3_1__Impl();

            state._fsp--;
            if (state.failed) return ;
            // InternalBeeLangTestLanguage.g:12149:2: ( rule__AliasedRequiredCapability__UnorderedGroup_3_1__2 )?
            int alt111=2;
            int LA111_0 = input.LA(1);

            if ( LA111_0 == 54 && getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 0) ) {
                alt111=1;
            }
            else if ( LA111_0 == 73 && getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 1) ) {
                alt111=1;
            }
            else if ( LA111_0 == 57 && getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 2) ) {
                alt111=1;
            }
            else if ( LA111_0 == 58 && getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 3) ) {
                alt111=1;
            }
            else if ( LA111_0 == 46 && getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 4) ) {
                alt111=1;
            }
            switch (alt111) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:0:0: rule__AliasedRequiredCapability__UnorderedGroup_3_1__2
                    {
                    pushFollow(FOLLOW_2);
                    rule__AliasedRequiredCapability__UnorderedGroup_3_1__2();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 856, rule__AliasedRequiredCapability__UnorderedGroup_3_1__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__UnorderedGroup_3_1__1"


    // $ANTLR start "rule__AliasedRequiredCapability__UnorderedGroup_3_1__2"
    // InternalBeeLangTestLanguage.g:12155:1: rule__AliasedRequiredCapability__UnorderedGroup_3_1__2 : rule__AliasedRequiredCapability__UnorderedGroup_3_1__Impl ( rule__AliasedRequiredCapability__UnorderedGroup_3_1__3 )? ;
    public final void rule__AliasedRequiredCapability__UnorderedGroup_3_1__2() throws RecognitionException {
        int rule__AliasedRequiredCapability__UnorderedGroup_3_1__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 857) ) { return ; }
            // InternalBeeLangTestLanguage.g:12159:1: ( rule__AliasedRequiredCapability__UnorderedGroup_3_1__Impl ( rule__AliasedRequiredCapability__UnorderedGroup_3_1__3 )? )
            // InternalBeeLangTestLanguage.g:12160:2: rule__AliasedRequiredCapability__UnorderedGroup_3_1__Impl ( rule__AliasedRequiredCapability__UnorderedGroup_3_1__3 )?
            {
            pushFollow(FOLLOW_84);
            rule__AliasedRequiredCapability__UnorderedGroup_3_1__Impl();

            state._fsp--;
            if (state.failed) return ;
            // InternalBeeLangTestLanguage.g:12161:2: ( rule__AliasedRequiredCapability__UnorderedGroup_3_1__3 )?
            int alt112=2;
            int LA112_0 = input.LA(1);

            if ( LA112_0 == 54 && getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 0) ) {
                alt112=1;
            }
            else if ( LA112_0 == 73 && getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 1) ) {
                alt112=1;
            }
            else if ( LA112_0 == 57 && getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 2) ) {
                alt112=1;
            }
            else if ( LA112_0 == 58 && getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 3) ) {
                alt112=1;
            }
            else if ( LA112_0 == 46 && getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 4) ) {
                alt112=1;
            }
            switch (alt112) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:0:0: rule__AliasedRequiredCapability__UnorderedGroup_3_1__3
                    {
                    pushFollow(FOLLOW_2);
                    rule__AliasedRequiredCapability__UnorderedGroup_3_1__3();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 857, rule__AliasedRequiredCapability__UnorderedGroup_3_1__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__UnorderedGroup_3_1__2"


    // $ANTLR start "rule__AliasedRequiredCapability__UnorderedGroup_3_1__3"
    // InternalBeeLangTestLanguage.g:12167:1: rule__AliasedRequiredCapability__UnorderedGroup_3_1__3 : rule__AliasedRequiredCapability__UnorderedGroup_3_1__Impl ( rule__AliasedRequiredCapability__UnorderedGroup_3_1__4 )? ;
    public final void rule__AliasedRequiredCapability__UnorderedGroup_3_1__3() throws RecognitionException {
        int rule__AliasedRequiredCapability__UnorderedGroup_3_1__3_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 858) ) { return ; }
            // InternalBeeLangTestLanguage.g:12171:1: ( rule__AliasedRequiredCapability__UnorderedGroup_3_1__Impl ( rule__AliasedRequiredCapability__UnorderedGroup_3_1__4 )? )
            // InternalBeeLangTestLanguage.g:12172:2: rule__AliasedRequiredCapability__UnorderedGroup_3_1__Impl ( rule__AliasedRequiredCapability__UnorderedGroup_3_1__4 )?
            {
            pushFollow(FOLLOW_84);
            rule__AliasedRequiredCapability__UnorderedGroup_3_1__Impl();

            state._fsp--;
            if (state.failed) return ;
            // InternalBeeLangTestLanguage.g:12173:2: ( rule__AliasedRequiredCapability__UnorderedGroup_3_1__4 )?
            int alt113=2;
            int LA113_0 = input.LA(1);

            if ( LA113_0 == 54 && getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 0) ) {
                alt113=1;
            }
            else if ( LA113_0 == 73 && getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 1) ) {
                alt113=1;
            }
            else if ( LA113_0 == 57 && getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 2) ) {
                alt113=1;
            }
            else if ( LA113_0 == 58 && getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 3) ) {
                alt113=1;
            }
            else if ( LA113_0 == 46 && getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 4) ) {
                alt113=1;
            }
            switch (alt113) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:0:0: rule__AliasedRequiredCapability__UnorderedGroup_3_1__4
                    {
                    pushFollow(FOLLOW_2);
                    rule__AliasedRequiredCapability__UnorderedGroup_3_1__4();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 858, rule__AliasedRequiredCapability__UnorderedGroup_3_1__3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__UnorderedGroup_3_1__3"


    // $ANTLR start "rule__AliasedRequiredCapability__UnorderedGroup_3_1__4"
    // InternalBeeLangTestLanguage.g:12179:1: rule__AliasedRequiredCapability__UnorderedGroup_3_1__4 : rule__AliasedRequiredCapability__UnorderedGroup_3_1__Impl ;
    public final void rule__AliasedRequiredCapability__UnorderedGroup_3_1__4() throws RecognitionException {
        int rule__AliasedRequiredCapability__UnorderedGroup_3_1__4_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 859) ) { return ; }
            // InternalBeeLangTestLanguage.g:12183:1: ( rule__AliasedRequiredCapability__UnorderedGroup_3_1__Impl )
            // InternalBeeLangTestLanguage.g:12184:2: rule__AliasedRequiredCapability__UnorderedGroup_3_1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AliasedRequiredCapability__UnorderedGroup_3_1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 859, rule__AliasedRequiredCapability__UnorderedGroup_3_1__4_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__UnorderedGroup_3_1__4"


    // $ANTLR start "rule__RequiredCapability__UnorderedGroup_3_1"
    // InternalBeeLangTestLanguage.g:12191:1: rule__RequiredCapability__UnorderedGroup_3_1 : ( rule__RequiredCapability__UnorderedGroup_3_1__0 )? ;
    public final void rule__RequiredCapability__UnorderedGroup_3_1() throws RecognitionException {
        int rule__RequiredCapability__UnorderedGroup_3_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        		getUnorderedGroupHelper().enter(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1());
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 860) ) { return ; }
            // InternalBeeLangTestLanguage.g:12196:1: ( ( rule__RequiredCapability__UnorderedGroup_3_1__0 )? )
            // InternalBeeLangTestLanguage.g:12197:2: ( rule__RequiredCapability__UnorderedGroup_3_1__0 )?
            {
            // InternalBeeLangTestLanguage.g:12197:2: ( rule__RequiredCapability__UnorderedGroup_3_1__0 )?
            int alt114=2;
            int LA114_0 = input.LA(1);

            if ( LA114_0 == 54 && getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 0) ) {
                alt114=1;
            }
            else if ( LA114_0 == 73 && getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 1) ) {
                alt114=1;
            }
            else if ( LA114_0 == 57 && getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 2) ) {
                alt114=1;
            }
            else if ( LA114_0 == 58 && getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 3) ) {
                alt114=1;
            }
            else if ( LA114_0 == 46 && getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 4) ) {
                alt114=1;
            }
            switch (alt114) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:0:0: rule__RequiredCapability__UnorderedGroup_3_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__RequiredCapability__UnorderedGroup_3_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 860, rule__RequiredCapability__UnorderedGroup_3_1_StartIndex); }

            	getUnorderedGroupHelper().leave(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1());
            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__UnorderedGroup_3_1"


    // $ANTLR start "rule__RequiredCapability__UnorderedGroup_3_1__Impl"
    // InternalBeeLangTestLanguage.g:12205:1: rule__RequiredCapability__UnorderedGroup_3_1__Impl : ( ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_2__0 ) ) ) ) | ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_3__0 ) ) ) ) | ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_4__0 ) ) ) ) ) ;
    public final void rule__RequiredCapability__UnorderedGroup_3_1__Impl() throws RecognitionException {
        int rule__RequiredCapability__UnorderedGroup_3_1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        		boolean selected = false;
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 861) ) { return ; }
            // InternalBeeLangTestLanguage.g:12210:1: ( ( ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_2__0 ) ) ) ) | ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_3__0 ) ) ) ) | ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_4__0 ) ) ) ) ) )
            // InternalBeeLangTestLanguage.g:12211:3: ( ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_2__0 ) ) ) ) | ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_3__0 ) ) ) ) | ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_4__0 ) ) ) ) )
            {
            // InternalBeeLangTestLanguage.g:12211:3: ( ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_2__0 ) ) ) ) | ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_3__0 ) ) ) ) | ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_4__0 ) ) ) ) )
            int alt115=5;
            int LA115_0 = input.LA(1);

            if ( LA115_0 == 54 && getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 0) ) {
                alt115=1;
            }
            else if ( LA115_0 == 73 && getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 1) ) {
                alt115=2;
            }
            else if ( LA115_0 == 57 && getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 2) ) {
                alt115=3;
            }
            else if ( LA115_0 == 58 && getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 3) ) {
                alt115=4;
            }
            else if ( LA115_0 == 46 && getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 4) ) {
                alt115=5;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 115, 0, input);

                throw nvae;
            }
            switch (alt115) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:12212:3: ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_0__0 ) ) ) )
                    {
                    // InternalBeeLangTestLanguage.g:12212:3: ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_0__0 ) ) ) )
                    // InternalBeeLangTestLanguage.g:12213:4: {...}? => ( ( ( rule__RequiredCapability__Group_3_1_0__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 0) ) {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        throw new FailedPredicateException(input, "rule__RequiredCapability__UnorderedGroup_3_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 0)");
                    }
                    // InternalBeeLangTestLanguage.g:12213:116: ( ( ( rule__RequiredCapability__Group_3_1_0__0 ) ) )
                    // InternalBeeLangTestLanguage.g:12214:5: ( ( rule__RequiredCapability__Group_3_1_0__0 ) )
                    {
                    getUnorderedGroupHelper().select(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 0);
                    selected = true;
                    // InternalBeeLangTestLanguage.g:12220:5: ( ( rule__RequiredCapability__Group_3_1_0__0 ) )
                    // InternalBeeLangTestLanguage.g:12221:6: ( rule__RequiredCapability__Group_3_1_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getRequiredCapabilityAccess().getGroup_3_1_0()); 
                    }
                    // InternalBeeLangTestLanguage.g:12222:6: ( rule__RequiredCapability__Group_3_1_0__0 )
                    // InternalBeeLangTestLanguage.g:12222:7: rule__RequiredCapability__Group_3_1_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__RequiredCapability__Group_3_1_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getRequiredCapabilityAccess().getGroup_3_1_0()); 
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalBeeLangTestLanguage.g:12227:3: ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_1__0 ) ) ) )
                    {
                    // InternalBeeLangTestLanguage.g:12227:3: ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_1__0 ) ) ) )
                    // InternalBeeLangTestLanguage.g:12228:4: {...}? => ( ( ( rule__RequiredCapability__Group_3_1_1__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 1) ) {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        throw new FailedPredicateException(input, "rule__RequiredCapability__UnorderedGroup_3_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 1)");
                    }
                    // InternalBeeLangTestLanguage.g:12228:116: ( ( ( rule__RequiredCapability__Group_3_1_1__0 ) ) )
                    // InternalBeeLangTestLanguage.g:12229:5: ( ( rule__RequiredCapability__Group_3_1_1__0 ) )
                    {
                    getUnorderedGroupHelper().select(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 1);
                    selected = true;
                    // InternalBeeLangTestLanguage.g:12235:5: ( ( rule__RequiredCapability__Group_3_1_1__0 ) )
                    // InternalBeeLangTestLanguage.g:12236:6: ( rule__RequiredCapability__Group_3_1_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getRequiredCapabilityAccess().getGroup_3_1_1()); 
                    }
                    // InternalBeeLangTestLanguage.g:12237:6: ( rule__RequiredCapability__Group_3_1_1__0 )
                    // InternalBeeLangTestLanguage.g:12237:7: rule__RequiredCapability__Group_3_1_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__RequiredCapability__Group_3_1_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getRequiredCapabilityAccess().getGroup_3_1_1()); 
                    }

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalBeeLangTestLanguage.g:12242:3: ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_2__0 ) ) ) )
                    {
                    // InternalBeeLangTestLanguage.g:12242:3: ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_2__0 ) ) ) )
                    // InternalBeeLangTestLanguage.g:12243:4: {...}? => ( ( ( rule__RequiredCapability__Group_3_1_2__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 2) ) {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        throw new FailedPredicateException(input, "rule__RequiredCapability__UnorderedGroup_3_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 2)");
                    }
                    // InternalBeeLangTestLanguage.g:12243:116: ( ( ( rule__RequiredCapability__Group_3_1_2__0 ) ) )
                    // InternalBeeLangTestLanguage.g:12244:5: ( ( rule__RequiredCapability__Group_3_1_2__0 ) )
                    {
                    getUnorderedGroupHelper().select(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 2);
                    selected = true;
                    // InternalBeeLangTestLanguage.g:12250:5: ( ( rule__RequiredCapability__Group_3_1_2__0 ) )
                    // InternalBeeLangTestLanguage.g:12251:6: ( rule__RequiredCapability__Group_3_1_2__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getRequiredCapabilityAccess().getGroup_3_1_2()); 
                    }
                    // InternalBeeLangTestLanguage.g:12252:6: ( rule__RequiredCapability__Group_3_1_2__0 )
                    // InternalBeeLangTestLanguage.g:12252:7: rule__RequiredCapability__Group_3_1_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__RequiredCapability__Group_3_1_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getRequiredCapabilityAccess().getGroup_3_1_2()); 
                    }

                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalBeeLangTestLanguage.g:12257:3: ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_3__0 ) ) ) )
                    {
                    // InternalBeeLangTestLanguage.g:12257:3: ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_3__0 ) ) ) )
                    // InternalBeeLangTestLanguage.g:12258:4: {...}? => ( ( ( rule__RequiredCapability__Group_3_1_3__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 3) ) {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        throw new FailedPredicateException(input, "rule__RequiredCapability__UnorderedGroup_3_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 3)");
                    }
                    // InternalBeeLangTestLanguage.g:12258:116: ( ( ( rule__RequiredCapability__Group_3_1_3__0 ) ) )
                    // InternalBeeLangTestLanguage.g:12259:5: ( ( rule__RequiredCapability__Group_3_1_3__0 ) )
                    {
                    getUnorderedGroupHelper().select(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 3);
                    selected = true;
                    // InternalBeeLangTestLanguage.g:12265:5: ( ( rule__RequiredCapability__Group_3_1_3__0 ) )
                    // InternalBeeLangTestLanguage.g:12266:6: ( rule__RequiredCapability__Group_3_1_3__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getRequiredCapabilityAccess().getGroup_3_1_3()); 
                    }
                    // InternalBeeLangTestLanguage.g:12267:6: ( rule__RequiredCapability__Group_3_1_3__0 )
                    // InternalBeeLangTestLanguage.g:12267:7: rule__RequiredCapability__Group_3_1_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__RequiredCapability__Group_3_1_3__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getRequiredCapabilityAccess().getGroup_3_1_3()); 
                    }

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalBeeLangTestLanguage.g:12272:3: ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_4__0 ) ) ) )
                    {
                    // InternalBeeLangTestLanguage.g:12272:3: ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_4__0 ) ) ) )
                    // InternalBeeLangTestLanguage.g:12273:4: {...}? => ( ( ( rule__RequiredCapability__Group_3_1_4__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 4) ) {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        throw new FailedPredicateException(input, "rule__RequiredCapability__UnorderedGroup_3_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 4)");
                    }
                    // InternalBeeLangTestLanguage.g:12273:116: ( ( ( rule__RequiredCapability__Group_3_1_4__0 ) ) )
                    // InternalBeeLangTestLanguage.g:12274:5: ( ( rule__RequiredCapability__Group_3_1_4__0 ) )
                    {
                    getUnorderedGroupHelper().select(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 4);
                    selected = true;
                    // InternalBeeLangTestLanguage.g:12280:5: ( ( rule__RequiredCapability__Group_3_1_4__0 ) )
                    // InternalBeeLangTestLanguage.g:12281:6: ( rule__RequiredCapability__Group_3_1_4__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getRequiredCapabilityAccess().getGroup_3_1_4()); 
                    }
                    // InternalBeeLangTestLanguage.g:12282:6: ( rule__RequiredCapability__Group_3_1_4__0 )
                    // InternalBeeLangTestLanguage.g:12282:7: rule__RequiredCapability__Group_3_1_4__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__RequiredCapability__Group_3_1_4__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getRequiredCapabilityAccess().getGroup_3_1_4()); 
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 861, rule__RequiredCapability__UnorderedGroup_3_1__Impl_StartIndex); }

            	if (selected)
            		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1());
            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__UnorderedGroup_3_1__Impl"


    // $ANTLR start "rule__RequiredCapability__UnorderedGroup_3_1__0"
    // InternalBeeLangTestLanguage.g:12295:1: rule__RequiredCapability__UnorderedGroup_3_1__0 : rule__RequiredCapability__UnorderedGroup_3_1__Impl ( rule__RequiredCapability__UnorderedGroup_3_1__1 )? ;
    public final void rule__RequiredCapability__UnorderedGroup_3_1__0() throws RecognitionException {
        int rule__RequiredCapability__UnorderedGroup_3_1__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 862) ) { return ; }
            // InternalBeeLangTestLanguage.g:12299:1: ( rule__RequiredCapability__UnorderedGroup_3_1__Impl ( rule__RequiredCapability__UnorderedGroup_3_1__1 )? )
            // InternalBeeLangTestLanguage.g:12300:2: rule__RequiredCapability__UnorderedGroup_3_1__Impl ( rule__RequiredCapability__UnorderedGroup_3_1__1 )?
            {
            pushFollow(FOLLOW_84);
            rule__RequiredCapability__UnorderedGroup_3_1__Impl();

            state._fsp--;
            if (state.failed) return ;
            // InternalBeeLangTestLanguage.g:12301:2: ( rule__RequiredCapability__UnorderedGroup_3_1__1 )?
            int alt116=2;
            int LA116_0 = input.LA(1);

            if ( LA116_0 == 54 && getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 0) ) {
                alt116=1;
            }
            else if ( LA116_0 == 73 && getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 1) ) {
                alt116=1;
            }
            else if ( LA116_0 == 57 && getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 2) ) {
                alt116=1;
            }
            else if ( LA116_0 == 58 && getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 3) ) {
                alt116=1;
            }
            else if ( LA116_0 == 46 && getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 4) ) {
                alt116=1;
            }
            switch (alt116) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:0:0: rule__RequiredCapability__UnorderedGroup_3_1__1
                    {
                    pushFollow(FOLLOW_2);
                    rule__RequiredCapability__UnorderedGroup_3_1__1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 862, rule__RequiredCapability__UnorderedGroup_3_1__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__UnorderedGroup_3_1__0"


    // $ANTLR start "rule__RequiredCapability__UnorderedGroup_3_1__1"
    // InternalBeeLangTestLanguage.g:12307:1: rule__RequiredCapability__UnorderedGroup_3_1__1 : rule__RequiredCapability__UnorderedGroup_3_1__Impl ( rule__RequiredCapability__UnorderedGroup_3_1__2 )? ;
    public final void rule__RequiredCapability__UnorderedGroup_3_1__1() throws RecognitionException {
        int rule__RequiredCapability__UnorderedGroup_3_1__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 863) ) { return ; }
            // InternalBeeLangTestLanguage.g:12311:1: ( rule__RequiredCapability__UnorderedGroup_3_1__Impl ( rule__RequiredCapability__UnorderedGroup_3_1__2 )? )
            // InternalBeeLangTestLanguage.g:12312:2: rule__RequiredCapability__UnorderedGroup_3_1__Impl ( rule__RequiredCapability__UnorderedGroup_3_1__2 )?
            {
            pushFollow(FOLLOW_84);
            rule__RequiredCapability__UnorderedGroup_3_1__Impl();

            state._fsp--;
            if (state.failed) return ;
            // InternalBeeLangTestLanguage.g:12313:2: ( rule__RequiredCapability__UnorderedGroup_3_1__2 )?
            int alt117=2;
            int LA117_0 = input.LA(1);

            if ( LA117_0 == 54 && getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 0) ) {
                alt117=1;
            }
            else if ( LA117_0 == 73 && getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 1) ) {
                alt117=1;
            }
            else if ( LA117_0 == 57 && getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 2) ) {
                alt117=1;
            }
            else if ( LA117_0 == 58 && getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 3) ) {
                alt117=1;
            }
            else if ( LA117_0 == 46 && getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 4) ) {
                alt117=1;
            }
            switch (alt117) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:0:0: rule__RequiredCapability__UnorderedGroup_3_1__2
                    {
                    pushFollow(FOLLOW_2);
                    rule__RequiredCapability__UnorderedGroup_3_1__2();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 863, rule__RequiredCapability__UnorderedGroup_3_1__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__UnorderedGroup_3_1__1"


    // $ANTLR start "rule__RequiredCapability__UnorderedGroup_3_1__2"
    // InternalBeeLangTestLanguage.g:12319:1: rule__RequiredCapability__UnorderedGroup_3_1__2 : rule__RequiredCapability__UnorderedGroup_3_1__Impl ( rule__RequiredCapability__UnorderedGroup_3_1__3 )? ;
    public final void rule__RequiredCapability__UnorderedGroup_3_1__2() throws RecognitionException {
        int rule__RequiredCapability__UnorderedGroup_3_1__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 864) ) { return ; }
            // InternalBeeLangTestLanguage.g:12323:1: ( rule__RequiredCapability__UnorderedGroup_3_1__Impl ( rule__RequiredCapability__UnorderedGroup_3_1__3 )? )
            // InternalBeeLangTestLanguage.g:12324:2: rule__RequiredCapability__UnorderedGroup_3_1__Impl ( rule__RequiredCapability__UnorderedGroup_3_1__3 )?
            {
            pushFollow(FOLLOW_84);
            rule__RequiredCapability__UnorderedGroup_3_1__Impl();

            state._fsp--;
            if (state.failed) return ;
            // InternalBeeLangTestLanguage.g:12325:2: ( rule__RequiredCapability__UnorderedGroup_3_1__3 )?
            int alt118=2;
            int LA118_0 = input.LA(1);

            if ( LA118_0 == 54 && getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 0) ) {
                alt118=1;
            }
            else if ( LA118_0 == 73 && getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 1) ) {
                alt118=1;
            }
            else if ( LA118_0 == 57 && getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 2) ) {
                alt118=1;
            }
            else if ( LA118_0 == 58 && getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 3) ) {
                alt118=1;
            }
            else if ( LA118_0 == 46 && getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 4) ) {
                alt118=1;
            }
            switch (alt118) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:0:0: rule__RequiredCapability__UnorderedGroup_3_1__3
                    {
                    pushFollow(FOLLOW_2);
                    rule__RequiredCapability__UnorderedGroup_3_1__3();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 864, rule__RequiredCapability__UnorderedGroup_3_1__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__UnorderedGroup_3_1__2"


    // $ANTLR start "rule__RequiredCapability__UnorderedGroup_3_1__3"
    // InternalBeeLangTestLanguage.g:12331:1: rule__RequiredCapability__UnorderedGroup_3_1__3 : rule__RequiredCapability__UnorderedGroup_3_1__Impl ( rule__RequiredCapability__UnorderedGroup_3_1__4 )? ;
    public final void rule__RequiredCapability__UnorderedGroup_3_1__3() throws RecognitionException {
        int rule__RequiredCapability__UnorderedGroup_3_1__3_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 865) ) { return ; }
            // InternalBeeLangTestLanguage.g:12335:1: ( rule__RequiredCapability__UnorderedGroup_3_1__Impl ( rule__RequiredCapability__UnorderedGroup_3_1__4 )? )
            // InternalBeeLangTestLanguage.g:12336:2: rule__RequiredCapability__UnorderedGroup_3_1__Impl ( rule__RequiredCapability__UnorderedGroup_3_1__4 )?
            {
            pushFollow(FOLLOW_84);
            rule__RequiredCapability__UnorderedGroup_3_1__Impl();

            state._fsp--;
            if (state.failed) return ;
            // InternalBeeLangTestLanguage.g:12337:2: ( rule__RequiredCapability__UnorderedGroup_3_1__4 )?
            int alt119=2;
            int LA119_0 = input.LA(1);

            if ( LA119_0 == 54 && getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 0) ) {
                alt119=1;
            }
            else if ( LA119_0 == 73 && getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 1) ) {
                alt119=1;
            }
            else if ( LA119_0 == 57 && getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 2) ) {
                alt119=1;
            }
            else if ( LA119_0 == 58 && getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 3) ) {
                alt119=1;
            }
            else if ( LA119_0 == 46 && getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 4) ) {
                alt119=1;
            }
            switch (alt119) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:0:0: rule__RequiredCapability__UnorderedGroup_3_1__4
                    {
                    pushFollow(FOLLOW_2);
                    rule__RequiredCapability__UnorderedGroup_3_1__4();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 865, rule__RequiredCapability__UnorderedGroup_3_1__3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__UnorderedGroup_3_1__3"


    // $ANTLR start "rule__RequiredCapability__UnorderedGroup_3_1__4"
    // InternalBeeLangTestLanguage.g:12343:1: rule__RequiredCapability__UnorderedGroup_3_1__4 : rule__RequiredCapability__UnorderedGroup_3_1__Impl ;
    public final void rule__RequiredCapability__UnorderedGroup_3_1__4() throws RecognitionException {
        int rule__RequiredCapability__UnorderedGroup_3_1__4_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 866) ) { return ; }
            // InternalBeeLangTestLanguage.g:12347:1: ( rule__RequiredCapability__UnorderedGroup_3_1__Impl )
            // InternalBeeLangTestLanguage.g:12348:2: rule__RequiredCapability__UnorderedGroup_3_1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__RequiredCapability__UnorderedGroup_3_1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 866, rule__RequiredCapability__UnorderedGroup_3_1__4_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__UnorderedGroup_3_1__4"


    // $ANTLR start "rule__Model__UnitsAssignment_0"
    // InternalBeeLangTestLanguage.g:12355:1: rule__Model__UnitsAssignment_0 : ( ruleUnit ) ;
    public final void rule__Model__UnitsAssignment_0() throws RecognitionException {
        int rule__Model__UnitsAssignment_0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 867) ) { return ; }
            // InternalBeeLangTestLanguage.g:12359:1: ( ( ruleUnit ) )
            // InternalBeeLangTestLanguage.g:12360:2: ( ruleUnit )
            {
            // InternalBeeLangTestLanguage.g:12360:2: ( ruleUnit )
            // InternalBeeLangTestLanguage.g:12361:3: ruleUnit
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getModelAccess().getUnitsUnitParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleUnit();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getModelAccess().getUnitsUnitParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 867, rule__Model__UnitsAssignment_0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Model__UnitsAssignment_0"


    // $ANTLR start "rule__Model__FunctionsAssignment_1"
    // InternalBeeLangTestLanguage.g:12370:1: rule__Model__FunctionsAssignment_1 : ( ruleFunction ) ;
    public final void rule__Model__FunctionsAssignment_1() throws RecognitionException {
        int rule__Model__FunctionsAssignment_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 868) ) { return ; }
            // InternalBeeLangTestLanguage.g:12374:1: ( ( ruleFunction ) )
            // InternalBeeLangTestLanguage.g:12375:2: ( ruleFunction )
            {
            // InternalBeeLangTestLanguage.g:12375:2: ( ruleFunction )
            // InternalBeeLangTestLanguage.g:12376:3: ruleFunction
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getModelAccess().getFunctionsFunctionParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleFunction();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getModelAccess().getFunctionsFunctionParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 868, rule__Model__FunctionsAssignment_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Model__FunctionsAssignment_1"


    // $ANTLR start "rule__Unit__DocumentationAssignment_1"
    // InternalBeeLangTestLanguage.g:12385:1: rule__Unit__DocumentationAssignment_1 : ( RULE_DOCUMENTATION ) ;
    public final void rule__Unit__DocumentationAssignment_1() throws RecognitionException {
        int rule__Unit__DocumentationAssignment_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 869) ) { return ; }
            // InternalBeeLangTestLanguage.g:12389:1: ( ( RULE_DOCUMENTATION ) )
            // InternalBeeLangTestLanguage.g:12390:2: ( RULE_DOCUMENTATION )
            {
            // InternalBeeLangTestLanguage.g:12390:2: ( RULE_DOCUMENTATION )
            // InternalBeeLangTestLanguage.g:12391:3: RULE_DOCUMENTATION
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getDocumentationDOCUMENTATIONTerminalRuleCall_1_0()); 
            }
            match(input,RULE_DOCUMENTATION,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getDocumentationDOCUMENTATIONTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 869, rule__Unit__DocumentationAssignment_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__DocumentationAssignment_1"


    // $ANTLR start "rule__Unit__NameAssignment_3"
    // InternalBeeLangTestLanguage.g:12400:1: rule__Unit__NameAssignment_3 : ( RULE_ID ) ;
    public final void rule__Unit__NameAssignment_3() throws RecognitionException {
        int rule__Unit__NameAssignment_3_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 870) ) { return ; }
            // InternalBeeLangTestLanguage.g:12404:1: ( ( RULE_ID ) )
            // InternalBeeLangTestLanguage.g:12405:2: ( RULE_ID )
            {
            // InternalBeeLangTestLanguage.g:12405:2: ( RULE_ID )
            // InternalBeeLangTestLanguage.g:12406:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getNameIDTerminalRuleCall_3_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getNameIDTerminalRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 870, rule__Unit__NameAssignment_3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__NameAssignment_3"


    // $ANTLR start "rule__Unit__VersionAssignment_4_1"
    // InternalBeeLangTestLanguage.g:12415:1: rule__Unit__VersionAssignment_4_1 : ( RULE_ID ) ;
    public final void rule__Unit__VersionAssignment_4_1() throws RecognitionException {
        int rule__Unit__VersionAssignment_4_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 871) ) { return ; }
            // InternalBeeLangTestLanguage.g:12419:1: ( ( RULE_ID ) )
            // InternalBeeLangTestLanguage.g:12420:2: ( RULE_ID )
            {
            // InternalBeeLangTestLanguage.g:12420:2: ( RULE_ID )
            // InternalBeeLangTestLanguage.g:12421:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getVersionIDTerminalRuleCall_4_1_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getVersionIDTerminalRuleCall_4_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 871, rule__Unit__VersionAssignment_4_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__VersionAssignment_4_1"


    // $ANTLR start "rule__Unit__ImplementsAssignment_5_1"
    // InternalBeeLangTestLanguage.g:12430:1: rule__Unit__ImplementsAssignment_5_1 : ( ruleSimpleTypeRef ) ;
    public final void rule__Unit__ImplementsAssignment_5_1() throws RecognitionException {
        int rule__Unit__ImplementsAssignment_5_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 872) ) { return ; }
            // InternalBeeLangTestLanguage.g:12434:1: ( ( ruleSimpleTypeRef ) )
            // InternalBeeLangTestLanguage.g:12435:2: ( ruleSimpleTypeRef )
            {
            // InternalBeeLangTestLanguage.g:12435:2: ( ruleSimpleTypeRef )
            // InternalBeeLangTestLanguage.g:12436:3: ruleSimpleTypeRef
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getImplementsSimpleTypeRefParserRuleCall_5_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSimpleTypeRef();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getImplementsSimpleTypeRefParserRuleCall_5_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 872, rule__Unit__ImplementsAssignment_5_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__ImplementsAssignment_5_1"


    // $ANTLR start "rule__Unit__ImplementsAssignment_5_2_1"
    // InternalBeeLangTestLanguage.g:12445:1: rule__Unit__ImplementsAssignment_5_2_1 : ( ruleSimpleTypeRef ) ;
    public final void rule__Unit__ImplementsAssignment_5_2_1() throws RecognitionException {
        int rule__Unit__ImplementsAssignment_5_2_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 873) ) { return ; }
            // InternalBeeLangTestLanguage.g:12449:1: ( ( ruleSimpleTypeRef ) )
            // InternalBeeLangTestLanguage.g:12450:2: ( ruleSimpleTypeRef )
            {
            // InternalBeeLangTestLanguage.g:12450:2: ( ruleSimpleTypeRef )
            // InternalBeeLangTestLanguage.g:12451:3: ruleSimpleTypeRef
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getImplementsSimpleTypeRefParserRuleCall_5_2_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSimpleTypeRef();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getImplementsSimpleTypeRefParserRuleCall_5_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 873, rule__Unit__ImplementsAssignment_5_2_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__ImplementsAssignment_5_2_1"


    // $ANTLR start "rule__Unit__SourceLocationAssignment_7_0_2"
    // InternalBeeLangTestLanguage.g:12460:1: rule__Unit__SourceLocationAssignment_7_0_2 : ( rulePath ) ;
    public final void rule__Unit__SourceLocationAssignment_7_0_2() throws RecognitionException {
        int rule__Unit__SourceLocationAssignment_7_0_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 874) ) { return ; }
            // InternalBeeLangTestLanguage.g:12464:1: ( ( rulePath ) )
            // InternalBeeLangTestLanguage.g:12465:2: ( rulePath )
            {
            // InternalBeeLangTestLanguage.g:12465:2: ( rulePath )
            // InternalBeeLangTestLanguage.g:12466:3: rulePath
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getSourceLocationPathParserRuleCall_7_0_2_0()); 
            }
            pushFollow(FOLLOW_2);
            rulePath();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getSourceLocationPathParserRuleCall_7_0_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 874, rule__Unit__SourceLocationAssignment_7_0_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__SourceLocationAssignment_7_0_2"


    // $ANTLR start "rule__Unit__OutputLocationAssignment_7_1_2"
    // InternalBeeLangTestLanguage.g:12475:1: rule__Unit__OutputLocationAssignment_7_1_2 : ( rulePath ) ;
    public final void rule__Unit__OutputLocationAssignment_7_1_2() throws RecognitionException {
        int rule__Unit__OutputLocationAssignment_7_1_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 875) ) { return ; }
            // InternalBeeLangTestLanguage.g:12479:1: ( ( rulePath ) )
            // InternalBeeLangTestLanguage.g:12480:2: ( rulePath )
            {
            // InternalBeeLangTestLanguage.g:12480:2: ( rulePath )
            // InternalBeeLangTestLanguage.g:12481:3: rulePath
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getOutputLocationPathParserRuleCall_7_1_2_0()); 
            }
            pushFollow(FOLLOW_2);
            rulePath();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getOutputLocationPathParserRuleCall_7_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 875, rule__Unit__OutputLocationAssignment_7_1_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__OutputLocationAssignment_7_1_2"


    // $ANTLR start "rule__Unit__ProvidedCapabilitiesAssignment_7_2_2"
    // InternalBeeLangTestLanguage.g:12490:1: rule__Unit__ProvidedCapabilitiesAssignment_7_2_2 : ( ruleProvidedCapability ) ;
    public final void rule__Unit__ProvidedCapabilitiesAssignment_7_2_2() throws RecognitionException {
        int rule__Unit__ProvidedCapabilitiesAssignment_7_2_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 876) ) { return ; }
            // InternalBeeLangTestLanguage.g:12494:1: ( ( ruleProvidedCapability ) )
            // InternalBeeLangTestLanguage.g:12495:2: ( ruleProvidedCapability )
            {
            // InternalBeeLangTestLanguage.g:12495:2: ( ruleProvidedCapability )
            // InternalBeeLangTestLanguage.g:12496:3: ruleProvidedCapability
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getProvidedCapabilitiesProvidedCapabilityParserRuleCall_7_2_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleProvidedCapability();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getProvidedCapabilitiesProvidedCapabilityParserRuleCall_7_2_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 876, rule__Unit__ProvidedCapabilitiesAssignment_7_2_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__ProvidedCapabilitiesAssignment_7_2_2"


    // $ANTLR start "rule__Unit__RequiredCapabilitiesAssignment_7_3_2"
    // InternalBeeLangTestLanguage.g:12505:1: rule__Unit__RequiredCapabilitiesAssignment_7_3_2 : ( ruleAliasedRequiredCapability ) ;
    public final void rule__Unit__RequiredCapabilitiesAssignment_7_3_2() throws RecognitionException {
        int rule__Unit__RequiredCapabilitiesAssignment_7_3_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 877) ) { return ; }
            // InternalBeeLangTestLanguage.g:12509:1: ( ( ruleAliasedRequiredCapability ) )
            // InternalBeeLangTestLanguage.g:12510:2: ( ruleAliasedRequiredCapability )
            {
            // InternalBeeLangTestLanguage.g:12510:2: ( ruleAliasedRequiredCapability )
            // InternalBeeLangTestLanguage.g:12511:3: ruleAliasedRequiredCapability
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getRequiredCapabilitiesAliasedRequiredCapabilityParserRuleCall_7_3_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAliasedRequiredCapability();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getRequiredCapabilitiesAliasedRequiredCapabilityParserRuleCall_7_3_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 877, rule__Unit__RequiredCapabilitiesAssignment_7_3_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__RequiredCapabilitiesAssignment_7_3_2"


    // $ANTLR start "rule__Unit__MetaRequiredCapabilitiesAssignment_7_4_3"
    // InternalBeeLangTestLanguage.g:12520:1: rule__Unit__MetaRequiredCapabilitiesAssignment_7_4_3 : ( ruleRequiredCapability ) ;
    public final void rule__Unit__MetaRequiredCapabilitiesAssignment_7_4_3() throws RecognitionException {
        int rule__Unit__MetaRequiredCapabilitiesAssignment_7_4_3_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 878) ) { return ; }
            // InternalBeeLangTestLanguage.g:12524:1: ( ( ruleRequiredCapability ) )
            // InternalBeeLangTestLanguage.g:12525:2: ( ruleRequiredCapability )
            {
            // InternalBeeLangTestLanguage.g:12525:2: ( ruleRequiredCapability )
            // InternalBeeLangTestLanguage.g:12526:3: ruleRequiredCapability
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getMetaRequiredCapabilitiesRequiredCapabilityParserRuleCall_7_4_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleRequiredCapability();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getMetaRequiredCapabilitiesRequiredCapabilityParserRuleCall_7_4_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 878, rule__Unit__MetaRequiredCapabilitiesAssignment_7_4_3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__MetaRequiredCapabilitiesAssignment_7_4_3"


    // $ANTLR start "rule__Unit__FunctionsAssignment_7_5"
    // InternalBeeLangTestLanguage.g:12535:1: rule__Unit__FunctionsAssignment_7_5 : ( ruleFunction ) ;
    public final void rule__Unit__FunctionsAssignment_7_5() throws RecognitionException {
        int rule__Unit__FunctionsAssignment_7_5_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 879) ) { return ; }
            // InternalBeeLangTestLanguage.g:12539:1: ( ( ruleFunction ) )
            // InternalBeeLangTestLanguage.g:12540:2: ( ruleFunction )
            {
            // InternalBeeLangTestLanguage.g:12540:2: ( ruleFunction )
            // InternalBeeLangTestLanguage.g:12541:3: ruleFunction
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getFunctionsFunctionParserRuleCall_7_5_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleFunction();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getFunctionsFunctionParserRuleCall_7_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 879, rule__Unit__FunctionsAssignment_7_5_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__FunctionsAssignment_7_5"


    // $ANTLR start "rule__ProvidedCapability__NameSpaceAssignment_1_0"
    // InternalBeeLangTestLanguage.g:12550:1: rule__ProvidedCapability__NameSpaceAssignment_1_0 : ( RULE_ID ) ;
    public final void rule__ProvidedCapability__NameSpaceAssignment_1_0() throws RecognitionException {
        int rule__ProvidedCapability__NameSpaceAssignment_1_0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 880) ) { return ; }
            // InternalBeeLangTestLanguage.g:12554:1: ( ( RULE_ID ) )
            // InternalBeeLangTestLanguage.g:12555:2: ( RULE_ID )
            {
            // InternalBeeLangTestLanguage.g:12555:2: ( RULE_ID )
            // InternalBeeLangTestLanguage.g:12556:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProvidedCapabilityAccess().getNameSpaceIDTerminalRuleCall_1_0_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getProvidedCapabilityAccess().getNameSpaceIDTerminalRuleCall_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 880, rule__ProvidedCapability__NameSpaceAssignment_1_0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__NameSpaceAssignment_1_0"


    // $ANTLR start "rule__ProvidedCapability__CondExprAssignment_2_1_0_2"
    // InternalBeeLangTestLanguage.g:12565:1: rule__ProvidedCapability__CondExprAssignment_2_1_0_2 : ( ruleExpression ) ;
    public final void rule__ProvidedCapability__CondExprAssignment_2_1_0_2() throws RecognitionException {
        int rule__ProvidedCapability__CondExprAssignment_2_1_0_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 881) ) { return ; }
            // InternalBeeLangTestLanguage.g:12569:1: ( ( ruleExpression ) )
            // InternalBeeLangTestLanguage.g:12570:2: ( ruleExpression )
            {
            // InternalBeeLangTestLanguage.g:12570:2: ( ruleExpression )
            // InternalBeeLangTestLanguage.g:12571:3: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProvidedCapabilityAccess().getCondExprExpressionParserRuleCall_2_1_0_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getProvidedCapabilityAccess().getCondExprExpressionParserRuleCall_2_1_0_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 881, rule__ProvidedCapability__CondExprAssignment_2_1_0_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__CondExprAssignment_2_1_0_2"


    // $ANTLR start "rule__ProvidedCapability__NameAssignment_2_1_1_2"
    // InternalBeeLangTestLanguage.g:12580:1: rule__ProvidedCapability__NameAssignment_2_1_1_2 : ( RULE_ID ) ;
    public final void rule__ProvidedCapability__NameAssignment_2_1_1_2() throws RecognitionException {
        int rule__ProvidedCapability__NameAssignment_2_1_1_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 882) ) { return ; }
            // InternalBeeLangTestLanguage.g:12584:1: ( ( RULE_ID ) )
            // InternalBeeLangTestLanguage.g:12585:2: ( RULE_ID )
            {
            // InternalBeeLangTestLanguage.g:12585:2: ( RULE_ID )
            // InternalBeeLangTestLanguage.g:12586:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProvidedCapabilityAccess().getNameIDTerminalRuleCall_2_1_1_2_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getProvidedCapabilityAccess().getNameIDTerminalRuleCall_2_1_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 882, rule__ProvidedCapability__NameAssignment_2_1_1_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__NameAssignment_2_1_1_2"


    // $ANTLR start "rule__ProvidedCapability__VersionAssignment_2_1_2_2"
    // InternalBeeLangTestLanguage.g:12595:1: rule__ProvidedCapability__VersionAssignment_2_1_2_2 : ( RULE_ID ) ;
    public final void rule__ProvidedCapability__VersionAssignment_2_1_2_2() throws RecognitionException {
        int rule__ProvidedCapability__VersionAssignment_2_1_2_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 883) ) { return ; }
            // InternalBeeLangTestLanguage.g:12599:1: ( ( RULE_ID ) )
            // InternalBeeLangTestLanguage.g:12600:2: ( RULE_ID )
            {
            // InternalBeeLangTestLanguage.g:12600:2: ( RULE_ID )
            // InternalBeeLangTestLanguage.g:12601:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProvidedCapabilityAccess().getVersionIDTerminalRuleCall_2_1_2_2_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getProvidedCapabilityAccess().getVersionIDTerminalRuleCall_2_1_2_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 883, rule__ProvidedCapability__VersionAssignment_2_1_2_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__VersionAssignment_2_1_2_2"


    // $ANTLR start "rule__AliasedRequiredCapability__NameSpaceAssignment_0_0"
    // InternalBeeLangTestLanguage.g:12610:1: rule__AliasedRequiredCapability__NameSpaceAssignment_0_0 : ( RULE_ID ) ;
    public final void rule__AliasedRequiredCapability__NameSpaceAssignment_0_0() throws RecognitionException {
        int rule__AliasedRequiredCapability__NameSpaceAssignment_0_0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 884) ) { return ; }
            // InternalBeeLangTestLanguage.g:12614:1: ( ( RULE_ID ) )
            // InternalBeeLangTestLanguage.g:12615:2: ( RULE_ID )
            {
            // InternalBeeLangTestLanguage.g:12615:2: ( RULE_ID )
            // InternalBeeLangTestLanguage.g:12616:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAliasedRequiredCapabilityAccess().getNameSpaceIDTerminalRuleCall_0_0_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAliasedRequiredCapabilityAccess().getNameSpaceIDTerminalRuleCall_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 884, rule__AliasedRequiredCapability__NameSpaceAssignment_0_0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__NameSpaceAssignment_0_0"


    // $ANTLR start "rule__AliasedRequiredCapability__NameAssignment_1"
    // InternalBeeLangTestLanguage.g:12625:1: rule__AliasedRequiredCapability__NameAssignment_1 : ( RULE_ID ) ;
    public final void rule__AliasedRequiredCapability__NameAssignment_1() throws RecognitionException {
        int rule__AliasedRequiredCapability__NameAssignment_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 885) ) { return ; }
            // InternalBeeLangTestLanguage.g:12629:1: ( ( RULE_ID ) )
            // InternalBeeLangTestLanguage.g:12630:2: ( RULE_ID )
            {
            // InternalBeeLangTestLanguage.g:12630:2: ( RULE_ID )
            // InternalBeeLangTestLanguage.g:12631:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAliasedRequiredCapabilityAccess().getNameIDTerminalRuleCall_1_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAliasedRequiredCapabilityAccess().getNameIDTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 885, rule__AliasedRequiredCapability__NameAssignment_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__NameAssignment_1"


    // $ANTLR start "rule__AliasedRequiredCapability__AliasAssignment_2_1"
    // InternalBeeLangTestLanguage.g:12640:1: rule__AliasedRequiredCapability__AliasAssignment_2_1 : ( RULE_ID ) ;
    public final void rule__AliasedRequiredCapability__AliasAssignment_2_1() throws RecognitionException {
        int rule__AliasedRequiredCapability__AliasAssignment_2_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 886) ) { return ; }
            // InternalBeeLangTestLanguage.g:12644:1: ( ( RULE_ID ) )
            // InternalBeeLangTestLanguage.g:12645:2: ( RULE_ID )
            {
            // InternalBeeLangTestLanguage.g:12645:2: ( RULE_ID )
            // InternalBeeLangTestLanguage.g:12646:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAliasedRequiredCapabilityAccess().getAliasIDTerminalRuleCall_2_1_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAliasedRequiredCapabilityAccess().getAliasIDTerminalRuleCall_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 886, rule__AliasedRequiredCapability__AliasAssignment_2_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__AliasAssignment_2_1"


    // $ANTLR start "rule__AliasedRequiredCapability__CondExprAssignment_3_1_0_2"
    // InternalBeeLangTestLanguage.g:12655:1: rule__AliasedRequiredCapability__CondExprAssignment_3_1_0_2 : ( ruleExpression ) ;
    public final void rule__AliasedRequiredCapability__CondExprAssignment_3_1_0_2() throws RecognitionException {
        int rule__AliasedRequiredCapability__CondExprAssignment_3_1_0_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 887) ) { return ; }
            // InternalBeeLangTestLanguage.g:12659:1: ( ( ruleExpression ) )
            // InternalBeeLangTestLanguage.g:12660:2: ( ruleExpression )
            {
            // InternalBeeLangTestLanguage.g:12660:2: ( ruleExpression )
            // InternalBeeLangTestLanguage.g:12661:3: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAliasedRequiredCapabilityAccess().getCondExprExpressionParserRuleCall_3_1_0_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAliasedRequiredCapabilityAccess().getCondExprExpressionParserRuleCall_3_1_0_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 887, rule__AliasedRequiredCapability__CondExprAssignment_3_1_0_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__CondExprAssignment_3_1_0_2"


    // $ANTLR start "rule__AliasedRequiredCapability__GreedyAssignment_3_1_1_0"
    // InternalBeeLangTestLanguage.g:12670:1: rule__AliasedRequiredCapability__GreedyAssignment_3_1_1_0 : ( ( 'greedy' ) ) ;
    public final void rule__AliasedRequiredCapability__GreedyAssignment_3_1_1_0() throws RecognitionException {
        int rule__AliasedRequiredCapability__GreedyAssignment_3_1_1_0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 888) ) { return ; }
            // InternalBeeLangTestLanguage.g:12674:1: ( ( ( 'greedy' ) ) )
            // InternalBeeLangTestLanguage.g:12675:2: ( ( 'greedy' ) )
            {
            // InternalBeeLangTestLanguage.g:12675:2: ( ( 'greedy' ) )
            // InternalBeeLangTestLanguage.g:12676:3: ( 'greedy' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAliasedRequiredCapabilityAccess().getGreedyGreedyKeyword_3_1_1_0_0()); 
            }
            // InternalBeeLangTestLanguage.g:12677:3: ( 'greedy' )
            // InternalBeeLangTestLanguage.g:12678:4: 'greedy'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAliasedRequiredCapabilityAccess().getGreedyGreedyKeyword_3_1_1_0_0()); 
            }
            match(input,73,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAliasedRequiredCapabilityAccess().getGreedyGreedyKeyword_3_1_1_0_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAliasedRequiredCapabilityAccess().getGreedyGreedyKeyword_3_1_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 888, rule__AliasedRequiredCapability__GreedyAssignment_3_1_1_0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__GreedyAssignment_3_1_1_0"


    // $ANTLR start "rule__AliasedRequiredCapability__MinAssignment_3_1_2_2"
    // InternalBeeLangTestLanguage.g:12689:1: rule__AliasedRequiredCapability__MinAssignment_3_1_2_2 : ( RULE_INT ) ;
    public final void rule__AliasedRequiredCapability__MinAssignment_3_1_2_2() throws RecognitionException {
        int rule__AliasedRequiredCapability__MinAssignment_3_1_2_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 889) ) { return ; }
            // InternalBeeLangTestLanguage.g:12693:1: ( ( RULE_INT ) )
            // InternalBeeLangTestLanguage.g:12694:2: ( RULE_INT )
            {
            // InternalBeeLangTestLanguage.g:12694:2: ( RULE_INT )
            // InternalBeeLangTestLanguage.g:12695:3: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAliasedRequiredCapabilityAccess().getMinINTTerminalRuleCall_3_1_2_2_0()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAliasedRequiredCapabilityAccess().getMinINTTerminalRuleCall_3_1_2_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 889, rule__AliasedRequiredCapability__MinAssignment_3_1_2_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__MinAssignment_3_1_2_2"


    // $ANTLR start "rule__AliasedRequiredCapability__MaxAssignment_3_1_3_2"
    // InternalBeeLangTestLanguage.g:12704:1: rule__AliasedRequiredCapability__MaxAssignment_3_1_3_2 : ( RULE_INT ) ;
    public final void rule__AliasedRequiredCapability__MaxAssignment_3_1_3_2() throws RecognitionException {
        int rule__AliasedRequiredCapability__MaxAssignment_3_1_3_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 890) ) { return ; }
            // InternalBeeLangTestLanguage.g:12708:1: ( ( RULE_INT ) )
            // InternalBeeLangTestLanguage.g:12709:2: ( RULE_INT )
            {
            // InternalBeeLangTestLanguage.g:12709:2: ( RULE_INT )
            // InternalBeeLangTestLanguage.g:12710:3: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAliasedRequiredCapabilityAccess().getMaxINTTerminalRuleCall_3_1_3_2_0()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAliasedRequiredCapabilityAccess().getMaxINTTerminalRuleCall_3_1_3_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 890, rule__AliasedRequiredCapability__MaxAssignment_3_1_3_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__MaxAssignment_3_1_3_2"


    // $ANTLR start "rule__AliasedRequiredCapability__VersionRangeAssignment_3_1_4_2"
    // InternalBeeLangTestLanguage.g:12719:1: rule__AliasedRequiredCapability__VersionRangeAssignment_3_1_4_2 : ( RULE_ID ) ;
    public final void rule__AliasedRequiredCapability__VersionRangeAssignment_3_1_4_2() throws RecognitionException {
        int rule__AliasedRequiredCapability__VersionRangeAssignment_3_1_4_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 891) ) { return ; }
            // InternalBeeLangTestLanguage.g:12723:1: ( ( RULE_ID ) )
            // InternalBeeLangTestLanguage.g:12724:2: ( RULE_ID )
            {
            // InternalBeeLangTestLanguage.g:12724:2: ( RULE_ID )
            // InternalBeeLangTestLanguage.g:12725:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAliasedRequiredCapabilityAccess().getVersionRangeIDTerminalRuleCall_3_1_4_2_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAliasedRequiredCapabilityAccess().getVersionRangeIDTerminalRuleCall_3_1_4_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 891, rule__AliasedRequiredCapability__VersionRangeAssignment_3_1_4_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__VersionRangeAssignment_3_1_4_2"


    // $ANTLR start "rule__RequiredCapability__NameSpaceAssignment_1_0"
    // InternalBeeLangTestLanguage.g:12734:1: rule__RequiredCapability__NameSpaceAssignment_1_0 : ( RULE_ID ) ;
    public final void rule__RequiredCapability__NameSpaceAssignment_1_0() throws RecognitionException {
        int rule__RequiredCapability__NameSpaceAssignment_1_0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 892) ) { return ; }
            // InternalBeeLangTestLanguage.g:12738:1: ( ( RULE_ID ) )
            // InternalBeeLangTestLanguage.g:12739:2: ( RULE_ID )
            {
            // InternalBeeLangTestLanguage.g:12739:2: ( RULE_ID )
            // InternalBeeLangTestLanguage.g:12740:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRequiredCapabilityAccess().getNameSpaceIDTerminalRuleCall_1_0_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRequiredCapabilityAccess().getNameSpaceIDTerminalRuleCall_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 892, rule__RequiredCapability__NameSpaceAssignment_1_0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__NameSpaceAssignment_1_0"


    // $ANTLR start "rule__RequiredCapability__NameAssignment_2"
    // InternalBeeLangTestLanguage.g:12749:1: rule__RequiredCapability__NameAssignment_2 : ( RULE_ID ) ;
    public final void rule__RequiredCapability__NameAssignment_2() throws RecognitionException {
        int rule__RequiredCapability__NameAssignment_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 893) ) { return ; }
            // InternalBeeLangTestLanguage.g:12753:1: ( ( RULE_ID ) )
            // InternalBeeLangTestLanguage.g:12754:2: ( RULE_ID )
            {
            // InternalBeeLangTestLanguage.g:12754:2: ( RULE_ID )
            // InternalBeeLangTestLanguage.g:12755:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRequiredCapabilityAccess().getNameIDTerminalRuleCall_2_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRequiredCapabilityAccess().getNameIDTerminalRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 893, rule__RequiredCapability__NameAssignment_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__NameAssignment_2"


    // $ANTLR start "rule__RequiredCapability__CondExprAssignment_3_1_0_2"
    // InternalBeeLangTestLanguage.g:12764:1: rule__RequiredCapability__CondExprAssignment_3_1_0_2 : ( ruleExpression ) ;
    public final void rule__RequiredCapability__CondExprAssignment_3_1_0_2() throws RecognitionException {
        int rule__RequiredCapability__CondExprAssignment_3_1_0_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 894) ) { return ; }
            // InternalBeeLangTestLanguage.g:12768:1: ( ( ruleExpression ) )
            // InternalBeeLangTestLanguage.g:12769:2: ( ruleExpression )
            {
            // InternalBeeLangTestLanguage.g:12769:2: ( ruleExpression )
            // InternalBeeLangTestLanguage.g:12770:3: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRequiredCapabilityAccess().getCondExprExpressionParserRuleCall_3_1_0_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRequiredCapabilityAccess().getCondExprExpressionParserRuleCall_3_1_0_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 894, rule__RequiredCapability__CondExprAssignment_3_1_0_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__CondExprAssignment_3_1_0_2"


    // $ANTLR start "rule__RequiredCapability__GreedyAssignment_3_1_1_0"
    // InternalBeeLangTestLanguage.g:12779:1: rule__RequiredCapability__GreedyAssignment_3_1_1_0 : ( ( 'greedy' ) ) ;
    public final void rule__RequiredCapability__GreedyAssignment_3_1_1_0() throws RecognitionException {
        int rule__RequiredCapability__GreedyAssignment_3_1_1_0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 895) ) { return ; }
            // InternalBeeLangTestLanguage.g:12783:1: ( ( ( 'greedy' ) ) )
            // InternalBeeLangTestLanguage.g:12784:2: ( ( 'greedy' ) )
            {
            // InternalBeeLangTestLanguage.g:12784:2: ( ( 'greedy' ) )
            // InternalBeeLangTestLanguage.g:12785:3: ( 'greedy' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRequiredCapabilityAccess().getGreedyGreedyKeyword_3_1_1_0_0()); 
            }
            // InternalBeeLangTestLanguage.g:12786:3: ( 'greedy' )
            // InternalBeeLangTestLanguage.g:12787:4: 'greedy'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRequiredCapabilityAccess().getGreedyGreedyKeyword_3_1_1_0_0()); 
            }
            match(input,73,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRequiredCapabilityAccess().getGreedyGreedyKeyword_3_1_1_0_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRequiredCapabilityAccess().getGreedyGreedyKeyword_3_1_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 895, rule__RequiredCapability__GreedyAssignment_3_1_1_0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__GreedyAssignment_3_1_1_0"


    // $ANTLR start "rule__RequiredCapability__MinAssignment_3_1_2_2"
    // InternalBeeLangTestLanguage.g:12798:1: rule__RequiredCapability__MinAssignment_3_1_2_2 : ( RULE_INT ) ;
    public final void rule__RequiredCapability__MinAssignment_3_1_2_2() throws RecognitionException {
        int rule__RequiredCapability__MinAssignment_3_1_2_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 896) ) { return ; }
            // InternalBeeLangTestLanguage.g:12802:1: ( ( RULE_INT ) )
            // InternalBeeLangTestLanguage.g:12803:2: ( RULE_INT )
            {
            // InternalBeeLangTestLanguage.g:12803:2: ( RULE_INT )
            // InternalBeeLangTestLanguage.g:12804:3: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRequiredCapabilityAccess().getMinINTTerminalRuleCall_3_1_2_2_0()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRequiredCapabilityAccess().getMinINTTerminalRuleCall_3_1_2_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 896, rule__RequiredCapability__MinAssignment_3_1_2_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__MinAssignment_3_1_2_2"


    // $ANTLR start "rule__RequiredCapability__MaxAssignment_3_1_3_2"
    // InternalBeeLangTestLanguage.g:12813:1: rule__RequiredCapability__MaxAssignment_3_1_3_2 : ( RULE_INT ) ;
    public final void rule__RequiredCapability__MaxAssignment_3_1_3_2() throws RecognitionException {
        int rule__RequiredCapability__MaxAssignment_3_1_3_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 897) ) { return ; }
            // InternalBeeLangTestLanguage.g:12817:1: ( ( RULE_INT ) )
            // InternalBeeLangTestLanguage.g:12818:2: ( RULE_INT )
            {
            // InternalBeeLangTestLanguage.g:12818:2: ( RULE_INT )
            // InternalBeeLangTestLanguage.g:12819:3: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRequiredCapabilityAccess().getMaxINTTerminalRuleCall_3_1_3_2_0()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRequiredCapabilityAccess().getMaxINTTerminalRuleCall_3_1_3_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 897, rule__RequiredCapability__MaxAssignment_3_1_3_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__MaxAssignment_3_1_3_2"


    // $ANTLR start "rule__RequiredCapability__VersionRangeAssignment_3_1_4_2"
    // InternalBeeLangTestLanguage.g:12828:1: rule__RequiredCapability__VersionRangeAssignment_3_1_4_2 : ( RULE_ID ) ;
    public final void rule__RequiredCapability__VersionRangeAssignment_3_1_4_2() throws RecognitionException {
        int rule__RequiredCapability__VersionRangeAssignment_3_1_4_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 898) ) { return ; }
            // InternalBeeLangTestLanguage.g:12832:1: ( ( RULE_ID ) )
            // InternalBeeLangTestLanguage.g:12833:2: ( RULE_ID )
            {
            // InternalBeeLangTestLanguage.g:12833:2: ( RULE_ID )
            // InternalBeeLangTestLanguage.g:12834:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRequiredCapabilityAccess().getVersionRangeIDTerminalRuleCall_3_1_4_2_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRequiredCapabilityAccess().getVersionRangeIDTerminalRuleCall_3_1_4_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 898, rule__RequiredCapability__VersionRangeAssignment_3_1_4_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__VersionRangeAssignment_3_1_4_2"


    // $ANTLR start "rule__ParameterList__ParametersAssignment_0"
    // InternalBeeLangTestLanguage.g:12843:1: rule__ParameterList__ParametersAssignment_0 : ( ruleFirstParameter ) ;
    public final void rule__ParameterList__ParametersAssignment_0() throws RecognitionException {
        int rule__ParameterList__ParametersAssignment_0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 899) ) { return ; }
            // InternalBeeLangTestLanguage.g:12847:1: ( ( ruleFirstParameter ) )
            // InternalBeeLangTestLanguage.g:12848:2: ( ruleFirstParameter )
            {
            // InternalBeeLangTestLanguage.g:12848:2: ( ruleFirstParameter )
            // InternalBeeLangTestLanguage.g:12849:3: ruleFirstParameter
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterListAccess().getParametersFirstParameterParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleFirstParameter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterListAccess().getParametersFirstParameterParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 899, rule__ParameterList__ParametersAssignment_0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterList__ParametersAssignment_0"


    // $ANTLR start "rule__ParameterList__ParametersAssignment_1_1"
    // InternalBeeLangTestLanguage.g:12858:1: rule__ParameterList__ParametersAssignment_1_1 : ( ruleFirstParameter ) ;
    public final void rule__ParameterList__ParametersAssignment_1_1() throws RecognitionException {
        int rule__ParameterList__ParametersAssignment_1_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 900) ) { return ; }
            // InternalBeeLangTestLanguage.g:12862:1: ( ( ruleFirstParameter ) )
            // InternalBeeLangTestLanguage.g:12863:2: ( ruleFirstParameter )
            {
            // InternalBeeLangTestLanguage.g:12863:2: ( ruleFirstParameter )
            // InternalBeeLangTestLanguage.g:12864:3: ruleFirstParameter
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterListAccess().getParametersFirstParameterParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleFirstParameter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterListAccess().getParametersFirstParameterParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 900, rule__ParameterList__ParametersAssignment_1_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterList__ParametersAssignment_1_1"


    // $ANTLR start "rule__Parameter__ExprAssignment"
    // InternalBeeLangTestLanguage.g:12873:1: rule__Parameter__ExprAssignment : ( ruleExpression ) ;
    public final void rule__Parameter__ExprAssignment() throws RecognitionException {
        int rule__Parameter__ExprAssignment_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 901) ) { return ; }
            // InternalBeeLangTestLanguage.g:12877:1: ( ( ruleExpression ) )
            // InternalBeeLangTestLanguage.g:12878:2: ( ruleExpression )
            {
            // InternalBeeLangTestLanguage.g:12878:2: ( ruleExpression )
            // InternalBeeLangTestLanguage.g:12879:3: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterAccess().getExprExpressionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterAccess().getExprExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 901, rule__Parameter__ExprAssignment_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Parameter__ExprAssignment"


    // $ANTLR start "rule__ClosureParameter__ExprAssignment"
    // InternalBeeLangTestLanguage.g:12888:1: rule__ClosureParameter__ExprAssignment : ( ruleClosureExpression ) ;
    public final void rule__ClosureParameter__ExprAssignment() throws RecognitionException {
        int rule__ClosureParameter__ExprAssignment_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 902) ) { return ; }
            // InternalBeeLangTestLanguage.g:12892:1: ( ( ruleClosureExpression ) )
            // InternalBeeLangTestLanguage.g:12893:2: ( ruleClosureExpression )
            {
            // InternalBeeLangTestLanguage.g:12893:2: ( ruleClosureExpression )
            // InternalBeeLangTestLanguage.g:12894:3: ruleClosureExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureParameterAccess().getExprClosureExpressionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleClosureExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureParameterAccess().getExprClosureExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 902, rule__ClosureParameter__ExprAssignment_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureParameter__ExprAssignment"


    // $ANTLR start "rule__ParameterDeclaration__TypeAssignment_0"
    // InternalBeeLangTestLanguage.g:12903:1: rule__ParameterDeclaration__TypeAssignment_0 : ( ruleTypeRef ) ;
    public final void rule__ParameterDeclaration__TypeAssignment_0() throws RecognitionException {
        int rule__ParameterDeclaration__TypeAssignment_0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 903) ) { return ; }
            // InternalBeeLangTestLanguage.g:12907:1: ( ( ruleTypeRef ) )
            // InternalBeeLangTestLanguage.g:12908:2: ( ruleTypeRef )
            {
            // InternalBeeLangTestLanguage.g:12908:2: ( ruleTypeRef )
            // InternalBeeLangTestLanguage.g:12909:3: ruleTypeRef
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterDeclarationAccess().getTypeTypeRefParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleTypeRef();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterDeclarationAccess().getTypeTypeRefParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 903, rule__ParameterDeclaration__TypeAssignment_0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterDeclaration__TypeAssignment_0"


    // $ANTLR start "rule__ParameterDeclaration__NameAssignment_1"
    // InternalBeeLangTestLanguage.g:12918:1: rule__ParameterDeclaration__NameAssignment_1 : ( RULE_ID ) ;
    public final void rule__ParameterDeclaration__NameAssignment_1() throws RecognitionException {
        int rule__ParameterDeclaration__NameAssignment_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 904) ) { return ; }
            // InternalBeeLangTestLanguage.g:12922:1: ( ( RULE_ID ) )
            // InternalBeeLangTestLanguage.g:12923:2: ( RULE_ID )
            {
            // InternalBeeLangTestLanguage.g:12923:2: ( RULE_ID )
            // InternalBeeLangTestLanguage.g:12924:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterDeclarationAccess().getNameIDTerminalRuleCall_1_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterDeclarationAccess().getNameIDTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 904, rule__ParameterDeclaration__NameAssignment_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterDeclaration__NameAssignment_1"


    // $ANTLR start "rule__Function__DocumentationAssignment_0"
    // InternalBeeLangTestLanguage.g:12933:1: rule__Function__DocumentationAssignment_0 : ( RULE_DOCUMENTATION ) ;
    public final void rule__Function__DocumentationAssignment_0() throws RecognitionException {
        int rule__Function__DocumentationAssignment_0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 905) ) { return ; }
            // InternalBeeLangTestLanguage.g:12937:1: ( ( RULE_DOCUMENTATION ) )
            // InternalBeeLangTestLanguage.g:12938:2: ( RULE_DOCUMENTATION )
            {
            // InternalBeeLangTestLanguage.g:12938:2: ( RULE_DOCUMENTATION )
            // InternalBeeLangTestLanguage.g:12939:3: RULE_DOCUMENTATION
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getDocumentationDOCUMENTATIONTerminalRuleCall_0_0()); 
            }
            match(input,RULE_DOCUMENTATION,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getDocumentationDOCUMENTATIONTerminalRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 905, rule__Function__DocumentationAssignment_0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__DocumentationAssignment_0"


    // $ANTLR start "rule__Function__VisibilityAssignment_1"
    // InternalBeeLangTestLanguage.g:12948:1: rule__Function__VisibilityAssignment_1 : ( RULE_ID ) ;
    public final void rule__Function__VisibilityAssignment_1() throws RecognitionException {
        int rule__Function__VisibilityAssignment_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 906) ) { return ; }
            // InternalBeeLangTestLanguage.g:12952:1: ( ( RULE_ID ) )
            // InternalBeeLangTestLanguage.g:12953:2: ( RULE_ID )
            {
            // InternalBeeLangTestLanguage.g:12953:2: ( RULE_ID )
            // InternalBeeLangTestLanguage.g:12954:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getVisibilityIDTerminalRuleCall_1_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getVisibilityIDTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 906, rule__Function__VisibilityAssignment_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__VisibilityAssignment_1"


    // $ANTLR start "rule__Function__FinalAssignment_2"
    // InternalBeeLangTestLanguage.g:12963:1: rule__Function__FinalAssignment_2 : ( ( 'final' ) ) ;
    public final void rule__Function__FinalAssignment_2() throws RecognitionException {
        int rule__Function__FinalAssignment_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 907) ) { return ; }
            // InternalBeeLangTestLanguage.g:12967:1: ( ( ( 'final' ) ) )
            // InternalBeeLangTestLanguage.g:12968:2: ( ( 'final' ) )
            {
            // InternalBeeLangTestLanguage.g:12968:2: ( ( 'final' ) )
            // InternalBeeLangTestLanguage.g:12969:3: ( 'final' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getFinalFinalKeyword_2_0()); 
            }
            // InternalBeeLangTestLanguage.g:12970:3: ( 'final' )
            // InternalBeeLangTestLanguage.g:12971:4: 'final'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getFinalFinalKeyword_2_0()); 
            }
            match(input,74,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getFinalFinalKeyword_2_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getFinalFinalKeyword_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 907, rule__Function__FinalAssignment_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__FinalAssignment_2"


    // $ANTLR start "rule__Function__ReturnTypeAssignment_4"
    // InternalBeeLangTestLanguage.g:12982:1: rule__Function__ReturnTypeAssignment_4 : ( ruleTypeRef ) ;
    public final void rule__Function__ReturnTypeAssignment_4() throws RecognitionException {
        int rule__Function__ReturnTypeAssignment_4_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 908) ) { return ; }
            // InternalBeeLangTestLanguage.g:12986:1: ( ( ruleTypeRef ) )
            // InternalBeeLangTestLanguage.g:12987:2: ( ruleTypeRef )
            {
            // InternalBeeLangTestLanguage.g:12987:2: ( ruleTypeRef )
            // InternalBeeLangTestLanguage.g:12988:3: ruleTypeRef
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getReturnTypeTypeRefParserRuleCall_4_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleTypeRef();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getReturnTypeTypeRefParserRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 908, rule__Function__ReturnTypeAssignment_4_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__ReturnTypeAssignment_4"


    // $ANTLR start "rule__Function__NameAssignment_5"
    // InternalBeeLangTestLanguage.g:12997:1: rule__Function__NameAssignment_5 : ( RULE_ID ) ;
    public final void rule__Function__NameAssignment_5() throws RecognitionException {
        int rule__Function__NameAssignment_5_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 909) ) { return ; }
            // InternalBeeLangTestLanguage.g:13001:1: ( ( RULE_ID ) )
            // InternalBeeLangTestLanguage.g:13002:2: ( RULE_ID )
            {
            // InternalBeeLangTestLanguage.g:13002:2: ( RULE_ID )
            // InternalBeeLangTestLanguage.g:13003:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getNameIDTerminalRuleCall_5_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getNameIDTerminalRuleCall_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 909, rule__Function__NameAssignment_5_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__NameAssignment_5"


    // $ANTLR start "rule__Function__ParametersAssignment_6_1_0_0"
    // InternalBeeLangTestLanguage.g:13012:1: rule__Function__ParametersAssignment_6_1_0_0 : ( ruleParameterDeclaration ) ;
    public final void rule__Function__ParametersAssignment_6_1_0_0() throws RecognitionException {
        int rule__Function__ParametersAssignment_6_1_0_0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 910) ) { return ; }
            // InternalBeeLangTestLanguage.g:13016:1: ( ( ruleParameterDeclaration ) )
            // InternalBeeLangTestLanguage.g:13017:2: ( ruleParameterDeclaration )
            {
            // InternalBeeLangTestLanguage.g:13017:2: ( ruleParameterDeclaration )
            // InternalBeeLangTestLanguage.g:13018:3: ruleParameterDeclaration
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getParametersParameterDeclarationParserRuleCall_6_1_0_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleParameterDeclaration();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getParametersParameterDeclarationParserRuleCall_6_1_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 910, rule__Function__ParametersAssignment_6_1_0_0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__ParametersAssignment_6_1_0_0"


    // $ANTLR start "rule__Function__ParametersAssignment_6_1_0_1_1"
    // InternalBeeLangTestLanguage.g:13027:1: rule__Function__ParametersAssignment_6_1_0_1_1 : ( ruleParameterDeclaration ) ;
    public final void rule__Function__ParametersAssignment_6_1_0_1_1() throws RecognitionException {
        int rule__Function__ParametersAssignment_6_1_0_1_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 911) ) { return ; }
            // InternalBeeLangTestLanguage.g:13031:1: ( ( ruleParameterDeclaration ) )
            // InternalBeeLangTestLanguage.g:13032:2: ( ruleParameterDeclaration )
            {
            // InternalBeeLangTestLanguage.g:13032:2: ( ruleParameterDeclaration )
            // InternalBeeLangTestLanguage.g:13033:3: ruleParameterDeclaration
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getParametersParameterDeclarationParserRuleCall_6_1_0_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleParameterDeclaration();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getParametersParameterDeclarationParserRuleCall_6_1_0_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 911, rule__Function__ParametersAssignment_6_1_0_1_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__ParametersAssignment_6_1_0_1_1"


    // $ANTLR start "rule__Function__VarArgsAssignment_6_1_0_2_1"
    // InternalBeeLangTestLanguage.g:13042:1: rule__Function__VarArgsAssignment_6_1_0_2_1 : ( ( '...' ) ) ;
    public final void rule__Function__VarArgsAssignment_6_1_0_2_1() throws RecognitionException {
        int rule__Function__VarArgsAssignment_6_1_0_2_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 912) ) { return ; }
            // InternalBeeLangTestLanguage.g:13046:1: ( ( ( '...' ) ) )
            // InternalBeeLangTestLanguage.g:13047:2: ( ( '...' ) )
            {
            // InternalBeeLangTestLanguage.g:13047:2: ( ( '...' ) )
            // InternalBeeLangTestLanguage.g:13048:3: ( '...' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getVarArgsFullStopFullStopFullStopKeyword_6_1_0_2_1_0()); 
            }
            // InternalBeeLangTestLanguage.g:13049:3: ( '...' )
            // InternalBeeLangTestLanguage.g:13050:4: '...'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getVarArgsFullStopFullStopFullStopKeyword_6_1_0_2_1_0()); 
            }
            match(input,75,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getVarArgsFullStopFullStopFullStopKeyword_6_1_0_2_1_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getVarArgsFullStopFullStopFullStopKeyword_6_1_0_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 912, rule__Function__VarArgsAssignment_6_1_0_2_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__VarArgsAssignment_6_1_0_2_1"


    // $ANTLR start "rule__Function__ParametersAssignment_6_1_0_2_2"
    // InternalBeeLangTestLanguage.g:13061:1: rule__Function__ParametersAssignment_6_1_0_2_2 : ( ruleParameterDeclaration ) ;
    public final void rule__Function__ParametersAssignment_6_1_0_2_2() throws RecognitionException {
        int rule__Function__ParametersAssignment_6_1_0_2_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 913) ) { return ; }
            // InternalBeeLangTestLanguage.g:13065:1: ( ( ruleParameterDeclaration ) )
            // InternalBeeLangTestLanguage.g:13066:2: ( ruleParameterDeclaration )
            {
            // InternalBeeLangTestLanguage.g:13066:2: ( ruleParameterDeclaration )
            // InternalBeeLangTestLanguage.g:13067:3: ruleParameterDeclaration
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getParametersParameterDeclarationParserRuleCall_6_1_0_2_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleParameterDeclaration();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getParametersParameterDeclarationParserRuleCall_6_1_0_2_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 913, rule__Function__ParametersAssignment_6_1_0_2_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__ParametersAssignment_6_1_0_2_2"


    // $ANTLR start "rule__Function__VarArgsAssignment_6_1_1_0"
    // InternalBeeLangTestLanguage.g:13076:1: rule__Function__VarArgsAssignment_6_1_1_0 : ( ( '...' ) ) ;
    public final void rule__Function__VarArgsAssignment_6_1_1_0() throws RecognitionException {
        int rule__Function__VarArgsAssignment_6_1_1_0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 914) ) { return ; }
            // InternalBeeLangTestLanguage.g:13080:1: ( ( ( '...' ) ) )
            // InternalBeeLangTestLanguage.g:13081:2: ( ( '...' ) )
            {
            // InternalBeeLangTestLanguage.g:13081:2: ( ( '...' ) )
            // InternalBeeLangTestLanguage.g:13082:3: ( '...' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getVarArgsFullStopFullStopFullStopKeyword_6_1_1_0_0()); 
            }
            // InternalBeeLangTestLanguage.g:13083:3: ( '...' )
            // InternalBeeLangTestLanguage.g:13084:4: '...'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getVarArgsFullStopFullStopFullStopKeyword_6_1_1_0_0()); 
            }
            match(input,75,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getVarArgsFullStopFullStopFullStopKeyword_6_1_1_0_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getVarArgsFullStopFullStopFullStopKeyword_6_1_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 914, rule__Function__VarArgsAssignment_6_1_1_0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__VarArgsAssignment_6_1_1_0"


    // $ANTLR start "rule__Function__ParametersAssignment_6_1_1_1"
    // InternalBeeLangTestLanguage.g:13095:1: rule__Function__ParametersAssignment_6_1_1_1 : ( ruleParameterDeclaration ) ;
    public final void rule__Function__ParametersAssignment_6_1_1_1() throws RecognitionException {
        int rule__Function__ParametersAssignment_6_1_1_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 915) ) { return ; }
            // InternalBeeLangTestLanguage.g:13099:1: ( ( ruleParameterDeclaration ) )
            // InternalBeeLangTestLanguage.g:13100:2: ( ruleParameterDeclaration )
            {
            // InternalBeeLangTestLanguage.g:13100:2: ( ruleParameterDeclaration )
            // InternalBeeLangTestLanguage.g:13101:3: ruleParameterDeclaration
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getParametersParameterDeclarationParserRuleCall_6_1_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleParameterDeclaration();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getParametersParameterDeclarationParserRuleCall_6_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 915, rule__Function__ParametersAssignment_6_1_1_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__ParametersAssignment_6_1_1_1"


    // $ANTLR start "rule__Function__GuardAssignment_7_1"
    // InternalBeeLangTestLanguage.g:13110:1: rule__Function__GuardAssignment_7_1 : ( ruleGuardExpression ) ;
    public final void rule__Function__GuardAssignment_7_1() throws RecognitionException {
        int rule__Function__GuardAssignment_7_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 916) ) { return ; }
            // InternalBeeLangTestLanguage.g:13114:1: ( ( ruleGuardExpression ) )
            // InternalBeeLangTestLanguage.g:13115:2: ( ruleGuardExpression )
            {
            // InternalBeeLangTestLanguage.g:13115:2: ( ruleGuardExpression )
            // InternalBeeLangTestLanguage.g:13116:3: ruleGuardExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getGuardGuardExpressionParserRuleCall_7_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleGuardExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getGuardGuardExpressionParserRuleCall_7_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 916, rule__Function__GuardAssignment_7_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__GuardAssignment_7_1"


    // $ANTLR start "rule__Function__FuncExprAssignment_8_0_1"
    // InternalBeeLangTestLanguage.g:13125:1: rule__Function__FuncExprAssignment_8_0_1 : ( ruleExpression ) ;
    public final void rule__Function__FuncExprAssignment_8_0_1() throws RecognitionException {
        int rule__Function__FuncExprAssignment_8_0_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 917) ) { return ; }
            // InternalBeeLangTestLanguage.g:13129:1: ( ( ruleExpression ) )
            // InternalBeeLangTestLanguage.g:13130:2: ( ruleExpression )
            {
            // InternalBeeLangTestLanguage.g:13130:2: ( ruleExpression )
            // InternalBeeLangTestLanguage.g:13131:3: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getFuncExprExpressionParserRuleCall_8_0_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getFuncExprExpressionParserRuleCall_8_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 917, rule__Function__FuncExprAssignment_8_0_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__FuncExprAssignment_8_0_1"


    // $ANTLR start "rule__Function__FuncExprAssignment_8_1"
    // InternalBeeLangTestLanguage.g:13140:1: rule__Function__FuncExprAssignment_8_1 : ( ruleBlockExpression ) ;
    public final void rule__Function__FuncExprAssignment_8_1() throws RecognitionException {
        int rule__Function__FuncExprAssignment_8_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 918) ) { return ; }
            // InternalBeeLangTestLanguage.g:13144:1: ( ( ruleBlockExpression ) )
            // InternalBeeLangTestLanguage.g:13145:2: ( ruleBlockExpression )
            {
            // InternalBeeLangTestLanguage.g:13145:2: ( ruleBlockExpression )
            // InternalBeeLangTestLanguage.g:13146:3: ruleBlockExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getFuncExprBlockExpressionParserRuleCall_8_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleBlockExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getFuncExprBlockExpressionParserRuleCall_8_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 918, rule__Function__FuncExprAssignment_8_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__FuncExprAssignment_8_1"


    // $ANTLR start "rule__GuardExpression__GuardExprAssignment_0_1"
    // InternalBeeLangTestLanguage.g:13155:1: rule__GuardExpression__GuardExprAssignment_0_1 : ( ruleExpression ) ;
    public final void rule__GuardExpression__GuardExprAssignment_0_1() throws RecognitionException {
        int rule__GuardExpression__GuardExprAssignment_0_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 919) ) { return ; }
            // InternalBeeLangTestLanguage.g:13159:1: ( ( ruleExpression ) )
            // InternalBeeLangTestLanguage.g:13160:2: ( ruleExpression )
            {
            // InternalBeeLangTestLanguage.g:13160:2: ( ruleExpression )
            // InternalBeeLangTestLanguage.g:13161:3: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGuardExpressionAccess().getGuardExprExpressionParserRuleCall_0_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getGuardExpressionAccess().getGuardExprExpressionParserRuleCall_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 919, rule__GuardExpression__GuardExprAssignment_0_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GuardExpression__GuardExprAssignment_0_1"


    // $ANTLR start "rule__GuardExpression__GuardExprAssignment_1"
    // InternalBeeLangTestLanguage.g:13170:1: rule__GuardExpression__GuardExprAssignment_1 : ( ruleBlockExpression ) ;
    public final void rule__GuardExpression__GuardExprAssignment_1() throws RecognitionException {
        int rule__GuardExpression__GuardExprAssignment_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 920) ) { return ; }
            // InternalBeeLangTestLanguage.g:13174:1: ( ( ruleBlockExpression ) )
            // InternalBeeLangTestLanguage.g:13175:2: ( ruleBlockExpression )
            {
            // InternalBeeLangTestLanguage.g:13175:2: ( ruleBlockExpression )
            // InternalBeeLangTestLanguage.g:13176:3: ruleBlockExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGuardExpressionAccess().getGuardExprBlockExpressionParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleBlockExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getGuardExpressionAccess().getGuardExprBlockExpressionParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 920, rule__GuardExpression__GuardExprAssignment_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GuardExpression__GuardExprAssignment_1"


    // $ANTLR start "rule__AssignmentExpression__FunctionNameAssignment_1_1"
    // InternalBeeLangTestLanguage.g:13185:1: rule__AssignmentExpression__FunctionNameAssignment_1_1 : ( ruleAssignmentOperator ) ;
    public final void rule__AssignmentExpression__FunctionNameAssignment_1_1() throws RecognitionException {
        int rule__AssignmentExpression__FunctionNameAssignment_1_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 921) ) { return ; }
            // InternalBeeLangTestLanguage.g:13189:1: ( ( ruleAssignmentOperator ) )
            // InternalBeeLangTestLanguage.g:13190:2: ( ruleAssignmentOperator )
            {
            // InternalBeeLangTestLanguage.g:13190:2: ( ruleAssignmentOperator )
            // InternalBeeLangTestLanguage.g:13191:3: ruleAssignmentOperator
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAssignmentExpressionAccess().getFunctionNameAssignmentOperatorParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAssignmentOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAssignmentExpressionAccess().getFunctionNameAssignmentOperatorParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 921, rule__AssignmentExpression__FunctionNameAssignment_1_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AssignmentExpression__FunctionNameAssignment_1_1"


    // $ANTLR start "rule__AssignmentExpression__RightExprAssignment_1_2"
    // InternalBeeLangTestLanguage.g:13200:1: rule__AssignmentExpression__RightExprAssignment_1_2 : ( ruleAssignmentExpression ) ;
    public final void rule__AssignmentExpression__RightExprAssignment_1_2() throws RecognitionException {
        int rule__AssignmentExpression__RightExprAssignment_1_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 922) ) { return ; }
            // InternalBeeLangTestLanguage.g:13204:1: ( ( ruleAssignmentExpression ) )
            // InternalBeeLangTestLanguage.g:13205:2: ( ruleAssignmentExpression )
            {
            // InternalBeeLangTestLanguage.g:13205:2: ( ruleAssignmentExpression )
            // InternalBeeLangTestLanguage.g:13206:3: ruleAssignmentExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAssignmentExpressionAccess().getRightExprAssignmentExpressionParserRuleCall_1_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAssignmentExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAssignmentExpressionAccess().getRightExprAssignmentExpressionParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 922, rule__AssignmentExpression__RightExprAssignment_1_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AssignmentExpression__RightExprAssignment_1_2"


    // $ANTLR start "rule__VarDeclaration__FinalAssignment_1"
    // InternalBeeLangTestLanguage.g:13215:1: rule__VarDeclaration__FinalAssignment_1 : ( ( 'final' ) ) ;
    public final void rule__VarDeclaration__FinalAssignment_1() throws RecognitionException {
        int rule__VarDeclaration__FinalAssignment_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 923) ) { return ; }
            // InternalBeeLangTestLanguage.g:13219:1: ( ( ( 'final' ) ) )
            // InternalBeeLangTestLanguage.g:13220:2: ( ( 'final' ) )
            {
            // InternalBeeLangTestLanguage.g:13220:2: ( ( 'final' ) )
            // InternalBeeLangTestLanguage.g:13221:3: ( 'final' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getFinalFinalKeyword_1_0()); 
            }
            // InternalBeeLangTestLanguage.g:13222:3: ( 'final' )
            // InternalBeeLangTestLanguage.g:13223:4: 'final'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getFinalFinalKeyword_1_0()); 
            }
            match(input,74,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getFinalFinalKeyword_1_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getFinalFinalKeyword_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 923, rule__VarDeclaration__FinalAssignment_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__FinalAssignment_1"


    // $ANTLR start "rule__VarDeclaration__TypeAssignment_2_0_1"
    // InternalBeeLangTestLanguage.g:13234:1: rule__VarDeclaration__TypeAssignment_2_0_1 : ( ruleTypeRef ) ;
    public final void rule__VarDeclaration__TypeAssignment_2_0_1() throws RecognitionException {
        int rule__VarDeclaration__TypeAssignment_2_0_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 924) ) { return ; }
            // InternalBeeLangTestLanguage.g:13238:1: ( ( ruleTypeRef ) )
            // InternalBeeLangTestLanguage.g:13239:2: ( ruleTypeRef )
            {
            // InternalBeeLangTestLanguage.g:13239:2: ( ruleTypeRef )
            // InternalBeeLangTestLanguage.g:13240:3: ruleTypeRef
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getTypeTypeRefParserRuleCall_2_0_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleTypeRef();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getTypeTypeRefParserRuleCall_2_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 924, rule__VarDeclaration__TypeAssignment_2_0_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__TypeAssignment_2_0_1"


    // $ANTLR start "rule__VarDeclaration__NameAssignment_2_1"
    // InternalBeeLangTestLanguage.g:13249:1: rule__VarDeclaration__NameAssignment_2_1 : ( RULE_ID ) ;
    public final void rule__VarDeclaration__NameAssignment_2_1() throws RecognitionException {
        int rule__VarDeclaration__NameAssignment_2_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 925) ) { return ; }
            // InternalBeeLangTestLanguage.g:13253:1: ( ( RULE_ID ) )
            // InternalBeeLangTestLanguage.g:13254:2: ( RULE_ID )
            {
            // InternalBeeLangTestLanguage.g:13254:2: ( RULE_ID )
            // InternalBeeLangTestLanguage.g:13255:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getNameIDTerminalRuleCall_2_1_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getNameIDTerminalRuleCall_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 925, rule__VarDeclaration__NameAssignment_2_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__NameAssignment_2_1"


    // $ANTLR start "rule__VarDeclaration__ValueExprAssignment_3_1"
    // InternalBeeLangTestLanguage.g:13264:1: rule__VarDeclaration__ValueExprAssignment_3_1 : ( ruleExpression ) ;
    public final void rule__VarDeclaration__ValueExprAssignment_3_1() throws RecognitionException {
        int rule__VarDeclaration__ValueExprAssignment_3_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 926) ) { return ; }
            // InternalBeeLangTestLanguage.g:13268:1: ( ( ruleExpression ) )
            // InternalBeeLangTestLanguage.g:13269:2: ( ruleExpression )
            {
            // InternalBeeLangTestLanguage.g:13269:2: ( ruleExpression )
            // InternalBeeLangTestLanguage.g:13270:3: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getValueExprExpressionParserRuleCall_3_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getValueExprExpressionParserRuleCall_3_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 926, rule__VarDeclaration__ValueExprAssignment_3_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__ValueExprAssignment_3_1"


    // $ANTLR start "rule__ValDeclaration__FinalAssignment_1"
    // InternalBeeLangTestLanguage.g:13279:1: rule__ValDeclaration__FinalAssignment_1 : ( ( 'final' ) ) ;
    public final void rule__ValDeclaration__FinalAssignment_1() throws RecognitionException {
        int rule__ValDeclaration__FinalAssignment_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 927) ) { return ; }
            // InternalBeeLangTestLanguage.g:13283:1: ( ( ( 'final' ) ) )
            // InternalBeeLangTestLanguage.g:13284:2: ( ( 'final' ) )
            {
            // InternalBeeLangTestLanguage.g:13284:2: ( ( 'final' ) )
            // InternalBeeLangTestLanguage.g:13285:3: ( 'final' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValDeclarationAccess().getFinalFinalKeyword_1_0()); 
            }
            // InternalBeeLangTestLanguage.g:13286:3: ( 'final' )
            // InternalBeeLangTestLanguage.g:13287:4: 'final'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValDeclarationAccess().getFinalFinalKeyword_1_0()); 
            }
            match(input,74,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getValDeclarationAccess().getFinalFinalKeyword_1_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getValDeclarationAccess().getFinalFinalKeyword_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 927, rule__ValDeclaration__FinalAssignment_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValDeclaration__FinalAssignment_1"


    // $ANTLR start "rule__ValDeclaration__ImmutableAssignment_2"
    // InternalBeeLangTestLanguage.g:13298:1: rule__ValDeclaration__ImmutableAssignment_2 : ( ( 'val' ) ) ;
    public final void rule__ValDeclaration__ImmutableAssignment_2() throws RecognitionException {
        int rule__ValDeclaration__ImmutableAssignment_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 928) ) { return ; }
            // InternalBeeLangTestLanguage.g:13302:1: ( ( ( 'val' ) ) )
            // InternalBeeLangTestLanguage.g:13303:2: ( ( 'val' ) )
            {
            // InternalBeeLangTestLanguage.g:13303:2: ( ( 'val' ) )
            // InternalBeeLangTestLanguage.g:13304:3: ( 'val' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValDeclarationAccess().getImmutableValKeyword_2_0()); 
            }
            // InternalBeeLangTestLanguage.g:13305:3: ( 'val' )
            // InternalBeeLangTestLanguage.g:13306:4: 'val'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValDeclarationAccess().getImmutableValKeyword_2_0()); 
            }
            match(input,76,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getValDeclarationAccess().getImmutableValKeyword_2_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getValDeclarationAccess().getImmutableValKeyword_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 928, rule__ValDeclaration__ImmutableAssignment_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValDeclaration__ImmutableAssignment_2"


    // $ANTLR start "rule__ValDeclaration__TypeAssignment_3"
    // InternalBeeLangTestLanguage.g:13317:1: rule__ValDeclaration__TypeAssignment_3 : ( ruleTypeRef ) ;
    public final void rule__ValDeclaration__TypeAssignment_3() throws RecognitionException {
        int rule__ValDeclaration__TypeAssignment_3_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 929) ) { return ; }
            // InternalBeeLangTestLanguage.g:13321:1: ( ( ruleTypeRef ) )
            // InternalBeeLangTestLanguage.g:13322:2: ( ruleTypeRef )
            {
            // InternalBeeLangTestLanguage.g:13322:2: ( ruleTypeRef )
            // InternalBeeLangTestLanguage.g:13323:3: ruleTypeRef
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValDeclarationAccess().getTypeTypeRefParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleTypeRef();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getValDeclarationAccess().getTypeTypeRefParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 929, rule__ValDeclaration__TypeAssignment_3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValDeclaration__TypeAssignment_3"


    // $ANTLR start "rule__ValDeclaration__NameAssignment_4"
    // InternalBeeLangTestLanguage.g:13332:1: rule__ValDeclaration__NameAssignment_4 : ( RULE_ID ) ;
    public final void rule__ValDeclaration__NameAssignment_4() throws RecognitionException {
        int rule__ValDeclaration__NameAssignment_4_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 930) ) { return ; }
            // InternalBeeLangTestLanguage.g:13336:1: ( ( RULE_ID ) )
            // InternalBeeLangTestLanguage.g:13337:2: ( RULE_ID )
            {
            // InternalBeeLangTestLanguage.g:13337:2: ( RULE_ID )
            // InternalBeeLangTestLanguage.g:13338:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValDeclarationAccess().getNameIDTerminalRuleCall_4_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getValDeclarationAccess().getNameIDTerminalRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 930, rule__ValDeclaration__NameAssignment_4_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValDeclaration__NameAssignment_4"


    // $ANTLR start "rule__ValDeclaration__ValueExprAssignment_6"
    // InternalBeeLangTestLanguage.g:13347:1: rule__ValDeclaration__ValueExprAssignment_6 : ( ruleExpression ) ;
    public final void rule__ValDeclaration__ValueExprAssignment_6() throws RecognitionException {
        int rule__ValDeclaration__ValueExprAssignment_6_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 931) ) { return ; }
            // InternalBeeLangTestLanguage.g:13351:1: ( ( ruleExpression ) )
            // InternalBeeLangTestLanguage.g:13352:2: ( ruleExpression )
            {
            // InternalBeeLangTestLanguage.g:13352:2: ( ruleExpression )
            // InternalBeeLangTestLanguage.g:13353:3: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValDeclarationAccess().getValueExprExpressionParserRuleCall_6_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getValDeclarationAccess().getValueExprExpressionParserRuleCall_6_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 931, rule__ValDeclaration__ValueExprAssignment_6_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValDeclaration__ValueExprAssignment_6"


    // $ANTLR start "rule__SimpleTypeRef__RawTypeAssignment_0"
    // InternalBeeLangTestLanguage.g:13362:1: rule__SimpleTypeRef__RawTypeAssignment_0 : ( RULE_ID ) ;
    public final void rule__SimpleTypeRef__RawTypeAssignment_0() throws RecognitionException {
        int rule__SimpleTypeRef__RawTypeAssignment_0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 932) ) { return ; }
            // InternalBeeLangTestLanguage.g:13366:1: ( ( RULE_ID ) )
            // InternalBeeLangTestLanguage.g:13367:2: ( RULE_ID )
            {
            // InternalBeeLangTestLanguage.g:13367:2: ( RULE_ID )
            // InternalBeeLangTestLanguage.g:13368:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSimpleTypeRefAccess().getRawTypeIDTerminalRuleCall_0_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSimpleTypeRefAccess().getRawTypeIDTerminalRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 932, rule__SimpleTypeRef__RawTypeAssignment_0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleTypeRef__RawTypeAssignment_0"


    // $ANTLR start "rule__SimpleTypeRef__ActualArgumentsListAssignment_1_1"
    // InternalBeeLangTestLanguage.g:13377:1: rule__SimpleTypeRef__ActualArgumentsListAssignment_1_1 : ( RULE_ID ) ;
    public final void rule__SimpleTypeRef__ActualArgumentsListAssignment_1_1() throws RecognitionException {
        int rule__SimpleTypeRef__ActualArgumentsListAssignment_1_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 933) ) { return ; }
            // InternalBeeLangTestLanguage.g:13381:1: ( ( RULE_ID ) )
            // InternalBeeLangTestLanguage.g:13382:2: ( RULE_ID )
            {
            // InternalBeeLangTestLanguage.g:13382:2: ( RULE_ID )
            // InternalBeeLangTestLanguage.g:13383:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSimpleTypeRefAccess().getActualArgumentsListIDTerminalRuleCall_1_1_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSimpleTypeRefAccess().getActualArgumentsListIDTerminalRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 933, rule__SimpleTypeRef__ActualArgumentsListAssignment_1_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleTypeRef__ActualArgumentsListAssignment_1_1"


    // $ANTLR start "rule__SimpleTypeRef__ActualArgumentsListAssignment_1_2_1"
    // InternalBeeLangTestLanguage.g:13392:1: rule__SimpleTypeRef__ActualArgumentsListAssignment_1_2_1 : ( RULE_ID ) ;
    public final void rule__SimpleTypeRef__ActualArgumentsListAssignment_1_2_1() throws RecognitionException {
        int rule__SimpleTypeRef__ActualArgumentsListAssignment_1_2_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 934) ) { return ; }
            // InternalBeeLangTestLanguage.g:13396:1: ( ( RULE_ID ) )
            // InternalBeeLangTestLanguage.g:13397:2: ( RULE_ID )
            {
            // InternalBeeLangTestLanguage.g:13397:2: ( RULE_ID )
            // InternalBeeLangTestLanguage.g:13398:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSimpleTypeRefAccess().getActualArgumentsListIDTerminalRuleCall_1_2_1_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSimpleTypeRefAccess().getActualArgumentsListIDTerminalRuleCall_1_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 934, rule__SimpleTypeRef__ActualArgumentsListAssignment_1_2_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleTypeRef__ActualArgumentsListAssignment_1_2_1"


    // $ANTLR start "rule__ClosureTypeRef__ParameterTypesAssignment_1_0_0"
    // InternalBeeLangTestLanguage.g:13407:1: rule__ClosureTypeRef__ParameterTypesAssignment_1_0_0 : ( RULE_ID ) ;
    public final void rule__ClosureTypeRef__ParameterTypesAssignment_1_0_0() throws RecognitionException {
        int rule__ClosureTypeRef__ParameterTypesAssignment_1_0_0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 935) ) { return ; }
            // InternalBeeLangTestLanguage.g:13411:1: ( ( RULE_ID ) )
            // InternalBeeLangTestLanguage.g:13412:2: ( RULE_ID )
            {
            // InternalBeeLangTestLanguage.g:13412:2: ( RULE_ID )
            // InternalBeeLangTestLanguage.g:13413:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureTypeRefAccess().getParameterTypesIDTerminalRuleCall_1_0_0_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureTypeRefAccess().getParameterTypesIDTerminalRuleCall_1_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 935, rule__ClosureTypeRef__ParameterTypesAssignment_1_0_0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureTypeRef__ParameterTypesAssignment_1_0_0"


    // $ANTLR start "rule__ClosureTypeRef__ParameterTypesAssignment_1_0_1_1"
    // InternalBeeLangTestLanguage.g:13422:1: rule__ClosureTypeRef__ParameterTypesAssignment_1_0_1_1 : ( RULE_ID ) ;
    public final void rule__ClosureTypeRef__ParameterTypesAssignment_1_0_1_1() throws RecognitionException {
        int rule__ClosureTypeRef__ParameterTypesAssignment_1_0_1_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 936) ) { return ; }
            // InternalBeeLangTestLanguage.g:13426:1: ( ( RULE_ID ) )
            // InternalBeeLangTestLanguage.g:13427:2: ( RULE_ID )
            {
            // InternalBeeLangTestLanguage.g:13427:2: ( RULE_ID )
            // InternalBeeLangTestLanguage.g:13428:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureTypeRefAccess().getParameterTypesIDTerminalRuleCall_1_0_1_1_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureTypeRefAccess().getParameterTypesIDTerminalRuleCall_1_0_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 936, rule__ClosureTypeRef__ParameterTypesAssignment_1_0_1_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureTypeRef__ParameterTypesAssignment_1_0_1_1"


    // $ANTLR start "rule__ClosureTypeRef__VarArgsAssignment_1_0_2_1"
    // InternalBeeLangTestLanguage.g:13437:1: rule__ClosureTypeRef__VarArgsAssignment_1_0_2_1 : ( ( '...' ) ) ;
    public final void rule__ClosureTypeRef__VarArgsAssignment_1_0_2_1() throws RecognitionException {
        int rule__ClosureTypeRef__VarArgsAssignment_1_0_2_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 937) ) { return ; }
            // InternalBeeLangTestLanguage.g:13441:1: ( ( ( '...' ) ) )
            // InternalBeeLangTestLanguage.g:13442:2: ( ( '...' ) )
            {
            // InternalBeeLangTestLanguage.g:13442:2: ( ( '...' ) )
            // InternalBeeLangTestLanguage.g:13443:3: ( '...' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureTypeRefAccess().getVarArgsFullStopFullStopFullStopKeyword_1_0_2_1_0()); 
            }
            // InternalBeeLangTestLanguage.g:13444:3: ( '...' )
            // InternalBeeLangTestLanguage.g:13445:4: '...'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureTypeRefAccess().getVarArgsFullStopFullStopFullStopKeyword_1_0_2_1_0()); 
            }
            match(input,75,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureTypeRefAccess().getVarArgsFullStopFullStopFullStopKeyword_1_0_2_1_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureTypeRefAccess().getVarArgsFullStopFullStopFullStopKeyword_1_0_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 937, rule__ClosureTypeRef__VarArgsAssignment_1_0_2_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureTypeRef__VarArgsAssignment_1_0_2_1"


    // $ANTLR start "rule__ClosureTypeRef__ParameterTypesAssignment_1_0_2_2"
    // InternalBeeLangTestLanguage.g:13456:1: rule__ClosureTypeRef__ParameterTypesAssignment_1_0_2_2 : ( RULE_ID ) ;
    public final void rule__ClosureTypeRef__ParameterTypesAssignment_1_0_2_2() throws RecognitionException {
        int rule__ClosureTypeRef__ParameterTypesAssignment_1_0_2_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 938) ) { return ; }
            // InternalBeeLangTestLanguage.g:13460:1: ( ( RULE_ID ) )
            // InternalBeeLangTestLanguage.g:13461:2: ( RULE_ID )
            {
            // InternalBeeLangTestLanguage.g:13461:2: ( RULE_ID )
            // InternalBeeLangTestLanguage.g:13462:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureTypeRefAccess().getParameterTypesIDTerminalRuleCall_1_0_2_2_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureTypeRefAccess().getParameterTypesIDTerminalRuleCall_1_0_2_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 938, rule__ClosureTypeRef__ParameterTypesAssignment_1_0_2_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureTypeRef__ParameterTypesAssignment_1_0_2_2"


    // $ANTLR start "rule__ClosureTypeRef__VarArgsAssignment_1_1_0"
    // InternalBeeLangTestLanguage.g:13471:1: rule__ClosureTypeRef__VarArgsAssignment_1_1_0 : ( ( '...' ) ) ;
    public final void rule__ClosureTypeRef__VarArgsAssignment_1_1_0() throws RecognitionException {
        int rule__ClosureTypeRef__VarArgsAssignment_1_1_0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 939) ) { return ; }
            // InternalBeeLangTestLanguage.g:13475:1: ( ( ( '...' ) ) )
            // InternalBeeLangTestLanguage.g:13476:2: ( ( '...' ) )
            {
            // InternalBeeLangTestLanguage.g:13476:2: ( ( '...' ) )
            // InternalBeeLangTestLanguage.g:13477:3: ( '...' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureTypeRefAccess().getVarArgsFullStopFullStopFullStopKeyword_1_1_0_0()); 
            }
            // InternalBeeLangTestLanguage.g:13478:3: ( '...' )
            // InternalBeeLangTestLanguage.g:13479:4: '...'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureTypeRefAccess().getVarArgsFullStopFullStopFullStopKeyword_1_1_0_0()); 
            }
            match(input,75,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureTypeRefAccess().getVarArgsFullStopFullStopFullStopKeyword_1_1_0_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureTypeRefAccess().getVarArgsFullStopFullStopFullStopKeyword_1_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 939, rule__ClosureTypeRef__VarArgsAssignment_1_1_0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureTypeRef__VarArgsAssignment_1_1_0"


    // $ANTLR start "rule__ClosureTypeRef__ParameterTypesAssignment_1_1_1"
    // InternalBeeLangTestLanguage.g:13490:1: rule__ClosureTypeRef__ParameterTypesAssignment_1_1_1 : ( RULE_ID ) ;
    public final void rule__ClosureTypeRef__ParameterTypesAssignment_1_1_1() throws RecognitionException {
        int rule__ClosureTypeRef__ParameterTypesAssignment_1_1_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 940) ) { return ; }
            // InternalBeeLangTestLanguage.g:13494:1: ( ( RULE_ID ) )
            // InternalBeeLangTestLanguage.g:13495:2: ( RULE_ID )
            {
            // InternalBeeLangTestLanguage.g:13495:2: ( RULE_ID )
            // InternalBeeLangTestLanguage.g:13496:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureTypeRefAccess().getParameterTypesIDTerminalRuleCall_1_1_1_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureTypeRefAccess().getParameterTypesIDTerminalRuleCall_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 940, rule__ClosureTypeRef__ParameterTypesAssignment_1_1_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureTypeRef__ParameterTypesAssignment_1_1_1"


    // $ANTLR start "rule__ClosureTypeRef__ReturnTypeAssignment_4"
    // InternalBeeLangTestLanguage.g:13505:1: rule__ClosureTypeRef__ReturnTypeAssignment_4 : ( RULE_ID ) ;
    public final void rule__ClosureTypeRef__ReturnTypeAssignment_4() throws RecognitionException {
        int rule__ClosureTypeRef__ReturnTypeAssignment_4_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 941) ) { return ; }
            // InternalBeeLangTestLanguage.g:13509:1: ( ( RULE_ID ) )
            // InternalBeeLangTestLanguage.g:13510:2: ( RULE_ID )
            {
            // InternalBeeLangTestLanguage.g:13510:2: ( RULE_ID )
            // InternalBeeLangTestLanguage.g:13511:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureTypeRefAccess().getReturnTypeIDTerminalRuleCall_4_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureTypeRefAccess().getReturnTypeIDTerminalRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 941, rule__ClosureTypeRef__ReturnTypeAssignment_4_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureTypeRef__ReturnTypeAssignment_4"


    // $ANTLR start "rule__CachedExpression__ExprAssignment_0_2"
    // InternalBeeLangTestLanguage.g:13520:1: rule__CachedExpression__ExprAssignment_0_2 : ( ruleOrExpression ) ;
    public final void rule__CachedExpression__ExprAssignment_0_2() throws RecognitionException {
        int rule__CachedExpression__ExprAssignment_0_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 942) ) { return ; }
            // InternalBeeLangTestLanguage.g:13524:1: ( ( ruleOrExpression ) )
            // InternalBeeLangTestLanguage.g:13525:2: ( ruleOrExpression )
            {
            // InternalBeeLangTestLanguage.g:13525:2: ( ruleOrExpression )
            // InternalBeeLangTestLanguage.g:13526:3: ruleOrExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCachedExpressionAccess().getExprOrExpressionParserRuleCall_0_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOrExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCachedExpressionAccess().getExprOrExpressionParserRuleCall_0_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 942, rule__CachedExpression__ExprAssignment_0_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CachedExpression__ExprAssignment_0_2"


    // $ANTLR start "rule__OrExpression__RightExprAssignment_1_2"
    // InternalBeeLangTestLanguage.g:13535:1: rule__OrExpression__RightExprAssignment_1_2 : ( ruleAndExpression ) ;
    public final void rule__OrExpression__RightExprAssignment_1_2() throws RecognitionException {
        int rule__OrExpression__RightExprAssignment_1_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 943) ) { return ; }
            // InternalBeeLangTestLanguage.g:13539:1: ( ( ruleAndExpression ) )
            // InternalBeeLangTestLanguage.g:13540:2: ( ruleAndExpression )
            {
            // InternalBeeLangTestLanguage.g:13540:2: ( ruleAndExpression )
            // InternalBeeLangTestLanguage.g:13541:3: ruleAndExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrExpressionAccess().getRightExprAndExpressionParserRuleCall_1_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAndExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrExpressionAccess().getRightExprAndExpressionParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 943, rule__OrExpression__RightExprAssignment_1_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrExpression__RightExprAssignment_1_2"


    // $ANTLR start "rule__AndExpression__RightExprAssignment_1_2"
    // InternalBeeLangTestLanguage.g:13550:1: rule__AndExpression__RightExprAssignment_1_2 : ( ruleRelationalExpression ) ;
    public final void rule__AndExpression__RightExprAssignment_1_2() throws RecognitionException {
        int rule__AndExpression__RightExprAssignment_1_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 944) ) { return ; }
            // InternalBeeLangTestLanguage.g:13554:1: ( ( ruleRelationalExpression ) )
            // InternalBeeLangTestLanguage.g:13555:2: ( ruleRelationalExpression )
            {
            // InternalBeeLangTestLanguage.g:13555:2: ( ruleRelationalExpression )
            // InternalBeeLangTestLanguage.g:13556:3: ruleRelationalExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndExpressionAccess().getRightExprRelationalExpressionParserRuleCall_1_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleRelationalExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndExpressionAccess().getRightExprRelationalExpressionParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 944, rule__AndExpression__RightExprAssignment_1_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndExpression__RightExprAssignment_1_2"


    // $ANTLR start "rule__RelationalExpression__FunctionNameAssignment_1_1"
    // InternalBeeLangTestLanguage.g:13565:1: rule__RelationalExpression__FunctionNameAssignment_1_1 : ( ruleRelationalOperator ) ;
    public final void rule__RelationalExpression__FunctionNameAssignment_1_1() throws RecognitionException {
        int rule__RelationalExpression__FunctionNameAssignment_1_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 945) ) { return ; }
            // InternalBeeLangTestLanguage.g:13569:1: ( ( ruleRelationalOperator ) )
            // InternalBeeLangTestLanguage.g:13570:2: ( ruleRelationalOperator )
            {
            // InternalBeeLangTestLanguage.g:13570:2: ( ruleRelationalOperator )
            // InternalBeeLangTestLanguage.g:13571:3: ruleRelationalOperator
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRelationalExpressionAccess().getFunctionNameRelationalOperatorParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleRelationalOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRelationalExpressionAccess().getFunctionNameRelationalOperatorParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 945, rule__RelationalExpression__FunctionNameAssignment_1_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RelationalExpression__FunctionNameAssignment_1_1"


    // $ANTLR start "rule__RelationalExpression__RightExprAssignment_1_2"
    // InternalBeeLangTestLanguage.g:13580:1: rule__RelationalExpression__RightExprAssignment_1_2 : ( ruleAdditiveExpression ) ;
    public final void rule__RelationalExpression__RightExprAssignment_1_2() throws RecognitionException {
        int rule__RelationalExpression__RightExprAssignment_1_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 946) ) { return ; }
            // InternalBeeLangTestLanguage.g:13584:1: ( ( ruleAdditiveExpression ) )
            // InternalBeeLangTestLanguage.g:13585:2: ( ruleAdditiveExpression )
            {
            // InternalBeeLangTestLanguage.g:13585:2: ( ruleAdditiveExpression )
            // InternalBeeLangTestLanguage.g:13586:3: ruleAdditiveExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRelationalExpressionAccess().getRightExprAdditiveExpressionParserRuleCall_1_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAdditiveExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRelationalExpressionAccess().getRightExprAdditiveExpressionParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 946, rule__RelationalExpression__RightExprAssignment_1_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RelationalExpression__RightExprAssignment_1_2"


    // $ANTLR start "rule__AdditiveExpression__FunctionNameAssignment_1_1"
    // InternalBeeLangTestLanguage.g:13595:1: rule__AdditiveExpression__FunctionNameAssignment_1_1 : ( ( rule__AdditiveExpression__FunctionNameAlternatives_1_1_0 ) ) ;
    public final void rule__AdditiveExpression__FunctionNameAssignment_1_1() throws RecognitionException {
        int rule__AdditiveExpression__FunctionNameAssignment_1_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 947) ) { return ; }
            // InternalBeeLangTestLanguage.g:13599:1: ( ( ( rule__AdditiveExpression__FunctionNameAlternatives_1_1_0 ) ) )
            // InternalBeeLangTestLanguage.g:13600:2: ( ( rule__AdditiveExpression__FunctionNameAlternatives_1_1_0 ) )
            {
            // InternalBeeLangTestLanguage.g:13600:2: ( ( rule__AdditiveExpression__FunctionNameAlternatives_1_1_0 ) )
            // InternalBeeLangTestLanguage.g:13601:3: ( rule__AdditiveExpression__FunctionNameAlternatives_1_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAdditiveExpressionAccess().getFunctionNameAlternatives_1_1_0()); 
            }
            // InternalBeeLangTestLanguage.g:13602:3: ( rule__AdditiveExpression__FunctionNameAlternatives_1_1_0 )
            // InternalBeeLangTestLanguage.g:13602:4: rule__AdditiveExpression__FunctionNameAlternatives_1_1_0
            {
            pushFollow(FOLLOW_2);
            rule__AdditiveExpression__FunctionNameAlternatives_1_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAdditiveExpressionAccess().getFunctionNameAlternatives_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 947, rule__AdditiveExpression__FunctionNameAssignment_1_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AdditiveExpression__FunctionNameAssignment_1_1"


    // $ANTLR start "rule__AdditiveExpression__RightExprAssignment_1_2"
    // InternalBeeLangTestLanguage.g:13610:1: rule__AdditiveExpression__RightExprAssignment_1_2 : ( ruleMultiplicativeExpression ) ;
    public final void rule__AdditiveExpression__RightExprAssignment_1_2() throws RecognitionException {
        int rule__AdditiveExpression__RightExprAssignment_1_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 948) ) { return ; }
            // InternalBeeLangTestLanguage.g:13614:1: ( ( ruleMultiplicativeExpression ) )
            // InternalBeeLangTestLanguage.g:13615:2: ( ruleMultiplicativeExpression )
            {
            // InternalBeeLangTestLanguage.g:13615:2: ( ruleMultiplicativeExpression )
            // InternalBeeLangTestLanguage.g:13616:3: ruleMultiplicativeExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAdditiveExpressionAccess().getRightExprMultiplicativeExpressionParserRuleCall_1_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleMultiplicativeExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAdditiveExpressionAccess().getRightExprMultiplicativeExpressionParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 948, rule__AdditiveExpression__RightExprAssignment_1_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AdditiveExpression__RightExprAssignment_1_2"


    // $ANTLR start "rule__MultiplicativeExpression__FunctionNameAssignment_1_1"
    // InternalBeeLangTestLanguage.g:13625:1: rule__MultiplicativeExpression__FunctionNameAssignment_1_1 : ( ( rule__MultiplicativeExpression__FunctionNameAlternatives_1_1_0 ) ) ;
    public final void rule__MultiplicativeExpression__FunctionNameAssignment_1_1() throws RecognitionException {
        int rule__MultiplicativeExpression__FunctionNameAssignment_1_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 949) ) { return ; }
            // InternalBeeLangTestLanguage.g:13629:1: ( ( ( rule__MultiplicativeExpression__FunctionNameAlternatives_1_1_0 ) ) )
            // InternalBeeLangTestLanguage.g:13630:2: ( ( rule__MultiplicativeExpression__FunctionNameAlternatives_1_1_0 ) )
            {
            // InternalBeeLangTestLanguage.g:13630:2: ( ( rule__MultiplicativeExpression__FunctionNameAlternatives_1_1_0 ) )
            // InternalBeeLangTestLanguage.g:13631:3: ( rule__MultiplicativeExpression__FunctionNameAlternatives_1_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMultiplicativeExpressionAccess().getFunctionNameAlternatives_1_1_0()); 
            }
            // InternalBeeLangTestLanguage.g:13632:3: ( rule__MultiplicativeExpression__FunctionNameAlternatives_1_1_0 )
            // InternalBeeLangTestLanguage.g:13632:4: rule__MultiplicativeExpression__FunctionNameAlternatives_1_1_0
            {
            pushFollow(FOLLOW_2);
            rule__MultiplicativeExpression__FunctionNameAlternatives_1_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMultiplicativeExpressionAccess().getFunctionNameAlternatives_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 949, rule__MultiplicativeExpression__FunctionNameAssignment_1_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultiplicativeExpression__FunctionNameAssignment_1_1"


    // $ANTLR start "rule__MultiplicativeExpression__RightExprAssignment_1_2"
    // InternalBeeLangTestLanguage.g:13640:1: rule__MultiplicativeExpression__RightExprAssignment_1_2 : ( ruleSetExpression ) ;
    public final void rule__MultiplicativeExpression__RightExprAssignment_1_2() throws RecognitionException {
        int rule__MultiplicativeExpression__RightExprAssignment_1_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 950) ) { return ; }
            // InternalBeeLangTestLanguage.g:13644:1: ( ( ruleSetExpression ) )
            // InternalBeeLangTestLanguage.g:13645:2: ( ruleSetExpression )
            {
            // InternalBeeLangTestLanguage.g:13645:2: ( ruleSetExpression )
            // InternalBeeLangTestLanguage.g:13646:3: ruleSetExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMultiplicativeExpressionAccess().getRightExprSetExpressionParserRuleCall_1_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSetExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMultiplicativeExpressionAccess().getRightExprSetExpressionParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 950, rule__MultiplicativeExpression__RightExprAssignment_1_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultiplicativeExpression__RightExprAssignment_1_2"


    // $ANTLR start "rule__SetExpression__FunctionNameAssignment_1_1"
    // InternalBeeLangTestLanguage.g:13655:1: rule__SetExpression__FunctionNameAssignment_1_1 : ( ( '..' ) ) ;
    public final void rule__SetExpression__FunctionNameAssignment_1_1() throws RecognitionException {
        int rule__SetExpression__FunctionNameAssignment_1_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 951) ) { return ; }
            // InternalBeeLangTestLanguage.g:13659:1: ( ( ( '..' ) ) )
            // InternalBeeLangTestLanguage.g:13660:2: ( ( '..' ) )
            {
            // InternalBeeLangTestLanguage.g:13660:2: ( ( '..' ) )
            // InternalBeeLangTestLanguage.g:13661:3: ( '..' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSetExpressionAccess().getFunctionNameFullStopFullStopKeyword_1_1_0()); 
            }
            // InternalBeeLangTestLanguage.g:13662:3: ( '..' )
            // InternalBeeLangTestLanguage.g:13663:4: '..'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSetExpressionAccess().getFunctionNameFullStopFullStopKeyword_1_1_0()); 
            }
            match(input,77,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSetExpressionAccess().getFunctionNameFullStopFullStopKeyword_1_1_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSetExpressionAccess().getFunctionNameFullStopFullStopKeyword_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 951, rule__SetExpression__FunctionNameAssignment_1_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SetExpression__FunctionNameAssignment_1_1"


    // $ANTLR start "rule__SetExpression__RightExprAssignment_1_2"
    // InternalBeeLangTestLanguage.g:13674:1: rule__SetExpression__RightExprAssignment_1_2 : ( ruleUnaryOrInfixExpression ) ;
    public final void rule__SetExpression__RightExprAssignment_1_2() throws RecognitionException {
        int rule__SetExpression__RightExprAssignment_1_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 952) ) { return ; }
            // InternalBeeLangTestLanguage.g:13678:1: ( ( ruleUnaryOrInfixExpression ) )
            // InternalBeeLangTestLanguage.g:13679:2: ( ruleUnaryOrInfixExpression )
            {
            // InternalBeeLangTestLanguage.g:13679:2: ( ruleUnaryOrInfixExpression )
            // InternalBeeLangTestLanguage.g:13680:3: ruleUnaryOrInfixExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSetExpressionAccess().getRightExprUnaryOrInfixExpressionParserRuleCall_1_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleUnaryOrInfixExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSetExpressionAccess().getRightExprUnaryOrInfixExpressionParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 952, rule__SetExpression__RightExprAssignment_1_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SetExpression__RightExprAssignment_1_2"


    // $ANTLR start "rule__UnaryExpression__FunctionNameAssignment_1"
    // InternalBeeLangTestLanguage.g:13689:1: rule__UnaryExpression__FunctionNameAssignment_1 : ( ( rule__UnaryExpression__FunctionNameAlternatives_1_0 ) ) ;
    public final void rule__UnaryExpression__FunctionNameAssignment_1() throws RecognitionException {
        int rule__UnaryExpression__FunctionNameAssignment_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 953) ) { return ; }
            // InternalBeeLangTestLanguage.g:13693:1: ( ( ( rule__UnaryExpression__FunctionNameAlternatives_1_0 ) ) )
            // InternalBeeLangTestLanguage.g:13694:2: ( ( rule__UnaryExpression__FunctionNameAlternatives_1_0 ) )
            {
            // InternalBeeLangTestLanguage.g:13694:2: ( ( rule__UnaryExpression__FunctionNameAlternatives_1_0 ) )
            // InternalBeeLangTestLanguage.g:13695:3: ( rule__UnaryExpression__FunctionNameAlternatives_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnaryExpressionAccess().getFunctionNameAlternatives_1_0()); 
            }
            // InternalBeeLangTestLanguage.g:13696:3: ( rule__UnaryExpression__FunctionNameAlternatives_1_0 )
            // InternalBeeLangTestLanguage.g:13696:4: rule__UnaryExpression__FunctionNameAlternatives_1_0
            {
            pushFollow(FOLLOW_2);
            rule__UnaryExpression__FunctionNameAlternatives_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnaryExpressionAccess().getFunctionNameAlternatives_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 953, rule__UnaryExpression__FunctionNameAssignment_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnaryExpression__FunctionNameAssignment_1"


    // $ANTLR start "rule__UnaryExpression__ExprAssignment_2"
    // InternalBeeLangTestLanguage.g:13704:1: rule__UnaryExpression__ExprAssignment_2 : ( ruleInfixExpression ) ;
    public final void rule__UnaryExpression__ExprAssignment_2() throws RecognitionException {
        int rule__UnaryExpression__ExprAssignment_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 954) ) { return ; }
            // InternalBeeLangTestLanguage.g:13708:1: ( ( ruleInfixExpression ) )
            // InternalBeeLangTestLanguage.g:13709:2: ( ruleInfixExpression )
            {
            // InternalBeeLangTestLanguage.g:13709:2: ( ruleInfixExpression )
            // InternalBeeLangTestLanguage.g:13710:3: ruleInfixExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnaryExpressionAccess().getExprInfixExpressionParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleInfixExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnaryExpressionAccess().getExprInfixExpressionParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 954, rule__UnaryExpression__ExprAssignment_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnaryExpression__ExprAssignment_2"


    // $ANTLR start "rule__PreopExpression__FunctionNameAssignment_1"
    // InternalBeeLangTestLanguage.g:13719:1: rule__PreopExpression__FunctionNameAssignment_1 : ( ( rule__PreopExpression__FunctionNameAlternatives_1_0 ) ) ;
    public final void rule__PreopExpression__FunctionNameAssignment_1() throws RecognitionException {
        int rule__PreopExpression__FunctionNameAssignment_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 955) ) { return ; }
            // InternalBeeLangTestLanguage.g:13723:1: ( ( ( rule__PreopExpression__FunctionNameAlternatives_1_0 ) ) )
            // InternalBeeLangTestLanguage.g:13724:2: ( ( rule__PreopExpression__FunctionNameAlternatives_1_0 ) )
            {
            // InternalBeeLangTestLanguage.g:13724:2: ( ( rule__PreopExpression__FunctionNameAlternatives_1_0 ) )
            // InternalBeeLangTestLanguage.g:13725:3: ( rule__PreopExpression__FunctionNameAlternatives_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPreopExpressionAccess().getFunctionNameAlternatives_1_0()); 
            }
            // InternalBeeLangTestLanguage.g:13726:3: ( rule__PreopExpression__FunctionNameAlternatives_1_0 )
            // InternalBeeLangTestLanguage.g:13726:4: rule__PreopExpression__FunctionNameAlternatives_1_0
            {
            pushFollow(FOLLOW_2);
            rule__PreopExpression__FunctionNameAlternatives_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPreopExpressionAccess().getFunctionNameAlternatives_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 955, rule__PreopExpression__FunctionNameAssignment_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PreopExpression__FunctionNameAssignment_1"


    // $ANTLR start "rule__PreopExpression__ExprAssignment_2"
    // InternalBeeLangTestLanguage.g:13734:1: rule__PreopExpression__ExprAssignment_2 : ( ruleInfixExpression ) ;
    public final void rule__PreopExpression__ExprAssignment_2() throws RecognitionException {
        int rule__PreopExpression__ExprAssignment_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 956) ) { return ; }
            // InternalBeeLangTestLanguage.g:13738:1: ( ( ruleInfixExpression ) )
            // InternalBeeLangTestLanguage.g:13739:2: ( ruleInfixExpression )
            {
            // InternalBeeLangTestLanguage.g:13739:2: ( ruleInfixExpression )
            // InternalBeeLangTestLanguage.g:13740:3: ruleInfixExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPreopExpressionAccess().getExprInfixExpressionParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleInfixExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPreopExpressionAccess().getExprInfixExpressionParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 956, rule__PreopExpression__ExprAssignment_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PreopExpression__ExprAssignment_2"


    // $ANTLR start "rule__PostopExpression__FunctionNameAssignment_1_1"
    // InternalBeeLangTestLanguage.g:13749:1: rule__PostopExpression__FunctionNameAssignment_1_1 : ( ( rule__PostopExpression__FunctionNameAlternatives_1_1_0 ) ) ;
    public final void rule__PostopExpression__FunctionNameAssignment_1_1() throws RecognitionException {
        int rule__PostopExpression__FunctionNameAssignment_1_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 957) ) { return ; }
            // InternalBeeLangTestLanguage.g:13753:1: ( ( ( rule__PostopExpression__FunctionNameAlternatives_1_1_0 ) ) )
            // InternalBeeLangTestLanguage.g:13754:2: ( ( rule__PostopExpression__FunctionNameAlternatives_1_1_0 ) )
            {
            // InternalBeeLangTestLanguage.g:13754:2: ( ( rule__PostopExpression__FunctionNameAlternatives_1_1_0 ) )
            // InternalBeeLangTestLanguage.g:13755:3: ( rule__PostopExpression__FunctionNameAlternatives_1_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPostopExpressionAccess().getFunctionNameAlternatives_1_1_0()); 
            }
            // InternalBeeLangTestLanguage.g:13756:3: ( rule__PostopExpression__FunctionNameAlternatives_1_1_0 )
            // InternalBeeLangTestLanguage.g:13756:4: rule__PostopExpression__FunctionNameAlternatives_1_1_0
            {
            pushFollow(FOLLOW_2);
            rule__PostopExpression__FunctionNameAlternatives_1_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPostopExpressionAccess().getFunctionNameAlternatives_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 957, rule__PostopExpression__FunctionNameAssignment_1_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PostopExpression__FunctionNameAssignment_1_1"


    // $ANTLR start "rule__InfixExpression__NameAssignment_1_0_2"
    // InternalBeeLangTestLanguage.g:13764:1: rule__InfixExpression__NameAssignment_1_0_2 : ( RULE_ID ) ;
    public final void rule__InfixExpression__NameAssignment_1_0_2() throws RecognitionException {
        int rule__InfixExpression__NameAssignment_1_0_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 958) ) { return ; }
            // InternalBeeLangTestLanguage.g:13768:1: ( ( RULE_ID ) )
            // InternalBeeLangTestLanguage.g:13769:2: ( RULE_ID )
            {
            // InternalBeeLangTestLanguage.g:13769:2: ( RULE_ID )
            // InternalBeeLangTestLanguage.g:13770:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInfixExpressionAccess().getNameIDTerminalRuleCall_1_0_2_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInfixExpressionAccess().getNameIDTerminalRuleCall_1_0_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 958, rule__InfixExpression__NameAssignment_1_0_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InfixExpression__NameAssignment_1_0_2"


    // $ANTLR start "rule__InfixExpression__ParameterListAssignment_1_0_4"
    // InternalBeeLangTestLanguage.g:13779:1: rule__InfixExpression__ParameterListAssignment_1_0_4 : ( ruleParameterList ) ;
    public final void rule__InfixExpression__ParameterListAssignment_1_0_4() throws RecognitionException {
        int rule__InfixExpression__ParameterListAssignment_1_0_4_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 959) ) { return ; }
            // InternalBeeLangTestLanguage.g:13783:1: ( ( ruleParameterList ) )
            // InternalBeeLangTestLanguage.g:13784:2: ( ruleParameterList )
            {
            // InternalBeeLangTestLanguage.g:13784:2: ( ruleParameterList )
            // InternalBeeLangTestLanguage.g:13785:3: ruleParameterList
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInfixExpressionAccess().getParameterListParameterListParserRuleCall_1_0_4_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleParameterList();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInfixExpressionAccess().getParameterListParameterListParserRuleCall_1_0_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 959, rule__InfixExpression__ParameterListAssignment_1_0_4_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InfixExpression__ParameterListAssignment_1_0_4"


    // $ANTLR start "rule__InfixExpression__IndexExprAssignment_1_1_2"
    // InternalBeeLangTestLanguage.g:13794:1: rule__InfixExpression__IndexExprAssignment_1_1_2 : ( ruleExpression ) ;
    public final void rule__InfixExpression__IndexExprAssignment_1_1_2() throws RecognitionException {
        int rule__InfixExpression__IndexExprAssignment_1_1_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 960) ) { return ; }
            // InternalBeeLangTestLanguage.g:13798:1: ( ( ruleExpression ) )
            // InternalBeeLangTestLanguage.g:13799:2: ( ruleExpression )
            {
            // InternalBeeLangTestLanguage.g:13799:2: ( ruleExpression )
            // InternalBeeLangTestLanguage.g:13800:3: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInfixExpressionAccess().getIndexExprExpressionParserRuleCall_1_1_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInfixExpressionAccess().getIndexExprExpressionParserRuleCall_1_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 960, rule__InfixExpression__IndexExprAssignment_1_1_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InfixExpression__IndexExprAssignment_1_1_2"


    // $ANTLR start "rule__InfixExpression__FeatureNameAssignment_1_2_2"
    // InternalBeeLangTestLanguage.g:13809:1: rule__InfixExpression__FeatureNameAssignment_1_2_2 : ( RULE_ID ) ;
    public final void rule__InfixExpression__FeatureNameAssignment_1_2_2() throws RecognitionException {
        int rule__InfixExpression__FeatureNameAssignment_1_2_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 961) ) { return ; }
            // InternalBeeLangTestLanguage.g:13813:1: ( ( RULE_ID ) )
            // InternalBeeLangTestLanguage.g:13814:2: ( RULE_ID )
            {
            // InternalBeeLangTestLanguage.g:13814:2: ( RULE_ID )
            // InternalBeeLangTestLanguage.g:13815:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInfixExpressionAccess().getFeatureNameIDTerminalRuleCall_1_2_2_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInfixExpressionAccess().getFeatureNameIDTerminalRuleCall_1_2_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 961, rule__InfixExpression__FeatureNameAssignment_1_2_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InfixExpression__FeatureNameAssignment_1_2_2"


    // $ANTLR start "rule__CallExpression__ParameterListAssignment_1_2"
    // InternalBeeLangTestLanguage.g:13824:1: rule__CallExpression__ParameterListAssignment_1_2 : ( ruleParameterList ) ;
    public final void rule__CallExpression__ParameterListAssignment_1_2() throws RecognitionException {
        int rule__CallExpression__ParameterListAssignment_1_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 962) ) { return ; }
            // InternalBeeLangTestLanguage.g:13828:1: ( ( ruleParameterList ) )
            // InternalBeeLangTestLanguage.g:13829:2: ( ruleParameterList )
            {
            // InternalBeeLangTestLanguage.g:13829:2: ( ruleParameterList )
            // InternalBeeLangTestLanguage.g:13830:3: ruleParameterList
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCallExpressionAccess().getParameterListParameterListParserRuleCall_1_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleParameterList();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCallExpressionAccess().getParameterListParameterListParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 962, rule__CallExpression__ParameterListAssignment_1_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CallExpression__ParameterListAssignment_1_2"


    // $ANTLR start "rule__WithExpression__ReferencedAdviceAssignment_1_0"
    // InternalBeeLangTestLanguage.g:13839:1: rule__WithExpression__ReferencedAdviceAssignment_1_0 : ( RULE_ID ) ;
    public final void rule__WithExpression__ReferencedAdviceAssignment_1_0() throws RecognitionException {
        int rule__WithExpression__ReferencedAdviceAssignment_1_0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 963) ) { return ; }
            // InternalBeeLangTestLanguage.g:13843:1: ( ( RULE_ID ) )
            // InternalBeeLangTestLanguage.g:13844:2: ( RULE_ID )
            {
            // InternalBeeLangTestLanguage.g:13844:2: ( RULE_ID )
            // InternalBeeLangTestLanguage.g:13845:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithExpressionAccess().getReferencedAdviceIDTerminalRuleCall_1_0_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithExpressionAccess().getReferencedAdviceIDTerminalRuleCall_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 963, rule__WithExpression__ReferencedAdviceAssignment_1_0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithExpression__ReferencedAdviceAssignment_1_0"


    // $ANTLR start "rule__WithExpression__ReferencedAdviceAssignment_1_1_1"
    // InternalBeeLangTestLanguage.g:13854:1: rule__WithExpression__ReferencedAdviceAssignment_1_1_1 : ( RULE_ID ) ;
    public final void rule__WithExpression__ReferencedAdviceAssignment_1_1_1() throws RecognitionException {
        int rule__WithExpression__ReferencedAdviceAssignment_1_1_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 964) ) { return ; }
            // InternalBeeLangTestLanguage.g:13858:1: ( ( RULE_ID ) )
            // InternalBeeLangTestLanguage.g:13859:2: ( RULE_ID )
            {
            // InternalBeeLangTestLanguage.g:13859:2: ( RULE_ID )
            // InternalBeeLangTestLanguage.g:13860:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithExpressionAccess().getReferencedAdviceIDTerminalRuleCall_1_1_1_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithExpressionAccess().getReferencedAdviceIDTerminalRuleCall_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 964, rule__WithExpression__ReferencedAdviceAssignment_1_1_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithExpression__ReferencedAdviceAssignment_1_1_1"


    // $ANTLR start "rule__WithExpression__FuncExprAssignment_2_0_1"
    // InternalBeeLangTestLanguage.g:13869:1: rule__WithExpression__FuncExprAssignment_2_0_1 : ( ruleExpression ) ;
    public final void rule__WithExpression__FuncExprAssignment_2_0_1() throws RecognitionException {
        int rule__WithExpression__FuncExprAssignment_2_0_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 965) ) { return ; }
            // InternalBeeLangTestLanguage.g:13873:1: ( ( ruleExpression ) )
            // InternalBeeLangTestLanguage.g:13874:2: ( ruleExpression )
            {
            // InternalBeeLangTestLanguage.g:13874:2: ( ruleExpression )
            // InternalBeeLangTestLanguage.g:13875:3: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithExpressionAccess().getFuncExprExpressionParserRuleCall_2_0_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithExpressionAccess().getFuncExprExpressionParserRuleCall_2_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 965, rule__WithExpression__FuncExprAssignment_2_0_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithExpression__FuncExprAssignment_2_0_1"


    // $ANTLR start "rule__WithExpression__FuncExprAssignment_2_1_1"
    // InternalBeeLangTestLanguage.g:13884:1: rule__WithExpression__FuncExprAssignment_2_1_1 : ( ruleBlockExpressionWithoutBrackets ) ;
    public final void rule__WithExpression__FuncExprAssignment_2_1_1() throws RecognitionException {
        int rule__WithExpression__FuncExprAssignment_2_1_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 966) ) { return ; }
            // InternalBeeLangTestLanguage.g:13888:1: ( ( ruleBlockExpressionWithoutBrackets ) )
            // InternalBeeLangTestLanguage.g:13889:2: ( ruleBlockExpressionWithoutBrackets )
            {
            // InternalBeeLangTestLanguage.g:13889:2: ( ruleBlockExpressionWithoutBrackets )
            // InternalBeeLangTestLanguage.g:13890:3: ruleBlockExpressionWithoutBrackets
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithExpressionAccess().getFuncExprBlockExpressionWithoutBracketsParserRuleCall_2_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleBlockExpressionWithoutBrackets();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithExpressionAccess().getFuncExprBlockExpressionWithoutBracketsParserRuleCall_2_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 966, rule__WithExpression__FuncExprAssignment_2_1_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithExpression__FuncExprAssignment_2_1_1"


    // $ANTLR start "rule__WithContextExpression__ExprAssignment_2"
    // InternalBeeLangTestLanguage.g:13899:1: rule__WithContextExpression__ExprAssignment_2 : ( ruleExpression ) ;
    public final void rule__WithContextExpression__ExprAssignment_2() throws RecognitionException {
        int rule__WithContextExpression__ExprAssignment_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 967) ) { return ; }
            // InternalBeeLangTestLanguage.g:13903:1: ( ( ruleExpression ) )
            // InternalBeeLangTestLanguage.g:13904:2: ( ruleExpression )
            {
            // InternalBeeLangTestLanguage.g:13904:2: ( ruleExpression )
            // InternalBeeLangTestLanguage.g:13905:3: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithContextExpressionAccess().getExprExpressionParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithContextExpressionAccess().getExprExpressionParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 967, rule__WithContextExpression__ExprAssignment_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithContextExpression__ExprAssignment_2"


    // $ANTLR start "rule__WithContextExpression__AliasAssignment_3_1"
    // InternalBeeLangTestLanguage.g:13914:1: rule__WithContextExpression__AliasAssignment_3_1 : ( RULE_ID ) ;
    public final void rule__WithContextExpression__AliasAssignment_3_1() throws RecognitionException {
        int rule__WithContextExpression__AliasAssignment_3_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 968) ) { return ; }
            // InternalBeeLangTestLanguage.g:13918:1: ( ( RULE_ID ) )
            // InternalBeeLangTestLanguage.g:13919:2: ( RULE_ID )
            {
            // InternalBeeLangTestLanguage.g:13919:2: ( RULE_ID )
            // InternalBeeLangTestLanguage.g:13920:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithContextExpressionAccess().getAliasIDTerminalRuleCall_3_1_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithContextExpressionAccess().getAliasIDTerminalRuleCall_3_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 968, rule__WithContextExpression__AliasAssignment_3_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithContextExpression__AliasAssignment_3_1"


    // $ANTLR start "rule__WithContextExpression__ContextBlockAssignment_4"
    // InternalBeeLangTestLanguage.g:13929:1: rule__WithContextExpression__ContextBlockAssignment_4 : ( ruleBlockExpression ) ;
    public final void rule__WithContextExpression__ContextBlockAssignment_4() throws RecognitionException {
        int rule__WithContextExpression__ContextBlockAssignment_4_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 969) ) { return ; }
            // InternalBeeLangTestLanguage.g:13933:1: ( ( ruleBlockExpression ) )
            // InternalBeeLangTestLanguage.g:13934:2: ( ruleBlockExpression )
            {
            // InternalBeeLangTestLanguage.g:13934:2: ( ruleBlockExpression )
            // InternalBeeLangTestLanguage.g:13935:3: ruleBlockExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithContextExpressionAccess().getContextBlockBlockExpressionParserRuleCall_4_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleBlockExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithContextExpressionAccess().getContextBlockBlockExpressionParserRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 969, rule__WithContextExpression__ContextBlockAssignment_4_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithContextExpression__ContextBlockAssignment_4"


    // $ANTLR start "rule__BlockExpression__ExpressionsAssignment_2_0"
    // InternalBeeLangTestLanguage.g:13944:1: rule__BlockExpression__ExpressionsAssignment_2_0 : ( ruleTopLevelExpression ) ;
    public final void rule__BlockExpression__ExpressionsAssignment_2_0() throws RecognitionException {
        int rule__BlockExpression__ExpressionsAssignment_2_0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 970) ) { return ; }
            // InternalBeeLangTestLanguage.g:13948:1: ( ( ruleTopLevelExpression ) )
            // InternalBeeLangTestLanguage.g:13949:2: ( ruleTopLevelExpression )
            {
            // InternalBeeLangTestLanguage.g:13949:2: ( ruleTopLevelExpression )
            // InternalBeeLangTestLanguage.g:13950:3: ruleTopLevelExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBlockExpressionAccess().getExpressionsTopLevelExpressionParserRuleCall_2_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleTopLevelExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBlockExpressionAccess().getExpressionsTopLevelExpressionParserRuleCall_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 970, rule__BlockExpression__ExpressionsAssignment_2_0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BlockExpression__ExpressionsAssignment_2_0"


    // $ANTLR start "rule__Value__NameAssignment_1"
    // InternalBeeLangTestLanguage.g:13959:1: rule__Value__NameAssignment_1 : ( RULE_ID ) ;
    public final void rule__Value__NameAssignment_1() throws RecognitionException {
        int rule__Value__NameAssignment_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 971) ) { return ; }
            // InternalBeeLangTestLanguage.g:13963:1: ( ( RULE_ID ) )
            // InternalBeeLangTestLanguage.g:13964:2: ( RULE_ID )
            {
            // InternalBeeLangTestLanguage.g:13964:2: ( RULE_ID )
            // InternalBeeLangTestLanguage.g:13965:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValueAccess().getNameIDTerminalRuleCall_1_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getValueAccess().getNameIDTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 971, rule__Value__NameAssignment_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Value__NameAssignment_1"


    // $ANTLR start "rule__KeywordVariables__NameAssignment_1"
    // InternalBeeLangTestLanguage.g:13974:1: rule__KeywordVariables__NameAssignment_1 : ( ( rule__KeywordVariables__NameAlternatives_1_0 ) ) ;
    public final void rule__KeywordVariables__NameAssignment_1() throws RecognitionException {
        int rule__KeywordVariables__NameAssignment_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 972) ) { return ; }
            // InternalBeeLangTestLanguage.g:13978:1: ( ( ( rule__KeywordVariables__NameAlternatives_1_0 ) ) )
            // InternalBeeLangTestLanguage.g:13979:2: ( ( rule__KeywordVariables__NameAlternatives_1_0 ) )
            {
            // InternalBeeLangTestLanguage.g:13979:2: ( ( rule__KeywordVariables__NameAlternatives_1_0 ) )
            // InternalBeeLangTestLanguage.g:13980:3: ( rule__KeywordVariables__NameAlternatives_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getKeywordVariablesAccess().getNameAlternatives_1_0()); 
            }
            // InternalBeeLangTestLanguage.g:13981:3: ( rule__KeywordVariables__NameAlternatives_1_0 )
            // InternalBeeLangTestLanguage.g:13981:4: rule__KeywordVariables__NameAlternatives_1_0
            {
            pushFollow(FOLLOW_2);
            rule__KeywordVariables__NameAlternatives_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getKeywordVariablesAccess().getNameAlternatives_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 972, rule__KeywordVariables__NameAssignment_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__KeywordVariables__NameAssignment_1"


    // $ANTLR start "rule__OperationCall__NameAssignment_1"
    // InternalBeeLangTestLanguage.g:13989:1: rule__OperationCall__NameAssignment_1 : ( RULE_ID ) ;
    public final void rule__OperationCall__NameAssignment_1() throws RecognitionException {
        int rule__OperationCall__NameAssignment_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 973) ) { return ; }
            // InternalBeeLangTestLanguage.g:13993:1: ( ( RULE_ID ) )
            // InternalBeeLangTestLanguage.g:13994:2: ( RULE_ID )
            {
            // InternalBeeLangTestLanguage.g:13994:2: ( RULE_ID )
            // InternalBeeLangTestLanguage.g:13995:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperationCallAccess().getNameIDTerminalRuleCall_1_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperationCallAccess().getNameIDTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 973, rule__OperationCall__NameAssignment_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperationCall__NameAssignment_1"


    // $ANTLR start "rule__OperationCall__ParameterListAssignment_3"
    // InternalBeeLangTestLanguage.g:14004:1: rule__OperationCall__ParameterListAssignment_3 : ( ruleParameterList ) ;
    public final void rule__OperationCall__ParameterListAssignment_3() throws RecognitionException {
        int rule__OperationCall__ParameterListAssignment_3_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 974) ) { return ; }
            // InternalBeeLangTestLanguage.g:14008:1: ( ( ruleParameterList ) )
            // InternalBeeLangTestLanguage.g:14009:2: ( ruleParameterList )
            {
            // InternalBeeLangTestLanguage.g:14009:2: ( ruleParameterList )
            // InternalBeeLangTestLanguage.g:14010:3: ruleParameterList
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperationCallAccess().getParameterListParameterListParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleParameterList();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperationCallAccess().getParameterListParameterListParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 974, rule__OperationCall__ParameterListAssignment_3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperationCall__ParameterListAssignment_3"


    // $ANTLR start "rule__ConstructorCallExpression__TypeExprAssignment_2"
    // InternalBeeLangTestLanguage.g:14019:1: rule__ConstructorCallExpression__TypeExprAssignment_2 : ( RULE_ID ) ;
    public final void rule__ConstructorCallExpression__TypeExprAssignment_2() throws RecognitionException {
        int rule__ConstructorCallExpression__TypeExprAssignment_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 975) ) { return ; }
            // InternalBeeLangTestLanguage.g:14023:1: ( ( RULE_ID ) )
            // InternalBeeLangTestLanguage.g:14024:2: ( RULE_ID )
            {
            // InternalBeeLangTestLanguage.g:14024:2: ( RULE_ID )
            // InternalBeeLangTestLanguage.g:14025:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConstructorCallExpressionAccess().getTypeExprIDTerminalRuleCall_2_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConstructorCallExpressionAccess().getTypeExprIDTerminalRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 975, rule__ConstructorCallExpression__TypeExprAssignment_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConstructorCallExpression__TypeExprAssignment_2"


    // $ANTLR start "rule__ConstructorCallExpression__ParameterListAssignment_3_1"
    // InternalBeeLangTestLanguage.g:14034:1: rule__ConstructorCallExpression__ParameterListAssignment_3_1 : ( ruleParameterList ) ;
    public final void rule__ConstructorCallExpression__ParameterListAssignment_3_1() throws RecognitionException {
        int rule__ConstructorCallExpression__ParameterListAssignment_3_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 976) ) { return ; }
            // InternalBeeLangTestLanguage.g:14038:1: ( ( ruleParameterList ) )
            // InternalBeeLangTestLanguage.g:14039:2: ( ruleParameterList )
            {
            // InternalBeeLangTestLanguage.g:14039:2: ( ruleParameterList )
            // InternalBeeLangTestLanguage.g:14040:3: ruleParameterList
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConstructorCallExpressionAccess().getParameterListParameterListParserRuleCall_3_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleParameterList();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConstructorCallExpressionAccess().getParameterListParameterListParserRuleCall_3_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 976, rule__ConstructorCallExpression__ParameterListAssignment_3_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConstructorCallExpression__ParameterListAssignment_3_1"


    // $ANTLR start "rule__ConstructorCallExpression__AliasAssignment_4_1"
    // InternalBeeLangTestLanguage.g:14049:1: rule__ConstructorCallExpression__AliasAssignment_4_1 : ( RULE_ID ) ;
    public final void rule__ConstructorCallExpression__AliasAssignment_4_1() throws RecognitionException {
        int rule__ConstructorCallExpression__AliasAssignment_4_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 977) ) { return ; }
            // InternalBeeLangTestLanguage.g:14053:1: ( ( RULE_ID ) )
            // InternalBeeLangTestLanguage.g:14054:2: ( RULE_ID )
            {
            // InternalBeeLangTestLanguage.g:14054:2: ( RULE_ID )
            // InternalBeeLangTestLanguage.g:14055:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConstructorCallExpressionAccess().getAliasIDTerminalRuleCall_4_1_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConstructorCallExpressionAccess().getAliasIDTerminalRuleCall_4_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 977, rule__ConstructorCallExpression__AliasAssignment_4_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConstructorCallExpression__AliasAssignment_4_1"


    // $ANTLR start "rule__ConstructorCallExpression__ContextBlockAssignment_5"
    // InternalBeeLangTestLanguage.g:14064:1: rule__ConstructorCallExpression__ContextBlockAssignment_5 : ( ruleInitializationBlockExpression ) ;
    public final void rule__ConstructorCallExpression__ContextBlockAssignment_5() throws RecognitionException {
        int rule__ConstructorCallExpression__ContextBlockAssignment_5_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 978) ) { return ; }
            // InternalBeeLangTestLanguage.g:14068:1: ( ( ruleInitializationBlockExpression ) )
            // InternalBeeLangTestLanguage.g:14069:2: ( ruleInitializationBlockExpression )
            {
            // InternalBeeLangTestLanguage.g:14069:2: ( ruleInitializationBlockExpression )
            // InternalBeeLangTestLanguage.g:14070:3: ruleInitializationBlockExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConstructorCallExpressionAccess().getContextBlockInitializationBlockExpressionParserRuleCall_5_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleInitializationBlockExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConstructorCallExpressionAccess().getContextBlockInitializationBlockExpressionParserRuleCall_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 978, rule__ConstructorCallExpression__ContextBlockAssignment_5_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConstructorCallExpression__ContextBlockAssignment_5"


    // $ANTLR start "rule__InitializationBlockExpression__ExpressionsAssignment_2"
    // InternalBeeLangTestLanguage.g:14079:1: rule__InitializationBlockExpression__ExpressionsAssignment_2 : ( ruleInitializationExpression ) ;
    public final void rule__InitializationBlockExpression__ExpressionsAssignment_2() throws RecognitionException {
        int rule__InitializationBlockExpression__ExpressionsAssignment_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 979) ) { return ; }
            // InternalBeeLangTestLanguage.g:14083:1: ( ( ruleInitializationExpression ) )
            // InternalBeeLangTestLanguage.g:14084:2: ( ruleInitializationExpression )
            {
            // InternalBeeLangTestLanguage.g:14084:2: ( ruleInitializationExpression )
            // InternalBeeLangTestLanguage.g:14085:3: ruleInitializationExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInitializationBlockExpressionAccess().getExpressionsInitializationExpressionParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleInitializationExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInitializationBlockExpressionAccess().getExpressionsInitializationExpressionParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 979, rule__InitializationBlockExpression__ExpressionsAssignment_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InitializationBlockExpression__ExpressionsAssignment_2"


    // $ANTLR start "rule__InitializationExpression__LeftExprAssignment_1"
    // InternalBeeLangTestLanguage.g:14094:1: rule__InitializationExpression__LeftExprAssignment_1 : ( ruleFeatureOfThis ) ;
    public final void rule__InitializationExpression__LeftExprAssignment_1() throws RecognitionException {
        int rule__InitializationExpression__LeftExprAssignment_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 980) ) { return ; }
            // InternalBeeLangTestLanguage.g:14098:1: ( ( ruleFeatureOfThis ) )
            // InternalBeeLangTestLanguage.g:14099:2: ( ruleFeatureOfThis )
            {
            // InternalBeeLangTestLanguage.g:14099:2: ( ruleFeatureOfThis )
            // InternalBeeLangTestLanguage.g:14100:3: ruleFeatureOfThis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInitializationExpressionAccess().getLeftExprFeatureOfThisParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleFeatureOfThis();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInitializationExpressionAccess().getLeftExprFeatureOfThisParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 980, rule__InitializationExpression__LeftExprAssignment_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InitializationExpression__LeftExprAssignment_1"


    // $ANTLR start "rule__InitializationExpression__FunctionNameAssignment_2"
    // InternalBeeLangTestLanguage.g:14109:1: rule__InitializationExpression__FunctionNameAssignment_2 : ( ( ':' ) ) ;
    public final void rule__InitializationExpression__FunctionNameAssignment_2() throws RecognitionException {
        int rule__InitializationExpression__FunctionNameAssignment_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 981) ) { return ; }
            // InternalBeeLangTestLanguage.g:14113:1: ( ( ( ':' ) ) )
            // InternalBeeLangTestLanguage.g:14114:2: ( ( ':' ) )
            {
            // InternalBeeLangTestLanguage.g:14114:2: ( ( ':' ) )
            // InternalBeeLangTestLanguage.g:14115:3: ( ':' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInitializationExpressionAccess().getFunctionNameColonKeyword_2_0()); 
            }
            // InternalBeeLangTestLanguage.g:14116:3: ( ':' )
            // InternalBeeLangTestLanguage.g:14117:4: ':'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInitializationExpressionAccess().getFunctionNameColonKeyword_2_0()); 
            }
            match(input,49,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInitializationExpressionAccess().getFunctionNameColonKeyword_2_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInitializationExpressionAccess().getFunctionNameColonKeyword_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 981, rule__InitializationExpression__FunctionNameAssignment_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InitializationExpression__FunctionNameAssignment_2"


    // $ANTLR start "rule__InitializationExpression__RightExprAssignment_3"
    // InternalBeeLangTestLanguage.g:14128:1: rule__InitializationExpression__RightExprAssignment_3 : ( ruleExpression ) ;
    public final void rule__InitializationExpression__RightExprAssignment_3() throws RecognitionException {
        int rule__InitializationExpression__RightExprAssignment_3_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 982) ) { return ; }
            // InternalBeeLangTestLanguage.g:14132:1: ( ( ruleExpression ) )
            // InternalBeeLangTestLanguage.g:14133:2: ( ruleExpression )
            {
            // InternalBeeLangTestLanguage.g:14133:2: ( ruleExpression )
            // InternalBeeLangTestLanguage.g:14134:3: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInitializationExpressionAccess().getRightExprExpressionParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInitializationExpressionAccess().getRightExprExpressionParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 982, rule__InitializationExpression__RightExprAssignment_3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InitializationExpression__RightExprAssignment_3"


    // $ANTLR start "rule__FeatureOfThis__FeatureNameAssignment_1"
    // InternalBeeLangTestLanguage.g:14143:1: rule__FeatureOfThis__FeatureNameAssignment_1 : ( RULE_ID ) ;
    public final void rule__FeatureOfThis__FeatureNameAssignment_1() throws RecognitionException {
        int rule__FeatureOfThis__FeatureNameAssignment_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 983) ) { return ; }
            // InternalBeeLangTestLanguage.g:14147:1: ( ( RULE_ID ) )
            // InternalBeeLangTestLanguage.g:14148:2: ( RULE_ID )
            {
            // InternalBeeLangTestLanguage.g:14148:2: ( RULE_ID )
            // InternalBeeLangTestLanguage.g:14149:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFeatureOfThisAccess().getFeatureNameIDTerminalRuleCall_1_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFeatureOfThisAccess().getFeatureNameIDTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 983, rule__FeatureOfThis__FeatureNameAssignment_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FeatureOfThis__FeatureNameAssignment_1"


    // $ANTLR start "rule__ClosureExpression__ReturnTypeAssignment_1_1"
    // InternalBeeLangTestLanguage.g:14158:1: rule__ClosureExpression__ReturnTypeAssignment_1_1 : ( ruleTypeRef ) ;
    public final void rule__ClosureExpression__ReturnTypeAssignment_1_1() throws RecognitionException {
        int rule__ClosureExpression__ReturnTypeAssignment_1_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 984) ) { return ; }
            // InternalBeeLangTestLanguage.g:14162:1: ( ( ruleTypeRef ) )
            // InternalBeeLangTestLanguage.g:14163:2: ( ruleTypeRef )
            {
            // InternalBeeLangTestLanguage.g:14163:2: ( ruleTypeRef )
            // InternalBeeLangTestLanguage.g:14164:3: ruleTypeRef
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureExpressionAccess().getReturnTypeTypeRefParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleTypeRef();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureExpressionAccess().getReturnTypeTypeRefParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 984, rule__ClosureExpression__ReturnTypeAssignment_1_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__ReturnTypeAssignment_1_1"


    // $ANTLR start "rule__ClosureExpression__ParametersAssignment_2_0_1_0"
    // InternalBeeLangTestLanguage.g:14173:1: rule__ClosureExpression__ParametersAssignment_2_0_1_0 : ( ruleParameterDeclaration ) ;
    public final void rule__ClosureExpression__ParametersAssignment_2_0_1_0() throws RecognitionException {
        int rule__ClosureExpression__ParametersAssignment_2_0_1_0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 985) ) { return ; }
            // InternalBeeLangTestLanguage.g:14177:1: ( ( ruleParameterDeclaration ) )
            // InternalBeeLangTestLanguage.g:14178:2: ( ruleParameterDeclaration )
            {
            // InternalBeeLangTestLanguage.g:14178:2: ( ruleParameterDeclaration )
            // InternalBeeLangTestLanguage.g:14179:3: ruleParameterDeclaration
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureExpressionAccess().getParametersParameterDeclarationParserRuleCall_2_0_1_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleParameterDeclaration();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureExpressionAccess().getParametersParameterDeclarationParserRuleCall_2_0_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 985, rule__ClosureExpression__ParametersAssignment_2_0_1_0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__ParametersAssignment_2_0_1_0"


    // $ANTLR start "rule__ClosureExpression__ParametersAssignment_2_0_1_1_1"
    // InternalBeeLangTestLanguage.g:14188:1: rule__ClosureExpression__ParametersAssignment_2_0_1_1_1 : ( ruleParameterDeclaration ) ;
    public final void rule__ClosureExpression__ParametersAssignment_2_0_1_1_1() throws RecognitionException {
        int rule__ClosureExpression__ParametersAssignment_2_0_1_1_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 986) ) { return ; }
            // InternalBeeLangTestLanguage.g:14192:1: ( ( ruleParameterDeclaration ) )
            // InternalBeeLangTestLanguage.g:14193:2: ( ruleParameterDeclaration )
            {
            // InternalBeeLangTestLanguage.g:14193:2: ( ruleParameterDeclaration )
            // InternalBeeLangTestLanguage.g:14194:3: ruleParameterDeclaration
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureExpressionAccess().getParametersParameterDeclarationParserRuleCall_2_0_1_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleParameterDeclaration();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureExpressionAccess().getParametersParameterDeclarationParserRuleCall_2_0_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 986, rule__ClosureExpression__ParametersAssignment_2_0_1_1_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__ParametersAssignment_2_0_1_1_1"


    // $ANTLR start "rule__ClosureExpression__VarArgsAssignment_2_0_1_2_1"
    // InternalBeeLangTestLanguage.g:14203:1: rule__ClosureExpression__VarArgsAssignment_2_0_1_2_1 : ( ( '...' ) ) ;
    public final void rule__ClosureExpression__VarArgsAssignment_2_0_1_2_1() throws RecognitionException {
        int rule__ClosureExpression__VarArgsAssignment_2_0_1_2_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 987) ) { return ; }
            // InternalBeeLangTestLanguage.g:14207:1: ( ( ( '...' ) ) )
            // InternalBeeLangTestLanguage.g:14208:2: ( ( '...' ) )
            {
            // InternalBeeLangTestLanguage.g:14208:2: ( ( '...' ) )
            // InternalBeeLangTestLanguage.g:14209:3: ( '...' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureExpressionAccess().getVarArgsFullStopFullStopFullStopKeyword_2_0_1_2_1_0()); 
            }
            // InternalBeeLangTestLanguage.g:14210:3: ( '...' )
            // InternalBeeLangTestLanguage.g:14211:4: '...'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureExpressionAccess().getVarArgsFullStopFullStopFullStopKeyword_2_0_1_2_1_0()); 
            }
            match(input,75,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureExpressionAccess().getVarArgsFullStopFullStopFullStopKeyword_2_0_1_2_1_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureExpressionAccess().getVarArgsFullStopFullStopFullStopKeyword_2_0_1_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 987, rule__ClosureExpression__VarArgsAssignment_2_0_1_2_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__VarArgsAssignment_2_0_1_2_1"


    // $ANTLR start "rule__ClosureExpression__ParametersAssignment_2_0_1_2_2"
    // InternalBeeLangTestLanguage.g:14222:1: rule__ClosureExpression__ParametersAssignment_2_0_1_2_2 : ( ruleParameterDeclaration ) ;
    public final void rule__ClosureExpression__ParametersAssignment_2_0_1_2_2() throws RecognitionException {
        int rule__ClosureExpression__ParametersAssignment_2_0_1_2_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 988) ) { return ; }
            // InternalBeeLangTestLanguage.g:14226:1: ( ( ruleParameterDeclaration ) )
            // InternalBeeLangTestLanguage.g:14227:2: ( ruleParameterDeclaration )
            {
            // InternalBeeLangTestLanguage.g:14227:2: ( ruleParameterDeclaration )
            // InternalBeeLangTestLanguage.g:14228:3: ruleParameterDeclaration
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureExpressionAccess().getParametersParameterDeclarationParserRuleCall_2_0_1_2_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleParameterDeclaration();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureExpressionAccess().getParametersParameterDeclarationParserRuleCall_2_0_1_2_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 988, rule__ClosureExpression__ParametersAssignment_2_0_1_2_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__ParametersAssignment_2_0_1_2_2"


    // $ANTLR start "rule__ClosureExpression__VarArgsAssignment_2_1_0"
    // InternalBeeLangTestLanguage.g:14237:1: rule__ClosureExpression__VarArgsAssignment_2_1_0 : ( ( '...' ) ) ;
    public final void rule__ClosureExpression__VarArgsAssignment_2_1_0() throws RecognitionException {
        int rule__ClosureExpression__VarArgsAssignment_2_1_0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 989) ) { return ; }
            // InternalBeeLangTestLanguage.g:14241:1: ( ( ( '...' ) ) )
            // InternalBeeLangTestLanguage.g:14242:2: ( ( '...' ) )
            {
            // InternalBeeLangTestLanguage.g:14242:2: ( ( '...' ) )
            // InternalBeeLangTestLanguage.g:14243:3: ( '...' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureExpressionAccess().getVarArgsFullStopFullStopFullStopKeyword_2_1_0_0()); 
            }
            // InternalBeeLangTestLanguage.g:14244:3: ( '...' )
            // InternalBeeLangTestLanguage.g:14245:4: '...'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureExpressionAccess().getVarArgsFullStopFullStopFullStopKeyword_2_1_0_0()); 
            }
            match(input,75,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureExpressionAccess().getVarArgsFullStopFullStopFullStopKeyword_2_1_0_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureExpressionAccess().getVarArgsFullStopFullStopFullStopKeyword_2_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 989, rule__ClosureExpression__VarArgsAssignment_2_1_0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__VarArgsAssignment_2_1_0"


    // $ANTLR start "rule__ClosureExpression__ParametersAssignment_2_1_1"
    // InternalBeeLangTestLanguage.g:14256:1: rule__ClosureExpression__ParametersAssignment_2_1_1 : ( ruleParameterDeclaration ) ;
    public final void rule__ClosureExpression__ParametersAssignment_2_1_1() throws RecognitionException {
        int rule__ClosureExpression__ParametersAssignment_2_1_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 990) ) { return ; }
            // InternalBeeLangTestLanguage.g:14260:1: ( ( ruleParameterDeclaration ) )
            // InternalBeeLangTestLanguage.g:14261:2: ( ruleParameterDeclaration )
            {
            // InternalBeeLangTestLanguage.g:14261:2: ( ruleParameterDeclaration )
            // InternalBeeLangTestLanguage.g:14262:3: ruleParameterDeclaration
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureExpressionAccess().getParametersParameterDeclarationParserRuleCall_2_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleParameterDeclaration();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureExpressionAccess().getParametersParameterDeclarationParserRuleCall_2_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 990, rule__ClosureExpression__ParametersAssignment_2_1_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__ParametersAssignment_2_1_1"


    // $ANTLR start "rule__ClosureExpression__FuncExprAssignment_4"
    // InternalBeeLangTestLanguage.g:14271:1: rule__ClosureExpression__FuncExprAssignment_4 : ( ruleOneOrManyExpressions ) ;
    public final void rule__ClosureExpression__FuncExprAssignment_4() throws RecognitionException {
        int rule__ClosureExpression__FuncExprAssignment_4_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 991) ) { return ; }
            // InternalBeeLangTestLanguage.g:14275:1: ( ( ruleOneOrManyExpressions ) )
            // InternalBeeLangTestLanguage.g:14276:2: ( ruleOneOrManyExpressions )
            {
            // InternalBeeLangTestLanguage.g:14276:2: ( ruleOneOrManyExpressions )
            // InternalBeeLangTestLanguage.g:14277:3: ruleOneOrManyExpressions
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureExpressionAccess().getFuncExprOneOrManyExpressionsParserRuleCall_4_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOneOrManyExpressions();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureExpressionAccess().getFuncExprOneOrManyExpressionsParserRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 991, rule__ClosureExpression__FuncExprAssignment_4_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__FuncExprAssignment_4"


    // $ANTLR start "rule__BlockExpressionWithoutBrackets__ExpressionsAssignment_1_0"
    // InternalBeeLangTestLanguage.g:14286:1: rule__BlockExpressionWithoutBrackets__ExpressionsAssignment_1_0 : ( ruleTopLevelExpression ) ;
    public final void rule__BlockExpressionWithoutBrackets__ExpressionsAssignment_1_0() throws RecognitionException {
        int rule__BlockExpressionWithoutBrackets__ExpressionsAssignment_1_0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 992) ) { return ; }
            // InternalBeeLangTestLanguage.g:14290:1: ( ( ruleTopLevelExpression ) )
            // InternalBeeLangTestLanguage.g:14291:2: ( ruleTopLevelExpression )
            {
            // InternalBeeLangTestLanguage.g:14291:2: ( ruleTopLevelExpression )
            // InternalBeeLangTestLanguage.g:14292:3: ruleTopLevelExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBlockExpressionWithoutBracketsAccess().getExpressionsTopLevelExpressionParserRuleCall_1_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleTopLevelExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBlockExpressionWithoutBracketsAccess().getExpressionsTopLevelExpressionParserRuleCall_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 992, rule__BlockExpressionWithoutBrackets__ExpressionsAssignment_1_0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BlockExpressionWithoutBrackets__ExpressionsAssignment_1_0"


    // $ANTLR start "rule__ValueLiteral__ValueAssignment"
    // InternalBeeLangTestLanguage.g:14301:1: rule__ValueLiteral__ValueAssignment : ( RULE_STRING ) ;
    public final void rule__ValueLiteral__ValueAssignment() throws RecognitionException {
        int rule__ValueLiteral__ValueAssignment_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 993) ) { return ; }
            // InternalBeeLangTestLanguage.g:14305:1: ( ( RULE_STRING ) )
            // InternalBeeLangTestLanguage.g:14306:2: ( RULE_STRING )
            {
            // InternalBeeLangTestLanguage.g:14306:2: ( RULE_STRING )
            // InternalBeeLangTestLanguage.g:14307:3: RULE_STRING
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValueLiteralAccess().getValueSTRINGTerminalRuleCall_0()); 
            }
            match(input,RULE_STRING,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getValueLiteralAccess().getValueSTRINGTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 993, rule__ValueLiteral__ValueAssignment_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValueLiteral__ValueAssignment"

    // $ANTLR start synpred2_InternalBeeLangTestLanguage
    public final void synpred2_InternalBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalBeeLangTestLanguage.g:1475:2: ( ( ( rule__Model__UnitsAssignment_0 )* ) )
        // InternalBeeLangTestLanguage.g:1475:2: ( ( rule__Model__UnitsAssignment_0 )* )
        {
        // InternalBeeLangTestLanguage.g:1475:2: ( ( rule__Model__UnitsAssignment_0 )* )
        // InternalBeeLangTestLanguage.g:1476:3: ( rule__Model__UnitsAssignment_0 )*
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getModelAccess().getUnitsAssignment_0()); 
        }
        // InternalBeeLangTestLanguage.g:1477:3: ( rule__Model__UnitsAssignment_0 )*
        loop120:
        do {
            int alt120=2;
            int LA120_0 = input.LA(1);

            if ( (LA120_0==RULE_DOCUMENTATION||LA120_0==13) ) {
                alt120=1;
            }


            switch (alt120) {
        	case 1 :
        	    // InternalBeeLangTestLanguage.g:1477:4: rule__Model__UnitsAssignment_0
        	    {
        	    pushFollow(FOLLOW_3);
        	    rule__Model__UnitsAssignment_0();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }
        	    break;

        	default :
        	    break loop120;
            }
        } while (true);


        }


        }
    }
    // $ANTLR end synpred2_InternalBeeLangTestLanguage

    // $ANTLR start synpred8_InternalBeeLangTestLanguage
    public final void synpred8_InternalBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalBeeLangTestLanguage.g:1580:2: ( ( ruleClosureParameter ) )
        // InternalBeeLangTestLanguage.g:1580:2: ( ruleClosureParameter )
        {
        // InternalBeeLangTestLanguage.g:1580:2: ( ruleClosureParameter )
        // InternalBeeLangTestLanguage.g:1581:3: ruleClosureParameter
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getFirstParameterAccess().getClosureParameterParserRuleCall_0()); 
        }
        pushFollow(FOLLOW_2);
        ruleClosureParameter();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred8_InternalBeeLangTestLanguage

    // $ANTLR start synpred25_InternalBeeLangTestLanguage
    public final void synpred25_InternalBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalBeeLangTestLanguage.g:1772:2: ( ( ruleVarDeclaration ) )
        // InternalBeeLangTestLanguage.g:1772:2: ( ruleVarDeclaration )
        {
        // InternalBeeLangTestLanguage.g:1772:2: ( ruleVarDeclaration )
        // InternalBeeLangTestLanguage.g:1773:3: ruleVarDeclaration
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getTopLevelExpressionAccess().getVarDeclarationParserRuleCall_0()); 
        }
        pushFollow(FOLLOW_2);
        ruleVarDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred25_InternalBeeLangTestLanguage

    // $ANTLR start synpred39_InternalBeeLangTestLanguage
    public final void synpred39_InternalBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalBeeLangTestLanguage.g:2021:2: ( ( ( rule__InfixExpression__Group_1_0__0 ) ) )
        // InternalBeeLangTestLanguage.g:2021:2: ( ( rule__InfixExpression__Group_1_0__0 ) )
        {
        // InternalBeeLangTestLanguage.g:2021:2: ( ( rule__InfixExpression__Group_1_0__0 ) )
        // InternalBeeLangTestLanguage.g:2022:3: ( rule__InfixExpression__Group_1_0__0 )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getInfixExpressionAccess().getGroup_1_0()); 
        }
        // InternalBeeLangTestLanguage.g:2023:3: ( rule__InfixExpression__Group_1_0__0 )
        // InternalBeeLangTestLanguage.g:2023:4: rule__InfixExpression__Group_1_0__0
        {
        pushFollow(FOLLOW_2);
        rule__InfixExpression__Group_1_0__0();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred39_InternalBeeLangTestLanguage

    // $ANTLR start synpred41_InternalBeeLangTestLanguage
    public final void synpred41_InternalBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalBeeLangTestLanguage.g:2048:2: ( ( ruleFeatureCall ) )
        // InternalBeeLangTestLanguage.g:2048:2: ( ruleFeatureCall )
        {
        // InternalBeeLangTestLanguage.g:2048:2: ( ruleFeatureCall )
        // InternalBeeLangTestLanguage.g:2049:3: ruleFeatureCall
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getPrimaryExpressionAccess().getFeatureCallParserRuleCall_0()); 
        }
        pushFollow(FOLLOW_2);
        ruleFeatureCall();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred41_InternalBeeLangTestLanguage

    // $ANTLR start synpred43_InternalBeeLangTestLanguage
    public final void synpred43_InternalBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalBeeLangTestLanguage.g:2060:2: ( ( ruleValue ) )
        // InternalBeeLangTestLanguage.g:2060:2: ( ruleValue )
        {
        // InternalBeeLangTestLanguage.g:2060:2: ( ruleValue )
        // InternalBeeLangTestLanguage.g:2061:3: ruleValue
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getPrimaryExpressionAccess().getValueParserRuleCall_2()); 
        }
        pushFollow(FOLLOW_2);
        ruleValue();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred43_InternalBeeLangTestLanguage

    // $ANTLR start synpred44_InternalBeeLangTestLanguage
    public final void synpred44_InternalBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalBeeLangTestLanguage.g:2066:2: ( ( ruleLiteral ) )
        // InternalBeeLangTestLanguage.g:2066:2: ( ruleLiteral )
        {
        // InternalBeeLangTestLanguage.g:2066:2: ( ruleLiteral )
        // InternalBeeLangTestLanguage.g:2067:3: ruleLiteral
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getPrimaryExpressionAccess().getLiteralParserRuleCall_3()); 
        }
        pushFollow(FOLLOW_2);
        ruleLiteral();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred44_InternalBeeLangTestLanguage

    // $ANTLR start synpred47_InternalBeeLangTestLanguage
    public final void synpred47_InternalBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalBeeLangTestLanguage.g:2084:2: ( ( ruleBlockExpression ) )
        // InternalBeeLangTestLanguage.g:2084:2: ( ruleBlockExpression )
        {
        // InternalBeeLangTestLanguage.g:2084:2: ( ruleBlockExpression )
        // InternalBeeLangTestLanguage.g:2085:3: ruleBlockExpression
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getPrimaryExpressionAccess().getBlockExpressionParserRuleCall_6()); 
        }
        pushFollow(FOLLOW_2);
        ruleBlockExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred47_InternalBeeLangTestLanguage

    // $ANTLR start synpred48_InternalBeeLangTestLanguage
    public final void synpred48_InternalBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalBeeLangTestLanguage.g:2090:2: ( ( ruleWithExpression ) )
        // InternalBeeLangTestLanguage.g:2090:2: ( ruleWithExpression )
        {
        // InternalBeeLangTestLanguage.g:2090:2: ( ruleWithExpression )
        // InternalBeeLangTestLanguage.g:2091:3: ruleWithExpression
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getPrimaryExpressionAccess().getWithExpressionParserRuleCall_7()); 
        }
        pushFollow(FOLLOW_2);
        ruleWithExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred48_InternalBeeLangTestLanguage

    // $ANTLR start synpred58_InternalBeeLangTestLanguage
    public final void synpred58_InternalBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalBeeLangTestLanguage.g:2225:2: ( ( ruleBlockExpressionWithoutBrackets ) )
        // InternalBeeLangTestLanguage.g:2225:2: ( ruleBlockExpressionWithoutBrackets )
        {
        // InternalBeeLangTestLanguage.g:2225:2: ( ruleBlockExpressionWithoutBrackets )
        // InternalBeeLangTestLanguage.g:2226:3: ruleBlockExpressionWithoutBrackets
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getOneOrManyExpressionsAccess().getBlockExpressionWithoutBracketsParserRuleCall_0()); 
        }
        pushFollow(FOLLOW_2);
        ruleBlockExpressionWithoutBrackets();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred58_InternalBeeLangTestLanguage

    // $ANTLR start synpred84_InternalBeeLangTestLanguage
    public final void synpred84_InternalBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalBeeLangTestLanguage.g:6363:3: ( rule__AssignmentExpression__Group_1__0 )
        // InternalBeeLangTestLanguage.g:6363:3: rule__AssignmentExpression__Group_1__0
        {
        pushFollow(FOLLOW_2);
        rule__AssignmentExpression__Group_1__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred84_InternalBeeLangTestLanguage

    // $ANTLR start synpred94_InternalBeeLangTestLanguage
    public final void synpred94_InternalBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalBeeLangTestLanguage.g:7605:3: ( rule__OrExpression__Group_1__0 )
        // InternalBeeLangTestLanguage.g:7605:3: rule__OrExpression__Group_1__0
        {
        pushFollow(FOLLOW_2);
        rule__OrExpression__Group_1__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred94_InternalBeeLangTestLanguage

    // $ANTLR start synpred95_InternalBeeLangTestLanguage
    public final void synpred95_InternalBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalBeeLangTestLanguage.g:7740:3: ( rule__AndExpression__Group_1__0 )
        // InternalBeeLangTestLanguage.g:7740:3: rule__AndExpression__Group_1__0
        {
        pushFollow(FOLLOW_2);
        rule__AndExpression__Group_1__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred95_InternalBeeLangTestLanguage

    // $ANTLR start synpred96_InternalBeeLangTestLanguage
    public final void synpred96_InternalBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalBeeLangTestLanguage.g:7875:3: ( rule__RelationalExpression__Group_1__0 )
        // InternalBeeLangTestLanguage.g:7875:3: rule__RelationalExpression__Group_1__0
        {
        pushFollow(FOLLOW_2);
        rule__RelationalExpression__Group_1__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred96_InternalBeeLangTestLanguage

    // $ANTLR start synpred97_InternalBeeLangTestLanguage
    public final void synpred97_InternalBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalBeeLangTestLanguage.g:8010:3: ( rule__AdditiveExpression__Group_1__0 )
        // InternalBeeLangTestLanguage.g:8010:3: rule__AdditiveExpression__Group_1__0
        {
        pushFollow(FOLLOW_2);
        rule__AdditiveExpression__Group_1__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred97_InternalBeeLangTestLanguage

    // $ANTLR start synpred98_InternalBeeLangTestLanguage
    public final void synpred98_InternalBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalBeeLangTestLanguage.g:8145:3: ( rule__MultiplicativeExpression__Group_1__0 )
        // InternalBeeLangTestLanguage.g:8145:3: rule__MultiplicativeExpression__Group_1__0
        {
        pushFollow(FOLLOW_2);
        rule__MultiplicativeExpression__Group_1__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred98_InternalBeeLangTestLanguage

    // $ANTLR start synpred99_InternalBeeLangTestLanguage
    public final void synpred99_InternalBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalBeeLangTestLanguage.g:8280:3: ( rule__SetExpression__Group_1__0 )
        // InternalBeeLangTestLanguage.g:8280:3: rule__SetExpression__Group_1__0
        {
        pushFollow(FOLLOW_2);
        rule__SetExpression__Group_1__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred99_InternalBeeLangTestLanguage

    // $ANTLR start synpred100_InternalBeeLangTestLanguage
    public final void synpred100_InternalBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalBeeLangTestLanguage.g:8577:3: ( rule__PostopExpression__Group_1__0 )
        // InternalBeeLangTestLanguage.g:8577:3: rule__PostopExpression__Group_1__0
        {
        pushFollow(FOLLOW_2);
        rule__PostopExpression__Group_1__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred100_InternalBeeLangTestLanguage

    // $ANTLR start synpred101_InternalBeeLangTestLanguage
    public final void synpred101_InternalBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalBeeLangTestLanguage.g:8685:3: ( rule__InfixExpression__Alternatives_1 )
        // InternalBeeLangTestLanguage.g:8685:3: rule__InfixExpression__Alternatives_1
        {
        pushFollow(FOLLOW_2);
        rule__InfixExpression__Alternatives_1();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred101_InternalBeeLangTestLanguage

    // $ANTLR start synpred103_InternalBeeLangTestLanguage
    public final void synpred103_InternalBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalBeeLangTestLanguage.g:9090:3: ( rule__CallExpression__Group_1__0 )
        // InternalBeeLangTestLanguage.g:9090:3: rule__CallExpression__Group_1__0
        {
        pushFollow(FOLLOW_2);
        rule__CallExpression__Group_1__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred103_InternalBeeLangTestLanguage

    // $ANTLR start synpred110_InternalBeeLangTestLanguage
    public final void synpred110_InternalBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalBeeLangTestLanguage.g:10225:3: ( rule__ConstructorCallExpression__Group_3__0 )
        // InternalBeeLangTestLanguage.g:10225:3: rule__ConstructorCallExpression__Group_3__0
        {
        pushFollow(FOLLOW_2);
        rule__ConstructorCallExpression__Group_3__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred110_InternalBeeLangTestLanguage

    // $ANTLR start synpred111_InternalBeeLangTestLanguage
    public final void synpred111_InternalBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalBeeLangTestLanguage.g:10252:3: ( rule__ConstructorCallExpression__Group_4__0 )
        // InternalBeeLangTestLanguage.g:10252:3: rule__ConstructorCallExpression__Group_4__0
        {
        pushFollow(FOLLOW_2);
        rule__ConstructorCallExpression__Group_4__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred111_InternalBeeLangTestLanguage

    // $ANTLR start synpred115_InternalBeeLangTestLanguage
    public final void synpred115_InternalBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalBeeLangTestLanguage.g:10873:3: ( rule__ClosureExpression__Alternatives_2 )
        // InternalBeeLangTestLanguage.g:10873:3: rule__ClosureExpression__Alternatives_2
        {
        pushFollow(FOLLOW_2);
        rule__ClosureExpression__Alternatives_2();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred115_InternalBeeLangTestLanguage

    // $ANTLR start synpred123_InternalBeeLangTestLanguage
    public final void synpred123_InternalBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalBeeLangTestLanguage.g:11704:2: ( rule__Unit__UnorderedGroup_7__0 )
        // InternalBeeLangTestLanguage.g:11704:2: rule__Unit__UnorderedGroup_7__0
        {
        pushFollow(FOLLOW_2);
        rule__Unit__UnorderedGroup_7__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred123_InternalBeeLangTestLanguage

    // $ANTLR start synpred124_InternalBeeLangTestLanguage
    public final void synpred124_InternalBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalBeeLangTestLanguage.g:11719:3: ( ({...}? => ( ( ( rule__Unit__Group_7_0__0 ) ) ) ) )
        // InternalBeeLangTestLanguage.g:11719:3: ({...}? => ( ( ( rule__Unit__Group_7_0__0 ) ) ) )
        {
        // InternalBeeLangTestLanguage.g:11719:3: ({...}? => ( ( ( rule__Unit__Group_7_0__0 ) ) ) )
        // InternalBeeLangTestLanguage.g:11720:4: {...}? => ( ( ( rule__Unit__Group_7_0__0 ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 0) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred124_InternalBeeLangTestLanguage", "getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 0)");
        }
        // InternalBeeLangTestLanguage.g:11720:100: ( ( ( rule__Unit__Group_7_0__0 ) ) )
        // InternalBeeLangTestLanguage.g:11721:5: ( ( rule__Unit__Group_7_0__0 ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 0);
        // InternalBeeLangTestLanguage.g:11727:5: ( ( rule__Unit__Group_7_0__0 ) )
        // InternalBeeLangTestLanguage.g:11728:6: ( rule__Unit__Group_7_0__0 )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getUnitAccess().getGroup_7_0()); 
        }
        // InternalBeeLangTestLanguage.g:11729:6: ( rule__Unit__Group_7_0__0 )
        // InternalBeeLangTestLanguage.g:11729:7: rule__Unit__Group_7_0__0
        {
        pushFollow(FOLLOW_2);
        rule__Unit__Group_7_0__0();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred124_InternalBeeLangTestLanguage

    // $ANTLR start synpred125_InternalBeeLangTestLanguage
    public final void synpred125_InternalBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalBeeLangTestLanguage.g:11734:3: ( ({...}? => ( ( ( rule__Unit__Group_7_1__0 ) ) ) ) )
        // InternalBeeLangTestLanguage.g:11734:3: ({...}? => ( ( ( rule__Unit__Group_7_1__0 ) ) ) )
        {
        // InternalBeeLangTestLanguage.g:11734:3: ({...}? => ( ( ( rule__Unit__Group_7_1__0 ) ) ) )
        // InternalBeeLangTestLanguage.g:11735:4: {...}? => ( ( ( rule__Unit__Group_7_1__0 ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 1) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred125_InternalBeeLangTestLanguage", "getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 1)");
        }
        // InternalBeeLangTestLanguage.g:11735:100: ( ( ( rule__Unit__Group_7_1__0 ) ) )
        // InternalBeeLangTestLanguage.g:11736:5: ( ( rule__Unit__Group_7_1__0 ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 1);
        // InternalBeeLangTestLanguage.g:11742:5: ( ( rule__Unit__Group_7_1__0 ) )
        // InternalBeeLangTestLanguage.g:11743:6: ( rule__Unit__Group_7_1__0 )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getUnitAccess().getGroup_7_1()); 
        }
        // InternalBeeLangTestLanguage.g:11744:6: ( rule__Unit__Group_7_1__0 )
        // InternalBeeLangTestLanguage.g:11744:7: rule__Unit__Group_7_1__0
        {
        pushFollow(FOLLOW_2);
        rule__Unit__Group_7_1__0();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred125_InternalBeeLangTestLanguage

    // $ANTLR start synpred126_InternalBeeLangTestLanguage
    public final void synpred126_InternalBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalBeeLangTestLanguage.g:11765:8: ( rule__Unit__Group_7_2__0 )
        // InternalBeeLangTestLanguage.g:11765:9: rule__Unit__Group_7_2__0
        {
        pushFollow(FOLLOW_2);
        rule__Unit__Group_7_2__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred126_InternalBeeLangTestLanguage

    // $ANTLR start synpred127_InternalBeeLangTestLanguage
    public final void synpred127_InternalBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalBeeLangTestLanguage.g:11749:3: ( ({...}? => ( ( ( ( rule__Unit__Group_7_2__0 ) ) ( ( ( rule__Unit__Group_7_2__0 )=> rule__Unit__Group_7_2__0 )* ) ) ) ) )
        // InternalBeeLangTestLanguage.g:11749:3: ({...}? => ( ( ( ( rule__Unit__Group_7_2__0 ) ) ( ( ( rule__Unit__Group_7_2__0 )=> rule__Unit__Group_7_2__0 )* ) ) ) )
        {
        // InternalBeeLangTestLanguage.g:11749:3: ({...}? => ( ( ( ( rule__Unit__Group_7_2__0 ) ) ( ( ( rule__Unit__Group_7_2__0 )=> rule__Unit__Group_7_2__0 )* ) ) ) )
        // InternalBeeLangTestLanguage.g:11750:4: {...}? => ( ( ( ( rule__Unit__Group_7_2__0 ) ) ( ( ( rule__Unit__Group_7_2__0 )=> rule__Unit__Group_7_2__0 )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 2) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred127_InternalBeeLangTestLanguage", "getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 2)");
        }
        // InternalBeeLangTestLanguage.g:11750:100: ( ( ( ( rule__Unit__Group_7_2__0 ) ) ( ( ( rule__Unit__Group_7_2__0 )=> rule__Unit__Group_7_2__0 )* ) ) )
        // InternalBeeLangTestLanguage.g:11751:5: ( ( ( rule__Unit__Group_7_2__0 ) ) ( ( ( rule__Unit__Group_7_2__0 )=> rule__Unit__Group_7_2__0 )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 2);
        // InternalBeeLangTestLanguage.g:11757:5: ( ( ( rule__Unit__Group_7_2__0 ) ) ( ( ( rule__Unit__Group_7_2__0 )=> rule__Unit__Group_7_2__0 )* ) )
        // InternalBeeLangTestLanguage.g:11758:6: ( ( rule__Unit__Group_7_2__0 ) ) ( ( ( rule__Unit__Group_7_2__0 )=> rule__Unit__Group_7_2__0 )* )
        {
        // InternalBeeLangTestLanguage.g:11758:6: ( ( rule__Unit__Group_7_2__0 ) )
        // InternalBeeLangTestLanguage.g:11759:7: ( rule__Unit__Group_7_2__0 )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getUnitAccess().getGroup_7_2()); 
        }
        // InternalBeeLangTestLanguage.g:11760:7: ( rule__Unit__Group_7_2__0 )
        // InternalBeeLangTestLanguage.g:11760:8: rule__Unit__Group_7_2__0
        {
        pushFollow(FOLLOW_80);
        rule__Unit__Group_7_2__0();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalBeeLangTestLanguage.g:11763:6: ( ( ( rule__Unit__Group_7_2__0 )=> rule__Unit__Group_7_2__0 )* )
        // InternalBeeLangTestLanguage.g:11764:7: ( ( rule__Unit__Group_7_2__0 )=> rule__Unit__Group_7_2__0 )*
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getUnitAccess().getGroup_7_2()); 
        }
        // InternalBeeLangTestLanguage.g:11765:7: ( ( rule__Unit__Group_7_2__0 )=> rule__Unit__Group_7_2__0 )*
        loop121:
        do {
            int alt121=2;
            int LA121_0 = input.LA(1);

            if ( (LA121_0==51) && (synpred126_InternalBeeLangTestLanguage())) {
                alt121=1;
            }


            switch (alt121) {
        	case 1 :
        	    // InternalBeeLangTestLanguage.g:11765:8: ( rule__Unit__Group_7_2__0 )=> rule__Unit__Group_7_2__0
        	    {
        	    pushFollow(FOLLOW_80);
        	    rule__Unit__Group_7_2__0();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }
        	    break;

        	default :
        	    break loop121;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred127_InternalBeeLangTestLanguage

    // $ANTLR start synpred128_InternalBeeLangTestLanguage
    public final void synpred128_InternalBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalBeeLangTestLanguage.g:11787:8: ( rule__Unit__Group_7_3__0 )
        // InternalBeeLangTestLanguage.g:11787:9: rule__Unit__Group_7_3__0
        {
        pushFollow(FOLLOW_2);
        rule__Unit__Group_7_3__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred128_InternalBeeLangTestLanguage

    // $ANTLR start synpred129_InternalBeeLangTestLanguage
    public final void synpred129_InternalBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalBeeLangTestLanguage.g:11771:3: ( ({...}? => ( ( ( ( rule__Unit__Group_7_3__0 ) ) ( ( ( rule__Unit__Group_7_3__0 )=> rule__Unit__Group_7_3__0 )* ) ) ) ) )
        // InternalBeeLangTestLanguage.g:11771:3: ({...}? => ( ( ( ( rule__Unit__Group_7_3__0 ) ) ( ( ( rule__Unit__Group_7_3__0 )=> rule__Unit__Group_7_3__0 )* ) ) ) )
        {
        // InternalBeeLangTestLanguage.g:11771:3: ({...}? => ( ( ( ( rule__Unit__Group_7_3__0 ) ) ( ( ( rule__Unit__Group_7_3__0 )=> rule__Unit__Group_7_3__0 )* ) ) ) )
        // InternalBeeLangTestLanguage.g:11772:4: {...}? => ( ( ( ( rule__Unit__Group_7_3__0 ) ) ( ( ( rule__Unit__Group_7_3__0 )=> rule__Unit__Group_7_3__0 )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 3) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred129_InternalBeeLangTestLanguage", "getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 3)");
        }
        // InternalBeeLangTestLanguage.g:11772:100: ( ( ( ( rule__Unit__Group_7_3__0 ) ) ( ( ( rule__Unit__Group_7_3__0 )=> rule__Unit__Group_7_3__0 )* ) ) )
        // InternalBeeLangTestLanguage.g:11773:5: ( ( ( rule__Unit__Group_7_3__0 ) ) ( ( ( rule__Unit__Group_7_3__0 )=> rule__Unit__Group_7_3__0 )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 3);
        // InternalBeeLangTestLanguage.g:11779:5: ( ( ( rule__Unit__Group_7_3__0 ) ) ( ( ( rule__Unit__Group_7_3__0 )=> rule__Unit__Group_7_3__0 )* ) )
        // InternalBeeLangTestLanguage.g:11780:6: ( ( rule__Unit__Group_7_3__0 ) ) ( ( ( rule__Unit__Group_7_3__0 )=> rule__Unit__Group_7_3__0 )* )
        {
        // InternalBeeLangTestLanguage.g:11780:6: ( ( rule__Unit__Group_7_3__0 ) )
        // InternalBeeLangTestLanguage.g:11781:7: ( rule__Unit__Group_7_3__0 )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getUnitAccess().getGroup_7_3()); 
        }
        // InternalBeeLangTestLanguage.g:11782:7: ( rule__Unit__Group_7_3__0 )
        // InternalBeeLangTestLanguage.g:11782:8: rule__Unit__Group_7_3__0
        {
        pushFollow(FOLLOW_81);
        rule__Unit__Group_7_3__0();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalBeeLangTestLanguage.g:11785:6: ( ( ( rule__Unit__Group_7_3__0 )=> rule__Unit__Group_7_3__0 )* )
        // InternalBeeLangTestLanguage.g:11786:7: ( ( rule__Unit__Group_7_3__0 )=> rule__Unit__Group_7_3__0 )*
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getUnitAccess().getGroup_7_3()); 
        }
        // InternalBeeLangTestLanguage.g:11787:7: ( ( rule__Unit__Group_7_3__0 )=> rule__Unit__Group_7_3__0 )*
        loop122:
        do {
            int alt122=2;
            int LA122_0 = input.LA(1);

            if ( (LA122_0==52) && (synpred128_InternalBeeLangTestLanguage())) {
                alt122=1;
            }


            switch (alt122) {
        	case 1 :
        	    // InternalBeeLangTestLanguage.g:11787:8: ( rule__Unit__Group_7_3__0 )=> rule__Unit__Group_7_3__0
        	    {
        	    pushFollow(FOLLOW_81);
        	    rule__Unit__Group_7_3__0();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }
        	    break;

        	default :
        	    break loop122;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred129_InternalBeeLangTestLanguage

    // $ANTLR start synpred130_InternalBeeLangTestLanguage
    public final void synpred130_InternalBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalBeeLangTestLanguage.g:11809:8: ( rule__Unit__Group_7_4__0 )
        // InternalBeeLangTestLanguage.g:11809:9: rule__Unit__Group_7_4__0
        {
        pushFollow(FOLLOW_2);
        rule__Unit__Group_7_4__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred130_InternalBeeLangTestLanguage

    // $ANTLR start synpred131_InternalBeeLangTestLanguage
    public final void synpred131_InternalBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalBeeLangTestLanguage.g:11793:3: ( ({...}? => ( ( ( ( rule__Unit__Group_7_4__0 ) ) ( ( ( rule__Unit__Group_7_4__0 )=> rule__Unit__Group_7_4__0 )* ) ) ) ) )
        // InternalBeeLangTestLanguage.g:11793:3: ({...}? => ( ( ( ( rule__Unit__Group_7_4__0 ) ) ( ( ( rule__Unit__Group_7_4__0 )=> rule__Unit__Group_7_4__0 )* ) ) ) )
        {
        // InternalBeeLangTestLanguage.g:11793:3: ({...}? => ( ( ( ( rule__Unit__Group_7_4__0 ) ) ( ( ( rule__Unit__Group_7_4__0 )=> rule__Unit__Group_7_4__0 )* ) ) ) )
        // InternalBeeLangTestLanguage.g:11794:4: {...}? => ( ( ( ( rule__Unit__Group_7_4__0 ) ) ( ( ( rule__Unit__Group_7_4__0 )=> rule__Unit__Group_7_4__0 )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 4) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred131_InternalBeeLangTestLanguage", "getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 4)");
        }
        // InternalBeeLangTestLanguage.g:11794:100: ( ( ( ( rule__Unit__Group_7_4__0 ) ) ( ( ( rule__Unit__Group_7_4__0 )=> rule__Unit__Group_7_4__0 )* ) ) )
        // InternalBeeLangTestLanguage.g:11795:5: ( ( ( rule__Unit__Group_7_4__0 ) ) ( ( ( rule__Unit__Group_7_4__0 )=> rule__Unit__Group_7_4__0 )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 4);
        // InternalBeeLangTestLanguage.g:11801:5: ( ( ( rule__Unit__Group_7_4__0 ) ) ( ( ( rule__Unit__Group_7_4__0 )=> rule__Unit__Group_7_4__0 )* ) )
        // InternalBeeLangTestLanguage.g:11802:6: ( ( rule__Unit__Group_7_4__0 ) ) ( ( ( rule__Unit__Group_7_4__0 )=> rule__Unit__Group_7_4__0 )* )
        {
        // InternalBeeLangTestLanguage.g:11802:6: ( ( rule__Unit__Group_7_4__0 ) )
        // InternalBeeLangTestLanguage.g:11803:7: ( rule__Unit__Group_7_4__0 )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getUnitAccess().getGroup_7_4()); 
        }
        // InternalBeeLangTestLanguage.g:11804:7: ( rule__Unit__Group_7_4__0 )
        // InternalBeeLangTestLanguage.g:11804:8: rule__Unit__Group_7_4__0
        {
        pushFollow(FOLLOW_81);
        rule__Unit__Group_7_4__0();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalBeeLangTestLanguage.g:11807:6: ( ( ( rule__Unit__Group_7_4__0 )=> rule__Unit__Group_7_4__0 )* )
        // InternalBeeLangTestLanguage.g:11808:7: ( ( rule__Unit__Group_7_4__0 )=> rule__Unit__Group_7_4__0 )*
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getUnitAccess().getGroup_7_4()); 
        }
        // InternalBeeLangTestLanguage.g:11809:7: ( ( rule__Unit__Group_7_4__0 )=> rule__Unit__Group_7_4__0 )*
        loop123:
        do {
            int alt123=2;
            int LA123_0 = input.LA(1);

            if ( (LA123_0==52) && (synpred130_InternalBeeLangTestLanguage())) {
                alt123=1;
            }


            switch (alt123) {
        	case 1 :
        	    // InternalBeeLangTestLanguage.g:11809:8: ( rule__Unit__Group_7_4__0 )=> rule__Unit__Group_7_4__0
        	    {
        	    pushFollow(FOLLOW_81);
        	    rule__Unit__Group_7_4__0();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }
        	    break;

        	default :
        	    break loop123;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred131_InternalBeeLangTestLanguage

    // $ANTLR start synpred132_InternalBeeLangTestLanguage
    public final void synpred132_InternalBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalBeeLangTestLanguage.g:11831:8: ( rule__Unit__FunctionsAssignment_7_5 )
        // InternalBeeLangTestLanguage.g:11831:9: rule__Unit__FunctionsAssignment_7_5
        {
        pushFollow(FOLLOW_2);
        rule__Unit__FunctionsAssignment_7_5();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred132_InternalBeeLangTestLanguage

    // $ANTLR start synpred133_InternalBeeLangTestLanguage
    public final void synpred133_InternalBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalBeeLangTestLanguage.g:11851:2: ( rule__Unit__UnorderedGroup_7__1 )
        // InternalBeeLangTestLanguage.g:11851:2: rule__Unit__UnorderedGroup_7__1
        {
        pushFollow(FOLLOW_2);
        rule__Unit__UnorderedGroup_7__1();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred133_InternalBeeLangTestLanguage

    // $ANTLR start synpred134_InternalBeeLangTestLanguage
    public final void synpred134_InternalBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalBeeLangTestLanguage.g:11863:2: ( rule__Unit__UnorderedGroup_7__2 )
        // InternalBeeLangTestLanguage.g:11863:2: rule__Unit__UnorderedGroup_7__2
        {
        pushFollow(FOLLOW_2);
        rule__Unit__UnorderedGroup_7__2();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred134_InternalBeeLangTestLanguage

    // $ANTLR start synpred135_InternalBeeLangTestLanguage
    public final void synpred135_InternalBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalBeeLangTestLanguage.g:11875:2: ( rule__Unit__UnorderedGroup_7__3 )
        // InternalBeeLangTestLanguage.g:11875:2: rule__Unit__UnorderedGroup_7__3
        {
        pushFollow(FOLLOW_2);
        rule__Unit__UnorderedGroup_7__3();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred135_InternalBeeLangTestLanguage

    // $ANTLR start synpred136_InternalBeeLangTestLanguage
    public final void synpred136_InternalBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalBeeLangTestLanguage.g:11887:2: ( rule__Unit__UnorderedGroup_7__4 )
        // InternalBeeLangTestLanguage.g:11887:2: rule__Unit__UnorderedGroup_7__4
        {
        pushFollow(FOLLOW_2);
        rule__Unit__UnorderedGroup_7__4();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred136_InternalBeeLangTestLanguage

    // $ANTLR start synpred137_InternalBeeLangTestLanguage
    public final void synpred137_InternalBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalBeeLangTestLanguage.g:11899:2: ( rule__Unit__UnorderedGroup_7__5 )
        // InternalBeeLangTestLanguage.g:11899:2: rule__Unit__UnorderedGroup_7__5
        {
        pushFollow(FOLLOW_2);
        rule__Unit__UnorderedGroup_7__5();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred137_InternalBeeLangTestLanguage

    // $ANTLR start synpred138_InternalBeeLangTestLanguage
    public final void synpred138_InternalBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalBeeLangTestLanguage.g:11938:3: ( ({...}? => ( ( ( rule__ProvidedCapability__Group_2_1_0__0 ) ) ) ) )
        // InternalBeeLangTestLanguage.g:11938:3: ({...}? => ( ( ( rule__ProvidedCapability__Group_2_1_0__0 ) ) ) )
        {
        // InternalBeeLangTestLanguage.g:11938:3: ({...}? => ( ( ( rule__ProvidedCapability__Group_2_1_0__0 ) ) ) )
        // InternalBeeLangTestLanguage.g:11939:4: {...}? => ( ( ( rule__ProvidedCapability__Group_2_1_0__0 ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1(), 0) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred138_InternalBeeLangTestLanguage", "getUnorderedGroupHelper().canSelect(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1(), 0)");
        }
        // InternalBeeLangTestLanguage.g:11939:116: ( ( ( rule__ProvidedCapability__Group_2_1_0__0 ) ) )
        // InternalBeeLangTestLanguage.g:11940:5: ( ( rule__ProvidedCapability__Group_2_1_0__0 ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1(), 0);
        // InternalBeeLangTestLanguage.g:11946:5: ( ( rule__ProvidedCapability__Group_2_1_0__0 ) )
        // InternalBeeLangTestLanguage.g:11947:6: ( rule__ProvidedCapability__Group_2_1_0__0 )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getProvidedCapabilityAccess().getGroup_2_1_0()); 
        }
        // InternalBeeLangTestLanguage.g:11948:6: ( rule__ProvidedCapability__Group_2_1_0__0 )
        // InternalBeeLangTestLanguage.g:11948:7: rule__ProvidedCapability__Group_2_1_0__0
        {
        pushFollow(FOLLOW_2);
        rule__ProvidedCapability__Group_2_1_0__0();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred138_InternalBeeLangTestLanguage

    // $ANTLR start synpred139_InternalBeeLangTestLanguage
    public final void synpred139_InternalBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalBeeLangTestLanguage.g:11953:3: ( ({...}? => ( ( ( rule__ProvidedCapability__Group_2_1_1__0 ) ) ) ) )
        // InternalBeeLangTestLanguage.g:11953:3: ({...}? => ( ( ( rule__ProvidedCapability__Group_2_1_1__0 ) ) ) )
        {
        // InternalBeeLangTestLanguage.g:11953:3: ({...}? => ( ( ( rule__ProvidedCapability__Group_2_1_1__0 ) ) ) )
        // InternalBeeLangTestLanguage.g:11954:4: {...}? => ( ( ( rule__ProvidedCapability__Group_2_1_1__0 ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1(), 1) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred139_InternalBeeLangTestLanguage", "getUnorderedGroupHelper().canSelect(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1(), 1)");
        }
        // InternalBeeLangTestLanguage.g:11954:116: ( ( ( rule__ProvidedCapability__Group_2_1_1__0 ) ) )
        // InternalBeeLangTestLanguage.g:11955:5: ( ( rule__ProvidedCapability__Group_2_1_1__0 ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1(), 1);
        // InternalBeeLangTestLanguage.g:11961:5: ( ( rule__ProvidedCapability__Group_2_1_1__0 ) )
        // InternalBeeLangTestLanguage.g:11962:6: ( rule__ProvidedCapability__Group_2_1_1__0 )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getProvidedCapabilityAccess().getGroup_2_1_1()); 
        }
        // InternalBeeLangTestLanguage.g:11963:6: ( rule__ProvidedCapability__Group_2_1_1__0 )
        // InternalBeeLangTestLanguage.g:11963:7: rule__ProvidedCapability__Group_2_1_1__0
        {
        pushFollow(FOLLOW_2);
        rule__ProvidedCapability__Group_2_1_1__0();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred139_InternalBeeLangTestLanguage

    // $ANTLR start synpred140_InternalBeeLangTestLanguage
    public final void synpred140_InternalBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalBeeLangTestLanguage.g:11997:2: ( rule__ProvidedCapability__UnorderedGroup_2_1__1 )
        // InternalBeeLangTestLanguage.g:11997:2: rule__ProvidedCapability__UnorderedGroup_2_1__1
        {
        pushFollow(FOLLOW_2);
        rule__ProvidedCapability__UnorderedGroup_2_1__1();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred140_InternalBeeLangTestLanguage

    // $ANTLR start synpred141_InternalBeeLangTestLanguage
    public final void synpred141_InternalBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalBeeLangTestLanguage.g:12009:2: ( rule__ProvidedCapability__UnorderedGroup_2_1__2 )
        // InternalBeeLangTestLanguage.g:12009:2: rule__ProvidedCapability__UnorderedGroup_2_1__2
        {
        pushFollow(FOLLOW_2);
        rule__ProvidedCapability__UnorderedGroup_2_1__2();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred141_InternalBeeLangTestLanguage

    // $ANTLR start synpred142_InternalBeeLangTestLanguage
    public final void synpred142_InternalBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalBeeLangTestLanguage.g:12033:2: ( rule__AliasedRequiredCapability__UnorderedGroup_3_1__0 )
        // InternalBeeLangTestLanguage.g:12033:2: rule__AliasedRequiredCapability__UnorderedGroup_3_1__0
        {
        pushFollow(FOLLOW_2);
        rule__AliasedRequiredCapability__UnorderedGroup_3_1__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred142_InternalBeeLangTestLanguage

    // $ANTLR start synpred143_InternalBeeLangTestLanguage
    public final void synpred143_InternalBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalBeeLangTestLanguage.g:12048:3: ( ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_0__0 ) ) ) ) )
        // InternalBeeLangTestLanguage.g:12048:3: ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_0__0 ) ) ) )
        {
        // InternalBeeLangTestLanguage.g:12048:3: ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_0__0 ) ) ) )
        // InternalBeeLangTestLanguage.g:12049:4: {...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_0__0 ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 0) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred143_InternalBeeLangTestLanguage", "getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 0)");
        }
        // InternalBeeLangTestLanguage.g:12049:123: ( ( ( rule__AliasedRequiredCapability__Group_3_1_0__0 ) ) )
        // InternalBeeLangTestLanguage.g:12050:5: ( ( rule__AliasedRequiredCapability__Group_3_1_0__0 ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 0);
        // InternalBeeLangTestLanguage.g:12056:5: ( ( rule__AliasedRequiredCapability__Group_3_1_0__0 ) )
        // InternalBeeLangTestLanguage.g:12057:6: ( rule__AliasedRequiredCapability__Group_3_1_0__0 )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getAliasedRequiredCapabilityAccess().getGroup_3_1_0()); 
        }
        // InternalBeeLangTestLanguage.g:12058:6: ( rule__AliasedRequiredCapability__Group_3_1_0__0 )
        // InternalBeeLangTestLanguage.g:12058:7: rule__AliasedRequiredCapability__Group_3_1_0__0
        {
        pushFollow(FOLLOW_2);
        rule__AliasedRequiredCapability__Group_3_1_0__0();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred143_InternalBeeLangTestLanguage

    // $ANTLR start synpred144_InternalBeeLangTestLanguage
    public final void synpred144_InternalBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalBeeLangTestLanguage.g:12063:3: ( ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_1__0 ) ) ) ) )
        // InternalBeeLangTestLanguage.g:12063:3: ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_1__0 ) ) ) )
        {
        // InternalBeeLangTestLanguage.g:12063:3: ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_1__0 ) ) ) )
        // InternalBeeLangTestLanguage.g:12064:4: {...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_1__0 ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 1) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred144_InternalBeeLangTestLanguage", "getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 1)");
        }
        // InternalBeeLangTestLanguage.g:12064:123: ( ( ( rule__AliasedRequiredCapability__Group_3_1_1__0 ) ) )
        // InternalBeeLangTestLanguage.g:12065:5: ( ( rule__AliasedRequiredCapability__Group_3_1_1__0 ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 1);
        // InternalBeeLangTestLanguage.g:12071:5: ( ( rule__AliasedRequiredCapability__Group_3_1_1__0 ) )
        // InternalBeeLangTestLanguage.g:12072:6: ( rule__AliasedRequiredCapability__Group_3_1_1__0 )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getAliasedRequiredCapabilityAccess().getGroup_3_1_1()); 
        }
        // InternalBeeLangTestLanguage.g:12073:6: ( rule__AliasedRequiredCapability__Group_3_1_1__0 )
        // InternalBeeLangTestLanguage.g:12073:7: rule__AliasedRequiredCapability__Group_3_1_1__0
        {
        pushFollow(FOLLOW_2);
        rule__AliasedRequiredCapability__Group_3_1_1__0();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred144_InternalBeeLangTestLanguage

    // $ANTLR start synpred145_InternalBeeLangTestLanguage
    public final void synpred145_InternalBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalBeeLangTestLanguage.g:12078:3: ( ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_2__0 ) ) ) ) )
        // InternalBeeLangTestLanguage.g:12078:3: ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_2__0 ) ) ) )
        {
        // InternalBeeLangTestLanguage.g:12078:3: ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_2__0 ) ) ) )
        // InternalBeeLangTestLanguage.g:12079:4: {...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_2__0 ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 2) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred145_InternalBeeLangTestLanguage", "getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 2)");
        }
        // InternalBeeLangTestLanguage.g:12079:123: ( ( ( rule__AliasedRequiredCapability__Group_3_1_2__0 ) ) )
        // InternalBeeLangTestLanguage.g:12080:5: ( ( rule__AliasedRequiredCapability__Group_3_1_2__0 ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 2);
        // InternalBeeLangTestLanguage.g:12086:5: ( ( rule__AliasedRequiredCapability__Group_3_1_2__0 ) )
        // InternalBeeLangTestLanguage.g:12087:6: ( rule__AliasedRequiredCapability__Group_3_1_2__0 )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getAliasedRequiredCapabilityAccess().getGroup_3_1_2()); 
        }
        // InternalBeeLangTestLanguage.g:12088:6: ( rule__AliasedRequiredCapability__Group_3_1_2__0 )
        // InternalBeeLangTestLanguage.g:12088:7: rule__AliasedRequiredCapability__Group_3_1_2__0
        {
        pushFollow(FOLLOW_2);
        rule__AliasedRequiredCapability__Group_3_1_2__0();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred145_InternalBeeLangTestLanguage

    // $ANTLR start synpred146_InternalBeeLangTestLanguage
    public final void synpred146_InternalBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalBeeLangTestLanguage.g:12093:3: ( ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_3__0 ) ) ) ) )
        // InternalBeeLangTestLanguage.g:12093:3: ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_3__0 ) ) ) )
        {
        // InternalBeeLangTestLanguage.g:12093:3: ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_3__0 ) ) ) )
        // InternalBeeLangTestLanguage.g:12094:4: {...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_3__0 ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 3) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred146_InternalBeeLangTestLanguage", "getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 3)");
        }
        // InternalBeeLangTestLanguage.g:12094:123: ( ( ( rule__AliasedRequiredCapability__Group_3_1_3__0 ) ) )
        // InternalBeeLangTestLanguage.g:12095:5: ( ( rule__AliasedRequiredCapability__Group_3_1_3__0 ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 3);
        // InternalBeeLangTestLanguage.g:12101:5: ( ( rule__AliasedRequiredCapability__Group_3_1_3__0 ) )
        // InternalBeeLangTestLanguage.g:12102:6: ( rule__AliasedRequiredCapability__Group_3_1_3__0 )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getAliasedRequiredCapabilityAccess().getGroup_3_1_3()); 
        }
        // InternalBeeLangTestLanguage.g:12103:6: ( rule__AliasedRequiredCapability__Group_3_1_3__0 )
        // InternalBeeLangTestLanguage.g:12103:7: rule__AliasedRequiredCapability__Group_3_1_3__0
        {
        pushFollow(FOLLOW_2);
        rule__AliasedRequiredCapability__Group_3_1_3__0();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred146_InternalBeeLangTestLanguage

    // $ANTLR start synpred147_InternalBeeLangTestLanguage
    public final void synpred147_InternalBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalBeeLangTestLanguage.g:12137:2: ( rule__AliasedRequiredCapability__UnorderedGroup_3_1__1 )
        // InternalBeeLangTestLanguage.g:12137:2: rule__AliasedRequiredCapability__UnorderedGroup_3_1__1
        {
        pushFollow(FOLLOW_2);
        rule__AliasedRequiredCapability__UnorderedGroup_3_1__1();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred147_InternalBeeLangTestLanguage

    // $ANTLR start synpred148_InternalBeeLangTestLanguage
    public final void synpred148_InternalBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalBeeLangTestLanguage.g:12149:2: ( rule__AliasedRequiredCapability__UnorderedGroup_3_1__2 )
        // InternalBeeLangTestLanguage.g:12149:2: rule__AliasedRequiredCapability__UnorderedGroup_3_1__2
        {
        pushFollow(FOLLOW_2);
        rule__AliasedRequiredCapability__UnorderedGroup_3_1__2();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred148_InternalBeeLangTestLanguage

    // $ANTLR start synpred149_InternalBeeLangTestLanguage
    public final void synpred149_InternalBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalBeeLangTestLanguage.g:12161:2: ( rule__AliasedRequiredCapability__UnorderedGroup_3_1__3 )
        // InternalBeeLangTestLanguage.g:12161:2: rule__AliasedRequiredCapability__UnorderedGroup_3_1__3
        {
        pushFollow(FOLLOW_2);
        rule__AliasedRequiredCapability__UnorderedGroup_3_1__3();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred149_InternalBeeLangTestLanguage

    // $ANTLR start synpred150_InternalBeeLangTestLanguage
    public final void synpred150_InternalBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalBeeLangTestLanguage.g:12173:2: ( rule__AliasedRequiredCapability__UnorderedGroup_3_1__4 )
        // InternalBeeLangTestLanguage.g:12173:2: rule__AliasedRequiredCapability__UnorderedGroup_3_1__4
        {
        pushFollow(FOLLOW_2);
        rule__AliasedRequiredCapability__UnorderedGroup_3_1__4();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred150_InternalBeeLangTestLanguage

    // $ANTLR start synpred151_InternalBeeLangTestLanguage
    public final void synpred151_InternalBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalBeeLangTestLanguage.g:12197:2: ( rule__RequiredCapability__UnorderedGroup_3_1__0 )
        // InternalBeeLangTestLanguage.g:12197:2: rule__RequiredCapability__UnorderedGroup_3_1__0
        {
        pushFollow(FOLLOW_2);
        rule__RequiredCapability__UnorderedGroup_3_1__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred151_InternalBeeLangTestLanguage

    // $ANTLR start synpred152_InternalBeeLangTestLanguage
    public final void synpred152_InternalBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalBeeLangTestLanguage.g:12212:3: ( ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_0__0 ) ) ) ) )
        // InternalBeeLangTestLanguage.g:12212:3: ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_0__0 ) ) ) )
        {
        // InternalBeeLangTestLanguage.g:12212:3: ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_0__0 ) ) ) )
        // InternalBeeLangTestLanguage.g:12213:4: {...}? => ( ( ( rule__RequiredCapability__Group_3_1_0__0 ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 0) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred152_InternalBeeLangTestLanguage", "getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 0)");
        }
        // InternalBeeLangTestLanguage.g:12213:116: ( ( ( rule__RequiredCapability__Group_3_1_0__0 ) ) )
        // InternalBeeLangTestLanguage.g:12214:5: ( ( rule__RequiredCapability__Group_3_1_0__0 ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 0);
        // InternalBeeLangTestLanguage.g:12220:5: ( ( rule__RequiredCapability__Group_3_1_0__0 ) )
        // InternalBeeLangTestLanguage.g:12221:6: ( rule__RequiredCapability__Group_3_1_0__0 )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getRequiredCapabilityAccess().getGroup_3_1_0()); 
        }
        // InternalBeeLangTestLanguage.g:12222:6: ( rule__RequiredCapability__Group_3_1_0__0 )
        // InternalBeeLangTestLanguage.g:12222:7: rule__RequiredCapability__Group_3_1_0__0
        {
        pushFollow(FOLLOW_2);
        rule__RequiredCapability__Group_3_1_0__0();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred152_InternalBeeLangTestLanguage

    // $ANTLR start synpred153_InternalBeeLangTestLanguage
    public final void synpred153_InternalBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalBeeLangTestLanguage.g:12227:3: ( ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_1__0 ) ) ) ) )
        // InternalBeeLangTestLanguage.g:12227:3: ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_1__0 ) ) ) )
        {
        // InternalBeeLangTestLanguage.g:12227:3: ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_1__0 ) ) ) )
        // InternalBeeLangTestLanguage.g:12228:4: {...}? => ( ( ( rule__RequiredCapability__Group_3_1_1__0 ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 1) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred153_InternalBeeLangTestLanguage", "getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 1)");
        }
        // InternalBeeLangTestLanguage.g:12228:116: ( ( ( rule__RequiredCapability__Group_3_1_1__0 ) ) )
        // InternalBeeLangTestLanguage.g:12229:5: ( ( rule__RequiredCapability__Group_3_1_1__0 ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 1);
        // InternalBeeLangTestLanguage.g:12235:5: ( ( rule__RequiredCapability__Group_3_1_1__0 ) )
        // InternalBeeLangTestLanguage.g:12236:6: ( rule__RequiredCapability__Group_3_1_1__0 )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getRequiredCapabilityAccess().getGroup_3_1_1()); 
        }
        // InternalBeeLangTestLanguage.g:12237:6: ( rule__RequiredCapability__Group_3_1_1__0 )
        // InternalBeeLangTestLanguage.g:12237:7: rule__RequiredCapability__Group_3_1_1__0
        {
        pushFollow(FOLLOW_2);
        rule__RequiredCapability__Group_3_1_1__0();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred153_InternalBeeLangTestLanguage

    // $ANTLR start synpred154_InternalBeeLangTestLanguage
    public final void synpred154_InternalBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalBeeLangTestLanguage.g:12242:3: ( ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_2__0 ) ) ) ) )
        // InternalBeeLangTestLanguage.g:12242:3: ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_2__0 ) ) ) )
        {
        // InternalBeeLangTestLanguage.g:12242:3: ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_2__0 ) ) ) )
        // InternalBeeLangTestLanguage.g:12243:4: {...}? => ( ( ( rule__RequiredCapability__Group_3_1_2__0 ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 2) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred154_InternalBeeLangTestLanguage", "getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 2)");
        }
        // InternalBeeLangTestLanguage.g:12243:116: ( ( ( rule__RequiredCapability__Group_3_1_2__0 ) ) )
        // InternalBeeLangTestLanguage.g:12244:5: ( ( rule__RequiredCapability__Group_3_1_2__0 ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 2);
        // InternalBeeLangTestLanguage.g:12250:5: ( ( rule__RequiredCapability__Group_3_1_2__0 ) )
        // InternalBeeLangTestLanguage.g:12251:6: ( rule__RequiredCapability__Group_3_1_2__0 )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getRequiredCapabilityAccess().getGroup_3_1_2()); 
        }
        // InternalBeeLangTestLanguage.g:12252:6: ( rule__RequiredCapability__Group_3_1_2__0 )
        // InternalBeeLangTestLanguage.g:12252:7: rule__RequiredCapability__Group_3_1_2__0
        {
        pushFollow(FOLLOW_2);
        rule__RequiredCapability__Group_3_1_2__0();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred154_InternalBeeLangTestLanguage

    // $ANTLR start synpred155_InternalBeeLangTestLanguage
    public final void synpred155_InternalBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalBeeLangTestLanguage.g:12257:3: ( ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_3__0 ) ) ) ) )
        // InternalBeeLangTestLanguage.g:12257:3: ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_3__0 ) ) ) )
        {
        // InternalBeeLangTestLanguage.g:12257:3: ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_3__0 ) ) ) )
        // InternalBeeLangTestLanguage.g:12258:4: {...}? => ( ( ( rule__RequiredCapability__Group_3_1_3__0 ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 3) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred155_InternalBeeLangTestLanguage", "getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 3)");
        }
        // InternalBeeLangTestLanguage.g:12258:116: ( ( ( rule__RequiredCapability__Group_3_1_3__0 ) ) )
        // InternalBeeLangTestLanguage.g:12259:5: ( ( rule__RequiredCapability__Group_3_1_3__0 ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 3);
        // InternalBeeLangTestLanguage.g:12265:5: ( ( rule__RequiredCapability__Group_3_1_3__0 ) )
        // InternalBeeLangTestLanguage.g:12266:6: ( rule__RequiredCapability__Group_3_1_3__0 )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getRequiredCapabilityAccess().getGroup_3_1_3()); 
        }
        // InternalBeeLangTestLanguage.g:12267:6: ( rule__RequiredCapability__Group_3_1_3__0 )
        // InternalBeeLangTestLanguage.g:12267:7: rule__RequiredCapability__Group_3_1_3__0
        {
        pushFollow(FOLLOW_2);
        rule__RequiredCapability__Group_3_1_3__0();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred155_InternalBeeLangTestLanguage

    // $ANTLR start synpred156_InternalBeeLangTestLanguage
    public final void synpred156_InternalBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalBeeLangTestLanguage.g:12301:2: ( rule__RequiredCapability__UnorderedGroup_3_1__1 )
        // InternalBeeLangTestLanguage.g:12301:2: rule__RequiredCapability__UnorderedGroup_3_1__1
        {
        pushFollow(FOLLOW_2);
        rule__RequiredCapability__UnorderedGroup_3_1__1();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred156_InternalBeeLangTestLanguage

    // $ANTLR start synpred157_InternalBeeLangTestLanguage
    public final void synpred157_InternalBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalBeeLangTestLanguage.g:12313:2: ( rule__RequiredCapability__UnorderedGroup_3_1__2 )
        // InternalBeeLangTestLanguage.g:12313:2: rule__RequiredCapability__UnorderedGroup_3_1__2
        {
        pushFollow(FOLLOW_2);
        rule__RequiredCapability__UnorderedGroup_3_1__2();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred157_InternalBeeLangTestLanguage

    // $ANTLR start synpred158_InternalBeeLangTestLanguage
    public final void synpred158_InternalBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalBeeLangTestLanguage.g:12325:2: ( rule__RequiredCapability__UnorderedGroup_3_1__3 )
        // InternalBeeLangTestLanguage.g:12325:2: rule__RequiredCapability__UnorderedGroup_3_1__3
        {
        pushFollow(FOLLOW_2);
        rule__RequiredCapability__UnorderedGroup_3_1__3();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred158_InternalBeeLangTestLanguage

    // $ANTLR start synpred159_InternalBeeLangTestLanguage
    public final void synpred159_InternalBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalBeeLangTestLanguage.g:12337:2: ( rule__RequiredCapability__UnorderedGroup_3_1__4 )
        // InternalBeeLangTestLanguage.g:12337:2: rule__RequiredCapability__UnorderedGroup_3_1__4
        {
        pushFollow(FOLLOW_2);
        rule__RequiredCapability__UnorderedGroup_3_1__4();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred159_InternalBeeLangTestLanguage

    // Delegated rules

    public final boolean synpred96_InternalBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred96_InternalBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred142_InternalBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred142_InternalBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred137_InternalBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred137_InternalBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred124_InternalBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred124_InternalBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred2_InternalBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred2_InternalBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred101_InternalBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred101_InternalBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred155_InternalBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred155_InternalBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred111_InternalBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred111_InternalBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred152_InternalBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred152_InternalBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred129_InternalBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred129_InternalBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred147_InternalBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred147_InternalBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred47_InternalBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred47_InternalBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred134_InternalBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred134_InternalBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred135_InternalBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred135_InternalBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred126_InternalBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred126_InternalBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred44_InternalBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred44_InternalBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred144_InternalBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred144_InternalBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred153_InternalBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred153_InternalBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred94_InternalBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred94_InternalBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred103_InternalBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred103_InternalBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred41_InternalBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred41_InternalBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred150_InternalBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred150_InternalBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred99_InternalBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred99_InternalBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred100_InternalBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred100_InternalBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred141_InternalBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred141_InternalBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred158_InternalBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred158_InternalBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred58_InternalBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred58_InternalBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred123_InternalBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred123_InternalBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred132_InternalBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred132_InternalBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred149_InternalBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred149_InternalBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred151_InternalBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred151_InternalBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred115_InternalBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred115_InternalBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred128_InternalBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred128_InternalBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred159_InternalBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred159_InternalBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred146_InternalBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred146_InternalBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred133_InternalBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred133_InternalBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred143_InternalBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred143_InternalBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred25_InternalBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred25_InternalBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred125_InternalBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred125_InternalBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred43_InternalBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred43_InternalBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred138_InternalBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred138_InternalBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred84_InternalBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred84_InternalBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred97_InternalBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred97_InternalBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred156_InternalBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred156_InternalBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred130_InternalBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred130_InternalBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred98_InternalBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred98_InternalBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred140_InternalBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred140_InternalBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred157_InternalBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred157_InternalBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred39_InternalBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred39_InternalBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred139_InternalBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred139_InternalBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred131_InternalBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred131_InternalBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred148_InternalBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred148_InternalBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred8_InternalBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred8_InternalBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred48_InternalBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred48_InternalBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred127_InternalBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred127_InternalBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred136_InternalBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred136_InternalBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred145_InternalBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred145_InternalBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred154_InternalBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred154_InternalBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred95_InternalBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred95_InternalBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred110_InternalBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred110_InternalBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


    protected DFA8 dfa8 = new DFA8(this);
    protected DFA14 dfa14 = new DFA14(this);
    protected DFA26 dfa26 = new DFA26(this);
    protected DFA31 dfa31 = new DFA31(this);
    protected DFA67 dfa67 = new DFA67(this);
    protected DFA81 dfa81 = new DFA81(this);
    protected DFA86 dfa86 = new DFA86(this);
    protected DFA94 dfa94 = new DFA94(this);
    protected DFA95 dfa95 = new DFA95(this);
    protected DFA96 dfa96 = new DFA96(this);
    protected DFA97 dfa97 = new DFA97(this);
    protected DFA98 dfa98 = new DFA98(this);
    protected DFA100 dfa100 = new DFA100(this);
    protected DFA101 dfa101 = new DFA101(this);
    protected DFA102 dfa102 = new DFA102(this);
    protected DFA103 dfa103 = new DFA103(this);
    protected DFA104 dfa104 = new DFA104(this);
    static final String dfa_1s = "\56\uffff";
    static final String dfa_2s = "\3\uffff\1\4\4\uffff\2\4\12\uffff\2\4\1\uffff\1\4\15\uffff\2\4\7\uffff";
    static final String dfa_3s = "\1\4\1\uffff\1\4\1\7\1\uffff\1\16\2\4\2\16\1\4\1\0\1\7\2\4\1\16\1\7\1\76\1\7\1\0\1\7\1\16\1\7\1\16\1\75\1\7\1\60\1\7\1\76\2\4\1\7\1\60\2\7\1\75\1\7\1\16\1\7\1\75\1\0\1\7\1\60\1\7\1\75\1\0";
    static final String dfa_4s = "\1\113\1\uffff\1\113\1\115\1\uffff\1\115\1\107\1\113\2\115\1\113\1\0\1\74\1\113\1\107\1\115\1\7\1\76\1\113\1\0\2\115\1\113\1\115\1\75\1\7\1\75\1\7\1\76\1\107\1\113\1\7\1\75\1\7\1\113\1\75\1\7\2\115\1\75\1\0\1\7\1\75\1\7\1\75\1\0";
    static final String dfa_5s = "\1\uffff\1\1\2\uffff\1\2\51\uffff";
    static final String dfa_6s = "\13\uffff\1\3\7\uffff\1\1\24\uffff\1\0\4\uffff\1\2}>";
    static final String[] dfa_7s = {
            "\1\4\2\uffff\1\3\5\uffff\1\4\16\uffff\1\1\2\uffff\1\4\3\uffff\12\4\17\uffff\1\2\2\uffff\1\4\5\uffff\1\4\1\uffff\1\4\1\1\2\uffff\1\1",
            "",
            "\1\4\2\uffff\1\5\5\uffff\1\4\21\uffff\1\4\3\uffff\12\4\17\uffff\1\4\1\1\1\uffff\1\4\5\uffff\1\4\1\uffff\1\4\3\uffff\1\1",
            "\1\1\6\uffff\16\4\1\6\1\uffff\5\4\1\uffff\2\4\12\uffff\1\7\13\uffff\2\4\2\uffff\4\4\4\uffff\1\1\4\uffff\1\4",
            "",
            "\17\4\1\uffff\5\4\1\uffff\2\4\12\uffff\1\1\13\uffff\1\4\1\10\2\uffff\4\4\11\uffff\1\4",
            "\1\4\2\uffff\1\11\5\uffff\1\4\21\uffff\1\4\3\uffff\12\4\17\uffff\1\4\10\uffff\1\4\1\uffff\1\4",
            "\1\4\2\uffff\1\13\5\uffff\1\4\16\uffff\1\4\2\uffff\1\4\3\uffff\12\4\17\uffff\1\12\2\uffff\1\4\5\uffff\1\4\1\uffff\2\4\2\uffff\1\14",
            "\17\4\1\uffff\5\4\1\uffff\2\4\12\uffff\1\4\13\uffff\2\4\1\1\1\uffff\4\4\11\uffff\1\4",
            "\15\4\1\16\1\4\1\uffff\5\4\1\uffff\2\4\12\uffff\1\15\13\uffff\2\4\2\uffff\4\4\11\uffff\1\4",
            "\1\4\2\uffff\1\17\5\uffff\1\4\21\uffff\1\4\3\uffff\12\4\17\uffff\1\4\1\21\1\uffff\1\4\5\uffff\1\4\1\uffff\1\4\3\uffff\1\20",
            "\1\uffff",
            "\1\23\64\uffff\1\22",
            "\1\4\2\uffff\1\24\5\uffff\1\4\16\uffff\1\4\2\uffff\1\4\3\uffff\12\4\17\uffff\1\4\2\uffff\1\4\5\uffff\1\4\1\uffff\2\4\2\uffff\1\4",
            "\1\4\2\uffff\1\25\5\uffff\1\4\21\uffff\1\4\3\uffff\12\4\17\uffff\1\4\10\uffff\1\4\1\uffff\1\4",
            "\17\4\1\uffff\5\4\1\uffff\2\4\12\uffff\1\26\13\uffff\1\4\1\27\2\uffff\4\4\11\uffff\1\4",
            "\1\30",
            "\1\31",
            "\1\32\65\uffff\1\34\15\uffff\1\33",
            "\1\uffff",
            "\1\4\6\uffff\15\4\1\35\1\4\1\uffff\5\4\1\uffff\2\4\12\uffff\1\36\13\uffff\2\4\2\uffff\4\4\4\uffff\1\4\4\uffff\1\4",
            "\17\4\1\uffff\5\4\1\uffff\2\4\12\uffff\1\7\13\uffff\2\4\2\uffff\4\4\4\uffff\1\1\4\uffff\1\4",
            "\1\40\103\uffff\1\37",
            "\17\4\1\uffff\5\4\1\uffff\2\4\12\uffff\1\4\13\uffff\2\4\1\31\1\uffff\4\4\11\uffff\1\4",
            "\1\21",
            "\1\41",
            "\1\42\14\uffff\1\34",
            "\1\43",
            "\1\44",
            "\1\4\2\uffff\1\45\5\uffff\1\4\21\uffff\1\4\3\uffff\12\4\17\uffff\1\4\10\uffff\1\4\1\uffff\1\4",
            "\1\4\2\uffff\1\46\5\uffff\1\4\16\uffff\1\4\2\uffff\1\4\3\uffff\12\4\17\uffff\1\4\2\uffff\1\4\5\uffff\1\4\1\uffff\2\4\2\uffff\1\4",
            "\1\47",
            "\1\26\14\uffff\1\21",
            "\1\50",
            "\1\52\103\uffff\1\51",
            "\1\34",
            "\1\53",
            "\17\4\1\uffff\5\4\1\uffff\2\4\12\uffff\1\7\13\uffff\2\4\2\uffff\4\4\4\uffff\1\1\4\uffff\1\4",
            "\1\4\6\uffff\15\4\1\35\1\4\1\uffff\5\4\1\uffff\2\4\12\uffff\1\36\13\uffff\2\4\2\uffff\4\4\4\uffff\1\4\4\uffff\1\4",
            "\1\21",
            "\1\uffff",
            "\1\54",
            "\1\42\14\uffff\1\34",
            "\1\55",
            "\1\34",
            "\1\uffff"
    };

    static final short[] dfa_1 = DFA.unpackEncodedString(dfa_1s);
    static final short[] dfa_2 = DFA.unpackEncodedString(dfa_2s);
    static final char[] dfa_3 = DFA.unpackEncodedStringToUnsignedChars(dfa_3s);
    static final char[] dfa_4 = DFA.unpackEncodedStringToUnsignedChars(dfa_4s);
    static final short[] dfa_5 = DFA.unpackEncodedString(dfa_5s);
    static final short[] dfa_6 = DFA.unpackEncodedString(dfa_6s);
    static final short[][] dfa_7 = unpackEncodedStringArray(dfa_7s);

    class DFA8 extends DFA {

        public DFA8(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 8;
            this.eot = dfa_1;
            this.eof = dfa_2;
            this.min = dfa_3;
            this.max = dfa_4;
            this.accept = dfa_5;
            this.special = dfa_6;
            this.transition = dfa_7;
        }
        public String getDescription() {
            return "1575:1: rule__FirstParameter__Alternatives : ( ( ruleClosureParameter ) | ( ruleParameter ) );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA8_40 = input.LA(1);

                         
                        int index8_40 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred8_InternalBeeLangTestLanguage()) ) {s = 1;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index8_40);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA8_19 = input.LA(1);

                         
                        int index8_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred8_InternalBeeLangTestLanguage()) ) {s = 1;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index8_19);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA8_45 = input.LA(1);

                         
                        int index8_45 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred8_InternalBeeLangTestLanguage()) ) {s = 1;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index8_45);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA8_11 = input.LA(1);

                         
                        int index8_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred8_InternalBeeLangTestLanguage()) ) {s = 1;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index8_11);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 8, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_8s = "\15\uffff";
    static final String dfa_9s = "\4\uffff\1\6\4\uffff\2\6\2\uffff";
    static final String dfa_10s = "\1\4\1\7\1\uffff\1\4\1\7\2\uffff\1\16\1\4\2\16\1\4\1\0";
    static final String dfa_11s = "\2\114\1\uffff\1\113\1\115\2\uffff\1\115\1\107\2\115\1\107\1\0";
    static final String dfa_12s = "\2\uffff\1\1\2\uffff\1\2\1\3\6\uffff";
    static final String dfa_13s = "\14\uffff\1\0}>";
    static final String[] dfa_14s = {
            "\1\6\2\uffff\1\4\5\uffff\1\6\17\uffff\1\2\1\uffff\1\6\3\uffff\12\6\17\uffff\1\3\2\uffff\1\6\5\uffff\1\6\1\uffff\1\6\2\uffff\1\1\1\uffff\1\5",
            "\1\2\25\uffff\1\2\36\uffff\1\2\17\uffff\1\5",
            "",
            "\1\6\2\uffff\1\7\5\uffff\1\6\21\uffff\1\6\3\uffff\12\6\17\uffff\1\6\1\2\1\uffff\1\6\5\uffff\1\6\1\uffff\1\6\3\uffff\1\2",
            "\1\2\6\uffff\16\6\1\10\1\uffff\5\6\1\uffff\2\6\14\uffff\1\6\11\uffff\1\6\3\uffff\4\6\11\uffff\1\6",
            "",
            "",
            "\17\6\1\uffff\5\6\1\uffff\2\6\12\uffff\1\2\13\uffff\1\6\1\11\2\uffff\4\6\11\uffff\1\6",
            "\1\6\2\uffff\1\12\5\uffff\1\6\21\uffff\1\6\3\uffff\12\6\17\uffff\1\6\10\uffff\1\6\1\uffff\1\6",
            "\17\6\1\uffff\5\6\1\uffff\2\6\14\uffff\1\6\11\uffff\1\6\1\uffff\1\2\1\uffff\4\6\11\uffff\1\6",
            "\15\6\1\13\1\6\1\uffff\5\6\1\uffff\2\6\12\uffff\1\2\1\uffff\1\6\11\uffff\1\6\3\uffff\4\6\11\uffff\1\6",
            "\1\6\2\uffff\1\14\5\uffff\1\6\21\uffff\1\6\3\uffff\12\6\17\uffff\1\6\10\uffff\1\6\1\uffff\1\6",
            "\1\uffff"
    };

    static final short[] dfa_8 = DFA.unpackEncodedString(dfa_8s);
    static final short[] dfa_9 = DFA.unpackEncodedString(dfa_9s);
    static final char[] dfa_10 = DFA.unpackEncodedStringToUnsignedChars(dfa_10s);
    static final char[] dfa_11 = DFA.unpackEncodedStringToUnsignedChars(dfa_11s);
    static final short[] dfa_12 = DFA.unpackEncodedString(dfa_12s);
    static final short[] dfa_13 = DFA.unpackEncodedString(dfa_13s);
    static final short[][] dfa_14 = unpackEncodedStringArray(dfa_14s);

    class DFA14 extends DFA {

        public DFA14(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 14;
            this.eot = dfa_8;
            this.eof = dfa_9;
            this.min = dfa_10;
            this.max = dfa_11;
            this.accept = dfa_12;
            this.special = dfa_13;
            this.transition = dfa_14;
        }
        public String getDescription() {
            return "1767:1: rule__TopLevelExpression__Alternatives : ( ( ruleVarDeclaration ) | ( ruleValDeclaration ) | ( ruleAssignmentExpression ) );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA14_12 = input.LA(1);

                         
                        int index14_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred25_InternalBeeLangTestLanguage()) ) {s = 2;}

                        else if ( (true) ) {s = 6;}

                         
                        input.seek(index14_12);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 14, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_15s = "\23\uffff";
    static final String dfa_16s = "\1\4\1\0\2\uffff\1\0\10\uffff\1\0\5\uffff";
    static final String dfa_17s = "\1\107\1\0\2\uffff\1\0\10\uffff\1\0\5\uffff";
    static final String dfa_18s = "\2\uffff\1\2\1\4\1\uffff\1\5\6\uffff\1\6\1\uffff\1\1\1\3\1\7\1\10\1\11";
    static final String dfa_19s = "\1\uffff\1\0\2\uffff\1\1\10\uffff\1\2\5\uffff}>";
    static final String[] dfa_20s = {
            "\1\3\2\uffff\1\1\5\uffff\1\5\30\uffff\6\5\1\4\17\uffff\1\14\10\uffff\1\15\1\uffff\1\2",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_15 = DFA.unpackEncodedString(dfa_15s);
    static final char[] dfa_16 = DFA.unpackEncodedStringToUnsignedChars(dfa_16s);
    static final char[] dfa_17 = DFA.unpackEncodedStringToUnsignedChars(dfa_17s);
    static final short[] dfa_18 = DFA.unpackEncodedString(dfa_18s);
    static final short[] dfa_19 = DFA.unpackEncodedString(dfa_19s);
    static final short[][] dfa_20 = unpackEncodedStringArray(dfa_20s);

    class DFA26 extends DFA {

        public DFA26(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 26;
            this.eot = dfa_15;
            this.eof = dfa_15;
            this.min = dfa_16;
            this.max = dfa_17;
            this.accept = dfa_18;
            this.special = dfa_19;
            this.transition = dfa_20;
        }
        public String getDescription() {
            return "2043:1: rule__PrimaryExpression__Alternatives : ( ( ruleFeatureCall ) | ( ruleConstructorCallExpression ) | ( ruleValue ) | ( ruleLiteral ) | ( ruleKeywordVariables ) | ( ruleParanthesizedExpression ) | ( ruleBlockExpression ) | ( ruleWithExpression ) | ( ruleWithContextExpression ) );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA26_1 = input.LA(1);

                         
                        int index26_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred41_InternalBeeLangTestLanguage()) ) {s = 14;}

                        else if ( (synpred43_InternalBeeLangTestLanguage()) ) {s = 15;}

                         
                        input.seek(index26_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA26_4 = input.LA(1);

                         
                        int index26_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred44_InternalBeeLangTestLanguage()) ) {s = 3;}

                        else if ( (synpred47_InternalBeeLangTestLanguage()) ) {s = 16;}

                         
                        input.seek(index26_4);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA26_13 = input.LA(1);

                         
                        int index26_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred48_InternalBeeLangTestLanguage()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index26_13);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 26, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_21s = "\27\uffff";
    static final String dfa_22s = "\1\4\2\uffff\2\0\1\uffff\20\0\1\uffff";
    static final String dfa_23s = "\1\114\2\uffff\2\0\1\uffff\20\0\1\uffff";
    static final String dfa_24s = "\1\uffff\1\1\24\uffff\1\2";
    static final String dfa_25s = "\3\uffff\1\0\1\1\1\uffff\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\uffff}>";
    static final String[] dfa_26s = {
            "\1\10\2\uffff\1\4\5\uffff\1\17\17\uffff\1\1\1\uffff\1\23\3\uffff\1\22\1\24\1\25\1\12\1\13\1\14\1\15\1\16\1\20\1\11\17\uffff\1\3\2\uffff\1\6\5\uffff\1\21\1\uffff\1\7\2\uffff\1\1\1\uffff\1\1",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            ""
    };

    static final short[] dfa_21 = DFA.unpackEncodedString(dfa_21s);
    static final char[] dfa_22 = DFA.unpackEncodedStringToUnsignedChars(dfa_22s);
    static final char[] dfa_23 = DFA.unpackEncodedStringToUnsignedChars(dfa_23s);
    static final short[] dfa_24 = DFA.unpackEncodedString(dfa_24s);
    static final short[] dfa_25 = DFA.unpackEncodedString(dfa_25s);
    static final short[][] dfa_26 = unpackEncodedStringArray(dfa_26s);

    class DFA31 extends DFA {

        public DFA31(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 31;
            this.eot = dfa_21;
            this.eof = dfa_21;
            this.min = dfa_22;
            this.max = dfa_23;
            this.accept = dfa_24;
            this.special = dfa_25;
            this.transition = dfa_26;
        }
        public String getDescription() {
            return "2220:1: rule__OneOrManyExpressions__Alternatives : ( ( ruleBlockExpressionWithoutBrackets ) | ( ruleExpression ) );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA31_3 = input.LA(1);

                         
                        int index31_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred58_InternalBeeLangTestLanguage()) ) {s = 1;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index31_3);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA31_4 = input.LA(1);

                         
                        int index31_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred58_InternalBeeLangTestLanguage()) ) {s = 1;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index31_4);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA31_6 = input.LA(1);

                         
                        int index31_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred58_InternalBeeLangTestLanguage()) ) {s = 1;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index31_6);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA31_7 = input.LA(1);

                         
                        int index31_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred58_InternalBeeLangTestLanguage()) ) {s = 1;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index31_7);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA31_8 = input.LA(1);

                         
                        int index31_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred58_InternalBeeLangTestLanguage()) ) {s = 1;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index31_8);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA31_9 = input.LA(1);

                         
                        int index31_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred58_InternalBeeLangTestLanguage()) ) {s = 1;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index31_9);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA31_10 = input.LA(1);

                         
                        int index31_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred58_InternalBeeLangTestLanguage()) ) {s = 1;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index31_10);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA31_11 = input.LA(1);

                         
                        int index31_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred58_InternalBeeLangTestLanguage()) ) {s = 1;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index31_11);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA31_12 = input.LA(1);

                         
                        int index31_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred58_InternalBeeLangTestLanguage()) ) {s = 1;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index31_12);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA31_13 = input.LA(1);

                         
                        int index31_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred58_InternalBeeLangTestLanguage()) ) {s = 1;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index31_13);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA31_14 = input.LA(1);

                         
                        int index31_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred58_InternalBeeLangTestLanguage()) ) {s = 1;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index31_14);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA31_15 = input.LA(1);

                         
                        int index31_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred58_InternalBeeLangTestLanguage()) ) {s = 1;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index31_15);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA31_16 = input.LA(1);

                         
                        int index31_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred58_InternalBeeLangTestLanguage()) ) {s = 1;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index31_16);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA31_17 = input.LA(1);

                         
                        int index31_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred58_InternalBeeLangTestLanguage()) ) {s = 1;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index31_17);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA31_18 = input.LA(1);

                         
                        int index31_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred58_InternalBeeLangTestLanguage()) ) {s = 1;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index31_18);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA31_19 = input.LA(1);

                         
                        int index31_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred58_InternalBeeLangTestLanguage()) ) {s = 1;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index31_19);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA31_20 = input.LA(1);

                         
                        int index31_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred58_InternalBeeLangTestLanguage()) ) {s = 1;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index31_20);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA31_21 = input.LA(1);

                         
                        int index31_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred58_InternalBeeLangTestLanguage()) ) {s = 1;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index31_21);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 31, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_27s = "\14\uffff";
    static final String dfa_28s = "\1\1\13\uffff";
    static final String dfa_29s = "\1\16\1\uffff\11\0\1\uffff";
    static final String dfa_30s = "\1\115\1\uffff\11\0\1\uffff";
    static final String dfa_31s = "\1\uffff\1\2\11\uffff\1\1";
    static final String dfa_32s = "\2\uffff\1\2\1\10\1\0\1\6\1\7\1\3\1\4\1\1\1\5\1\uffff}>";
    static final String[] dfa_33s = {
            "\6\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\uffff\5\1\1\uffff\2\1\6\uffff\2\1\2\uffff\1\1\1\uffff\1\1\5\uffff\1\1\3\uffff\2\1\2\uffff\5\1\10\uffff\1\1",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            ""
    };

    static final short[] dfa_27 = DFA.unpackEncodedString(dfa_27s);
    static final short[] dfa_28 = DFA.unpackEncodedString(dfa_28s);
    static final char[] dfa_29 = DFA.unpackEncodedStringToUnsignedChars(dfa_29s);
    static final char[] dfa_30 = DFA.unpackEncodedStringToUnsignedChars(dfa_30s);
    static final short[] dfa_31 = DFA.unpackEncodedString(dfa_31s);
    static final short[] dfa_32 = DFA.unpackEncodedString(dfa_32s);
    static final short[][] dfa_33 = unpackEncodedStringArray(dfa_33s);

    class DFA67 extends DFA {

        public DFA67(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 67;
            this.eot = dfa_27;
            this.eof = dfa_28;
            this.min = dfa_29;
            this.max = dfa_30;
            this.accept = dfa_31;
            this.special = dfa_32;
            this.transition = dfa_33;
        }
        public String getDescription() {
            return "()* loopback of 7875:2: ( rule__RelationalExpression__Group_1__0 )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA67_4 = input.LA(1);

                         
                        int index67_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred96_InternalBeeLangTestLanguage()) ) {s = 11;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index67_4);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA67_9 = input.LA(1);

                         
                        int index67_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred96_InternalBeeLangTestLanguage()) ) {s = 11;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index67_9);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA67_2 = input.LA(1);

                         
                        int index67_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred96_InternalBeeLangTestLanguage()) ) {s = 11;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index67_2);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA67_7 = input.LA(1);

                         
                        int index67_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred96_InternalBeeLangTestLanguage()) ) {s = 11;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index67_7);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA67_8 = input.LA(1);

                         
                        int index67_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred96_InternalBeeLangTestLanguage()) ) {s = 11;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index67_8);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA67_10 = input.LA(1);

                         
                        int index67_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred96_InternalBeeLangTestLanguage()) ) {s = 11;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index67_10);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA67_5 = input.LA(1);

                         
                        int index67_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred96_InternalBeeLangTestLanguage()) ) {s = 11;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index67_5);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA67_6 = input.LA(1);

                         
                        int index67_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred96_InternalBeeLangTestLanguage()) ) {s = 11;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index67_6);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA67_3 = input.LA(1);

                         
                        int index67_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred96_InternalBeeLangTestLanguage()) ) {s = 11;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index67_3);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 67, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_34s = "\46\uffff";
    static final String dfa_35s = "\1\2\45\uffff";
    static final String dfa_36s = "\1\16\1\0\44\uffff";
    static final String dfa_37s = "\1\115\1\0\44\uffff";
    static final String dfa_38s = "\2\uffff\1\2\42\uffff\1\1";
    static final String dfa_39s = "\1\uffff\1\0\44\uffff}>";
    static final String[] dfa_40s = {
            "\17\2\1\uffff\5\2\1\uffff\2\2\6\uffff\2\2\2\uffff\1\2\1\uffff\1\2\5\uffff\1\2\3\uffff\1\1\1\2\2\uffff\5\2\10\uffff\1\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_34 = DFA.unpackEncodedString(dfa_34s);
    static final short[] dfa_35 = DFA.unpackEncodedString(dfa_35s);
    static final char[] dfa_36 = DFA.unpackEncodedStringToUnsignedChars(dfa_36s);
    static final char[] dfa_37 = DFA.unpackEncodedStringToUnsignedChars(dfa_37s);
    static final short[] dfa_38 = DFA.unpackEncodedString(dfa_38s);
    static final short[] dfa_39 = DFA.unpackEncodedString(dfa_39s);
    static final short[][] dfa_40 = unpackEncodedStringArray(dfa_40s);

    class DFA81 extends DFA {

        public DFA81(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 81;
            this.eot = dfa_34;
            this.eof = dfa_35;
            this.min = dfa_36;
            this.max = dfa_37;
            this.accept = dfa_38;
            this.special = dfa_39;
            this.transition = dfa_40;
        }
        public String getDescription() {
            return "10225:2: ( rule__ConstructorCallExpression__Group_3__0 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA81_1 = input.LA(1);

                         
                        int index81_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred110_InternalBeeLangTestLanguage()) ) {s = 37;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index81_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 81, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_41s = "\71\uffff";
    static final String dfa_42s = "\5\uffff\1\3\7\uffff\1\3\5\uffff\1\3\14\uffff\1\3\5\uffff\2\3\15\uffff\2\3\2\uffff";
    static final String dfa_43s = "\1\7\1\4\2\uffff\1\4\1\7\1\16\1\7\1\76\2\4\1\16\1\7\1\16\1\75\1\7\1\4\1\0\1\7\1\16\1\60\2\7\1\16\1\7\1\76\1\7\1\0\2\4\1\75\1\7\1\16\1\75\1\7\1\60\1\7\1\76\1\7\1\16\1\7\1\60\2\7\1\75\1\7\2\4\1\75\1\0\1\60\3\7\1\16\1\75\1\0";
    static final String dfa_44s = "\1\113\1\114\2\uffff\1\113\2\115\1\7\1\76\1\113\1\107\1\110\1\113\1\115\1\75\1\7\1\113\1\0\1\74\1\115\1\75\2\7\1\115\1\7\1\76\1\113\1\0\1\113\1\107\1\75\1\113\1\115\1\75\1\7\1\75\1\7\1\76\2\115\1\7\1\75\1\7\1\113\1\75\1\7\1\113\1\107\1\75\1\0\1\75\2\7\2\115\1\75\1\0";
    static final String dfa_45s = "\2\uffff\1\1\1\2\65\uffff";
    static final String dfa_46s = "\21\uffff\1\3\11\uffff\1\1\25\uffff\1\0\6\uffff\1\2}>";
    static final String[] dfa_47s = {
            "\1\2\64\uffff\1\2\13\uffff\1\1\2\uffff\1\2",
            "\1\3\2\uffff\1\5\5\uffff\1\3\17\uffff\1\3\1\uffff\1\3\3\uffff\12\3\17\uffff\1\4\2\uffff\1\3\5\uffff\1\3\1\uffff\1\3\2\uffff\1\3\1\uffff\1\3",
            "",
            "",
            "\1\3\2\uffff\1\6\5\uffff\1\3\21\uffff\1\3\3\uffff\12\3\17\uffff\1\3\1\10\1\uffff\1\3\5\uffff\1\3\1\uffff\1\3\3\uffff\1\7",
            "\1\13\6\uffff\16\3\1\12\1\uffff\5\3\1\uffff\2\3\7\uffff\1\3\2\uffff\1\11\1\uffff\1\3\11\uffff\2\3\2\uffff\4\3\4\uffff\1\2\4\uffff\1\3",
            "\17\3\1\uffff\5\3\1\uffff\2\3\12\uffff\1\14\13\uffff\1\3\1\15\2\uffff\4\3\11\uffff\1\3",
            "\1\16",
            "\1\17",
            "\1\3\2\uffff\1\21\5\uffff\1\3\16\uffff\1\3\2\uffff\1\3\3\uffff\12\3\17\uffff\1\20\2\uffff\1\3\5\uffff\1\3\1\uffff\2\3\2\uffff\1\22",
            "\1\3\2\uffff\1\23\5\uffff\1\3\21\uffff\1\3\3\uffff\12\3\17\uffff\1\3\10\uffff\1\3\1\uffff\1\3",
            "\1\3\41\uffff\1\2\1\uffff\1\3\25\uffff\1\2",
            "\1\24\103\uffff\1\25",
            "\17\3\1\uffff\5\3\1\uffff\2\3\7\uffff\1\3\2\uffff\1\3\1\uffff\1\3\11\uffff\2\3\1\17\1\uffff\4\3\11\uffff\1\3",
            "\1\10",
            "\1\26",
            "\1\3\2\uffff\1\27\5\uffff\1\3\21\uffff\1\3\3\uffff\12\3\17\uffff\1\3\1\31\1\uffff\1\3\5\uffff\1\3\1\uffff\1\3\3\uffff\1\30",
            "\1\uffff",
            "\1\33\64\uffff\1\32",
            "\15\3\1\35\1\3\1\uffff\5\3\1\uffff\2\3\7\uffff\1\3\2\uffff\1\34\1\uffff\1\3\11\uffff\2\3\2\uffff\4\3\11\uffff\1\3",
            "\1\14\14\uffff\1\10",
            "\1\36",
            "\1\13",
            "\17\3\1\uffff\5\3\1\uffff\2\3\12\uffff\1\37\13\uffff\1\3\1\40\2\uffff\4\3\11\uffff\1\3",
            "\1\41",
            "\1\42",
            "\1\43\65\uffff\1\45\15\uffff\1\44",
            "\1\uffff",
            "\1\3\2\uffff\1\46\5\uffff\1\3\16\uffff\1\3\2\uffff\1\3\3\uffff\12\3\17\uffff\1\3\2\uffff\1\3\5\uffff\1\3\1\uffff\2\3\2\uffff\1\3",
            "\1\3\2\uffff\1\47\5\uffff\1\3\21\uffff\1\3\3\uffff\12\3\17\uffff\1\3\10\uffff\1\3\1\uffff\1\3",
            "\1\10",
            "\1\51\103\uffff\1\50",
            "\17\3\1\uffff\5\3\1\uffff\2\3\12\uffff\1\3\13\uffff\2\3\1\42\1\uffff\4\3\11\uffff\1\3",
            "\1\31",
            "\1\52",
            "\1\53\14\uffff\1\45",
            "\1\54",
            "\1\55",
            "\1\3\6\uffff\15\3\1\57\1\3\1\uffff\5\3\1\uffff\2\3\12\uffff\1\56\13\uffff\2\3\2\uffff\4\3\4\uffff\1\3\4\uffff\1\3",
            "\17\3\1\uffff\5\3\1\uffff\2\3\7\uffff\1\3\2\uffff\1\11\1\uffff\1\3\11\uffff\2\3\2\uffff\4\3\4\uffff\1\2\4\uffff\1\3",
            "\1\60",
            "\1\37\14\uffff\1\31",
            "\1\61",
            "\1\62\103\uffff\1\63",
            "\1\45",
            "\1\64",
            "\1\3\2\uffff\1\65\5\uffff\1\3\16\uffff\1\3\2\uffff\1\3\3\uffff\12\3\17\uffff\1\3\2\uffff\1\3\5\uffff\1\3\1\uffff\2\3\2\uffff\1\3",
            "\1\3\2\uffff\1\66\5\uffff\1\3\21\uffff\1\3\3\uffff\12\3\17\uffff\1\3\10\uffff\1\3\1\uffff\1\3",
            "\1\31",
            "\1\uffff",
            "\1\53\14\uffff\1\45",
            "\1\67",
            "\1\70",
            "\1\3\6\uffff\15\3\1\57\1\3\1\uffff\5\3\1\uffff\2\3\12\uffff\1\56\13\uffff\2\3\2\uffff\4\3\4\uffff\1\3\4\uffff\1\3",
            "\17\3\1\uffff\5\3\1\uffff\2\3\12\uffff\1\11\1\uffff\1\3\11\uffff\2\3\2\uffff\4\3\4\uffff\1\2\4\uffff\1\3",
            "\1\45",
            "\1\uffff"
    };

    static final short[] dfa_41 = DFA.unpackEncodedString(dfa_41s);
    static final short[] dfa_42 = DFA.unpackEncodedString(dfa_42s);
    static final char[] dfa_43 = DFA.unpackEncodedStringToUnsignedChars(dfa_43s);
    static final char[] dfa_44 = DFA.unpackEncodedStringToUnsignedChars(dfa_44s);
    static final short[] dfa_45 = DFA.unpackEncodedString(dfa_45s);
    static final short[] dfa_46 = DFA.unpackEncodedString(dfa_46s);
    static final short[][] dfa_47 = unpackEncodedStringArray(dfa_47s);

    class DFA86 extends DFA {

        public DFA86(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 86;
            this.eot = dfa_41;
            this.eof = dfa_42;
            this.min = dfa_43;
            this.max = dfa_44;
            this.accept = dfa_45;
            this.special = dfa_46;
            this.transition = dfa_47;
        }
        public String getDescription() {
            return "10873:2: ( rule__ClosureExpression__Alternatives_2 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA86_49 = input.LA(1);

                         
                        int index86_49 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred115_InternalBeeLangTestLanguage()) ) {s = 2;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index86_49);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA86_27 = input.LA(1);

                         
                        int index86_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred115_InternalBeeLangTestLanguage()) ) {s = 2;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index86_27);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA86_56 = input.LA(1);

                         
                        int index86_56 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred115_InternalBeeLangTestLanguage()) ) {s = 2;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index86_56);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA86_17 = input.LA(1);

                         
                        int index86_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred115_InternalBeeLangTestLanguage()) ) {s = 2;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index86_17);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 86, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_48s = "\12\uffff";
    static final String dfa_49s = "\1\7\11\uffff";
    static final String dfa_50s = "\1\112\11\uffff";
    static final String dfa_51s = "\1\uffff\10\1\1\2";
    static final String dfa_52s = "\1\0\11\uffff}>";
    static final String[] dfa_53s = {
            "\1\6\1\5\36\uffff\1\2\1\1\4\uffff\1\11\5\uffff\1\3\1\4\6\uffff\1\10\16\uffff\1\7",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_48 = DFA.unpackEncodedString(dfa_48s);
    static final char[] dfa_49 = DFA.unpackEncodedStringToUnsignedChars(dfa_49s);
    static final char[] dfa_50 = DFA.unpackEncodedStringToUnsignedChars(dfa_50s);
    static final short[] dfa_51 = DFA.unpackEncodedString(dfa_51s);
    static final short[] dfa_52 = DFA.unpackEncodedString(dfa_52s);
    static final short[][] dfa_53 = unpackEncodedStringArray(dfa_53s);

    class DFA94 extends DFA {

        public DFA94(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 94;
            this.eot = dfa_48;
            this.eof = dfa_48;
            this.min = dfa_49;
            this.max = dfa_50;
            this.accept = dfa_51;
            this.special = dfa_52;
            this.transition = dfa_53;
        }
        public String getDescription() {
            return "11704:2: ( rule__Unit__UnorderedGroup_7__0 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA94_0 = input.LA(1);

                         
                        int index94_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA94_0 == 40 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 0) ) {s = 1;}

                        else if ( LA94_0 == 39 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 1) ) {s = 2;}

                        else if ( LA94_0 == 51 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 2) ) {s = 3;}

                        else if ( LA94_0 == 52 && ( getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 3) || getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 4) ) ) {s = 4;}

                        else if ( LA94_0 == RULE_DOCUMENTATION && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 5) ) {s = 5;}

                        else if ( LA94_0 == RULE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 5) ) {s = 6;}

                        else if ( LA94_0 == 74 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 5) ) {s = 7;}

                        else if ( LA94_0 == 59 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 5) ) {s = 8;}

                        else if ( (LA94_0==45) ) {s = 9;}

                         
                        input.seek(index94_0);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 94, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_54s = "\1\7\2\uffff\1\0\10\uffff";
    static final String dfa_55s = "\1\112\2\uffff\1\0\10\uffff";
    static final String dfa_56s = "\3\uffff\1\0\10\uffff}>";
    static final String[] dfa_57s = {
            "\2\1\36\uffff\2\1\4\uffff\1\1\5\uffff\1\3\1\1\6\uffff\1\1\16\uffff\1\1",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_54 = DFA.unpackEncodedStringToUnsignedChars(dfa_54s);
    static final char[] dfa_55 = DFA.unpackEncodedStringToUnsignedChars(dfa_55s);
    static final short[] dfa_56 = DFA.unpackEncodedString(dfa_56s);
    static final short[][] dfa_57 = unpackEncodedStringArray(dfa_57s);

    class DFA95 extends DFA {

        public DFA95(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 95;
            this.eot = dfa_27;
            this.eof = dfa_28;
            this.min = dfa_54;
            this.max = dfa_55;
            this.accept = dfa_31;
            this.special = dfa_56;
            this.transition = dfa_57;
        }
        public String getDescription() {
            return "()* loopback of 11765:7: ( ( rule__Unit__Group_7_2__0 )=> rule__Unit__Group_7_2__0 )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA95_3 = input.LA(1);

                         
                        int index95_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred126_InternalBeeLangTestLanguage()) ) {s = 11;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index95_3);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 95, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_58s = "\1\7\3\uffff\1\0\7\uffff";
    static final String dfa_59s = "\1\112\3\uffff\1\0\7\uffff";
    static final String dfa_60s = "\4\uffff\1\0\7\uffff}>";
    static final String[] dfa_61s = {
            "\2\1\36\uffff\2\1\4\uffff\1\1\5\uffff\1\1\1\4\6\uffff\1\1\16\uffff\1\1",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_58 = DFA.unpackEncodedStringToUnsignedChars(dfa_58s);
    static final char[] dfa_59 = DFA.unpackEncodedStringToUnsignedChars(dfa_59s);
    static final short[] dfa_60 = DFA.unpackEncodedString(dfa_60s);
    static final short[][] dfa_61 = unpackEncodedStringArray(dfa_61s);

    class DFA96 extends DFA {

        public DFA96(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 96;
            this.eot = dfa_27;
            this.eof = dfa_28;
            this.min = dfa_58;
            this.max = dfa_59;
            this.accept = dfa_31;
            this.special = dfa_60;
            this.transition = dfa_61;
        }
        public String getDescription() {
            return "()* loopback of 11787:7: ( ( rule__Unit__Group_7_3__0 )=> rule__Unit__Group_7_3__0 )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA96_4 = input.LA(1);

                         
                        int index96_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred128_InternalBeeLangTestLanguage()) ) {s = 11;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index96_4);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 96, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA97 extends DFA {

        public DFA97(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 97;
            this.eot = dfa_27;
            this.eof = dfa_28;
            this.min = dfa_58;
            this.max = dfa_59;
            this.accept = dfa_31;
            this.special = dfa_60;
            this.transition = dfa_61;
        }
        public String getDescription() {
            return "()* loopback of 11809:7: ( ( rule__Unit__Group_7_4__0 )=> rule__Unit__Group_7_4__0 )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA97_4 = input.LA(1);

                         
                        int index97_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred130_InternalBeeLangTestLanguage()) ) {s = 11;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index97_4);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 97, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_62s = "\1\7\4\uffff\4\0\3\uffff";
    static final String dfa_63s = "\1\112\4\uffff\4\0\3\uffff";
    static final String dfa_64s = "\5\uffff\1\0\1\1\1\2\1\3\3\uffff}>";
    static final String[] dfa_65s = {
            "\1\6\1\5\36\uffff\2\1\4\uffff\1\1\5\uffff\2\1\6\uffff\1\10\16\uffff\1\7",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            ""
    };
    static final char[] dfa_62 = DFA.unpackEncodedStringToUnsignedChars(dfa_62s);
    static final char[] dfa_63 = DFA.unpackEncodedStringToUnsignedChars(dfa_63s);
    static final short[] dfa_64 = DFA.unpackEncodedString(dfa_64s);
    static final short[][] dfa_65 = unpackEncodedStringArray(dfa_65s);

    class DFA98 extends DFA {

        public DFA98(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 98;
            this.eot = dfa_27;
            this.eof = dfa_28;
            this.min = dfa_62;
            this.max = dfa_63;
            this.accept = dfa_31;
            this.special = dfa_64;
            this.transition = dfa_65;
        }
        public String getDescription() {
            return "()* loopback of 11831:7: ( ( rule__Unit__FunctionsAssignment_7_5 )=> rule__Unit__FunctionsAssignment_7_5 )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA98_5 = input.LA(1);

                         
                        int index98_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred132_InternalBeeLangTestLanguage()) ) {s = 11;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index98_5);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA98_6 = input.LA(1);

                         
                        int index98_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred132_InternalBeeLangTestLanguage()) ) {s = 11;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index98_6);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA98_7 = input.LA(1);

                         
                        int index98_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred132_InternalBeeLangTestLanguage()) ) {s = 11;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index98_7);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA98_8 = input.LA(1);

                         
                        int index98_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred132_InternalBeeLangTestLanguage()) ) {s = 11;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index98_8);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 98, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_66s = "\1\11\11\uffff";
    static final short[] dfa_66 = DFA.unpackEncodedString(dfa_66s);

    class DFA100 extends DFA {

        public DFA100(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 100;
            this.eot = dfa_48;
            this.eof = dfa_66;
            this.min = dfa_49;
            this.max = dfa_50;
            this.accept = dfa_51;
            this.special = dfa_52;
            this.transition = dfa_53;
        }
        public String getDescription() {
            return "11851:2: ( rule__Unit__UnorderedGroup_7__1 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA100_0 = input.LA(1);

                         
                        int index100_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA100_0 == 40 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 0) ) {s = 1;}

                        else if ( LA100_0 == 39 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 1) ) {s = 2;}

                        else if ( LA100_0 == 51 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 2) ) {s = 3;}

                        else if ( LA100_0 == 52 && ( getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 3) || getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 4) ) ) {s = 4;}

                        else if ( LA100_0 == RULE_DOCUMENTATION && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 5) ) {s = 5;}

                        else if ( LA100_0 == RULE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 5) ) {s = 6;}

                        else if ( LA100_0 == 74 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 5) ) {s = 7;}

                        else if ( LA100_0 == 59 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 5) ) {s = 8;}

                        else if ( (LA100_0==EOF||LA100_0==45) ) {s = 9;}

                         
                        input.seek(index100_0);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 100, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA101 extends DFA {

        public DFA101(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 101;
            this.eot = dfa_48;
            this.eof = dfa_66;
            this.min = dfa_49;
            this.max = dfa_50;
            this.accept = dfa_51;
            this.special = dfa_52;
            this.transition = dfa_53;
        }
        public String getDescription() {
            return "11863:2: ( rule__Unit__UnorderedGroup_7__2 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA101_0 = input.LA(1);

                         
                        int index101_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA101_0 == 40 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 0) ) {s = 1;}

                        else if ( LA101_0 == 39 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 1) ) {s = 2;}

                        else if ( LA101_0 == 51 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 2) ) {s = 3;}

                        else if ( LA101_0 == 52 && ( getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 3) || getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 4) ) ) {s = 4;}

                        else if ( LA101_0 == RULE_DOCUMENTATION && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 5) ) {s = 5;}

                        else if ( LA101_0 == RULE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 5) ) {s = 6;}

                        else if ( LA101_0 == 74 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 5) ) {s = 7;}

                        else if ( LA101_0 == 59 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 5) ) {s = 8;}

                        else if ( (LA101_0==EOF||LA101_0==45) ) {s = 9;}

                         
                        input.seek(index101_0);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 101, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA102 extends DFA {

        public DFA102(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 102;
            this.eot = dfa_48;
            this.eof = dfa_66;
            this.min = dfa_49;
            this.max = dfa_50;
            this.accept = dfa_51;
            this.special = dfa_52;
            this.transition = dfa_53;
        }
        public String getDescription() {
            return "11875:2: ( rule__Unit__UnorderedGroup_7__3 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA102_0 = input.LA(1);

                         
                        int index102_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA102_0 == 40 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 0) ) {s = 1;}

                        else if ( LA102_0 == 39 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 1) ) {s = 2;}

                        else if ( LA102_0 == 51 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 2) ) {s = 3;}

                        else if ( LA102_0 == 52 && ( getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 3) || getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 4) ) ) {s = 4;}

                        else if ( LA102_0 == RULE_DOCUMENTATION && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 5) ) {s = 5;}

                        else if ( LA102_0 == RULE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 5) ) {s = 6;}

                        else if ( LA102_0 == 74 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 5) ) {s = 7;}

                        else if ( LA102_0 == 59 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 5) ) {s = 8;}

                        else if ( (LA102_0==EOF||LA102_0==45) ) {s = 9;}

                         
                        input.seek(index102_0);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 102, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA103 extends DFA {

        public DFA103(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 103;
            this.eot = dfa_48;
            this.eof = dfa_66;
            this.min = dfa_49;
            this.max = dfa_50;
            this.accept = dfa_51;
            this.special = dfa_52;
            this.transition = dfa_53;
        }
        public String getDescription() {
            return "11887:2: ( rule__Unit__UnorderedGroup_7__4 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA103_0 = input.LA(1);

                         
                        int index103_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA103_0 == 40 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 0) ) {s = 1;}

                        else if ( LA103_0 == 39 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 1) ) {s = 2;}

                        else if ( LA103_0 == 51 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 2) ) {s = 3;}

                        else if ( LA103_0 == 52 && ( getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 3) || getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 4) ) ) {s = 4;}

                        else if ( LA103_0 == RULE_DOCUMENTATION && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 5) ) {s = 5;}

                        else if ( LA103_0 == RULE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 5) ) {s = 6;}

                        else if ( LA103_0 == 74 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 5) ) {s = 7;}

                        else if ( LA103_0 == 59 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 5) ) {s = 8;}

                        else if ( (LA103_0==EOF||LA103_0==45) ) {s = 9;}

                         
                        input.seek(index103_0);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 103, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA104 extends DFA {

        public DFA104(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 104;
            this.eot = dfa_48;
            this.eof = dfa_66;
            this.min = dfa_49;
            this.max = dfa_50;
            this.accept = dfa_51;
            this.special = dfa_52;
            this.transition = dfa_53;
        }
        public String getDescription() {
            return "11899:2: ( rule__Unit__UnorderedGroup_7__5 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA104_0 = input.LA(1);

                         
                        int index104_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA104_0 == 40 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 0) ) {s = 1;}

                        else if ( LA104_0 == 39 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 1) ) {s = 2;}

                        else if ( LA104_0 == 51 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 2) ) {s = 3;}

                        else if ( LA104_0 == 52 && ( getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 3) || getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 4) ) ) {s = 4;}

                        else if ( LA104_0 == RULE_DOCUMENTATION && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 5) ) {s = 5;}

                        else if ( LA104_0 == RULE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 5) ) {s = 6;}

                        else if ( LA104_0 == 74 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 5) ) {s = 7;}

                        else if ( LA104_0 == 59 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 5) ) {s = 8;}

                        else if ( (LA104_0==EOF||LA104_0==45) ) {s = 9;}

                         
                        input.seek(index104_0);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 104, _s, input);
            error(nvae);
            throw nvae;
        }
    }
 

    public static final BitSet FOLLOW_1 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_2 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_3 = new BitSet(new long[]{0x0000000000002102L});
    public static final BitSet FOLLOW_4 = new BitSet(new long[]{0x0800000000000182L,0x0000000000000400L});
    public static final BitSet FOLLOW_5 = new BitSet(new long[]{0x0000000000002100L});
    public static final BitSet FOLLOW_6 = new BitSet(new long[]{0x0000D00000000080L});
    public static final BitSet FOLLOW_7 = new BitSet(new long[]{0x0818018000000180L,0x0000000000000400L});
    public static final BitSet FOLLOW_8 = new BitSet(new long[]{0x0000200000000000L});
    public static final BitSet FOLLOW_9 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_10 = new BitSet(new long[]{0x0001000000000000L});
    public static final BitSet FOLLOW_11 = new BitSet(new long[]{0x0001000000000002L});
    public static final BitSet FOLLOW_12 = new BitSet(new long[]{0x0002000000000000L});
    public static final BitSet FOLLOW_13 = new BitSet(new long[]{0x0000000200000090L});
    public static final BitSet FOLLOW_14 = new BitSet(new long[]{0x0004000000000000L});
    public static final BitSet FOLLOW_15 = new BitSet(new long[]{0x0000000000002080L});
    public static final BitSet FOLLOW_16 = new BitSet(new long[]{0x0020000000000000L});
    public static final BitSet FOLLOW_17 = new BitSet(new long[]{0x0000100000000000L});
    public static final BitSet FOLLOW_18 = new BitSet(new long[]{0x00C0400000000000L});
    public static final BitSet FOLLOW_19 = new BitSet(new long[]{0x90001FF880002090L,0x00000000000000A0L});
    public static final BitSet FOLLOW_20 = new BitSet(new long[]{0x0100100000000000L});
    public static final BitSet FOLLOW_21 = new BitSet(new long[]{0x0640400000000000L,0x0000000000000200L});
    public static final BitSet FOLLOW_22 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_23 = new BitSet(new long[]{0x0000000200000000L});
    public static final BitSet FOLLOW_24 = new BitSet(new long[]{0x0000000200000002L});
    public static final BitSet FOLLOW_25 = new BitSet(new long[]{0x90001FF890002090L,0x00000000000009A0L});
    public static final BitSet FOLLOW_26 = new BitSet(new long[]{0x1000000000000080L,0x0000000000000100L});
    public static final BitSet FOLLOW_27 = new BitSet(new long[]{0x0800000000000180L,0x0000000000000400L});
    public static final BitSet FOLLOW_28 = new BitSet(new long[]{0x1000000000000080L});
    public static final BitSet FOLLOW_29 = new BitSet(new long[]{0x1042100000000000L});
    public static final BitSet FOLLOW_30 = new BitSet(new long[]{0x3000000000000080L,0x0000000000000900L});
    public static final BitSet FOLLOW_31 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000800L});
    public static final BitSet FOLLOW_32 = new BitSet(new long[]{0x0002100000000000L});
    public static final BitSet FOLLOW_33 = new BitSet(new long[]{0x00000000000FC000L});
    public static final BitSet FOLLOW_34 = new BitSet(new long[]{0x1000000020000080L,0x0000000000000400L});
    public static final BitSet FOLLOW_35 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_36 = new BitSet(new long[]{0x0000000000000000L,0x0000000000001400L});
    public static final BitSet FOLLOW_37 = new BitSet(new long[]{0x0000000010000000L});
    public static final BitSet FOLLOW_38 = new BitSet(new long[]{0x0001000008000000L});
    public static final BitSet FOLLOW_39 = new BitSet(new long[]{0x2000000000000080L,0x0000000000000800L});
    public static final BitSet FOLLOW_40 = new BitSet(new long[]{0x4000000000000000L});
    public static final BitSet FOLLOW_41 = new BitSet(new long[]{0x8000000000000000L});
    public static final BitSet FOLLOW_42 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_43 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000001L});
    public static final BitSet FOLLOW_44 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000002L});
    public static final BitSet FOLLOW_45 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000002L});
    public static final BitSet FOLLOW_46 = new BitSet(new long[]{0x000000001FF00000L});
    public static final BitSet FOLLOW_47 = new BitSet(new long[]{0x000000001FF00002L});
    public static final BitSet FOLLOW_48 = new BitSet(new long[]{0x00000000C0000000L});
    public static final BitSet FOLLOW_49 = new BitSet(new long[]{0x00000000C0000002L});
    public static final BitSet FOLLOW_50 = new BitSet(new long[]{0x0000000700000000L});
    public static final BitSet FOLLOW_51 = new BitSet(new long[]{0x0000000700000002L});
    public static final BitSet FOLLOW_52 = new BitSet(new long[]{0x0000000000000000L,0x0000000000002000L});
    public static final BitSet FOLLOW_53 = new BitSet(new long[]{0x0000000000000002L,0x0000000000002000L});
    public static final BitSet FOLLOW_54 = new BitSet(new long[]{0x0000000880000000L});
    public static final BitSet FOLLOW_55 = new BitSet(new long[]{0x10001FC000002090L,0x00000000000000A0L});
    public static final BitSet FOLLOW_56 = new BitSet(new long[]{0x0000003000000000L});
    public static final BitSet FOLLOW_57 = new BitSet(new long[]{0x0000000000000000L,0x000000000000000CL});
    public static final BitSet FOLLOW_58 = new BitSet(new long[]{0x0000000000000002L,0x000000000000000CL});
    public static final BitSet FOLLOW_59 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_60 = new BitSet(new long[]{0x1000000000000000L});
    public static final BitSet FOLLOW_61 = new BitSet(new long[]{0xB0001FF890002090L,0x00000000000009A0L});
    public static final BitSet FOLLOW_62 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000008L});
    public static final BitSet FOLLOW_63 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000010L});
    public static final BitSet FOLLOW_64 = new BitSet(new long[]{0x1000000000000002L});
    public static final BitSet FOLLOW_65 = new BitSet(new long[]{0x0002100000000080L});
    public static final BitSet FOLLOW_66 = new BitSet(new long[]{0x90001FF8A0002090L,0x00000000000014A0L});
    public static final BitSet FOLLOW_67 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
    public static final BitSet FOLLOW_68 = new BitSet(new long[]{0x90003FF8A0002090L,0x00000000000014A0L});
    public static final BitSet FOLLOW_69 = new BitSet(new long[]{0x90001FF8A0002092L,0x00000000000014A0L});
    public static final BitSet FOLLOW_70 = new BitSet(new long[]{0x00000FC000002000L});
    public static final BitSet FOLLOW_71 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
    public static final BitSet FOLLOW_72 = new BitSet(new long[]{0x1100100000000000L});
    public static final BitSet FOLLOW_73 = new BitSet(new long[]{0x1000000010000080L,0x0000000000000900L});
    public static final BitSet FOLLOW_74 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_75 = new BitSet(new long[]{0x2000000000000000L});
    public static final BitSet FOLLOW_76 = new BitSet(new long[]{0x00000000000000E0L,0x0000000000000004L});
    public static final BitSet FOLLOW_77 = new BitSet(new long[]{0x00000000000000E2L});
    public static final BitSet FOLLOW_78 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000004L});
    public static final BitSet FOLLOW_79 = new BitSet(new long[]{0x00000000000000E0L});
    public static final BitSet FOLLOW_80 = new BitSet(new long[]{0x0008000000000002L});
    public static final BitSet FOLLOW_81 = new BitSet(new long[]{0x0010000000000002L});
    public static final BitSet FOLLOW_82 = new BitSet(new long[]{0x0818018000000182L,0x0000000000000400L});
    public static final BitSet FOLLOW_83 = new BitSet(new long[]{0x00C0400000000002L});
    public static final BitSet FOLLOW_84 = new BitSet(new long[]{0x0640400000000002L,0x0000000000000200L});

}
