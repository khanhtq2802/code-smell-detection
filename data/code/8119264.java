package org.eclipse.xtext.testlanguages.backtracking.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.eclipse.xtext.testlanguages.backtracking.services.SimpleBeeLangTestLanguageGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
@SuppressWarnings("all")
interface InternalSimpleBeeLangTestLanguageParserSignatures {
     void entryRuleDelegateModel() throws RecognitionException;
     void ruleDelegateModel() throws RecognitionException;
     void entryRuleModel() throws RecognitionException;
     void ruleModel() throws RecognitionException;
     void entryRuleUnit() throws RecognitionException;
     void ruleUnit() throws RecognitionException;
     void entryRuleProvidedCapability() throws RecognitionException;
     void ruleProvidedCapability() throws RecognitionException;
     void entryRuleAliasedRequiredCapability() throws RecognitionException;
     void ruleAliasedRequiredCapability() throws RecognitionException;
     void entryRuleRequiredCapability() throws RecognitionException;
     void ruleRequiredCapability() throws RecognitionException;
     void entryRulePath() throws RecognitionException;
     void rulePath() throws RecognitionException;
     void entryRuleParameterList() throws RecognitionException;
     void ruleParameterList() throws RecognitionException;
     void entryRuleFirstParameter() throws RecognitionException;
     void ruleFirstParameter() throws RecognitionException;
     void entryRuleParameter() throws RecognitionException;
     void ruleParameter() throws RecognitionException;
     void entryRuleClosureParameter() throws RecognitionException;
     void ruleClosureParameter() throws RecognitionException;
     void entryRuleParameterDeclaration() throws RecognitionException;
     void ruleParameterDeclaration() throws RecognitionException;
     void entryRuleFunction() throws RecognitionException;
     void ruleFunction() throws RecognitionException;
     void entryRuleGuardExpression() throws RecognitionException;
     void ruleGuardExpression() throws RecognitionException;
     void entryRuleAssignmentOperator() throws RecognitionException;
     void ruleAssignmentOperator() throws RecognitionException;
     void entryRuleRelationalOperator() throws RecognitionException;
     void ruleRelationalOperator() throws RecognitionException;
     void entryRuleTopLevelExpression() throws RecognitionException;
     void ruleTopLevelExpression() throws RecognitionException;
     void entryRuleExpression() throws RecognitionException;
     void ruleExpression() throws RecognitionException;
     void entryRuleAssignmentExpression() throws RecognitionException;
     void ruleAssignmentExpression() throws RecognitionException;
     void entryRuleVarDeclaration() throws RecognitionException;
     void ruleVarDeclaration() throws RecognitionException;
     void entryRuleValDeclaration() throws RecognitionException;
     void ruleValDeclaration() throws RecognitionException;
     void entryRuleTypeRef() throws RecognitionException;
     void ruleTypeRef() throws RecognitionException;
     void entryRuleSimpleTypeRef() throws RecognitionException;
     void ruleSimpleTypeRef() throws RecognitionException;
     void entryRuleClosureTypeRef() throws RecognitionException;
     void ruleClosureTypeRef() throws RecognitionException;
     void entryRuleCachedExpression() throws RecognitionException;
     void ruleCachedExpression() throws RecognitionException;
     void entryRuleOrExpression() throws RecognitionException;
     void ruleOrExpression() throws RecognitionException;
     void entryRuleAndExpression() throws RecognitionException;
     void ruleAndExpression() throws RecognitionException;
     void entryRuleRelationalExpression() throws RecognitionException;
     void ruleRelationalExpression() throws RecognitionException;
     void entryRuleAdditiveExpression() throws RecognitionException;
     void ruleAdditiveExpression() throws RecognitionException;
     void entryRuleMultiplicativeExpression() throws RecognitionException;
     void ruleMultiplicativeExpression() throws RecognitionException;
     void entryRuleSetExpression() throws RecognitionException;
     void ruleSetExpression() throws RecognitionException;
     void entryRuleUnaryOrInfixExpression() throws RecognitionException;
     void ruleUnaryOrInfixExpression() throws RecognitionException;
     void entryRuleUnaryExpression() throws RecognitionException;
     void ruleUnaryExpression() throws RecognitionException;
     void entryRulePreopExpression() throws RecognitionException;
     void rulePreopExpression() throws RecognitionException;
     void entryRulePostopExpression() throws RecognitionException;
     void rulePostopExpression() throws RecognitionException;
     void entryRuleInfixExpression() throws RecognitionException;
     void ruleInfixExpression() throws RecognitionException;
     void entryRuleCallExpression() throws RecognitionException;
     void ruleCallExpression() throws RecognitionException;
     void entryRulePrimaryExpression() throws RecognitionException;
     void rulePrimaryExpression() throws RecognitionException;
     void entryRuleWithExpression() throws RecognitionException;
     void ruleWithExpression() throws RecognitionException;
     void entryRuleWithContextExpression() throws RecognitionException;
     void ruleWithContextExpression() throws RecognitionException;
     void entryRuleBlockExpression() throws RecognitionException;
     void ruleBlockExpression() throws RecognitionException;
     void entryRuleValue() throws RecognitionException;
     void ruleValue() throws RecognitionException;
     void entryRuleKeywordVariables() throws RecognitionException;
     void ruleKeywordVariables() throws RecognitionException;
     void entryRuleFeatureCall() throws RecognitionException;
     void ruleFeatureCall() throws RecognitionException;
     void entryRuleOperationCall() throws RecognitionException;
     void ruleOperationCall() throws RecognitionException;
     void entryRuleConstructorCallExpression() throws RecognitionException;
     void ruleConstructorCallExpression() throws RecognitionException;
     void entryRuleInitializationBlockExpression() throws RecognitionException;
     void ruleInitializationBlockExpression() throws RecognitionException;
     void entryRuleInitializationExpression() throws RecognitionException;
     void ruleInitializationExpression() throws RecognitionException;
     void entryRuleFeatureOfThis() throws RecognitionException;
     void ruleFeatureOfThis() throws RecognitionException;
     void entryRuleLiteral() throws RecognitionException;
     void ruleLiteral() throws RecognitionException;
     void entryRuleLiteralFunction() throws RecognitionException;
     void ruleLiteralFunction() throws RecognitionException;
     void entryRuleClosureExpression() throws RecognitionException;
     void ruleClosureExpression() throws RecognitionException;
     void entryRuleOneOrManyExpressions() throws RecognitionException;
     void ruleOneOrManyExpressions() throws RecognitionException;
     void entryRuleBlockExpressionWithoutBrackets() throws RecognitionException;
     void ruleBlockExpressionWithoutBrackets() throws RecognitionException;
     void entryRuleValueLiteral() throws RecognitionException;
     void ruleValueLiteral() throws RecognitionException;
     void entryRuleParanthesizedExpression() throws RecognitionException;
     void ruleParanthesizedExpression() throws RecognitionException;
     void entryRuleQID() throws RecognitionException;
     void ruleQID() throws RecognitionException;
     void rule__Model__Alternatives() throws RecognitionException;
     void rule__ProvidedCapability__Alternatives_1() throws RecognitionException;
     void rule__AliasedRequiredCapability__Alternatives_0() throws RecognitionException;
     void rule__RequiredCapability__Alternatives_1() throws RecognitionException;
     void rule__Path__Alternatives() throws RecognitionException;
     void rule__FirstParameter__Alternatives() throws RecognitionException;
     void rule__Function__Alternatives_6_1() throws RecognitionException;
     void rule__Function__Alternatives_8() throws RecognitionException;
     void rule__GuardExpression__Alternatives() throws RecognitionException;
     void rule__AssignmentOperator__Alternatives() throws RecognitionException;
     void rule__RelationalOperator__Alternatives() throws RecognitionException;
     void rule__TopLevelExpression__Alternatives() throws RecognitionException;
     void rule__VarDeclaration__Alternatives_2_0() throws RecognitionException;
     void rule__TypeRef__Alternatives() throws RecognitionException;
     void rule__ClosureTypeRef__Alternatives_1() throws RecognitionException;
     void rule__CachedExpression__Alternatives() throws RecognitionException;
     void rule__AdditiveExpression__FunctionNameAlternatives_1_1_0() throws RecognitionException;
     void rule__MultiplicativeExpression__FunctionNameAlternatives_1_1_0() throws RecognitionException;
     void rule__UnaryOrInfixExpression__Alternatives() throws RecognitionException;
     void rule__UnaryExpression__FunctionNameAlternatives_1_0() throws RecognitionException;
     void rule__PreopExpression__FunctionNameAlternatives_1_0() throws RecognitionException;
     void rule__PostopExpression__FunctionNameAlternatives_1_1_0() throws RecognitionException;
     void rule__InfixExpression__Alternatives_1() throws RecognitionException;
     void rule__PrimaryExpression__Alternatives() throws RecognitionException;
     void rule__WithExpression__Alternatives_2() throws RecognitionException;
     void rule__KeywordVariables__NameAlternatives_1_0() throws RecognitionException;
     void rule__Literal__Alternatives() throws RecognitionException;
     void rule__ClosureExpression__Alternatives_2() throws RecognitionException;
     void rule__OneOrManyExpressions__Alternatives() throws RecognitionException;
     void rule__QID__Alternatives_1() throws RecognitionException;
     void rule__QID__Alternatives_2_2() throws RecognitionException;
     void rule__Unit__Group__0() throws RecognitionException;
     void rule__Unit__Group__0__Impl() throws RecognitionException;
     void rule__Unit__Group__1() throws RecognitionException;
     void rule__Unit__Group__1__Impl() throws RecognitionException;
     void rule__Unit__Group__2() throws RecognitionException;
     void rule__Unit__Group__2__Impl() throws RecognitionException;
     void rule__Unit__Group__3() throws RecognitionException;
     void rule__Unit__Group__3__Impl() throws RecognitionException;
     void rule__Unit__Group__4() throws RecognitionException;
     void rule__Unit__Group__4__Impl() throws RecognitionException;
     void rule__Unit__Group__5() throws RecognitionException;
     void rule__Unit__Group__5__Impl() throws RecognitionException;
     void rule__Unit__Group__6() throws RecognitionException;
     void rule__Unit__Group__6__Impl() throws RecognitionException;
     void rule__Unit__Group__7() throws RecognitionException;
     void rule__Unit__Group__7__Impl() throws RecognitionException;
     void rule__Unit__Group__8() throws RecognitionException;
     void rule__Unit__Group__8__Impl() throws RecognitionException;
     void rule__Unit__Group_4__0() throws RecognitionException;
     void rule__Unit__Group_4__0__Impl() throws RecognitionException;
     void rule__Unit__Group_4__1() throws RecognitionException;
     void rule__Unit__Group_4__1__Impl() throws RecognitionException;
     void rule__Unit__Group_5__0() throws RecognitionException;
     void rule__Unit__Group_5__0__Impl() throws RecognitionException;
     void rule__Unit__Group_5__1() throws RecognitionException;
     void rule__Unit__Group_5__1__Impl() throws RecognitionException;
     void rule__Unit__Group_5__2() throws RecognitionException;
     void rule__Unit__Group_5__2__Impl() throws RecognitionException;
     void rule__Unit__Group_5_2__0() throws RecognitionException;
     void rule__Unit__Group_5_2__0__Impl() throws RecognitionException;
     void rule__Unit__Group_5_2__1() throws RecognitionException;
     void rule__Unit__Group_5_2__1__Impl() throws RecognitionException;
     void rule__Unit__Group_7_0__0() throws RecognitionException;
     void rule__Unit__Group_7_0__0__Impl() throws RecognitionException;
     void rule__Unit__Group_7_0__1() throws RecognitionException;
     void rule__Unit__Group_7_0__1__Impl() throws RecognitionException;
     void rule__Unit__Group_7_0__2() throws RecognitionException;
     void rule__Unit__Group_7_0__2__Impl() throws RecognitionException;
     void rule__Unit__Group_7_0__3() throws RecognitionException;
     void rule__Unit__Group_7_0__3__Impl() throws RecognitionException;
     void rule__Unit__Group_7_1__0() throws RecognitionException;
     void rule__Unit__Group_7_1__0__Impl() throws RecognitionException;
     void rule__Unit__Group_7_1__1() throws RecognitionException;
     void rule__Unit__Group_7_1__1__Impl() throws RecognitionException;
     void rule__Unit__Group_7_1__2() throws RecognitionException;
     void rule__Unit__Group_7_1__2__Impl() throws RecognitionException;
     void rule__Unit__Group_7_1__3() throws RecognitionException;
     void rule__Unit__Group_7_1__3__Impl() throws RecognitionException;
     void rule__Unit__Group_7_2__0() throws RecognitionException;
     void rule__Unit__Group_7_2__0__Impl() throws RecognitionException;
     void rule__Unit__Group_7_2__1() throws RecognitionException;
     void rule__Unit__Group_7_2__1__Impl() throws RecognitionException;
     void rule__Unit__Group_7_2__2() throws RecognitionException;
     void rule__Unit__Group_7_2__2__Impl() throws RecognitionException;
     void rule__Unit__Group_7_2__3() throws RecognitionException;
     void rule__Unit__Group_7_2__3__Impl() throws RecognitionException;
     void rule__Unit__Group_7_3__0() throws RecognitionException;
     void rule__Unit__Group_7_3__0__Impl() throws RecognitionException;
     void rule__Unit__Group_7_3__1() throws RecognitionException;
     void rule__Unit__Group_7_3__1__Impl() throws RecognitionException;
     void rule__Unit__Group_7_3__2() throws RecognitionException;
     void rule__Unit__Group_7_3__2__Impl() throws RecognitionException;
     void rule__Unit__Group_7_3__3() throws RecognitionException;
     void rule__Unit__Group_7_3__3__Impl() throws RecognitionException;
     void rule__Unit__Group_7_4__0() throws RecognitionException;
     void rule__Unit__Group_7_4__0__Impl() throws RecognitionException;
     void rule__Unit__Group_7_4__1() throws RecognitionException;
     void rule__Unit__Group_7_4__1__Impl() throws RecognitionException;
     void rule__Unit__Group_7_4__2() throws RecognitionException;
     void rule__Unit__Group_7_4__2__Impl() throws RecognitionException;
     void rule__Unit__Group_7_4__3() throws RecognitionException;
     void rule__Unit__Group_7_4__3__Impl() throws RecognitionException;
     void rule__Unit__Group_7_4__4() throws RecognitionException;
     void rule__Unit__Group_7_4__4__Impl() throws RecognitionException;
     void rule__ProvidedCapability__Group__0() throws RecognitionException;
     void rule__ProvidedCapability__Group__0__Impl() throws RecognitionException;
     void rule__ProvidedCapability__Group__1() throws RecognitionException;
     void rule__ProvidedCapability__Group__1__Impl() throws RecognitionException;
     void rule__ProvidedCapability__Group__2() throws RecognitionException;
     void rule__ProvidedCapability__Group__2__Impl() throws RecognitionException;
     void rule__ProvidedCapability__Group_2__0() throws RecognitionException;
     void rule__ProvidedCapability__Group_2__0__Impl() throws RecognitionException;
     void rule__ProvidedCapability__Group_2__1() throws RecognitionException;
     void rule__ProvidedCapability__Group_2__1__Impl() throws RecognitionException;
     void rule__ProvidedCapability__Group_2__2() throws RecognitionException;
     void rule__ProvidedCapability__Group_2__2__Impl() throws RecognitionException;
     void rule__ProvidedCapability__Group_2_1_0__0() throws RecognitionException;
     void rule__ProvidedCapability__Group_2_1_0__0__Impl() throws RecognitionException;
     void rule__ProvidedCapability__Group_2_1_0__1() throws RecognitionException;
     void rule__ProvidedCapability__Group_2_1_0__1__Impl() throws RecognitionException;
     void rule__ProvidedCapability__Group_2_1_0__2() throws RecognitionException;
     void rule__ProvidedCapability__Group_2_1_0__2__Impl() throws RecognitionException;
     void rule__ProvidedCapability__Group_2_1_0__3() throws RecognitionException;
     void rule__ProvidedCapability__Group_2_1_0__3__Impl() throws RecognitionException;
     void rule__ProvidedCapability__Group_2_1_1__0() throws RecognitionException;
     void rule__ProvidedCapability__Group_2_1_1__0__Impl() throws RecognitionException;
     void rule__ProvidedCapability__Group_2_1_1__1() throws RecognitionException;
     void rule__ProvidedCapability__Group_2_1_1__1__Impl() throws RecognitionException;
     void rule__ProvidedCapability__Group_2_1_1__2() throws RecognitionException;
     void rule__ProvidedCapability__Group_2_1_1__2__Impl() throws RecognitionException;
     void rule__ProvidedCapability__Group_2_1_1__3() throws RecognitionException;
     void rule__ProvidedCapability__Group_2_1_1__3__Impl() throws RecognitionException;
     void rule__ProvidedCapability__Group_2_1_2__0() throws RecognitionException;
     void rule__ProvidedCapability__Group_2_1_2__0__Impl() throws RecognitionException;
     void rule__ProvidedCapability__Group_2_1_2__1() throws RecognitionException;
     void rule__ProvidedCapability__Group_2_1_2__1__Impl() throws RecognitionException;
     void rule__ProvidedCapability__Group_2_1_2__2() throws RecognitionException;
     void rule__ProvidedCapability__Group_2_1_2__2__Impl() throws RecognitionException;
     void rule__ProvidedCapability__Group_2_1_2__3() throws RecognitionException;
     void rule__ProvidedCapability__Group_2_1_2__3__Impl() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group__0() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group__0__Impl() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group__1() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group__1__Impl() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group__2() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group__2__Impl() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group__3() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group__3__Impl() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group_2__0() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group_2__0__Impl() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group_2__1() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group_2__1__Impl() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group_3__0() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group_3__0__Impl() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group_3__1() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group_3__1__Impl() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group_3__2() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group_3__2__Impl() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group_3_1_0__0() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group_3_1_0__0__Impl() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group_3_1_0__1() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group_3_1_0__1__Impl() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group_3_1_0__2() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group_3_1_0__2__Impl() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group_3_1_0__3() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group_3_1_0__3__Impl() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group_3_1_1__0() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group_3_1_1__0__Impl() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group_3_1_1__1() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group_3_1_1__1__Impl() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group_3_1_2__0() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group_3_1_2__0__Impl() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group_3_1_2__1() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group_3_1_2__1__Impl() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group_3_1_2__2() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group_3_1_2__2__Impl() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group_3_1_2__3() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group_3_1_2__3__Impl() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group_3_1_3__0() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group_3_1_3__0__Impl() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group_3_1_3__1() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group_3_1_3__1__Impl() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group_3_1_3__2() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group_3_1_3__2__Impl() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group_3_1_3__3() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group_3_1_3__3__Impl() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group_3_1_4__0() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group_3_1_4__0__Impl() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group_3_1_4__1() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group_3_1_4__1__Impl() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group_3_1_4__2() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group_3_1_4__2__Impl() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group_3_1_4__3() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group_3_1_4__3__Impl() throws RecognitionException;
     void rule__RequiredCapability__Group__0() throws RecognitionException;
     void rule__RequiredCapability__Group__0__Impl() throws RecognitionException;
     void rule__RequiredCapability__Group__1() throws RecognitionException;
     void rule__RequiredCapability__Group__1__Impl() throws RecognitionException;
     void rule__RequiredCapability__Group__2() throws RecognitionException;
     void rule__RequiredCapability__Group__2__Impl() throws RecognitionException;
     void rule__RequiredCapability__Group__3() throws RecognitionException;
     void rule__RequiredCapability__Group__3__Impl() throws RecognitionException;
     void rule__RequiredCapability__Group_3__0() throws RecognitionException;
     void rule__RequiredCapability__Group_3__0__Impl() throws RecognitionException;
     void rule__RequiredCapability__Group_3__1() throws RecognitionException;
     void rule__RequiredCapability__Group_3__1__Impl() throws RecognitionException;
     void rule__RequiredCapability__Group_3__2() throws RecognitionException;
     void rule__RequiredCapability__Group_3__2__Impl() throws RecognitionException;
     void rule__RequiredCapability__Group_3_1_0__0() throws RecognitionException;
     void rule__RequiredCapability__Group_3_1_0__0__Impl() throws RecognitionException;
     void rule__RequiredCapability__Group_3_1_0__1() throws RecognitionException;
     void rule__RequiredCapability__Group_3_1_0__1__Impl() throws RecognitionException;
     void rule__RequiredCapability__Group_3_1_0__2() throws RecognitionException;
     void rule__RequiredCapability__Group_3_1_0__2__Impl() throws RecognitionException;
     void rule__RequiredCapability__Group_3_1_0__3() throws RecognitionException;
     void rule__RequiredCapability__Group_3_1_0__3__Impl() throws RecognitionException;
     void rule__RequiredCapability__Group_3_1_1__0() throws RecognitionException;
     void rule__RequiredCapability__Group_3_1_1__0__Impl() throws RecognitionException;
     void rule__RequiredCapability__Group_3_1_1__1() throws RecognitionException;
     void rule__RequiredCapability__Group_3_1_1__1__Impl() throws RecognitionException;
     void rule__RequiredCapability__Group_3_1_2__0() throws RecognitionException;
     void rule__RequiredCapability__Group_3_1_2__0__Impl() throws RecognitionException;
     void rule__RequiredCapability__Group_3_1_2__1() throws RecognitionException;
     void rule__RequiredCapability__Group_3_1_2__1__Impl() throws RecognitionException;
     void rule__RequiredCapability__Group_3_1_2__2() throws RecognitionException;
     void rule__RequiredCapability__Group_3_1_2__2__Impl() throws RecognitionException;
     void rule__RequiredCapability__Group_3_1_2__3() throws RecognitionException;
     void rule__RequiredCapability__Group_3_1_2__3__Impl() throws RecognitionException;
     void rule__RequiredCapability__Group_3_1_3__0() throws RecognitionException;
     void rule__RequiredCapability__Group_3_1_3__0__Impl() throws RecognitionException;
     void rule__RequiredCapability__Group_3_1_3__1() throws RecognitionException;
     void rule__RequiredCapability__Group_3_1_3__1__Impl() throws RecognitionException;
     void rule__RequiredCapability__Group_3_1_3__2() throws RecognitionException;
     void rule__RequiredCapability__Group_3_1_3__2__Impl() throws RecognitionException;
     void rule__RequiredCapability__Group_3_1_3__3() throws RecognitionException;
     void rule__RequiredCapability__Group_3_1_3__3__Impl() throws RecognitionException;
     void rule__RequiredCapability__Group_3_1_4__0() throws RecognitionException;
     void rule__RequiredCapability__Group_3_1_4__0__Impl() throws RecognitionException;
     void rule__RequiredCapability__Group_3_1_4__1() throws RecognitionException;
     void rule__RequiredCapability__Group_3_1_4__1__Impl() throws RecognitionException;
     void rule__RequiredCapability__Group_3_1_4__2() throws RecognitionException;
     void rule__RequiredCapability__Group_3_1_4__2__Impl() throws RecognitionException;
     void rule__RequiredCapability__Group_3_1_4__3() throws RecognitionException;
     void rule__RequiredCapability__Group_3_1_4__3__Impl() throws RecognitionException;
     void rule__Path__Group_1__0() throws RecognitionException;
     void rule__Path__Group_1__0__Impl() throws RecognitionException;
     void rule__Path__Group_1__1() throws RecognitionException;
     void rule__Path__Group_1__1__Impl() throws RecognitionException;
     void rule__Path__Group_1__2() throws RecognitionException;
     void rule__Path__Group_1__2__Impl() throws RecognitionException;
     void rule__Path__Group_1__3() throws RecognitionException;
     void rule__Path__Group_1__3__Impl() throws RecognitionException;
     void rule__Path__Group_1_2__0() throws RecognitionException;
     void rule__Path__Group_1_2__0__Impl() throws RecognitionException;
     void rule__Path__Group_1_2__1() throws RecognitionException;
     void rule__Path__Group_1_2__1__Impl() throws RecognitionException;
     void rule__ParameterList__Group__0() throws RecognitionException;
     void rule__ParameterList__Group__0__Impl() throws RecognitionException;
     void rule__ParameterList__Group__1() throws RecognitionException;
     void rule__ParameterList__Group__1__Impl() throws RecognitionException;
     void rule__ParameterList__Group_1__0() throws RecognitionException;
     void rule__ParameterList__Group_1__0__Impl() throws RecognitionException;
     void rule__ParameterList__Group_1__1() throws RecognitionException;
     void rule__ParameterList__Group_1__1__Impl() throws RecognitionException;
     void rule__ParameterDeclaration__Group__0() throws RecognitionException;
     void rule__ParameterDeclaration__Group__0__Impl() throws RecognitionException;
     void rule__ParameterDeclaration__Group__1() throws RecognitionException;
     void rule__ParameterDeclaration__Group__1__Impl() throws RecognitionException;
     void rule__Function__Group__0() throws RecognitionException;
     void rule__Function__Group__0__Impl() throws RecognitionException;
     void rule__Function__Group__1() throws RecognitionException;
     void rule__Function__Group__1__Impl() throws RecognitionException;
     void rule__Function__Group__2() throws RecognitionException;
     void rule__Function__Group__2__Impl() throws RecognitionException;
     void rule__Function__Group__3() throws RecognitionException;
     void rule__Function__Group__3__Impl() throws RecognitionException;
     void rule__Function__Group__4() throws RecognitionException;
     void rule__Function__Group__4__Impl() throws RecognitionException;
     void rule__Function__Group__5() throws RecognitionException;
     void rule__Function__Group__5__Impl() throws RecognitionException;
     void rule__Function__Group__6() throws RecognitionException;
     void rule__Function__Group__6__Impl() throws RecognitionException;
     void rule__Function__Group__7() throws RecognitionException;
     void rule__Function__Group__7__Impl() throws RecognitionException;
     void rule__Function__Group__8() throws RecognitionException;
     void rule__Function__Group__8__Impl() throws RecognitionException;
     void rule__Function__Group_6__0() throws RecognitionException;
     void rule__Function__Group_6__0__Impl() throws RecognitionException;
     void rule__Function__Group_6__1() throws RecognitionException;
     void rule__Function__Group_6__1__Impl() throws RecognitionException;
     void rule__Function__Group_6__2() throws RecognitionException;
     void rule__Function__Group_6__2__Impl() throws RecognitionException;
     void rule__Function__Group_6_1_0__0() throws RecognitionException;
     void rule__Function__Group_6_1_0__0__Impl() throws RecognitionException;
     void rule__Function__Group_6_1_0__1() throws RecognitionException;
     void rule__Function__Group_6_1_0__1__Impl() throws RecognitionException;
     void rule__Function__Group_6_1_0__2() throws RecognitionException;
     void rule__Function__Group_6_1_0__2__Impl() throws RecognitionException;
     void rule__Function__Group_6_1_0_1__0() throws RecognitionException;
     void rule__Function__Group_6_1_0_1__0__Impl() throws RecognitionException;
     void rule__Function__Group_6_1_0_1__1() throws RecognitionException;
     void rule__Function__Group_6_1_0_1__1__Impl() throws RecognitionException;
     void rule__Function__Group_6_1_0_2__0() throws RecognitionException;
     void rule__Function__Group_6_1_0_2__0__Impl() throws RecognitionException;
     void rule__Function__Group_6_1_0_2__1() throws RecognitionException;
     void rule__Function__Group_6_1_0_2__1__Impl() throws RecognitionException;
     void rule__Function__Group_6_1_0_2__2() throws RecognitionException;
     void rule__Function__Group_6_1_0_2__2__Impl() throws RecognitionException;
     void rule__Function__Group_6_1_1__0() throws RecognitionException;
     void rule__Function__Group_6_1_1__0__Impl() throws RecognitionException;
     void rule__Function__Group_6_1_1__1() throws RecognitionException;
     void rule__Function__Group_6_1_1__1__Impl() throws RecognitionException;
     void rule__Function__Group_7__0() throws RecognitionException;
     void rule__Function__Group_7__0__Impl() throws RecognitionException;
     void rule__Function__Group_7__1() throws RecognitionException;
     void rule__Function__Group_7__1__Impl() throws RecognitionException;
     void rule__Function__Group_8_0__0() throws RecognitionException;
     void rule__Function__Group_8_0__0__Impl() throws RecognitionException;
     void rule__Function__Group_8_0__1() throws RecognitionException;
     void rule__Function__Group_8_0__1__Impl() throws RecognitionException;
     void rule__Function__Group_8_0__2() throws RecognitionException;
     void rule__Function__Group_8_0__2__Impl() throws RecognitionException;
     void rule__GuardExpression__Group_0__0() throws RecognitionException;
     void rule__GuardExpression__Group_0__0__Impl() throws RecognitionException;
     void rule__GuardExpression__Group_0__1() throws RecognitionException;
     void rule__GuardExpression__Group_0__1__Impl() throws RecognitionException;
     void rule__GuardExpression__Group_0__2() throws RecognitionException;
     void rule__GuardExpression__Group_0__2__Impl() throws RecognitionException;
     void rule__AssignmentExpression__Group__0() throws RecognitionException;
     void rule__AssignmentExpression__Group__0__Impl() throws RecognitionException;
     void rule__AssignmentExpression__Group__1() throws RecognitionException;
     void rule__AssignmentExpression__Group__1__Impl() throws RecognitionException;
     void rule__AssignmentExpression__Group_1__0() throws RecognitionException;
     void rule__AssignmentExpression__Group_1__0__Impl() throws RecognitionException;
     void rule__AssignmentExpression__Group_1__1() throws RecognitionException;
     void rule__AssignmentExpression__Group_1__1__Impl() throws RecognitionException;
     void rule__AssignmentExpression__Group_1__2() throws RecognitionException;
     void rule__AssignmentExpression__Group_1__2__Impl() throws RecognitionException;
     void rule__VarDeclaration__Group__0() throws RecognitionException;
     void rule__VarDeclaration__Group__0__Impl() throws RecognitionException;
     void rule__VarDeclaration__Group__1() throws RecognitionException;
     void rule__VarDeclaration__Group__1__Impl() throws RecognitionException;
     void rule__VarDeclaration__Group__2() throws RecognitionException;
     void rule__VarDeclaration__Group__2__Impl() throws RecognitionException;
     void rule__VarDeclaration__Group__3() throws RecognitionException;
     void rule__VarDeclaration__Group__3__Impl() throws RecognitionException;
     void rule__VarDeclaration__Group_2__0() throws RecognitionException;
     void rule__VarDeclaration__Group_2__0__Impl() throws RecognitionException;
     void rule__VarDeclaration__Group_2__1() throws RecognitionException;
     void rule__VarDeclaration__Group_2__1__Impl() throws RecognitionException;
     void rule__VarDeclaration__Group_3__0() throws RecognitionException;
     void rule__VarDeclaration__Group_3__0__Impl() throws RecognitionException;
     void rule__VarDeclaration__Group_3__1() throws RecognitionException;
     void rule__VarDeclaration__Group_3__1__Impl() throws RecognitionException;
     void rule__ValDeclaration__Group__0() throws RecognitionException;
     void rule__ValDeclaration__Group__0__Impl() throws RecognitionException;
     void rule__ValDeclaration__Group__1() throws RecognitionException;
     void rule__ValDeclaration__Group__1__Impl() throws RecognitionException;
     void rule__ValDeclaration__Group__2() throws RecognitionException;
     void rule__ValDeclaration__Group__2__Impl() throws RecognitionException;
     void rule__ValDeclaration__Group__3() throws RecognitionException;
     void rule__ValDeclaration__Group__3__Impl() throws RecognitionException;
     void rule__ValDeclaration__Group__4() throws RecognitionException;
     void rule__ValDeclaration__Group__4__Impl() throws RecognitionException;
     void rule__ValDeclaration__Group__5() throws RecognitionException;
     void rule__ValDeclaration__Group__5__Impl() throws RecognitionException;
     void rule__ValDeclaration__Group__6() throws RecognitionException;
     void rule__ValDeclaration__Group__6__Impl() throws RecognitionException;
     void rule__SimpleTypeRef__Group__0() throws RecognitionException;
     void rule__SimpleTypeRef__Group__0__Impl() throws RecognitionException;
     void rule__SimpleTypeRef__Group__1() throws RecognitionException;
     void rule__SimpleTypeRef__Group__1__Impl() throws RecognitionException;
     void rule__SimpleTypeRef__Group_1__0() throws RecognitionException;
     void rule__SimpleTypeRef__Group_1__0__Impl() throws RecognitionException;
     void rule__SimpleTypeRef__Group_1__1() throws RecognitionException;
     void rule__SimpleTypeRef__Group_1__1__Impl() throws RecognitionException;
     void rule__SimpleTypeRef__Group_1__2() throws RecognitionException;
     void rule__SimpleTypeRef__Group_1__2__Impl() throws RecognitionException;
     void rule__SimpleTypeRef__Group_1__3() throws RecognitionException;
     void rule__SimpleTypeRef__Group_1__3__Impl() throws RecognitionException;
     void rule__SimpleTypeRef__Group_1_2__0() throws RecognitionException;
     void rule__SimpleTypeRef__Group_1_2__0__Impl() throws RecognitionException;
     void rule__SimpleTypeRef__Group_1_2__1() throws RecognitionException;
     void rule__SimpleTypeRef__Group_1_2__1__Impl() throws RecognitionException;
     void rule__ClosureTypeRef__Group__0() throws RecognitionException;
     void rule__ClosureTypeRef__Group__0__Impl() throws RecognitionException;
     void rule__ClosureTypeRef__Group__1() throws RecognitionException;
     void rule__ClosureTypeRef__Group__1__Impl() throws RecognitionException;
     void rule__ClosureTypeRef__Group__2() throws RecognitionException;
     void rule__ClosureTypeRef__Group__2__Impl() throws RecognitionException;
     void rule__ClosureTypeRef__Group__3() throws RecognitionException;
     void rule__ClosureTypeRef__Group__3__Impl() throws RecognitionException;
     void rule__ClosureTypeRef__Group__4() throws RecognitionException;
     void rule__ClosureTypeRef__Group__4__Impl() throws RecognitionException;
     void rule__ClosureTypeRef__Group_1_0__0() throws RecognitionException;
     void rule__ClosureTypeRef__Group_1_0__0__Impl() throws RecognitionException;
     void rule__ClosureTypeRef__Group_1_0__1() throws RecognitionException;
     void rule__ClosureTypeRef__Group_1_0__1__Impl() throws RecognitionException;
     void rule__ClosureTypeRef__Group_1_0__2() throws RecognitionException;
     void rule__ClosureTypeRef__Group_1_0__2__Impl() throws RecognitionException;
     void rule__ClosureTypeRef__Group_1_0_1__0() throws RecognitionException;
     void rule__ClosureTypeRef__Group_1_0_1__0__Impl() throws RecognitionException;
     void rule__ClosureTypeRef__Group_1_0_1__1() throws RecognitionException;
     void rule__ClosureTypeRef__Group_1_0_1__1__Impl() throws RecognitionException;
     void rule__ClosureTypeRef__Group_1_0_2__0() throws RecognitionException;
     void rule__ClosureTypeRef__Group_1_0_2__0__Impl() throws RecognitionException;
     void rule__ClosureTypeRef__Group_1_0_2__1() throws RecognitionException;
     void rule__ClosureTypeRef__Group_1_0_2__1__Impl() throws RecognitionException;
     void rule__ClosureTypeRef__Group_1_0_2__2() throws RecognitionException;
     void rule__ClosureTypeRef__Group_1_0_2__2__Impl() throws RecognitionException;
     void rule__ClosureTypeRef__Group_1_1__0() throws RecognitionException;
     void rule__ClosureTypeRef__Group_1_1__0__Impl() throws RecognitionException;
     void rule__ClosureTypeRef__Group_1_1__1() throws RecognitionException;
     void rule__ClosureTypeRef__Group_1_1__1__Impl() throws RecognitionException;
     void rule__CachedExpression__Group_0__0() throws RecognitionException;
     void rule__CachedExpression__Group_0__0__Impl() throws RecognitionException;
     void rule__CachedExpression__Group_0__1() throws RecognitionException;
     void rule__CachedExpression__Group_0__1__Impl() throws RecognitionException;
     void rule__CachedExpression__Group_0__2() throws RecognitionException;
     void rule__CachedExpression__Group_0__2__Impl() throws RecognitionException;
     void rule__OrExpression__Group__0() throws RecognitionException;
     void rule__OrExpression__Group__0__Impl() throws RecognitionException;
     void rule__OrExpression__Group__1() throws RecognitionException;
     void rule__OrExpression__Group__1__Impl() throws RecognitionException;
     void rule__OrExpression__Group_1__0() throws RecognitionException;
     void rule__OrExpression__Group_1__0__Impl() throws RecognitionException;
     void rule__OrExpression__Group_1__1() throws RecognitionException;
     void rule__OrExpression__Group_1__1__Impl() throws RecognitionException;
     void rule__OrExpression__Group_1__2() throws RecognitionException;
     void rule__OrExpression__Group_1__2__Impl() throws RecognitionException;
     void rule__AndExpression__Group__0() throws RecognitionException;
     void rule__AndExpression__Group__0__Impl() throws RecognitionException;
     void rule__AndExpression__Group__1() throws RecognitionException;
     void rule__AndExpression__Group__1__Impl() throws RecognitionException;
     void rule__AndExpression__Group_1__0() throws RecognitionException;
     void rule__AndExpression__Group_1__0__Impl() throws RecognitionException;
     void rule__AndExpression__Group_1__1() throws RecognitionException;
     void rule__AndExpression__Group_1__1__Impl() throws RecognitionException;
     void rule__AndExpression__Group_1__2() throws RecognitionException;
     void rule__AndExpression__Group_1__2__Impl() throws RecognitionException;
     void rule__RelationalExpression__Group__0() throws RecognitionException;
     void rule__RelationalExpression__Group__0__Impl() throws RecognitionException;
     void rule__RelationalExpression__Group__1() throws RecognitionException;
     void rule__RelationalExpression__Group__1__Impl() throws RecognitionException;
     void rule__RelationalExpression__Group_1__0() throws RecognitionException;
     void rule__RelationalExpression__Group_1__0__Impl() throws RecognitionException;
     void rule__RelationalExpression__Group_1__1() throws RecognitionException;
     void rule__RelationalExpression__Group_1__1__Impl() throws RecognitionException;
     void rule__RelationalExpression__Group_1__2() throws RecognitionException;
     void rule__RelationalExpression__Group_1__2__Impl() throws RecognitionException;
     void rule__AdditiveExpression__Group__0() throws RecognitionException;
     void rule__AdditiveExpression__Group__0__Impl() throws RecognitionException;
     void rule__AdditiveExpression__Group__1() throws RecognitionException;
     void rule__AdditiveExpression__Group__1__Impl() throws RecognitionException;
     void rule__AdditiveExpression__Group_1__0() throws RecognitionException;
     void rule__AdditiveExpression__Group_1__0__Impl() throws RecognitionException;
     void rule__AdditiveExpression__Group_1__1() throws RecognitionException;
     void rule__AdditiveExpression__Group_1__1__Impl() throws RecognitionException;
     void rule__AdditiveExpression__Group_1__2() throws RecognitionException;
     void rule__AdditiveExpression__Group_1__2__Impl() throws RecognitionException;
     void rule__MultiplicativeExpression__Group__0() throws RecognitionException;
     void rule__MultiplicativeExpression__Group__0__Impl() throws RecognitionException;
     void rule__MultiplicativeExpression__Group__1() throws RecognitionException;
     void rule__MultiplicativeExpression__Group__1__Impl() throws RecognitionException;
     void rule__MultiplicativeExpression__Group_1__0() throws RecognitionException;
     void rule__MultiplicativeExpression__Group_1__0__Impl() throws RecognitionException;
     void rule__MultiplicativeExpression__Group_1__1() throws RecognitionException;
     void rule__MultiplicativeExpression__Group_1__1__Impl() throws RecognitionException;
     void rule__MultiplicativeExpression__Group_1__2() throws RecognitionException;
     void rule__MultiplicativeExpression__Group_1__2__Impl() throws RecognitionException;
     void rule__SetExpression__Group__0() throws RecognitionException;
     void rule__SetExpression__Group__0__Impl() throws RecognitionException;
     void rule__SetExpression__Group__1() throws RecognitionException;
     void rule__SetExpression__Group__1__Impl() throws RecognitionException;
     void rule__SetExpression__Group_1__0() throws RecognitionException;
     void rule__SetExpression__Group_1__0__Impl() throws RecognitionException;
     void rule__SetExpression__Group_1__1() throws RecognitionException;
     void rule__SetExpression__Group_1__1__Impl() throws RecognitionException;
     void rule__SetExpression__Group_1__2() throws RecognitionException;
     void rule__SetExpression__Group_1__2__Impl() throws RecognitionException;
     void rule__UnaryExpression__Group__0() throws RecognitionException;
     void rule__UnaryExpression__Group__0__Impl() throws RecognitionException;
     void rule__UnaryExpression__Group__1() throws RecognitionException;
     void rule__UnaryExpression__Group__1__Impl() throws RecognitionException;
     void rule__UnaryExpression__Group__2() throws RecognitionException;
     void rule__UnaryExpression__Group__2__Impl() throws RecognitionException;
     void rule__PreopExpression__Group__0() throws RecognitionException;
     void rule__PreopExpression__Group__0__Impl() throws RecognitionException;
     void rule__PreopExpression__Group__1() throws RecognitionException;
     void rule__PreopExpression__Group__1__Impl() throws RecognitionException;
     void rule__PreopExpression__Group__2() throws RecognitionException;
     void rule__PreopExpression__Group__2__Impl() throws RecognitionException;
     void rule__PostopExpression__Group__0() throws RecognitionException;
     void rule__PostopExpression__Group__0__Impl() throws RecognitionException;
     void rule__PostopExpression__Group__1() throws RecognitionException;
     void rule__PostopExpression__Group__1__Impl() throws RecognitionException;
     void rule__PostopExpression__Group_1__0() throws RecognitionException;
     void rule__PostopExpression__Group_1__0__Impl() throws RecognitionException;
     void rule__PostopExpression__Group_1__1() throws RecognitionException;
     void rule__PostopExpression__Group_1__1__Impl() throws RecognitionException;
     void rule__InfixExpression__Group__0() throws RecognitionException;
     void rule__InfixExpression__Group__0__Impl() throws RecognitionException;
     void rule__InfixExpression__Group__1() throws RecognitionException;
     void rule__InfixExpression__Group__1__Impl() throws RecognitionException;
     void rule__InfixExpression__Group_1_0__0() throws RecognitionException;
     void rule__InfixExpression__Group_1_0__0__Impl() throws RecognitionException;
     void rule__InfixExpression__Group_1_0__1() throws RecognitionException;
     void rule__InfixExpression__Group_1_0__1__Impl() throws RecognitionException;
     void rule__InfixExpression__Group_1_0__2() throws RecognitionException;
     void rule__InfixExpression__Group_1_0__2__Impl() throws RecognitionException;
     void rule__InfixExpression__Group_1_0__3() throws RecognitionException;
     void rule__InfixExpression__Group_1_0__3__Impl() throws RecognitionException;
     void rule__InfixExpression__Group_1_0__4() throws RecognitionException;
     void rule__InfixExpression__Group_1_0__4__Impl() throws RecognitionException;
     void rule__InfixExpression__Group_1_0__5() throws RecognitionException;
     void rule__InfixExpression__Group_1_0__5__Impl() throws RecognitionException;
     void rule__InfixExpression__Group_1_1__0() throws RecognitionException;
     void rule__InfixExpression__Group_1_1__0__Impl() throws RecognitionException;
     void rule__InfixExpression__Group_1_1__1() throws RecognitionException;
     void rule__InfixExpression__Group_1_1__1__Impl() throws RecognitionException;
     void rule__InfixExpression__Group_1_1__2() throws RecognitionException;
     void rule__InfixExpression__Group_1_1__2__Impl() throws RecognitionException;
     void rule__InfixExpression__Group_1_1__3() throws RecognitionException;
     void rule__InfixExpression__Group_1_1__3__Impl() throws RecognitionException;
     void rule__InfixExpression__Group_1_2__0() throws RecognitionException;
     void rule__InfixExpression__Group_1_2__0__Impl() throws RecognitionException;
     void rule__InfixExpression__Group_1_2__1() throws RecognitionException;
     void rule__InfixExpression__Group_1_2__1__Impl() throws RecognitionException;
     void rule__InfixExpression__Group_1_2__2() throws RecognitionException;
     void rule__InfixExpression__Group_1_2__2__Impl() throws RecognitionException;
     void rule__CallExpression__Group__0() throws RecognitionException;
     void rule__CallExpression__Group__0__Impl() throws RecognitionException;
     void rule__CallExpression__Group__1() throws RecognitionException;
     void rule__CallExpression__Group__1__Impl() throws RecognitionException;
     void rule__CallExpression__Group_1__0() throws RecognitionException;
     void rule__CallExpression__Group_1__0__Impl() throws RecognitionException;
     void rule__CallExpression__Group_1__1() throws RecognitionException;
     void rule__CallExpression__Group_1__1__Impl() throws RecognitionException;
     void rule__CallExpression__Group_1__2() throws RecognitionException;
     void rule__CallExpression__Group_1__2__Impl() throws RecognitionException;
     void rule__CallExpression__Group_1__3() throws RecognitionException;
     void rule__CallExpression__Group_1__3__Impl() throws RecognitionException;
     void rule__WithExpression__Group__0() throws RecognitionException;
     void rule__WithExpression__Group__0__Impl() throws RecognitionException;
     void rule__WithExpression__Group__1() throws RecognitionException;
     void rule__WithExpression__Group__1__Impl() throws RecognitionException;
     void rule__WithExpression__Group__2() throws RecognitionException;
     void rule__WithExpression__Group__2__Impl() throws RecognitionException;
     void rule__WithExpression__Group_1__0() throws RecognitionException;
     void rule__WithExpression__Group_1__0__Impl() throws RecognitionException;
     void rule__WithExpression__Group_1__1() throws RecognitionException;
     void rule__WithExpression__Group_1__1__Impl() throws RecognitionException;
     void rule__WithExpression__Group_1_1__0() throws RecognitionException;
     void rule__WithExpression__Group_1_1__0__Impl() throws RecognitionException;
     void rule__WithExpression__Group_1_1__1() throws RecognitionException;
     void rule__WithExpression__Group_1_1__1__Impl() throws RecognitionException;
     void rule__WithExpression__Group_2_0__0() throws RecognitionException;
     void rule__WithExpression__Group_2_0__0__Impl() throws RecognitionException;
     void rule__WithExpression__Group_2_0__1() throws RecognitionException;
     void rule__WithExpression__Group_2_0__1__Impl() throws RecognitionException;
     void rule__WithExpression__Group_2_1__0() throws RecognitionException;
     void rule__WithExpression__Group_2_1__0__Impl() throws RecognitionException;
     void rule__WithExpression__Group_2_1__1() throws RecognitionException;
     void rule__WithExpression__Group_2_1__1__Impl() throws RecognitionException;
     void rule__WithExpression__Group_2_1__2() throws RecognitionException;
     void rule__WithExpression__Group_2_1__2__Impl() throws RecognitionException;
     void rule__WithContextExpression__Group__0() throws RecognitionException;
     void rule__WithContextExpression__Group__0__Impl() throws RecognitionException;
     void rule__WithContextExpression__Group__1() throws RecognitionException;
     void rule__WithContextExpression__Group__1__Impl() throws RecognitionException;
     void rule__WithContextExpression__Group__2() throws RecognitionException;
     void rule__WithContextExpression__Group__2__Impl() throws RecognitionException;
     void rule__WithContextExpression__Group__3() throws RecognitionException;
     void rule__WithContextExpression__Group__3__Impl() throws RecognitionException;
     void rule__WithContextExpression__Group__4() throws RecognitionException;
     void rule__WithContextExpression__Group__4__Impl() throws RecognitionException;
     void rule__WithContextExpression__Group_3__0() throws RecognitionException;
     void rule__WithContextExpression__Group_3__0__Impl() throws RecognitionException;
     void rule__WithContextExpression__Group_3__1() throws RecognitionException;
     void rule__WithContextExpression__Group_3__1__Impl() throws RecognitionException;
     void rule__BlockExpression__Group__0() throws RecognitionException;
     void rule__BlockExpression__Group__0__Impl() throws RecognitionException;
     void rule__BlockExpression__Group__1() throws RecognitionException;
     void rule__BlockExpression__Group__1__Impl() throws RecognitionException;
     void rule__BlockExpression__Group__2() throws RecognitionException;
     void rule__BlockExpression__Group__2__Impl() throws RecognitionException;
     void rule__BlockExpression__Group__3() throws RecognitionException;
     void rule__BlockExpression__Group__3__Impl() throws RecognitionException;
     void rule__BlockExpression__Group_2__0() throws RecognitionException;
     void rule__BlockExpression__Group_2__0__Impl() throws RecognitionException;
     void rule__BlockExpression__Group_2__1() throws RecognitionException;
     void rule__BlockExpression__Group_2__1__Impl() throws RecognitionException;
     void rule__Value__Group__0() throws RecognitionException;
     void rule__Value__Group__0__Impl() throws RecognitionException;
     void rule__Value__Group__1() throws RecognitionException;
     void rule__Value__Group__1__Impl() throws RecognitionException;
     void rule__KeywordVariables__Group__0() throws RecognitionException;
     void rule__KeywordVariables__Group__0__Impl() throws RecognitionException;
     void rule__KeywordVariables__Group__1() throws RecognitionException;
     void rule__KeywordVariables__Group__1__Impl() throws RecognitionException;
     void rule__OperationCall__Group__0() throws RecognitionException;
     void rule__OperationCall__Group__0__Impl() throws RecognitionException;
     void rule__OperationCall__Group__1() throws RecognitionException;
     void rule__OperationCall__Group__1__Impl() throws RecognitionException;
     void rule__OperationCall__Group__2() throws RecognitionException;
     void rule__OperationCall__Group__2__Impl() throws RecognitionException;
     void rule__OperationCall__Group__3() throws RecognitionException;
     void rule__OperationCall__Group__3__Impl() throws RecognitionException;
     void rule__OperationCall__Group__4() throws RecognitionException;
     void rule__OperationCall__Group__4__Impl() throws RecognitionException;
     void rule__ConstructorCallExpression__Group__0() throws RecognitionException;
     void rule__ConstructorCallExpression__Group__0__Impl() throws RecognitionException;
     void rule__ConstructorCallExpression__Group__1() throws RecognitionException;
     void rule__ConstructorCallExpression__Group__1__Impl() throws RecognitionException;
     void rule__ConstructorCallExpression__Group__2() throws RecognitionException;
     void rule__ConstructorCallExpression__Group__2__Impl() throws RecognitionException;
     void rule__ConstructorCallExpression__Group__3() throws RecognitionException;
     void rule__ConstructorCallExpression__Group__3__Impl() throws RecognitionException;
     void rule__ConstructorCallExpression__Group__4() throws RecognitionException;
     void rule__ConstructorCallExpression__Group__4__Impl() throws RecognitionException;
     void rule__ConstructorCallExpression__Group__5() throws RecognitionException;
     void rule__ConstructorCallExpression__Group__5__Impl() throws RecognitionException;
     void rule__ConstructorCallExpression__Group_3__0() throws RecognitionException;
     void rule__ConstructorCallExpression__Group_3__0__Impl() throws RecognitionException;
     void rule__ConstructorCallExpression__Group_3__1() throws RecognitionException;
     void rule__ConstructorCallExpression__Group_3__1__Impl() throws RecognitionException;
     void rule__ConstructorCallExpression__Group_3__2() throws RecognitionException;
     void rule__ConstructorCallExpression__Group_3__2__Impl() throws RecognitionException;
     void rule__ConstructorCallExpression__Group_4__0() throws RecognitionException;
     void rule__ConstructorCallExpression__Group_4__0__Impl() throws RecognitionException;
     void rule__ConstructorCallExpression__Group_4__1() throws RecognitionException;
     void rule__ConstructorCallExpression__Group_4__1__Impl() throws RecognitionException;
     void rule__InitializationBlockExpression__Group__0() throws RecognitionException;
     void rule__InitializationBlockExpression__Group__0__Impl() throws RecognitionException;
     void rule__InitializationBlockExpression__Group__1() throws RecognitionException;
     void rule__InitializationBlockExpression__Group__1__Impl() throws RecognitionException;
     void rule__InitializationBlockExpression__Group__2() throws RecognitionException;
     void rule__InitializationBlockExpression__Group__2__Impl() throws RecognitionException;
     void rule__InitializationBlockExpression__Group__3() throws RecognitionException;
     void rule__InitializationBlockExpression__Group__3__Impl() throws RecognitionException;
     void rule__InitializationBlockExpression__Group__4() throws RecognitionException;
     void rule__InitializationBlockExpression__Group__4__Impl() throws RecognitionException;
     void rule__InitializationExpression__Group__0() throws RecognitionException;
     void rule__InitializationExpression__Group__0__Impl() throws RecognitionException;
     void rule__InitializationExpression__Group__1() throws RecognitionException;
     void rule__InitializationExpression__Group__1__Impl() throws RecognitionException;
     void rule__InitializationExpression__Group__2() throws RecognitionException;
     void rule__InitializationExpression__Group__2__Impl() throws RecognitionException;
     void rule__InitializationExpression__Group__3() throws RecognitionException;
     void rule__InitializationExpression__Group__3__Impl() throws RecognitionException;
     void rule__FeatureOfThis__Group__0() throws RecognitionException;
     void rule__FeatureOfThis__Group__0__Impl() throws RecognitionException;
     void rule__FeatureOfThis__Group__1() throws RecognitionException;
     void rule__FeatureOfThis__Group__1__Impl() throws RecognitionException;
     void rule__LiteralFunction__Group__0() throws RecognitionException;
     void rule__LiteralFunction__Group__0__Impl() throws RecognitionException;
     void rule__LiteralFunction__Group__1() throws RecognitionException;
     void rule__LiteralFunction__Group__1__Impl() throws RecognitionException;
     void rule__LiteralFunction__Group__2() throws RecognitionException;
     void rule__LiteralFunction__Group__2__Impl() throws RecognitionException;
     void rule__ClosureExpression__Group__0() throws RecognitionException;
     void rule__ClosureExpression__Group__0__Impl() throws RecognitionException;
     void rule__ClosureExpression__Group__1() throws RecognitionException;
     void rule__ClosureExpression__Group__1__Impl() throws RecognitionException;
     void rule__ClosureExpression__Group__2() throws RecognitionException;
     void rule__ClosureExpression__Group__2__Impl() throws RecognitionException;
     void rule__ClosureExpression__Group__3() throws RecognitionException;
     void rule__ClosureExpression__Group__3__Impl() throws RecognitionException;
     void rule__ClosureExpression__Group__4() throws RecognitionException;
     void rule__ClosureExpression__Group__4__Impl() throws RecognitionException;
     void rule__ClosureExpression__Group_1__0() throws RecognitionException;
     void rule__ClosureExpression__Group_1__0__Impl() throws RecognitionException;
     void rule__ClosureExpression__Group_1__1() throws RecognitionException;
     void rule__ClosureExpression__Group_1__1__Impl() throws RecognitionException;
     void rule__ClosureExpression__Group_1__2() throws RecognitionException;
     void rule__ClosureExpression__Group_1__2__Impl() throws RecognitionException;
     void rule__ClosureExpression__Group_2_0__0() throws RecognitionException;
     void rule__ClosureExpression__Group_2_0__0__Impl() throws RecognitionException;
     void rule__ClosureExpression__Group_2_0__1() throws RecognitionException;
     void rule__ClosureExpression__Group_2_0__1__Impl() throws RecognitionException;
     void rule__ClosureExpression__Group_2_0_1__0() throws RecognitionException;
     void rule__ClosureExpression__Group_2_0_1__0__Impl() throws RecognitionException;
     void rule__ClosureExpression__Group_2_0_1__1() throws RecognitionException;
     void rule__ClosureExpression__Group_2_0_1__1__Impl() throws RecognitionException;
     void rule__ClosureExpression__Group_2_0_1__2() throws RecognitionException;
     void rule__ClosureExpression__Group_2_0_1__2__Impl() throws RecognitionException;
     void rule__ClosureExpression__Group_2_0_1_1__0() throws RecognitionException;
     void rule__ClosureExpression__Group_2_0_1_1__0__Impl() throws RecognitionException;
     void rule__ClosureExpression__Group_2_0_1_1__1() throws RecognitionException;
     void rule__ClosureExpression__Group_2_0_1_1__1__Impl() throws RecognitionException;
     void rule__ClosureExpression__Group_2_0_1_2__0() throws RecognitionException;
     void rule__ClosureExpression__Group_2_0_1_2__0__Impl() throws RecognitionException;
     void rule__ClosureExpression__Group_2_0_1_2__1() throws RecognitionException;
     void rule__ClosureExpression__Group_2_0_1_2__1__Impl() throws RecognitionException;
     void rule__ClosureExpression__Group_2_0_1_2__2() throws RecognitionException;
     void rule__ClosureExpression__Group_2_0_1_2__2__Impl() throws RecognitionException;
     void rule__ClosureExpression__Group_2_1__0() throws RecognitionException;
     void rule__ClosureExpression__Group_2_1__0__Impl() throws RecognitionException;
     void rule__ClosureExpression__Group_2_1__1() throws RecognitionException;
     void rule__ClosureExpression__Group_2_1__1__Impl() throws RecognitionException;
     void rule__BlockExpressionWithoutBrackets__Group__0() throws RecognitionException;
     void rule__BlockExpressionWithoutBrackets__Group__0__Impl() throws RecognitionException;
     void rule__BlockExpressionWithoutBrackets__Group__1() throws RecognitionException;
     void rule__BlockExpressionWithoutBrackets__Group__1__Impl() throws RecognitionException;
     void rule__BlockExpressionWithoutBrackets__Group_1__0() throws RecognitionException;
     void rule__BlockExpressionWithoutBrackets__Group_1__0__Impl() throws RecognitionException;
     void rule__BlockExpressionWithoutBrackets__Group_1__1() throws RecognitionException;
     void rule__BlockExpressionWithoutBrackets__Group_1__1__Impl() throws RecognitionException;
     void rule__ParanthesizedExpression__Group__0() throws RecognitionException;
     void rule__ParanthesizedExpression__Group__0__Impl() throws RecognitionException;
     void rule__ParanthesizedExpression__Group__1() throws RecognitionException;
     void rule__ParanthesizedExpression__Group__1__Impl() throws RecognitionException;
     void rule__ParanthesizedExpression__Group__2() throws RecognitionException;
     void rule__ParanthesizedExpression__Group__2__Impl() throws RecognitionException;
     void rule__QID__Group__0() throws RecognitionException;
     void rule__QID__Group__0__Impl() throws RecognitionException;
     void rule__QID__Group__1() throws RecognitionException;
     void rule__QID__Group__1__Impl() throws RecognitionException;
     void rule__QID__Group__2() throws RecognitionException;
     void rule__QID__Group__2__Impl() throws RecognitionException;
     void rule__QID__Group_2__0() throws RecognitionException;
     void rule__QID__Group_2__0__Impl() throws RecognitionException;
     void rule__QID__Group_2__1() throws RecognitionException;
     void rule__QID__Group_2__1__Impl() throws RecognitionException;
     void rule__QID__Group_2__2() throws RecognitionException;
     void rule__QID__Group_2__2__Impl() throws RecognitionException;
     void rule__Unit__UnorderedGroup_7() throws RecognitionException;
     void rule__Unit__UnorderedGroup_7__Impl() throws RecognitionException;
     void rule__Unit__UnorderedGroup_7__0() throws RecognitionException;
     void rule__Unit__UnorderedGroup_7__1() throws RecognitionException;
     void rule__Unit__UnorderedGroup_7__2() throws RecognitionException;
     void rule__Unit__UnorderedGroup_7__3() throws RecognitionException;
     void rule__Unit__UnorderedGroup_7__4() throws RecognitionException;
     void rule__Unit__UnorderedGroup_7__5() throws RecognitionException;
     void rule__ProvidedCapability__UnorderedGroup_2_1() throws RecognitionException;
     void rule__ProvidedCapability__UnorderedGroup_2_1__Impl() throws RecognitionException;
     void rule__ProvidedCapability__UnorderedGroup_2_1__0() throws RecognitionException;
     void rule__ProvidedCapability__UnorderedGroup_2_1__1() throws RecognitionException;
     void rule__ProvidedCapability__UnorderedGroup_2_1__2() throws RecognitionException;
     void rule__AliasedRequiredCapability__UnorderedGroup_3_1() throws RecognitionException;
     void rule__AliasedRequiredCapability__UnorderedGroup_3_1__Impl() throws RecognitionException;
     void rule__AliasedRequiredCapability__UnorderedGroup_3_1__0() throws RecognitionException;
     void rule__AliasedRequiredCapability__UnorderedGroup_3_1__1() throws RecognitionException;
     void rule__AliasedRequiredCapability__UnorderedGroup_3_1__2() throws RecognitionException;
     void rule__AliasedRequiredCapability__UnorderedGroup_3_1__3() throws RecognitionException;
     void rule__AliasedRequiredCapability__UnorderedGroup_3_1__4() throws RecognitionException;
     void rule__RequiredCapability__UnorderedGroup_3_1() throws RecognitionException;
     void rule__RequiredCapability__UnorderedGroup_3_1__Impl() throws RecognitionException;
     void rule__RequiredCapability__UnorderedGroup_3_1__0() throws RecognitionException;
     void rule__RequiredCapability__UnorderedGroup_3_1__1() throws RecognitionException;
     void rule__RequiredCapability__UnorderedGroup_3_1__2() throws RecognitionException;
     void rule__RequiredCapability__UnorderedGroup_3_1__3() throws RecognitionException;
     void rule__RequiredCapability__UnorderedGroup_3_1__4() throws RecognitionException;
     void rule__Model__UnitsAssignment_0() throws RecognitionException;
     void rule__Model__FunctionsAssignment_1() throws RecognitionException;
     void rule__Unit__DocumentationAssignment_1() throws RecognitionException;
     void rule__Unit__NameAssignment_3() throws RecognitionException;
     void rule__Unit__VersionAssignment_4_1() throws RecognitionException;
     void rule__Unit__ImplementsAssignment_5_1() throws RecognitionException;
     void rule__Unit__ImplementsAssignment_5_2_1() throws RecognitionException;
     void rule__Unit__SourceLocationAssignment_7_0_2() throws RecognitionException;
     void rule__Unit__OutputLocationAssignment_7_1_2() throws RecognitionException;
     void rule__Unit__ProvidedCapabilitiesAssignment_7_2_2() throws RecognitionException;
     void rule__Unit__RequiredCapabilitiesAssignment_7_3_2() throws RecognitionException;
     void rule__Unit__MetaRequiredCapabilitiesAssignment_7_4_3() throws RecognitionException;
     void rule__Unit__FunctionsAssignment_7_5() throws RecognitionException;
     void rule__ProvidedCapability__NameSpaceAssignment_1_0() throws RecognitionException;
     void rule__ProvidedCapability__CondExprAssignment_2_1_0_2() throws RecognitionException;
     void rule__ProvidedCapability__NameAssignment_2_1_1_2() throws RecognitionException;
     void rule__ProvidedCapability__VersionAssignment_2_1_2_2() throws RecognitionException;
     void rule__AliasedRequiredCapability__NameSpaceAssignment_0_0() throws RecognitionException;
     void rule__AliasedRequiredCapability__NameAssignment_1() throws RecognitionException;
     void rule__AliasedRequiredCapability__AliasAssignment_2_1() throws RecognitionException;
     void rule__AliasedRequiredCapability__CondExprAssignment_3_1_0_2() throws RecognitionException;
     void rule__AliasedRequiredCapability__GreedyAssignment_3_1_1_0() throws RecognitionException;
     void rule__AliasedRequiredCapability__MinAssignment_3_1_2_2() throws RecognitionException;
     void rule__AliasedRequiredCapability__MaxAssignment_3_1_3_2() throws RecognitionException;
     void rule__AliasedRequiredCapability__VersionRangeAssignment_3_1_4_2() throws RecognitionException;
     void rule__RequiredCapability__NameSpaceAssignment_1_0() throws RecognitionException;
     void rule__RequiredCapability__NameAssignment_2() throws RecognitionException;
     void rule__RequiredCapability__CondExprAssignment_3_1_0_2() throws RecognitionException;
     void rule__RequiredCapability__GreedyAssignment_3_1_1_0() throws RecognitionException;
     void rule__RequiredCapability__MinAssignment_3_1_2_2() throws RecognitionException;
     void rule__RequiredCapability__MaxAssignment_3_1_3_2() throws RecognitionException;
     void rule__RequiredCapability__VersionRangeAssignment_3_1_4_2() throws RecognitionException;
     void rule__ParameterList__ParametersAssignment_0() throws RecognitionException;
     void rule__ParameterList__ParametersAssignment_1_1() throws RecognitionException;
     void rule__Parameter__ExprAssignment() throws RecognitionException;
     void rule__ClosureParameter__ExprAssignment() throws RecognitionException;
     void rule__ParameterDeclaration__TypeAssignment_0() throws RecognitionException;
     void rule__ParameterDeclaration__NameAssignment_1() throws RecognitionException;
     void rule__Function__DocumentationAssignment_0() throws RecognitionException;
     void rule__Function__VisibilityAssignment_1() throws RecognitionException;
     void rule__Function__FinalAssignment_2() throws RecognitionException;
     void rule__Function__ReturnTypeAssignment_4() throws RecognitionException;
     void rule__Function__NameAssignment_5() throws RecognitionException;
     void rule__Function__ParametersAssignment_6_1_0_0() throws RecognitionException;
     void rule__Function__ParametersAssignment_6_1_0_1_1() throws RecognitionException;
     void rule__Function__VarArgsAssignment_6_1_0_2_1() throws RecognitionException;
     void rule__Function__ParametersAssignment_6_1_0_2_2() throws RecognitionException;
     void rule__Function__VarArgsAssignment_6_1_1_0() throws RecognitionException;
     void rule__Function__ParametersAssignment_6_1_1_1() throws RecognitionException;
     void rule__Function__GuardAssignment_7_1() throws RecognitionException;
     void rule__Function__FuncExprAssignment_8_0_1() throws RecognitionException;
     void rule__Function__FuncExprAssignment_8_1() throws RecognitionException;
     void rule__GuardExpression__GuardExprAssignment_0_1() throws RecognitionException;
     void rule__GuardExpression__GuardExprAssignment_1() throws RecognitionException;
     void rule__AssignmentExpression__FunctionNameAssignment_1_1() throws RecognitionException;
     void rule__AssignmentExpression__RightExprAssignment_1_2() throws RecognitionException;
     void rule__VarDeclaration__FinalAssignment_1() throws RecognitionException;
     void rule__VarDeclaration__TypeAssignment_2_0_1() throws RecognitionException;
     void rule__VarDeclaration__NameAssignment_2_1() throws RecognitionException;
     void rule__VarDeclaration__ValueExprAssignment_3_1() throws RecognitionException;
     void rule__ValDeclaration__FinalAssignment_1() throws RecognitionException;
     void rule__ValDeclaration__ImmutableAssignment_2() throws RecognitionException;
     void rule__ValDeclaration__TypeAssignment_3() throws RecognitionException;
     void rule__ValDeclaration__NameAssignment_4() throws RecognitionException;
     void rule__ValDeclaration__ValueExprAssignment_6() throws RecognitionException;
     void rule__SimpleTypeRef__RawTypeAssignment_0() throws RecognitionException;
     void rule__SimpleTypeRef__ActualArgumentsListAssignment_1_1() throws RecognitionException;
     void rule__SimpleTypeRef__ActualArgumentsListAssignment_1_2_1() throws RecognitionException;
     void rule__ClosureTypeRef__ParameterTypesAssignment_1_0_0() throws RecognitionException;
     void rule__ClosureTypeRef__ParameterTypesAssignment_1_0_1_1() throws RecognitionException;
     void rule__ClosureTypeRef__VarArgsAssignment_1_0_2_1() throws RecognitionException;
     void rule__ClosureTypeRef__ParameterTypesAssignment_1_0_2_2() throws RecognitionException;
     void rule__ClosureTypeRef__VarArgsAssignment_1_1_0() throws RecognitionException;
     void rule__ClosureTypeRef__ParameterTypesAssignment_1_1_1() throws RecognitionException;
     void rule__ClosureTypeRef__ReturnTypeAssignment_4() throws RecognitionException;
     void rule__CachedExpression__ExprAssignment_0_2() throws RecognitionException;
     void rule__OrExpression__RightExprAssignment_1_2() throws RecognitionException;
     void rule__AndExpression__RightExprAssignment_1_2() throws RecognitionException;
     void rule__RelationalExpression__FunctionNameAssignment_1_1() throws RecognitionException;
     void rule__RelationalExpression__RightExprAssignment_1_2() throws RecognitionException;
     void rule__AdditiveExpression__FunctionNameAssignment_1_1() throws RecognitionException;
     void rule__AdditiveExpression__RightExprAssignment_1_2() throws RecognitionException;
     void rule__MultiplicativeExpression__FunctionNameAssignment_1_1() throws RecognitionException;
     void rule__MultiplicativeExpression__RightExprAssignment_1_2() throws RecognitionException;
     void rule__SetExpression__FunctionNameAssignment_1_1() throws RecognitionException;
     void rule__SetExpression__RightExprAssignment_1_2() throws RecognitionException;
     void rule__UnaryExpression__FunctionNameAssignment_1() throws RecognitionException;
     void rule__UnaryExpression__ExprAssignment_2() throws RecognitionException;
     void rule__PreopExpression__FunctionNameAssignment_1() throws RecognitionException;
     void rule__PreopExpression__ExprAssignment_2() throws RecognitionException;
     void rule__PostopExpression__FunctionNameAssignment_1_1() throws RecognitionException;
     void rule__InfixExpression__NameAssignment_1_0_2() throws RecognitionException;
     void rule__InfixExpression__ParameterListAssignment_1_0_4() throws RecognitionException;
     void rule__InfixExpression__IndexExprAssignment_1_1_2() throws RecognitionException;
     void rule__InfixExpression__FeatureNameAssignment_1_2_2() throws RecognitionException;
     void rule__CallExpression__ParameterListAssignment_1_2() throws RecognitionException;
     void rule__WithExpression__ReferencedAdviceAssignment_1_0() throws RecognitionException;
     void rule__WithExpression__ReferencedAdviceAssignment_1_1_1() throws RecognitionException;
     void rule__WithExpression__FuncExprAssignment_2_0_1() throws RecognitionException;
     void rule__WithExpression__FuncExprAssignment_2_1_1() throws RecognitionException;
     void rule__WithContextExpression__ExprAssignment_2() throws RecognitionException;
     void rule__WithContextExpression__AliasAssignment_3_1() throws RecognitionException;
     void rule__WithContextExpression__ContextBlockAssignment_4() throws RecognitionException;
     void rule__BlockExpression__ExpressionsAssignment_2_0() throws RecognitionException;
     void rule__Value__NameAssignment_1() throws RecognitionException;
     void rule__KeywordVariables__NameAssignment_1() throws RecognitionException;
     void rule__OperationCall__NameAssignment_1() throws RecognitionException;
     void rule__OperationCall__ParameterListAssignment_3() throws RecognitionException;
     void rule__ConstructorCallExpression__TypeExprAssignment_2() throws RecognitionException;
     void rule__ConstructorCallExpression__ParameterListAssignment_3_1() throws RecognitionException;
     void rule__ConstructorCallExpression__AliasAssignment_4_1() throws RecognitionException;
     void rule__ConstructorCallExpression__ContextBlockAssignment_5() throws RecognitionException;
     void rule__InitializationBlockExpression__ExpressionsAssignment_2() throws RecognitionException;
     void rule__InitializationExpression__LeftExprAssignment_1() throws RecognitionException;
     void rule__InitializationExpression__FunctionNameAssignment_2() throws RecognitionException;
     void rule__InitializationExpression__RightExprAssignment_3() throws RecognitionException;
     void rule__FeatureOfThis__FeatureNameAssignment_1() throws RecognitionException;
     void rule__ClosureExpression__ReturnTypeAssignment_1_1() throws RecognitionException;
     void rule__ClosureExpression__ParametersAssignment_2_0_1_0() throws RecognitionException;
     void rule__ClosureExpression__ParametersAssignment_2_0_1_1_1() throws RecognitionException;
     void rule__ClosureExpression__VarArgsAssignment_2_0_1_2_1() throws RecognitionException;
     void rule__ClosureExpression__ParametersAssignment_2_0_1_2_2() throws RecognitionException;
     void rule__ClosureExpression__VarArgsAssignment_2_1_0() throws RecognitionException;
     void rule__ClosureExpression__ParametersAssignment_2_1_1() throws RecognitionException;
     void rule__ClosureExpression__FuncExprAssignment_4() throws RecognitionException;
     void rule__BlockExpressionWithoutBrackets__ExpressionsAssignment_1_0() throws RecognitionException;
     void rule__ValueLiteral__ValueAssignment() throws RecognitionException;
     void synpred2_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred8_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred25_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred39_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred41_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred43_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred44_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred47_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred48_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred58_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred84_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred94_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred95_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred96_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred97_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred98_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred99_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred100_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred101_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred103_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred110_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred111_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred115_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred123_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred124_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred125_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred126_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred127_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred128_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred129_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred130_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred131_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred132_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred133_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred134_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred135_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred136_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred137_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred138_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred139_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred140_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred141_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred142_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred143_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred144_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred145_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred146_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred147_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred148_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred149_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred150_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred151_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred152_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred153_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred154_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred155_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred156_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred157_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred158_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred159_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException;   
}

@SuppressWarnings("all")
abstract class InternalSimpleBeeLangTestLanguageParser1 extends AbstractInternalContentAssistParser implements InternalSimpleBeeLangTestLanguageParserSignatures {

        InternalSimpleBeeLangTestLanguageParser1(TokenStream input) {
            this(input, new RecognizerSharedState());
        }

        InternalSimpleBeeLangTestLanguageParser1(TokenStream input, RecognizerSharedState state) {
            super(input, state);
        }

    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "RULE_STRING", "RULE_INT", "RULE_HEX", "RULE_ID", "RULE_DOCUMENTATION", "RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS", "RULE_ANY_OTHER", "'unit'", "'='", "'+='", "'-='", "'*='", "'/='", "'%='", "'~='", "'=='", "'==='", "'!='", "'!=='", "'>='", "'<='", "'>'", "'<'", "'var'", "'+'", "'-'", "'*'", "'/'", "'%'", "'!'", "'++'", "'--'", "'input'", "'output'", "'source'", "'properties'", "'builder'", "'this'", "'{'", "'}'", "'version'", "'implements'", "','", "':'", "';'", "'provides'", "'requires'", "'env'", "'when'", "'name'", "'as'", "'requires-min'", "'requires-max'", "'function'", "'('", "')'", "'=>'", "'cached'", "'||'", "'&&'", "'.'", "'['", "']'", "'with'", "'context'", "'new'", "'|'", "'greedy'", "'final'", "'...'", "'val'", "'..'"
    };
    public static final int RULE_HEX=6;
    public static final int T__50=50;
    public static final int T__19=19;
    public static final int T__15=15;
    public static final int T__59=59;
    public static final int T__16=16;
    public static final int T__17=17;
    public static final int T__18=18;
    public static final int T__55=55;
    public static final int T__56=56;
    public static final int T__13=13;
    public static final int T__57=57;
    public static final int T__14=14;
    public static final int T__58=58;
    public static final int T__51=51;
    public static final int T__52=52;
    public static final int T__53=53;
    public static final int T__54=54;
    public static final int T__60=60;
    public static final int T__61=61;
    public static final int RULE_ID=7;
    public static final int RULE_DOCUMENTATION=8;
    public static final int T__26=26;
    public static final int T__27=27;
    public static final int T__28=28;
    public static final int RULE_INT=5;
    public static final int T__29=29;
    public static final int T__22=22;
    public static final int T__66=66;
    public static final int RULE_ML_COMMENT=9;
    public static final int T__23=23;
    public static final int T__67=67;
    public static final int T__24=24;
    public static final int T__68=68;
    public static final int T__25=25;
    public static final int T__69=69;
    public static final int T__62=62;
    public static final int T__63=63;
    public static final int T__20=20;
    public static final int T__64=64;
    public static final int T__21=21;
    public static final int T__65=65;
    public static final int T__70=70;
    public static final int T__71=71;
    public static final int T__72=72;
    public static final int RULE_STRING=4;
    public static final int RULE_SL_COMMENT=10;
    public static final int T__37=37;
    public static final int T__38=38;
    public static final int T__39=39;
    public static final int T__33=33;
    public static final int T__77=77;
    public static final int T__34=34;
    public static final int T__35=35;
    public static final int T__36=36;
    public static final int T__73=73;
    public static final int EOF=-1;
    public static final int T__30=30;
    public static final int T__74=74;
    public static final int T__31=31;
    public static final int T__75=75;
    public static final int T__32=32;
    public static final int T__76=76;
    public static final int RULE_WS=11;
    public static final int RULE_ANY_OTHER=12;
    public static final int T__48=48;
    public static final int T__49=49;
    public static final int T__44=44;
    public static final int T__45=45;
    public static final int T__46=46;
    public static final int T__47=47;
    public static final int T__40=40;
    public static final int T__41=41;
    public static final int T__42=42;
    public static final int T__43=43;


    public String[] getTokenNames() { return InternalSimpleBeeLangTestLanguageParser.tokenNames; }
    public String getGrammarFileName() { return "InternalSimpleBeeLangTestLanguage.g"; }


    	protected SimpleBeeLangTestLanguageGrammarAccess grammarAccess;

    	public void setGrammarAccess(SimpleBeeLangTestLanguageGrammarAccess grammarAccess) {
    		this.grammarAccess = grammarAccess;
    	}

    	@Override
    	protected Grammar getGrammar() {
    		return grammarAccess.getGrammar();
    	}

    	@Override
    	protected String getValueForTokenName(String tokenName) {
    		return tokenName;
    	}




    // Delegated rules

    public final boolean synpred41_InternalSimpleBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred41_InternalSimpleBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred123_InternalSimpleBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred123_InternalSimpleBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred98_InternalSimpleBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred98_InternalSimpleBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred128_InternalSimpleBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred128_InternalSimpleBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred152_InternalSimpleBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred152_InternalSimpleBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred8_InternalSimpleBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred8_InternalSimpleBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred157_InternalSimpleBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred157_InternalSimpleBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred139_InternalSimpleBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred139_InternalSimpleBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred111_InternalSimpleBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred111_InternalSimpleBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred145_InternalSimpleBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred145_InternalSimpleBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred151_InternalSimpleBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred151_InternalSimpleBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred2_InternalSimpleBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred2_InternalSimpleBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred97_InternalSimpleBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred97_InternalSimpleBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred100_InternalSimpleBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred100_InternalSimpleBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred134_InternalSimpleBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred134_InternalSimpleBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred140_InternalSimpleBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred140_InternalSimpleBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred99_InternalSimpleBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred99_InternalSimpleBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred127_InternalSimpleBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred127_InternalSimpleBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred153_InternalSimpleBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred153_InternalSimpleBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred158_InternalSimpleBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred158_InternalSimpleBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred94_InternalSimpleBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred94_InternalSimpleBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred149_InternalSimpleBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred149_InternalSimpleBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred58_InternalSimpleBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred58_InternalSimpleBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred126_InternalSimpleBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred126_InternalSimpleBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred144_InternalSimpleBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred144_InternalSimpleBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred130_InternalSimpleBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred130_InternalSimpleBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred135_InternalSimpleBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred135_InternalSimpleBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred137_InternalSimpleBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred137_InternalSimpleBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred95_InternalSimpleBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred95_InternalSimpleBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred143_InternalSimpleBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred143_InternalSimpleBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred148_InternalSimpleBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred148_InternalSimpleBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred84_InternalSimpleBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred84_InternalSimpleBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred44_InternalSimpleBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred44_InternalSimpleBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred103_InternalSimpleBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred103_InternalSimpleBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred132_InternalSimpleBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred132_InternalSimpleBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred43_InternalSimpleBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred43_InternalSimpleBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred159_InternalSimpleBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred159_InternalSimpleBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred131_InternalSimpleBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred131_InternalSimpleBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred136_InternalSimpleBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred136_InternalSimpleBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred48_InternalSimpleBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred48_InternalSimpleBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred154_InternalSimpleBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred154_InternalSimpleBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred125_InternalSimpleBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred125_InternalSimpleBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred25_InternalSimpleBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred25_InternalSimpleBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred39_InternalSimpleBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred39_InternalSimpleBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred133_InternalSimpleBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred133_InternalSimpleBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred150_InternalSimpleBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred150_InternalSimpleBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred124_InternalSimpleBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred124_InternalSimpleBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred156_InternalSimpleBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred156_InternalSimpleBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred138_InternalSimpleBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred138_InternalSimpleBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred142_InternalSimpleBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred142_InternalSimpleBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred147_InternalSimpleBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred147_InternalSimpleBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred47_InternalSimpleBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred47_InternalSimpleBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred129_InternalSimpleBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred129_InternalSimpleBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred115_InternalSimpleBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred115_InternalSimpleBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred101_InternalSimpleBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred101_InternalSimpleBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred155_InternalSimpleBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred155_InternalSimpleBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred141_InternalSimpleBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred141_InternalSimpleBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred146_InternalSimpleBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred146_InternalSimpleBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred96_InternalSimpleBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred96_InternalSimpleBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred110_InternalSimpleBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred110_InternalSimpleBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


    protected DFA8 dfa8 = new DFA8(this);
    protected DFA14 dfa14 = new DFA14(this);
    protected DFA26 dfa26 = new DFA26(this);
    protected DFA31 dfa31 = new DFA31(this);
    protected DFA67 dfa67 = new DFA67(this);
    protected DFA81 dfa81 = new DFA81(this);
    protected DFA86 dfa86 = new DFA86(this);
    protected DFA94 dfa94 = new DFA94(this);
    protected DFA95 dfa95 = new DFA95(this);
    protected DFA96 dfa96 = new DFA96(this);
    protected DFA97 dfa97 = new DFA97(this);
    protected DFA98 dfa98 = new DFA98(this);
    protected DFA100 dfa100 = new DFA100(this);
    protected DFA101 dfa101 = new DFA101(this);
    protected DFA102 dfa102 = new DFA102(this);
    protected DFA103 dfa103 = new DFA103(this);
    protected DFA104 dfa104 = new DFA104(this);
    static final String dfa_1s = "\56\uffff";
    static final String dfa_2s = "\3\uffff\1\4\4\uffff\2\4\12\uffff\3\4\16\uffff\2\4\7\uffff";
    static final String dfa_3s = "\1\4\1\uffff\1\4\1\7\1\uffff\1\16\2\4\2\16\1\4\1\0\1\7\2\4\1\16\1\7\1\76\1\7\1\0\1\7\2\16\1\7\1\75\1\7\1\60\1\7\1\76\2\4\1\60\3\7\1\75\1\7\1\16\1\7\1\75\1\0\1\60\2\7\1\75\1\0";
    static final String dfa_4s = "\1\113\1\uffff\1\113\1\115\1\uffff\1\115\1\107\1\113\2\115\1\113\1\0\1\74\1\113\1\107\1\115\1\7\1\76\1\113\1\0\3\115\1\113\1\75\1\7\1\75\1\7\1\76\1\107\1\113\1\75\2\7\1\113\1\75\1\7\2\115\1\75\1\0\1\75\2\7\1\75\1\0";
    static final String dfa_5s = "\1\uffff\1\1\2\uffff\1\2\51\uffff";
    static final String dfa_6s = "\13\uffff\1\1\7\uffff\1\0\24\uffff\1\2\4\uffff\1\3}>";
    static final String[] dfa_7s = {
            "\1\4\2\uffff\1\3\5\uffff\1\4\16\uffff\1\1\2\uffff\1\4\3\uffff\12\4\17\uffff\1\2\2\uffff\1\4\5\uffff\1\4\1\uffff\1\4\1\1\2\uffff\1\1",
            "",
            "\1\4\2\uffff\1\5\5\uffff\1\4\21\uffff\1\4\3\uffff\12\4\17\uffff\1\4\1\1\1\uffff\1\4\5\uffff\1\4\1\uffff\1\4\3\uffff\1\1",
            "\1\1\6\uffff\16\4\1\6\1\uffff\5\4\1\uffff\2\4\12\uffff\1\7\13\uffff\2\4\2\uffff\4\4\4\uffff\1\1\4\uffff\1\4",
            "",
            "\17\4\1\uffff\5\4\1\uffff\2\4\12\uffff\1\1\13\uffff\1\4\1\10\2\uffff\4\4\11\uffff\1\4",
            "\1\4\2\uffff\1\11\5\uffff\1\4\21\uffff\1\4\3\uffff\12\4\17\uffff\1\4\10\uffff\1\4\1\uffff\1\4",
            "\1\4\2\uffff\1\13\5\uffff\1\4\16\uffff\1\4\2\uffff\1\4\3\uffff\12\4\17\uffff\1\12\2\uffff\1\4\5\uffff\1\4\1\uffff\2\4\2\uffff\1\14",
            "\17\4\1\uffff\5\4\1\uffff\2\4\12\uffff\1\4\13\uffff\2\4\1\1\1\uffff\4\4\11\uffff\1\4",
            "\15\4\1\16\1\4\1\uffff\5\4\1\uffff\2\4\12\uffff\1\15\13\uffff\2\4\2\uffff\4\4\11\uffff\1\4",
            "\1\4\2\uffff\1\17\5\uffff\1\4\21\uffff\1\4\3\uffff\12\4\17\uffff\1\4\1\21\1\uffff\1\4\5\uffff\1\4\1\uffff\1\4\3\uffff\1\20",
            "\1\uffff",
            "\1\23\64\uffff\1\22",
            "\1\4\2\uffff\1\24\5\uffff\1\4\16\uffff\1\4\2\uffff\1\4\3\uffff\12\4\17\uffff\1\4\2\uffff\1\4\5\uffff\1\4\1\uffff\2\4\2\uffff\1\4",
            "\1\4\2\uffff\1\25\5\uffff\1\4\21\uffff\1\4\3\uffff\12\4\17\uffff\1\4\10\uffff\1\4\1\uffff\1\4",
            "\17\4\1\uffff\5\4\1\uffff\2\4\12\uffff\1\27\13\uffff\1\4\1\26\2\uffff\4\4\11\uffff\1\4",
            "\1\30",
            "\1\31",
            "\1\32\65\uffff\1\34\15\uffff\1\33",
            "\1\uffff",
            "\1\4\6\uffff\15\4\1\35\1\4\1\uffff\5\4\1\uffff\2\4\12\uffff\1\36\13\uffff\2\4\2\uffff\4\4\4\uffff\1\4\4\uffff\1\4",
            "\17\4\1\uffff\5\4\1\uffff\2\4\12\uffff\1\7\13\uffff\2\4\2\uffff\4\4\4\uffff\1\1\4\uffff\1\4",
            "\17\4\1\uffff\5\4\1\uffff\2\4\12\uffff\1\4\13\uffff\2\4\1\31\1\uffff\4\4\11\uffff\1\4",
            "\1\37\103\uffff\1\40",
            "\1\21",
            "\1\41",
            "\1\42\14\uffff\1\34",
            "\1\43",
            "\1\44",
            "\1\4\2\uffff\1\45\5\uffff\1\4\21\uffff\1\4\3\uffff\12\4\17\uffff\1\4\10\uffff\1\4\1\uffff\1\4",
            "\1\4\2\uffff\1\46\5\uffff\1\4\16\uffff\1\4\2\uffff\1\4\3\uffff\12\4\17\uffff\1\4\2\uffff\1\4\5\uffff\1\4\1\uffff\2\4\2\uffff\1\4",
            "\1\27\14\uffff\1\21",
            "\1\47",
            "\1\50",
            "\1\51\103\uffff\1\52",
            "\1\34",
            "\1\53",
            "\17\4\1\uffff\5\4\1\uffff\2\4\12\uffff\1\7\13\uffff\2\4\2\uffff\4\4\4\uffff\1\1\4\uffff\1\4",
            "\1\4\6\uffff\15\4\1\35\1\4\1\uffff\5\4\1\uffff\2\4\12\uffff\1\36\13\uffff\2\4\2\uffff\4\4\4\uffff\1\4\4\uffff\1\4",
            "\1\21",
            "\1\uffff",
            "\1\42\14\uffff\1\34",
            "\1\54",
            "\1\55",
            "\1\34",
            "\1\uffff"
    };

    static final short[] dfa_1 = DFA.unpackEncodedString(dfa_1s);
    static final short[] dfa_2 = DFA.unpackEncodedString(dfa_2s);
    static final char[] dfa_3 = DFA.unpackEncodedStringToUnsignedChars(dfa_3s);
    static final char[] dfa_4 = DFA.unpackEncodedStringToUnsignedChars(dfa_4s);
    static final short[] dfa_5 = DFA.unpackEncodedString(dfa_5s);
    static final short[] dfa_6 = DFA.unpackEncodedString(dfa_6s);
    static final short[][] dfa_7 = unpackEncodedStringArray(dfa_7s);

    class DFA8 extends DFA {

        public DFA8(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 8;
            this.eot = dfa_1;
            this.eof = dfa_2;
            this.min = dfa_3;
            this.max = dfa_4;
            this.accept = dfa_5;
            this.special = dfa_6;
            this.transition = dfa_7;
        }
        public String getDescription() {
            return "1600:1: rule__FirstParameter__Alternatives : ( ( ruleClosureParameter ) | ( ruleParameter ) );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA8_19 = input.LA(1);

                         
                        int index8_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred8_InternalSimpleBeeLangTestLanguage()) ) {s = 1;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index8_19);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA8_11 = input.LA(1);

                         
                        int index8_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred8_InternalSimpleBeeLangTestLanguage()) ) {s = 1;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index8_11);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA8_40 = input.LA(1);

                         
                        int index8_40 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred8_InternalSimpleBeeLangTestLanguage()) ) {s = 1;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index8_40);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA8_45 = input.LA(1);

                         
                        int index8_45 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred8_InternalSimpleBeeLangTestLanguage()) ) {s = 1;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index8_45);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 8, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_8s = "\15\uffff";
    static final String dfa_9s = "\4\uffff\1\6\4\uffff\2\6\2\uffff";
    static final String dfa_10s = "\1\4\1\7\1\uffff\1\4\1\7\2\uffff\1\16\1\4\2\16\1\4\1\0";
    static final String dfa_11s = "\2\114\1\uffff\1\113\1\115\2\uffff\1\115\1\107\2\115\1\107\1\0";
    static final String dfa_12s = "\2\uffff\1\1\2\uffff\1\2\1\3\6\uffff";
    static final String dfa_13s = "\14\uffff\1\0}>";
    static final String[] dfa_14s = {
            "\1\6\2\uffff\1\4\5\uffff\1\6\17\uffff\1\2\1\uffff\1\6\3\uffff\12\6\17\uffff\1\3\2\uffff\1\6\5\uffff\1\6\1\uffff\1\6\2\uffff\1\1\1\uffff\1\5",
            "\1\2\25\uffff\1\2\36\uffff\1\2\17\uffff\1\5",
            "",
            "\1\6\2\uffff\1\7\5\uffff\1\6\21\uffff\1\6\3\uffff\12\6\17\uffff\1\6\1\2\1\uffff\1\6\5\uffff\1\6\1\uffff\1\6\3\uffff\1\2",
            "\1\2\6\uffff\16\6\1\10\1\uffff\5\6\1\uffff\2\6\14\uffff\1\6\11\uffff\1\6\3\uffff\4\6\11\uffff\1\6",
            "",
            "",
            "\17\6\1\uffff\5\6\1\uffff\2\6\12\uffff\1\2\13\uffff\1\6\1\11\2\uffff\4\6\11\uffff\1\6",
            "\1\6\2\uffff\1\12\5\uffff\1\6\21\uffff\1\6\3\uffff\12\6\17\uffff\1\6\10\uffff\1\6\1\uffff\1\6",
            "\17\6\1\uffff\5\6\1\uffff\2\6\14\uffff\1\6\11\uffff\1\6\1\uffff\1\2\1\uffff\4\6\11\uffff\1\6",
            "\15\6\1\13\1\6\1\uffff\5\6\1\uffff\2\6\12\uffff\1\2\1\uffff\1\6\11\uffff\1\6\3\uffff\4\6\11\uffff\1\6",
            "\1\6\2\uffff\1\14\5\uffff\1\6\21\uffff\1\6\3\uffff\12\6\17\uffff\1\6\10\uffff\1\6\1\uffff\1\6",
            "\1\uffff"
    };

    static final short[] dfa_8 = DFA.unpackEncodedString(dfa_8s);
    static final short[] dfa_9 = DFA.unpackEncodedString(dfa_9s);
    static final char[] dfa_10 = DFA.unpackEncodedStringToUnsignedChars(dfa_10s);
    static final char[] dfa_11 = DFA.unpackEncodedStringToUnsignedChars(dfa_11s);
    static final short[] dfa_12 = DFA.unpackEncodedString(dfa_12s);
    static final short[] dfa_13 = DFA.unpackEncodedString(dfa_13s);
    static final short[][] dfa_14 = unpackEncodedStringArray(dfa_14s);

    class DFA14 extends DFA {

        public DFA14(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 14;
            this.eot = dfa_8;
            this.eof = dfa_9;
            this.min = dfa_10;
            this.max = dfa_11;
            this.accept = dfa_12;
            this.special = dfa_13;
            this.transition = dfa_14;
        }
        public String getDescription() {
            return "1792:1: rule__TopLevelExpression__Alternatives : ( ( ruleVarDeclaration ) | ( ruleValDeclaration ) | ( ruleAssignmentExpression ) );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA14_12 = input.LA(1);

                         
                        int index14_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred25_InternalSimpleBeeLangTestLanguage()) ) {s = 2;}

                        else if ( (true) ) {s = 6;}

                         
                        input.seek(index14_12);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 14, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_15s = "\23\uffff";
    static final String dfa_16s = "\1\4\1\0\2\uffff\1\0\10\uffff\1\0\5\uffff";
    static final String dfa_17s = "\1\107\1\0\2\uffff\1\0\10\uffff\1\0\5\uffff";
    static final String dfa_18s = "\2\uffff\1\2\1\4\1\uffff\1\5\6\uffff\1\6\1\uffff\1\1\1\3\1\7\1\10\1\11";
    static final String dfa_19s = "\1\uffff\1\0\2\uffff\1\1\10\uffff\1\2\5\uffff}>";
    static final String[] dfa_20s = {
            "\1\3\2\uffff\1\1\5\uffff\1\5\30\uffff\6\5\1\4\17\uffff\1\14\10\uffff\1\15\1\uffff\1\2",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_15 = DFA.unpackEncodedString(dfa_15s);
    static final char[] dfa_16 = DFA.unpackEncodedStringToUnsignedChars(dfa_16s);
    static final char[] dfa_17 = DFA.unpackEncodedStringToUnsignedChars(dfa_17s);
    static final short[] dfa_18 = DFA.unpackEncodedString(dfa_18s);
    static final short[] dfa_19 = DFA.unpackEncodedString(dfa_19s);
    static final short[][] dfa_20 = unpackEncodedStringArray(dfa_20s);

    class DFA26 extends DFA {

        public DFA26(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 26;
            this.eot = dfa_15;
            this.eof = dfa_15;
            this.min = dfa_16;
            this.max = dfa_17;
            this.accept = dfa_18;
            this.special = dfa_19;
            this.transition = dfa_20;
        }
        public String getDescription() {
            return "2068:1: rule__PrimaryExpression__Alternatives : ( ( ruleFeatureCall ) | ( ruleConstructorCallExpression ) | ( ruleValue ) | ( ruleLiteral ) | ( ruleKeywordVariables ) | ( ruleParanthesizedExpression ) | ( ruleBlockExpression ) | ( ruleWithExpression ) | ( ruleWithContextExpression ) );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA26_1 = input.LA(1);

                         
                        int index26_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred41_InternalSimpleBeeLangTestLanguage()) ) {s = 14;}

                        else if ( (synpred43_InternalSimpleBeeLangTestLanguage()) ) {s = 15;}

                         
                        input.seek(index26_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA26_4 = input.LA(1);

                         
                        int index26_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred44_InternalSimpleBeeLangTestLanguage()) ) {s = 3;}

                        else if ( (synpred47_InternalSimpleBeeLangTestLanguage()) ) {s = 16;}

                         
                        input.seek(index26_4);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA26_13 = input.LA(1);

                         
                        int index26_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred48_InternalSimpleBeeLangTestLanguage()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index26_13);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 26, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_21s = "\27\uffff";
    static final String dfa_22s = "\1\4\2\uffff\2\0\1\uffff\20\0\1\uffff";
    static final String dfa_23s = "\1\114\2\uffff\2\0\1\uffff\20\0\1\uffff";
    static final String dfa_24s = "\1\uffff\1\1\24\uffff\1\2";
    static final String dfa_25s = "\3\uffff\1\0\1\1\1\uffff\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\uffff}>";
    static final String[] dfa_26s = {
            "\1\10\2\uffff\1\4\5\uffff\1\17\17\uffff\1\1\1\uffff\1\23\3\uffff\1\22\1\24\1\25\1\12\1\13\1\14\1\15\1\16\1\20\1\11\17\uffff\1\3\2\uffff\1\6\5\uffff\1\21\1\uffff\1\7\2\uffff\1\1\1\uffff\1\1",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            ""
    };

    static final short[] dfa_21 = DFA.unpackEncodedString(dfa_21s);
    static final char[] dfa_22 = DFA.unpackEncodedStringToUnsignedChars(dfa_22s);
    static final char[] dfa_23 = DFA.unpackEncodedStringToUnsignedChars(dfa_23s);
    static final short[] dfa_24 = DFA.unpackEncodedString(dfa_24s);
    static final short[] dfa_25 = DFA.unpackEncodedString(dfa_25s);
    static final short[][] dfa_26 = unpackEncodedStringArray(dfa_26s);

    class DFA31 extends DFA {

        public DFA31(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 31;
            this.eot = dfa_21;
            this.eof = dfa_21;
            this.min = dfa_22;
            this.max = dfa_23;
            this.accept = dfa_24;
            this.special = dfa_25;
            this.transition = dfa_26;
        }
        public String getDescription() {
            return "2245:1: rule__OneOrManyExpressions__Alternatives : ( ( ruleBlockExpressionWithoutBrackets ) | ( ruleExpression ) );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA31_3 = input.LA(1);

                         
                        int index31_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred58_InternalSimpleBeeLangTestLanguage()) ) {s = 1;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index31_3);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA31_4 = input.LA(1);

                         
                        int index31_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred58_InternalSimpleBeeLangTestLanguage()) ) {s = 1;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index31_4);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA31_6 = input.LA(1);

                         
                        int index31_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred58_InternalSimpleBeeLangTestLanguage()) ) {s = 1;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index31_6);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA31_7 = input.LA(1);

                         
                        int index31_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred58_InternalSimpleBeeLangTestLanguage()) ) {s = 1;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index31_7);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA31_8 = input.LA(1);

                         
                        int index31_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred58_InternalSimpleBeeLangTestLanguage()) ) {s = 1;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index31_8);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA31_9 = input.LA(1);

                         
                        int index31_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred58_InternalSimpleBeeLangTestLanguage()) ) {s = 1;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index31_9);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA31_10 = input.LA(1);

                         
                        int index31_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred58_InternalSimpleBeeLangTestLanguage()) ) {s = 1;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index31_10);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA31_11 = input.LA(1);

                         
                        int index31_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred58_InternalSimpleBeeLangTestLanguage()) ) {s = 1;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index31_11);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA31_12 = input.LA(1);

                         
                        int index31_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred58_InternalSimpleBeeLangTestLanguage()) ) {s = 1;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index31_12);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA31_13 = input.LA(1);

                         
                        int index31_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred58_InternalSimpleBeeLangTestLanguage()) ) {s = 1;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index31_13);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA31_14 = input.LA(1);

                         
                        int index31_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred58_InternalSimpleBeeLangTestLanguage()) ) {s = 1;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index31_14);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA31_15 = input.LA(1);

                         
                        int index31_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred58_InternalSimpleBeeLangTestLanguage()) ) {s = 1;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index31_15);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA31_16 = input.LA(1);

                         
                        int index31_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred58_InternalSimpleBeeLangTestLanguage()) ) {s = 1;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index31_16);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA31_17 = input.LA(1);

                         
                        int index31_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred58_InternalSimpleBeeLangTestLanguage()) ) {s = 1;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index31_17);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA31_18 = input.LA(1);

                         
                        int index31_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred58_InternalSimpleBeeLangTestLanguage()) ) {s = 1;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index31_18);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA31_19 = input.LA(1);

                         
                        int index31_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred58_InternalSimpleBeeLangTestLanguage()) ) {s = 1;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index31_19);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA31_20 = input.LA(1);

                         
                        int index31_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred58_InternalSimpleBeeLangTestLanguage()) ) {s = 1;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index31_20);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA31_21 = input.LA(1);

                         
                        int index31_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred58_InternalSimpleBeeLangTestLanguage()) ) {s = 1;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index31_21);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 31, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_27s = "\14\uffff";
    static final String dfa_28s = "\1\1\13\uffff";
    static final String dfa_29s = "\1\16\1\uffff\11\0\1\uffff";
    static final String dfa_30s = "\1\115\1\uffff\11\0\1\uffff";
    static final String dfa_31s = "\1\uffff\1\2\11\uffff\1\1";
    static final String dfa_32s = "\2\uffff\1\7\1\4\1\5\1\2\1\3\1\10\1\0\1\6\1\1\1\uffff}>";
    static final String[] dfa_33s = {
            "\6\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\uffff\5\1\1\uffff\2\1\6\uffff\2\1\2\uffff\1\1\1\uffff\1\1\5\uffff\1\1\3\uffff\2\1\2\uffff\5\1\10\uffff\1\1",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            ""
    };

    static final short[] dfa_27 = DFA.unpackEncodedString(dfa_27s);
    static final short[] dfa_28 = DFA.unpackEncodedString(dfa_28s);
    static final char[] dfa_29 = DFA.unpackEncodedStringToUnsignedChars(dfa_29s);
    static final char[] dfa_30 = DFA.unpackEncodedStringToUnsignedChars(dfa_30s);
    static final short[] dfa_31 = DFA.unpackEncodedString(dfa_31s);
    static final short[] dfa_32 = DFA.unpackEncodedString(dfa_32s);
    static final short[][] dfa_33 = unpackEncodedStringArray(dfa_33s);

    class DFA67 extends DFA {

        public DFA67(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 67;
            this.eot = dfa_27;
            this.eof = dfa_28;
            this.min = dfa_29;
            this.max = dfa_30;
            this.accept = dfa_31;
            this.special = dfa_32;
            this.transition = dfa_33;
        }
        public String getDescription() {
            return "()* loopback of 7900:2: ( rule__RelationalExpression__Group_1__0 )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA67_8 = input.LA(1);

                         
                        int index67_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred96_InternalSimpleBeeLangTestLanguage()) ) {s = 11;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index67_8);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA67_10 = input.LA(1);

                         
                        int index67_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred96_InternalSimpleBeeLangTestLanguage()) ) {s = 11;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index67_10);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA67_5 = input.LA(1);

                         
                        int index67_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred96_InternalSimpleBeeLangTestLanguage()) ) {s = 11;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index67_5);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA67_6 = input.LA(1);

                         
                        int index67_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred96_InternalSimpleBeeLangTestLanguage()) ) {s = 11;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index67_6);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA67_3 = input.LA(1);

                         
                        int index67_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred96_InternalSimpleBeeLangTestLanguage()) ) {s = 11;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index67_3);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA67_4 = input.LA(1);

                         
                        int index67_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred96_InternalSimpleBeeLangTestLanguage()) ) {s = 11;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index67_4);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA67_9 = input.LA(1);

                         
                        int index67_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred96_InternalSimpleBeeLangTestLanguage()) ) {s = 11;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index67_9);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA67_2 = input.LA(1);

                         
                        int index67_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred96_InternalSimpleBeeLangTestLanguage()) ) {s = 11;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index67_2);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA67_7 = input.LA(1);

                         
                        int index67_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred96_InternalSimpleBeeLangTestLanguage()) ) {s = 11;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index67_7);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 67, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_34s = "\46\uffff";
    static final String dfa_35s = "\1\2\45\uffff";
    static final String dfa_36s = "\1\16\1\0\44\uffff";
    static final String dfa_37s = "\1\115\1\0\44\uffff";
    static final String dfa_38s = "\2\uffff\1\2\42\uffff\1\1";
    static final String dfa_39s = "\1\uffff\1\0\44\uffff}>";
    static final String[] dfa_40s = {
            "\17\2\1\uffff\5\2\1\uffff\2\2\6\uffff\2\2\2\uffff\1\2\1\uffff\1\2\5\uffff\1\2\3\uffff\1\1\1\2\2\uffff\5\2\10\uffff\1\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_34 = DFA.unpackEncodedString(dfa_34s);
    static final short[] dfa_35 = DFA.unpackEncodedString(dfa_35s);
    static final char[] dfa_36 = DFA.unpackEncodedStringToUnsignedChars(dfa_36s);
    static final char[] dfa_37 = DFA.unpackEncodedStringToUnsignedChars(dfa_37s);
    static final short[] dfa_38 = DFA.unpackEncodedString(dfa_38s);
    static final short[] dfa_39 = DFA.unpackEncodedString(dfa_39s);
    static final short[][] dfa_40 = unpackEncodedStringArray(dfa_40s);

    class DFA81 extends DFA {

        public DFA81(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 81;
            this.eot = dfa_34;
            this.eof = dfa_35;
            this.min = dfa_36;
            this.max = dfa_37;
            this.accept = dfa_38;
            this.special = dfa_39;
            this.transition = dfa_40;
        }
        public String getDescription() {
            return "10250:2: ( rule__ConstructorCallExpression__Group_3__0 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA81_1 = input.LA(1);

                         
                        int index81_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred110_InternalSimpleBeeLangTestLanguage()) ) {s = 37;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index81_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 81, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_41s = "\71\uffff";
    static final String dfa_42s = "\5\uffff\1\3\7\uffff\1\3\2\uffff\1\3\16\uffff\3\3\16\uffff\2\3\7\uffff";
    static final String dfa_43s = "\1\7\1\4\2\uffff\1\4\1\7\1\16\1\7\1\76\1\4\1\16\1\4\1\7\1\16\1\75\1\7\1\16\1\4\1\0\2\7\1\60\1\7\2\4\1\16\1\7\1\76\1\7\1\0\1\75\1\7\2\16\1\7\1\75\1\7\1\60\1\7\1\76\2\4\1\60\3\7\1\75\1\7\1\16\1\7\1\75\1\0\1\60\2\7\1\75\1\0";
    static final String dfa_44s = "\1\113\1\114\2\uffff\1\113\2\115\1\7\1\76\1\107\1\110\2\113\1\115\1\75\1\7\1\115\1\113\1\0\1\74\1\7\1\75\1\7\1\113\1\107\1\115\1\7\1\76\1\113\1\0\1\75\3\115\1\113\1\75\1\7\1\75\1\7\1\76\1\107\1\113\1\75\2\7\1\113\1\75\1\7\2\115\1\75\1\0\1\75\2\7\1\75\1\0";
    static final String dfa_45s = "\2\uffff\1\1\1\2\65\uffff";
    static final String dfa_46s = "\22\uffff\1\2\12\uffff\1\1\25\uffff\1\3\4\uffff\1\0}>";
    static final String[] dfa_47s = {
            "\1\2\64\uffff\1\2\13\uffff\1\1\2\uffff\1\2",
            "\1\3\2\uffff\1\5\5\uffff\1\3\17\uffff\1\3\1\uffff\1\3\3\uffff\12\3\17\uffff\1\4\2\uffff\1\3\5\uffff\1\3\1\uffff\1\3\2\uffff\1\3\1\uffff\1\3",
            "",
            "",
            "\1\3\2\uffff\1\6\5\uffff\1\3\21\uffff\1\3\3\uffff\12\3\17\uffff\1\3\1\10\1\uffff\1\3\5\uffff\1\3\1\uffff\1\3\3\uffff\1\7",
            "\1\12\6\uffff\16\3\1\11\1\uffff\5\3\1\uffff\2\3\7\uffff\1\3\2\uffff\1\13\1\uffff\1\3\11\uffff\2\3\2\uffff\4\3\4\uffff\1\2\4\uffff\1\3",
            "\17\3\1\uffff\5\3\1\uffff\2\3\12\uffff\1\14\13\uffff\1\3\1\15\2\uffff\4\3\11\uffff\1\3",
            "\1\16",
            "\1\17",
            "\1\3\2\uffff\1\20\5\uffff\1\3\21\uffff\1\3\3\uffff\12\3\17\uffff\1\3\10\uffff\1\3\1\uffff\1\3",
            "\1\3\41\uffff\1\2\1\uffff\1\3\25\uffff\1\2",
            "\1\3\2\uffff\1\22\5\uffff\1\3\16\uffff\1\3\2\uffff\1\3\3\uffff\12\3\17\uffff\1\21\2\uffff\1\3\5\uffff\1\3\1\uffff\2\3\2\uffff\1\23",
            "\1\25\103\uffff\1\24",
            "\17\3\1\uffff\5\3\1\uffff\2\3\7\uffff\1\3\2\uffff\1\3\1\uffff\1\3\11\uffff\2\3\1\17\1\uffff\4\3\11\uffff\1\3",
            "\1\10",
            "\1\26",
            "\15\3\1\30\1\3\1\uffff\5\3\1\uffff\2\3\7\uffff\1\3\2\uffff\1\27\1\uffff\1\3\11\uffff\2\3\2\uffff\4\3\11\uffff\1\3",
            "\1\3\2\uffff\1\31\5\uffff\1\3\21\uffff\1\3\3\uffff\12\3\17\uffff\1\3\1\33\1\uffff\1\3\5\uffff\1\3\1\uffff\1\3\3\uffff\1\32",
            "\1\uffff",
            "\1\35\64\uffff\1\34",
            "\1\36",
            "\1\14\14\uffff\1\10",
            "\1\12",
            "\1\3\2\uffff\1\37\5\uffff\1\3\16\uffff\1\3\2\uffff\1\3\3\uffff\12\3\17\uffff\1\3\2\uffff\1\3\5\uffff\1\3\1\uffff\2\3\2\uffff\1\3",
            "\1\3\2\uffff\1\40\5\uffff\1\3\21\uffff\1\3\3\uffff\12\3\17\uffff\1\3\10\uffff\1\3\1\uffff\1\3",
            "\17\3\1\uffff\5\3\1\uffff\2\3\12\uffff\1\42\13\uffff\1\3\1\41\2\uffff\4\3\11\uffff\1\3",
            "\1\43",
            "\1\44",
            "\1\45\65\uffff\1\47\15\uffff\1\46",
            "\1\uffff",
            "\1\10",
            "\1\3\6\uffff\15\3\1\50\1\3\1\uffff\5\3\1\uffff\2\3\12\uffff\1\51\13\uffff\2\3\2\uffff\4\3\4\uffff\1\3\4\uffff\1\3",
            "\17\3\1\uffff\5\3\1\uffff\2\3\7\uffff\1\3\2\uffff\1\13\1\uffff\1\3\11\uffff\2\3\2\uffff\4\3\4\uffff\1\2\4\uffff\1\3",
            "\17\3\1\uffff\5\3\1\uffff\2\3\12\uffff\1\3\13\uffff\2\3\1\44\1\uffff\4\3\11\uffff\1\3",
            "\1\52\103\uffff\1\53",
            "\1\33",
            "\1\54",
            "\1\55\14\uffff\1\47",
            "\1\56",
            "\1\57",
            "\1\3\2\uffff\1\60\5\uffff\1\3\21\uffff\1\3\3\uffff\12\3\17\uffff\1\3\10\uffff\1\3\1\uffff\1\3",
            "\1\3\2\uffff\1\61\5\uffff\1\3\16\uffff\1\3\2\uffff\1\3\3\uffff\12\3\17\uffff\1\3\2\uffff\1\3\5\uffff\1\3\1\uffff\2\3\2\uffff\1\3",
            "\1\42\14\uffff\1\33",
            "\1\62",
            "\1\63",
            "\1\64\103\uffff\1\65",
            "\1\47",
            "\1\66",
            "\17\3\1\uffff\5\3\1\uffff\2\3\12\uffff\1\13\1\uffff\1\3\11\uffff\2\3\2\uffff\4\3\4\uffff\1\2\4\uffff\1\3",
            "\1\3\6\uffff\15\3\1\50\1\3\1\uffff\5\3\1\uffff\2\3\12\uffff\1\51\13\uffff\2\3\2\uffff\4\3\4\uffff\1\3\4\uffff\1\3",
            "\1\33",
            "\1\uffff",
            "\1\55\14\uffff\1\47",
            "\1\67",
            "\1\70",
            "\1\47",
            "\1\uffff"
    };

    static final short[] dfa_41 = DFA.unpackEncodedString(dfa_41s);
    static final short[] dfa_42 = DFA.unpackEncodedString(dfa_42s);
    static final char[] dfa_43 = DFA.unpackEncodedStringToUnsignedChars(dfa_43s);
    static final char[] dfa_44 = DFA.unpackEncodedStringToUnsignedChars(dfa_44s);
    static final short[] dfa_45 = DFA.unpackEncodedString(dfa_45s);
    static final short[] dfa_46 = DFA.unpackEncodedString(dfa_46s);
    static final short[][] dfa_47 = unpackEncodedStringArray(dfa_47s);

    class DFA86 extends DFA {

        public DFA86(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 86;
            this.eot = dfa_41;
            this.eof = dfa_42;
            this.min = dfa_43;
            this.max = dfa_44;
            this.accept = dfa_45;
            this.special = dfa_46;
            this.transition = dfa_47;
        }
        public String getDescription() {
            return "10898:2: ( rule__ClosureExpression__Alternatives_2 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA86_56 = input.LA(1);

                         
                        int index86_56 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred115_InternalSimpleBeeLangTestLanguage()) ) {s = 2;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index86_56);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA86_29 = input.LA(1);

                         
                        int index86_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred115_InternalSimpleBeeLangTestLanguage()) ) {s = 2;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index86_29);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA86_18 = input.LA(1);

                         
                        int index86_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred115_InternalSimpleBeeLangTestLanguage()) ) {s = 2;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index86_18);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA86_51 = input.LA(1);

                         
                        int index86_51 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred115_InternalSimpleBeeLangTestLanguage()) ) {s = 2;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index86_51);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 86, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_48s = "\12\uffff";
    static final String dfa_49s = "\1\7\11\uffff";
    static final String dfa_50s = "\1\112\11\uffff";
    static final String dfa_51s = "\1\uffff\10\1\1\2";
    static final String dfa_52s = "\1\0\11\uffff}>";
    static final String[] dfa_53s = {
            "\1\6\1\5\36\uffff\1\2\1\1\4\uffff\1\11\5\uffff\1\3\1\4\6\uffff\1\10\16\uffff\1\7",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_48 = DFA.unpackEncodedString(dfa_48s);
    static final char[] dfa_49 = DFA.unpackEncodedStringToUnsignedChars(dfa_49s);
    static final char[] dfa_50 = DFA.unpackEncodedStringToUnsignedChars(dfa_50s);
    static final short[] dfa_51 = DFA.unpackEncodedString(dfa_51s);
    static final short[] dfa_52 = DFA.unpackEncodedString(dfa_52s);
    static final short[][] dfa_53 = unpackEncodedStringArray(dfa_53s);

    class DFA94 extends DFA {

        public DFA94(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 94;
            this.eot = dfa_48;
            this.eof = dfa_48;
            this.min = dfa_49;
            this.max = dfa_50;
            this.accept = dfa_51;
            this.special = dfa_52;
            this.transition = dfa_53;
        }
        public String getDescription() {
            return "11729:2: ( rule__Unit__UnorderedGroup_7__0 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA94_0 = input.LA(1);

                         
                        int index94_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA94_0 == 40 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 0) ) {s = 1;}

                        else if ( LA94_0 == 39 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 1) ) {s = 2;}

                        else if ( LA94_0 == 51 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 2) ) {s = 3;}

                        else if ( LA94_0 == 52 && ( getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 3) || getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 4) ) ) {s = 4;}

                        else if ( LA94_0 == RULE_DOCUMENTATION && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 5) ) {s = 5;}

                        else if ( LA94_0 == RULE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 5) ) {s = 6;}

                        else if ( LA94_0 == 74 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 5) ) {s = 7;}

                        else if ( LA94_0 == 59 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 5) ) {s = 8;}

                        else if ( (LA94_0==45) ) {s = 9;}

                         
                        input.seek(index94_0);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 94, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_54s = "\1\7\2\uffff\1\0\10\uffff";
    static final String dfa_55s = "\1\112\2\uffff\1\0\10\uffff";
    static final String dfa_56s = "\3\uffff\1\0\10\uffff}>";
    static final String[] dfa_57s = {
            "\2\1\36\uffff\2\1\4\uffff\1\1\5\uffff\1\3\1\1\6\uffff\1\1\16\uffff\1\1",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_54 = DFA.unpackEncodedStringToUnsignedChars(dfa_54s);
    static final char[] dfa_55 = DFA.unpackEncodedStringToUnsignedChars(dfa_55s);
    static final short[] dfa_56 = DFA.unpackEncodedString(dfa_56s);
    static final short[][] dfa_57 = unpackEncodedStringArray(dfa_57s);

    class DFA95 extends DFA {

        public DFA95(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 95;
            this.eot = dfa_27;
            this.eof = dfa_28;
            this.min = dfa_54;
            this.max = dfa_55;
            this.accept = dfa_31;
            this.special = dfa_56;
            this.transition = dfa_57;
        }
        public String getDescription() {
            return "()* loopback of 11790:7: ( ( rule__Unit__Group_7_2__0 )=> rule__Unit__Group_7_2__0 )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA95_3 = input.LA(1);

                         
                        int index95_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred126_InternalSimpleBeeLangTestLanguage()) ) {s = 11;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index95_3);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 95, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_58s = "\1\7\3\uffff\1\0\7\uffff";
    static final String dfa_59s = "\1\112\3\uffff\1\0\7\uffff";
    static final String dfa_60s = "\4\uffff\1\0\7\uffff}>";
    static final String[] dfa_61s = {
            "\2\1\36\uffff\2\1\4\uffff\1\1\5\uffff\1\1\1\4\6\uffff\1\1\16\uffff\1\1",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_58 = DFA.unpackEncodedStringToUnsignedChars(dfa_58s);
    static final char[] dfa_59 = DFA.unpackEncodedStringToUnsignedChars(dfa_59s);
    static final short[] dfa_60 = DFA.unpackEncodedString(dfa_60s);
    static final short[][] dfa_61 = unpackEncodedStringArray(dfa_61s);

    class DFA96 extends DFA {

        public DFA96(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 96;
            this.eot = dfa_27;
            this.eof = dfa_28;
            this.min = dfa_58;
            this.max = dfa_59;
            this.accept = dfa_31;
            this.special = dfa_60;
            this.transition = dfa_61;
        }
        public String getDescription() {
            return "()* loopback of 11812:7: ( ( rule__Unit__Group_7_3__0 )=> rule__Unit__Group_7_3__0 )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA96_4 = input.LA(1);

                         
                        int index96_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred128_InternalSimpleBeeLangTestLanguage()) ) {s = 11;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index96_4);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 96, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA97 extends DFA {

        public DFA97(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 97;
            this.eot = dfa_27;
            this.eof = dfa_28;
            this.min = dfa_58;
            this.max = dfa_59;
            this.accept = dfa_31;
            this.special = dfa_60;
            this.transition = dfa_61;
        }
        public String getDescription() {
            return "()* loopback of 11834:7: ( ( rule__Unit__Group_7_4__0 )=> rule__Unit__Group_7_4__0 )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA97_4 = input.LA(1);

                         
                        int index97_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred130_InternalSimpleBeeLangTestLanguage()) ) {s = 11;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index97_4);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 97, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_62s = "\1\7\4\uffff\4\0\3\uffff";
    static final String dfa_63s = "\1\112\4\uffff\4\0\3\uffff";
    static final String dfa_64s = "\5\uffff\1\0\1\1\1\2\1\3\3\uffff}>";
    static final String[] dfa_65s = {
            "\1\6\1\5\36\uffff\2\1\4\uffff\1\1\5\uffff\2\1\6\uffff\1\10\16\uffff\1\7",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            ""
    };
    static final char[] dfa_62 = DFA.unpackEncodedStringToUnsignedChars(dfa_62s);
    static final char[] dfa_63 = DFA.unpackEncodedStringToUnsignedChars(dfa_63s);
    static final short[] dfa_64 = DFA.unpackEncodedString(dfa_64s);
    static final short[][] dfa_65 = unpackEncodedStringArray(dfa_65s);

    class DFA98 extends DFA {

        public DFA98(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 98;
            this.eot = dfa_27;
            this.eof = dfa_28;
            this.min = dfa_62;
            this.max = dfa_63;
            this.accept = dfa_31;
            this.special = dfa_64;
            this.transition = dfa_65;
        }
        public String getDescription() {
            return "()* loopback of 11856:7: ( ( rule__Unit__FunctionsAssignment_7_5 )=> rule__Unit__FunctionsAssignment_7_5 )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA98_5 = input.LA(1);

                         
                        int index98_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred132_InternalSimpleBeeLangTestLanguage()) ) {s = 11;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index98_5);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA98_6 = input.LA(1);

                         
                        int index98_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred132_InternalSimpleBeeLangTestLanguage()) ) {s = 11;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index98_6);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA98_7 = input.LA(1);

                         
                        int index98_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred132_InternalSimpleBeeLangTestLanguage()) ) {s = 11;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index98_7);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA98_8 = input.LA(1);

                         
                        int index98_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred132_InternalSimpleBeeLangTestLanguage()) ) {s = 11;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index98_8);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 98, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_66s = "\1\11\11\uffff";
    static final short[] dfa_66 = DFA.unpackEncodedString(dfa_66s);

    class DFA100 extends DFA {

        public DFA100(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 100;
            this.eot = dfa_48;
            this.eof = dfa_66;
            this.min = dfa_49;
            this.max = dfa_50;
            this.accept = dfa_51;
            this.special = dfa_52;
            this.transition = dfa_53;
        }
        public String getDescription() {
            return "11876:2: ( rule__Unit__UnorderedGroup_7__1 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA100_0 = input.LA(1);

                         
                        int index100_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA100_0 == 40 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 0) ) {s = 1;}

                        else if ( LA100_0 == 39 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 1) ) {s = 2;}

                        else if ( LA100_0 == 51 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 2) ) {s = 3;}

                        else if ( LA100_0 == 52 && ( getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 3) || getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 4) ) ) {s = 4;}

                        else if ( LA100_0 == RULE_DOCUMENTATION && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 5) ) {s = 5;}

                        else if ( LA100_0 == RULE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 5) ) {s = 6;}

                        else if ( LA100_0 == 74 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 5) ) {s = 7;}

                        else if ( LA100_0 == 59 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 5) ) {s = 8;}

                        else if ( (LA100_0==EOF||LA100_0==45) ) {s = 9;}

                         
                        input.seek(index100_0);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 100, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA101 extends DFA {

        public DFA101(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 101;
            this.eot = dfa_48;
            this.eof = dfa_66;
            this.min = dfa_49;
            this.max = dfa_50;
            this.accept = dfa_51;
            this.special = dfa_52;
            this.transition = dfa_53;
        }
        public String getDescription() {
            return "11888:2: ( rule__Unit__UnorderedGroup_7__2 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA101_0 = input.LA(1);

                         
                        int index101_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA101_0 == 40 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 0) ) {s = 1;}

                        else if ( LA101_0 == 39 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 1) ) {s = 2;}

                        else if ( LA101_0 == 51 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 2) ) {s = 3;}

                        else if ( LA101_0 == 52 && ( getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 3) || getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 4) ) ) {s = 4;}

                        else if ( LA101_0 == RULE_DOCUMENTATION && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 5) ) {s = 5;}

                        else if ( LA101_0 == RULE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 5) ) {s = 6;}

                        else if ( LA101_0 == 74 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 5) ) {s = 7;}

                        else if ( LA101_0 == 59 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 5) ) {s = 8;}

                        else if ( (LA101_0==EOF||LA101_0==45) ) {s = 9;}

                         
                        input.seek(index101_0);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 101, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA102 extends DFA {

        public DFA102(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 102;
            this.eot = dfa_48;
            this.eof = dfa_66;
            this.min = dfa_49;
            this.max = dfa_50;
            this.accept = dfa_51;
            this.special = dfa_52;
            this.transition = dfa_53;
        }
        public String getDescription() {
            return "11900:2: ( rule__Unit__UnorderedGroup_7__3 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA102_0 = input.LA(1);

                         
                        int index102_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA102_0 == 40 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 0) ) {s = 1;}

                        else if ( LA102_0 == 39 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 1) ) {s = 2;}

                        else if ( LA102_0 == 51 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 2) ) {s = 3;}

                        else if ( LA102_0 == 52 && ( getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 3) || getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 4) ) ) {s = 4;}

                        else if ( LA102_0 == RULE_DOCUMENTATION && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 5) ) {s = 5;}

                        else if ( LA102_0 == RULE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 5) ) {s = 6;}

                        else if ( LA102_0 == 74 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 5) ) {s = 7;}

                        else if ( LA102_0 == 59 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 5) ) {s = 8;}

                        else if ( (LA102_0==EOF||LA102_0==45) ) {s = 9;}

                         
                        input.seek(index102_0);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 102, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA103 extends DFA {

        public DFA103(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 103;
            this.eot = dfa_48;
            this.eof = dfa_66;
            this.min = dfa_49;
            this.max = dfa_50;
            this.accept = dfa_51;
            this.special = dfa_52;
            this.transition = dfa_53;
        }
        public String getDescription() {
            return "11912:2: ( rule__Unit__UnorderedGroup_7__4 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA103_0 = input.LA(1);

                         
                        int index103_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA103_0 == 40 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 0) ) {s = 1;}

                        else if ( LA103_0 == 39 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 1) ) {s = 2;}

                        else if ( LA103_0 == 51 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 2) ) {s = 3;}

                        else if ( LA103_0 == 52 && ( getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 3) || getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 4) ) ) {s = 4;}

                        else if ( LA103_0 == RULE_DOCUMENTATION && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 5) ) {s = 5;}

                        else if ( LA103_0 == RULE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 5) ) {s = 6;}

                        else if ( LA103_0 == 74 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 5) ) {s = 7;}

                        else if ( LA103_0 == 59 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 5) ) {s = 8;}

                        else if ( (LA103_0==EOF||LA103_0==45) ) {s = 9;}

                         
                        input.seek(index103_0);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 103, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA104 extends DFA {

        public DFA104(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 104;
            this.eot = dfa_48;
            this.eof = dfa_66;
            this.min = dfa_49;
            this.max = dfa_50;
            this.accept = dfa_51;
            this.special = dfa_52;
            this.transition = dfa_53;
        }
        public String getDescription() {
            return "11924:2: ( rule__Unit__UnorderedGroup_7__5 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA104_0 = input.LA(1);

                         
                        int index104_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA104_0 == 40 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 0) ) {s = 1;}

                        else if ( LA104_0 == 39 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 1) ) {s = 2;}

                        else if ( LA104_0 == 51 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 2) ) {s = 3;}

                        else if ( LA104_0 == 52 && ( getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 3) || getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 4) ) ) {s = 4;}

                        else if ( LA104_0 == RULE_DOCUMENTATION && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 5) ) {s = 5;}

                        else if ( LA104_0 == RULE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 5) ) {s = 6;}

                        else if ( LA104_0 == 74 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 5) ) {s = 7;}

                        else if ( LA104_0 == 59 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 5) ) {s = 8;}

                        else if ( (LA104_0==EOF||LA104_0==45) ) {s = 9;}

                         
                        input.seek(index104_0);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 104, _s, input);
            error(nvae);
            throw nvae;
        }
    }
 

    
    protected static class FollowSets000 {
        public static final BitSet FOLLOW_1 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_2 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_3 = new BitSet(new long[]{0x0000000000002102L});
        public static final BitSet FOLLOW_4 = new BitSet(new long[]{0x0800000000000182L,0x0000000000000400L});
        public static final BitSet FOLLOW_5 = new BitSet(new long[]{0x0000000000002100L});
        public static final BitSet FOLLOW_6 = new BitSet(new long[]{0x0000D00000000080L});
        public static final BitSet FOLLOW_7 = new BitSet(new long[]{0x0818018000000180L,0x0000000000000400L});
        public static final BitSet FOLLOW_8 = new BitSet(new long[]{0x0000200000000000L});
        public static final BitSet FOLLOW_9 = new BitSet(new long[]{0x0000000000000080L});
        public static final BitSet FOLLOW_10 = new BitSet(new long[]{0x0001000000000000L});
        public static final BitSet FOLLOW_11 = new BitSet(new long[]{0x0001000000000002L});
        public static final BitSet FOLLOW_12 = new BitSet(new long[]{0x0002000000000000L});
        public static final BitSet FOLLOW_13 = new BitSet(new long[]{0x0000000200000090L});
        public static final BitSet FOLLOW_14 = new BitSet(new long[]{0x0004000000000000L});
        public static final BitSet FOLLOW_15 = new BitSet(new long[]{0x0000000000002080L});
        public static final BitSet FOLLOW_16 = new BitSet(new long[]{0x0020000000000000L});
        public static final BitSet FOLLOW_17 = new BitSet(new long[]{0x0000100000000000L});
        public static final BitSet FOLLOW_18 = new BitSet(new long[]{0x00C0400000000000L});
        public static final BitSet FOLLOW_19 = new BitSet(new long[]{0x90001FF880002090L,0x00000000000000A0L});
        public static final BitSet FOLLOW_20 = new BitSet(new long[]{0x0100100000000000L});
        public static final BitSet FOLLOW_21 = new BitSet(new long[]{0x0640400000000000L,0x0000000000000200L});
        public static final BitSet FOLLOW_22 = new BitSet(new long[]{0x0000000000000020L});
        public static final BitSet FOLLOW_23 = new BitSet(new long[]{0x0000000200000000L});
        public static final BitSet FOLLOW_24 = new BitSet(new long[]{0x0000000200000002L});
        public static final BitSet FOLLOW_25 = new BitSet(new long[]{0x90001FF890002090L,0x00000000000009A0L});
        public static final BitSet FOLLOW_26 = new BitSet(new long[]{0x1000000000000080L,0x0000000000000100L});
        public static final BitSet FOLLOW_27 = new BitSet(new long[]{0x0800000000000180L,0x0000000000000400L});
        public static final BitSet FOLLOW_28 = new BitSet(new long[]{0x1000000000000080L});
        public static final BitSet FOLLOW_29 = new BitSet(new long[]{0x1042100000000000L});
        public static final BitSet FOLLOW_30 = new BitSet(new long[]{0x3000000000000080L,0x0000000000000900L});
        public static final BitSet FOLLOW_31 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000800L});
        public static final BitSet FOLLOW_32 = new BitSet(new long[]{0x0002100000000000L});
        public static final BitSet FOLLOW_33 = new BitSet(new long[]{0x00000000000FC000L});
        public static final BitSet FOLLOW_34 = new BitSet(new long[]{0x1000000020000080L,0x0000000000000400L});
        public static final BitSet FOLLOW_35 = new BitSet(new long[]{0x0000000000004000L});
        public static final BitSet FOLLOW_36 = new BitSet(new long[]{0x0000000000000000L,0x0000000000001400L});
        public static final BitSet FOLLOW_37 = new BitSet(new long[]{0x0000000010000000L});
        public static final BitSet FOLLOW_38 = new BitSet(new long[]{0x0001000008000000L});
        public static final BitSet FOLLOW_39 = new BitSet(new long[]{0x2000000000000080L,0x0000000000000800L});
        public static final BitSet FOLLOW_40 = new BitSet(new long[]{0x4000000000000000L});
        public static final BitSet FOLLOW_41 = new BitSet(new long[]{0x8000000000000000L});
        public static final BitSet FOLLOW_42 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000001L});
        public static final BitSet FOLLOW_43 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000001L});
        public static final BitSet FOLLOW_44 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000002L});
        public static final BitSet FOLLOW_45 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000002L});
        public static final BitSet FOLLOW_46 = new BitSet(new long[]{0x000000001FF00000L});
        public static final BitSet FOLLOW_47 = new BitSet(new long[]{0x000000001FF00002L});
        public static final BitSet FOLLOW_48 = new BitSet(new long[]{0x00000000C0000000L});
        public static final BitSet FOLLOW_49 = new BitSet(new long[]{0x00000000C0000002L});
        public static final BitSet FOLLOW_50 = new BitSet(new long[]{0x0000000700000000L});
        public static final BitSet FOLLOW_51 = new BitSet(new long[]{0x0000000700000002L});
        public static final BitSet FOLLOW_52 = new BitSet(new long[]{0x0000000000000000L,0x0000000000002000L});
        public static final BitSet FOLLOW_53 = new BitSet(new long[]{0x0000000000000002L,0x0000000000002000L});
        public static final BitSet FOLLOW_54 = new BitSet(new long[]{0x0000000880000000L});
        public static final BitSet FOLLOW_55 = new BitSet(new long[]{0x10001FC000002090L,0x00000000000000A0L});
        public static final BitSet FOLLOW_56 = new BitSet(new long[]{0x0000003000000000L});
        public static final BitSet FOLLOW_57 = new BitSet(new long[]{0x0000000000000000L,0x000000000000000CL});
        public static final BitSet FOLLOW_58 = new BitSet(new long[]{0x0000000000000002L,0x000000000000000CL});
        public static final BitSet FOLLOW_59 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
        public static final BitSet FOLLOW_60 = new BitSet(new long[]{0x1000000000000000L});
        public static final BitSet FOLLOW_61 = new BitSet(new long[]{0xB0001FF890002090L,0x00000000000009A0L});
        public static final BitSet FOLLOW_62 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000008L});
        public static final BitSet FOLLOW_63 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000010L});
        public static final BitSet FOLLOW_64 = new BitSet(new long[]{0x1000000000000002L});
        public static final BitSet FOLLOW_65 = new BitSet(new long[]{0x0002100000000080L});
        public static final BitSet FOLLOW_66 = new BitSet(new long[]{0x90001FF8A0002090L,0x00000000000014A0L});
        public static final BitSet FOLLOW_67 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
        public static final BitSet FOLLOW_68 = new BitSet(new long[]{0x90003FF8A0002090L,0x00000000000014A0L});
        public static final BitSet FOLLOW_69 = new BitSet(new long[]{0x90001FF8A0002092L,0x00000000000014A0L});
        public static final BitSet FOLLOW_70 = new BitSet(new long[]{0x00000FC000002000L});
        public static final BitSet FOLLOW_71 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
        public static final BitSet FOLLOW_72 = new BitSet(new long[]{0x1100100000000000L});
        public static final BitSet FOLLOW_73 = new BitSet(new long[]{0x1000000010000080L,0x0000000000000900L});
        public static final BitSet FOLLOW_74 = new BitSet(new long[]{0x0000000008000000L});
        public static final BitSet FOLLOW_75 = new BitSet(new long[]{0x2000000000000000L});
        public static final BitSet FOLLOW_76 = new BitSet(new long[]{0x00000000000000E0L,0x0000000000000004L});
        public static final BitSet FOLLOW_77 = new BitSet(new long[]{0x00000000000000E2L});
        public static final BitSet FOLLOW_78 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000004L});
        public static final BitSet FOLLOW_79 = new BitSet(new long[]{0x00000000000000E0L});
        public static final BitSet FOLLOW_80 = new BitSet(new long[]{0x0008000000000002L});
        public static final BitSet FOLLOW_81 = new BitSet(new long[]{0x0010000000000002L});
        public static final BitSet FOLLOW_82 = new BitSet(new long[]{0x0818018000000182L,0x0000000000000400L});
        public static final BitSet FOLLOW_83 = new BitSet(new long[]{0x00C0400000000002L});
        public static final BitSet FOLLOW_84 = new BitSet(new long[]{0x0640400000000002L,0x0000000000000200L});
    }


}

@SuppressWarnings("all")
abstract class InternalSimpleBeeLangTestLanguageParser2 extends InternalSimpleBeeLangTestLanguageParser1 {

        InternalSimpleBeeLangTestLanguageParser2(TokenStream input) {
            this(input, new RecognizerSharedState());
        }

        InternalSimpleBeeLangTestLanguageParser2(TokenStream input, RecognizerSharedState state) {
            super(input, state);
        }

    // $ANTLR start "entryRuleDelegateModel"
    // InternalSimpleBeeLangTestLanguage.g:55:1: entryRuleDelegateModel : ruleDelegateModel EOF ;
    public final void entryRuleDelegateModel() throws RecognitionException {
        int entryRuleDelegateModel_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 1) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:56:1: ( ruleDelegateModel EOF )
            // InternalSimpleBeeLangTestLanguage.g:57:1: ruleDelegateModel EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDelegateModelRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleDelegateModel();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDelegateModelRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 1, entryRuleDelegateModel_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleDelegateModel"


    // $ANTLR start "ruleDelegateModel"
    // InternalSimpleBeeLangTestLanguage.g:64:1: ruleDelegateModel : ( ruleModel ) ;
    public final void ruleDelegateModel() throws RecognitionException {
        int ruleDelegateModel_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 2) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:68:2: ( ( ruleModel ) )
            // InternalSimpleBeeLangTestLanguage.g:69:2: ( ruleModel )
            {
            // InternalSimpleBeeLangTestLanguage.g:69:2: ( ruleModel )
            // InternalSimpleBeeLangTestLanguage.g:70:3: ruleModel
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDelegateModelAccess().getModelParserRuleCall()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleModel();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDelegateModelAccess().getModelParserRuleCall()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 2, ruleDelegateModel_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDelegateModel"


    // $ANTLR start "entryRuleModel"
    // InternalSimpleBeeLangTestLanguage.g:80:1: entryRuleModel : ruleModel EOF ;
    public final void entryRuleModel() throws RecognitionException {
        int entryRuleModel_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 3) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:81:1: ( ruleModel EOF )
            // InternalSimpleBeeLangTestLanguage.g:82:1: ruleModel EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getModelRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleModel();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getModelRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 3, entryRuleModel_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleModel"


    // $ANTLR start "ruleModel"
    // InternalSimpleBeeLangTestLanguage.g:89:1: ruleModel : ( ( rule__Model__Alternatives ) ) ;
    public final void ruleModel() throws RecognitionException {
        int ruleModel_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 4) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:93:2: ( ( ( rule__Model__Alternatives ) ) )
            // InternalSimpleBeeLangTestLanguage.g:94:2: ( ( rule__Model__Alternatives ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:94:2: ( ( rule__Model__Alternatives ) )
            // InternalSimpleBeeLangTestLanguage.g:95:3: ( rule__Model__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getModelAccess().getAlternatives()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:96:3: ( rule__Model__Alternatives )
            // InternalSimpleBeeLangTestLanguage.g:96:4: rule__Model__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Model__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getModelAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 4, ruleModel_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleModel"


    // $ANTLR start "entryRuleUnit"
    // InternalSimpleBeeLangTestLanguage.g:105:1: entryRuleUnit : ruleUnit EOF ;
    public final void entryRuleUnit() throws RecognitionException {
        int entryRuleUnit_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 5) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:106:1: ( ruleUnit EOF )
            // InternalSimpleBeeLangTestLanguage.g:107:1: ruleUnit EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleUnit();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 5, entryRuleUnit_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleUnit"


    // $ANTLR start "ruleUnit"
    // InternalSimpleBeeLangTestLanguage.g:114:1: ruleUnit : ( ( rule__Unit__Group__0 ) ) ;
    public final void ruleUnit() throws RecognitionException {
        int ruleUnit_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 6) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:118:2: ( ( ( rule__Unit__Group__0 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:119:2: ( ( rule__Unit__Group__0 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:119:2: ( ( rule__Unit__Group__0 ) )
            // InternalSimpleBeeLangTestLanguage.g:120:3: ( rule__Unit__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getGroup()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:121:3: ( rule__Unit__Group__0 )
            // InternalSimpleBeeLangTestLanguage.g:121:4: rule__Unit__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Unit__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 6, ruleUnit_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleUnit"


    // $ANTLR start "entryRuleProvidedCapability"
    // InternalSimpleBeeLangTestLanguage.g:130:1: entryRuleProvidedCapability : ruleProvidedCapability EOF ;
    public final void entryRuleProvidedCapability() throws RecognitionException {
        int entryRuleProvidedCapability_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 7) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:131:1: ( ruleProvidedCapability EOF )
            // InternalSimpleBeeLangTestLanguage.g:132:1: ruleProvidedCapability EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProvidedCapabilityRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleProvidedCapability();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getProvidedCapabilityRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 7, entryRuleProvidedCapability_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleProvidedCapability"


    // $ANTLR start "ruleProvidedCapability"
    // InternalSimpleBeeLangTestLanguage.g:139:1: ruleProvidedCapability : ( ( rule__ProvidedCapability__Group__0 ) ) ;
    public final void ruleProvidedCapability() throws RecognitionException {
        int ruleProvidedCapability_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 8) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:143:2: ( ( ( rule__ProvidedCapability__Group__0 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:144:2: ( ( rule__ProvidedCapability__Group__0 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:144:2: ( ( rule__ProvidedCapability__Group__0 ) )
            // InternalSimpleBeeLangTestLanguage.g:145:3: ( rule__ProvidedCapability__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProvidedCapabilityAccess().getGroup()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:146:3: ( rule__ProvidedCapability__Group__0 )
            // InternalSimpleBeeLangTestLanguage.g:146:4: rule__ProvidedCapability__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ProvidedCapability__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getProvidedCapabilityAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 8, ruleProvidedCapability_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleProvidedCapability"


    // $ANTLR start "entryRuleAliasedRequiredCapability"
    // InternalSimpleBeeLangTestLanguage.g:155:1: entryRuleAliasedRequiredCapability : ruleAliasedRequiredCapability EOF ;
    public final void entryRuleAliasedRequiredCapability() throws RecognitionException {
        int entryRuleAliasedRequiredCapability_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 9) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:156:1: ( ruleAliasedRequiredCapability EOF )
            // InternalSimpleBeeLangTestLanguage.g:157:1: ruleAliasedRequiredCapability EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAliasedRequiredCapabilityRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleAliasedRequiredCapability();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAliasedRequiredCapabilityRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 9, entryRuleAliasedRequiredCapability_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleAliasedRequiredCapability"


    // $ANTLR start "ruleAliasedRequiredCapability"
    // InternalSimpleBeeLangTestLanguage.g:164:1: ruleAliasedRequiredCapability : ( ( rule__AliasedRequiredCapability__Group__0 ) ) ;
    public final void ruleAliasedRequiredCapability() throws RecognitionException {
        int ruleAliasedRequiredCapability_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 10) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:168:2: ( ( ( rule__AliasedRequiredCapability__Group__0 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:169:2: ( ( rule__AliasedRequiredCapability__Group__0 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:169:2: ( ( rule__AliasedRequiredCapability__Group__0 ) )
            // InternalSimpleBeeLangTestLanguage.g:170:3: ( rule__AliasedRequiredCapability__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAliasedRequiredCapabilityAccess().getGroup()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:171:3: ( rule__AliasedRequiredCapability__Group__0 )
            // InternalSimpleBeeLangTestLanguage.g:171:4: rule__AliasedRequiredCapability__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AliasedRequiredCapability__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAliasedRequiredCapabilityAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 10, ruleAliasedRequiredCapability_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAliasedRequiredCapability"


    // $ANTLR start "entryRuleRequiredCapability"
    // InternalSimpleBeeLangTestLanguage.g:180:1: entryRuleRequiredCapability : ruleRequiredCapability EOF ;
    public final void entryRuleRequiredCapability() throws RecognitionException {
        int entryRuleRequiredCapability_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 11) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:181:1: ( ruleRequiredCapability EOF )
            // InternalSimpleBeeLangTestLanguage.g:182:1: ruleRequiredCapability EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRequiredCapabilityRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleRequiredCapability();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRequiredCapabilityRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 11, entryRuleRequiredCapability_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleRequiredCapability"


    // $ANTLR start "ruleRequiredCapability"
    // InternalSimpleBeeLangTestLanguage.g:189:1: ruleRequiredCapability : ( ( rule__RequiredCapability__Group__0 ) ) ;
    public final void ruleRequiredCapability() throws RecognitionException {
        int ruleRequiredCapability_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 12) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:193:2: ( ( ( rule__RequiredCapability__Group__0 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:194:2: ( ( rule__RequiredCapability__Group__0 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:194:2: ( ( rule__RequiredCapability__Group__0 ) )
            // InternalSimpleBeeLangTestLanguage.g:195:3: ( rule__RequiredCapability__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRequiredCapabilityAccess().getGroup()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:196:3: ( rule__RequiredCapability__Group__0 )
            // InternalSimpleBeeLangTestLanguage.g:196:4: rule__RequiredCapability__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RequiredCapability__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRequiredCapabilityAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 12, ruleRequiredCapability_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleRequiredCapability"


    // $ANTLR start "entryRulePath"
    // InternalSimpleBeeLangTestLanguage.g:205:1: entryRulePath : rulePath EOF ;
    public final void entryRulePath() throws RecognitionException {
        int entryRulePath_StartIndex = input.index();
         
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 13) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:209:1: ( rulePath EOF )
            // InternalSimpleBeeLangTestLanguage.g:210:1: rulePath EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPathRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            rulePath();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPathRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 13, entryRulePath_StartIndex); }

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRulePath"


    // $ANTLR start "rulePath"
    // InternalSimpleBeeLangTestLanguage.g:220:1: rulePath : ( ( rule__Path__Alternatives ) ) ;
    public final void rulePath() throws RecognitionException {
        int rulePath_StartIndex = input.index();

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 14) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:225:2: ( ( ( rule__Path__Alternatives ) ) )
            // InternalSimpleBeeLangTestLanguage.g:226:2: ( ( rule__Path__Alternatives ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:226:2: ( ( rule__Path__Alternatives ) )
            // InternalSimpleBeeLangTestLanguage.g:227:3: ( rule__Path__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPathAccess().getAlternatives()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:228:3: ( rule__Path__Alternatives )
            // InternalSimpleBeeLangTestLanguage.g:228:4: rule__Path__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Path__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPathAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 14, rulePath_StartIndex); }

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "rulePath"


    // $ANTLR start "entryRuleParameterList"
    // InternalSimpleBeeLangTestLanguage.g:238:1: entryRuleParameterList : ruleParameterList EOF ;
    public final void entryRuleParameterList() throws RecognitionException {
        int entryRuleParameterList_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 15) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:239:1: ( ruleParameterList EOF )
            // InternalSimpleBeeLangTestLanguage.g:240:1: ruleParameterList EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterListRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleParameterList();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterListRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 15, entryRuleParameterList_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleParameterList"


    // $ANTLR start "ruleParameterList"
    // InternalSimpleBeeLangTestLanguage.g:247:1: ruleParameterList : ( ( rule__ParameterList__Group__0 ) ) ;
    public final void ruleParameterList() throws RecognitionException {
        int ruleParameterList_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 16) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:251:2: ( ( ( rule__ParameterList__Group__0 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:252:2: ( ( rule__ParameterList__Group__0 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:252:2: ( ( rule__ParameterList__Group__0 ) )
            // InternalSimpleBeeLangTestLanguage.g:253:3: ( rule__ParameterList__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterListAccess().getGroup()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:254:3: ( rule__ParameterList__Group__0 )
            // InternalSimpleBeeLangTestLanguage.g:254:4: rule__ParameterList__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ParameterList__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterListAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 16, ruleParameterList_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleParameterList"


    // $ANTLR start "entryRuleFirstParameter"
    // InternalSimpleBeeLangTestLanguage.g:263:1: entryRuleFirstParameter : ruleFirstParameter EOF ;
    public final void entryRuleFirstParameter() throws RecognitionException {
        int entryRuleFirstParameter_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 17) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:264:1: ( ruleFirstParameter EOF )
            // InternalSimpleBeeLangTestLanguage.g:265:1: ruleFirstParameter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFirstParameterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleFirstParameter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFirstParameterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 17, entryRuleFirstParameter_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleFirstParameter"


    // $ANTLR start "ruleFirstParameter"
    // InternalSimpleBeeLangTestLanguage.g:272:1: ruleFirstParameter : ( ( rule__FirstParameter__Alternatives ) ) ;
    public final void ruleFirstParameter() throws RecognitionException {
        int ruleFirstParameter_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 18) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:276:2: ( ( ( rule__FirstParameter__Alternatives ) ) )
            // InternalSimpleBeeLangTestLanguage.g:277:2: ( ( rule__FirstParameter__Alternatives ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:277:2: ( ( rule__FirstParameter__Alternatives ) )
            // InternalSimpleBeeLangTestLanguage.g:278:3: ( rule__FirstParameter__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFirstParameterAccess().getAlternatives()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:279:3: ( rule__FirstParameter__Alternatives )
            // InternalSimpleBeeLangTestLanguage.g:279:4: rule__FirstParameter__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FirstParameter__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFirstParameterAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 18, ruleFirstParameter_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFirstParameter"


    // $ANTLR start "entryRuleParameter"
    // InternalSimpleBeeLangTestLanguage.g:288:1: entryRuleParameter : ruleParameter EOF ;
    public final void entryRuleParameter() throws RecognitionException {
        int entryRuleParameter_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 19) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:289:1: ( ruleParameter EOF )
            // InternalSimpleBeeLangTestLanguage.g:290:1: ruleParameter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleParameter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 19, entryRuleParameter_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleParameter"


    // $ANTLR start "ruleParameter"
    // InternalSimpleBeeLangTestLanguage.g:297:1: ruleParameter : ( ( rule__Parameter__ExprAssignment ) ) ;
    public final void ruleParameter() throws RecognitionException {
        int ruleParameter_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 20) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:301:2: ( ( ( rule__Parameter__ExprAssignment ) ) )
            // InternalSimpleBeeLangTestLanguage.g:302:2: ( ( rule__Parameter__ExprAssignment ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:302:2: ( ( rule__Parameter__ExprAssignment ) )
            // InternalSimpleBeeLangTestLanguage.g:303:3: ( rule__Parameter__ExprAssignment )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterAccess().getExprAssignment()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:304:3: ( rule__Parameter__ExprAssignment )
            // InternalSimpleBeeLangTestLanguage.g:304:4: rule__Parameter__ExprAssignment
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Parameter__ExprAssignment();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterAccess().getExprAssignment()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 20, ruleParameter_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleParameter"


    // $ANTLR start "entryRuleClosureParameter"
    // InternalSimpleBeeLangTestLanguage.g:313:1: entryRuleClosureParameter : ruleClosureParameter EOF ;
    public final void entryRuleClosureParameter() throws RecognitionException {
        int entryRuleClosureParameter_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 21) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:314:1: ( ruleClosureParameter EOF )
            // InternalSimpleBeeLangTestLanguage.g:315:1: ruleClosureParameter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureParameterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleClosureParameter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureParameterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 21, entryRuleClosureParameter_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleClosureParameter"


    // $ANTLR start "ruleClosureParameter"
    // InternalSimpleBeeLangTestLanguage.g:322:1: ruleClosureParameter : ( ( rule__ClosureParameter__ExprAssignment ) ) ;
    public final void ruleClosureParameter() throws RecognitionException {
        int ruleClosureParameter_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 22) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:326:2: ( ( ( rule__ClosureParameter__ExprAssignment ) ) )
            // InternalSimpleBeeLangTestLanguage.g:327:2: ( ( rule__ClosureParameter__ExprAssignment ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:327:2: ( ( rule__ClosureParameter__ExprAssignment ) )
            // InternalSimpleBeeLangTestLanguage.g:328:3: ( rule__ClosureParameter__ExprAssignment )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureParameterAccess().getExprAssignment()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:329:3: ( rule__ClosureParameter__ExprAssignment )
            // InternalSimpleBeeLangTestLanguage.g:329:4: rule__ClosureParameter__ExprAssignment
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureParameter__ExprAssignment();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureParameterAccess().getExprAssignment()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 22, ruleClosureParameter_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleClosureParameter"


    // $ANTLR start "entryRuleParameterDeclaration"
    // InternalSimpleBeeLangTestLanguage.g:338:1: entryRuleParameterDeclaration : ruleParameterDeclaration EOF ;
    public final void entryRuleParameterDeclaration() throws RecognitionException {
        int entryRuleParameterDeclaration_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 23) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:339:1: ( ruleParameterDeclaration EOF )
            // InternalSimpleBeeLangTestLanguage.g:340:1: ruleParameterDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterDeclarationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleParameterDeclaration();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterDeclarationRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 23, entryRuleParameterDeclaration_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleParameterDeclaration"


    // $ANTLR start "ruleParameterDeclaration"
    // InternalSimpleBeeLangTestLanguage.g:347:1: ruleParameterDeclaration : ( ( rule__ParameterDeclaration__Group__0 ) ) ;
    public final void ruleParameterDeclaration() throws RecognitionException {
        int ruleParameterDeclaration_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 24) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:351:2: ( ( ( rule__ParameterDeclaration__Group__0 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:352:2: ( ( rule__ParameterDeclaration__Group__0 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:352:2: ( ( rule__ParameterDeclaration__Group__0 ) )
            // InternalSimpleBeeLangTestLanguage.g:353:3: ( rule__ParameterDeclaration__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterDeclarationAccess().getGroup()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:354:3: ( rule__ParameterDeclaration__Group__0 )
            // InternalSimpleBeeLangTestLanguage.g:354:4: rule__ParameterDeclaration__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ParameterDeclaration__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterDeclarationAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 24, ruleParameterDeclaration_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleParameterDeclaration"


    // $ANTLR start "entryRuleFunction"
    // InternalSimpleBeeLangTestLanguage.g:363:1: entryRuleFunction : ruleFunction EOF ;
    public final void entryRuleFunction() throws RecognitionException {
        int entryRuleFunction_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 25) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:364:1: ( ruleFunction EOF )
            // InternalSimpleBeeLangTestLanguage.g:365:1: ruleFunction EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleFunction();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 25, entryRuleFunction_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleFunction"


    // $ANTLR start "ruleFunction"
    // InternalSimpleBeeLangTestLanguage.g:372:1: ruleFunction : ( ( rule__Function__Group__0 ) ) ;
    public final void ruleFunction() throws RecognitionException {
        int ruleFunction_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 26) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:376:2: ( ( ( rule__Function__Group__0 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:377:2: ( ( rule__Function__Group__0 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:377:2: ( ( rule__Function__Group__0 ) )
            // InternalSimpleBeeLangTestLanguage.g:378:3: ( rule__Function__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getGroup()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:379:3: ( rule__Function__Group__0 )
            // InternalSimpleBeeLangTestLanguage.g:379:4: rule__Function__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Function__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 26, ruleFunction_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFunction"


    // $ANTLR start "entryRuleGuardExpression"
    // InternalSimpleBeeLangTestLanguage.g:388:1: entryRuleGuardExpression : ruleGuardExpression EOF ;
    public final void entryRuleGuardExpression() throws RecognitionException {
        int entryRuleGuardExpression_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 27) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:389:1: ( ruleGuardExpression EOF )
            // InternalSimpleBeeLangTestLanguage.g:390:1: ruleGuardExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGuardExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleGuardExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getGuardExpressionRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 27, entryRuleGuardExpression_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleGuardExpression"


    // $ANTLR start "ruleGuardExpression"
    // InternalSimpleBeeLangTestLanguage.g:397:1: ruleGuardExpression : ( ( rule__GuardExpression__Alternatives ) ) ;
    public final void ruleGuardExpression() throws RecognitionException {
        int ruleGuardExpression_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 28) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:401:2: ( ( ( rule__GuardExpression__Alternatives ) ) )
            // InternalSimpleBeeLangTestLanguage.g:402:2: ( ( rule__GuardExpression__Alternatives ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:402:2: ( ( rule__GuardExpression__Alternatives ) )
            // InternalSimpleBeeLangTestLanguage.g:403:3: ( rule__GuardExpression__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGuardExpressionAccess().getAlternatives()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:404:3: ( rule__GuardExpression__Alternatives )
            // InternalSimpleBeeLangTestLanguage.g:404:4: rule__GuardExpression__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__GuardExpression__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getGuardExpressionAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 28, ruleGuardExpression_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleGuardExpression"


    // $ANTLR start "entryRuleAssignmentOperator"
    // InternalSimpleBeeLangTestLanguage.g:413:1: entryRuleAssignmentOperator : ruleAssignmentOperator EOF ;
    public final void entryRuleAssignmentOperator() throws RecognitionException {
        int entryRuleAssignmentOperator_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 29) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:414:1: ( ruleAssignmentOperator EOF )
            // InternalSimpleBeeLangTestLanguage.g:415:1: ruleAssignmentOperator EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAssignmentOperatorRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleAssignmentOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAssignmentOperatorRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 29, entryRuleAssignmentOperator_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleAssignmentOperator"


    // $ANTLR start "ruleAssignmentOperator"
    // InternalSimpleBeeLangTestLanguage.g:422:1: ruleAssignmentOperator : ( ( rule__AssignmentOperator__Alternatives ) ) ;
    public final void ruleAssignmentOperator() throws RecognitionException {
        int ruleAssignmentOperator_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 30) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:426:2: ( ( ( rule__AssignmentOperator__Alternatives ) ) )
            // InternalSimpleBeeLangTestLanguage.g:427:2: ( ( rule__AssignmentOperator__Alternatives ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:427:2: ( ( rule__AssignmentOperator__Alternatives ) )
            // InternalSimpleBeeLangTestLanguage.g:428:3: ( rule__AssignmentOperator__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAssignmentOperatorAccess().getAlternatives()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:429:3: ( rule__AssignmentOperator__Alternatives )
            // InternalSimpleBeeLangTestLanguage.g:429:4: rule__AssignmentOperator__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AssignmentOperator__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAssignmentOperatorAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 30, ruleAssignmentOperator_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAssignmentOperator"


    // $ANTLR start "entryRuleRelationalOperator"
    // InternalSimpleBeeLangTestLanguage.g:438:1: entryRuleRelationalOperator : ruleRelationalOperator EOF ;
    public final void entryRuleRelationalOperator() throws RecognitionException {
        int entryRuleRelationalOperator_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 31) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:439:1: ( ruleRelationalOperator EOF )
            // InternalSimpleBeeLangTestLanguage.g:440:1: ruleRelationalOperator EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRelationalOperatorRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleRelationalOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRelationalOperatorRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 31, entryRuleRelationalOperator_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleRelationalOperator"


    // $ANTLR start "ruleRelationalOperator"
    // InternalSimpleBeeLangTestLanguage.g:447:1: ruleRelationalOperator : ( ( rule__RelationalOperator__Alternatives ) ) ;
    public final void ruleRelationalOperator() throws RecognitionException {
        int ruleRelationalOperator_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 32) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:451:2: ( ( ( rule__RelationalOperator__Alternatives ) ) )
            // InternalSimpleBeeLangTestLanguage.g:452:2: ( ( rule__RelationalOperator__Alternatives ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:452:2: ( ( rule__RelationalOperator__Alternatives ) )
            // InternalSimpleBeeLangTestLanguage.g:453:3: ( rule__RelationalOperator__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRelationalOperatorAccess().getAlternatives()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:454:3: ( rule__RelationalOperator__Alternatives )
            // InternalSimpleBeeLangTestLanguage.g:454:4: rule__RelationalOperator__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RelationalOperator__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRelationalOperatorAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 32, ruleRelationalOperator_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleRelationalOperator"


    // $ANTLR start "entryRuleTopLevelExpression"
    // InternalSimpleBeeLangTestLanguage.g:463:1: entryRuleTopLevelExpression : ruleTopLevelExpression EOF ;
    public final void entryRuleTopLevelExpression() throws RecognitionException {
        int entryRuleTopLevelExpression_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 33) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:464:1: ( ruleTopLevelExpression EOF )
            // InternalSimpleBeeLangTestLanguage.g:465:1: ruleTopLevelExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTopLevelExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleTopLevelExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTopLevelExpressionRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 33, entryRuleTopLevelExpression_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleTopLevelExpression"


    // $ANTLR start "ruleTopLevelExpression"
    // InternalSimpleBeeLangTestLanguage.g:472:1: ruleTopLevelExpression : ( ( rule__TopLevelExpression__Alternatives ) ) ;
    public final void ruleTopLevelExpression() throws RecognitionException {
        int ruleTopLevelExpression_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 34) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:476:2: ( ( ( rule__TopLevelExpression__Alternatives ) ) )
            // InternalSimpleBeeLangTestLanguage.g:477:2: ( ( rule__TopLevelExpression__Alternatives ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:477:2: ( ( rule__TopLevelExpression__Alternatives ) )
            // InternalSimpleBeeLangTestLanguage.g:478:3: ( rule__TopLevelExpression__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTopLevelExpressionAccess().getAlternatives()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:479:3: ( rule__TopLevelExpression__Alternatives )
            // InternalSimpleBeeLangTestLanguage.g:479:4: rule__TopLevelExpression__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TopLevelExpression__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTopLevelExpressionAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 34, ruleTopLevelExpression_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTopLevelExpression"


    // $ANTLR start "entryRuleExpression"
    // InternalSimpleBeeLangTestLanguage.g:488:1: entryRuleExpression : ruleExpression EOF ;
    public final void entryRuleExpression() throws RecognitionException {
        int entryRuleExpression_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 35) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:489:1: ( ruleExpression EOF )
            // InternalSimpleBeeLangTestLanguage.g:490:1: ruleExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 35, entryRuleExpression_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleExpression"


    // $ANTLR start "ruleExpression"
    // InternalSimpleBeeLangTestLanguage.g:497:1: ruleExpression : ( ruleAssignmentExpression ) ;
    public final void ruleExpression() throws RecognitionException {
        int ruleExpression_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 36) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:501:2: ( ( ruleAssignmentExpression ) )
            // InternalSimpleBeeLangTestLanguage.g:502:2: ( ruleAssignmentExpression )
            {
            // InternalSimpleBeeLangTestLanguage.g:502:2: ( ruleAssignmentExpression )
            // InternalSimpleBeeLangTestLanguage.g:503:3: ruleAssignmentExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionAccess().getAssignmentExpressionParserRuleCall()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAssignmentExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionAccess().getAssignmentExpressionParserRuleCall()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 36, ruleExpression_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleExpression"


    // $ANTLR start "entryRuleAssignmentExpression"
    // InternalSimpleBeeLangTestLanguage.g:513:1: entryRuleAssignmentExpression : ruleAssignmentExpression EOF ;
    public final void entryRuleAssignmentExpression() throws RecognitionException {
        int entryRuleAssignmentExpression_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 37) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:514:1: ( ruleAssignmentExpression EOF )
            // InternalSimpleBeeLangTestLanguage.g:515:1: ruleAssignmentExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAssignmentExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleAssignmentExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAssignmentExpressionRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 37, entryRuleAssignmentExpression_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleAssignmentExpression"


    // $ANTLR start "ruleAssignmentExpression"
    // InternalSimpleBeeLangTestLanguage.g:522:1: ruleAssignmentExpression : ( ( rule__AssignmentExpression__Group__0 ) ) ;
    public final void ruleAssignmentExpression() throws RecognitionException {
        int ruleAssignmentExpression_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 38) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:526:2: ( ( ( rule__AssignmentExpression__Group__0 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:527:2: ( ( rule__AssignmentExpression__Group__0 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:527:2: ( ( rule__AssignmentExpression__Group__0 ) )
            // InternalSimpleBeeLangTestLanguage.g:528:3: ( rule__AssignmentExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAssignmentExpressionAccess().getGroup()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:529:3: ( rule__AssignmentExpression__Group__0 )
            // InternalSimpleBeeLangTestLanguage.g:529:4: rule__AssignmentExpression__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AssignmentExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAssignmentExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 38, ruleAssignmentExpression_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAssignmentExpression"


    // $ANTLR start "entryRuleVarDeclaration"
    // InternalSimpleBeeLangTestLanguage.g:538:1: entryRuleVarDeclaration : ruleVarDeclaration EOF ;
    public final void entryRuleVarDeclaration() throws RecognitionException {
        int entryRuleVarDeclaration_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 39) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:539:1: ( ruleVarDeclaration EOF )
            // InternalSimpleBeeLangTestLanguage.g:540:1: ruleVarDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleVarDeclaration();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 39, entryRuleVarDeclaration_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleVarDeclaration"


    // $ANTLR start "ruleVarDeclaration"
    // InternalSimpleBeeLangTestLanguage.g:547:1: ruleVarDeclaration : ( ( rule__VarDeclaration__Group__0 ) ) ;
    public final void ruleVarDeclaration() throws RecognitionException {
        int ruleVarDeclaration_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 40) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:551:2: ( ( ( rule__VarDeclaration__Group__0 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:552:2: ( ( rule__VarDeclaration__Group__0 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:552:2: ( ( rule__VarDeclaration__Group__0 ) )
            // InternalSimpleBeeLangTestLanguage.g:553:3: ( rule__VarDeclaration__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getGroup()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:554:3: ( rule__VarDeclaration__Group__0 )
            // InternalSimpleBeeLangTestLanguage.g:554:4: rule__VarDeclaration__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__VarDeclaration__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 40, ruleVarDeclaration_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleVarDeclaration"


    // $ANTLR start "entryRuleValDeclaration"
    // InternalSimpleBeeLangTestLanguage.g:563:1: entryRuleValDeclaration : ruleValDeclaration EOF ;
    public final void entryRuleValDeclaration() throws RecognitionException {
        int entryRuleValDeclaration_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 41) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:564:1: ( ruleValDeclaration EOF )
            // InternalSimpleBeeLangTestLanguage.g:565:1: ruleValDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValDeclarationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleValDeclaration();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getValDeclarationRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 41, entryRuleValDeclaration_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleValDeclaration"


    // $ANTLR start "ruleValDeclaration"
    // InternalSimpleBeeLangTestLanguage.g:572:1: ruleValDeclaration : ( ( rule__ValDeclaration__Group__0 ) ) ;
    public final void ruleValDeclaration() throws RecognitionException {
        int ruleValDeclaration_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 42) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:576:2: ( ( ( rule__ValDeclaration__Group__0 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:577:2: ( ( rule__ValDeclaration__Group__0 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:577:2: ( ( rule__ValDeclaration__Group__0 ) )
            // InternalSimpleBeeLangTestLanguage.g:578:3: ( rule__ValDeclaration__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValDeclarationAccess().getGroup()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:579:3: ( rule__ValDeclaration__Group__0 )
            // InternalSimpleBeeLangTestLanguage.g:579:4: rule__ValDeclaration__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ValDeclaration__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getValDeclarationAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 42, ruleValDeclaration_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleValDeclaration"


    // $ANTLR start "entryRuleTypeRef"
    // InternalSimpleBeeLangTestLanguage.g:588:1: entryRuleTypeRef : ruleTypeRef EOF ;
    public final void entryRuleTypeRef() throws RecognitionException {
        int entryRuleTypeRef_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 43) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:589:1: ( ruleTypeRef EOF )
            // InternalSimpleBeeLangTestLanguage.g:590:1: ruleTypeRef EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeRefRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleTypeRef();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeRefRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 43, entryRuleTypeRef_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleTypeRef"


    // $ANTLR start "ruleTypeRef"
    // InternalSimpleBeeLangTestLanguage.g:597:1: ruleTypeRef : ( ( rule__TypeRef__Alternatives ) ) ;
    public final void ruleTypeRef() throws RecognitionException {
        int ruleTypeRef_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 44) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:601:2: ( ( ( rule__TypeRef__Alternatives ) ) )
            // InternalSimpleBeeLangTestLanguage.g:602:2: ( ( rule__TypeRef__Alternatives ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:602:2: ( ( rule__TypeRef__Alternatives ) )
            // InternalSimpleBeeLangTestLanguage.g:603:3: ( rule__TypeRef__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeRefAccess().getAlternatives()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:604:3: ( rule__TypeRef__Alternatives )
            // InternalSimpleBeeLangTestLanguage.g:604:4: rule__TypeRef__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeRef__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeRefAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 44, ruleTypeRef_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTypeRef"


    // $ANTLR start "entryRuleSimpleTypeRef"
    // InternalSimpleBeeLangTestLanguage.g:613:1: entryRuleSimpleTypeRef : ruleSimpleTypeRef EOF ;
    public final void entryRuleSimpleTypeRef() throws RecognitionException {
        int entryRuleSimpleTypeRef_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 45) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:614:1: ( ruleSimpleTypeRef EOF )
            // InternalSimpleBeeLangTestLanguage.g:615:1: ruleSimpleTypeRef EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSimpleTypeRefRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleSimpleTypeRef();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSimpleTypeRefRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 45, entryRuleSimpleTypeRef_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleSimpleTypeRef"


    // $ANTLR start "ruleSimpleTypeRef"
    // InternalSimpleBeeLangTestLanguage.g:622:1: ruleSimpleTypeRef : ( ( rule__SimpleTypeRef__Group__0 ) ) ;
    public final void ruleSimpleTypeRef() throws RecognitionException {
        int ruleSimpleTypeRef_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 46) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:626:2: ( ( ( rule__SimpleTypeRef__Group__0 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:627:2: ( ( rule__SimpleTypeRef__Group__0 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:627:2: ( ( rule__SimpleTypeRef__Group__0 ) )
            // InternalSimpleBeeLangTestLanguage.g:628:3: ( rule__SimpleTypeRef__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSimpleTypeRefAccess().getGroup()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:629:3: ( rule__SimpleTypeRef__Group__0 )
            // InternalSimpleBeeLangTestLanguage.g:629:4: rule__SimpleTypeRef__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SimpleTypeRef__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSimpleTypeRefAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 46, ruleSimpleTypeRef_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSimpleTypeRef"


    // $ANTLR start "entryRuleClosureTypeRef"
    // InternalSimpleBeeLangTestLanguage.g:638:1: entryRuleClosureTypeRef : ruleClosureTypeRef EOF ;
    public final void entryRuleClosureTypeRef() throws RecognitionException {
        int entryRuleClosureTypeRef_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 47) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:639:1: ( ruleClosureTypeRef EOF )
            // InternalSimpleBeeLangTestLanguage.g:640:1: ruleClosureTypeRef EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureTypeRefRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleClosureTypeRef();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureTypeRefRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 47, entryRuleClosureTypeRef_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleClosureTypeRef"


    // $ANTLR start "ruleClosureTypeRef"
    // InternalSimpleBeeLangTestLanguage.g:647:1: ruleClosureTypeRef : ( ( rule__ClosureTypeRef__Group__0 ) ) ;
    public final void ruleClosureTypeRef() throws RecognitionException {
        int ruleClosureTypeRef_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 48) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:651:2: ( ( ( rule__ClosureTypeRef__Group__0 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:652:2: ( ( rule__ClosureTypeRef__Group__0 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:652:2: ( ( rule__ClosureTypeRef__Group__0 ) )
            // InternalSimpleBeeLangTestLanguage.g:653:3: ( rule__ClosureTypeRef__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureTypeRefAccess().getGroup()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:654:3: ( rule__ClosureTypeRef__Group__0 )
            // InternalSimpleBeeLangTestLanguage.g:654:4: rule__ClosureTypeRef__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureTypeRef__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureTypeRefAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 48, ruleClosureTypeRef_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleClosureTypeRef"


    // $ANTLR start "entryRuleCachedExpression"
    // InternalSimpleBeeLangTestLanguage.g:663:1: entryRuleCachedExpression : ruleCachedExpression EOF ;
    public final void entryRuleCachedExpression() throws RecognitionException {
        int entryRuleCachedExpression_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 49) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:664:1: ( ruleCachedExpression EOF )
            // InternalSimpleBeeLangTestLanguage.g:665:1: ruleCachedExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCachedExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleCachedExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCachedExpressionRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 49, entryRuleCachedExpression_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleCachedExpression"


    // $ANTLR start "ruleCachedExpression"
    // InternalSimpleBeeLangTestLanguage.g:672:1: ruleCachedExpression : ( ( rule__CachedExpression__Alternatives ) ) ;
    public final void ruleCachedExpression() throws RecognitionException {
        int ruleCachedExpression_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 50) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:676:2: ( ( ( rule__CachedExpression__Alternatives ) ) )
            // InternalSimpleBeeLangTestLanguage.g:677:2: ( ( rule__CachedExpression__Alternatives ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:677:2: ( ( rule__CachedExpression__Alternatives ) )
            // InternalSimpleBeeLangTestLanguage.g:678:3: ( rule__CachedExpression__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCachedExpressionAccess().getAlternatives()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:679:3: ( rule__CachedExpression__Alternatives )
            // InternalSimpleBeeLangTestLanguage.g:679:4: rule__CachedExpression__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__CachedExpression__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCachedExpressionAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 50, ruleCachedExpression_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleCachedExpression"


    // $ANTLR start "entryRuleOrExpression"
    // InternalSimpleBeeLangTestLanguage.g:688:1: entryRuleOrExpression : ruleOrExpression EOF ;
    public final void entryRuleOrExpression() throws RecognitionException {
        int entryRuleOrExpression_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 51) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:689:1: ( ruleOrExpression EOF )
            // InternalSimpleBeeLangTestLanguage.g:690:1: ruleOrExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleOrExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrExpressionRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 51, entryRuleOrExpression_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleOrExpression"


    // $ANTLR start "ruleOrExpression"
    // InternalSimpleBeeLangTestLanguage.g:697:1: ruleOrExpression : ( ( rule__OrExpression__Group__0 ) ) ;
    public final void ruleOrExpression() throws RecognitionException {
        int ruleOrExpression_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 52) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:701:2: ( ( ( rule__OrExpression__Group__0 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:702:2: ( ( rule__OrExpression__Group__0 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:702:2: ( ( rule__OrExpression__Group__0 ) )
            // InternalSimpleBeeLangTestLanguage.g:703:3: ( rule__OrExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrExpressionAccess().getGroup()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:704:3: ( rule__OrExpression__Group__0 )
            // InternalSimpleBeeLangTestLanguage.g:704:4: rule__OrExpression__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 52, ruleOrExpression_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOrExpression"


    // $ANTLR start "entryRuleAndExpression"
    // InternalSimpleBeeLangTestLanguage.g:713:1: entryRuleAndExpression : ruleAndExpression EOF ;
    public final void entryRuleAndExpression() throws RecognitionException {
        int entryRuleAndExpression_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 53) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:714:1: ( ruleAndExpression EOF )
            // InternalSimpleBeeLangTestLanguage.g:715:1: ruleAndExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleAndExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndExpressionRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 53, entryRuleAndExpression_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleAndExpression"


    // $ANTLR start "ruleAndExpression"
    // InternalSimpleBeeLangTestLanguage.g:722:1: ruleAndExpression : ( ( rule__AndExpression__Group__0 ) ) ;
    public final void ruleAndExpression() throws RecognitionException {
        int ruleAndExpression_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 54) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:726:2: ( ( ( rule__AndExpression__Group__0 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:727:2: ( ( rule__AndExpression__Group__0 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:727:2: ( ( rule__AndExpression__Group__0 ) )
            // InternalSimpleBeeLangTestLanguage.g:728:3: ( rule__AndExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndExpressionAccess().getGroup()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:729:3: ( rule__AndExpression__Group__0 )
            // InternalSimpleBeeLangTestLanguage.g:729:4: rule__AndExpression__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 54, ruleAndExpression_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAndExpression"


    // $ANTLR start "entryRuleRelationalExpression"
    // InternalSimpleBeeLangTestLanguage.g:738:1: entryRuleRelationalExpression : ruleRelationalExpression EOF ;
    public final void entryRuleRelationalExpression() throws RecognitionException {
        int entryRuleRelationalExpression_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 55) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:739:1: ( ruleRelationalExpression EOF )
            // InternalSimpleBeeLangTestLanguage.g:740:1: ruleRelationalExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRelationalExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleRelationalExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRelationalExpressionRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 55, entryRuleRelationalExpression_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleRelationalExpression"


    // $ANTLR start "ruleRelationalExpression"
    // InternalSimpleBeeLangTestLanguage.g:747:1: ruleRelationalExpression : ( ( rule__RelationalExpression__Group__0 ) ) ;
    public final void ruleRelationalExpression() throws RecognitionException {
        int ruleRelationalExpression_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 56) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:751:2: ( ( ( rule__RelationalExpression__Group__0 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:752:2: ( ( rule__RelationalExpression__Group__0 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:752:2: ( ( rule__RelationalExpression__Group__0 ) )
            // InternalSimpleBeeLangTestLanguage.g:753:3: ( rule__RelationalExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRelationalExpressionAccess().getGroup()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:754:3: ( rule__RelationalExpression__Group__0 )
            // InternalSimpleBeeLangTestLanguage.g:754:4: rule__RelationalExpression__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RelationalExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRelationalExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 56, ruleRelationalExpression_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleRelationalExpression"


    // $ANTLR start "entryRuleAdditiveExpression"
    // InternalSimpleBeeLangTestLanguage.g:763:1: entryRuleAdditiveExpression : ruleAdditiveExpression EOF ;
    public final void entryRuleAdditiveExpression() throws RecognitionException {
        int entryRuleAdditiveExpression_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 57) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:764:1: ( ruleAdditiveExpression EOF )
            // InternalSimpleBeeLangTestLanguage.g:765:1: ruleAdditiveExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAdditiveExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleAdditiveExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAdditiveExpressionRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 57, entryRuleAdditiveExpression_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleAdditiveExpression"


    // $ANTLR start "ruleAdditiveExpression"
    // InternalSimpleBeeLangTestLanguage.g:772:1: ruleAdditiveExpression : ( ( rule__AdditiveExpression__Group__0 ) ) ;
    public final void ruleAdditiveExpression() throws RecognitionException {
        int ruleAdditiveExpression_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 58) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:776:2: ( ( ( rule__AdditiveExpression__Group__0 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:777:2: ( ( rule__AdditiveExpression__Group__0 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:777:2: ( ( rule__AdditiveExpression__Group__0 ) )
            // InternalSimpleBeeLangTestLanguage.g:778:3: ( rule__AdditiveExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAdditiveExpressionAccess().getGroup()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:779:3: ( rule__AdditiveExpression__Group__0 )
            // InternalSimpleBeeLangTestLanguage.g:779:4: rule__AdditiveExpression__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AdditiveExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAdditiveExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 58, ruleAdditiveExpression_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAdditiveExpression"


    // $ANTLR start "entryRuleMultiplicativeExpression"
    // InternalSimpleBeeLangTestLanguage.g:788:1: entryRuleMultiplicativeExpression : ruleMultiplicativeExpression EOF ;
    public final void entryRuleMultiplicativeExpression() throws RecognitionException {
        int entryRuleMultiplicativeExpression_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 59) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:789:1: ( ruleMultiplicativeExpression EOF )
            // InternalSimpleBeeLangTestLanguage.g:790:1: ruleMultiplicativeExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMultiplicativeExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleMultiplicativeExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMultiplicativeExpressionRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 59, entryRuleMultiplicativeExpression_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleMultiplicativeExpression"


    // $ANTLR start "ruleMultiplicativeExpression"
    // InternalSimpleBeeLangTestLanguage.g:797:1: ruleMultiplicativeExpression : ( ( rule__MultiplicativeExpression__Group__0 ) ) ;
    public final void ruleMultiplicativeExpression() throws RecognitionException {
        int ruleMultiplicativeExpression_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 60) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:801:2: ( ( ( rule__MultiplicativeExpression__Group__0 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:802:2: ( ( rule__MultiplicativeExpression__Group__0 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:802:2: ( ( rule__MultiplicativeExpression__Group__0 ) )
            // InternalSimpleBeeLangTestLanguage.g:803:3: ( rule__MultiplicativeExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMultiplicativeExpressionAccess().getGroup()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:804:3: ( rule__MultiplicativeExpression__Group__0 )
            // InternalSimpleBeeLangTestLanguage.g:804:4: rule__MultiplicativeExpression__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MultiplicativeExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMultiplicativeExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 60, ruleMultiplicativeExpression_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleMultiplicativeExpression"


    // $ANTLR start "entryRuleSetExpression"
    // InternalSimpleBeeLangTestLanguage.g:813:1: entryRuleSetExpression : ruleSetExpression EOF ;
    public final void entryRuleSetExpression() throws RecognitionException {
        int entryRuleSetExpression_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 61) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:814:1: ( ruleSetExpression EOF )
            // InternalSimpleBeeLangTestLanguage.g:815:1: ruleSetExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSetExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleSetExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSetExpressionRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 61, entryRuleSetExpression_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleSetExpression"


    // $ANTLR start "ruleSetExpression"
    // InternalSimpleBeeLangTestLanguage.g:822:1: ruleSetExpression : ( ( rule__SetExpression__Group__0 ) ) ;
    public final void ruleSetExpression() throws RecognitionException {
        int ruleSetExpression_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 62) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:826:2: ( ( ( rule__SetExpression__Group__0 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:827:2: ( ( rule__SetExpression__Group__0 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:827:2: ( ( rule__SetExpression__Group__0 ) )
            // InternalSimpleBeeLangTestLanguage.g:828:3: ( rule__SetExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSetExpressionAccess().getGroup()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:829:3: ( rule__SetExpression__Group__0 )
            // InternalSimpleBeeLangTestLanguage.g:829:4: rule__SetExpression__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SetExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSetExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 62, ruleSetExpression_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSetExpression"


    // $ANTLR start "entryRuleUnaryOrInfixExpression"
    // InternalSimpleBeeLangTestLanguage.g:838:1: entryRuleUnaryOrInfixExpression : ruleUnaryOrInfixExpression EOF ;
    public final void entryRuleUnaryOrInfixExpression() throws RecognitionException {
        int entryRuleUnaryOrInfixExpression_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 63) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:839:1: ( ruleUnaryOrInfixExpression EOF )
            // InternalSimpleBeeLangTestLanguage.g:840:1: ruleUnaryOrInfixExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnaryOrInfixExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleUnaryOrInfixExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnaryOrInfixExpressionRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 63, entryRuleUnaryOrInfixExpression_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleUnaryOrInfixExpression"


    // $ANTLR start "ruleUnaryOrInfixExpression"
    // InternalSimpleBeeLangTestLanguage.g:847:1: ruleUnaryOrInfixExpression : ( ( rule__UnaryOrInfixExpression__Alternatives ) ) ;
    public final void ruleUnaryOrInfixExpression() throws RecognitionException {
        int ruleUnaryOrInfixExpression_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 64) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:851:2: ( ( ( rule__UnaryOrInfixExpression__Alternatives ) ) )
            // InternalSimpleBeeLangTestLanguage.g:852:2: ( ( rule__UnaryOrInfixExpression__Alternatives ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:852:2: ( ( rule__UnaryOrInfixExpression__Alternatives ) )
            // InternalSimpleBeeLangTestLanguage.g:853:3: ( rule__UnaryOrInfixExpression__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnaryOrInfixExpressionAccess().getAlternatives()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:854:3: ( rule__UnaryOrInfixExpression__Alternatives )
            // InternalSimpleBeeLangTestLanguage.g:854:4: rule__UnaryOrInfixExpression__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__UnaryOrInfixExpression__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnaryOrInfixExpressionAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 64, ruleUnaryOrInfixExpression_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleUnaryOrInfixExpression"


    // $ANTLR start "entryRuleUnaryExpression"
    // InternalSimpleBeeLangTestLanguage.g:863:1: entryRuleUnaryExpression : ruleUnaryExpression EOF ;
    public final void entryRuleUnaryExpression() throws RecognitionException {
        int entryRuleUnaryExpression_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 65) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:864:1: ( ruleUnaryExpression EOF )
            // InternalSimpleBeeLangTestLanguage.g:865:1: ruleUnaryExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnaryExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleUnaryExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnaryExpressionRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 65, entryRuleUnaryExpression_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleUnaryExpression"


    // $ANTLR start "ruleUnaryExpression"
    // InternalSimpleBeeLangTestLanguage.g:872:1: ruleUnaryExpression : ( ( rule__UnaryExpression__Group__0 ) ) ;
    public final void ruleUnaryExpression() throws RecognitionException {
        int ruleUnaryExpression_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 66) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:876:2: ( ( ( rule__UnaryExpression__Group__0 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:877:2: ( ( rule__UnaryExpression__Group__0 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:877:2: ( ( rule__UnaryExpression__Group__0 ) )
            // InternalSimpleBeeLangTestLanguage.g:878:3: ( rule__UnaryExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnaryExpressionAccess().getGroup()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:879:3: ( rule__UnaryExpression__Group__0 )
            // InternalSimpleBeeLangTestLanguage.g:879:4: rule__UnaryExpression__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__UnaryExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnaryExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 66, ruleUnaryExpression_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleUnaryExpression"


    // $ANTLR start "entryRulePreopExpression"
    // InternalSimpleBeeLangTestLanguage.g:888:1: entryRulePreopExpression : rulePreopExpression EOF ;
    public final void entryRulePreopExpression() throws RecognitionException {
        int entryRulePreopExpression_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 67) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:889:1: ( rulePreopExpression EOF )
            // InternalSimpleBeeLangTestLanguage.g:890:1: rulePreopExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPreopExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            rulePreopExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPreopExpressionRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 67, entryRulePreopExpression_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRulePreopExpression"


    // $ANTLR start "rulePreopExpression"
    // InternalSimpleBeeLangTestLanguage.g:897:1: rulePreopExpression : ( ( rule__PreopExpression__Group__0 ) ) ;
    public final void rulePreopExpression() throws RecognitionException {
        int rulePreopExpression_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 68) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:901:2: ( ( ( rule__PreopExpression__Group__0 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:902:2: ( ( rule__PreopExpression__Group__0 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:902:2: ( ( rule__PreopExpression__Group__0 ) )
            // InternalSimpleBeeLangTestLanguage.g:903:3: ( rule__PreopExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPreopExpressionAccess().getGroup()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:904:3: ( rule__PreopExpression__Group__0 )
            // InternalSimpleBeeLangTestLanguage.g:904:4: rule__PreopExpression__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__PreopExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPreopExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 68, rulePreopExpression_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePreopExpression"


    // $ANTLR start "entryRulePostopExpression"
    // InternalSimpleBeeLangTestLanguage.g:913:1: entryRulePostopExpression : rulePostopExpression EOF ;
    public final void entryRulePostopExpression() throws RecognitionException {
        int entryRulePostopExpression_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 69) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:914:1: ( rulePostopExpression EOF )
            // InternalSimpleBeeLangTestLanguage.g:915:1: rulePostopExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPostopExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            rulePostopExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPostopExpressionRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 69, entryRulePostopExpression_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRulePostopExpression"


    // $ANTLR start "rulePostopExpression"
    // InternalSimpleBeeLangTestLanguage.g:922:1: rulePostopExpression : ( ( rule__PostopExpression__Group__0 ) ) ;
    public final void rulePostopExpression() throws RecognitionException {
        int rulePostopExpression_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 70) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:926:2: ( ( ( rule__PostopExpression__Group__0 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:927:2: ( ( rule__PostopExpression__Group__0 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:927:2: ( ( rule__PostopExpression__Group__0 ) )
            // InternalSimpleBeeLangTestLanguage.g:928:3: ( rule__PostopExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPostopExpressionAccess().getGroup()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:929:3: ( rule__PostopExpression__Group__0 )
            // InternalSimpleBeeLangTestLanguage.g:929:4: rule__PostopExpression__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__PostopExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPostopExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 70, rulePostopExpression_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePostopExpression"


    // $ANTLR start "entryRuleInfixExpression"
    // InternalSimpleBeeLangTestLanguage.g:938:1: entryRuleInfixExpression : ruleInfixExpression EOF ;
    public final void entryRuleInfixExpression() throws RecognitionException {
        int entryRuleInfixExpression_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 71) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:939:1: ( ruleInfixExpression EOF )
            // InternalSimpleBeeLangTestLanguage.g:940:1: ruleInfixExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInfixExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleInfixExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInfixExpressionRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 71, entryRuleInfixExpression_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleInfixExpression"


    // $ANTLR start "ruleInfixExpression"
    // InternalSimpleBeeLangTestLanguage.g:947:1: ruleInfixExpression : ( ( rule__InfixExpression__Group__0 ) ) ;
    public final void ruleInfixExpression() throws RecognitionException {
        int ruleInfixExpression_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 72) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:951:2: ( ( ( rule__InfixExpression__Group__0 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:952:2: ( ( rule__InfixExpression__Group__0 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:952:2: ( ( rule__InfixExpression__Group__0 ) )
            // InternalSimpleBeeLangTestLanguage.g:953:3: ( rule__InfixExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInfixExpressionAccess().getGroup()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:954:3: ( rule__InfixExpression__Group__0 )
            // InternalSimpleBeeLangTestLanguage.g:954:4: rule__InfixExpression__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__InfixExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInfixExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 72, ruleInfixExpression_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleInfixExpression"


    // $ANTLR start "entryRuleCallExpression"
    // InternalSimpleBeeLangTestLanguage.g:963:1: entryRuleCallExpression : ruleCallExpression EOF ;
    public final void entryRuleCallExpression() throws RecognitionException {
        int entryRuleCallExpression_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 73) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:964:1: ( ruleCallExpression EOF )
            // InternalSimpleBeeLangTestLanguage.g:965:1: ruleCallExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCallExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleCallExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCallExpressionRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 73, entryRuleCallExpression_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleCallExpression"


    // $ANTLR start "ruleCallExpression"
    // InternalSimpleBeeLangTestLanguage.g:972:1: ruleCallExpression : ( ( rule__CallExpression__Group__0 ) ) ;
    public final void ruleCallExpression() throws RecognitionException {
        int ruleCallExpression_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 74) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:976:2: ( ( ( rule__CallExpression__Group__0 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:977:2: ( ( rule__CallExpression__Group__0 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:977:2: ( ( rule__CallExpression__Group__0 ) )
            // InternalSimpleBeeLangTestLanguage.g:978:3: ( rule__CallExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCallExpressionAccess().getGroup()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:979:3: ( rule__CallExpression__Group__0 )
            // InternalSimpleBeeLangTestLanguage.g:979:4: rule__CallExpression__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__CallExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCallExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 74, ruleCallExpression_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleCallExpression"


    // $ANTLR start "entryRulePrimaryExpression"
    // InternalSimpleBeeLangTestLanguage.g:988:1: entryRulePrimaryExpression : rulePrimaryExpression EOF ;
    public final void entryRulePrimaryExpression() throws RecognitionException {
        int entryRulePrimaryExpression_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 75) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:989:1: ( rulePrimaryExpression EOF )
            // InternalSimpleBeeLangTestLanguage.g:990:1: rulePrimaryExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimaryExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            rulePrimaryExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimaryExpressionRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 75, entryRulePrimaryExpression_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRulePrimaryExpression"


    // $ANTLR start "rulePrimaryExpression"
    // InternalSimpleBeeLangTestLanguage.g:997:1: rulePrimaryExpression : ( ( rule__PrimaryExpression__Alternatives ) ) ;
    public final void rulePrimaryExpression() throws RecognitionException {
        int rulePrimaryExpression_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 76) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:1001:2: ( ( ( rule__PrimaryExpression__Alternatives ) ) )
            // InternalSimpleBeeLangTestLanguage.g:1002:2: ( ( rule__PrimaryExpression__Alternatives ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:1002:2: ( ( rule__PrimaryExpression__Alternatives ) )
            // InternalSimpleBeeLangTestLanguage.g:1003:3: ( rule__PrimaryExpression__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimaryExpressionAccess().getAlternatives()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:1004:3: ( rule__PrimaryExpression__Alternatives )
            // InternalSimpleBeeLangTestLanguage.g:1004:4: rule__PrimaryExpression__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__PrimaryExpression__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimaryExpressionAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 76, rulePrimaryExpression_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePrimaryExpression"


    // $ANTLR start "entryRuleWithExpression"
    // InternalSimpleBeeLangTestLanguage.g:1013:1: entryRuleWithExpression : ruleWithExpression EOF ;
    public final void entryRuleWithExpression() throws RecognitionException {
        int entryRuleWithExpression_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 77) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:1014:1: ( ruleWithExpression EOF )
            // InternalSimpleBeeLangTestLanguage.g:1015:1: ruleWithExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleWithExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithExpressionRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 77, entryRuleWithExpression_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleWithExpression"


    // $ANTLR start "ruleWithExpression"
    // InternalSimpleBeeLangTestLanguage.g:1022:1: ruleWithExpression : ( ( rule__WithExpression__Group__0 ) ) ;
    public final void ruleWithExpression() throws RecognitionException {
        int ruleWithExpression_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 78) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:1026:2: ( ( ( rule__WithExpression__Group__0 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:1027:2: ( ( rule__WithExpression__Group__0 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:1027:2: ( ( rule__WithExpression__Group__0 ) )
            // InternalSimpleBeeLangTestLanguage.g:1028:3: ( rule__WithExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithExpressionAccess().getGroup()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:1029:3: ( rule__WithExpression__Group__0 )
            // InternalSimpleBeeLangTestLanguage.g:1029:4: rule__WithExpression__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__WithExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 78, ruleWithExpression_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleWithExpression"


    // $ANTLR start "entryRuleWithContextExpression"
    // InternalSimpleBeeLangTestLanguage.g:1038:1: entryRuleWithContextExpression : ruleWithContextExpression EOF ;
    public final void entryRuleWithContextExpression() throws RecognitionException {
        int entryRuleWithContextExpression_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 79) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:1039:1: ( ruleWithContextExpression EOF )
            // InternalSimpleBeeLangTestLanguage.g:1040:1: ruleWithContextExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithContextExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleWithContextExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithContextExpressionRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 79, entryRuleWithContextExpression_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleWithContextExpression"


    // $ANTLR start "ruleWithContextExpression"
    // InternalSimpleBeeLangTestLanguage.g:1047:1: ruleWithContextExpression : ( ( rule__WithContextExpression__Group__0 ) ) ;
    public final void ruleWithContextExpression() throws RecognitionException {
        int ruleWithContextExpression_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 80) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:1051:2: ( ( ( rule__WithContextExpression__Group__0 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:1052:2: ( ( rule__WithContextExpression__Group__0 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:1052:2: ( ( rule__WithContextExpression__Group__0 ) )
            // InternalSimpleBeeLangTestLanguage.g:1053:3: ( rule__WithContextExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithContextExpressionAccess().getGroup()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:1054:3: ( rule__WithContextExpression__Group__0 )
            // InternalSimpleBeeLangTestLanguage.g:1054:4: rule__WithContextExpression__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__WithContextExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithContextExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 80, ruleWithContextExpression_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleWithContextExpression"


    // $ANTLR start "entryRuleBlockExpression"
    // InternalSimpleBeeLangTestLanguage.g:1063:1: entryRuleBlockExpression : ruleBlockExpression EOF ;
    public final void entryRuleBlockExpression() throws RecognitionException {
        int entryRuleBlockExpression_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 81) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:1064:1: ( ruleBlockExpression EOF )
            // InternalSimpleBeeLangTestLanguage.g:1065:1: ruleBlockExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBlockExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleBlockExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBlockExpressionRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 81, entryRuleBlockExpression_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleBlockExpression"


    // $ANTLR start "ruleBlockExpression"
    // InternalSimpleBeeLangTestLanguage.g:1072:1: ruleBlockExpression : ( ( rule__BlockExpression__Group__0 ) ) ;
    public final void ruleBlockExpression() throws RecognitionException {
        int ruleBlockExpression_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 82) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:1076:2: ( ( ( rule__BlockExpression__Group__0 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:1077:2: ( ( rule__BlockExpression__Group__0 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:1077:2: ( ( rule__BlockExpression__Group__0 ) )
            // InternalSimpleBeeLangTestLanguage.g:1078:3: ( rule__BlockExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBlockExpressionAccess().getGroup()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:1079:3: ( rule__BlockExpression__Group__0 )
            // InternalSimpleBeeLangTestLanguage.g:1079:4: rule__BlockExpression__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BlockExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBlockExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 82, ruleBlockExpression_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleBlockExpression"


    // $ANTLR start "entryRuleValue"
    // InternalSimpleBeeLangTestLanguage.g:1088:1: entryRuleValue : ruleValue EOF ;
    public final void entryRuleValue() throws RecognitionException {
        int entryRuleValue_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 83) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:1089:1: ( ruleValue EOF )
            // InternalSimpleBeeLangTestLanguage.g:1090:1: ruleValue EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getValueRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 83, entryRuleValue_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleValue"


    // $ANTLR start "ruleValue"
    // InternalSimpleBeeLangTestLanguage.g:1097:1: ruleValue : ( ( rule__Value__Group__0 ) ) ;
    public final void ruleValue() throws RecognitionException {
        int ruleValue_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 84) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:1101:2: ( ( ( rule__Value__Group__0 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:1102:2: ( ( rule__Value__Group__0 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:1102:2: ( ( rule__Value__Group__0 ) )
            // InternalSimpleBeeLangTestLanguage.g:1103:3: ( rule__Value__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValueAccess().getGroup()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:1104:3: ( rule__Value__Group__0 )
            // InternalSimpleBeeLangTestLanguage.g:1104:4: rule__Value__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Value__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getValueAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 84, ruleValue_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleValue"


    // $ANTLR start "entryRuleKeywordVariables"
    // InternalSimpleBeeLangTestLanguage.g:1113:1: entryRuleKeywordVariables : ruleKeywordVariables EOF ;
    public final void entryRuleKeywordVariables() throws RecognitionException {
        int entryRuleKeywordVariables_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 85) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:1114:1: ( ruleKeywordVariables EOF )
            // InternalSimpleBeeLangTestLanguage.g:1115:1: ruleKeywordVariables EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getKeywordVariablesRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleKeywordVariables();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getKeywordVariablesRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 85, entryRuleKeywordVariables_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleKeywordVariables"


    // $ANTLR start "ruleKeywordVariables"
    // InternalSimpleBeeLangTestLanguage.g:1122:1: ruleKeywordVariables : ( ( rule__KeywordVariables__Group__0 ) ) ;
    public final void ruleKeywordVariables() throws RecognitionException {
        int ruleKeywordVariables_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 86) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:1126:2: ( ( ( rule__KeywordVariables__Group__0 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:1127:2: ( ( rule__KeywordVariables__Group__0 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:1127:2: ( ( rule__KeywordVariables__Group__0 ) )
            // InternalSimpleBeeLangTestLanguage.g:1128:3: ( rule__KeywordVariables__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getKeywordVariablesAccess().getGroup()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:1129:3: ( rule__KeywordVariables__Group__0 )
            // InternalSimpleBeeLangTestLanguage.g:1129:4: rule__KeywordVariables__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__KeywordVariables__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getKeywordVariablesAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 86, ruleKeywordVariables_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleKeywordVariables"


    // $ANTLR start "entryRuleFeatureCall"
    // InternalSimpleBeeLangTestLanguage.g:1138:1: entryRuleFeatureCall : ruleFeatureCall EOF ;
    public final void entryRuleFeatureCall() throws RecognitionException {
        int entryRuleFeatureCall_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 87) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:1139:1: ( ruleFeatureCall EOF )
            // InternalSimpleBeeLangTestLanguage.g:1140:1: ruleFeatureCall EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFeatureCallRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleFeatureCall();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFeatureCallRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 87, entryRuleFeatureCall_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleFeatureCall"


    // $ANTLR start "ruleFeatureCall"
    // InternalSimpleBeeLangTestLanguage.g:1147:1: ruleFeatureCall : ( ruleOperationCall ) ;
    public final void ruleFeatureCall() throws RecognitionException {
        int ruleFeatureCall_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 88) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:1151:2: ( ( ruleOperationCall ) )
            // InternalSimpleBeeLangTestLanguage.g:1152:2: ( ruleOperationCall )
            {
            // InternalSimpleBeeLangTestLanguage.g:1152:2: ( ruleOperationCall )
            // InternalSimpleBeeLangTestLanguage.g:1153:3: ruleOperationCall
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFeatureCallAccess().getOperationCallParserRuleCall()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleOperationCall();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFeatureCallAccess().getOperationCallParserRuleCall()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 88, ruleFeatureCall_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFeatureCall"


    // $ANTLR start "entryRuleOperationCall"
    // InternalSimpleBeeLangTestLanguage.g:1163:1: entryRuleOperationCall : ruleOperationCall EOF ;
    public final void entryRuleOperationCall() throws RecognitionException {
        int entryRuleOperationCall_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 89) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:1164:1: ( ruleOperationCall EOF )
            // InternalSimpleBeeLangTestLanguage.g:1165:1: ruleOperationCall EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperationCallRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleOperationCall();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperationCallRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 89, entryRuleOperationCall_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleOperationCall"


    // $ANTLR start "ruleOperationCall"
    // InternalSimpleBeeLangTestLanguage.g:1172:1: ruleOperationCall : ( ( rule__OperationCall__Group__0 ) ) ;
    public final void ruleOperationCall() throws RecognitionException {
        int ruleOperationCall_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 90) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:1176:2: ( ( ( rule__OperationCall__Group__0 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:1177:2: ( ( rule__OperationCall__Group__0 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:1177:2: ( ( rule__OperationCall__Group__0 ) )
            // InternalSimpleBeeLangTestLanguage.g:1178:3: ( rule__OperationCall__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperationCallAccess().getGroup()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:1179:3: ( rule__OperationCall__Group__0 )
            // InternalSimpleBeeLangTestLanguage.g:1179:4: rule__OperationCall__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OperationCall__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperationCallAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 90, ruleOperationCall_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOperationCall"


    // $ANTLR start "entryRuleConstructorCallExpression"
    // InternalSimpleBeeLangTestLanguage.g:1188:1: entryRuleConstructorCallExpression : ruleConstructorCallExpression EOF ;
    public final void entryRuleConstructorCallExpression() throws RecognitionException {
        int entryRuleConstructorCallExpression_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 91) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:1189:1: ( ruleConstructorCallExpression EOF )
            // InternalSimpleBeeLangTestLanguage.g:1190:1: ruleConstructorCallExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConstructorCallExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleConstructorCallExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConstructorCallExpressionRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 91, entryRuleConstructorCallExpression_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleConstructorCallExpression"


    // $ANTLR start "ruleConstructorCallExpression"
    // InternalSimpleBeeLangTestLanguage.g:1197:1: ruleConstructorCallExpression : ( ( rule__ConstructorCallExpression__Group__0 ) ) ;
    public final void ruleConstructorCallExpression() throws RecognitionException {
        int ruleConstructorCallExpression_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 92) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:1201:2: ( ( ( rule__ConstructorCallExpression__Group__0 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:1202:2: ( ( rule__ConstructorCallExpression__Group__0 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:1202:2: ( ( rule__ConstructorCallExpression__Group__0 ) )
            // InternalSimpleBeeLangTestLanguage.g:1203:3: ( rule__ConstructorCallExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConstructorCallExpressionAccess().getGroup()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:1204:3: ( rule__ConstructorCallExpression__Group__0 )
            // InternalSimpleBeeLangTestLanguage.g:1204:4: rule__ConstructorCallExpression__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConstructorCallExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConstructorCallExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 92, ruleConstructorCallExpression_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleConstructorCallExpression"


    // $ANTLR start "entryRuleInitializationBlockExpression"
    // InternalSimpleBeeLangTestLanguage.g:1213:1: entryRuleInitializationBlockExpression : ruleInitializationBlockExpression EOF ;
    public final void entryRuleInitializationBlockExpression() throws RecognitionException {
        int entryRuleInitializationBlockExpression_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 93) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:1214:1: ( ruleInitializationBlockExpression EOF )
            // InternalSimpleBeeLangTestLanguage.g:1215:1: ruleInitializationBlockExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInitializationBlockExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleInitializationBlockExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInitializationBlockExpressionRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 93, entryRuleInitializationBlockExpression_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleInitializationBlockExpression"


    // $ANTLR start "ruleInitializationBlockExpression"
    // InternalSimpleBeeLangTestLanguage.g:1222:1: ruleInitializationBlockExpression : ( ( rule__InitializationBlockExpression__Group__0 ) ) ;
    public final void ruleInitializationBlockExpression() throws RecognitionException {
        int ruleInitializationBlockExpression_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 94) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:1226:2: ( ( ( rule__InitializationBlockExpression__Group__0 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:1227:2: ( ( rule__InitializationBlockExpression__Group__0 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:1227:2: ( ( rule__InitializationBlockExpression__Group__0 ) )
            // InternalSimpleBeeLangTestLanguage.g:1228:3: ( rule__InitializationBlockExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInitializationBlockExpressionAccess().getGroup()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:1229:3: ( rule__InitializationBlockExpression__Group__0 )
            // InternalSimpleBeeLangTestLanguage.g:1229:4: rule__InitializationBlockExpression__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__InitializationBlockExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInitializationBlockExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 94, ruleInitializationBlockExpression_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleInitializationBlockExpression"


    // $ANTLR start "entryRuleInitializationExpression"
    // InternalSimpleBeeLangTestLanguage.g:1238:1: entryRuleInitializationExpression : ruleInitializationExpression EOF ;
    public final void entryRuleInitializationExpression() throws RecognitionException {
        int entryRuleInitializationExpression_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 95) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:1239:1: ( ruleInitializationExpression EOF )
            // InternalSimpleBeeLangTestLanguage.g:1240:1: ruleInitializationExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInitializationExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleInitializationExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInitializationExpressionRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 95, entryRuleInitializationExpression_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleInitializationExpression"


    // $ANTLR start "ruleInitializationExpression"
    // InternalSimpleBeeLangTestLanguage.g:1247:1: ruleInitializationExpression : ( ( rule__InitializationExpression__Group__0 ) ) ;
    public final void ruleInitializationExpression() throws RecognitionException {
        int ruleInitializationExpression_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 96) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:1251:2: ( ( ( rule__InitializationExpression__Group__0 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:1252:2: ( ( rule__InitializationExpression__Group__0 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:1252:2: ( ( rule__InitializationExpression__Group__0 ) )
            // InternalSimpleBeeLangTestLanguage.g:1253:3: ( rule__InitializationExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInitializationExpressionAccess().getGroup()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:1254:3: ( rule__InitializationExpression__Group__0 )
            // InternalSimpleBeeLangTestLanguage.g:1254:4: rule__InitializationExpression__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__InitializationExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInitializationExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 96, ruleInitializationExpression_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleInitializationExpression"


    // $ANTLR start "entryRuleFeatureOfThis"
    // InternalSimpleBeeLangTestLanguage.g:1263:1: entryRuleFeatureOfThis : ruleFeatureOfThis EOF ;
    public final void entryRuleFeatureOfThis() throws RecognitionException {
        int entryRuleFeatureOfThis_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 97) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:1264:1: ( ruleFeatureOfThis EOF )
            // InternalSimpleBeeLangTestLanguage.g:1265:1: ruleFeatureOfThis EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFeatureOfThisRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleFeatureOfThis();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFeatureOfThisRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 97, entryRuleFeatureOfThis_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleFeatureOfThis"


    // $ANTLR start "ruleFeatureOfThis"
    // InternalSimpleBeeLangTestLanguage.g:1272:1: ruleFeatureOfThis : ( ( rule__FeatureOfThis__Group__0 ) ) ;
    public final void ruleFeatureOfThis() throws RecognitionException {
        int ruleFeatureOfThis_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 98) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:1276:2: ( ( ( rule__FeatureOfThis__Group__0 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:1277:2: ( ( rule__FeatureOfThis__Group__0 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:1277:2: ( ( rule__FeatureOfThis__Group__0 ) )
            // InternalSimpleBeeLangTestLanguage.g:1278:3: ( rule__FeatureOfThis__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFeatureOfThisAccess().getGroup()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:1279:3: ( rule__FeatureOfThis__Group__0 )
            // InternalSimpleBeeLangTestLanguage.g:1279:4: rule__FeatureOfThis__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FeatureOfThis__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFeatureOfThisAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 98, ruleFeatureOfThis_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFeatureOfThis"


    // $ANTLR start "entryRuleLiteral"
    // InternalSimpleBeeLangTestLanguage.g:1288:1: entryRuleLiteral : ruleLiteral EOF ;
    public final void entryRuleLiteral() throws RecognitionException {
        int entryRuleLiteral_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 99) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:1289:1: ( ruleLiteral EOF )
            // InternalSimpleBeeLangTestLanguage.g:1290:1: ruleLiteral EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLiteralRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleLiteral();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLiteralRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 99, entryRuleLiteral_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleLiteral"


    // $ANTLR start "ruleLiteral"
    // InternalSimpleBeeLangTestLanguage.g:1297:1: ruleLiteral : ( ( rule__Literal__Alternatives ) ) ;
    public final void ruleLiteral() throws RecognitionException {
        int ruleLiteral_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 100) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:1301:2: ( ( ( rule__Literal__Alternatives ) ) )
            // InternalSimpleBeeLangTestLanguage.g:1302:2: ( ( rule__Literal__Alternatives ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:1302:2: ( ( rule__Literal__Alternatives ) )
            // InternalSimpleBeeLangTestLanguage.g:1303:3: ( rule__Literal__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLiteralAccess().getAlternatives()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:1304:3: ( rule__Literal__Alternatives )
            // InternalSimpleBeeLangTestLanguage.g:1304:4: rule__Literal__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Literal__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLiteralAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 100, ruleLiteral_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleLiteral"

}

@SuppressWarnings("all")
abstract class InternalSimpleBeeLangTestLanguageParser3 extends InternalSimpleBeeLangTestLanguageParser2 {

        InternalSimpleBeeLangTestLanguageParser3(TokenStream input) {
            this(input, new RecognizerSharedState());
        }

        InternalSimpleBeeLangTestLanguageParser3(TokenStream input, RecognizerSharedState state) {
            super(input, state);
        }

    // $ANTLR start "entryRuleLiteralFunction"
    // InternalSimpleBeeLangTestLanguage.g:1313:1: entryRuleLiteralFunction : ruleLiteralFunction EOF ;
    public final void entryRuleLiteralFunction() throws RecognitionException {
        int entryRuleLiteralFunction_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 101) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:1314:1: ( ruleLiteralFunction EOF )
            // InternalSimpleBeeLangTestLanguage.g:1315:1: ruleLiteralFunction EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLiteralFunctionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleLiteralFunction();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLiteralFunctionRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 101, entryRuleLiteralFunction_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleLiteralFunction"


    // $ANTLR start "ruleLiteralFunction"
    // InternalSimpleBeeLangTestLanguage.g:1322:1: ruleLiteralFunction : ( ( rule__LiteralFunction__Group__0 ) ) ;
    public final void ruleLiteralFunction() throws RecognitionException {
        int ruleLiteralFunction_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 102) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:1326:2: ( ( ( rule__LiteralFunction__Group__0 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:1327:2: ( ( rule__LiteralFunction__Group__0 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:1327:2: ( ( rule__LiteralFunction__Group__0 ) )
            // InternalSimpleBeeLangTestLanguage.g:1328:3: ( rule__LiteralFunction__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLiteralFunctionAccess().getGroup()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:1329:3: ( rule__LiteralFunction__Group__0 )
            // InternalSimpleBeeLangTestLanguage.g:1329:4: rule__LiteralFunction__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LiteralFunction__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLiteralFunctionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 102, ruleLiteralFunction_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleLiteralFunction"


    // $ANTLR start "entryRuleClosureExpression"
    // InternalSimpleBeeLangTestLanguage.g:1338:1: entryRuleClosureExpression : ruleClosureExpression EOF ;
    public final void entryRuleClosureExpression() throws RecognitionException {
        int entryRuleClosureExpression_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 103) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:1339:1: ( ruleClosureExpression EOF )
            // InternalSimpleBeeLangTestLanguage.g:1340:1: ruleClosureExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleClosureExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureExpressionRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 103, entryRuleClosureExpression_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleClosureExpression"


    // $ANTLR start "ruleClosureExpression"
    // InternalSimpleBeeLangTestLanguage.g:1347:1: ruleClosureExpression : ( ( rule__ClosureExpression__Group__0 ) ) ;
    public final void ruleClosureExpression() throws RecognitionException {
        int ruleClosureExpression_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 104) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:1351:2: ( ( ( rule__ClosureExpression__Group__0 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:1352:2: ( ( rule__ClosureExpression__Group__0 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:1352:2: ( ( rule__ClosureExpression__Group__0 ) )
            // InternalSimpleBeeLangTestLanguage.g:1353:3: ( rule__ClosureExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureExpressionAccess().getGroup()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:1354:3: ( rule__ClosureExpression__Group__0 )
            // InternalSimpleBeeLangTestLanguage.g:1354:4: rule__ClosureExpression__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 104, ruleClosureExpression_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleClosureExpression"


    // $ANTLR start "entryRuleOneOrManyExpressions"
    // InternalSimpleBeeLangTestLanguage.g:1363:1: entryRuleOneOrManyExpressions : ruleOneOrManyExpressions EOF ;
    public final void entryRuleOneOrManyExpressions() throws RecognitionException {
        int entryRuleOneOrManyExpressions_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 105) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:1364:1: ( ruleOneOrManyExpressions EOF )
            // InternalSimpleBeeLangTestLanguage.g:1365:1: ruleOneOrManyExpressions EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOneOrManyExpressionsRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleOneOrManyExpressions();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOneOrManyExpressionsRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 105, entryRuleOneOrManyExpressions_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleOneOrManyExpressions"


    // $ANTLR start "ruleOneOrManyExpressions"
    // InternalSimpleBeeLangTestLanguage.g:1372:1: ruleOneOrManyExpressions : ( ( rule__OneOrManyExpressions__Alternatives ) ) ;
    public final void ruleOneOrManyExpressions() throws RecognitionException {
        int ruleOneOrManyExpressions_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 106) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:1376:2: ( ( ( rule__OneOrManyExpressions__Alternatives ) ) )
            // InternalSimpleBeeLangTestLanguage.g:1377:2: ( ( rule__OneOrManyExpressions__Alternatives ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:1377:2: ( ( rule__OneOrManyExpressions__Alternatives ) )
            // InternalSimpleBeeLangTestLanguage.g:1378:3: ( rule__OneOrManyExpressions__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOneOrManyExpressionsAccess().getAlternatives()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:1379:3: ( rule__OneOrManyExpressions__Alternatives )
            // InternalSimpleBeeLangTestLanguage.g:1379:4: rule__OneOrManyExpressions__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OneOrManyExpressions__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOneOrManyExpressionsAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 106, ruleOneOrManyExpressions_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOneOrManyExpressions"


    // $ANTLR start "entryRuleBlockExpressionWithoutBrackets"
    // InternalSimpleBeeLangTestLanguage.g:1388:1: entryRuleBlockExpressionWithoutBrackets : ruleBlockExpressionWithoutBrackets EOF ;
    public final void entryRuleBlockExpressionWithoutBrackets() throws RecognitionException {
        int entryRuleBlockExpressionWithoutBrackets_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 107) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:1389:1: ( ruleBlockExpressionWithoutBrackets EOF )
            // InternalSimpleBeeLangTestLanguage.g:1390:1: ruleBlockExpressionWithoutBrackets EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBlockExpressionWithoutBracketsRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleBlockExpressionWithoutBrackets();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBlockExpressionWithoutBracketsRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 107, entryRuleBlockExpressionWithoutBrackets_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleBlockExpressionWithoutBrackets"


    // $ANTLR start "ruleBlockExpressionWithoutBrackets"
    // InternalSimpleBeeLangTestLanguage.g:1397:1: ruleBlockExpressionWithoutBrackets : ( ( rule__BlockExpressionWithoutBrackets__Group__0 ) ) ;
    public final void ruleBlockExpressionWithoutBrackets() throws RecognitionException {
        int ruleBlockExpressionWithoutBrackets_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 108) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:1401:2: ( ( ( rule__BlockExpressionWithoutBrackets__Group__0 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:1402:2: ( ( rule__BlockExpressionWithoutBrackets__Group__0 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:1402:2: ( ( rule__BlockExpressionWithoutBrackets__Group__0 ) )
            // InternalSimpleBeeLangTestLanguage.g:1403:3: ( rule__BlockExpressionWithoutBrackets__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBlockExpressionWithoutBracketsAccess().getGroup()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:1404:3: ( rule__BlockExpressionWithoutBrackets__Group__0 )
            // InternalSimpleBeeLangTestLanguage.g:1404:4: rule__BlockExpressionWithoutBrackets__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BlockExpressionWithoutBrackets__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBlockExpressionWithoutBracketsAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 108, ruleBlockExpressionWithoutBrackets_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleBlockExpressionWithoutBrackets"


    // $ANTLR start "entryRuleValueLiteral"
    // InternalSimpleBeeLangTestLanguage.g:1413:1: entryRuleValueLiteral : ruleValueLiteral EOF ;
    public final void entryRuleValueLiteral() throws RecognitionException {
        int entryRuleValueLiteral_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 109) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:1414:1: ( ruleValueLiteral EOF )
            // InternalSimpleBeeLangTestLanguage.g:1415:1: ruleValueLiteral EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValueLiteralRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleValueLiteral();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getValueLiteralRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 109, entryRuleValueLiteral_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleValueLiteral"


    // $ANTLR start "ruleValueLiteral"
    // InternalSimpleBeeLangTestLanguage.g:1422:1: ruleValueLiteral : ( ( rule__ValueLiteral__ValueAssignment ) ) ;
    public final void ruleValueLiteral() throws RecognitionException {
        int ruleValueLiteral_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 110) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:1426:2: ( ( ( rule__ValueLiteral__ValueAssignment ) ) )
            // InternalSimpleBeeLangTestLanguage.g:1427:2: ( ( rule__ValueLiteral__ValueAssignment ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:1427:2: ( ( rule__ValueLiteral__ValueAssignment ) )
            // InternalSimpleBeeLangTestLanguage.g:1428:3: ( rule__ValueLiteral__ValueAssignment )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValueLiteralAccess().getValueAssignment()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:1429:3: ( rule__ValueLiteral__ValueAssignment )
            // InternalSimpleBeeLangTestLanguage.g:1429:4: rule__ValueLiteral__ValueAssignment
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ValueLiteral__ValueAssignment();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getValueLiteralAccess().getValueAssignment()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 110, ruleValueLiteral_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleValueLiteral"


    // $ANTLR start "entryRuleParanthesizedExpression"
    // InternalSimpleBeeLangTestLanguage.g:1438:1: entryRuleParanthesizedExpression : ruleParanthesizedExpression EOF ;
    public final void entryRuleParanthesizedExpression() throws RecognitionException {
        int entryRuleParanthesizedExpression_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 111) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:1439:1: ( ruleParanthesizedExpression EOF )
            // InternalSimpleBeeLangTestLanguage.g:1440:1: ruleParanthesizedExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParanthesizedExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleParanthesizedExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParanthesizedExpressionRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 111, entryRuleParanthesizedExpression_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleParanthesizedExpression"


    // $ANTLR start "ruleParanthesizedExpression"
    // InternalSimpleBeeLangTestLanguage.g:1447:1: ruleParanthesizedExpression : ( ( rule__ParanthesizedExpression__Group__0 ) ) ;
    public final void ruleParanthesizedExpression() throws RecognitionException {
        int ruleParanthesizedExpression_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 112) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:1451:2: ( ( ( rule__ParanthesizedExpression__Group__0 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:1452:2: ( ( rule__ParanthesizedExpression__Group__0 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:1452:2: ( ( rule__ParanthesizedExpression__Group__0 ) )
            // InternalSimpleBeeLangTestLanguage.g:1453:3: ( rule__ParanthesizedExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParanthesizedExpressionAccess().getGroup()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:1454:3: ( rule__ParanthesizedExpression__Group__0 )
            // InternalSimpleBeeLangTestLanguage.g:1454:4: rule__ParanthesizedExpression__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ParanthesizedExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParanthesizedExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 112, ruleParanthesizedExpression_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleParanthesizedExpression"


    // $ANTLR start "entryRuleQID"
    // InternalSimpleBeeLangTestLanguage.g:1463:1: entryRuleQID : ruleQID EOF ;
    public final void entryRuleQID() throws RecognitionException {
        int entryRuleQID_StartIndex = input.index();
         
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 113) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:1467:1: ( ruleQID EOF )
            // InternalSimpleBeeLangTestLanguage.g:1468:1: ruleQID EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQIDRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleQID();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getQIDRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 113, entryRuleQID_StartIndex); }

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleQID"


    // $ANTLR start "ruleQID"
    // InternalSimpleBeeLangTestLanguage.g:1478:1: ruleQID : ( ( rule__QID__Group__0 ) ) ;
    public final void ruleQID() throws RecognitionException {
        int ruleQID_StartIndex = input.index();

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 114) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:1483:2: ( ( ( rule__QID__Group__0 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:1484:2: ( ( rule__QID__Group__0 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:1484:2: ( ( rule__QID__Group__0 ) )
            // InternalSimpleBeeLangTestLanguage.g:1485:3: ( rule__QID__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQIDAccess().getGroup()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:1486:3: ( rule__QID__Group__0 )
            // InternalSimpleBeeLangTestLanguage.g:1486:4: rule__QID__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__QID__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getQIDAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 114, ruleQID_StartIndex); }

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleQID"


    // $ANTLR start "rule__Model__Alternatives"
    // InternalSimpleBeeLangTestLanguage.g:1495:1: rule__Model__Alternatives : ( ( ( rule__Model__UnitsAssignment_0 )* ) | ( ( rule__Model__FunctionsAssignment_1 )* ) );
    public final void rule__Model__Alternatives() throws RecognitionException {
        int rule__Model__Alternatives_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 115) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:1499:1: ( ( ( rule__Model__UnitsAssignment_0 )* ) | ( ( rule__Model__FunctionsAssignment_1 )* ) )
            int alt3=2;
            switch ( input.LA(1) ) {
            case RULE_DOCUMENTATION:
                {
                int LA3_1 = input.LA(2);

                if ( (LA3_1==13) ) {
                    alt3=1;
                }
                else if ( (LA3_1==RULE_ID||LA3_1==59||LA3_1==74) ) {
                    alt3=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 3, 1, input);

                    throw nvae;
                }
                }
                break;
            case 13:
                {
                alt3=1;
                }
                break;
            case EOF:
                {
                int LA3_3 = input.LA(2);

                if ( (synpred2_InternalSimpleBeeLangTestLanguage()) ) {
                    alt3=1;
                }
                else if ( (true) ) {
                    alt3=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 3, 3, input);

                    throw nvae;
                }
                }
                break;
            case RULE_ID:
            case 59:
            case 74:
                {
                alt3=2;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 3, 0, input);

                throw nvae;
            }

            switch (alt3) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:1500:2: ( ( rule__Model__UnitsAssignment_0 )* )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:1500:2: ( ( rule__Model__UnitsAssignment_0 )* )
                    // InternalSimpleBeeLangTestLanguage.g:1501:3: ( rule__Model__UnitsAssignment_0 )*
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getModelAccess().getUnitsAssignment_0()); 
                    }
                    // InternalSimpleBeeLangTestLanguage.g:1502:3: ( rule__Model__UnitsAssignment_0 )*
                    loop1:
                    do {
                        int alt1=2;
                        int LA1_0 = input.LA(1);

                        if ( (LA1_0==RULE_DOCUMENTATION||LA1_0==13) ) {
                            alt1=1;
                        }


                        switch (alt1) {
                    	case 1 :
                    	    // InternalSimpleBeeLangTestLanguage.g:1502:4: rule__Model__UnitsAssignment_0
                    	    {
                    	    pushFollow(FollowSets000.FOLLOW_3);
                    	    rule__Model__UnitsAssignment_0();

                    	    state._fsp--;
                    	    if (state.failed) return ;

                    	    }
                    	    break;

                    	default :
                    	    break loop1;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getModelAccess().getUnitsAssignment_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSimpleBeeLangTestLanguage.g:1506:2: ( ( rule__Model__FunctionsAssignment_1 )* )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:1506:2: ( ( rule__Model__FunctionsAssignment_1 )* )
                    // InternalSimpleBeeLangTestLanguage.g:1507:3: ( rule__Model__FunctionsAssignment_1 )*
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getModelAccess().getFunctionsAssignment_1()); 
                    }
                    // InternalSimpleBeeLangTestLanguage.g:1508:3: ( rule__Model__FunctionsAssignment_1 )*
                    loop2:
                    do {
                        int alt2=2;
                        int LA2_0 = input.LA(1);

                        if ( ((LA2_0>=RULE_ID && LA2_0<=RULE_DOCUMENTATION)||LA2_0==59||LA2_0==74) ) {
                            alt2=1;
                        }


                        switch (alt2) {
                    	case 1 :
                    	    // InternalSimpleBeeLangTestLanguage.g:1508:4: rule__Model__FunctionsAssignment_1
                    	    {
                    	    pushFollow(FollowSets000.FOLLOW_4);
                    	    rule__Model__FunctionsAssignment_1();

                    	    state._fsp--;
                    	    if (state.failed) return ;

                    	    }
                    	    break;

                    	default :
                    	    break loop2;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getModelAccess().getFunctionsAssignment_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 115, rule__Model__Alternatives_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Model__Alternatives"


    // $ANTLR start "rule__ProvidedCapability__Alternatives_1"
    // InternalSimpleBeeLangTestLanguage.g:1516:1: rule__ProvidedCapability__Alternatives_1 : ( ( ( rule__ProvidedCapability__NameSpaceAssignment_1_0 ) ) | ( 'unit' ) );
    public final void rule__ProvidedCapability__Alternatives_1() throws RecognitionException {
        int rule__ProvidedCapability__Alternatives_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 116) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:1520:1: ( ( ( rule__ProvidedCapability__NameSpaceAssignment_1_0 ) ) | ( 'unit' ) )
            int alt4=2;
            int LA4_0 = input.LA(1);

            if ( (LA4_0==RULE_ID) ) {
                alt4=1;
            }
            else if ( (LA4_0==13) ) {
                alt4=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 4, 0, input);

                throw nvae;
            }
            switch (alt4) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:1521:2: ( ( rule__ProvidedCapability__NameSpaceAssignment_1_0 ) )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:1521:2: ( ( rule__ProvidedCapability__NameSpaceAssignment_1_0 ) )
                    // InternalSimpleBeeLangTestLanguage.g:1522:3: ( rule__ProvidedCapability__NameSpaceAssignment_1_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getProvidedCapabilityAccess().getNameSpaceAssignment_1_0()); 
                    }
                    // InternalSimpleBeeLangTestLanguage.g:1523:3: ( rule__ProvidedCapability__NameSpaceAssignment_1_0 )
                    // InternalSimpleBeeLangTestLanguage.g:1523:4: rule__ProvidedCapability__NameSpaceAssignment_1_0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ProvidedCapability__NameSpaceAssignment_1_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getProvidedCapabilityAccess().getNameSpaceAssignment_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSimpleBeeLangTestLanguage.g:1527:2: ( 'unit' )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:1527:2: ( 'unit' )
                    // InternalSimpleBeeLangTestLanguage.g:1528:3: 'unit'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getProvidedCapabilityAccess().getUnitKeyword_1_1()); 
                    }
                    match(input,13,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getProvidedCapabilityAccess().getUnitKeyword_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 116, rule__ProvidedCapability__Alternatives_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__Alternatives_1"


    // $ANTLR start "rule__AliasedRequiredCapability__Alternatives_0"
    // InternalSimpleBeeLangTestLanguage.g:1537:1: rule__AliasedRequiredCapability__Alternatives_0 : ( ( ( rule__AliasedRequiredCapability__NameSpaceAssignment_0_0 ) ) | ( 'unit' ) );
    public final void rule__AliasedRequiredCapability__Alternatives_0() throws RecognitionException {
        int rule__AliasedRequiredCapability__Alternatives_0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 117) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:1541:1: ( ( ( rule__AliasedRequiredCapability__NameSpaceAssignment_0_0 ) ) | ( 'unit' ) )
            int alt5=2;
            int LA5_0 = input.LA(1);

            if ( (LA5_0==RULE_ID) ) {
                alt5=1;
            }
            else if ( (LA5_0==13) ) {
                alt5=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 5, 0, input);

                throw nvae;
            }
            switch (alt5) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:1542:2: ( ( rule__AliasedRequiredCapability__NameSpaceAssignment_0_0 ) )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:1542:2: ( ( rule__AliasedRequiredCapability__NameSpaceAssignment_0_0 ) )
                    // InternalSimpleBeeLangTestLanguage.g:1543:3: ( rule__AliasedRequiredCapability__NameSpaceAssignment_0_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAliasedRequiredCapabilityAccess().getNameSpaceAssignment_0_0()); 
                    }
                    // InternalSimpleBeeLangTestLanguage.g:1544:3: ( rule__AliasedRequiredCapability__NameSpaceAssignment_0_0 )
                    // InternalSimpleBeeLangTestLanguage.g:1544:4: rule__AliasedRequiredCapability__NameSpaceAssignment_0_0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__AliasedRequiredCapability__NameSpaceAssignment_0_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAliasedRequiredCapabilityAccess().getNameSpaceAssignment_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSimpleBeeLangTestLanguage.g:1548:2: ( 'unit' )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:1548:2: ( 'unit' )
                    // InternalSimpleBeeLangTestLanguage.g:1549:3: 'unit'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAliasedRequiredCapabilityAccess().getUnitKeyword_0_1()); 
                    }
                    match(input,13,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAliasedRequiredCapabilityAccess().getUnitKeyword_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 117, rule__AliasedRequiredCapability__Alternatives_0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Alternatives_0"


    // $ANTLR start "rule__RequiredCapability__Alternatives_1"
    // InternalSimpleBeeLangTestLanguage.g:1558:1: rule__RequiredCapability__Alternatives_1 : ( ( ( rule__RequiredCapability__NameSpaceAssignment_1_0 ) ) | ( 'unit' ) );
    public final void rule__RequiredCapability__Alternatives_1() throws RecognitionException {
        int rule__RequiredCapability__Alternatives_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 118) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:1562:1: ( ( ( rule__RequiredCapability__NameSpaceAssignment_1_0 ) ) | ( 'unit' ) )
            int alt6=2;
            int LA6_0 = input.LA(1);

            if ( (LA6_0==RULE_ID) ) {
                alt6=1;
            }
            else if ( (LA6_0==13) ) {
                alt6=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 6, 0, input);

                throw nvae;
            }
            switch (alt6) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:1563:2: ( ( rule__RequiredCapability__NameSpaceAssignment_1_0 ) )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:1563:2: ( ( rule__RequiredCapability__NameSpaceAssignment_1_0 ) )
                    // InternalSimpleBeeLangTestLanguage.g:1564:3: ( rule__RequiredCapability__NameSpaceAssignment_1_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getRequiredCapabilityAccess().getNameSpaceAssignment_1_0()); 
                    }
                    // InternalSimpleBeeLangTestLanguage.g:1565:3: ( rule__RequiredCapability__NameSpaceAssignment_1_0 )
                    // InternalSimpleBeeLangTestLanguage.g:1565:4: rule__RequiredCapability__NameSpaceAssignment_1_0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__RequiredCapability__NameSpaceAssignment_1_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getRequiredCapabilityAccess().getNameSpaceAssignment_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSimpleBeeLangTestLanguage.g:1569:2: ( 'unit' )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:1569:2: ( 'unit' )
                    // InternalSimpleBeeLangTestLanguage.g:1570:3: 'unit'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getRequiredCapabilityAccess().getUnitKeyword_1_1()); 
                    }
                    match(input,13,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getRequiredCapabilityAccess().getUnitKeyword_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 118, rule__RequiredCapability__Alternatives_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Alternatives_1"


    // $ANTLR start "rule__Path__Alternatives"
    // InternalSimpleBeeLangTestLanguage.g:1579:1: rule__Path__Alternatives : ( ( RULE_STRING ) | ( ( rule__Path__Group_1__0 ) ) );
    public final void rule__Path__Alternatives() throws RecognitionException {
        int rule__Path__Alternatives_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 119) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:1583:1: ( ( RULE_STRING ) | ( ( rule__Path__Group_1__0 ) ) )
            int alt7=2;
            int LA7_0 = input.LA(1);

            if ( (LA7_0==RULE_STRING) ) {
                alt7=1;
            }
            else if ( (LA7_0==RULE_ID||LA7_0==33) ) {
                alt7=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 7, 0, input);

                throw nvae;
            }
            switch (alt7) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:1584:2: ( RULE_STRING )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:1584:2: ( RULE_STRING )
                    // InternalSimpleBeeLangTestLanguage.g:1585:3: RULE_STRING
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPathAccess().getSTRINGTerminalRuleCall_0()); 
                    }
                    match(input,RULE_STRING,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPathAccess().getSTRINGTerminalRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSimpleBeeLangTestLanguage.g:1590:2: ( ( rule__Path__Group_1__0 ) )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:1590:2: ( ( rule__Path__Group_1__0 ) )
                    // InternalSimpleBeeLangTestLanguage.g:1591:3: ( rule__Path__Group_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPathAccess().getGroup_1()); 
                    }
                    // InternalSimpleBeeLangTestLanguage.g:1592:3: ( rule__Path__Group_1__0 )
                    // InternalSimpleBeeLangTestLanguage.g:1592:4: rule__Path__Group_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__Path__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPathAccess().getGroup_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 119, rule__Path__Alternatives_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Path__Alternatives"


    // $ANTLR start "rule__FirstParameter__Alternatives"
    // InternalSimpleBeeLangTestLanguage.g:1600:1: rule__FirstParameter__Alternatives : ( ( ruleClosureParameter ) | ( ruleParameter ) );
    public final void rule__FirstParameter__Alternatives() throws RecognitionException {
        int rule__FirstParameter__Alternatives_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 120) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:1604:1: ( ( ruleClosureParameter ) | ( ruleParameter ) )
            int alt8=2;
            alt8 = dfa8.predict(input);
            switch (alt8) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:1605:2: ( ruleClosureParameter )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:1605:2: ( ruleClosureParameter )
                    // InternalSimpleBeeLangTestLanguage.g:1606:3: ruleClosureParameter
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getFirstParameterAccess().getClosureParameterParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleClosureParameter();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getFirstParameterAccess().getClosureParameterParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSimpleBeeLangTestLanguage.g:1611:2: ( ruleParameter )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:1611:2: ( ruleParameter )
                    // InternalSimpleBeeLangTestLanguage.g:1612:3: ruleParameter
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getFirstParameterAccess().getParameterParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleParameter();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getFirstParameterAccess().getParameterParserRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 120, rule__FirstParameter__Alternatives_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FirstParameter__Alternatives"


    // $ANTLR start "rule__Function__Alternatives_6_1"
    // InternalSimpleBeeLangTestLanguage.g:1621:1: rule__Function__Alternatives_6_1 : ( ( ( rule__Function__Group_6_1_0__0 ) ) | ( ( rule__Function__Group_6_1_1__0 ) ) );
    public final void rule__Function__Alternatives_6_1() throws RecognitionException {
        int rule__Function__Alternatives_6_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 121) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:1625:1: ( ( ( rule__Function__Group_6_1_0__0 ) ) | ( ( rule__Function__Group_6_1_1__0 ) ) )
            int alt9=2;
            int LA9_0 = input.LA(1);

            if ( (LA9_0==RULE_ID||LA9_0==60) ) {
                alt9=1;
            }
            else if ( (LA9_0==75) ) {
                alt9=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 9, 0, input);

                throw nvae;
            }
            switch (alt9) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:1626:2: ( ( rule__Function__Group_6_1_0__0 ) )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:1626:2: ( ( rule__Function__Group_6_1_0__0 ) )
                    // InternalSimpleBeeLangTestLanguage.g:1627:3: ( rule__Function__Group_6_1_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getFunctionAccess().getGroup_6_1_0()); 
                    }
                    // InternalSimpleBeeLangTestLanguage.g:1628:3: ( rule__Function__Group_6_1_0__0 )
                    // InternalSimpleBeeLangTestLanguage.g:1628:4: rule__Function__Group_6_1_0__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__Function__Group_6_1_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getFunctionAccess().getGroup_6_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSimpleBeeLangTestLanguage.g:1632:2: ( ( rule__Function__Group_6_1_1__0 ) )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:1632:2: ( ( rule__Function__Group_6_1_1__0 ) )
                    // InternalSimpleBeeLangTestLanguage.g:1633:3: ( rule__Function__Group_6_1_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getFunctionAccess().getGroup_6_1_1()); 
                    }
                    // InternalSimpleBeeLangTestLanguage.g:1634:3: ( rule__Function__Group_6_1_1__0 )
                    // InternalSimpleBeeLangTestLanguage.g:1634:4: rule__Function__Group_6_1_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__Function__Group_6_1_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getFunctionAccess().getGroup_6_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 121, rule__Function__Alternatives_6_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Alternatives_6_1"


    // $ANTLR start "rule__Function__Alternatives_8"
    // InternalSimpleBeeLangTestLanguage.g:1642:1: rule__Function__Alternatives_8 : ( ( ( rule__Function__Group_8_0__0 ) ) | ( ( rule__Function__FuncExprAssignment_8_1 ) ) );
    public final void rule__Function__Alternatives_8() throws RecognitionException {
        int rule__Function__Alternatives_8_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 122) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:1646:1: ( ( ( rule__Function__Group_8_0__0 ) ) | ( ( rule__Function__FuncExprAssignment_8_1 ) ) )
            int alt10=2;
            int LA10_0 = input.LA(1);

            if ( (LA10_0==49) ) {
                alt10=1;
            }
            else if ( (LA10_0==44) ) {
                alt10=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 10, 0, input);

                throw nvae;
            }
            switch (alt10) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:1647:2: ( ( rule__Function__Group_8_0__0 ) )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:1647:2: ( ( rule__Function__Group_8_0__0 ) )
                    // InternalSimpleBeeLangTestLanguage.g:1648:3: ( rule__Function__Group_8_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getFunctionAccess().getGroup_8_0()); 
                    }
                    // InternalSimpleBeeLangTestLanguage.g:1649:3: ( rule__Function__Group_8_0__0 )
                    // InternalSimpleBeeLangTestLanguage.g:1649:4: rule__Function__Group_8_0__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__Function__Group_8_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getFunctionAccess().getGroup_8_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSimpleBeeLangTestLanguage.g:1653:2: ( ( rule__Function__FuncExprAssignment_8_1 ) )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:1653:2: ( ( rule__Function__FuncExprAssignment_8_1 ) )
                    // InternalSimpleBeeLangTestLanguage.g:1654:3: ( rule__Function__FuncExprAssignment_8_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getFunctionAccess().getFuncExprAssignment_8_1()); 
                    }
                    // InternalSimpleBeeLangTestLanguage.g:1655:3: ( rule__Function__FuncExprAssignment_8_1 )
                    // InternalSimpleBeeLangTestLanguage.g:1655:4: rule__Function__FuncExprAssignment_8_1
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__Function__FuncExprAssignment_8_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getFunctionAccess().getFuncExprAssignment_8_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 122, rule__Function__Alternatives_8_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Alternatives_8"


    // $ANTLR start "rule__GuardExpression__Alternatives"
    // InternalSimpleBeeLangTestLanguage.g:1663:1: rule__GuardExpression__Alternatives : ( ( ( rule__GuardExpression__Group_0__0 ) ) | ( ( rule__GuardExpression__GuardExprAssignment_1 ) ) );
    public final void rule__GuardExpression__Alternatives() throws RecognitionException {
        int rule__GuardExpression__Alternatives_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 123) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:1667:1: ( ( ( rule__GuardExpression__Group_0__0 ) ) | ( ( rule__GuardExpression__GuardExprAssignment_1 ) ) )
            int alt11=2;
            int LA11_0 = input.LA(1);

            if ( (LA11_0==49) ) {
                alt11=1;
            }
            else if ( (LA11_0==44) ) {
                alt11=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 11, 0, input);

                throw nvae;
            }
            switch (alt11) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:1668:2: ( ( rule__GuardExpression__Group_0__0 ) )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:1668:2: ( ( rule__GuardExpression__Group_0__0 ) )
                    // InternalSimpleBeeLangTestLanguage.g:1669:3: ( rule__GuardExpression__Group_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getGuardExpressionAccess().getGroup_0()); 
                    }
                    // InternalSimpleBeeLangTestLanguage.g:1670:3: ( rule__GuardExpression__Group_0__0 )
                    // InternalSimpleBeeLangTestLanguage.g:1670:4: rule__GuardExpression__Group_0__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__GuardExpression__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getGuardExpressionAccess().getGroup_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSimpleBeeLangTestLanguage.g:1674:2: ( ( rule__GuardExpression__GuardExprAssignment_1 ) )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:1674:2: ( ( rule__GuardExpression__GuardExprAssignment_1 ) )
                    // InternalSimpleBeeLangTestLanguage.g:1675:3: ( rule__GuardExpression__GuardExprAssignment_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getGuardExpressionAccess().getGuardExprAssignment_1()); 
                    }
                    // InternalSimpleBeeLangTestLanguage.g:1676:3: ( rule__GuardExpression__GuardExprAssignment_1 )
                    // InternalSimpleBeeLangTestLanguage.g:1676:4: rule__GuardExpression__GuardExprAssignment_1
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__GuardExpression__GuardExprAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getGuardExpressionAccess().getGuardExprAssignment_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 123, rule__GuardExpression__Alternatives_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GuardExpression__Alternatives"


    // $ANTLR start "rule__AssignmentOperator__Alternatives"
    // InternalSimpleBeeLangTestLanguage.g:1684:1: rule__AssignmentOperator__Alternatives : ( ( '=' ) | ( '+=' ) | ( '-=' ) | ( '*=' ) | ( '/=' ) | ( '%=' ) );
    public final void rule__AssignmentOperator__Alternatives() throws RecognitionException {
        int rule__AssignmentOperator__Alternatives_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 124) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:1688:1: ( ( '=' ) | ( '+=' ) | ( '-=' ) | ( '*=' ) | ( '/=' ) | ( '%=' ) )
            int alt12=6;
            switch ( input.LA(1) ) {
            case 14:
                {
                alt12=1;
                }
                break;
            case 15:
                {
                alt12=2;
                }
                break;
            case 16:
                {
                alt12=3;
                }
                break;
            case 17:
                {
                alt12=4;
                }
                break;
            case 18:
                {
                alt12=5;
                }
                break;
            case 19:
                {
                alt12=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 12, 0, input);

                throw nvae;
            }

            switch (alt12) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:1689:2: ( '=' )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:1689:2: ( '=' )
                    // InternalSimpleBeeLangTestLanguage.g:1690:3: '='
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAssignmentOperatorAccess().getEqualsSignKeyword_0()); 
                    }
                    match(input,14,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAssignmentOperatorAccess().getEqualsSignKeyword_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSimpleBeeLangTestLanguage.g:1695:2: ( '+=' )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:1695:2: ( '+=' )
                    // InternalSimpleBeeLangTestLanguage.g:1696:3: '+='
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAssignmentOperatorAccess().getPlusSignEqualsSignKeyword_1()); 
                    }
                    match(input,15,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAssignmentOperatorAccess().getPlusSignEqualsSignKeyword_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSimpleBeeLangTestLanguage.g:1701:2: ( '-=' )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:1701:2: ( '-=' )
                    // InternalSimpleBeeLangTestLanguage.g:1702:3: '-='
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAssignmentOperatorAccess().getHyphenMinusEqualsSignKeyword_2()); 
                    }
                    match(input,16,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAssignmentOperatorAccess().getHyphenMinusEqualsSignKeyword_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSimpleBeeLangTestLanguage.g:1707:2: ( '*=' )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:1707:2: ( '*=' )
                    // InternalSimpleBeeLangTestLanguage.g:1708:3: '*='
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAssignmentOperatorAccess().getAsteriskEqualsSignKeyword_3()); 
                    }
                    match(input,17,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAssignmentOperatorAccess().getAsteriskEqualsSignKeyword_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSimpleBeeLangTestLanguage.g:1713:2: ( '/=' )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:1713:2: ( '/=' )
                    // InternalSimpleBeeLangTestLanguage.g:1714:3: '/='
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAssignmentOperatorAccess().getSolidusEqualsSignKeyword_4()); 
                    }
                    match(input,18,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAssignmentOperatorAccess().getSolidusEqualsSignKeyword_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalSimpleBeeLangTestLanguage.g:1719:2: ( '%=' )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:1719:2: ( '%=' )
                    // InternalSimpleBeeLangTestLanguage.g:1720:3: '%='
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAssignmentOperatorAccess().getPercentSignEqualsSignKeyword_5()); 
                    }
                    match(input,19,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAssignmentOperatorAccess().getPercentSignEqualsSignKeyword_5()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 124, rule__AssignmentOperator__Alternatives_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AssignmentOperator__Alternatives"


    // $ANTLR start "rule__RelationalOperator__Alternatives"
    // InternalSimpleBeeLangTestLanguage.g:1729:1: rule__RelationalOperator__Alternatives : ( ( '~=' ) | ( '==' ) | ( '===' ) | ( '!=' ) | ( '!==' ) | ( '>=' ) | ( '<=' ) | ( '>' ) | ( '<' ) );
    public final void rule__RelationalOperator__Alternatives() throws RecognitionException {
        int rule__RelationalOperator__Alternatives_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 125) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:1733:1: ( ( '~=' ) | ( '==' ) | ( '===' ) | ( '!=' ) | ( '!==' ) | ( '>=' ) | ( '<=' ) | ( '>' ) | ( '<' ) )
            int alt13=9;
            switch ( input.LA(1) ) {
            case 20:
                {
                alt13=1;
                }
                break;
            case 21:
                {
                alt13=2;
                }
                break;
            case 22:
                {
                alt13=3;
                }
                break;
            case 23:
                {
                alt13=4;
                }
                break;
            case 24:
                {
                alt13=5;
                }
                break;
            case 25:
                {
                alt13=6;
                }
                break;
            case 26:
                {
                alt13=7;
                }
                break;
            case 27:
                {
                alt13=8;
                }
                break;
            case 28:
                {
                alt13=9;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 13, 0, input);

                throw nvae;
            }

            switch (alt13) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:1734:2: ( '~=' )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:1734:2: ( '~=' )
                    // InternalSimpleBeeLangTestLanguage.g:1735:3: '~='
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getRelationalOperatorAccess().getTildeEqualsSignKeyword_0()); 
                    }
                    match(input,20,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getRelationalOperatorAccess().getTildeEqualsSignKeyword_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSimpleBeeLangTestLanguage.g:1740:2: ( '==' )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:1740:2: ( '==' )
                    // InternalSimpleBeeLangTestLanguage.g:1741:3: '=='
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getRelationalOperatorAccess().getEqualsSignEqualsSignKeyword_1()); 
                    }
                    match(input,21,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getRelationalOperatorAccess().getEqualsSignEqualsSignKeyword_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSimpleBeeLangTestLanguage.g:1746:2: ( '===' )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:1746:2: ( '===' )
                    // InternalSimpleBeeLangTestLanguage.g:1747:3: '==='
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getRelationalOperatorAccess().getEqualsSignEqualsSignEqualsSignKeyword_2()); 
                    }
                    match(input,22,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getRelationalOperatorAccess().getEqualsSignEqualsSignEqualsSignKeyword_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSimpleBeeLangTestLanguage.g:1752:2: ( '!=' )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:1752:2: ( '!=' )
                    // InternalSimpleBeeLangTestLanguage.g:1753:3: '!='
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getRelationalOperatorAccess().getExclamationMarkEqualsSignKeyword_3()); 
                    }
                    match(input,23,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getRelationalOperatorAccess().getExclamationMarkEqualsSignKeyword_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSimpleBeeLangTestLanguage.g:1758:2: ( '!==' )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:1758:2: ( '!==' )
                    // InternalSimpleBeeLangTestLanguage.g:1759:3: '!=='
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getRelationalOperatorAccess().getExclamationMarkEqualsSignEqualsSignKeyword_4()); 
                    }
                    match(input,24,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getRelationalOperatorAccess().getExclamationMarkEqualsSignEqualsSignKeyword_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalSimpleBeeLangTestLanguage.g:1764:2: ( '>=' )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:1764:2: ( '>=' )
                    // InternalSimpleBeeLangTestLanguage.g:1765:3: '>='
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getRelationalOperatorAccess().getGreaterThanSignEqualsSignKeyword_5()); 
                    }
                    match(input,25,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getRelationalOperatorAccess().getGreaterThanSignEqualsSignKeyword_5()); 
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalSimpleBeeLangTestLanguage.g:1770:2: ( '<=' )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:1770:2: ( '<=' )
                    // InternalSimpleBeeLangTestLanguage.g:1771:3: '<='
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getRelationalOperatorAccess().getLessThanSignEqualsSignKeyword_6()); 
                    }
                    match(input,26,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getRelationalOperatorAccess().getLessThanSignEqualsSignKeyword_6()); 
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalSimpleBeeLangTestLanguage.g:1776:2: ( '>' )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:1776:2: ( '>' )
                    // InternalSimpleBeeLangTestLanguage.g:1777:3: '>'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getRelationalOperatorAccess().getGreaterThanSignKeyword_7()); 
                    }
                    match(input,27,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getRelationalOperatorAccess().getGreaterThanSignKeyword_7()); 
                    }

                    }


                    }
                    break;
                case 9 :
                    // InternalSimpleBeeLangTestLanguage.g:1782:2: ( '<' )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:1782:2: ( '<' )
                    // InternalSimpleBeeLangTestLanguage.g:1783:3: '<'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getRelationalOperatorAccess().getLessThanSignKeyword_8()); 
                    }
                    match(input,28,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getRelationalOperatorAccess().getLessThanSignKeyword_8()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 125, rule__RelationalOperator__Alternatives_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RelationalOperator__Alternatives"


    // $ANTLR start "rule__TopLevelExpression__Alternatives"
    // InternalSimpleBeeLangTestLanguage.g:1792:1: rule__TopLevelExpression__Alternatives : ( ( ruleVarDeclaration ) | ( ruleValDeclaration ) | ( ruleAssignmentExpression ) );
    public final void rule__TopLevelExpression__Alternatives() throws RecognitionException {
        int rule__TopLevelExpression__Alternatives_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 126) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:1796:1: ( ( ruleVarDeclaration ) | ( ruleValDeclaration ) | ( ruleAssignmentExpression ) )
            int alt14=3;
            alt14 = dfa14.predict(input);
            switch (alt14) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:1797:2: ( ruleVarDeclaration )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:1797:2: ( ruleVarDeclaration )
                    // InternalSimpleBeeLangTestLanguage.g:1798:3: ruleVarDeclaration
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTopLevelExpressionAccess().getVarDeclarationParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleVarDeclaration();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTopLevelExpressionAccess().getVarDeclarationParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSimpleBeeLangTestLanguage.g:1803:2: ( ruleValDeclaration )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:1803:2: ( ruleValDeclaration )
                    // InternalSimpleBeeLangTestLanguage.g:1804:3: ruleValDeclaration
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTopLevelExpressionAccess().getValDeclarationParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleValDeclaration();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTopLevelExpressionAccess().getValDeclarationParserRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSimpleBeeLangTestLanguage.g:1809:2: ( ruleAssignmentExpression )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:1809:2: ( ruleAssignmentExpression )
                    // InternalSimpleBeeLangTestLanguage.g:1810:3: ruleAssignmentExpression
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTopLevelExpressionAccess().getAssignmentExpressionParserRuleCall_2()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleAssignmentExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTopLevelExpressionAccess().getAssignmentExpressionParserRuleCall_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 126, rule__TopLevelExpression__Alternatives_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TopLevelExpression__Alternatives"


    // $ANTLR start "rule__VarDeclaration__Alternatives_2_0"
    // InternalSimpleBeeLangTestLanguage.g:1819:1: rule__VarDeclaration__Alternatives_2_0 : ( ( 'var' ) | ( ( rule__VarDeclaration__TypeAssignment_2_0_1 ) ) );
    public final void rule__VarDeclaration__Alternatives_2_0() throws RecognitionException {
        int rule__VarDeclaration__Alternatives_2_0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 127) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:1823:1: ( ( 'var' ) | ( ( rule__VarDeclaration__TypeAssignment_2_0_1 ) ) )
            int alt15=2;
            int LA15_0 = input.LA(1);

            if ( (LA15_0==29) ) {
                alt15=1;
            }
            else if ( (LA15_0==RULE_ID||LA15_0==60) ) {
                alt15=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 15, 0, input);

                throw nvae;
            }
            switch (alt15) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:1824:2: ( 'var' )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:1824:2: ( 'var' )
                    // InternalSimpleBeeLangTestLanguage.g:1825:3: 'var'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getVarDeclarationAccess().getVarKeyword_2_0_0()); 
                    }
                    match(input,29,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getVarDeclarationAccess().getVarKeyword_2_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSimpleBeeLangTestLanguage.g:1830:2: ( ( rule__VarDeclaration__TypeAssignment_2_0_1 ) )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:1830:2: ( ( rule__VarDeclaration__TypeAssignment_2_0_1 ) )
                    // InternalSimpleBeeLangTestLanguage.g:1831:3: ( rule__VarDeclaration__TypeAssignment_2_0_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getVarDeclarationAccess().getTypeAssignment_2_0_1()); 
                    }
                    // InternalSimpleBeeLangTestLanguage.g:1832:3: ( rule__VarDeclaration__TypeAssignment_2_0_1 )
                    // InternalSimpleBeeLangTestLanguage.g:1832:4: rule__VarDeclaration__TypeAssignment_2_0_1
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__VarDeclaration__TypeAssignment_2_0_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getVarDeclarationAccess().getTypeAssignment_2_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 127, rule__VarDeclaration__Alternatives_2_0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Alternatives_2_0"


    // $ANTLR start "rule__TypeRef__Alternatives"
    // InternalSimpleBeeLangTestLanguage.g:1840:1: rule__TypeRef__Alternatives : ( ( ruleClosureTypeRef ) | ( ruleSimpleTypeRef ) );
    public final void rule__TypeRef__Alternatives() throws RecognitionException {
        int rule__TypeRef__Alternatives_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 128) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:1844:1: ( ( ruleClosureTypeRef ) | ( ruleSimpleTypeRef ) )
            int alt16=2;
            int LA16_0 = input.LA(1);

            if ( (LA16_0==60) ) {
                alt16=1;
            }
            else if ( (LA16_0==RULE_ID) ) {
                alt16=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 16, 0, input);

                throw nvae;
            }
            switch (alt16) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:1845:2: ( ruleClosureTypeRef )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:1845:2: ( ruleClosureTypeRef )
                    // InternalSimpleBeeLangTestLanguage.g:1846:3: ruleClosureTypeRef
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTypeRefAccess().getClosureTypeRefParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleClosureTypeRef();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTypeRefAccess().getClosureTypeRefParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSimpleBeeLangTestLanguage.g:1851:2: ( ruleSimpleTypeRef )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:1851:2: ( ruleSimpleTypeRef )
                    // InternalSimpleBeeLangTestLanguage.g:1852:3: ruleSimpleTypeRef
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTypeRefAccess().getSimpleTypeRefParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleSimpleTypeRef();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTypeRefAccess().getSimpleTypeRefParserRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 128, rule__TypeRef__Alternatives_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeRef__Alternatives"


    // $ANTLR start "rule__ClosureTypeRef__Alternatives_1"
    // InternalSimpleBeeLangTestLanguage.g:1861:1: rule__ClosureTypeRef__Alternatives_1 : ( ( ( rule__ClosureTypeRef__Group_1_0__0 ) ) | ( ( rule__ClosureTypeRef__Group_1_1__0 ) ) );
    public final void rule__ClosureTypeRef__Alternatives_1() throws RecognitionException {
        int rule__ClosureTypeRef__Alternatives_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 129) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:1865:1: ( ( ( rule__ClosureTypeRef__Group_1_0__0 ) ) | ( ( rule__ClosureTypeRef__Group_1_1__0 ) ) )
            int alt17=2;
            int LA17_0 = input.LA(1);

            if ( (LA17_0==RULE_ID) ) {
                alt17=1;
            }
            else if ( (LA17_0==75) ) {
                alt17=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 17, 0, input);

                throw nvae;
            }
            switch (alt17) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:1866:2: ( ( rule__ClosureTypeRef__Group_1_0__0 ) )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:1866:2: ( ( rule__ClosureTypeRef__Group_1_0__0 ) )
                    // InternalSimpleBeeLangTestLanguage.g:1867:3: ( rule__ClosureTypeRef__Group_1_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getClosureTypeRefAccess().getGroup_1_0()); 
                    }
                    // InternalSimpleBeeLangTestLanguage.g:1868:3: ( rule__ClosureTypeRef__Group_1_0__0 )
                    // InternalSimpleBeeLangTestLanguage.g:1868:4: rule__ClosureTypeRef__Group_1_0__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ClosureTypeRef__Group_1_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getClosureTypeRefAccess().getGroup_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSimpleBeeLangTestLanguage.g:1872:2: ( ( rule__ClosureTypeRef__Group_1_1__0 ) )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:1872:2: ( ( rule__ClosureTypeRef__Group_1_1__0 ) )
                    // InternalSimpleBeeLangTestLanguage.g:1873:3: ( rule__ClosureTypeRef__Group_1_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getClosureTypeRefAccess().getGroup_1_1()); 
                    }
                    // InternalSimpleBeeLangTestLanguage.g:1874:3: ( rule__ClosureTypeRef__Group_1_1__0 )
                    // InternalSimpleBeeLangTestLanguage.g:1874:4: rule__ClosureTypeRef__Group_1_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ClosureTypeRef__Group_1_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getClosureTypeRefAccess().getGroup_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 129, rule__ClosureTypeRef__Alternatives_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureTypeRef__Alternatives_1"


    // $ANTLR start "rule__CachedExpression__Alternatives"
    // InternalSimpleBeeLangTestLanguage.g:1882:1: rule__CachedExpression__Alternatives : ( ( ( rule__CachedExpression__Group_0__0 ) ) | ( ruleOrExpression ) );
    public final void rule__CachedExpression__Alternatives() throws RecognitionException {
        int rule__CachedExpression__Alternatives_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 130) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:1886:1: ( ( ( rule__CachedExpression__Group_0__0 ) ) | ( ruleOrExpression ) )
            int alt18=2;
            int LA18_0 = input.LA(1);

            if ( (LA18_0==63) ) {
                alt18=1;
            }
            else if ( (LA18_0==RULE_STRING||LA18_0==RULE_ID||LA18_0==13||LA18_0==31||(LA18_0>=35 && LA18_0<=44)||LA18_0==60||LA18_0==69||LA18_0==71) ) {
                alt18=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 18, 0, input);

                throw nvae;
            }
            switch (alt18) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:1887:2: ( ( rule__CachedExpression__Group_0__0 ) )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:1887:2: ( ( rule__CachedExpression__Group_0__0 ) )
                    // InternalSimpleBeeLangTestLanguage.g:1888:3: ( rule__CachedExpression__Group_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getCachedExpressionAccess().getGroup_0()); 
                    }
                    // InternalSimpleBeeLangTestLanguage.g:1889:3: ( rule__CachedExpression__Group_0__0 )
                    // InternalSimpleBeeLangTestLanguage.g:1889:4: rule__CachedExpression__Group_0__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__CachedExpression__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getCachedExpressionAccess().getGroup_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSimpleBeeLangTestLanguage.g:1893:2: ( ruleOrExpression )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:1893:2: ( ruleOrExpression )
                    // InternalSimpleBeeLangTestLanguage.g:1894:3: ruleOrExpression
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getCachedExpressionAccess().getOrExpressionParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleOrExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getCachedExpressionAccess().getOrExpressionParserRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 130, rule__CachedExpression__Alternatives_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CachedExpression__Alternatives"


    // $ANTLR start "rule__AdditiveExpression__FunctionNameAlternatives_1_1_0"
    // InternalSimpleBeeLangTestLanguage.g:1903:1: rule__AdditiveExpression__FunctionNameAlternatives_1_1_0 : ( ( '+' ) | ( '-' ) );
    public final void rule__AdditiveExpression__FunctionNameAlternatives_1_1_0() throws RecognitionException {
        int rule__AdditiveExpression__FunctionNameAlternatives_1_1_0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 131) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:1907:1: ( ( '+' ) | ( '-' ) )
            int alt19=2;
            int LA19_0 = input.LA(1);

            if ( (LA19_0==30) ) {
                alt19=1;
            }
            else if ( (LA19_0==31) ) {
                alt19=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 19, 0, input);

                throw nvae;
            }
            switch (alt19) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:1908:2: ( '+' )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:1908:2: ( '+' )
                    // InternalSimpleBeeLangTestLanguage.g:1909:3: '+'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAdditiveExpressionAccess().getFunctionNamePlusSignKeyword_1_1_0_0()); 
                    }
                    match(input,30,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAdditiveExpressionAccess().getFunctionNamePlusSignKeyword_1_1_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSimpleBeeLangTestLanguage.g:1914:2: ( '-' )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:1914:2: ( '-' )
                    // InternalSimpleBeeLangTestLanguage.g:1915:3: '-'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAdditiveExpressionAccess().getFunctionNameHyphenMinusKeyword_1_1_0_1()); 
                    }
                    match(input,31,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAdditiveExpressionAccess().getFunctionNameHyphenMinusKeyword_1_1_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 131, rule__AdditiveExpression__FunctionNameAlternatives_1_1_0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AdditiveExpression__FunctionNameAlternatives_1_1_0"


    // $ANTLR start "rule__MultiplicativeExpression__FunctionNameAlternatives_1_1_0"
    // InternalSimpleBeeLangTestLanguage.g:1924:1: rule__MultiplicativeExpression__FunctionNameAlternatives_1_1_0 : ( ( '*' ) | ( '/' ) | ( '%' ) );
    public final void rule__MultiplicativeExpression__FunctionNameAlternatives_1_1_0() throws RecognitionException {
        int rule__MultiplicativeExpression__FunctionNameAlternatives_1_1_0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 132) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:1928:1: ( ( '*' ) | ( '/' ) | ( '%' ) )
            int alt20=3;
            switch ( input.LA(1) ) {
            case 32:
                {
                alt20=1;
                }
                break;
            case 33:
                {
                alt20=2;
                }
                break;
            case 34:
                {
                alt20=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 20, 0, input);

                throw nvae;
            }

            switch (alt20) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:1929:2: ( '*' )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:1929:2: ( '*' )
                    // InternalSimpleBeeLangTestLanguage.g:1930:3: '*'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getMultiplicativeExpressionAccess().getFunctionNameAsteriskKeyword_1_1_0_0()); 
                    }
                    match(input,32,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getMultiplicativeExpressionAccess().getFunctionNameAsteriskKeyword_1_1_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSimpleBeeLangTestLanguage.g:1935:2: ( '/' )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:1935:2: ( '/' )
                    // InternalSimpleBeeLangTestLanguage.g:1936:3: '/'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getMultiplicativeExpressionAccess().getFunctionNameSolidusKeyword_1_1_0_1()); 
                    }
                    match(input,33,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getMultiplicativeExpressionAccess().getFunctionNameSolidusKeyword_1_1_0_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSimpleBeeLangTestLanguage.g:1941:2: ( '%' )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:1941:2: ( '%' )
                    // InternalSimpleBeeLangTestLanguage.g:1942:3: '%'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getMultiplicativeExpressionAccess().getFunctionNamePercentSignKeyword_1_1_0_2()); 
                    }
                    match(input,34,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getMultiplicativeExpressionAccess().getFunctionNamePercentSignKeyword_1_1_0_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 132, rule__MultiplicativeExpression__FunctionNameAlternatives_1_1_0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultiplicativeExpression__FunctionNameAlternatives_1_1_0"


    // $ANTLR start "rule__UnaryOrInfixExpression__Alternatives"
    // InternalSimpleBeeLangTestLanguage.g:1951:1: rule__UnaryOrInfixExpression__Alternatives : ( ( rulePostopExpression ) | ( ruleUnaryExpression ) | ( rulePreopExpression ) );
    public final void rule__UnaryOrInfixExpression__Alternatives() throws RecognitionException {
        int rule__UnaryOrInfixExpression__Alternatives_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 133) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:1955:1: ( ( rulePostopExpression ) | ( ruleUnaryExpression ) | ( rulePreopExpression ) )
            int alt21=3;
            switch ( input.LA(1) ) {
            case RULE_STRING:
            case RULE_ID:
            case 13:
            case 38:
            case 39:
            case 40:
            case 41:
            case 42:
            case 43:
            case 44:
            case 60:
            case 69:
            case 71:
                {
                alt21=1;
                }
                break;
            case 31:
            case 35:
                {
                alt21=2;
                }
                break;
            case 36:
            case 37:
                {
                alt21=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 21, 0, input);

                throw nvae;
            }

            switch (alt21) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:1956:2: ( rulePostopExpression )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:1956:2: ( rulePostopExpression )
                    // InternalSimpleBeeLangTestLanguage.g:1957:3: rulePostopExpression
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnaryOrInfixExpressionAccess().getPostopExpressionParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    rulePostopExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnaryOrInfixExpressionAccess().getPostopExpressionParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSimpleBeeLangTestLanguage.g:1962:2: ( ruleUnaryExpression )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:1962:2: ( ruleUnaryExpression )
                    // InternalSimpleBeeLangTestLanguage.g:1963:3: ruleUnaryExpression
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnaryOrInfixExpressionAccess().getUnaryExpressionParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleUnaryExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnaryOrInfixExpressionAccess().getUnaryExpressionParserRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSimpleBeeLangTestLanguage.g:1968:2: ( rulePreopExpression )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:1968:2: ( rulePreopExpression )
                    // InternalSimpleBeeLangTestLanguage.g:1969:3: rulePreopExpression
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnaryOrInfixExpressionAccess().getPreopExpressionParserRuleCall_2()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    rulePreopExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnaryOrInfixExpressionAccess().getPreopExpressionParserRuleCall_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 133, rule__UnaryOrInfixExpression__Alternatives_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnaryOrInfixExpression__Alternatives"


    // $ANTLR start "rule__UnaryExpression__FunctionNameAlternatives_1_0"
    // InternalSimpleBeeLangTestLanguage.g:1978:1: rule__UnaryExpression__FunctionNameAlternatives_1_0 : ( ( '!' ) | ( '-' ) );
    public final void rule__UnaryExpression__FunctionNameAlternatives_1_0() throws RecognitionException {
        int rule__UnaryExpression__FunctionNameAlternatives_1_0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 134) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:1982:1: ( ( '!' ) | ( '-' ) )
            int alt22=2;
            int LA22_0 = input.LA(1);

            if ( (LA22_0==35) ) {
                alt22=1;
            }
            else if ( (LA22_0==31) ) {
                alt22=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 22, 0, input);

                throw nvae;
            }
            switch (alt22) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:1983:2: ( '!' )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:1983:2: ( '!' )
                    // InternalSimpleBeeLangTestLanguage.g:1984:3: '!'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnaryExpressionAccess().getFunctionNameExclamationMarkKeyword_1_0_0()); 
                    }
                    match(input,35,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnaryExpressionAccess().getFunctionNameExclamationMarkKeyword_1_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSimpleBeeLangTestLanguage.g:1989:2: ( '-' )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:1989:2: ( '-' )
                    // InternalSimpleBeeLangTestLanguage.g:1990:3: '-'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnaryExpressionAccess().getFunctionNameHyphenMinusKeyword_1_0_1()); 
                    }
                    match(input,31,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnaryExpressionAccess().getFunctionNameHyphenMinusKeyword_1_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 134, rule__UnaryExpression__FunctionNameAlternatives_1_0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnaryExpression__FunctionNameAlternatives_1_0"


    // $ANTLR start "rule__PreopExpression__FunctionNameAlternatives_1_0"
    // InternalSimpleBeeLangTestLanguage.g:1999:1: rule__PreopExpression__FunctionNameAlternatives_1_0 : ( ( '++' ) | ( '--' ) );
    public final void rule__PreopExpression__FunctionNameAlternatives_1_0() throws RecognitionException {
        int rule__PreopExpression__FunctionNameAlternatives_1_0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 135) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:2003:1: ( ( '++' ) | ( '--' ) )
            int alt23=2;
            int LA23_0 = input.LA(1);

            if ( (LA23_0==36) ) {
                alt23=1;
            }
            else if ( (LA23_0==37) ) {
                alt23=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 23, 0, input);

                throw nvae;
            }
            switch (alt23) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:2004:2: ( '++' )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:2004:2: ( '++' )
                    // InternalSimpleBeeLangTestLanguage.g:2005:3: '++'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPreopExpressionAccess().getFunctionNamePlusSignPlusSignKeyword_1_0_0()); 
                    }
                    match(input,36,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPreopExpressionAccess().getFunctionNamePlusSignPlusSignKeyword_1_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSimpleBeeLangTestLanguage.g:2010:2: ( '--' )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:2010:2: ( '--' )
                    // InternalSimpleBeeLangTestLanguage.g:2011:3: '--'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPreopExpressionAccess().getFunctionNameHyphenMinusHyphenMinusKeyword_1_0_1()); 
                    }
                    match(input,37,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPreopExpressionAccess().getFunctionNameHyphenMinusHyphenMinusKeyword_1_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 135, rule__PreopExpression__FunctionNameAlternatives_1_0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PreopExpression__FunctionNameAlternatives_1_0"


    // $ANTLR start "rule__PostopExpression__FunctionNameAlternatives_1_1_0"
    // InternalSimpleBeeLangTestLanguage.g:2020:1: rule__PostopExpression__FunctionNameAlternatives_1_1_0 : ( ( '--' ) | ( '++' ) );
    public final void rule__PostopExpression__FunctionNameAlternatives_1_1_0() throws RecognitionException {
        int rule__PostopExpression__FunctionNameAlternatives_1_1_0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 136) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:2024:1: ( ( '--' ) | ( '++' ) )
            int alt24=2;
            int LA24_0 = input.LA(1);

            if ( (LA24_0==37) ) {
                alt24=1;
            }
            else if ( (LA24_0==36) ) {
                alt24=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 24, 0, input);

                throw nvae;
            }
            switch (alt24) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:2025:2: ( '--' )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:2025:2: ( '--' )
                    // InternalSimpleBeeLangTestLanguage.g:2026:3: '--'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPostopExpressionAccess().getFunctionNameHyphenMinusHyphenMinusKeyword_1_1_0_0()); 
                    }
                    match(input,37,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPostopExpressionAccess().getFunctionNameHyphenMinusHyphenMinusKeyword_1_1_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSimpleBeeLangTestLanguage.g:2031:2: ( '++' )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:2031:2: ( '++' )
                    // InternalSimpleBeeLangTestLanguage.g:2032:3: '++'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPostopExpressionAccess().getFunctionNamePlusSignPlusSignKeyword_1_1_0_1()); 
                    }
                    match(input,36,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPostopExpressionAccess().getFunctionNamePlusSignPlusSignKeyword_1_1_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 136, rule__PostopExpression__FunctionNameAlternatives_1_1_0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PostopExpression__FunctionNameAlternatives_1_1_0"


    // $ANTLR start "rule__InfixExpression__Alternatives_1"
    // InternalSimpleBeeLangTestLanguage.g:2041:1: rule__InfixExpression__Alternatives_1 : ( ( ( rule__InfixExpression__Group_1_0__0 ) ) | ( ( rule__InfixExpression__Group_1_1__0 ) ) | ( ( rule__InfixExpression__Group_1_2__0 ) ) );
    public final void rule__InfixExpression__Alternatives_1() throws RecognitionException {
        int rule__InfixExpression__Alternatives_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 137) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:2045:1: ( ( ( rule__InfixExpression__Group_1_0__0 ) ) | ( ( rule__InfixExpression__Group_1_1__0 ) ) | ( ( rule__InfixExpression__Group_1_2__0 ) ) )
            int alt25=3;
            int LA25_0 = input.LA(1);

            if ( (LA25_0==66) ) {
                int LA25_1 = input.LA(2);

                if ( (synpred39_InternalSimpleBeeLangTestLanguage()) ) {
                    alt25=1;
                }
                else if ( (true) ) {
                    alt25=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 25, 1, input);

                    throw nvae;
                }
            }
            else if ( (LA25_0==67) ) {
                alt25=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 25, 0, input);

                throw nvae;
            }
            switch (alt25) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:2046:2: ( ( rule__InfixExpression__Group_1_0__0 ) )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:2046:2: ( ( rule__InfixExpression__Group_1_0__0 ) )
                    // InternalSimpleBeeLangTestLanguage.g:2047:3: ( rule__InfixExpression__Group_1_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getInfixExpressionAccess().getGroup_1_0()); 
                    }
                    // InternalSimpleBeeLangTestLanguage.g:2048:3: ( rule__InfixExpression__Group_1_0__0 )
                    // InternalSimpleBeeLangTestLanguage.g:2048:4: rule__InfixExpression__Group_1_0__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__InfixExpression__Group_1_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getInfixExpressionAccess().getGroup_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSimpleBeeLangTestLanguage.g:2052:2: ( ( rule__InfixExpression__Group_1_1__0 ) )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:2052:2: ( ( rule__InfixExpression__Group_1_1__0 ) )
                    // InternalSimpleBeeLangTestLanguage.g:2053:3: ( rule__InfixExpression__Group_1_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getInfixExpressionAccess().getGroup_1_1()); 
                    }
                    // InternalSimpleBeeLangTestLanguage.g:2054:3: ( rule__InfixExpression__Group_1_1__0 )
                    // InternalSimpleBeeLangTestLanguage.g:2054:4: rule__InfixExpression__Group_1_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__InfixExpression__Group_1_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getInfixExpressionAccess().getGroup_1_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSimpleBeeLangTestLanguage.g:2058:2: ( ( rule__InfixExpression__Group_1_2__0 ) )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:2058:2: ( ( rule__InfixExpression__Group_1_2__0 ) )
                    // InternalSimpleBeeLangTestLanguage.g:2059:3: ( rule__InfixExpression__Group_1_2__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getInfixExpressionAccess().getGroup_1_2()); 
                    }
                    // InternalSimpleBeeLangTestLanguage.g:2060:3: ( rule__InfixExpression__Group_1_2__0 )
                    // InternalSimpleBeeLangTestLanguage.g:2060:4: rule__InfixExpression__Group_1_2__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__InfixExpression__Group_1_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getInfixExpressionAccess().getGroup_1_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 137, rule__InfixExpression__Alternatives_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InfixExpression__Alternatives_1"


    // $ANTLR start "rule__PrimaryExpression__Alternatives"
    // InternalSimpleBeeLangTestLanguage.g:2068:1: rule__PrimaryExpression__Alternatives : ( ( ruleFeatureCall ) | ( ruleConstructorCallExpression ) | ( ruleValue ) | ( ruleLiteral ) | ( ruleKeywordVariables ) | ( ruleParanthesizedExpression ) | ( ruleBlockExpression ) | ( ruleWithExpression ) | ( ruleWithContextExpression ) );
    public final void rule__PrimaryExpression__Alternatives() throws RecognitionException {
        int rule__PrimaryExpression__Alternatives_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 138) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:2072:1: ( ( ruleFeatureCall ) | ( ruleConstructorCallExpression ) | ( ruleValue ) | ( ruleLiteral ) | ( ruleKeywordVariables ) | ( ruleParanthesizedExpression ) | ( ruleBlockExpression ) | ( ruleWithExpression ) | ( ruleWithContextExpression ) )
            int alt26=9;
            alt26 = dfa26.predict(input);
            switch (alt26) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:2073:2: ( ruleFeatureCall )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:2073:2: ( ruleFeatureCall )
                    // InternalSimpleBeeLangTestLanguage.g:2074:3: ruleFeatureCall
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPrimaryExpressionAccess().getFeatureCallParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleFeatureCall();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPrimaryExpressionAccess().getFeatureCallParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSimpleBeeLangTestLanguage.g:2079:2: ( ruleConstructorCallExpression )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:2079:2: ( ruleConstructorCallExpression )
                    // InternalSimpleBeeLangTestLanguage.g:2080:3: ruleConstructorCallExpression
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPrimaryExpressionAccess().getConstructorCallExpressionParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleConstructorCallExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPrimaryExpressionAccess().getConstructorCallExpressionParserRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSimpleBeeLangTestLanguage.g:2085:2: ( ruleValue )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:2085:2: ( ruleValue )
                    // InternalSimpleBeeLangTestLanguage.g:2086:3: ruleValue
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPrimaryExpressionAccess().getValueParserRuleCall_2()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleValue();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPrimaryExpressionAccess().getValueParserRuleCall_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSimpleBeeLangTestLanguage.g:2091:2: ( ruleLiteral )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:2091:2: ( ruleLiteral )
                    // InternalSimpleBeeLangTestLanguage.g:2092:3: ruleLiteral
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPrimaryExpressionAccess().getLiteralParserRuleCall_3()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleLiteral();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPrimaryExpressionAccess().getLiteralParserRuleCall_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSimpleBeeLangTestLanguage.g:2097:2: ( ruleKeywordVariables )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:2097:2: ( ruleKeywordVariables )
                    // InternalSimpleBeeLangTestLanguage.g:2098:3: ruleKeywordVariables
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPrimaryExpressionAccess().getKeywordVariablesParserRuleCall_4()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleKeywordVariables();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPrimaryExpressionAccess().getKeywordVariablesParserRuleCall_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalSimpleBeeLangTestLanguage.g:2103:2: ( ruleParanthesizedExpression )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:2103:2: ( ruleParanthesizedExpression )
                    // InternalSimpleBeeLangTestLanguage.g:2104:3: ruleParanthesizedExpression
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPrimaryExpressionAccess().getParanthesizedExpressionParserRuleCall_5()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleParanthesizedExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPrimaryExpressionAccess().getParanthesizedExpressionParserRuleCall_5()); 
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalSimpleBeeLangTestLanguage.g:2109:2: ( ruleBlockExpression )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:2109:2: ( ruleBlockExpression )
                    // InternalSimpleBeeLangTestLanguage.g:2110:3: ruleBlockExpression
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPrimaryExpressionAccess().getBlockExpressionParserRuleCall_6()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleBlockExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPrimaryExpressionAccess().getBlockExpressionParserRuleCall_6()); 
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalSimpleBeeLangTestLanguage.g:2115:2: ( ruleWithExpression )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:2115:2: ( ruleWithExpression )
                    // InternalSimpleBeeLangTestLanguage.g:2116:3: ruleWithExpression
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPrimaryExpressionAccess().getWithExpressionParserRuleCall_7()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleWithExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPrimaryExpressionAccess().getWithExpressionParserRuleCall_7()); 
                    }

                    }


                    }
                    break;
                case 9 :
                    // InternalSimpleBeeLangTestLanguage.g:2121:2: ( ruleWithContextExpression )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:2121:2: ( ruleWithContextExpression )
                    // InternalSimpleBeeLangTestLanguage.g:2122:3: ruleWithContextExpression
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPrimaryExpressionAccess().getWithContextExpressionParserRuleCall_8()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleWithContextExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPrimaryExpressionAccess().getWithContextExpressionParserRuleCall_8()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 138, rule__PrimaryExpression__Alternatives_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PrimaryExpression__Alternatives"


    // $ANTLR start "rule__WithExpression__Alternatives_2"
    // InternalSimpleBeeLangTestLanguage.g:2131:1: rule__WithExpression__Alternatives_2 : ( ( ( rule__WithExpression__Group_2_0__0 ) ) | ( ( rule__WithExpression__Group_2_1__0 ) ) );
    public final void rule__WithExpression__Alternatives_2() throws RecognitionException {
        int rule__WithExpression__Alternatives_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 139) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:2135:1: ( ( ( rule__WithExpression__Group_2_0__0 ) ) | ( ( rule__WithExpression__Group_2_1__0 ) ) )
            int alt27=2;
            int LA27_0 = input.LA(1);

            if ( (LA27_0==49) ) {
                alt27=1;
            }
            else if ( (LA27_0==44) ) {
                alt27=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 27, 0, input);

                throw nvae;
            }
            switch (alt27) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:2136:2: ( ( rule__WithExpression__Group_2_0__0 ) )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:2136:2: ( ( rule__WithExpression__Group_2_0__0 ) )
                    // InternalSimpleBeeLangTestLanguage.g:2137:3: ( rule__WithExpression__Group_2_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getWithExpressionAccess().getGroup_2_0()); 
                    }
                    // InternalSimpleBeeLangTestLanguage.g:2138:3: ( rule__WithExpression__Group_2_0__0 )
                    // InternalSimpleBeeLangTestLanguage.g:2138:4: rule__WithExpression__Group_2_0__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__WithExpression__Group_2_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getWithExpressionAccess().getGroup_2_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSimpleBeeLangTestLanguage.g:2142:2: ( ( rule__WithExpression__Group_2_1__0 ) )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:2142:2: ( ( rule__WithExpression__Group_2_1__0 ) )
                    // InternalSimpleBeeLangTestLanguage.g:2143:3: ( rule__WithExpression__Group_2_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getWithExpressionAccess().getGroup_2_1()); 
                    }
                    // InternalSimpleBeeLangTestLanguage.g:2144:3: ( rule__WithExpression__Group_2_1__0 )
                    // InternalSimpleBeeLangTestLanguage.g:2144:4: rule__WithExpression__Group_2_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__WithExpression__Group_2_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getWithExpressionAccess().getGroup_2_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 139, rule__WithExpression__Alternatives_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithExpression__Alternatives_2"


    // $ANTLR start "rule__KeywordVariables__NameAlternatives_1_0"
    // InternalSimpleBeeLangTestLanguage.g:2152:1: rule__KeywordVariables__NameAlternatives_1_0 : ( ( 'input' ) | ( 'output' ) | ( 'source' ) | ( 'properties' ) | ( 'builder' ) | ( 'unit' ) | ( 'this' ) );
    public final void rule__KeywordVariables__NameAlternatives_1_0() throws RecognitionException {
        int rule__KeywordVariables__NameAlternatives_1_0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 140) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:2156:1: ( ( 'input' ) | ( 'output' ) | ( 'source' ) | ( 'properties' ) | ( 'builder' ) | ( 'unit' ) | ( 'this' ) )
            int alt28=7;
            switch ( input.LA(1) ) {
            case 38:
                {
                alt28=1;
                }
                break;
            case 39:
                {
                alt28=2;
                }
                break;
            case 40:
                {
                alt28=3;
                }
                break;
            case 41:
                {
                alt28=4;
                }
                break;
            case 42:
                {
                alt28=5;
                }
                break;
            case 13:
                {
                alt28=6;
                }
                break;
            case 43:
                {
                alt28=7;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 28, 0, input);

                throw nvae;
            }

            switch (alt28) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:2157:2: ( 'input' )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:2157:2: ( 'input' )
                    // InternalSimpleBeeLangTestLanguage.g:2158:3: 'input'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getKeywordVariablesAccess().getNameInputKeyword_1_0_0()); 
                    }
                    match(input,38,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getKeywordVariablesAccess().getNameInputKeyword_1_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSimpleBeeLangTestLanguage.g:2163:2: ( 'output' )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:2163:2: ( 'output' )
                    // InternalSimpleBeeLangTestLanguage.g:2164:3: 'output'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getKeywordVariablesAccess().getNameOutputKeyword_1_0_1()); 
                    }
                    match(input,39,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getKeywordVariablesAccess().getNameOutputKeyword_1_0_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSimpleBeeLangTestLanguage.g:2169:2: ( 'source' )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:2169:2: ( 'source' )
                    // InternalSimpleBeeLangTestLanguage.g:2170:3: 'source'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getKeywordVariablesAccess().getNameSourceKeyword_1_0_2()); 
                    }
                    match(input,40,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getKeywordVariablesAccess().getNameSourceKeyword_1_0_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSimpleBeeLangTestLanguage.g:2175:2: ( 'properties' )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:2175:2: ( 'properties' )
                    // InternalSimpleBeeLangTestLanguage.g:2176:3: 'properties'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getKeywordVariablesAccess().getNamePropertiesKeyword_1_0_3()); 
                    }
                    match(input,41,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getKeywordVariablesAccess().getNamePropertiesKeyword_1_0_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSimpleBeeLangTestLanguage.g:2181:2: ( 'builder' )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:2181:2: ( 'builder' )
                    // InternalSimpleBeeLangTestLanguage.g:2182:3: 'builder'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getKeywordVariablesAccess().getNameBuilderKeyword_1_0_4()); 
                    }
                    match(input,42,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getKeywordVariablesAccess().getNameBuilderKeyword_1_0_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalSimpleBeeLangTestLanguage.g:2187:2: ( 'unit' )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:2187:2: ( 'unit' )
                    // InternalSimpleBeeLangTestLanguage.g:2188:3: 'unit'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getKeywordVariablesAccess().getNameUnitKeyword_1_0_5()); 
                    }
                    match(input,13,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getKeywordVariablesAccess().getNameUnitKeyword_1_0_5()); 
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalSimpleBeeLangTestLanguage.g:2193:2: ( 'this' )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:2193:2: ( 'this' )
                    // InternalSimpleBeeLangTestLanguage.g:2194:3: 'this'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getKeywordVariablesAccess().getNameThisKeyword_1_0_6()); 
                    }
                    match(input,43,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getKeywordVariablesAccess().getNameThisKeyword_1_0_6()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 140, rule__KeywordVariables__NameAlternatives_1_0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__KeywordVariables__NameAlternatives_1_0"


    // $ANTLR start "rule__Literal__Alternatives"
    // InternalSimpleBeeLangTestLanguage.g:2203:1: rule__Literal__Alternatives : ( ( ruleValueLiteral ) | ( ruleLiteralFunction ) );
    public final void rule__Literal__Alternatives() throws RecognitionException {
        int rule__Literal__Alternatives_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 141) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:2207:1: ( ( ruleValueLiteral ) | ( ruleLiteralFunction ) )
            int alt29=2;
            int LA29_0 = input.LA(1);

            if ( (LA29_0==RULE_STRING) ) {
                alt29=1;
            }
            else if ( (LA29_0==44) ) {
                alt29=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 29, 0, input);

                throw nvae;
            }
            switch (alt29) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:2208:2: ( ruleValueLiteral )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:2208:2: ( ruleValueLiteral )
                    // InternalSimpleBeeLangTestLanguage.g:2209:3: ruleValueLiteral
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getLiteralAccess().getValueLiteralParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleValueLiteral();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getLiteralAccess().getValueLiteralParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSimpleBeeLangTestLanguage.g:2214:2: ( ruleLiteralFunction )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:2214:2: ( ruleLiteralFunction )
                    // InternalSimpleBeeLangTestLanguage.g:2215:3: ruleLiteralFunction
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getLiteralAccess().getLiteralFunctionParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleLiteralFunction();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getLiteralAccess().getLiteralFunctionParserRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 141, rule__Literal__Alternatives_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Literal__Alternatives"


    // $ANTLR start "rule__ClosureExpression__Alternatives_2"
    // InternalSimpleBeeLangTestLanguage.g:2224:1: rule__ClosureExpression__Alternatives_2 : ( ( ( rule__ClosureExpression__Group_2_0__0 ) ) | ( ( rule__ClosureExpression__Group_2_1__0 ) ) );
    public final void rule__ClosureExpression__Alternatives_2() throws RecognitionException {
        int rule__ClosureExpression__Alternatives_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 142) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:2228:1: ( ( ( rule__ClosureExpression__Group_2_0__0 ) ) | ( ( rule__ClosureExpression__Group_2_1__0 ) ) )
            int alt30=2;
            int LA30_0 = input.LA(1);

            if ( (LA30_0==RULE_ID||LA30_0==60||LA30_0==72) ) {
                alt30=1;
            }
            else if ( (LA30_0==75) ) {
                alt30=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 30, 0, input);

                throw nvae;
            }
            switch (alt30) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:2229:2: ( ( rule__ClosureExpression__Group_2_0__0 ) )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:2229:2: ( ( rule__ClosureExpression__Group_2_0__0 ) )
                    // InternalSimpleBeeLangTestLanguage.g:2230:3: ( rule__ClosureExpression__Group_2_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getClosureExpressionAccess().getGroup_2_0()); 
                    }
                    // InternalSimpleBeeLangTestLanguage.g:2231:3: ( rule__ClosureExpression__Group_2_0__0 )
                    // InternalSimpleBeeLangTestLanguage.g:2231:4: rule__ClosureExpression__Group_2_0__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ClosureExpression__Group_2_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getClosureExpressionAccess().getGroup_2_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSimpleBeeLangTestLanguage.g:2235:2: ( ( rule__ClosureExpression__Group_2_1__0 ) )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:2235:2: ( ( rule__ClosureExpression__Group_2_1__0 ) )
                    // InternalSimpleBeeLangTestLanguage.g:2236:3: ( rule__ClosureExpression__Group_2_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getClosureExpressionAccess().getGroup_2_1()); 
                    }
                    // InternalSimpleBeeLangTestLanguage.g:2237:3: ( rule__ClosureExpression__Group_2_1__0 )
                    // InternalSimpleBeeLangTestLanguage.g:2237:4: rule__ClosureExpression__Group_2_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ClosureExpression__Group_2_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getClosureExpressionAccess().getGroup_2_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 142, rule__ClosureExpression__Alternatives_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Alternatives_2"


    // $ANTLR start "rule__OneOrManyExpressions__Alternatives"
    // InternalSimpleBeeLangTestLanguage.g:2245:1: rule__OneOrManyExpressions__Alternatives : ( ( ruleBlockExpressionWithoutBrackets ) | ( ruleExpression ) );
    public final void rule__OneOrManyExpressions__Alternatives() throws RecognitionException {
        int rule__OneOrManyExpressions__Alternatives_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 143) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:2249:1: ( ( ruleBlockExpressionWithoutBrackets ) | ( ruleExpression ) )
            int alt31=2;
            alt31 = dfa31.predict(input);
            switch (alt31) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:2250:2: ( ruleBlockExpressionWithoutBrackets )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:2250:2: ( ruleBlockExpressionWithoutBrackets )
                    // InternalSimpleBeeLangTestLanguage.g:2251:3: ruleBlockExpressionWithoutBrackets
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOneOrManyExpressionsAccess().getBlockExpressionWithoutBracketsParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleBlockExpressionWithoutBrackets();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOneOrManyExpressionsAccess().getBlockExpressionWithoutBracketsParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSimpleBeeLangTestLanguage.g:2256:2: ( ruleExpression )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:2256:2: ( ruleExpression )
                    // InternalSimpleBeeLangTestLanguage.g:2257:3: ruleExpression
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOneOrManyExpressionsAccess().getExpressionParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOneOrManyExpressionsAccess().getExpressionParserRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 143, rule__OneOrManyExpressions__Alternatives_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OneOrManyExpressions__Alternatives"


    // $ANTLR start "rule__QID__Alternatives_1"
    // InternalSimpleBeeLangTestLanguage.g:2266:1: rule__QID__Alternatives_1 : ( ( RULE_INT ) | ( RULE_HEX ) | ( RULE_ID ) );
    public final void rule__QID__Alternatives_1() throws RecognitionException {
        int rule__QID__Alternatives_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 144) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:2270:1: ( ( RULE_INT ) | ( RULE_HEX ) | ( RULE_ID ) )
            int alt32=3;
            switch ( input.LA(1) ) {
            case RULE_INT:
                {
                alt32=1;
                }
                break;
            case RULE_HEX:
                {
                alt32=2;
                }
                break;
            case RULE_ID:
                {
                alt32=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 32, 0, input);

                throw nvae;
            }

            switch (alt32) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:2271:2: ( RULE_INT )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:2271:2: ( RULE_INT )
                    // InternalSimpleBeeLangTestLanguage.g:2272:3: RULE_INT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getQIDAccess().getINTTerminalRuleCall_1_0()); 
                    }
                    match(input,RULE_INT,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getQIDAccess().getINTTerminalRuleCall_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSimpleBeeLangTestLanguage.g:2277:2: ( RULE_HEX )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:2277:2: ( RULE_HEX )
                    // InternalSimpleBeeLangTestLanguage.g:2278:3: RULE_HEX
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getQIDAccess().getHEXTerminalRuleCall_1_1()); 
                    }
                    match(input,RULE_HEX,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getQIDAccess().getHEXTerminalRuleCall_1_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSimpleBeeLangTestLanguage.g:2283:2: ( RULE_ID )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:2283:2: ( RULE_ID )
                    // InternalSimpleBeeLangTestLanguage.g:2284:3: RULE_ID
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getQIDAccess().getIDTerminalRuleCall_1_2()); 
                    }
                    match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getQIDAccess().getIDTerminalRuleCall_1_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 144, rule__QID__Alternatives_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QID__Alternatives_1"


    // $ANTLR start "rule__QID__Alternatives_2_2"
    // InternalSimpleBeeLangTestLanguage.g:2293:1: rule__QID__Alternatives_2_2 : ( ( RULE_INT ) | ( RULE_HEX ) | ( RULE_ID ) );
    public final void rule__QID__Alternatives_2_2() throws RecognitionException {
        int rule__QID__Alternatives_2_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 145) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:2297:1: ( ( RULE_INT ) | ( RULE_HEX ) | ( RULE_ID ) )
            int alt33=3;
            switch ( input.LA(1) ) {
            case RULE_INT:
                {
                alt33=1;
                }
                break;
            case RULE_HEX:
                {
                alt33=2;
                }
                break;
            case RULE_ID:
                {
                alt33=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 33, 0, input);

                throw nvae;
            }

            switch (alt33) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:2298:2: ( RULE_INT )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:2298:2: ( RULE_INT )
                    // InternalSimpleBeeLangTestLanguage.g:2299:3: RULE_INT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getQIDAccess().getINTTerminalRuleCall_2_2_0()); 
                    }
                    match(input,RULE_INT,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getQIDAccess().getINTTerminalRuleCall_2_2_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSimpleBeeLangTestLanguage.g:2304:2: ( RULE_HEX )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:2304:2: ( RULE_HEX )
                    // InternalSimpleBeeLangTestLanguage.g:2305:3: RULE_HEX
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getQIDAccess().getHEXTerminalRuleCall_2_2_1()); 
                    }
                    match(input,RULE_HEX,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getQIDAccess().getHEXTerminalRuleCall_2_2_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSimpleBeeLangTestLanguage.g:2310:2: ( RULE_ID )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:2310:2: ( RULE_ID )
                    // InternalSimpleBeeLangTestLanguage.g:2311:3: RULE_ID
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getQIDAccess().getIDTerminalRuleCall_2_2_2()); 
                    }
                    match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getQIDAccess().getIDTerminalRuleCall_2_2_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 145, rule__QID__Alternatives_2_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QID__Alternatives_2_2"


    // $ANTLR start "rule__Unit__Group__0"
    // InternalSimpleBeeLangTestLanguage.g:2320:1: rule__Unit__Group__0 : rule__Unit__Group__0__Impl rule__Unit__Group__1 ;
    public final void rule__Unit__Group__0() throws RecognitionException {
        int rule__Unit__Group__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 146) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:2324:1: ( rule__Unit__Group__0__Impl rule__Unit__Group__1 )
            // InternalSimpleBeeLangTestLanguage.g:2325:2: rule__Unit__Group__0__Impl rule__Unit__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__Unit__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Unit__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 146, rule__Unit__Group__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group__0"


    // $ANTLR start "rule__Unit__Group__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:2332:1: rule__Unit__Group__0__Impl : ( () ) ;
    public final void rule__Unit__Group__0__Impl() throws RecognitionException {
        int rule__Unit__Group__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 147) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:2336:1: ( ( () ) )
            // InternalSimpleBeeLangTestLanguage.g:2337:1: ( () )
            {
            // InternalSimpleBeeLangTestLanguage.g:2337:1: ( () )
            // InternalSimpleBeeLangTestLanguage.g:2338:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getUnitAction_0()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:2339:2: ()
            // InternalSimpleBeeLangTestLanguage.g:2339:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getUnitAction_0()); 
            }

            }


            }

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 147, rule__Unit__Group__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group__0__Impl"


    // $ANTLR start "rule__Unit__Group__1"
    // InternalSimpleBeeLangTestLanguage.g:2347:1: rule__Unit__Group__1 : rule__Unit__Group__1__Impl rule__Unit__Group__2 ;
    public final void rule__Unit__Group__1() throws RecognitionException {
        int rule__Unit__Group__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 148) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:2351:1: ( rule__Unit__Group__1__Impl rule__Unit__Group__2 )
            // InternalSimpleBeeLangTestLanguage.g:2352:2: rule__Unit__Group__1__Impl rule__Unit__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__Unit__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Unit__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 148, rule__Unit__Group__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group__1"


    // $ANTLR start "rule__Unit__Group__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:2359:1: rule__Unit__Group__1__Impl : ( ( rule__Unit__DocumentationAssignment_1 )? ) ;
    public final void rule__Unit__Group__1__Impl() throws RecognitionException {
        int rule__Unit__Group__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 149) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:2363:1: ( ( ( rule__Unit__DocumentationAssignment_1 )? ) )
            // InternalSimpleBeeLangTestLanguage.g:2364:1: ( ( rule__Unit__DocumentationAssignment_1 )? )
            {
            // InternalSimpleBeeLangTestLanguage.g:2364:1: ( ( rule__Unit__DocumentationAssignment_1 )? )
            // InternalSimpleBeeLangTestLanguage.g:2365:2: ( rule__Unit__DocumentationAssignment_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getDocumentationAssignment_1()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:2366:2: ( rule__Unit__DocumentationAssignment_1 )?
            int alt34=2;
            int LA34_0 = input.LA(1);

            if ( (LA34_0==RULE_DOCUMENTATION) ) {
                alt34=1;
            }
            switch (alt34) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:2366:3: rule__Unit__DocumentationAssignment_1
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__Unit__DocumentationAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getDocumentationAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 149, rule__Unit__Group__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group__1__Impl"


    // $ANTLR start "rule__Unit__Group__2"
    // InternalSimpleBeeLangTestLanguage.g:2374:1: rule__Unit__Group__2 : rule__Unit__Group__2__Impl rule__Unit__Group__3 ;
    public final void rule__Unit__Group__2() throws RecognitionException {
        int rule__Unit__Group__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 150) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:2378:1: ( rule__Unit__Group__2__Impl rule__Unit__Group__3 )
            // InternalSimpleBeeLangTestLanguage.g:2379:2: rule__Unit__Group__2__Impl rule__Unit__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_6);
            rule__Unit__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Unit__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 150, rule__Unit__Group__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group__2"


    // $ANTLR start "rule__Unit__Group__2__Impl"
    // InternalSimpleBeeLangTestLanguage.g:2386:1: rule__Unit__Group__2__Impl : ( 'unit' ) ;
    public final void rule__Unit__Group__2__Impl() throws RecognitionException {
        int rule__Unit__Group__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 151) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:2390:1: ( ( 'unit' ) )
            // InternalSimpleBeeLangTestLanguage.g:2391:1: ( 'unit' )
            {
            // InternalSimpleBeeLangTestLanguage.g:2391:1: ( 'unit' )
            // InternalSimpleBeeLangTestLanguage.g:2392:2: 'unit'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getUnitKeyword_2()); 
            }
            match(input,13,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getUnitKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 151, rule__Unit__Group__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group__2__Impl"


    // $ANTLR start "rule__Unit__Group__3"
    // InternalSimpleBeeLangTestLanguage.g:2401:1: rule__Unit__Group__3 : rule__Unit__Group__3__Impl rule__Unit__Group__4 ;
    public final void rule__Unit__Group__3() throws RecognitionException {
        int rule__Unit__Group__3_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 152) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:2405:1: ( rule__Unit__Group__3__Impl rule__Unit__Group__4 )
            // InternalSimpleBeeLangTestLanguage.g:2406:2: rule__Unit__Group__3__Impl rule__Unit__Group__4
            {
            pushFollow(FollowSets000.FOLLOW_6);
            rule__Unit__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Unit__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 152, rule__Unit__Group__3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group__3"


    // $ANTLR start "rule__Unit__Group__3__Impl"
    // InternalSimpleBeeLangTestLanguage.g:2413:1: rule__Unit__Group__3__Impl : ( ( rule__Unit__NameAssignment_3 )? ) ;
    public final void rule__Unit__Group__3__Impl() throws RecognitionException {
        int rule__Unit__Group__3__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 153) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:2417:1: ( ( ( rule__Unit__NameAssignment_3 )? ) )
            // InternalSimpleBeeLangTestLanguage.g:2418:1: ( ( rule__Unit__NameAssignment_3 )? )
            {
            // InternalSimpleBeeLangTestLanguage.g:2418:1: ( ( rule__Unit__NameAssignment_3 )? )
            // InternalSimpleBeeLangTestLanguage.g:2419:2: ( rule__Unit__NameAssignment_3 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getNameAssignment_3()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:2420:2: ( rule__Unit__NameAssignment_3 )?
            int alt35=2;
            int LA35_0 = input.LA(1);

            if ( (LA35_0==RULE_ID) ) {
                alt35=1;
            }
            switch (alt35) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:2420:3: rule__Unit__NameAssignment_3
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__Unit__NameAssignment_3();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getNameAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 153, rule__Unit__Group__3__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group__3__Impl"


    // $ANTLR start "rule__Unit__Group__4"
    // InternalSimpleBeeLangTestLanguage.g:2428:1: rule__Unit__Group__4 : rule__Unit__Group__4__Impl rule__Unit__Group__5 ;
    public final void rule__Unit__Group__4() throws RecognitionException {
        int rule__Unit__Group__4_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 154) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:2432:1: ( rule__Unit__Group__4__Impl rule__Unit__Group__5 )
            // InternalSimpleBeeLangTestLanguage.g:2433:2: rule__Unit__Group__4__Impl rule__Unit__Group__5
            {
            pushFollow(FollowSets000.FOLLOW_6);
            rule__Unit__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Unit__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 154, rule__Unit__Group__4_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group__4"


    // $ANTLR start "rule__Unit__Group__4__Impl"
    // InternalSimpleBeeLangTestLanguage.g:2440:1: rule__Unit__Group__4__Impl : ( ( rule__Unit__Group_4__0 )? ) ;
    public final void rule__Unit__Group__4__Impl() throws RecognitionException {
        int rule__Unit__Group__4__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 155) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:2444:1: ( ( ( rule__Unit__Group_4__0 )? ) )
            // InternalSimpleBeeLangTestLanguage.g:2445:1: ( ( rule__Unit__Group_4__0 )? )
            {
            // InternalSimpleBeeLangTestLanguage.g:2445:1: ( ( rule__Unit__Group_4__0 )? )
            // InternalSimpleBeeLangTestLanguage.g:2446:2: ( rule__Unit__Group_4__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getGroup_4()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:2447:2: ( rule__Unit__Group_4__0 )?
            int alt36=2;
            int LA36_0 = input.LA(1);

            if ( (LA36_0==46) ) {
                alt36=1;
            }
            switch (alt36) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:2447:3: rule__Unit__Group_4__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__Unit__Group_4__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getGroup_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 155, rule__Unit__Group__4__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group__4__Impl"


    // $ANTLR start "rule__Unit__Group__5"
    // InternalSimpleBeeLangTestLanguage.g:2455:1: rule__Unit__Group__5 : rule__Unit__Group__5__Impl rule__Unit__Group__6 ;
    public final void rule__Unit__Group__5() throws RecognitionException {
        int rule__Unit__Group__5_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 156) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:2459:1: ( rule__Unit__Group__5__Impl rule__Unit__Group__6 )
            // InternalSimpleBeeLangTestLanguage.g:2460:2: rule__Unit__Group__5__Impl rule__Unit__Group__6
            {
            pushFollow(FollowSets000.FOLLOW_6);
            rule__Unit__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Unit__Group__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 156, rule__Unit__Group__5_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group__5"


    // $ANTLR start "rule__Unit__Group__5__Impl"
    // InternalSimpleBeeLangTestLanguage.g:2467:1: rule__Unit__Group__5__Impl : ( ( rule__Unit__Group_5__0 )? ) ;
    public final void rule__Unit__Group__5__Impl() throws RecognitionException {
        int rule__Unit__Group__5__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 157) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:2471:1: ( ( ( rule__Unit__Group_5__0 )? ) )
            // InternalSimpleBeeLangTestLanguage.g:2472:1: ( ( rule__Unit__Group_5__0 )? )
            {
            // InternalSimpleBeeLangTestLanguage.g:2472:1: ( ( rule__Unit__Group_5__0 )? )
            // InternalSimpleBeeLangTestLanguage.g:2473:2: ( rule__Unit__Group_5__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getGroup_5()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:2474:2: ( rule__Unit__Group_5__0 )?
            int alt37=2;
            int LA37_0 = input.LA(1);

            if ( (LA37_0==47) ) {
                alt37=1;
            }
            switch (alt37) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:2474:3: rule__Unit__Group_5__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__Unit__Group_5__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getGroup_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 157, rule__Unit__Group__5__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group__5__Impl"


    // $ANTLR start "rule__Unit__Group__6"
    // InternalSimpleBeeLangTestLanguage.g:2482:1: rule__Unit__Group__6 : rule__Unit__Group__6__Impl rule__Unit__Group__7 ;
    public final void rule__Unit__Group__6() throws RecognitionException {
        int rule__Unit__Group__6_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 158) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:2486:1: ( rule__Unit__Group__6__Impl rule__Unit__Group__7 )
            // InternalSimpleBeeLangTestLanguage.g:2487:2: rule__Unit__Group__6__Impl rule__Unit__Group__7
            {
            pushFollow(FollowSets000.FOLLOW_7);
            rule__Unit__Group__6__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Unit__Group__7();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 158, rule__Unit__Group__6_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group__6"


    // $ANTLR start "rule__Unit__Group__6__Impl"
    // InternalSimpleBeeLangTestLanguage.g:2494:1: rule__Unit__Group__6__Impl : ( '{' ) ;
    public final void rule__Unit__Group__6__Impl() throws RecognitionException {
        int rule__Unit__Group__6__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 159) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:2498:1: ( ( '{' ) )
            // InternalSimpleBeeLangTestLanguage.g:2499:1: ( '{' )
            {
            // InternalSimpleBeeLangTestLanguage.g:2499:1: ( '{' )
            // InternalSimpleBeeLangTestLanguage.g:2500:2: '{'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getLeftCurlyBracketKeyword_6()); 
            }
            match(input,44,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getLeftCurlyBracketKeyword_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 159, rule__Unit__Group__6__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group__6__Impl"


    // $ANTLR start "rule__Unit__Group__7"
    // InternalSimpleBeeLangTestLanguage.g:2509:1: rule__Unit__Group__7 : rule__Unit__Group__7__Impl rule__Unit__Group__8 ;
    public final void rule__Unit__Group__7() throws RecognitionException {
        int rule__Unit__Group__7_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 160) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:2513:1: ( rule__Unit__Group__7__Impl rule__Unit__Group__8 )
            // InternalSimpleBeeLangTestLanguage.g:2514:2: rule__Unit__Group__7__Impl rule__Unit__Group__8
            {
            pushFollow(FollowSets000.FOLLOW_8);
            rule__Unit__Group__7__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Unit__Group__8();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 160, rule__Unit__Group__7_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group__7"


    // $ANTLR start "rule__Unit__Group__7__Impl"
    // InternalSimpleBeeLangTestLanguage.g:2521:1: rule__Unit__Group__7__Impl : ( ( rule__Unit__UnorderedGroup_7 ) ) ;
    public final void rule__Unit__Group__7__Impl() throws RecognitionException {
        int rule__Unit__Group__7__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 161) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:2525:1: ( ( ( rule__Unit__UnorderedGroup_7 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:2526:1: ( ( rule__Unit__UnorderedGroup_7 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:2526:1: ( ( rule__Unit__UnorderedGroup_7 ) )
            // InternalSimpleBeeLangTestLanguage.g:2527:2: ( rule__Unit__UnorderedGroup_7 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getUnorderedGroup_7()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:2528:2: ( rule__Unit__UnorderedGroup_7 )
            // InternalSimpleBeeLangTestLanguage.g:2528:3: rule__Unit__UnorderedGroup_7
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Unit__UnorderedGroup_7();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getUnorderedGroup_7()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 161, rule__Unit__Group__7__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group__7__Impl"


    // $ANTLR start "rule__Unit__Group__8"
    // InternalSimpleBeeLangTestLanguage.g:2536:1: rule__Unit__Group__8 : rule__Unit__Group__8__Impl ;
    public final void rule__Unit__Group__8() throws RecognitionException {
        int rule__Unit__Group__8_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 162) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:2540:1: ( rule__Unit__Group__8__Impl )
            // InternalSimpleBeeLangTestLanguage.g:2541:2: rule__Unit__Group__8__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Unit__Group__8__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 162, rule__Unit__Group__8_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group__8"


    // $ANTLR start "rule__Unit__Group__8__Impl"
    // InternalSimpleBeeLangTestLanguage.g:2547:1: rule__Unit__Group__8__Impl : ( '}' ) ;
    public final void rule__Unit__Group__8__Impl() throws RecognitionException {
        int rule__Unit__Group__8__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 163) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:2551:1: ( ( '}' ) )
            // InternalSimpleBeeLangTestLanguage.g:2552:1: ( '}' )
            {
            // InternalSimpleBeeLangTestLanguage.g:2552:1: ( '}' )
            // InternalSimpleBeeLangTestLanguage.g:2553:2: '}'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getRightCurlyBracketKeyword_8()); 
            }
            match(input,45,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getRightCurlyBracketKeyword_8()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 163, rule__Unit__Group__8__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group__8__Impl"


    // $ANTLR start "rule__Unit__Group_4__0"
    // InternalSimpleBeeLangTestLanguage.g:2563:1: rule__Unit__Group_4__0 : rule__Unit__Group_4__0__Impl rule__Unit__Group_4__1 ;
    public final void rule__Unit__Group_4__0() throws RecognitionException {
        int rule__Unit__Group_4__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 164) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:2567:1: ( rule__Unit__Group_4__0__Impl rule__Unit__Group_4__1 )
            // InternalSimpleBeeLangTestLanguage.g:2568:2: rule__Unit__Group_4__0__Impl rule__Unit__Group_4__1
            {
            pushFollow(FollowSets000.FOLLOW_9);
            rule__Unit__Group_4__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Unit__Group_4__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 164, rule__Unit__Group_4__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_4__0"


    // $ANTLR start "rule__Unit__Group_4__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:2575:1: rule__Unit__Group_4__0__Impl : ( 'version' ) ;
    public final void rule__Unit__Group_4__0__Impl() throws RecognitionException {
        int rule__Unit__Group_4__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 165) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:2579:1: ( ( 'version' ) )
            // InternalSimpleBeeLangTestLanguage.g:2580:1: ( 'version' )
            {
            // InternalSimpleBeeLangTestLanguage.g:2580:1: ( 'version' )
            // InternalSimpleBeeLangTestLanguage.g:2581:2: 'version'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getVersionKeyword_4_0()); 
            }
            match(input,46,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getVersionKeyword_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 165, rule__Unit__Group_4__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_4__0__Impl"


    // $ANTLR start "rule__Unit__Group_4__1"
    // InternalSimpleBeeLangTestLanguage.g:2590:1: rule__Unit__Group_4__1 : rule__Unit__Group_4__1__Impl ;
    public final void rule__Unit__Group_4__1() throws RecognitionException {
        int rule__Unit__Group_4__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 166) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:2594:1: ( rule__Unit__Group_4__1__Impl )
            // InternalSimpleBeeLangTestLanguage.g:2595:2: rule__Unit__Group_4__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Unit__Group_4__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 166, rule__Unit__Group_4__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_4__1"


    // $ANTLR start "rule__Unit__Group_4__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:2601:1: rule__Unit__Group_4__1__Impl : ( ( rule__Unit__VersionAssignment_4_1 ) ) ;
    public final void rule__Unit__Group_4__1__Impl() throws RecognitionException {
        int rule__Unit__Group_4__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 167) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:2605:1: ( ( ( rule__Unit__VersionAssignment_4_1 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:2606:1: ( ( rule__Unit__VersionAssignment_4_1 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:2606:1: ( ( rule__Unit__VersionAssignment_4_1 ) )
            // InternalSimpleBeeLangTestLanguage.g:2607:2: ( rule__Unit__VersionAssignment_4_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getVersionAssignment_4_1()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:2608:2: ( rule__Unit__VersionAssignment_4_1 )
            // InternalSimpleBeeLangTestLanguage.g:2608:3: rule__Unit__VersionAssignment_4_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Unit__VersionAssignment_4_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getVersionAssignment_4_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 167, rule__Unit__Group_4__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_4__1__Impl"


    // $ANTLR start "rule__Unit__Group_5__0"
    // InternalSimpleBeeLangTestLanguage.g:2617:1: rule__Unit__Group_5__0 : rule__Unit__Group_5__0__Impl rule__Unit__Group_5__1 ;
    public final void rule__Unit__Group_5__0() throws RecognitionException {
        int rule__Unit__Group_5__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 168) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:2621:1: ( rule__Unit__Group_5__0__Impl rule__Unit__Group_5__1 )
            // InternalSimpleBeeLangTestLanguage.g:2622:2: rule__Unit__Group_5__0__Impl rule__Unit__Group_5__1
            {
            pushFollow(FollowSets000.FOLLOW_9);
            rule__Unit__Group_5__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Unit__Group_5__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 168, rule__Unit__Group_5__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_5__0"


    // $ANTLR start "rule__Unit__Group_5__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:2629:1: rule__Unit__Group_5__0__Impl : ( 'implements' ) ;
    public final void rule__Unit__Group_5__0__Impl() throws RecognitionException {
        int rule__Unit__Group_5__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 169) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:2633:1: ( ( 'implements' ) )
            // InternalSimpleBeeLangTestLanguage.g:2634:1: ( 'implements' )
            {
            // InternalSimpleBeeLangTestLanguage.g:2634:1: ( 'implements' )
            // InternalSimpleBeeLangTestLanguage.g:2635:2: 'implements'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getImplementsKeyword_5_0()); 
            }
            match(input,47,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getImplementsKeyword_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 169, rule__Unit__Group_5__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_5__0__Impl"


    // $ANTLR start "rule__Unit__Group_5__1"
    // InternalSimpleBeeLangTestLanguage.g:2644:1: rule__Unit__Group_5__1 : rule__Unit__Group_5__1__Impl rule__Unit__Group_5__2 ;
    public final void rule__Unit__Group_5__1() throws RecognitionException {
        int rule__Unit__Group_5__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 170) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:2648:1: ( rule__Unit__Group_5__1__Impl rule__Unit__Group_5__2 )
            // InternalSimpleBeeLangTestLanguage.g:2649:2: rule__Unit__Group_5__1__Impl rule__Unit__Group_5__2
            {
            pushFollow(FollowSets000.FOLLOW_10);
            rule__Unit__Group_5__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Unit__Group_5__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 170, rule__Unit__Group_5__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_5__1"


    // $ANTLR start "rule__Unit__Group_5__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:2656:1: rule__Unit__Group_5__1__Impl : ( ( rule__Unit__ImplementsAssignment_5_1 ) ) ;
    public final void rule__Unit__Group_5__1__Impl() throws RecognitionException {
        int rule__Unit__Group_5__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 171) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:2660:1: ( ( ( rule__Unit__ImplementsAssignment_5_1 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:2661:1: ( ( rule__Unit__ImplementsAssignment_5_1 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:2661:1: ( ( rule__Unit__ImplementsAssignment_5_1 ) )
            // InternalSimpleBeeLangTestLanguage.g:2662:2: ( rule__Unit__ImplementsAssignment_5_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getImplementsAssignment_5_1()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:2663:2: ( rule__Unit__ImplementsAssignment_5_1 )
            // InternalSimpleBeeLangTestLanguage.g:2663:3: rule__Unit__ImplementsAssignment_5_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Unit__ImplementsAssignment_5_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getImplementsAssignment_5_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 171, rule__Unit__Group_5__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_5__1__Impl"


    // $ANTLR start "rule__Unit__Group_5__2"
    // InternalSimpleBeeLangTestLanguage.g:2671:1: rule__Unit__Group_5__2 : rule__Unit__Group_5__2__Impl ;
    public final void rule__Unit__Group_5__2() throws RecognitionException {
        int rule__Unit__Group_5__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 172) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:2675:1: ( rule__Unit__Group_5__2__Impl )
            // InternalSimpleBeeLangTestLanguage.g:2676:2: rule__Unit__Group_5__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Unit__Group_5__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 172, rule__Unit__Group_5__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_5__2"


    // $ANTLR start "rule__Unit__Group_5__2__Impl"
    // InternalSimpleBeeLangTestLanguage.g:2682:1: rule__Unit__Group_5__2__Impl : ( ( rule__Unit__Group_5_2__0 )* ) ;
    public final void rule__Unit__Group_5__2__Impl() throws RecognitionException {
        int rule__Unit__Group_5__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 173) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:2686:1: ( ( ( rule__Unit__Group_5_2__0 )* ) )
            // InternalSimpleBeeLangTestLanguage.g:2687:1: ( ( rule__Unit__Group_5_2__0 )* )
            {
            // InternalSimpleBeeLangTestLanguage.g:2687:1: ( ( rule__Unit__Group_5_2__0 )* )
            // InternalSimpleBeeLangTestLanguage.g:2688:2: ( rule__Unit__Group_5_2__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getGroup_5_2()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:2689:2: ( rule__Unit__Group_5_2__0 )*
            loop38:
            do {
                int alt38=2;
                int LA38_0 = input.LA(1);

                if ( (LA38_0==48) ) {
                    alt38=1;
                }


                switch (alt38) {
            	case 1 :
            	    // InternalSimpleBeeLangTestLanguage.g:2689:3: rule__Unit__Group_5_2__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_11);
            	    rule__Unit__Group_5_2__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop38;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getGroup_5_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 173, rule__Unit__Group_5__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_5__2__Impl"


    // $ANTLR start "rule__Unit__Group_5_2__0"
    // InternalSimpleBeeLangTestLanguage.g:2698:1: rule__Unit__Group_5_2__0 : rule__Unit__Group_5_2__0__Impl rule__Unit__Group_5_2__1 ;
    public final void rule__Unit__Group_5_2__0() throws RecognitionException {
        int rule__Unit__Group_5_2__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 174) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:2702:1: ( rule__Unit__Group_5_2__0__Impl rule__Unit__Group_5_2__1 )
            // InternalSimpleBeeLangTestLanguage.g:2703:2: rule__Unit__Group_5_2__0__Impl rule__Unit__Group_5_2__1
            {
            pushFollow(FollowSets000.FOLLOW_9);
            rule__Unit__Group_5_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Unit__Group_5_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 174, rule__Unit__Group_5_2__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_5_2__0"


    // $ANTLR start "rule__Unit__Group_5_2__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:2710:1: rule__Unit__Group_5_2__0__Impl : ( ',' ) ;
    public final void rule__Unit__Group_5_2__0__Impl() throws RecognitionException {
        int rule__Unit__Group_5_2__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 175) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:2714:1: ( ( ',' ) )
            // InternalSimpleBeeLangTestLanguage.g:2715:1: ( ',' )
            {
            // InternalSimpleBeeLangTestLanguage.g:2715:1: ( ',' )
            // InternalSimpleBeeLangTestLanguage.g:2716:2: ','
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getCommaKeyword_5_2_0()); 
            }
            match(input,48,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getCommaKeyword_5_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 175, rule__Unit__Group_5_2__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_5_2__0__Impl"


    // $ANTLR start "rule__Unit__Group_5_2__1"
    // InternalSimpleBeeLangTestLanguage.g:2725:1: rule__Unit__Group_5_2__1 : rule__Unit__Group_5_2__1__Impl ;
    public final void rule__Unit__Group_5_2__1() throws RecognitionException {
        int rule__Unit__Group_5_2__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 176) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:2729:1: ( rule__Unit__Group_5_2__1__Impl )
            // InternalSimpleBeeLangTestLanguage.g:2730:2: rule__Unit__Group_5_2__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Unit__Group_5_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 176, rule__Unit__Group_5_2__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_5_2__1"


    // $ANTLR start "rule__Unit__Group_5_2__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:2736:1: rule__Unit__Group_5_2__1__Impl : ( ( rule__Unit__ImplementsAssignment_5_2_1 ) ) ;
    public final void rule__Unit__Group_5_2__1__Impl() throws RecognitionException {
        int rule__Unit__Group_5_2__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 177) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:2740:1: ( ( ( rule__Unit__ImplementsAssignment_5_2_1 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:2741:1: ( ( rule__Unit__ImplementsAssignment_5_2_1 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:2741:1: ( ( rule__Unit__ImplementsAssignment_5_2_1 ) )
            // InternalSimpleBeeLangTestLanguage.g:2742:2: ( rule__Unit__ImplementsAssignment_5_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getImplementsAssignment_5_2_1()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:2743:2: ( rule__Unit__ImplementsAssignment_5_2_1 )
            // InternalSimpleBeeLangTestLanguage.g:2743:3: rule__Unit__ImplementsAssignment_5_2_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Unit__ImplementsAssignment_5_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getImplementsAssignment_5_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 177, rule__Unit__Group_5_2__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_5_2__1__Impl"


    // $ANTLR start "rule__Unit__Group_7_0__0"
    // InternalSimpleBeeLangTestLanguage.g:2752:1: rule__Unit__Group_7_0__0 : rule__Unit__Group_7_0__0__Impl rule__Unit__Group_7_0__1 ;
    public final void rule__Unit__Group_7_0__0() throws RecognitionException {
        int rule__Unit__Group_7_0__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 178) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:2756:1: ( rule__Unit__Group_7_0__0__Impl rule__Unit__Group_7_0__1 )
            // InternalSimpleBeeLangTestLanguage.g:2757:2: rule__Unit__Group_7_0__0__Impl rule__Unit__Group_7_0__1
            {
            pushFollow(FollowSets000.FOLLOW_12);
            rule__Unit__Group_7_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Unit__Group_7_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 178, rule__Unit__Group_7_0__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_0__0"


    // $ANTLR start "rule__Unit__Group_7_0__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:2764:1: rule__Unit__Group_7_0__0__Impl : ( 'source' ) ;
    public final void rule__Unit__Group_7_0__0__Impl() throws RecognitionException {
        int rule__Unit__Group_7_0__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 179) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:2768:1: ( ( 'source' ) )
            // InternalSimpleBeeLangTestLanguage.g:2769:1: ( 'source' )
            {
            // InternalSimpleBeeLangTestLanguage.g:2769:1: ( 'source' )
            // InternalSimpleBeeLangTestLanguage.g:2770:2: 'source'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getSourceKeyword_7_0_0()); 
            }
            match(input,40,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getSourceKeyword_7_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 179, rule__Unit__Group_7_0__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_0__0__Impl"


    // $ANTLR start "rule__Unit__Group_7_0__1"
    // InternalSimpleBeeLangTestLanguage.g:2779:1: rule__Unit__Group_7_0__1 : rule__Unit__Group_7_0__1__Impl rule__Unit__Group_7_0__2 ;
    public final void rule__Unit__Group_7_0__1() throws RecognitionException {
        int rule__Unit__Group_7_0__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 180) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:2783:1: ( rule__Unit__Group_7_0__1__Impl rule__Unit__Group_7_0__2 )
            // InternalSimpleBeeLangTestLanguage.g:2784:2: rule__Unit__Group_7_0__1__Impl rule__Unit__Group_7_0__2
            {
            pushFollow(FollowSets000.FOLLOW_13);
            rule__Unit__Group_7_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Unit__Group_7_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 180, rule__Unit__Group_7_0__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_0__1"


    // $ANTLR start "rule__Unit__Group_7_0__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:2791:1: rule__Unit__Group_7_0__1__Impl : ( ':' ) ;
    public final void rule__Unit__Group_7_0__1__Impl() throws RecognitionException {
        int rule__Unit__Group_7_0__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 181) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:2795:1: ( ( ':' ) )
            // InternalSimpleBeeLangTestLanguage.g:2796:1: ( ':' )
            {
            // InternalSimpleBeeLangTestLanguage.g:2796:1: ( ':' )
            // InternalSimpleBeeLangTestLanguage.g:2797:2: ':'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getColonKeyword_7_0_1()); 
            }
            match(input,49,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getColonKeyword_7_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 181, rule__Unit__Group_7_0__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_0__1__Impl"


    // $ANTLR start "rule__Unit__Group_7_0__2"
    // InternalSimpleBeeLangTestLanguage.g:2806:1: rule__Unit__Group_7_0__2 : rule__Unit__Group_7_0__2__Impl rule__Unit__Group_7_0__3 ;
    public final void rule__Unit__Group_7_0__2() throws RecognitionException {
        int rule__Unit__Group_7_0__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 182) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:2810:1: ( rule__Unit__Group_7_0__2__Impl rule__Unit__Group_7_0__3 )
            // InternalSimpleBeeLangTestLanguage.g:2811:2: rule__Unit__Group_7_0__2__Impl rule__Unit__Group_7_0__3
            {
            pushFollow(FollowSets000.FOLLOW_14);
            rule__Unit__Group_7_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Unit__Group_7_0__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 182, rule__Unit__Group_7_0__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_0__2"


    // $ANTLR start "rule__Unit__Group_7_0__2__Impl"
    // InternalSimpleBeeLangTestLanguage.g:2818:1: rule__Unit__Group_7_0__2__Impl : ( ( rule__Unit__SourceLocationAssignment_7_0_2 ) ) ;
    public final void rule__Unit__Group_7_0__2__Impl() throws RecognitionException {
        int rule__Unit__Group_7_0__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 183) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:2822:1: ( ( ( rule__Unit__SourceLocationAssignment_7_0_2 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:2823:1: ( ( rule__Unit__SourceLocationAssignment_7_0_2 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:2823:1: ( ( rule__Unit__SourceLocationAssignment_7_0_2 ) )
            // InternalSimpleBeeLangTestLanguage.g:2824:2: ( rule__Unit__SourceLocationAssignment_7_0_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getSourceLocationAssignment_7_0_2()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:2825:2: ( rule__Unit__SourceLocationAssignment_7_0_2 )
            // InternalSimpleBeeLangTestLanguage.g:2825:3: rule__Unit__SourceLocationAssignment_7_0_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Unit__SourceLocationAssignment_7_0_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getSourceLocationAssignment_7_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 183, rule__Unit__Group_7_0__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_0__2__Impl"


    // $ANTLR start "rule__Unit__Group_7_0__3"
    // InternalSimpleBeeLangTestLanguage.g:2833:1: rule__Unit__Group_7_0__3 : rule__Unit__Group_7_0__3__Impl ;
    public final void rule__Unit__Group_7_0__3() throws RecognitionException {
        int rule__Unit__Group_7_0__3_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 184) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:2837:1: ( rule__Unit__Group_7_0__3__Impl )
            // InternalSimpleBeeLangTestLanguage.g:2838:2: rule__Unit__Group_7_0__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Unit__Group_7_0__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 184, rule__Unit__Group_7_0__3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_0__3"


    // $ANTLR start "rule__Unit__Group_7_0__3__Impl"
    // InternalSimpleBeeLangTestLanguage.g:2844:1: rule__Unit__Group_7_0__3__Impl : ( ';' ) ;
    public final void rule__Unit__Group_7_0__3__Impl() throws RecognitionException {
        int rule__Unit__Group_7_0__3__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 185) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:2848:1: ( ( ';' ) )
            // InternalSimpleBeeLangTestLanguage.g:2849:1: ( ';' )
            {
            // InternalSimpleBeeLangTestLanguage.g:2849:1: ( ';' )
            // InternalSimpleBeeLangTestLanguage.g:2850:2: ';'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getSemicolonKeyword_7_0_3()); 
            }
            match(input,50,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getSemicolonKeyword_7_0_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 185, rule__Unit__Group_7_0__3__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_0__3__Impl"


    // $ANTLR start "rule__Unit__Group_7_1__0"
    // InternalSimpleBeeLangTestLanguage.g:2860:1: rule__Unit__Group_7_1__0 : rule__Unit__Group_7_1__0__Impl rule__Unit__Group_7_1__1 ;
    public final void rule__Unit__Group_7_1__0() throws RecognitionException {
        int rule__Unit__Group_7_1__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 186) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:2864:1: ( rule__Unit__Group_7_1__0__Impl rule__Unit__Group_7_1__1 )
            // InternalSimpleBeeLangTestLanguage.g:2865:2: rule__Unit__Group_7_1__0__Impl rule__Unit__Group_7_1__1
            {
            pushFollow(FollowSets000.FOLLOW_12);
            rule__Unit__Group_7_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Unit__Group_7_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 186, rule__Unit__Group_7_1__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_1__0"


    // $ANTLR start "rule__Unit__Group_7_1__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:2872:1: rule__Unit__Group_7_1__0__Impl : ( 'output' ) ;
    public final void rule__Unit__Group_7_1__0__Impl() throws RecognitionException {
        int rule__Unit__Group_7_1__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 187) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:2876:1: ( ( 'output' ) )
            // InternalSimpleBeeLangTestLanguage.g:2877:1: ( 'output' )
            {
            // InternalSimpleBeeLangTestLanguage.g:2877:1: ( 'output' )
            // InternalSimpleBeeLangTestLanguage.g:2878:2: 'output'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getOutputKeyword_7_1_0()); 
            }
            match(input,39,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getOutputKeyword_7_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 187, rule__Unit__Group_7_1__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_1__0__Impl"


    // $ANTLR start "rule__Unit__Group_7_1__1"
    // InternalSimpleBeeLangTestLanguage.g:2887:1: rule__Unit__Group_7_1__1 : rule__Unit__Group_7_1__1__Impl rule__Unit__Group_7_1__2 ;
    public final void rule__Unit__Group_7_1__1() throws RecognitionException {
        int rule__Unit__Group_7_1__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 188) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:2891:1: ( rule__Unit__Group_7_1__1__Impl rule__Unit__Group_7_1__2 )
            // InternalSimpleBeeLangTestLanguage.g:2892:2: rule__Unit__Group_7_1__1__Impl rule__Unit__Group_7_1__2
            {
            pushFollow(FollowSets000.FOLLOW_13);
            rule__Unit__Group_7_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Unit__Group_7_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 188, rule__Unit__Group_7_1__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_1__1"


    // $ANTLR start "rule__Unit__Group_7_1__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:2899:1: rule__Unit__Group_7_1__1__Impl : ( ':' ) ;
    public final void rule__Unit__Group_7_1__1__Impl() throws RecognitionException {
        int rule__Unit__Group_7_1__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 189) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:2903:1: ( ( ':' ) )
            // InternalSimpleBeeLangTestLanguage.g:2904:1: ( ':' )
            {
            // InternalSimpleBeeLangTestLanguage.g:2904:1: ( ':' )
            // InternalSimpleBeeLangTestLanguage.g:2905:2: ':'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getColonKeyword_7_1_1()); 
            }
            match(input,49,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getColonKeyword_7_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 189, rule__Unit__Group_7_1__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_1__1__Impl"


    // $ANTLR start "rule__Unit__Group_7_1__2"
    // InternalSimpleBeeLangTestLanguage.g:2914:1: rule__Unit__Group_7_1__2 : rule__Unit__Group_7_1__2__Impl rule__Unit__Group_7_1__3 ;
    public final void rule__Unit__Group_7_1__2() throws RecognitionException {
        int rule__Unit__Group_7_1__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 190) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:2918:1: ( rule__Unit__Group_7_1__2__Impl rule__Unit__Group_7_1__3 )
            // InternalSimpleBeeLangTestLanguage.g:2919:2: rule__Unit__Group_7_1__2__Impl rule__Unit__Group_7_1__3
            {
            pushFollow(FollowSets000.FOLLOW_14);
            rule__Unit__Group_7_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Unit__Group_7_1__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 190, rule__Unit__Group_7_1__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_1__2"


    // $ANTLR start "rule__Unit__Group_7_1__2__Impl"
    // InternalSimpleBeeLangTestLanguage.g:2926:1: rule__Unit__Group_7_1__2__Impl : ( ( rule__Unit__OutputLocationAssignment_7_1_2 ) ) ;
    public final void rule__Unit__Group_7_1__2__Impl() throws RecognitionException {
        int rule__Unit__Group_7_1__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 191) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:2930:1: ( ( ( rule__Unit__OutputLocationAssignment_7_1_2 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:2931:1: ( ( rule__Unit__OutputLocationAssignment_7_1_2 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:2931:1: ( ( rule__Unit__OutputLocationAssignment_7_1_2 ) )
            // InternalSimpleBeeLangTestLanguage.g:2932:2: ( rule__Unit__OutputLocationAssignment_7_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getOutputLocationAssignment_7_1_2()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:2933:2: ( rule__Unit__OutputLocationAssignment_7_1_2 )
            // InternalSimpleBeeLangTestLanguage.g:2933:3: rule__Unit__OutputLocationAssignment_7_1_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Unit__OutputLocationAssignment_7_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getOutputLocationAssignment_7_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 191, rule__Unit__Group_7_1__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_1__2__Impl"


    // $ANTLR start "rule__Unit__Group_7_1__3"
    // InternalSimpleBeeLangTestLanguage.g:2941:1: rule__Unit__Group_7_1__3 : rule__Unit__Group_7_1__3__Impl ;
    public final void rule__Unit__Group_7_1__3() throws RecognitionException {
        int rule__Unit__Group_7_1__3_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 192) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:2945:1: ( rule__Unit__Group_7_1__3__Impl )
            // InternalSimpleBeeLangTestLanguage.g:2946:2: rule__Unit__Group_7_1__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Unit__Group_7_1__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 192, rule__Unit__Group_7_1__3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_1__3"


    // $ANTLR start "rule__Unit__Group_7_1__3__Impl"
    // InternalSimpleBeeLangTestLanguage.g:2952:1: rule__Unit__Group_7_1__3__Impl : ( ';' ) ;
    public final void rule__Unit__Group_7_1__3__Impl() throws RecognitionException {
        int rule__Unit__Group_7_1__3__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 193) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:2956:1: ( ( ';' ) )
            // InternalSimpleBeeLangTestLanguage.g:2957:1: ( ';' )
            {
            // InternalSimpleBeeLangTestLanguage.g:2957:1: ( ';' )
            // InternalSimpleBeeLangTestLanguage.g:2958:2: ';'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getSemicolonKeyword_7_1_3()); 
            }
            match(input,50,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getSemicolonKeyword_7_1_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 193, rule__Unit__Group_7_1__3__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_1__3__Impl"


    // $ANTLR start "rule__Unit__Group_7_2__0"
    // InternalSimpleBeeLangTestLanguage.g:2968:1: rule__Unit__Group_7_2__0 : rule__Unit__Group_7_2__0__Impl rule__Unit__Group_7_2__1 ;
    public final void rule__Unit__Group_7_2__0() throws RecognitionException {
        int rule__Unit__Group_7_2__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 194) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:2972:1: ( rule__Unit__Group_7_2__0__Impl rule__Unit__Group_7_2__1 )
            // InternalSimpleBeeLangTestLanguage.g:2973:2: rule__Unit__Group_7_2__0__Impl rule__Unit__Group_7_2__1
            {
            pushFollow(FollowSets000.FOLLOW_12);
            rule__Unit__Group_7_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Unit__Group_7_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 194, rule__Unit__Group_7_2__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_2__0"


    // $ANTLR start "rule__Unit__Group_7_2__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:2980:1: rule__Unit__Group_7_2__0__Impl : ( 'provides' ) ;
    public final void rule__Unit__Group_7_2__0__Impl() throws RecognitionException {
        int rule__Unit__Group_7_2__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 195) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:2984:1: ( ( 'provides' ) )
            // InternalSimpleBeeLangTestLanguage.g:2985:1: ( 'provides' )
            {
            // InternalSimpleBeeLangTestLanguage.g:2985:1: ( 'provides' )
            // InternalSimpleBeeLangTestLanguage.g:2986:2: 'provides'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getProvidesKeyword_7_2_0()); 
            }
            match(input,51,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getProvidesKeyword_7_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 195, rule__Unit__Group_7_2__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_2__0__Impl"


    // $ANTLR start "rule__Unit__Group_7_2__1"
    // InternalSimpleBeeLangTestLanguage.g:2995:1: rule__Unit__Group_7_2__1 : rule__Unit__Group_7_2__1__Impl rule__Unit__Group_7_2__2 ;
    public final void rule__Unit__Group_7_2__1() throws RecognitionException {
        int rule__Unit__Group_7_2__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 196) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:2999:1: ( rule__Unit__Group_7_2__1__Impl rule__Unit__Group_7_2__2 )
            // InternalSimpleBeeLangTestLanguage.g:3000:2: rule__Unit__Group_7_2__1__Impl rule__Unit__Group_7_2__2
            {
            pushFollow(FollowSets000.FOLLOW_15);
            rule__Unit__Group_7_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Unit__Group_7_2__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 196, rule__Unit__Group_7_2__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_2__1"


    // $ANTLR start "rule__Unit__Group_7_2__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:3007:1: rule__Unit__Group_7_2__1__Impl : ( ':' ) ;
    public final void rule__Unit__Group_7_2__1__Impl() throws RecognitionException {
        int rule__Unit__Group_7_2__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 197) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:3011:1: ( ( ':' ) )
            // InternalSimpleBeeLangTestLanguage.g:3012:1: ( ':' )
            {
            // InternalSimpleBeeLangTestLanguage.g:3012:1: ( ':' )
            // InternalSimpleBeeLangTestLanguage.g:3013:2: ':'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getColonKeyword_7_2_1()); 
            }
            match(input,49,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getColonKeyword_7_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 197, rule__Unit__Group_7_2__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_2__1__Impl"


    // $ANTLR start "rule__Unit__Group_7_2__2"
    // InternalSimpleBeeLangTestLanguage.g:3022:1: rule__Unit__Group_7_2__2 : rule__Unit__Group_7_2__2__Impl rule__Unit__Group_7_2__3 ;
    public final void rule__Unit__Group_7_2__2() throws RecognitionException {
        int rule__Unit__Group_7_2__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 198) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:3026:1: ( rule__Unit__Group_7_2__2__Impl rule__Unit__Group_7_2__3 )
            // InternalSimpleBeeLangTestLanguage.g:3027:2: rule__Unit__Group_7_2__2__Impl rule__Unit__Group_7_2__3
            {
            pushFollow(FollowSets000.FOLLOW_14);
            rule__Unit__Group_7_2__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Unit__Group_7_2__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 198, rule__Unit__Group_7_2__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_2__2"


    // $ANTLR start "rule__Unit__Group_7_2__2__Impl"
    // InternalSimpleBeeLangTestLanguage.g:3034:1: rule__Unit__Group_7_2__2__Impl : ( ( rule__Unit__ProvidedCapabilitiesAssignment_7_2_2 ) ) ;
    public final void rule__Unit__Group_7_2__2__Impl() throws RecognitionException {
        int rule__Unit__Group_7_2__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 199) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:3038:1: ( ( ( rule__Unit__ProvidedCapabilitiesAssignment_7_2_2 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:3039:1: ( ( rule__Unit__ProvidedCapabilitiesAssignment_7_2_2 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:3039:1: ( ( rule__Unit__ProvidedCapabilitiesAssignment_7_2_2 ) )
            // InternalSimpleBeeLangTestLanguage.g:3040:2: ( rule__Unit__ProvidedCapabilitiesAssignment_7_2_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getProvidedCapabilitiesAssignment_7_2_2()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:3041:2: ( rule__Unit__ProvidedCapabilitiesAssignment_7_2_2 )
            // InternalSimpleBeeLangTestLanguage.g:3041:3: rule__Unit__ProvidedCapabilitiesAssignment_7_2_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Unit__ProvidedCapabilitiesAssignment_7_2_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getProvidedCapabilitiesAssignment_7_2_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 199, rule__Unit__Group_7_2__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_2__2__Impl"


    // $ANTLR start "rule__Unit__Group_7_2__3"
    // InternalSimpleBeeLangTestLanguage.g:3049:1: rule__Unit__Group_7_2__3 : rule__Unit__Group_7_2__3__Impl ;
    public final void rule__Unit__Group_7_2__3() throws RecognitionException {
        int rule__Unit__Group_7_2__3_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 200) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:3053:1: ( rule__Unit__Group_7_2__3__Impl )
            // InternalSimpleBeeLangTestLanguage.g:3054:2: rule__Unit__Group_7_2__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Unit__Group_7_2__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 200, rule__Unit__Group_7_2__3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_2__3"

}

@SuppressWarnings("all")
abstract class InternalSimpleBeeLangTestLanguageParser4 extends InternalSimpleBeeLangTestLanguageParser3 {

        InternalSimpleBeeLangTestLanguageParser4(TokenStream input) {
            this(input, new RecognizerSharedState());
        }

        InternalSimpleBeeLangTestLanguageParser4(TokenStream input, RecognizerSharedState state) {
            super(input, state);
        }

    // $ANTLR start "rule__Unit__Group_7_2__3__Impl"
    // InternalSimpleBeeLangTestLanguage.g:3060:1: rule__Unit__Group_7_2__3__Impl : ( ';' ) ;
    public final void rule__Unit__Group_7_2__3__Impl() throws RecognitionException {
        int rule__Unit__Group_7_2__3__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 201) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:3064:1: ( ( ';' ) )
            // InternalSimpleBeeLangTestLanguage.g:3065:1: ( ';' )
            {
            // InternalSimpleBeeLangTestLanguage.g:3065:1: ( ';' )
            // InternalSimpleBeeLangTestLanguage.g:3066:2: ';'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getSemicolonKeyword_7_2_3()); 
            }
            match(input,50,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getSemicolonKeyword_7_2_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 201, rule__Unit__Group_7_2__3__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_2__3__Impl"


    // $ANTLR start "rule__Unit__Group_7_3__0"
    // InternalSimpleBeeLangTestLanguage.g:3076:1: rule__Unit__Group_7_3__0 : rule__Unit__Group_7_3__0__Impl rule__Unit__Group_7_3__1 ;
    public final void rule__Unit__Group_7_3__0() throws RecognitionException {
        int rule__Unit__Group_7_3__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 202) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:3080:1: ( rule__Unit__Group_7_3__0__Impl rule__Unit__Group_7_3__1 )
            // InternalSimpleBeeLangTestLanguage.g:3081:2: rule__Unit__Group_7_3__0__Impl rule__Unit__Group_7_3__1
            {
            pushFollow(FollowSets000.FOLLOW_12);
            rule__Unit__Group_7_3__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Unit__Group_7_3__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 202, rule__Unit__Group_7_3__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_3__0"


    // $ANTLR start "rule__Unit__Group_7_3__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:3088:1: rule__Unit__Group_7_3__0__Impl : ( 'requires' ) ;
    public final void rule__Unit__Group_7_3__0__Impl() throws RecognitionException {
        int rule__Unit__Group_7_3__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 203) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:3092:1: ( ( 'requires' ) )
            // InternalSimpleBeeLangTestLanguage.g:3093:1: ( 'requires' )
            {
            // InternalSimpleBeeLangTestLanguage.g:3093:1: ( 'requires' )
            // InternalSimpleBeeLangTestLanguage.g:3094:2: 'requires'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getRequiresKeyword_7_3_0()); 
            }
            match(input,52,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getRequiresKeyword_7_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 203, rule__Unit__Group_7_3__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_3__0__Impl"


    // $ANTLR start "rule__Unit__Group_7_3__1"
    // InternalSimpleBeeLangTestLanguage.g:3103:1: rule__Unit__Group_7_3__1 : rule__Unit__Group_7_3__1__Impl rule__Unit__Group_7_3__2 ;
    public final void rule__Unit__Group_7_3__1() throws RecognitionException {
        int rule__Unit__Group_7_3__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 204) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:3107:1: ( rule__Unit__Group_7_3__1__Impl rule__Unit__Group_7_3__2 )
            // InternalSimpleBeeLangTestLanguage.g:3108:2: rule__Unit__Group_7_3__1__Impl rule__Unit__Group_7_3__2
            {
            pushFollow(FollowSets000.FOLLOW_15);
            rule__Unit__Group_7_3__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Unit__Group_7_3__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 204, rule__Unit__Group_7_3__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_3__1"


    // $ANTLR start "rule__Unit__Group_7_3__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:3115:1: rule__Unit__Group_7_3__1__Impl : ( ':' ) ;
    public final void rule__Unit__Group_7_3__1__Impl() throws RecognitionException {
        int rule__Unit__Group_7_3__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 205) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:3119:1: ( ( ':' ) )
            // InternalSimpleBeeLangTestLanguage.g:3120:1: ( ':' )
            {
            // InternalSimpleBeeLangTestLanguage.g:3120:1: ( ':' )
            // InternalSimpleBeeLangTestLanguage.g:3121:2: ':'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getColonKeyword_7_3_1()); 
            }
            match(input,49,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getColonKeyword_7_3_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 205, rule__Unit__Group_7_3__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_3__1__Impl"


    // $ANTLR start "rule__Unit__Group_7_3__2"
    // InternalSimpleBeeLangTestLanguage.g:3130:1: rule__Unit__Group_7_3__2 : rule__Unit__Group_7_3__2__Impl rule__Unit__Group_7_3__3 ;
    public final void rule__Unit__Group_7_3__2() throws RecognitionException {
        int rule__Unit__Group_7_3__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 206) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:3134:1: ( rule__Unit__Group_7_3__2__Impl rule__Unit__Group_7_3__3 )
            // InternalSimpleBeeLangTestLanguage.g:3135:2: rule__Unit__Group_7_3__2__Impl rule__Unit__Group_7_3__3
            {
            pushFollow(FollowSets000.FOLLOW_14);
            rule__Unit__Group_7_3__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Unit__Group_7_3__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 206, rule__Unit__Group_7_3__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_3__2"


    // $ANTLR start "rule__Unit__Group_7_3__2__Impl"
    // InternalSimpleBeeLangTestLanguage.g:3142:1: rule__Unit__Group_7_3__2__Impl : ( ( rule__Unit__RequiredCapabilitiesAssignment_7_3_2 ) ) ;
    public final void rule__Unit__Group_7_3__2__Impl() throws RecognitionException {
        int rule__Unit__Group_7_3__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 207) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:3146:1: ( ( ( rule__Unit__RequiredCapabilitiesAssignment_7_3_2 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:3147:1: ( ( rule__Unit__RequiredCapabilitiesAssignment_7_3_2 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:3147:1: ( ( rule__Unit__RequiredCapabilitiesAssignment_7_3_2 ) )
            // InternalSimpleBeeLangTestLanguage.g:3148:2: ( rule__Unit__RequiredCapabilitiesAssignment_7_3_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getRequiredCapabilitiesAssignment_7_3_2()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:3149:2: ( rule__Unit__RequiredCapabilitiesAssignment_7_3_2 )
            // InternalSimpleBeeLangTestLanguage.g:3149:3: rule__Unit__RequiredCapabilitiesAssignment_7_3_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Unit__RequiredCapabilitiesAssignment_7_3_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getRequiredCapabilitiesAssignment_7_3_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 207, rule__Unit__Group_7_3__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_3__2__Impl"


    // $ANTLR start "rule__Unit__Group_7_3__3"
    // InternalSimpleBeeLangTestLanguage.g:3157:1: rule__Unit__Group_7_3__3 : rule__Unit__Group_7_3__3__Impl ;
    public final void rule__Unit__Group_7_3__3() throws RecognitionException {
        int rule__Unit__Group_7_3__3_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 208) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:3161:1: ( rule__Unit__Group_7_3__3__Impl )
            // InternalSimpleBeeLangTestLanguage.g:3162:2: rule__Unit__Group_7_3__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Unit__Group_7_3__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 208, rule__Unit__Group_7_3__3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_3__3"


    // $ANTLR start "rule__Unit__Group_7_3__3__Impl"
    // InternalSimpleBeeLangTestLanguage.g:3168:1: rule__Unit__Group_7_3__3__Impl : ( ';' ) ;
    public final void rule__Unit__Group_7_3__3__Impl() throws RecognitionException {
        int rule__Unit__Group_7_3__3__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 209) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:3172:1: ( ( ';' ) )
            // InternalSimpleBeeLangTestLanguage.g:3173:1: ( ';' )
            {
            // InternalSimpleBeeLangTestLanguage.g:3173:1: ( ';' )
            // InternalSimpleBeeLangTestLanguage.g:3174:2: ';'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getSemicolonKeyword_7_3_3()); 
            }
            match(input,50,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getSemicolonKeyword_7_3_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 209, rule__Unit__Group_7_3__3__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_3__3__Impl"


    // $ANTLR start "rule__Unit__Group_7_4__0"
    // InternalSimpleBeeLangTestLanguage.g:3184:1: rule__Unit__Group_7_4__0 : rule__Unit__Group_7_4__0__Impl rule__Unit__Group_7_4__1 ;
    public final void rule__Unit__Group_7_4__0() throws RecognitionException {
        int rule__Unit__Group_7_4__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 210) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:3188:1: ( rule__Unit__Group_7_4__0__Impl rule__Unit__Group_7_4__1 )
            // InternalSimpleBeeLangTestLanguage.g:3189:2: rule__Unit__Group_7_4__0__Impl rule__Unit__Group_7_4__1
            {
            pushFollow(FollowSets000.FOLLOW_16);
            rule__Unit__Group_7_4__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Unit__Group_7_4__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 210, rule__Unit__Group_7_4__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_4__0"


    // $ANTLR start "rule__Unit__Group_7_4__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:3196:1: rule__Unit__Group_7_4__0__Impl : ( 'requires' ) ;
    public final void rule__Unit__Group_7_4__0__Impl() throws RecognitionException {
        int rule__Unit__Group_7_4__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 211) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:3200:1: ( ( 'requires' ) )
            // InternalSimpleBeeLangTestLanguage.g:3201:1: ( 'requires' )
            {
            // InternalSimpleBeeLangTestLanguage.g:3201:1: ( 'requires' )
            // InternalSimpleBeeLangTestLanguage.g:3202:2: 'requires'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getRequiresKeyword_7_4_0()); 
            }
            match(input,52,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getRequiresKeyword_7_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 211, rule__Unit__Group_7_4__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_4__0__Impl"


    // $ANTLR start "rule__Unit__Group_7_4__1"
    // InternalSimpleBeeLangTestLanguage.g:3211:1: rule__Unit__Group_7_4__1 : rule__Unit__Group_7_4__1__Impl rule__Unit__Group_7_4__2 ;
    public final void rule__Unit__Group_7_4__1() throws RecognitionException {
        int rule__Unit__Group_7_4__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 212) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:3215:1: ( rule__Unit__Group_7_4__1__Impl rule__Unit__Group_7_4__2 )
            // InternalSimpleBeeLangTestLanguage.g:3216:2: rule__Unit__Group_7_4__1__Impl rule__Unit__Group_7_4__2
            {
            pushFollow(FollowSets000.FOLLOW_12);
            rule__Unit__Group_7_4__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Unit__Group_7_4__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 212, rule__Unit__Group_7_4__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_4__1"


    // $ANTLR start "rule__Unit__Group_7_4__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:3223:1: rule__Unit__Group_7_4__1__Impl : ( 'env' ) ;
    public final void rule__Unit__Group_7_4__1__Impl() throws RecognitionException {
        int rule__Unit__Group_7_4__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 213) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:3227:1: ( ( 'env' ) )
            // InternalSimpleBeeLangTestLanguage.g:3228:1: ( 'env' )
            {
            // InternalSimpleBeeLangTestLanguage.g:3228:1: ( 'env' )
            // InternalSimpleBeeLangTestLanguage.g:3229:2: 'env'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getEnvKeyword_7_4_1()); 
            }
            match(input,53,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getEnvKeyword_7_4_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 213, rule__Unit__Group_7_4__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_4__1__Impl"


    // $ANTLR start "rule__Unit__Group_7_4__2"
    // InternalSimpleBeeLangTestLanguage.g:3238:1: rule__Unit__Group_7_4__2 : rule__Unit__Group_7_4__2__Impl rule__Unit__Group_7_4__3 ;
    public final void rule__Unit__Group_7_4__2() throws RecognitionException {
        int rule__Unit__Group_7_4__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 214) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:3242:1: ( rule__Unit__Group_7_4__2__Impl rule__Unit__Group_7_4__3 )
            // InternalSimpleBeeLangTestLanguage.g:3243:2: rule__Unit__Group_7_4__2__Impl rule__Unit__Group_7_4__3
            {
            pushFollow(FollowSets000.FOLLOW_15);
            rule__Unit__Group_7_4__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Unit__Group_7_4__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 214, rule__Unit__Group_7_4__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_4__2"


    // $ANTLR start "rule__Unit__Group_7_4__2__Impl"
    // InternalSimpleBeeLangTestLanguage.g:3250:1: rule__Unit__Group_7_4__2__Impl : ( ':' ) ;
    public final void rule__Unit__Group_7_4__2__Impl() throws RecognitionException {
        int rule__Unit__Group_7_4__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 215) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:3254:1: ( ( ':' ) )
            // InternalSimpleBeeLangTestLanguage.g:3255:1: ( ':' )
            {
            // InternalSimpleBeeLangTestLanguage.g:3255:1: ( ':' )
            // InternalSimpleBeeLangTestLanguage.g:3256:2: ':'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getColonKeyword_7_4_2()); 
            }
            match(input,49,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getColonKeyword_7_4_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 215, rule__Unit__Group_7_4__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_4__2__Impl"


    // $ANTLR start "rule__Unit__Group_7_4__3"
    // InternalSimpleBeeLangTestLanguage.g:3265:1: rule__Unit__Group_7_4__3 : rule__Unit__Group_7_4__3__Impl rule__Unit__Group_7_4__4 ;
    public final void rule__Unit__Group_7_4__3() throws RecognitionException {
        int rule__Unit__Group_7_4__3_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 216) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:3269:1: ( rule__Unit__Group_7_4__3__Impl rule__Unit__Group_7_4__4 )
            // InternalSimpleBeeLangTestLanguage.g:3270:2: rule__Unit__Group_7_4__3__Impl rule__Unit__Group_7_4__4
            {
            pushFollow(FollowSets000.FOLLOW_14);
            rule__Unit__Group_7_4__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Unit__Group_7_4__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 216, rule__Unit__Group_7_4__3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_4__3"


    // $ANTLR start "rule__Unit__Group_7_4__3__Impl"
    // InternalSimpleBeeLangTestLanguage.g:3277:1: rule__Unit__Group_7_4__3__Impl : ( ( rule__Unit__MetaRequiredCapabilitiesAssignment_7_4_3 ) ) ;
    public final void rule__Unit__Group_7_4__3__Impl() throws RecognitionException {
        int rule__Unit__Group_7_4__3__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 217) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:3281:1: ( ( ( rule__Unit__MetaRequiredCapabilitiesAssignment_7_4_3 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:3282:1: ( ( rule__Unit__MetaRequiredCapabilitiesAssignment_7_4_3 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:3282:1: ( ( rule__Unit__MetaRequiredCapabilitiesAssignment_7_4_3 ) )
            // InternalSimpleBeeLangTestLanguage.g:3283:2: ( rule__Unit__MetaRequiredCapabilitiesAssignment_7_4_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getMetaRequiredCapabilitiesAssignment_7_4_3()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:3284:2: ( rule__Unit__MetaRequiredCapabilitiesAssignment_7_4_3 )
            // InternalSimpleBeeLangTestLanguage.g:3284:3: rule__Unit__MetaRequiredCapabilitiesAssignment_7_4_3
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Unit__MetaRequiredCapabilitiesAssignment_7_4_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getMetaRequiredCapabilitiesAssignment_7_4_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 217, rule__Unit__Group_7_4__3__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_4__3__Impl"


    // $ANTLR start "rule__Unit__Group_7_4__4"
    // InternalSimpleBeeLangTestLanguage.g:3292:1: rule__Unit__Group_7_4__4 : rule__Unit__Group_7_4__4__Impl ;
    public final void rule__Unit__Group_7_4__4() throws RecognitionException {
        int rule__Unit__Group_7_4__4_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 218) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:3296:1: ( rule__Unit__Group_7_4__4__Impl )
            // InternalSimpleBeeLangTestLanguage.g:3297:2: rule__Unit__Group_7_4__4__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Unit__Group_7_4__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 218, rule__Unit__Group_7_4__4_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_4__4"


    // $ANTLR start "rule__Unit__Group_7_4__4__Impl"
    // InternalSimpleBeeLangTestLanguage.g:3303:1: rule__Unit__Group_7_4__4__Impl : ( ';' ) ;
    public final void rule__Unit__Group_7_4__4__Impl() throws RecognitionException {
        int rule__Unit__Group_7_4__4__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 219) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:3307:1: ( ( ';' ) )
            // InternalSimpleBeeLangTestLanguage.g:3308:1: ( ';' )
            {
            // InternalSimpleBeeLangTestLanguage.g:3308:1: ( ';' )
            // InternalSimpleBeeLangTestLanguage.g:3309:2: ';'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getSemicolonKeyword_7_4_4()); 
            }
            match(input,50,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getSemicolonKeyword_7_4_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 219, rule__Unit__Group_7_4__4__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_4__4__Impl"


    // $ANTLR start "rule__ProvidedCapability__Group__0"
    // InternalSimpleBeeLangTestLanguage.g:3319:1: rule__ProvidedCapability__Group__0 : rule__ProvidedCapability__Group__0__Impl rule__ProvidedCapability__Group__1 ;
    public final void rule__ProvidedCapability__Group__0() throws RecognitionException {
        int rule__ProvidedCapability__Group__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 220) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:3323:1: ( rule__ProvidedCapability__Group__0__Impl rule__ProvidedCapability__Group__1 )
            // InternalSimpleBeeLangTestLanguage.g:3324:2: rule__ProvidedCapability__Group__0__Impl rule__ProvidedCapability__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_15);
            rule__ProvidedCapability__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ProvidedCapability__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 220, rule__ProvidedCapability__Group__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__Group__0"


    // $ANTLR start "rule__ProvidedCapability__Group__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:3331:1: rule__ProvidedCapability__Group__0__Impl : ( () ) ;
    public final void rule__ProvidedCapability__Group__0__Impl() throws RecognitionException {
        int rule__ProvidedCapability__Group__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 221) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:3335:1: ( ( () ) )
            // InternalSimpleBeeLangTestLanguage.g:3336:1: ( () )
            {
            // InternalSimpleBeeLangTestLanguage.g:3336:1: ( () )
            // InternalSimpleBeeLangTestLanguage.g:3337:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProvidedCapabilityAccess().getProvidedCapabilityAction_0()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:3338:2: ()
            // InternalSimpleBeeLangTestLanguage.g:3338:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getProvidedCapabilityAccess().getProvidedCapabilityAction_0()); 
            }

            }


            }

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 221, rule__ProvidedCapability__Group__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__Group__0__Impl"


    // $ANTLR start "rule__ProvidedCapability__Group__1"
    // InternalSimpleBeeLangTestLanguage.g:3346:1: rule__ProvidedCapability__Group__1 : rule__ProvidedCapability__Group__1__Impl rule__ProvidedCapability__Group__2 ;
    public final void rule__ProvidedCapability__Group__1() throws RecognitionException {
        int rule__ProvidedCapability__Group__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 222) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:3350:1: ( rule__ProvidedCapability__Group__1__Impl rule__ProvidedCapability__Group__2 )
            // InternalSimpleBeeLangTestLanguage.g:3351:2: rule__ProvidedCapability__Group__1__Impl rule__ProvidedCapability__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_17);
            rule__ProvidedCapability__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ProvidedCapability__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 222, rule__ProvidedCapability__Group__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__Group__1"


    // $ANTLR start "rule__ProvidedCapability__Group__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:3358:1: rule__ProvidedCapability__Group__1__Impl : ( ( rule__ProvidedCapability__Alternatives_1 ) ) ;
    public final void rule__ProvidedCapability__Group__1__Impl() throws RecognitionException {
        int rule__ProvidedCapability__Group__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 223) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:3362:1: ( ( ( rule__ProvidedCapability__Alternatives_1 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:3363:1: ( ( rule__ProvidedCapability__Alternatives_1 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:3363:1: ( ( rule__ProvidedCapability__Alternatives_1 ) )
            // InternalSimpleBeeLangTestLanguage.g:3364:2: ( rule__ProvidedCapability__Alternatives_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProvidedCapabilityAccess().getAlternatives_1()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:3365:2: ( rule__ProvidedCapability__Alternatives_1 )
            // InternalSimpleBeeLangTestLanguage.g:3365:3: rule__ProvidedCapability__Alternatives_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ProvidedCapability__Alternatives_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getProvidedCapabilityAccess().getAlternatives_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 223, rule__ProvidedCapability__Group__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__Group__1__Impl"


    // $ANTLR start "rule__ProvidedCapability__Group__2"
    // InternalSimpleBeeLangTestLanguage.g:3373:1: rule__ProvidedCapability__Group__2 : rule__ProvidedCapability__Group__2__Impl ;
    public final void rule__ProvidedCapability__Group__2() throws RecognitionException {
        int rule__ProvidedCapability__Group__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 224) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:3377:1: ( rule__ProvidedCapability__Group__2__Impl )
            // InternalSimpleBeeLangTestLanguage.g:3378:2: rule__ProvidedCapability__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ProvidedCapability__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 224, rule__ProvidedCapability__Group__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__Group__2"


    // $ANTLR start "rule__ProvidedCapability__Group__2__Impl"
    // InternalSimpleBeeLangTestLanguage.g:3384:1: rule__ProvidedCapability__Group__2__Impl : ( ( rule__ProvidedCapability__Group_2__0 )? ) ;
    public final void rule__ProvidedCapability__Group__2__Impl() throws RecognitionException {
        int rule__ProvidedCapability__Group__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 225) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:3388:1: ( ( ( rule__ProvidedCapability__Group_2__0 )? ) )
            // InternalSimpleBeeLangTestLanguage.g:3389:1: ( ( rule__ProvidedCapability__Group_2__0 )? )
            {
            // InternalSimpleBeeLangTestLanguage.g:3389:1: ( ( rule__ProvidedCapability__Group_2__0 )? )
            // InternalSimpleBeeLangTestLanguage.g:3390:2: ( rule__ProvidedCapability__Group_2__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProvidedCapabilityAccess().getGroup_2()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:3391:2: ( rule__ProvidedCapability__Group_2__0 )?
            int alt39=2;
            int LA39_0 = input.LA(1);

            if ( (LA39_0==44) ) {
                alt39=1;
            }
            switch (alt39) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:3391:3: rule__ProvidedCapability__Group_2__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ProvidedCapability__Group_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getProvidedCapabilityAccess().getGroup_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 225, rule__ProvidedCapability__Group__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__Group__2__Impl"


    // $ANTLR start "rule__ProvidedCapability__Group_2__0"
    // InternalSimpleBeeLangTestLanguage.g:3400:1: rule__ProvidedCapability__Group_2__0 : rule__ProvidedCapability__Group_2__0__Impl rule__ProvidedCapability__Group_2__1 ;
    public final void rule__ProvidedCapability__Group_2__0() throws RecognitionException {
        int rule__ProvidedCapability__Group_2__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 226) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:3404:1: ( rule__ProvidedCapability__Group_2__0__Impl rule__ProvidedCapability__Group_2__1 )
            // InternalSimpleBeeLangTestLanguage.g:3405:2: rule__ProvidedCapability__Group_2__0__Impl rule__ProvidedCapability__Group_2__1
            {
            pushFollow(FollowSets000.FOLLOW_18);
            rule__ProvidedCapability__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ProvidedCapability__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 226, rule__ProvidedCapability__Group_2__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__Group_2__0"


    // $ANTLR start "rule__ProvidedCapability__Group_2__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:3412:1: rule__ProvidedCapability__Group_2__0__Impl : ( '{' ) ;
    public final void rule__ProvidedCapability__Group_2__0__Impl() throws RecognitionException {
        int rule__ProvidedCapability__Group_2__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 227) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:3416:1: ( ( '{' ) )
            // InternalSimpleBeeLangTestLanguage.g:3417:1: ( '{' )
            {
            // InternalSimpleBeeLangTestLanguage.g:3417:1: ( '{' )
            // InternalSimpleBeeLangTestLanguage.g:3418:2: '{'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProvidedCapabilityAccess().getLeftCurlyBracketKeyword_2_0()); 
            }
            match(input,44,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getProvidedCapabilityAccess().getLeftCurlyBracketKeyword_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 227, rule__ProvidedCapability__Group_2__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__Group_2__0__Impl"


    // $ANTLR start "rule__ProvidedCapability__Group_2__1"
    // InternalSimpleBeeLangTestLanguage.g:3427:1: rule__ProvidedCapability__Group_2__1 : rule__ProvidedCapability__Group_2__1__Impl rule__ProvidedCapability__Group_2__2 ;
    public final void rule__ProvidedCapability__Group_2__1() throws RecognitionException {
        int rule__ProvidedCapability__Group_2__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 228) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:3431:1: ( rule__ProvidedCapability__Group_2__1__Impl rule__ProvidedCapability__Group_2__2 )
            // InternalSimpleBeeLangTestLanguage.g:3432:2: rule__ProvidedCapability__Group_2__1__Impl rule__ProvidedCapability__Group_2__2
            {
            pushFollow(FollowSets000.FOLLOW_8);
            rule__ProvidedCapability__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ProvidedCapability__Group_2__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 228, rule__ProvidedCapability__Group_2__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__Group_2__1"


    // $ANTLR start "rule__ProvidedCapability__Group_2__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:3439:1: rule__ProvidedCapability__Group_2__1__Impl : ( ( rule__ProvidedCapability__UnorderedGroup_2_1 ) ) ;
    public final void rule__ProvidedCapability__Group_2__1__Impl() throws RecognitionException {
        int rule__ProvidedCapability__Group_2__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 229) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:3443:1: ( ( ( rule__ProvidedCapability__UnorderedGroup_2_1 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:3444:1: ( ( rule__ProvidedCapability__UnorderedGroup_2_1 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:3444:1: ( ( rule__ProvidedCapability__UnorderedGroup_2_1 ) )
            // InternalSimpleBeeLangTestLanguage.g:3445:2: ( rule__ProvidedCapability__UnorderedGroup_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:3446:2: ( rule__ProvidedCapability__UnorderedGroup_2_1 )
            // InternalSimpleBeeLangTestLanguage.g:3446:3: rule__ProvidedCapability__UnorderedGroup_2_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ProvidedCapability__UnorderedGroup_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 229, rule__ProvidedCapability__Group_2__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__Group_2__1__Impl"


    // $ANTLR start "rule__ProvidedCapability__Group_2__2"
    // InternalSimpleBeeLangTestLanguage.g:3454:1: rule__ProvidedCapability__Group_2__2 : rule__ProvidedCapability__Group_2__2__Impl ;
    public final void rule__ProvidedCapability__Group_2__2() throws RecognitionException {
        int rule__ProvidedCapability__Group_2__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 230) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:3458:1: ( rule__ProvidedCapability__Group_2__2__Impl )
            // InternalSimpleBeeLangTestLanguage.g:3459:2: rule__ProvidedCapability__Group_2__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ProvidedCapability__Group_2__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 230, rule__ProvidedCapability__Group_2__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__Group_2__2"


    // $ANTLR start "rule__ProvidedCapability__Group_2__2__Impl"
    // InternalSimpleBeeLangTestLanguage.g:3465:1: rule__ProvidedCapability__Group_2__2__Impl : ( '}' ) ;
    public final void rule__ProvidedCapability__Group_2__2__Impl() throws RecognitionException {
        int rule__ProvidedCapability__Group_2__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 231) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:3469:1: ( ( '}' ) )
            // InternalSimpleBeeLangTestLanguage.g:3470:1: ( '}' )
            {
            // InternalSimpleBeeLangTestLanguage.g:3470:1: ( '}' )
            // InternalSimpleBeeLangTestLanguage.g:3471:2: '}'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProvidedCapabilityAccess().getRightCurlyBracketKeyword_2_2()); 
            }
            match(input,45,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getProvidedCapabilityAccess().getRightCurlyBracketKeyword_2_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 231, rule__ProvidedCapability__Group_2__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__Group_2__2__Impl"


    // $ANTLR start "rule__ProvidedCapability__Group_2_1_0__0"
    // InternalSimpleBeeLangTestLanguage.g:3481:1: rule__ProvidedCapability__Group_2_1_0__0 : rule__ProvidedCapability__Group_2_1_0__0__Impl rule__ProvidedCapability__Group_2_1_0__1 ;
    public final void rule__ProvidedCapability__Group_2_1_0__0() throws RecognitionException {
        int rule__ProvidedCapability__Group_2_1_0__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 232) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:3485:1: ( rule__ProvidedCapability__Group_2_1_0__0__Impl rule__ProvidedCapability__Group_2_1_0__1 )
            // InternalSimpleBeeLangTestLanguage.g:3486:2: rule__ProvidedCapability__Group_2_1_0__0__Impl rule__ProvidedCapability__Group_2_1_0__1
            {
            pushFollow(FollowSets000.FOLLOW_12);
            rule__ProvidedCapability__Group_2_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ProvidedCapability__Group_2_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 232, rule__ProvidedCapability__Group_2_1_0__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__Group_2_1_0__0"


    // $ANTLR start "rule__ProvidedCapability__Group_2_1_0__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:3493:1: rule__ProvidedCapability__Group_2_1_0__0__Impl : ( 'when' ) ;
    public final void rule__ProvidedCapability__Group_2_1_0__0__Impl() throws RecognitionException {
        int rule__ProvidedCapability__Group_2_1_0__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 233) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:3497:1: ( ( 'when' ) )
            // InternalSimpleBeeLangTestLanguage.g:3498:1: ( 'when' )
            {
            // InternalSimpleBeeLangTestLanguage.g:3498:1: ( 'when' )
            // InternalSimpleBeeLangTestLanguage.g:3499:2: 'when'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProvidedCapabilityAccess().getWhenKeyword_2_1_0_0()); 
            }
            match(input,54,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getProvidedCapabilityAccess().getWhenKeyword_2_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 233, rule__ProvidedCapability__Group_2_1_0__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__Group_2_1_0__0__Impl"


    // $ANTLR start "rule__ProvidedCapability__Group_2_1_0__1"
    // InternalSimpleBeeLangTestLanguage.g:3508:1: rule__ProvidedCapability__Group_2_1_0__1 : rule__ProvidedCapability__Group_2_1_0__1__Impl rule__ProvidedCapability__Group_2_1_0__2 ;
    public final void rule__ProvidedCapability__Group_2_1_0__1() throws RecognitionException {
        int rule__ProvidedCapability__Group_2_1_0__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 234) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:3512:1: ( rule__ProvidedCapability__Group_2_1_0__1__Impl rule__ProvidedCapability__Group_2_1_0__2 )
            // InternalSimpleBeeLangTestLanguage.g:3513:2: rule__ProvidedCapability__Group_2_1_0__1__Impl rule__ProvidedCapability__Group_2_1_0__2
            {
            pushFollow(FollowSets000.FOLLOW_19);
            rule__ProvidedCapability__Group_2_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ProvidedCapability__Group_2_1_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 234, rule__ProvidedCapability__Group_2_1_0__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__Group_2_1_0__1"


    // $ANTLR start "rule__ProvidedCapability__Group_2_1_0__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:3520:1: rule__ProvidedCapability__Group_2_1_0__1__Impl : ( ':' ) ;
    public final void rule__ProvidedCapability__Group_2_1_0__1__Impl() throws RecognitionException {
        int rule__ProvidedCapability__Group_2_1_0__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 235) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:3524:1: ( ( ':' ) )
            // InternalSimpleBeeLangTestLanguage.g:3525:1: ( ':' )
            {
            // InternalSimpleBeeLangTestLanguage.g:3525:1: ( ':' )
            // InternalSimpleBeeLangTestLanguage.g:3526:2: ':'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProvidedCapabilityAccess().getColonKeyword_2_1_0_1()); 
            }
            match(input,49,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getProvidedCapabilityAccess().getColonKeyword_2_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 235, rule__ProvidedCapability__Group_2_1_0__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__Group_2_1_0__1__Impl"


    // $ANTLR start "rule__ProvidedCapability__Group_2_1_0__2"
    // InternalSimpleBeeLangTestLanguage.g:3535:1: rule__ProvidedCapability__Group_2_1_0__2 : rule__ProvidedCapability__Group_2_1_0__2__Impl rule__ProvidedCapability__Group_2_1_0__3 ;
    public final void rule__ProvidedCapability__Group_2_1_0__2() throws RecognitionException {
        int rule__ProvidedCapability__Group_2_1_0__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 236) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:3539:1: ( rule__ProvidedCapability__Group_2_1_0__2__Impl rule__ProvidedCapability__Group_2_1_0__3 )
            // InternalSimpleBeeLangTestLanguage.g:3540:2: rule__ProvidedCapability__Group_2_1_0__2__Impl rule__ProvidedCapability__Group_2_1_0__3
            {
            pushFollow(FollowSets000.FOLLOW_14);
            rule__ProvidedCapability__Group_2_1_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ProvidedCapability__Group_2_1_0__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 236, rule__ProvidedCapability__Group_2_1_0__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__Group_2_1_0__2"


    // $ANTLR start "rule__ProvidedCapability__Group_2_1_0__2__Impl"
    // InternalSimpleBeeLangTestLanguage.g:3547:1: rule__ProvidedCapability__Group_2_1_0__2__Impl : ( ( rule__ProvidedCapability__CondExprAssignment_2_1_0_2 ) ) ;
    public final void rule__ProvidedCapability__Group_2_1_0__2__Impl() throws RecognitionException {
        int rule__ProvidedCapability__Group_2_1_0__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 237) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:3551:1: ( ( ( rule__ProvidedCapability__CondExprAssignment_2_1_0_2 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:3552:1: ( ( rule__ProvidedCapability__CondExprAssignment_2_1_0_2 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:3552:1: ( ( rule__ProvidedCapability__CondExprAssignment_2_1_0_2 ) )
            // InternalSimpleBeeLangTestLanguage.g:3553:2: ( rule__ProvidedCapability__CondExprAssignment_2_1_0_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProvidedCapabilityAccess().getCondExprAssignment_2_1_0_2()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:3554:2: ( rule__ProvidedCapability__CondExprAssignment_2_1_0_2 )
            // InternalSimpleBeeLangTestLanguage.g:3554:3: rule__ProvidedCapability__CondExprAssignment_2_1_0_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ProvidedCapability__CondExprAssignment_2_1_0_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getProvidedCapabilityAccess().getCondExprAssignment_2_1_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 237, rule__ProvidedCapability__Group_2_1_0__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__Group_2_1_0__2__Impl"


    // $ANTLR start "rule__ProvidedCapability__Group_2_1_0__3"
    // InternalSimpleBeeLangTestLanguage.g:3562:1: rule__ProvidedCapability__Group_2_1_0__3 : rule__ProvidedCapability__Group_2_1_0__3__Impl ;
    public final void rule__ProvidedCapability__Group_2_1_0__3() throws RecognitionException {
        int rule__ProvidedCapability__Group_2_1_0__3_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 238) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:3566:1: ( rule__ProvidedCapability__Group_2_1_0__3__Impl )
            // InternalSimpleBeeLangTestLanguage.g:3567:2: rule__ProvidedCapability__Group_2_1_0__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ProvidedCapability__Group_2_1_0__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 238, rule__ProvidedCapability__Group_2_1_0__3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__Group_2_1_0__3"


    // $ANTLR start "rule__ProvidedCapability__Group_2_1_0__3__Impl"
    // InternalSimpleBeeLangTestLanguage.g:3573:1: rule__ProvidedCapability__Group_2_1_0__3__Impl : ( ';' ) ;
    public final void rule__ProvidedCapability__Group_2_1_0__3__Impl() throws RecognitionException {
        int rule__ProvidedCapability__Group_2_1_0__3__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 239) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:3577:1: ( ( ';' ) )
            // InternalSimpleBeeLangTestLanguage.g:3578:1: ( ';' )
            {
            // InternalSimpleBeeLangTestLanguage.g:3578:1: ( ';' )
            // InternalSimpleBeeLangTestLanguage.g:3579:2: ';'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProvidedCapabilityAccess().getSemicolonKeyword_2_1_0_3()); 
            }
            match(input,50,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getProvidedCapabilityAccess().getSemicolonKeyword_2_1_0_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 239, rule__ProvidedCapability__Group_2_1_0__3__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__Group_2_1_0__3__Impl"


    // $ANTLR start "rule__ProvidedCapability__Group_2_1_1__0"
    // InternalSimpleBeeLangTestLanguage.g:3589:1: rule__ProvidedCapability__Group_2_1_1__0 : rule__ProvidedCapability__Group_2_1_1__0__Impl rule__ProvidedCapability__Group_2_1_1__1 ;
    public final void rule__ProvidedCapability__Group_2_1_1__0() throws RecognitionException {
        int rule__ProvidedCapability__Group_2_1_1__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 240) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:3593:1: ( rule__ProvidedCapability__Group_2_1_1__0__Impl rule__ProvidedCapability__Group_2_1_1__1 )
            // InternalSimpleBeeLangTestLanguage.g:3594:2: rule__ProvidedCapability__Group_2_1_1__0__Impl rule__ProvidedCapability__Group_2_1_1__1
            {
            pushFollow(FollowSets000.FOLLOW_12);
            rule__ProvidedCapability__Group_2_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ProvidedCapability__Group_2_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 240, rule__ProvidedCapability__Group_2_1_1__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__Group_2_1_1__0"


    // $ANTLR start "rule__ProvidedCapability__Group_2_1_1__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:3601:1: rule__ProvidedCapability__Group_2_1_1__0__Impl : ( 'name' ) ;
    public final void rule__ProvidedCapability__Group_2_1_1__0__Impl() throws RecognitionException {
        int rule__ProvidedCapability__Group_2_1_1__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 241) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:3605:1: ( ( 'name' ) )
            // InternalSimpleBeeLangTestLanguage.g:3606:1: ( 'name' )
            {
            // InternalSimpleBeeLangTestLanguage.g:3606:1: ( 'name' )
            // InternalSimpleBeeLangTestLanguage.g:3607:2: 'name'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProvidedCapabilityAccess().getNameKeyword_2_1_1_0()); 
            }
            match(input,55,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getProvidedCapabilityAccess().getNameKeyword_2_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 241, rule__ProvidedCapability__Group_2_1_1__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__Group_2_1_1__0__Impl"


    // $ANTLR start "rule__ProvidedCapability__Group_2_1_1__1"
    // InternalSimpleBeeLangTestLanguage.g:3616:1: rule__ProvidedCapability__Group_2_1_1__1 : rule__ProvidedCapability__Group_2_1_1__1__Impl rule__ProvidedCapability__Group_2_1_1__2 ;
    public final void rule__ProvidedCapability__Group_2_1_1__1() throws RecognitionException {
        int rule__ProvidedCapability__Group_2_1_1__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 242) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:3620:1: ( rule__ProvidedCapability__Group_2_1_1__1__Impl rule__ProvidedCapability__Group_2_1_1__2 )
            // InternalSimpleBeeLangTestLanguage.g:3621:2: rule__ProvidedCapability__Group_2_1_1__1__Impl rule__ProvidedCapability__Group_2_1_1__2
            {
            pushFollow(FollowSets000.FOLLOW_9);
            rule__ProvidedCapability__Group_2_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ProvidedCapability__Group_2_1_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 242, rule__ProvidedCapability__Group_2_1_1__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__Group_2_1_1__1"


    // $ANTLR start "rule__ProvidedCapability__Group_2_1_1__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:3628:1: rule__ProvidedCapability__Group_2_1_1__1__Impl : ( ':' ) ;
    public final void rule__ProvidedCapability__Group_2_1_1__1__Impl() throws RecognitionException {
        int rule__ProvidedCapability__Group_2_1_1__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 243) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:3632:1: ( ( ':' ) )
            // InternalSimpleBeeLangTestLanguage.g:3633:1: ( ':' )
            {
            // InternalSimpleBeeLangTestLanguage.g:3633:1: ( ':' )
            // InternalSimpleBeeLangTestLanguage.g:3634:2: ':'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProvidedCapabilityAccess().getColonKeyword_2_1_1_1()); 
            }
            match(input,49,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getProvidedCapabilityAccess().getColonKeyword_2_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 243, rule__ProvidedCapability__Group_2_1_1__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__Group_2_1_1__1__Impl"


    // $ANTLR start "rule__ProvidedCapability__Group_2_1_1__2"
    // InternalSimpleBeeLangTestLanguage.g:3643:1: rule__ProvidedCapability__Group_2_1_1__2 : rule__ProvidedCapability__Group_2_1_1__2__Impl rule__ProvidedCapability__Group_2_1_1__3 ;
    public final void rule__ProvidedCapability__Group_2_1_1__2() throws RecognitionException {
        int rule__ProvidedCapability__Group_2_1_1__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 244) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:3647:1: ( rule__ProvidedCapability__Group_2_1_1__2__Impl rule__ProvidedCapability__Group_2_1_1__3 )
            // InternalSimpleBeeLangTestLanguage.g:3648:2: rule__ProvidedCapability__Group_2_1_1__2__Impl rule__ProvidedCapability__Group_2_1_1__3
            {
            pushFollow(FollowSets000.FOLLOW_14);
            rule__ProvidedCapability__Group_2_1_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ProvidedCapability__Group_2_1_1__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 244, rule__ProvidedCapability__Group_2_1_1__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__Group_2_1_1__2"


    // $ANTLR start "rule__ProvidedCapability__Group_2_1_1__2__Impl"
    // InternalSimpleBeeLangTestLanguage.g:3655:1: rule__ProvidedCapability__Group_2_1_1__2__Impl : ( ( rule__ProvidedCapability__NameAssignment_2_1_1_2 ) ) ;
    public final void rule__ProvidedCapability__Group_2_1_1__2__Impl() throws RecognitionException {
        int rule__ProvidedCapability__Group_2_1_1__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 245) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:3659:1: ( ( ( rule__ProvidedCapability__NameAssignment_2_1_1_2 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:3660:1: ( ( rule__ProvidedCapability__NameAssignment_2_1_1_2 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:3660:1: ( ( rule__ProvidedCapability__NameAssignment_2_1_1_2 ) )
            // InternalSimpleBeeLangTestLanguage.g:3661:2: ( rule__ProvidedCapability__NameAssignment_2_1_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProvidedCapabilityAccess().getNameAssignment_2_1_1_2()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:3662:2: ( rule__ProvidedCapability__NameAssignment_2_1_1_2 )
            // InternalSimpleBeeLangTestLanguage.g:3662:3: rule__ProvidedCapability__NameAssignment_2_1_1_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ProvidedCapability__NameAssignment_2_1_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getProvidedCapabilityAccess().getNameAssignment_2_1_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 245, rule__ProvidedCapability__Group_2_1_1__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__Group_2_1_1__2__Impl"


    // $ANTLR start "rule__ProvidedCapability__Group_2_1_1__3"
    // InternalSimpleBeeLangTestLanguage.g:3670:1: rule__ProvidedCapability__Group_2_1_1__3 : rule__ProvidedCapability__Group_2_1_1__3__Impl ;
    public final void rule__ProvidedCapability__Group_2_1_1__3() throws RecognitionException {
        int rule__ProvidedCapability__Group_2_1_1__3_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 246) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:3674:1: ( rule__ProvidedCapability__Group_2_1_1__3__Impl )
            // InternalSimpleBeeLangTestLanguage.g:3675:2: rule__ProvidedCapability__Group_2_1_1__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ProvidedCapability__Group_2_1_1__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 246, rule__ProvidedCapability__Group_2_1_1__3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__Group_2_1_1__3"


    // $ANTLR start "rule__ProvidedCapability__Group_2_1_1__3__Impl"
    // InternalSimpleBeeLangTestLanguage.g:3681:1: rule__ProvidedCapability__Group_2_1_1__3__Impl : ( ';' ) ;
    public final void rule__ProvidedCapability__Group_2_1_1__3__Impl() throws RecognitionException {
        int rule__ProvidedCapability__Group_2_1_1__3__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 247) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:3685:1: ( ( ';' ) )
            // InternalSimpleBeeLangTestLanguage.g:3686:1: ( ';' )
            {
            // InternalSimpleBeeLangTestLanguage.g:3686:1: ( ';' )
            // InternalSimpleBeeLangTestLanguage.g:3687:2: ';'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProvidedCapabilityAccess().getSemicolonKeyword_2_1_1_3()); 
            }
            match(input,50,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getProvidedCapabilityAccess().getSemicolonKeyword_2_1_1_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 247, rule__ProvidedCapability__Group_2_1_1__3__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__Group_2_1_1__3__Impl"


    // $ANTLR start "rule__ProvidedCapability__Group_2_1_2__0"
    // InternalSimpleBeeLangTestLanguage.g:3697:1: rule__ProvidedCapability__Group_2_1_2__0 : rule__ProvidedCapability__Group_2_1_2__0__Impl rule__ProvidedCapability__Group_2_1_2__1 ;
    public final void rule__ProvidedCapability__Group_2_1_2__0() throws RecognitionException {
        int rule__ProvidedCapability__Group_2_1_2__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 248) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:3701:1: ( rule__ProvidedCapability__Group_2_1_2__0__Impl rule__ProvidedCapability__Group_2_1_2__1 )
            // InternalSimpleBeeLangTestLanguage.g:3702:2: rule__ProvidedCapability__Group_2_1_2__0__Impl rule__ProvidedCapability__Group_2_1_2__1
            {
            pushFollow(FollowSets000.FOLLOW_12);
            rule__ProvidedCapability__Group_2_1_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ProvidedCapability__Group_2_1_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 248, rule__ProvidedCapability__Group_2_1_2__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__Group_2_1_2__0"


    // $ANTLR start "rule__ProvidedCapability__Group_2_1_2__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:3709:1: rule__ProvidedCapability__Group_2_1_2__0__Impl : ( 'version' ) ;
    public final void rule__ProvidedCapability__Group_2_1_2__0__Impl() throws RecognitionException {
        int rule__ProvidedCapability__Group_2_1_2__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 249) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:3713:1: ( ( 'version' ) )
            // InternalSimpleBeeLangTestLanguage.g:3714:1: ( 'version' )
            {
            // InternalSimpleBeeLangTestLanguage.g:3714:1: ( 'version' )
            // InternalSimpleBeeLangTestLanguage.g:3715:2: 'version'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProvidedCapabilityAccess().getVersionKeyword_2_1_2_0()); 
            }
            match(input,46,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getProvidedCapabilityAccess().getVersionKeyword_2_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 249, rule__ProvidedCapability__Group_2_1_2__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__Group_2_1_2__0__Impl"


    // $ANTLR start "rule__ProvidedCapability__Group_2_1_2__1"
    // InternalSimpleBeeLangTestLanguage.g:3724:1: rule__ProvidedCapability__Group_2_1_2__1 : rule__ProvidedCapability__Group_2_1_2__1__Impl rule__ProvidedCapability__Group_2_1_2__2 ;
    public final void rule__ProvidedCapability__Group_2_1_2__1() throws RecognitionException {
        int rule__ProvidedCapability__Group_2_1_2__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 250) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:3728:1: ( rule__ProvidedCapability__Group_2_1_2__1__Impl rule__ProvidedCapability__Group_2_1_2__2 )
            // InternalSimpleBeeLangTestLanguage.g:3729:2: rule__ProvidedCapability__Group_2_1_2__1__Impl rule__ProvidedCapability__Group_2_1_2__2
            {
            pushFollow(FollowSets000.FOLLOW_9);
            rule__ProvidedCapability__Group_2_1_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ProvidedCapability__Group_2_1_2__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 250, rule__ProvidedCapability__Group_2_1_2__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__Group_2_1_2__1"


    // $ANTLR start "rule__ProvidedCapability__Group_2_1_2__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:3736:1: rule__ProvidedCapability__Group_2_1_2__1__Impl : ( ':' ) ;
    public final void rule__ProvidedCapability__Group_2_1_2__1__Impl() throws RecognitionException {
        int rule__ProvidedCapability__Group_2_1_2__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 251) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:3740:1: ( ( ':' ) )
            // InternalSimpleBeeLangTestLanguage.g:3741:1: ( ':' )
            {
            // InternalSimpleBeeLangTestLanguage.g:3741:1: ( ':' )
            // InternalSimpleBeeLangTestLanguage.g:3742:2: ':'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProvidedCapabilityAccess().getColonKeyword_2_1_2_1()); 
            }
            match(input,49,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getProvidedCapabilityAccess().getColonKeyword_2_1_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 251, rule__ProvidedCapability__Group_2_1_2__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__Group_2_1_2__1__Impl"


    // $ANTLR start "rule__ProvidedCapability__Group_2_1_2__2"
    // InternalSimpleBeeLangTestLanguage.g:3751:1: rule__ProvidedCapability__Group_2_1_2__2 : rule__ProvidedCapability__Group_2_1_2__2__Impl rule__ProvidedCapability__Group_2_1_2__3 ;
    public final void rule__ProvidedCapability__Group_2_1_2__2() throws RecognitionException {
        int rule__ProvidedCapability__Group_2_1_2__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 252) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:3755:1: ( rule__ProvidedCapability__Group_2_1_2__2__Impl rule__ProvidedCapability__Group_2_1_2__3 )
            // InternalSimpleBeeLangTestLanguage.g:3756:2: rule__ProvidedCapability__Group_2_1_2__2__Impl rule__ProvidedCapability__Group_2_1_2__3
            {
            pushFollow(FollowSets000.FOLLOW_14);
            rule__ProvidedCapability__Group_2_1_2__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ProvidedCapability__Group_2_1_2__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 252, rule__ProvidedCapability__Group_2_1_2__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__Group_2_1_2__2"


    // $ANTLR start "rule__ProvidedCapability__Group_2_1_2__2__Impl"
    // InternalSimpleBeeLangTestLanguage.g:3763:1: rule__ProvidedCapability__Group_2_1_2__2__Impl : ( ( rule__ProvidedCapability__VersionAssignment_2_1_2_2 ) ) ;
    public final void rule__ProvidedCapability__Group_2_1_2__2__Impl() throws RecognitionException {
        int rule__ProvidedCapability__Group_2_1_2__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 253) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:3767:1: ( ( ( rule__ProvidedCapability__VersionAssignment_2_1_2_2 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:3768:1: ( ( rule__ProvidedCapability__VersionAssignment_2_1_2_2 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:3768:1: ( ( rule__ProvidedCapability__VersionAssignment_2_1_2_2 ) )
            // InternalSimpleBeeLangTestLanguage.g:3769:2: ( rule__ProvidedCapability__VersionAssignment_2_1_2_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProvidedCapabilityAccess().getVersionAssignment_2_1_2_2()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:3770:2: ( rule__ProvidedCapability__VersionAssignment_2_1_2_2 )
            // InternalSimpleBeeLangTestLanguage.g:3770:3: rule__ProvidedCapability__VersionAssignment_2_1_2_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ProvidedCapability__VersionAssignment_2_1_2_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getProvidedCapabilityAccess().getVersionAssignment_2_1_2_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 253, rule__ProvidedCapability__Group_2_1_2__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__Group_2_1_2__2__Impl"


    // $ANTLR start "rule__ProvidedCapability__Group_2_1_2__3"
    // InternalSimpleBeeLangTestLanguage.g:3778:1: rule__ProvidedCapability__Group_2_1_2__3 : rule__ProvidedCapability__Group_2_1_2__3__Impl ;
    public final void rule__ProvidedCapability__Group_2_1_2__3() throws RecognitionException {
        int rule__ProvidedCapability__Group_2_1_2__3_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 254) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:3782:1: ( rule__ProvidedCapability__Group_2_1_2__3__Impl )
            // InternalSimpleBeeLangTestLanguage.g:3783:2: rule__ProvidedCapability__Group_2_1_2__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ProvidedCapability__Group_2_1_2__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 254, rule__ProvidedCapability__Group_2_1_2__3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__Group_2_1_2__3"


    // $ANTLR start "rule__ProvidedCapability__Group_2_1_2__3__Impl"
    // InternalSimpleBeeLangTestLanguage.g:3789:1: rule__ProvidedCapability__Group_2_1_2__3__Impl : ( ';' ) ;
    public final void rule__ProvidedCapability__Group_2_1_2__3__Impl() throws RecognitionException {
        int rule__ProvidedCapability__Group_2_1_2__3__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 255) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:3793:1: ( ( ';' ) )
            // InternalSimpleBeeLangTestLanguage.g:3794:1: ( ';' )
            {
            // InternalSimpleBeeLangTestLanguage.g:3794:1: ( ';' )
            // InternalSimpleBeeLangTestLanguage.g:3795:2: ';'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProvidedCapabilityAccess().getSemicolonKeyword_2_1_2_3()); 
            }
            match(input,50,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getProvidedCapabilityAccess().getSemicolonKeyword_2_1_2_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 255, rule__ProvidedCapability__Group_2_1_2__3__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__Group_2_1_2__3__Impl"


    // $ANTLR start "rule__AliasedRequiredCapability__Group__0"
    // InternalSimpleBeeLangTestLanguage.g:3805:1: rule__AliasedRequiredCapability__Group__0 : rule__AliasedRequiredCapability__Group__0__Impl rule__AliasedRequiredCapability__Group__1 ;
    public final void rule__AliasedRequiredCapability__Group__0() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 256) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:3809:1: ( rule__AliasedRequiredCapability__Group__0__Impl rule__AliasedRequiredCapability__Group__1 )
            // InternalSimpleBeeLangTestLanguage.g:3810:2: rule__AliasedRequiredCapability__Group__0__Impl rule__AliasedRequiredCapability__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_9);
            rule__AliasedRequiredCapability__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AliasedRequiredCapability__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 256, rule__AliasedRequiredCapability__Group__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group__0"


    // $ANTLR start "rule__AliasedRequiredCapability__Group__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:3817:1: rule__AliasedRequiredCapability__Group__0__Impl : ( ( rule__AliasedRequiredCapability__Alternatives_0 ) ) ;
    public final void rule__AliasedRequiredCapability__Group__0__Impl() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 257) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:3821:1: ( ( ( rule__AliasedRequiredCapability__Alternatives_0 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:3822:1: ( ( rule__AliasedRequiredCapability__Alternatives_0 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:3822:1: ( ( rule__AliasedRequiredCapability__Alternatives_0 ) )
            // InternalSimpleBeeLangTestLanguage.g:3823:2: ( rule__AliasedRequiredCapability__Alternatives_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAliasedRequiredCapabilityAccess().getAlternatives_0()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:3824:2: ( rule__AliasedRequiredCapability__Alternatives_0 )
            // InternalSimpleBeeLangTestLanguage.g:3824:3: rule__AliasedRequiredCapability__Alternatives_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AliasedRequiredCapability__Alternatives_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAliasedRequiredCapabilityAccess().getAlternatives_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 257, rule__AliasedRequiredCapability__Group__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group__0__Impl"


    // $ANTLR start "rule__AliasedRequiredCapability__Group__1"
    // InternalSimpleBeeLangTestLanguage.g:3832:1: rule__AliasedRequiredCapability__Group__1 : rule__AliasedRequiredCapability__Group__1__Impl rule__AliasedRequiredCapability__Group__2 ;
    public final void rule__AliasedRequiredCapability__Group__1() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 258) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:3836:1: ( rule__AliasedRequiredCapability__Group__1__Impl rule__AliasedRequiredCapability__Group__2 )
            // InternalSimpleBeeLangTestLanguage.g:3837:2: rule__AliasedRequiredCapability__Group__1__Impl rule__AliasedRequiredCapability__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_20);
            rule__AliasedRequiredCapability__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AliasedRequiredCapability__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 258, rule__AliasedRequiredCapability__Group__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group__1"


    // $ANTLR start "rule__AliasedRequiredCapability__Group__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:3844:1: rule__AliasedRequiredCapability__Group__1__Impl : ( ( rule__AliasedRequiredCapability__NameAssignment_1 ) ) ;
    public final void rule__AliasedRequiredCapability__Group__1__Impl() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 259) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:3848:1: ( ( ( rule__AliasedRequiredCapability__NameAssignment_1 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:3849:1: ( ( rule__AliasedRequiredCapability__NameAssignment_1 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:3849:1: ( ( rule__AliasedRequiredCapability__NameAssignment_1 ) )
            // InternalSimpleBeeLangTestLanguage.g:3850:2: ( rule__AliasedRequiredCapability__NameAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAliasedRequiredCapabilityAccess().getNameAssignment_1()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:3851:2: ( rule__AliasedRequiredCapability__NameAssignment_1 )
            // InternalSimpleBeeLangTestLanguage.g:3851:3: rule__AliasedRequiredCapability__NameAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AliasedRequiredCapability__NameAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAliasedRequiredCapabilityAccess().getNameAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 259, rule__AliasedRequiredCapability__Group__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group__1__Impl"


    // $ANTLR start "rule__AliasedRequiredCapability__Group__2"
    // InternalSimpleBeeLangTestLanguage.g:3859:1: rule__AliasedRequiredCapability__Group__2 : rule__AliasedRequiredCapability__Group__2__Impl rule__AliasedRequiredCapability__Group__3 ;
    public final void rule__AliasedRequiredCapability__Group__2() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 260) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:3863:1: ( rule__AliasedRequiredCapability__Group__2__Impl rule__AliasedRequiredCapability__Group__3 )
            // InternalSimpleBeeLangTestLanguage.g:3864:2: rule__AliasedRequiredCapability__Group__2__Impl rule__AliasedRequiredCapability__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_20);
            rule__AliasedRequiredCapability__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AliasedRequiredCapability__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 260, rule__AliasedRequiredCapability__Group__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group__2"


    // $ANTLR start "rule__AliasedRequiredCapability__Group__2__Impl"
    // InternalSimpleBeeLangTestLanguage.g:3871:1: rule__AliasedRequiredCapability__Group__2__Impl : ( ( rule__AliasedRequiredCapability__Group_2__0 )? ) ;
    public final void rule__AliasedRequiredCapability__Group__2__Impl() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 261) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:3875:1: ( ( ( rule__AliasedRequiredCapability__Group_2__0 )? ) )
            // InternalSimpleBeeLangTestLanguage.g:3876:1: ( ( rule__AliasedRequiredCapability__Group_2__0 )? )
            {
            // InternalSimpleBeeLangTestLanguage.g:3876:1: ( ( rule__AliasedRequiredCapability__Group_2__0 )? )
            // InternalSimpleBeeLangTestLanguage.g:3877:2: ( rule__AliasedRequiredCapability__Group_2__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAliasedRequiredCapabilityAccess().getGroup_2()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:3878:2: ( rule__AliasedRequiredCapability__Group_2__0 )?
            int alt40=2;
            int LA40_0 = input.LA(1);

            if ( (LA40_0==56) ) {
                alt40=1;
            }
            switch (alt40) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:3878:3: rule__AliasedRequiredCapability__Group_2__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__AliasedRequiredCapability__Group_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAliasedRequiredCapabilityAccess().getGroup_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 261, rule__AliasedRequiredCapability__Group__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group__2__Impl"


    // $ANTLR start "rule__AliasedRequiredCapability__Group__3"
    // InternalSimpleBeeLangTestLanguage.g:3886:1: rule__AliasedRequiredCapability__Group__3 : rule__AliasedRequiredCapability__Group__3__Impl ;
    public final void rule__AliasedRequiredCapability__Group__3() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group__3_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 262) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:3890:1: ( rule__AliasedRequiredCapability__Group__3__Impl )
            // InternalSimpleBeeLangTestLanguage.g:3891:2: rule__AliasedRequiredCapability__Group__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AliasedRequiredCapability__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 262, rule__AliasedRequiredCapability__Group__3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group__3"


    // $ANTLR start "rule__AliasedRequiredCapability__Group__3__Impl"
    // InternalSimpleBeeLangTestLanguage.g:3897:1: rule__AliasedRequiredCapability__Group__3__Impl : ( ( rule__AliasedRequiredCapability__Group_3__0 ) ) ;
    public final void rule__AliasedRequiredCapability__Group__3__Impl() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group__3__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 263) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:3901:1: ( ( ( rule__AliasedRequiredCapability__Group_3__0 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:3902:1: ( ( rule__AliasedRequiredCapability__Group_3__0 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:3902:1: ( ( rule__AliasedRequiredCapability__Group_3__0 ) )
            // InternalSimpleBeeLangTestLanguage.g:3903:2: ( rule__AliasedRequiredCapability__Group_3__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAliasedRequiredCapabilityAccess().getGroup_3()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:3904:2: ( rule__AliasedRequiredCapability__Group_3__0 )
            // InternalSimpleBeeLangTestLanguage.g:3904:3: rule__AliasedRequiredCapability__Group_3__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AliasedRequiredCapability__Group_3__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAliasedRequiredCapabilityAccess().getGroup_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 263, rule__AliasedRequiredCapability__Group__3__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group__3__Impl"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_2__0"
    // InternalSimpleBeeLangTestLanguage.g:3913:1: rule__AliasedRequiredCapability__Group_2__0 : rule__AliasedRequiredCapability__Group_2__0__Impl rule__AliasedRequiredCapability__Group_2__1 ;
    public final void rule__AliasedRequiredCapability__Group_2__0() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_2__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 264) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:3917:1: ( rule__AliasedRequiredCapability__Group_2__0__Impl rule__AliasedRequiredCapability__Group_2__1 )
            // InternalSimpleBeeLangTestLanguage.g:3918:2: rule__AliasedRequiredCapability__Group_2__0__Impl rule__AliasedRequiredCapability__Group_2__1
            {
            pushFollow(FollowSets000.FOLLOW_9);
            rule__AliasedRequiredCapability__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AliasedRequiredCapability__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 264, rule__AliasedRequiredCapability__Group_2__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_2__0"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_2__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:3925:1: rule__AliasedRequiredCapability__Group_2__0__Impl : ( 'as' ) ;
    public final void rule__AliasedRequiredCapability__Group_2__0__Impl() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_2__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 265) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:3929:1: ( ( 'as' ) )
            // InternalSimpleBeeLangTestLanguage.g:3930:1: ( 'as' )
            {
            // InternalSimpleBeeLangTestLanguage.g:3930:1: ( 'as' )
            // InternalSimpleBeeLangTestLanguage.g:3931:2: 'as'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAliasedRequiredCapabilityAccess().getAsKeyword_2_0()); 
            }
            match(input,56,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAliasedRequiredCapabilityAccess().getAsKeyword_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 265, rule__AliasedRequiredCapability__Group_2__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_2__0__Impl"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_2__1"
    // InternalSimpleBeeLangTestLanguage.g:3940:1: rule__AliasedRequiredCapability__Group_2__1 : rule__AliasedRequiredCapability__Group_2__1__Impl ;
    public final void rule__AliasedRequiredCapability__Group_2__1() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_2__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 266) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:3944:1: ( rule__AliasedRequiredCapability__Group_2__1__Impl )
            // InternalSimpleBeeLangTestLanguage.g:3945:2: rule__AliasedRequiredCapability__Group_2__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AliasedRequiredCapability__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 266, rule__AliasedRequiredCapability__Group_2__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_2__1"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_2__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:3951:1: rule__AliasedRequiredCapability__Group_2__1__Impl : ( ( rule__AliasedRequiredCapability__AliasAssignment_2_1 ) ) ;
    public final void rule__AliasedRequiredCapability__Group_2__1__Impl() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_2__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 267) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:3955:1: ( ( ( rule__AliasedRequiredCapability__AliasAssignment_2_1 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:3956:1: ( ( rule__AliasedRequiredCapability__AliasAssignment_2_1 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:3956:1: ( ( rule__AliasedRequiredCapability__AliasAssignment_2_1 ) )
            // InternalSimpleBeeLangTestLanguage.g:3957:2: ( rule__AliasedRequiredCapability__AliasAssignment_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAliasedRequiredCapabilityAccess().getAliasAssignment_2_1()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:3958:2: ( rule__AliasedRequiredCapability__AliasAssignment_2_1 )
            // InternalSimpleBeeLangTestLanguage.g:3958:3: rule__AliasedRequiredCapability__AliasAssignment_2_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AliasedRequiredCapability__AliasAssignment_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAliasedRequiredCapabilityAccess().getAliasAssignment_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 267, rule__AliasedRequiredCapability__Group_2__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_2__1__Impl"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3__0"
    // InternalSimpleBeeLangTestLanguage.g:3967:1: rule__AliasedRequiredCapability__Group_3__0 : rule__AliasedRequiredCapability__Group_3__0__Impl rule__AliasedRequiredCapability__Group_3__1 ;
    public final void rule__AliasedRequiredCapability__Group_3__0() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 268) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:3971:1: ( rule__AliasedRequiredCapability__Group_3__0__Impl rule__AliasedRequiredCapability__Group_3__1 )
            // InternalSimpleBeeLangTestLanguage.g:3972:2: rule__AliasedRequiredCapability__Group_3__0__Impl rule__AliasedRequiredCapability__Group_3__1
            {
            pushFollow(FollowSets000.FOLLOW_21);
            rule__AliasedRequiredCapability__Group_3__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AliasedRequiredCapability__Group_3__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 268, rule__AliasedRequiredCapability__Group_3__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3__0"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:3979:1: rule__AliasedRequiredCapability__Group_3__0__Impl : ( '{' ) ;
    public final void rule__AliasedRequiredCapability__Group_3__0__Impl() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 269) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:3983:1: ( ( '{' ) )
            // InternalSimpleBeeLangTestLanguage.g:3984:1: ( '{' )
            {
            // InternalSimpleBeeLangTestLanguage.g:3984:1: ( '{' )
            // InternalSimpleBeeLangTestLanguage.g:3985:2: '{'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAliasedRequiredCapabilityAccess().getLeftCurlyBracketKeyword_3_0()); 
            }
            match(input,44,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAliasedRequiredCapabilityAccess().getLeftCurlyBracketKeyword_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 269, rule__AliasedRequiredCapability__Group_3__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3__0__Impl"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3__1"
    // InternalSimpleBeeLangTestLanguage.g:3994:1: rule__AliasedRequiredCapability__Group_3__1 : rule__AliasedRequiredCapability__Group_3__1__Impl rule__AliasedRequiredCapability__Group_3__2 ;
    public final void rule__AliasedRequiredCapability__Group_3__1() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 270) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:3998:1: ( rule__AliasedRequiredCapability__Group_3__1__Impl rule__AliasedRequiredCapability__Group_3__2 )
            // InternalSimpleBeeLangTestLanguage.g:3999:2: rule__AliasedRequiredCapability__Group_3__1__Impl rule__AliasedRequiredCapability__Group_3__2
            {
            pushFollow(FollowSets000.FOLLOW_8);
            rule__AliasedRequiredCapability__Group_3__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AliasedRequiredCapability__Group_3__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 270, rule__AliasedRequiredCapability__Group_3__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3__1"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:4006:1: rule__AliasedRequiredCapability__Group_3__1__Impl : ( ( rule__AliasedRequiredCapability__UnorderedGroup_3_1 ) ) ;
    public final void rule__AliasedRequiredCapability__Group_3__1__Impl() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 271) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:4010:1: ( ( ( rule__AliasedRequiredCapability__UnorderedGroup_3_1 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:4011:1: ( ( rule__AliasedRequiredCapability__UnorderedGroup_3_1 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:4011:1: ( ( rule__AliasedRequiredCapability__UnorderedGroup_3_1 ) )
            // InternalSimpleBeeLangTestLanguage.g:4012:2: ( rule__AliasedRequiredCapability__UnorderedGroup_3_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:4013:2: ( rule__AliasedRequiredCapability__UnorderedGroup_3_1 )
            // InternalSimpleBeeLangTestLanguage.g:4013:3: rule__AliasedRequiredCapability__UnorderedGroup_3_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AliasedRequiredCapability__UnorderedGroup_3_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 271, rule__AliasedRequiredCapability__Group_3__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3__1__Impl"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3__2"
    // InternalSimpleBeeLangTestLanguage.g:4021:1: rule__AliasedRequiredCapability__Group_3__2 : rule__AliasedRequiredCapability__Group_3__2__Impl ;
    public final void rule__AliasedRequiredCapability__Group_3__2() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 272) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:4025:1: ( rule__AliasedRequiredCapability__Group_3__2__Impl )
            // InternalSimpleBeeLangTestLanguage.g:4026:2: rule__AliasedRequiredCapability__Group_3__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AliasedRequiredCapability__Group_3__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 272, rule__AliasedRequiredCapability__Group_3__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3__2"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3__2__Impl"
    // InternalSimpleBeeLangTestLanguage.g:4032:1: rule__AliasedRequiredCapability__Group_3__2__Impl : ( '}' ) ;
    public final void rule__AliasedRequiredCapability__Group_3__2__Impl() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 273) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:4036:1: ( ( '}' ) )
            // InternalSimpleBeeLangTestLanguage.g:4037:1: ( '}' )
            {
            // InternalSimpleBeeLangTestLanguage.g:4037:1: ( '}' )
            // InternalSimpleBeeLangTestLanguage.g:4038:2: '}'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAliasedRequiredCapabilityAccess().getRightCurlyBracketKeyword_3_2()); 
            }
            match(input,45,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAliasedRequiredCapabilityAccess().getRightCurlyBracketKeyword_3_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 273, rule__AliasedRequiredCapability__Group_3__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3__2__Impl"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3_1_0__0"
    // InternalSimpleBeeLangTestLanguage.g:4048:1: rule__AliasedRequiredCapability__Group_3_1_0__0 : rule__AliasedRequiredCapability__Group_3_1_0__0__Impl rule__AliasedRequiredCapability__Group_3_1_0__1 ;
    public final void rule__AliasedRequiredCapability__Group_3_1_0__0() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3_1_0__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 274) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:4052:1: ( rule__AliasedRequiredCapability__Group_3_1_0__0__Impl rule__AliasedRequiredCapability__Group_3_1_0__1 )
            // InternalSimpleBeeLangTestLanguage.g:4053:2: rule__AliasedRequiredCapability__Group_3_1_0__0__Impl rule__AliasedRequiredCapability__Group_3_1_0__1
            {
            pushFollow(FollowSets000.FOLLOW_12);
            rule__AliasedRequiredCapability__Group_3_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AliasedRequiredCapability__Group_3_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 274, rule__AliasedRequiredCapability__Group_3_1_0__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3_1_0__0"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3_1_0__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:4060:1: rule__AliasedRequiredCapability__Group_3_1_0__0__Impl : ( 'when' ) ;
    public final void rule__AliasedRequiredCapability__Group_3_1_0__0__Impl() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3_1_0__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 275) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:4064:1: ( ( 'when' ) )
            // InternalSimpleBeeLangTestLanguage.g:4065:1: ( 'when' )
            {
            // InternalSimpleBeeLangTestLanguage.g:4065:1: ( 'when' )
            // InternalSimpleBeeLangTestLanguage.g:4066:2: 'when'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAliasedRequiredCapabilityAccess().getWhenKeyword_3_1_0_0()); 
            }
            match(input,54,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAliasedRequiredCapabilityAccess().getWhenKeyword_3_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 275, rule__AliasedRequiredCapability__Group_3_1_0__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3_1_0__0__Impl"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3_1_0__1"
    // InternalSimpleBeeLangTestLanguage.g:4075:1: rule__AliasedRequiredCapability__Group_3_1_0__1 : rule__AliasedRequiredCapability__Group_3_1_0__1__Impl rule__AliasedRequiredCapability__Group_3_1_0__2 ;
    public final void rule__AliasedRequiredCapability__Group_3_1_0__1() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3_1_0__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 276) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:4079:1: ( rule__AliasedRequiredCapability__Group_3_1_0__1__Impl rule__AliasedRequiredCapability__Group_3_1_0__2 )
            // InternalSimpleBeeLangTestLanguage.g:4080:2: rule__AliasedRequiredCapability__Group_3_1_0__1__Impl rule__AliasedRequiredCapability__Group_3_1_0__2
            {
            pushFollow(FollowSets000.FOLLOW_19);
            rule__AliasedRequiredCapability__Group_3_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AliasedRequiredCapability__Group_3_1_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 276, rule__AliasedRequiredCapability__Group_3_1_0__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3_1_0__1"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3_1_0__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:4087:1: rule__AliasedRequiredCapability__Group_3_1_0__1__Impl : ( ':' ) ;
    public final void rule__AliasedRequiredCapability__Group_3_1_0__1__Impl() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3_1_0__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 277) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:4091:1: ( ( ':' ) )
            // InternalSimpleBeeLangTestLanguage.g:4092:1: ( ':' )
            {
            // InternalSimpleBeeLangTestLanguage.g:4092:1: ( ':' )
            // InternalSimpleBeeLangTestLanguage.g:4093:2: ':'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAliasedRequiredCapabilityAccess().getColonKeyword_3_1_0_1()); 
            }
            match(input,49,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAliasedRequiredCapabilityAccess().getColonKeyword_3_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 277, rule__AliasedRequiredCapability__Group_3_1_0__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3_1_0__1__Impl"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3_1_0__2"
    // InternalSimpleBeeLangTestLanguage.g:4102:1: rule__AliasedRequiredCapability__Group_3_1_0__2 : rule__AliasedRequiredCapability__Group_3_1_0__2__Impl rule__AliasedRequiredCapability__Group_3_1_0__3 ;
    public final void rule__AliasedRequiredCapability__Group_3_1_0__2() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3_1_0__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 278) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:4106:1: ( rule__AliasedRequiredCapability__Group_3_1_0__2__Impl rule__AliasedRequiredCapability__Group_3_1_0__3 )
            // InternalSimpleBeeLangTestLanguage.g:4107:2: rule__AliasedRequiredCapability__Group_3_1_0__2__Impl rule__AliasedRequiredCapability__Group_3_1_0__3
            {
            pushFollow(FollowSets000.FOLLOW_14);
            rule__AliasedRequiredCapability__Group_3_1_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AliasedRequiredCapability__Group_3_1_0__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 278, rule__AliasedRequiredCapability__Group_3_1_0__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3_1_0__2"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3_1_0__2__Impl"
    // InternalSimpleBeeLangTestLanguage.g:4114:1: rule__AliasedRequiredCapability__Group_3_1_0__2__Impl : ( ( rule__AliasedRequiredCapability__CondExprAssignment_3_1_0_2 ) ) ;
    public final void rule__AliasedRequiredCapability__Group_3_1_0__2__Impl() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3_1_0__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 279) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:4118:1: ( ( ( rule__AliasedRequiredCapability__CondExprAssignment_3_1_0_2 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:4119:1: ( ( rule__AliasedRequiredCapability__CondExprAssignment_3_1_0_2 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:4119:1: ( ( rule__AliasedRequiredCapability__CondExprAssignment_3_1_0_2 ) )
            // InternalSimpleBeeLangTestLanguage.g:4120:2: ( rule__AliasedRequiredCapability__CondExprAssignment_3_1_0_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAliasedRequiredCapabilityAccess().getCondExprAssignment_3_1_0_2()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:4121:2: ( rule__AliasedRequiredCapability__CondExprAssignment_3_1_0_2 )
            // InternalSimpleBeeLangTestLanguage.g:4121:3: rule__AliasedRequiredCapability__CondExprAssignment_3_1_0_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AliasedRequiredCapability__CondExprAssignment_3_1_0_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAliasedRequiredCapabilityAccess().getCondExprAssignment_3_1_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 279, rule__AliasedRequiredCapability__Group_3_1_0__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3_1_0__2__Impl"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3_1_0__3"
    // InternalSimpleBeeLangTestLanguage.g:4129:1: rule__AliasedRequiredCapability__Group_3_1_0__3 : rule__AliasedRequiredCapability__Group_3_1_0__3__Impl ;
    public final void rule__AliasedRequiredCapability__Group_3_1_0__3() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3_1_0__3_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 280) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:4133:1: ( rule__AliasedRequiredCapability__Group_3_1_0__3__Impl )
            // InternalSimpleBeeLangTestLanguage.g:4134:2: rule__AliasedRequiredCapability__Group_3_1_0__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AliasedRequiredCapability__Group_3_1_0__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 280, rule__AliasedRequiredCapability__Group_3_1_0__3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3_1_0__3"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3_1_0__3__Impl"
    // InternalSimpleBeeLangTestLanguage.g:4140:1: rule__AliasedRequiredCapability__Group_3_1_0__3__Impl : ( ';' ) ;
    public final void rule__AliasedRequiredCapability__Group_3_1_0__3__Impl() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3_1_0__3__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 281) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:4144:1: ( ( ';' ) )
            // InternalSimpleBeeLangTestLanguage.g:4145:1: ( ';' )
            {
            // InternalSimpleBeeLangTestLanguage.g:4145:1: ( ';' )
            // InternalSimpleBeeLangTestLanguage.g:4146:2: ';'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAliasedRequiredCapabilityAccess().getSemicolonKeyword_3_1_0_3()); 
            }
            match(input,50,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAliasedRequiredCapabilityAccess().getSemicolonKeyword_3_1_0_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 281, rule__AliasedRequiredCapability__Group_3_1_0__3__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3_1_0__3__Impl"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3_1_1__0"
    // InternalSimpleBeeLangTestLanguage.g:4156:1: rule__AliasedRequiredCapability__Group_3_1_1__0 : rule__AliasedRequiredCapability__Group_3_1_1__0__Impl rule__AliasedRequiredCapability__Group_3_1_1__1 ;
    public final void rule__AliasedRequiredCapability__Group_3_1_1__0() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3_1_1__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 282) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:4160:1: ( rule__AliasedRequiredCapability__Group_3_1_1__0__Impl rule__AliasedRequiredCapability__Group_3_1_1__1 )
            // InternalSimpleBeeLangTestLanguage.g:4161:2: rule__AliasedRequiredCapability__Group_3_1_1__0__Impl rule__AliasedRequiredCapability__Group_3_1_1__1
            {
            pushFollow(FollowSets000.FOLLOW_14);
            rule__AliasedRequiredCapability__Group_3_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AliasedRequiredCapability__Group_3_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 282, rule__AliasedRequiredCapability__Group_3_1_1__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3_1_1__0"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3_1_1__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:4168:1: rule__AliasedRequiredCapability__Group_3_1_1__0__Impl : ( ( rule__AliasedRequiredCapability__GreedyAssignment_3_1_1_0 ) ) ;
    public final void rule__AliasedRequiredCapability__Group_3_1_1__0__Impl() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3_1_1__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 283) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:4172:1: ( ( ( rule__AliasedRequiredCapability__GreedyAssignment_3_1_1_0 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:4173:1: ( ( rule__AliasedRequiredCapability__GreedyAssignment_3_1_1_0 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:4173:1: ( ( rule__AliasedRequiredCapability__GreedyAssignment_3_1_1_0 ) )
            // InternalSimpleBeeLangTestLanguage.g:4174:2: ( rule__AliasedRequiredCapability__GreedyAssignment_3_1_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAliasedRequiredCapabilityAccess().getGreedyAssignment_3_1_1_0()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:4175:2: ( rule__AliasedRequiredCapability__GreedyAssignment_3_1_1_0 )
            // InternalSimpleBeeLangTestLanguage.g:4175:3: rule__AliasedRequiredCapability__GreedyAssignment_3_1_1_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AliasedRequiredCapability__GreedyAssignment_3_1_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAliasedRequiredCapabilityAccess().getGreedyAssignment_3_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 283, rule__AliasedRequiredCapability__Group_3_1_1__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3_1_1__0__Impl"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3_1_1__1"
    // InternalSimpleBeeLangTestLanguage.g:4183:1: rule__AliasedRequiredCapability__Group_3_1_1__1 : rule__AliasedRequiredCapability__Group_3_1_1__1__Impl ;
    public final void rule__AliasedRequiredCapability__Group_3_1_1__1() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3_1_1__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 284) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:4187:1: ( rule__AliasedRequiredCapability__Group_3_1_1__1__Impl )
            // InternalSimpleBeeLangTestLanguage.g:4188:2: rule__AliasedRequiredCapability__Group_3_1_1__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AliasedRequiredCapability__Group_3_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 284, rule__AliasedRequiredCapability__Group_3_1_1__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3_1_1__1"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3_1_1__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:4194:1: rule__AliasedRequiredCapability__Group_3_1_1__1__Impl : ( ';' ) ;
    public final void rule__AliasedRequiredCapability__Group_3_1_1__1__Impl() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3_1_1__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 285) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:4198:1: ( ( ';' ) )
            // InternalSimpleBeeLangTestLanguage.g:4199:1: ( ';' )
            {
            // InternalSimpleBeeLangTestLanguage.g:4199:1: ( ';' )
            // InternalSimpleBeeLangTestLanguage.g:4200:2: ';'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAliasedRequiredCapabilityAccess().getSemicolonKeyword_3_1_1_1()); 
            }
            match(input,50,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAliasedRequiredCapabilityAccess().getSemicolonKeyword_3_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 285, rule__AliasedRequiredCapability__Group_3_1_1__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3_1_1__1__Impl"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3_1_2__0"
    // InternalSimpleBeeLangTestLanguage.g:4210:1: rule__AliasedRequiredCapability__Group_3_1_2__0 : rule__AliasedRequiredCapability__Group_3_1_2__0__Impl rule__AliasedRequiredCapability__Group_3_1_2__1 ;
    public final void rule__AliasedRequiredCapability__Group_3_1_2__0() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3_1_2__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 286) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:4214:1: ( rule__AliasedRequiredCapability__Group_3_1_2__0__Impl rule__AliasedRequiredCapability__Group_3_1_2__1 )
            // InternalSimpleBeeLangTestLanguage.g:4215:2: rule__AliasedRequiredCapability__Group_3_1_2__0__Impl rule__AliasedRequiredCapability__Group_3_1_2__1
            {
            pushFollow(FollowSets000.FOLLOW_12);
            rule__AliasedRequiredCapability__Group_3_1_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AliasedRequiredCapability__Group_3_1_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 286, rule__AliasedRequiredCapability__Group_3_1_2__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3_1_2__0"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3_1_2__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:4222:1: rule__AliasedRequiredCapability__Group_3_1_2__0__Impl : ( 'requires-min' ) ;
    public final void rule__AliasedRequiredCapability__Group_3_1_2__0__Impl() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3_1_2__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 287) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:4226:1: ( ( 'requires-min' ) )
            // InternalSimpleBeeLangTestLanguage.g:4227:1: ( 'requires-min' )
            {
            // InternalSimpleBeeLangTestLanguage.g:4227:1: ( 'requires-min' )
            // InternalSimpleBeeLangTestLanguage.g:4228:2: 'requires-min'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAliasedRequiredCapabilityAccess().getRequiresMinKeyword_3_1_2_0()); 
            }
            match(input,57,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAliasedRequiredCapabilityAccess().getRequiresMinKeyword_3_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 287, rule__AliasedRequiredCapability__Group_3_1_2__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3_1_2__0__Impl"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3_1_2__1"
    // InternalSimpleBeeLangTestLanguage.g:4237:1: rule__AliasedRequiredCapability__Group_3_1_2__1 : rule__AliasedRequiredCapability__Group_3_1_2__1__Impl rule__AliasedRequiredCapability__Group_3_1_2__2 ;
    public final void rule__AliasedRequiredCapability__Group_3_1_2__1() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3_1_2__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 288) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:4241:1: ( rule__AliasedRequiredCapability__Group_3_1_2__1__Impl rule__AliasedRequiredCapability__Group_3_1_2__2 )
            // InternalSimpleBeeLangTestLanguage.g:4242:2: rule__AliasedRequiredCapability__Group_3_1_2__1__Impl rule__AliasedRequiredCapability__Group_3_1_2__2
            {
            pushFollow(FollowSets000.FOLLOW_22);
            rule__AliasedRequiredCapability__Group_3_1_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AliasedRequiredCapability__Group_3_1_2__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 288, rule__AliasedRequiredCapability__Group_3_1_2__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3_1_2__1"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3_1_2__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:4249:1: rule__AliasedRequiredCapability__Group_3_1_2__1__Impl : ( ':' ) ;
    public final void rule__AliasedRequiredCapability__Group_3_1_2__1__Impl() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3_1_2__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 289) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:4253:1: ( ( ':' ) )
            // InternalSimpleBeeLangTestLanguage.g:4254:1: ( ':' )
            {
            // InternalSimpleBeeLangTestLanguage.g:4254:1: ( ':' )
            // InternalSimpleBeeLangTestLanguage.g:4255:2: ':'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAliasedRequiredCapabilityAccess().getColonKeyword_3_1_2_1()); 
            }
            match(input,49,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAliasedRequiredCapabilityAccess().getColonKeyword_3_1_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 289, rule__AliasedRequiredCapability__Group_3_1_2__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3_1_2__1__Impl"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3_1_2__2"
    // InternalSimpleBeeLangTestLanguage.g:4264:1: rule__AliasedRequiredCapability__Group_3_1_2__2 : rule__AliasedRequiredCapability__Group_3_1_2__2__Impl rule__AliasedRequiredCapability__Group_3_1_2__3 ;
    public final void rule__AliasedRequiredCapability__Group_3_1_2__2() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3_1_2__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 290) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:4268:1: ( rule__AliasedRequiredCapability__Group_3_1_2__2__Impl rule__AliasedRequiredCapability__Group_3_1_2__3 )
            // InternalSimpleBeeLangTestLanguage.g:4269:2: rule__AliasedRequiredCapability__Group_3_1_2__2__Impl rule__AliasedRequiredCapability__Group_3_1_2__3
            {
            pushFollow(FollowSets000.FOLLOW_14);
            rule__AliasedRequiredCapability__Group_3_1_2__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AliasedRequiredCapability__Group_3_1_2__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 290, rule__AliasedRequiredCapability__Group_3_1_2__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3_1_2__2"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3_1_2__2__Impl"
    // InternalSimpleBeeLangTestLanguage.g:4276:1: rule__AliasedRequiredCapability__Group_3_1_2__2__Impl : ( ( rule__AliasedRequiredCapability__MinAssignment_3_1_2_2 ) ) ;
    public final void rule__AliasedRequiredCapability__Group_3_1_2__2__Impl() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3_1_2__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 291) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:4280:1: ( ( ( rule__AliasedRequiredCapability__MinAssignment_3_1_2_2 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:4281:1: ( ( rule__AliasedRequiredCapability__MinAssignment_3_1_2_2 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:4281:1: ( ( rule__AliasedRequiredCapability__MinAssignment_3_1_2_2 ) )
            // InternalSimpleBeeLangTestLanguage.g:4282:2: ( rule__AliasedRequiredCapability__MinAssignment_3_1_2_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAliasedRequiredCapabilityAccess().getMinAssignment_3_1_2_2()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:4283:2: ( rule__AliasedRequiredCapability__MinAssignment_3_1_2_2 )
            // InternalSimpleBeeLangTestLanguage.g:4283:3: rule__AliasedRequiredCapability__MinAssignment_3_1_2_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AliasedRequiredCapability__MinAssignment_3_1_2_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAliasedRequiredCapabilityAccess().getMinAssignment_3_1_2_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 291, rule__AliasedRequiredCapability__Group_3_1_2__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3_1_2__2__Impl"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3_1_2__3"
    // InternalSimpleBeeLangTestLanguage.g:4291:1: rule__AliasedRequiredCapability__Group_3_1_2__3 : rule__AliasedRequiredCapability__Group_3_1_2__3__Impl ;
    public final void rule__AliasedRequiredCapability__Group_3_1_2__3() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3_1_2__3_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 292) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:4295:1: ( rule__AliasedRequiredCapability__Group_3_1_2__3__Impl )
            // InternalSimpleBeeLangTestLanguage.g:4296:2: rule__AliasedRequiredCapability__Group_3_1_2__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AliasedRequiredCapability__Group_3_1_2__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 292, rule__AliasedRequiredCapability__Group_3_1_2__3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3_1_2__3"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3_1_2__3__Impl"
    // InternalSimpleBeeLangTestLanguage.g:4302:1: rule__AliasedRequiredCapability__Group_3_1_2__3__Impl : ( ';' ) ;
    public final void rule__AliasedRequiredCapability__Group_3_1_2__3__Impl() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3_1_2__3__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 293) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:4306:1: ( ( ';' ) )
            // InternalSimpleBeeLangTestLanguage.g:4307:1: ( ';' )
            {
            // InternalSimpleBeeLangTestLanguage.g:4307:1: ( ';' )
            // InternalSimpleBeeLangTestLanguage.g:4308:2: ';'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAliasedRequiredCapabilityAccess().getSemicolonKeyword_3_1_2_3()); 
            }
            match(input,50,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAliasedRequiredCapabilityAccess().getSemicolonKeyword_3_1_2_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 293, rule__AliasedRequiredCapability__Group_3_1_2__3__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3_1_2__3__Impl"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3_1_3__0"
    // InternalSimpleBeeLangTestLanguage.g:4318:1: rule__AliasedRequiredCapability__Group_3_1_3__0 : rule__AliasedRequiredCapability__Group_3_1_3__0__Impl rule__AliasedRequiredCapability__Group_3_1_3__1 ;
    public final void rule__AliasedRequiredCapability__Group_3_1_3__0() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3_1_3__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 294) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:4322:1: ( rule__AliasedRequiredCapability__Group_3_1_3__0__Impl rule__AliasedRequiredCapability__Group_3_1_3__1 )
            // InternalSimpleBeeLangTestLanguage.g:4323:2: rule__AliasedRequiredCapability__Group_3_1_3__0__Impl rule__AliasedRequiredCapability__Group_3_1_3__1
            {
            pushFollow(FollowSets000.FOLLOW_12);
            rule__AliasedRequiredCapability__Group_3_1_3__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AliasedRequiredCapability__Group_3_1_3__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 294, rule__AliasedRequiredCapability__Group_3_1_3__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3_1_3__0"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3_1_3__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:4330:1: rule__AliasedRequiredCapability__Group_3_1_3__0__Impl : ( 'requires-max' ) ;
    public final void rule__AliasedRequiredCapability__Group_3_1_3__0__Impl() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3_1_3__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 295) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:4334:1: ( ( 'requires-max' ) )
            // InternalSimpleBeeLangTestLanguage.g:4335:1: ( 'requires-max' )
            {
            // InternalSimpleBeeLangTestLanguage.g:4335:1: ( 'requires-max' )
            // InternalSimpleBeeLangTestLanguage.g:4336:2: 'requires-max'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAliasedRequiredCapabilityAccess().getRequiresMaxKeyword_3_1_3_0()); 
            }
            match(input,58,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAliasedRequiredCapabilityAccess().getRequiresMaxKeyword_3_1_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 295, rule__AliasedRequiredCapability__Group_3_1_3__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3_1_3__0__Impl"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3_1_3__1"
    // InternalSimpleBeeLangTestLanguage.g:4345:1: rule__AliasedRequiredCapability__Group_3_1_3__1 : rule__AliasedRequiredCapability__Group_3_1_3__1__Impl rule__AliasedRequiredCapability__Group_3_1_3__2 ;
    public final void rule__AliasedRequiredCapability__Group_3_1_3__1() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3_1_3__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 296) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:4349:1: ( rule__AliasedRequiredCapability__Group_3_1_3__1__Impl rule__AliasedRequiredCapability__Group_3_1_3__2 )
            // InternalSimpleBeeLangTestLanguage.g:4350:2: rule__AliasedRequiredCapability__Group_3_1_3__1__Impl rule__AliasedRequiredCapability__Group_3_1_3__2
            {
            pushFollow(FollowSets000.FOLLOW_22);
            rule__AliasedRequiredCapability__Group_3_1_3__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AliasedRequiredCapability__Group_3_1_3__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 296, rule__AliasedRequiredCapability__Group_3_1_3__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3_1_3__1"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3_1_3__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:4357:1: rule__AliasedRequiredCapability__Group_3_1_3__1__Impl : ( ':' ) ;
    public final void rule__AliasedRequiredCapability__Group_3_1_3__1__Impl() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3_1_3__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 297) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:4361:1: ( ( ':' ) )
            // InternalSimpleBeeLangTestLanguage.g:4362:1: ( ':' )
            {
            // InternalSimpleBeeLangTestLanguage.g:4362:1: ( ':' )
            // InternalSimpleBeeLangTestLanguage.g:4363:2: ':'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAliasedRequiredCapabilityAccess().getColonKeyword_3_1_3_1()); 
            }
            match(input,49,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAliasedRequiredCapabilityAccess().getColonKeyword_3_1_3_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 297, rule__AliasedRequiredCapability__Group_3_1_3__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3_1_3__1__Impl"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3_1_3__2"
    // InternalSimpleBeeLangTestLanguage.g:4372:1: rule__AliasedRequiredCapability__Group_3_1_3__2 : rule__AliasedRequiredCapability__Group_3_1_3__2__Impl rule__AliasedRequiredCapability__Group_3_1_3__3 ;
    public final void rule__AliasedRequiredCapability__Group_3_1_3__2() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3_1_3__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 298) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:4376:1: ( rule__AliasedRequiredCapability__Group_3_1_3__2__Impl rule__AliasedRequiredCapability__Group_3_1_3__3 )
            // InternalSimpleBeeLangTestLanguage.g:4377:2: rule__AliasedRequiredCapability__Group_3_1_3__2__Impl rule__AliasedRequiredCapability__Group_3_1_3__3
            {
            pushFollow(FollowSets000.FOLLOW_14);
            rule__AliasedRequiredCapability__Group_3_1_3__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AliasedRequiredCapability__Group_3_1_3__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 298, rule__AliasedRequiredCapability__Group_3_1_3__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3_1_3__2"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3_1_3__2__Impl"
    // InternalSimpleBeeLangTestLanguage.g:4384:1: rule__AliasedRequiredCapability__Group_3_1_3__2__Impl : ( ( rule__AliasedRequiredCapability__MaxAssignment_3_1_3_2 ) ) ;
    public final void rule__AliasedRequiredCapability__Group_3_1_3__2__Impl() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3_1_3__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 299) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:4388:1: ( ( ( rule__AliasedRequiredCapability__MaxAssignment_3_1_3_2 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:4389:1: ( ( rule__AliasedRequiredCapability__MaxAssignment_3_1_3_2 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:4389:1: ( ( rule__AliasedRequiredCapability__MaxAssignment_3_1_3_2 ) )
            // InternalSimpleBeeLangTestLanguage.g:4390:2: ( rule__AliasedRequiredCapability__MaxAssignment_3_1_3_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAliasedRequiredCapabilityAccess().getMaxAssignment_3_1_3_2()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:4391:2: ( rule__AliasedRequiredCapability__MaxAssignment_3_1_3_2 )
            // InternalSimpleBeeLangTestLanguage.g:4391:3: rule__AliasedRequiredCapability__MaxAssignment_3_1_3_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AliasedRequiredCapability__MaxAssignment_3_1_3_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAliasedRequiredCapabilityAccess().getMaxAssignment_3_1_3_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 299, rule__AliasedRequiredCapability__Group_3_1_3__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3_1_3__2__Impl"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3_1_3__3"
    // InternalSimpleBeeLangTestLanguage.g:4399:1: rule__AliasedRequiredCapability__Group_3_1_3__3 : rule__AliasedRequiredCapability__Group_3_1_3__3__Impl ;
    public final void rule__AliasedRequiredCapability__Group_3_1_3__3() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3_1_3__3_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 300) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:4403:1: ( rule__AliasedRequiredCapability__Group_3_1_3__3__Impl )
            // InternalSimpleBeeLangTestLanguage.g:4404:2: rule__AliasedRequiredCapability__Group_3_1_3__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AliasedRequiredCapability__Group_3_1_3__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 300, rule__AliasedRequiredCapability__Group_3_1_3__3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3_1_3__3"

}

@SuppressWarnings("all")
abstract class InternalSimpleBeeLangTestLanguageParser5 extends InternalSimpleBeeLangTestLanguageParser4 {

        InternalSimpleBeeLangTestLanguageParser5(TokenStream input) {
            this(input, new RecognizerSharedState());
        }

        InternalSimpleBeeLangTestLanguageParser5(TokenStream input, RecognizerSharedState state) {
            super(input, state);
        }

    // $ANTLR start "rule__AliasedRequiredCapability__Group_3_1_3__3__Impl"
    // InternalSimpleBeeLangTestLanguage.g:4410:1: rule__AliasedRequiredCapability__Group_3_1_3__3__Impl : ( ';' ) ;
    public final void rule__AliasedRequiredCapability__Group_3_1_3__3__Impl() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3_1_3__3__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 301) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:4414:1: ( ( ';' ) )
            // InternalSimpleBeeLangTestLanguage.g:4415:1: ( ';' )
            {
            // InternalSimpleBeeLangTestLanguage.g:4415:1: ( ';' )
            // InternalSimpleBeeLangTestLanguage.g:4416:2: ';'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAliasedRequiredCapabilityAccess().getSemicolonKeyword_3_1_3_3()); 
            }
            match(input,50,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAliasedRequiredCapabilityAccess().getSemicolonKeyword_3_1_3_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 301, rule__AliasedRequiredCapability__Group_3_1_3__3__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3_1_3__3__Impl"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3_1_4__0"
    // InternalSimpleBeeLangTestLanguage.g:4426:1: rule__AliasedRequiredCapability__Group_3_1_4__0 : rule__AliasedRequiredCapability__Group_3_1_4__0__Impl rule__AliasedRequiredCapability__Group_3_1_4__1 ;
    public final void rule__AliasedRequiredCapability__Group_3_1_4__0() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3_1_4__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 302) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:4430:1: ( rule__AliasedRequiredCapability__Group_3_1_4__0__Impl rule__AliasedRequiredCapability__Group_3_1_4__1 )
            // InternalSimpleBeeLangTestLanguage.g:4431:2: rule__AliasedRequiredCapability__Group_3_1_4__0__Impl rule__AliasedRequiredCapability__Group_3_1_4__1
            {
            pushFollow(FollowSets000.FOLLOW_12);
            rule__AliasedRequiredCapability__Group_3_1_4__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AliasedRequiredCapability__Group_3_1_4__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 302, rule__AliasedRequiredCapability__Group_3_1_4__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3_1_4__0"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3_1_4__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:4438:1: rule__AliasedRequiredCapability__Group_3_1_4__0__Impl : ( 'version' ) ;
    public final void rule__AliasedRequiredCapability__Group_3_1_4__0__Impl() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3_1_4__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 303) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:4442:1: ( ( 'version' ) )
            // InternalSimpleBeeLangTestLanguage.g:4443:1: ( 'version' )
            {
            // InternalSimpleBeeLangTestLanguage.g:4443:1: ( 'version' )
            // InternalSimpleBeeLangTestLanguage.g:4444:2: 'version'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAliasedRequiredCapabilityAccess().getVersionKeyword_3_1_4_0()); 
            }
            match(input,46,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAliasedRequiredCapabilityAccess().getVersionKeyword_3_1_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 303, rule__AliasedRequiredCapability__Group_3_1_4__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3_1_4__0__Impl"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3_1_4__1"
    // InternalSimpleBeeLangTestLanguage.g:4453:1: rule__AliasedRequiredCapability__Group_3_1_4__1 : rule__AliasedRequiredCapability__Group_3_1_4__1__Impl rule__AliasedRequiredCapability__Group_3_1_4__2 ;
    public final void rule__AliasedRequiredCapability__Group_3_1_4__1() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3_1_4__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 304) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:4457:1: ( rule__AliasedRequiredCapability__Group_3_1_4__1__Impl rule__AliasedRequiredCapability__Group_3_1_4__2 )
            // InternalSimpleBeeLangTestLanguage.g:4458:2: rule__AliasedRequiredCapability__Group_3_1_4__1__Impl rule__AliasedRequiredCapability__Group_3_1_4__2
            {
            pushFollow(FollowSets000.FOLLOW_9);
            rule__AliasedRequiredCapability__Group_3_1_4__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AliasedRequiredCapability__Group_3_1_4__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 304, rule__AliasedRequiredCapability__Group_3_1_4__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3_1_4__1"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3_1_4__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:4465:1: rule__AliasedRequiredCapability__Group_3_1_4__1__Impl : ( ':' ) ;
    public final void rule__AliasedRequiredCapability__Group_3_1_4__1__Impl() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3_1_4__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 305) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:4469:1: ( ( ':' ) )
            // InternalSimpleBeeLangTestLanguage.g:4470:1: ( ':' )
            {
            // InternalSimpleBeeLangTestLanguage.g:4470:1: ( ':' )
            // InternalSimpleBeeLangTestLanguage.g:4471:2: ':'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAliasedRequiredCapabilityAccess().getColonKeyword_3_1_4_1()); 
            }
            match(input,49,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAliasedRequiredCapabilityAccess().getColonKeyword_3_1_4_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 305, rule__AliasedRequiredCapability__Group_3_1_4__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3_1_4__1__Impl"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3_1_4__2"
    // InternalSimpleBeeLangTestLanguage.g:4480:1: rule__AliasedRequiredCapability__Group_3_1_4__2 : rule__AliasedRequiredCapability__Group_3_1_4__2__Impl rule__AliasedRequiredCapability__Group_3_1_4__3 ;
    public final void rule__AliasedRequiredCapability__Group_3_1_4__2() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3_1_4__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 306) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:4484:1: ( rule__AliasedRequiredCapability__Group_3_1_4__2__Impl rule__AliasedRequiredCapability__Group_3_1_4__3 )
            // InternalSimpleBeeLangTestLanguage.g:4485:2: rule__AliasedRequiredCapability__Group_3_1_4__2__Impl rule__AliasedRequiredCapability__Group_3_1_4__3
            {
            pushFollow(FollowSets000.FOLLOW_14);
            rule__AliasedRequiredCapability__Group_3_1_4__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AliasedRequiredCapability__Group_3_1_4__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 306, rule__AliasedRequiredCapability__Group_3_1_4__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3_1_4__2"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3_1_4__2__Impl"
    // InternalSimpleBeeLangTestLanguage.g:4492:1: rule__AliasedRequiredCapability__Group_3_1_4__2__Impl : ( ( rule__AliasedRequiredCapability__VersionRangeAssignment_3_1_4_2 ) ) ;
    public final void rule__AliasedRequiredCapability__Group_3_1_4__2__Impl() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3_1_4__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 307) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:4496:1: ( ( ( rule__AliasedRequiredCapability__VersionRangeAssignment_3_1_4_2 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:4497:1: ( ( rule__AliasedRequiredCapability__VersionRangeAssignment_3_1_4_2 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:4497:1: ( ( rule__AliasedRequiredCapability__VersionRangeAssignment_3_1_4_2 ) )
            // InternalSimpleBeeLangTestLanguage.g:4498:2: ( rule__AliasedRequiredCapability__VersionRangeAssignment_3_1_4_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAliasedRequiredCapabilityAccess().getVersionRangeAssignment_3_1_4_2()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:4499:2: ( rule__AliasedRequiredCapability__VersionRangeAssignment_3_1_4_2 )
            // InternalSimpleBeeLangTestLanguage.g:4499:3: rule__AliasedRequiredCapability__VersionRangeAssignment_3_1_4_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AliasedRequiredCapability__VersionRangeAssignment_3_1_4_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAliasedRequiredCapabilityAccess().getVersionRangeAssignment_3_1_4_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 307, rule__AliasedRequiredCapability__Group_3_1_4__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3_1_4__2__Impl"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3_1_4__3"
    // InternalSimpleBeeLangTestLanguage.g:4507:1: rule__AliasedRequiredCapability__Group_3_1_4__3 : rule__AliasedRequiredCapability__Group_3_1_4__3__Impl ;
    public final void rule__AliasedRequiredCapability__Group_3_1_4__3() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3_1_4__3_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 308) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:4511:1: ( rule__AliasedRequiredCapability__Group_3_1_4__3__Impl )
            // InternalSimpleBeeLangTestLanguage.g:4512:2: rule__AliasedRequiredCapability__Group_3_1_4__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AliasedRequiredCapability__Group_3_1_4__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 308, rule__AliasedRequiredCapability__Group_3_1_4__3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3_1_4__3"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3_1_4__3__Impl"
    // InternalSimpleBeeLangTestLanguage.g:4518:1: rule__AliasedRequiredCapability__Group_3_1_4__3__Impl : ( ';' ) ;
    public final void rule__AliasedRequiredCapability__Group_3_1_4__3__Impl() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3_1_4__3__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 309) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:4522:1: ( ( ';' ) )
            // InternalSimpleBeeLangTestLanguage.g:4523:1: ( ';' )
            {
            // InternalSimpleBeeLangTestLanguage.g:4523:1: ( ';' )
            // InternalSimpleBeeLangTestLanguage.g:4524:2: ';'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAliasedRequiredCapabilityAccess().getSemicolonKeyword_3_1_4_3()); 
            }
            match(input,50,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAliasedRequiredCapabilityAccess().getSemicolonKeyword_3_1_4_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 309, rule__AliasedRequiredCapability__Group_3_1_4__3__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3_1_4__3__Impl"


    // $ANTLR start "rule__RequiredCapability__Group__0"
    // InternalSimpleBeeLangTestLanguage.g:4534:1: rule__RequiredCapability__Group__0 : rule__RequiredCapability__Group__0__Impl rule__RequiredCapability__Group__1 ;
    public final void rule__RequiredCapability__Group__0() throws RecognitionException {
        int rule__RequiredCapability__Group__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 310) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:4538:1: ( rule__RequiredCapability__Group__0__Impl rule__RequiredCapability__Group__1 )
            // InternalSimpleBeeLangTestLanguage.g:4539:2: rule__RequiredCapability__Group__0__Impl rule__RequiredCapability__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_15);
            rule__RequiredCapability__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RequiredCapability__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 310, rule__RequiredCapability__Group__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group__0"


    // $ANTLR start "rule__RequiredCapability__Group__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:4546:1: rule__RequiredCapability__Group__0__Impl : ( () ) ;
    public final void rule__RequiredCapability__Group__0__Impl() throws RecognitionException {
        int rule__RequiredCapability__Group__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 311) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:4550:1: ( ( () ) )
            // InternalSimpleBeeLangTestLanguage.g:4551:1: ( () )
            {
            // InternalSimpleBeeLangTestLanguage.g:4551:1: ( () )
            // InternalSimpleBeeLangTestLanguage.g:4552:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRequiredCapabilityAccess().getRequiredCapabilityAction_0()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:4553:2: ()
            // InternalSimpleBeeLangTestLanguage.g:4553:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRequiredCapabilityAccess().getRequiredCapabilityAction_0()); 
            }

            }


            }

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 311, rule__RequiredCapability__Group__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group__0__Impl"


    // $ANTLR start "rule__RequiredCapability__Group__1"
    // InternalSimpleBeeLangTestLanguage.g:4561:1: rule__RequiredCapability__Group__1 : rule__RequiredCapability__Group__1__Impl rule__RequiredCapability__Group__2 ;
    public final void rule__RequiredCapability__Group__1() throws RecognitionException {
        int rule__RequiredCapability__Group__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 312) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:4565:1: ( rule__RequiredCapability__Group__1__Impl rule__RequiredCapability__Group__2 )
            // InternalSimpleBeeLangTestLanguage.g:4566:2: rule__RequiredCapability__Group__1__Impl rule__RequiredCapability__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_9);
            rule__RequiredCapability__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RequiredCapability__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 312, rule__RequiredCapability__Group__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group__1"


    // $ANTLR start "rule__RequiredCapability__Group__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:4573:1: rule__RequiredCapability__Group__1__Impl : ( ( rule__RequiredCapability__Alternatives_1 ) ) ;
    public final void rule__RequiredCapability__Group__1__Impl() throws RecognitionException {
        int rule__RequiredCapability__Group__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 313) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:4577:1: ( ( ( rule__RequiredCapability__Alternatives_1 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:4578:1: ( ( rule__RequiredCapability__Alternatives_1 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:4578:1: ( ( rule__RequiredCapability__Alternatives_1 ) )
            // InternalSimpleBeeLangTestLanguage.g:4579:2: ( rule__RequiredCapability__Alternatives_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRequiredCapabilityAccess().getAlternatives_1()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:4580:2: ( rule__RequiredCapability__Alternatives_1 )
            // InternalSimpleBeeLangTestLanguage.g:4580:3: rule__RequiredCapability__Alternatives_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RequiredCapability__Alternatives_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRequiredCapabilityAccess().getAlternatives_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 313, rule__RequiredCapability__Group__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group__1__Impl"


    // $ANTLR start "rule__RequiredCapability__Group__2"
    // InternalSimpleBeeLangTestLanguage.g:4588:1: rule__RequiredCapability__Group__2 : rule__RequiredCapability__Group__2__Impl rule__RequiredCapability__Group__3 ;
    public final void rule__RequiredCapability__Group__2() throws RecognitionException {
        int rule__RequiredCapability__Group__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 314) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:4592:1: ( rule__RequiredCapability__Group__2__Impl rule__RequiredCapability__Group__3 )
            // InternalSimpleBeeLangTestLanguage.g:4593:2: rule__RequiredCapability__Group__2__Impl rule__RequiredCapability__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_17);
            rule__RequiredCapability__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RequiredCapability__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 314, rule__RequiredCapability__Group__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group__2"


    // $ANTLR start "rule__RequiredCapability__Group__2__Impl"
    // InternalSimpleBeeLangTestLanguage.g:4600:1: rule__RequiredCapability__Group__2__Impl : ( ( rule__RequiredCapability__NameAssignment_2 ) ) ;
    public final void rule__RequiredCapability__Group__2__Impl() throws RecognitionException {
        int rule__RequiredCapability__Group__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 315) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:4604:1: ( ( ( rule__RequiredCapability__NameAssignment_2 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:4605:1: ( ( rule__RequiredCapability__NameAssignment_2 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:4605:1: ( ( rule__RequiredCapability__NameAssignment_2 ) )
            // InternalSimpleBeeLangTestLanguage.g:4606:2: ( rule__RequiredCapability__NameAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRequiredCapabilityAccess().getNameAssignment_2()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:4607:2: ( rule__RequiredCapability__NameAssignment_2 )
            // InternalSimpleBeeLangTestLanguage.g:4607:3: rule__RequiredCapability__NameAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RequiredCapability__NameAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRequiredCapabilityAccess().getNameAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 315, rule__RequiredCapability__Group__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group__2__Impl"


    // $ANTLR start "rule__RequiredCapability__Group__3"
    // InternalSimpleBeeLangTestLanguage.g:4615:1: rule__RequiredCapability__Group__3 : rule__RequiredCapability__Group__3__Impl ;
    public final void rule__RequiredCapability__Group__3() throws RecognitionException {
        int rule__RequiredCapability__Group__3_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 316) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:4619:1: ( rule__RequiredCapability__Group__3__Impl )
            // InternalSimpleBeeLangTestLanguage.g:4620:2: rule__RequiredCapability__Group__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RequiredCapability__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 316, rule__RequiredCapability__Group__3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group__3"


    // $ANTLR start "rule__RequiredCapability__Group__3__Impl"
    // InternalSimpleBeeLangTestLanguage.g:4626:1: rule__RequiredCapability__Group__3__Impl : ( ( rule__RequiredCapability__Group_3__0 ) ) ;
    public final void rule__RequiredCapability__Group__3__Impl() throws RecognitionException {
        int rule__RequiredCapability__Group__3__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 317) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:4630:1: ( ( ( rule__RequiredCapability__Group_3__0 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:4631:1: ( ( rule__RequiredCapability__Group_3__0 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:4631:1: ( ( rule__RequiredCapability__Group_3__0 ) )
            // InternalSimpleBeeLangTestLanguage.g:4632:2: ( rule__RequiredCapability__Group_3__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRequiredCapabilityAccess().getGroup_3()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:4633:2: ( rule__RequiredCapability__Group_3__0 )
            // InternalSimpleBeeLangTestLanguage.g:4633:3: rule__RequiredCapability__Group_3__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RequiredCapability__Group_3__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRequiredCapabilityAccess().getGroup_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 317, rule__RequiredCapability__Group__3__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group__3__Impl"


    // $ANTLR start "rule__RequiredCapability__Group_3__0"
    // InternalSimpleBeeLangTestLanguage.g:4642:1: rule__RequiredCapability__Group_3__0 : rule__RequiredCapability__Group_3__0__Impl rule__RequiredCapability__Group_3__1 ;
    public final void rule__RequiredCapability__Group_3__0() throws RecognitionException {
        int rule__RequiredCapability__Group_3__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 318) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:4646:1: ( rule__RequiredCapability__Group_3__0__Impl rule__RequiredCapability__Group_3__1 )
            // InternalSimpleBeeLangTestLanguage.g:4647:2: rule__RequiredCapability__Group_3__0__Impl rule__RequiredCapability__Group_3__1
            {
            pushFollow(FollowSets000.FOLLOW_21);
            rule__RequiredCapability__Group_3__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RequiredCapability__Group_3__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 318, rule__RequiredCapability__Group_3__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3__0"


    // $ANTLR start "rule__RequiredCapability__Group_3__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:4654:1: rule__RequiredCapability__Group_3__0__Impl : ( '{' ) ;
    public final void rule__RequiredCapability__Group_3__0__Impl() throws RecognitionException {
        int rule__RequiredCapability__Group_3__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 319) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:4658:1: ( ( '{' ) )
            // InternalSimpleBeeLangTestLanguage.g:4659:1: ( '{' )
            {
            // InternalSimpleBeeLangTestLanguage.g:4659:1: ( '{' )
            // InternalSimpleBeeLangTestLanguage.g:4660:2: '{'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRequiredCapabilityAccess().getLeftCurlyBracketKeyword_3_0()); 
            }
            match(input,44,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRequiredCapabilityAccess().getLeftCurlyBracketKeyword_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 319, rule__RequiredCapability__Group_3__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3__0__Impl"


    // $ANTLR start "rule__RequiredCapability__Group_3__1"
    // InternalSimpleBeeLangTestLanguage.g:4669:1: rule__RequiredCapability__Group_3__1 : rule__RequiredCapability__Group_3__1__Impl rule__RequiredCapability__Group_3__2 ;
    public final void rule__RequiredCapability__Group_3__1() throws RecognitionException {
        int rule__RequiredCapability__Group_3__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 320) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:4673:1: ( rule__RequiredCapability__Group_3__1__Impl rule__RequiredCapability__Group_3__2 )
            // InternalSimpleBeeLangTestLanguage.g:4674:2: rule__RequiredCapability__Group_3__1__Impl rule__RequiredCapability__Group_3__2
            {
            pushFollow(FollowSets000.FOLLOW_8);
            rule__RequiredCapability__Group_3__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RequiredCapability__Group_3__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 320, rule__RequiredCapability__Group_3__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3__1"


    // $ANTLR start "rule__RequiredCapability__Group_3__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:4681:1: rule__RequiredCapability__Group_3__1__Impl : ( ( rule__RequiredCapability__UnorderedGroup_3_1 ) ) ;
    public final void rule__RequiredCapability__Group_3__1__Impl() throws RecognitionException {
        int rule__RequiredCapability__Group_3__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 321) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:4685:1: ( ( ( rule__RequiredCapability__UnorderedGroup_3_1 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:4686:1: ( ( rule__RequiredCapability__UnorderedGroup_3_1 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:4686:1: ( ( rule__RequiredCapability__UnorderedGroup_3_1 ) )
            // InternalSimpleBeeLangTestLanguage.g:4687:2: ( rule__RequiredCapability__UnorderedGroup_3_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:4688:2: ( rule__RequiredCapability__UnorderedGroup_3_1 )
            // InternalSimpleBeeLangTestLanguage.g:4688:3: rule__RequiredCapability__UnorderedGroup_3_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RequiredCapability__UnorderedGroup_3_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 321, rule__RequiredCapability__Group_3__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3__1__Impl"


    // $ANTLR start "rule__RequiredCapability__Group_3__2"
    // InternalSimpleBeeLangTestLanguage.g:4696:1: rule__RequiredCapability__Group_3__2 : rule__RequiredCapability__Group_3__2__Impl ;
    public final void rule__RequiredCapability__Group_3__2() throws RecognitionException {
        int rule__RequiredCapability__Group_3__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 322) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:4700:1: ( rule__RequiredCapability__Group_3__2__Impl )
            // InternalSimpleBeeLangTestLanguage.g:4701:2: rule__RequiredCapability__Group_3__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RequiredCapability__Group_3__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 322, rule__RequiredCapability__Group_3__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3__2"


    // $ANTLR start "rule__RequiredCapability__Group_3__2__Impl"
    // InternalSimpleBeeLangTestLanguage.g:4707:1: rule__RequiredCapability__Group_3__2__Impl : ( '}' ) ;
    public final void rule__RequiredCapability__Group_3__2__Impl() throws RecognitionException {
        int rule__RequiredCapability__Group_3__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 323) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:4711:1: ( ( '}' ) )
            // InternalSimpleBeeLangTestLanguage.g:4712:1: ( '}' )
            {
            // InternalSimpleBeeLangTestLanguage.g:4712:1: ( '}' )
            // InternalSimpleBeeLangTestLanguage.g:4713:2: '}'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRequiredCapabilityAccess().getRightCurlyBracketKeyword_3_2()); 
            }
            match(input,45,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRequiredCapabilityAccess().getRightCurlyBracketKeyword_3_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 323, rule__RequiredCapability__Group_3__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3__2__Impl"


    // $ANTLR start "rule__RequiredCapability__Group_3_1_0__0"
    // InternalSimpleBeeLangTestLanguage.g:4723:1: rule__RequiredCapability__Group_3_1_0__0 : rule__RequiredCapability__Group_3_1_0__0__Impl rule__RequiredCapability__Group_3_1_0__1 ;
    public final void rule__RequiredCapability__Group_3_1_0__0() throws RecognitionException {
        int rule__RequiredCapability__Group_3_1_0__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 324) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:4727:1: ( rule__RequiredCapability__Group_3_1_0__0__Impl rule__RequiredCapability__Group_3_1_0__1 )
            // InternalSimpleBeeLangTestLanguage.g:4728:2: rule__RequiredCapability__Group_3_1_0__0__Impl rule__RequiredCapability__Group_3_1_0__1
            {
            pushFollow(FollowSets000.FOLLOW_12);
            rule__RequiredCapability__Group_3_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RequiredCapability__Group_3_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 324, rule__RequiredCapability__Group_3_1_0__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3_1_0__0"


    // $ANTLR start "rule__RequiredCapability__Group_3_1_0__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:4735:1: rule__RequiredCapability__Group_3_1_0__0__Impl : ( 'when' ) ;
    public final void rule__RequiredCapability__Group_3_1_0__0__Impl() throws RecognitionException {
        int rule__RequiredCapability__Group_3_1_0__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 325) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:4739:1: ( ( 'when' ) )
            // InternalSimpleBeeLangTestLanguage.g:4740:1: ( 'when' )
            {
            // InternalSimpleBeeLangTestLanguage.g:4740:1: ( 'when' )
            // InternalSimpleBeeLangTestLanguage.g:4741:2: 'when'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRequiredCapabilityAccess().getWhenKeyword_3_1_0_0()); 
            }
            match(input,54,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRequiredCapabilityAccess().getWhenKeyword_3_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 325, rule__RequiredCapability__Group_3_1_0__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3_1_0__0__Impl"


    // $ANTLR start "rule__RequiredCapability__Group_3_1_0__1"
    // InternalSimpleBeeLangTestLanguage.g:4750:1: rule__RequiredCapability__Group_3_1_0__1 : rule__RequiredCapability__Group_3_1_0__1__Impl rule__RequiredCapability__Group_3_1_0__2 ;
    public final void rule__RequiredCapability__Group_3_1_0__1() throws RecognitionException {
        int rule__RequiredCapability__Group_3_1_0__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 326) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:4754:1: ( rule__RequiredCapability__Group_3_1_0__1__Impl rule__RequiredCapability__Group_3_1_0__2 )
            // InternalSimpleBeeLangTestLanguage.g:4755:2: rule__RequiredCapability__Group_3_1_0__1__Impl rule__RequiredCapability__Group_3_1_0__2
            {
            pushFollow(FollowSets000.FOLLOW_19);
            rule__RequiredCapability__Group_3_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RequiredCapability__Group_3_1_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 326, rule__RequiredCapability__Group_3_1_0__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3_1_0__1"


    // $ANTLR start "rule__RequiredCapability__Group_3_1_0__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:4762:1: rule__RequiredCapability__Group_3_1_0__1__Impl : ( ':' ) ;
    public final void rule__RequiredCapability__Group_3_1_0__1__Impl() throws RecognitionException {
        int rule__RequiredCapability__Group_3_1_0__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 327) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:4766:1: ( ( ':' ) )
            // InternalSimpleBeeLangTestLanguage.g:4767:1: ( ':' )
            {
            // InternalSimpleBeeLangTestLanguage.g:4767:1: ( ':' )
            // InternalSimpleBeeLangTestLanguage.g:4768:2: ':'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRequiredCapabilityAccess().getColonKeyword_3_1_0_1()); 
            }
            match(input,49,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRequiredCapabilityAccess().getColonKeyword_3_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 327, rule__RequiredCapability__Group_3_1_0__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3_1_0__1__Impl"


    // $ANTLR start "rule__RequiredCapability__Group_3_1_0__2"
    // InternalSimpleBeeLangTestLanguage.g:4777:1: rule__RequiredCapability__Group_3_1_0__2 : rule__RequiredCapability__Group_3_1_0__2__Impl rule__RequiredCapability__Group_3_1_0__3 ;
    public final void rule__RequiredCapability__Group_3_1_0__2() throws RecognitionException {
        int rule__RequiredCapability__Group_3_1_0__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 328) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:4781:1: ( rule__RequiredCapability__Group_3_1_0__2__Impl rule__RequiredCapability__Group_3_1_0__3 )
            // InternalSimpleBeeLangTestLanguage.g:4782:2: rule__RequiredCapability__Group_3_1_0__2__Impl rule__RequiredCapability__Group_3_1_0__3
            {
            pushFollow(FollowSets000.FOLLOW_14);
            rule__RequiredCapability__Group_3_1_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RequiredCapability__Group_3_1_0__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 328, rule__RequiredCapability__Group_3_1_0__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3_1_0__2"


    // $ANTLR start "rule__RequiredCapability__Group_3_1_0__2__Impl"
    // InternalSimpleBeeLangTestLanguage.g:4789:1: rule__RequiredCapability__Group_3_1_0__2__Impl : ( ( rule__RequiredCapability__CondExprAssignment_3_1_0_2 ) ) ;
    public final void rule__RequiredCapability__Group_3_1_0__2__Impl() throws RecognitionException {
        int rule__RequiredCapability__Group_3_1_0__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 329) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:4793:1: ( ( ( rule__RequiredCapability__CondExprAssignment_3_1_0_2 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:4794:1: ( ( rule__RequiredCapability__CondExprAssignment_3_1_0_2 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:4794:1: ( ( rule__RequiredCapability__CondExprAssignment_3_1_0_2 ) )
            // InternalSimpleBeeLangTestLanguage.g:4795:2: ( rule__RequiredCapability__CondExprAssignment_3_1_0_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRequiredCapabilityAccess().getCondExprAssignment_3_1_0_2()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:4796:2: ( rule__RequiredCapability__CondExprAssignment_3_1_0_2 )
            // InternalSimpleBeeLangTestLanguage.g:4796:3: rule__RequiredCapability__CondExprAssignment_3_1_0_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RequiredCapability__CondExprAssignment_3_1_0_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRequiredCapabilityAccess().getCondExprAssignment_3_1_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 329, rule__RequiredCapability__Group_3_1_0__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3_1_0__2__Impl"


    // $ANTLR start "rule__RequiredCapability__Group_3_1_0__3"
    // InternalSimpleBeeLangTestLanguage.g:4804:1: rule__RequiredCapability__Group_3_1_0__3 : rule__RequiredCapability__Group_3_1_0__3__Impl ;
    public final void rule__RequiredCapability__Group_3_1_0__3() throws RecognitionException {
        int rule__RequiredCapability__Group_3_1_0__3_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 330) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:4808:1: ( rule__RequiredCapability__Group_3_1_0__3__Impl )
            // InternalSimpleBeeLangTestLanguage.g:4809:2: rule__RequiredCapability__Group_3_1_0__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RequiredCapability__Group_3_1_0__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 330, rule__RequiredCapability__Group_3_1_0__3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3_1_0__3"


    // $ANTLR start "rule__RequiredCapability__Group_3_1_0__3__Impl"
    // InternalSimpleBeeLangTestLanguage.g:4815:1: rule__RequiredCapability__Group_3_1_0__3__Impl : ( ';' ) ;
    public final void rule__RequiredCapability__Group_3_1_0__3__Impl() throws RecognitionException {
        int rule__RequiredCapability__Group_3_1_0__3__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 331) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:4819:1: ( ( ';' ) )
            // InternalSimpleBeeLangTestLanguage.g:4820:1: ( ';' )
            {
            // InternalSimpleBeeLangTestLanguage.g:4820:1: ( ';' )
            // InternalSimpleBeeLangTestLanguage.g:4821:2: ';'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRequiredCapabilityAccess().getSemicolonKeyword_3_1_0_3()); 
            }
            match(input,50,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRequiredCapabilityAccess().getSemicolonKeyword_3_1_0_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 331, rule__RequiredCapability__Group_3_1_0__3__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3_1_0__3__Impl"


    // $ANTLR start "rule__RequiredCapability__Group_3_1_1__0"
    // InternalSimpleBeeLangTestLanguage.g:4831:1: rule__RequiredCapability__Group_3_1_1__0 : rule__RequiredCapability__Group_3_1_1__0__Impl rule__RequiredCapability__Group_3_1_1__1 ;
    public final void rule__RequiredCapability__Group_3_1_1__0() throws RecognitionException {
        int rule__RequiredCapability__Group_3_1_1__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 332) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:4835:1: ( rule__RequiredCapability__Group_3_1_1__0__Impl rule__RequiredCapability__Group_3_1_1__1 )
            // InternalSimpleBeeLangTestLanguage.g:4836:2: rule__RequiredCapability__Group_3_1_1__0__Impl rule__RequiredCapability__Group_3_1_1__1
            {
            pushFollow(FollowSets000.FOLLOW_14);
            rule__RequiredCapability__Group_3_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RequiredCapability__Group_3_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 332, rule__RequiredCapability__Group_3_1_1__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3_1_1__0"


    // $ANTLR start "rule__RequiredCapability__Group_3_1_1__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:4843:1: rule__RequiredCapability__Group_3_1_1__0__Impl : ( ( rule__RequiredCapability__GreedyAssignment_3_1_1_0 ) ) ;
    public final void rule__RequiredCapability__Group_3_1_1__0__Impl() throws RecognitionException {
        int rule__RequiredCapability__Group_3_1_1__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 333) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:4847:1: ( ( ( rule__RequiredCapability__GreedyAssignment_3_1_1_0 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:4848:1: ( ( rule__RequiredCapability__GreedyAssignment_3_1_1_0 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:4848:1: ( ( rule__RequiredCapability__GreedyAssignment_3_1_1_0 ) )
            // InternalSimpleBeeLangTestLanguage.g:4849:2: ( rule__RequiredCapability__GreedyAssignment_3_1_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRequiredCapabilityAccess().getGreedyAssignment_3_1_1_0()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:4850:2: ( rule__RequiredCapability__GreedyAssignment_3_1_1_0 )
            // InternalSimpleBeeLangTestLanguage.g:4850:3: rule__RequiredCapability__GreedyAssignment_3_1_1_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RequiredCapability__GreedyAssignment_3_1_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRequiredCapabilityAccess().getGreedyAssignment_3_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 333, rule__RequiredCapability__Group_3_1_1__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3_1_1__0__Impl"


    // $ANTLR start "rule__RequiredCapability__Group_3_1_1__1"
    // InternalSimpleBeeLangTestLanguage.g:4858:1: rule__RequiredCapability__Group_3_1_1__1 : rule__RequiredCapability__Group_3_1_1__1__Impl ;
    public final void rule__RequiredCapability__Group_3_1_1__1() throws RecognitionException {
        int rule__RequiredCapability__Group_3_1_1__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 334) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:4862:1: ( rule__RequiredCapability__Group_3_1_1__1__Impl )
            // InternalSimpleBeeLangTestLanguage.g:4863:2: rule__RequiredCapability__Group_3_1_1__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RequiredCapability__Group_3_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 334, rule__RequiredCapability__Group_3_1_1__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3_1_1__1"


    // $ANTLR start "rule__RequiredCapability__Group_3_1_1__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:4869:1: rule__RequiredCapability__Group_3_1_1__1__Impl : ( ';' ) ;
    public final void rule__RequiredCapability__Group_3_1_1__1__Impl() throws RecognitionException {
        int rule__RequiredCapability__Group_3_1_1__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 335) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:4873:1: ( ( ';' ) )
            // InternalSimpleBeeLangTestLanguage.g:4874:1: ( ';' )
            {
            // InternalSimpleBeeLangTestLanguage.g:4874:1: ( ';' )
            // InternalSimpleBeeLangTestLanguage.g:4875:2: ';'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRequiredCapabilityAccess().getSemicolonKeyword_3_1_1_1()); 
            }
            match(input,50,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRequiredCapabilityAccess().getSemicolonKeyword_3_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 335, rule__RequiredCapability__Group_3_1_1__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3_1_1__1__Impl"


    // $ANTLR start "rule__RequiredCapability__Group_3_1_2__0"
    // InternalSimpleBeeLangTestLanguage.g:4885:1: rule__RequiredCapability__Group_3_1_2__0 : rule__RequiredCapability__Group_3_1_2__0__Impl rule__RequiredCapability__Group_3_1_2__1 ;
    public final void rule__RequiredCapability__Group_3_1_2__0() throws RecognitionException {
        int rule__RequiredCapability__Group_3_1_2__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 336) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:4889:1: ( rule__RequiredCapability__Group_3_1_2__0__Impl rule__RequiredCapability__Group_3_1_2__1 )
            // InternalSimpleBeeLangTestLanguage.g:4890:2: rule__RequiredCapability__Group_3_1_2__0__Impl rule__RequiredCapability__Group_3_1_2__1
            {
            pushFollow(FollowSets000.FOLLOW_12);
            rule__RequiredCapability__Group_3_1_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RequiredCapability__Group_3_1_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 336, rule__RequiredCapability__Group_3_1_2__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3_1_2__0"


    // $ANTLR start "rule__RequiredCapability__Group_3_1_2__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:4897:1: rule__RequiredCapability__Group_3_1_2__0__Impl : ( 'requires-min' ) ;
    public final void rule__RequiredCapability__Group_3_1_2__0__Impl() throws RecognitionException {
        int rule__RequiredCapability__Group_3_1_2__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 337) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:4901:1: ( ( 'requires-min' ) )
            // InternalSimpleBeeLangTestLanguage.g:4902:1: ( 'requires-min' )
            {
            // InternalSimpleBeeLangTestLanguage.g:4902:1: ( 'requires-min' )
            // InternalSimpleBeeLangTestLanguage.g:4903:2: 'requires-min'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRequiredCapabilityAccess().getRequiresMinKeyword_3_1_2_0()); 
            }
            match(input,57,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRequiredCapabilityAccess().getRequiresMinKeyword_3_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 337, rule__RequiredCapability__Group_3_1_2__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3_1_2__0__Impl"


    // $ANTLR start "rule__RequiredCapability__Group_3_1_2__1"
    // InternalSimpleBeeLangTestLanguage.g:4912:1: rule__RequiredCapability__Group_3_1_2__1 : rule__RequiredCapability__Group_3_1_2__1__Impl rule__RequiredCapability__Group_3_1_2__2 ;
    public final void rule__RequiredCapability__Group_3_1_2__1() throws RecognitionException {
        int rule__RequiredCapability__Group_3_1_2__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 338) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:4916:1: ( rule__RequiredCapability__Group_3_1_2__1__Impl rule__RequiredCapability__Group_3_1_2__2 )
            // InternalSimpleBeeLangTestLanguage.g:4917:2: rule__RequiredCapability__Group_3_1_2__1__Impl rule__RequiredCapability__Group_3_1_2__2
            {
            pushFollow(FollowSets000.FOLLOW_22);
            rule__RequiredCapability__Group_3_1_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RequiredCapability__Group_3_1_2__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 338, rule__RequiredCapability__Group_3_1_2__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3_1_2__1"


    // $ANTLR start "rule__RequiredCapability__Group_3_1_2__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:4924:1: rule__RequiredCapability__Group_3_1_2__1__Impl : ( ':' ) ;
    public final void rule__RequiredCapability__Group_3_1_2__1__Impl() throws RecognitionException {
        int rule__RequiredCapability__Group_3_1_2__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 339) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:4928:1: ( ( ':' ) )
            // InternalSimpleBeeLangTestLanguage.g:4929:1: ( ':' )
            {
            // InternalSimpleBeeLangTestLanguage.g:4929:1: ( ':' )
            // InternalSimpleBeeLangTestLanguage.g:4930:2: ':'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRequiredCapabilityAccess().getColonKeyword_3_1_2_1()); 
            }
            match(input,49,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRequiredCapabilityAccess().getColonKeyword_3_1_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 339, rule__RequiredCapability__Group_3_1_2__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3_1_2__1__Impl"


    // $ANTLR start "rule__RequiredCapability__Group_3_1_2__2"
    // InternalSimpleBeeLangTestLanguage.g:4939:1: rule__RequiredCapability__Group_3_1_2__2 : rule__RequiredCapability__Group_3_1_2__2__Impl rule__RequiredCapability__Group_3_1_2__3 ;
    public final void rule__RequiredCapability__Group_3_1_2__2() throws RecognitionException {
        int rule__RequiredCapability__Group_3_1_2__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 340) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:4943:1: ( rule__RequiredCapability__Group_3_1_2__2__Impl rule__RequiredCapability__Group_3_1_2__3 )
            // InternalSimpleBeeLangTestLanguage.g:4944:2: rule__RequiredCapability__Group_3_1_2__2__Impl rule__RequiredCapability__Group_3_1_2__3
            {
            pushFollow(FollowSets000.FOLLOW_14);
            rule__RequiredCapability__Group_3_1_2__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RequiredCapability__Group_3_1_2__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 340, rule__RequiredCapability__Group_3_1_2__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3_1_2__2"


    // $ANTLR start "rule__RequiredCapability__Group_3_1_2__2__Impl"
    // InternalSimpleBeeLangTestLanguage.g:4951:1: rule__RequiredCapability__Group_3_1_2__2__Impl : ( ( rule__RequiredCapability__MinAssignment_3_1_2_2 ) ) ;
    public final void rule__RequiredCapability__Group_3_1_2__2__Impl() throws RecognitionException {
        int rule__RequiredCapability__Group_3_1_2__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 341) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:4955:1: ( ( ( rule__RequiredCapability__MinAssignment_3_1_2_2 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:4956:1: ( ( rule__RequiredCapability__MinAssignment_3_1_2_2 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:4956:1: ( ( rule__RequiredCapability__MinAssignment_3_1_2_2 ) )
            // InternalSimpleBeeLangTestLanguage.g:4957:2: ( rule__RequiredCapability__MinAssignment_3_1_2_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRequiredCapabilityAccess().getMinAssignment_3_1_2_2()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:4958:2: ( rule__RequiredCapability__MinAssignment_3_1_2_2 )
            // InternalSimpleBeeLangTestLanguage.g:4958:3: rule__RequiredCapability__MinAssignment_3_1_2_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RequiredCapability__MinAssignment_3_1_2_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRequiredCapabilityAccess().getMinAssignment_3_1_2_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 341, rule__RequiredCapability__Group_3_1_2__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3_1_2__2__Impl"


    // $ANTLR start "rule__RequiredCapability__Group_3_1_2__3"
    // InternalSimpleBeeLangTestLanguage.g:4966:1: rule__RequiredCapability__Group_3_1_2__3 : rule__RequiredCapability__Group_3_1_2__3__Impl ;
    public final void rule__RequiredCapability__Group_3_1_2__3() throws RecognitionException {
        int rule__RequiredCapability__Group_3_1_2__3_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 342) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:4970:1: ( rule__RequiredCapability__Group_3_1_2__3__Impl )
            // InternalSimpleBeeLangTestLanguage.g:4971:2: rule__RequiredCapability__Group_3_1_2__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RequiredCapability__Group_3_1_2__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 342, rule__RequiredCapability__Group_3_1_2__3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3_1_2__3"


    // $ANTLR start "rule__RequiredCapability__Group_3_1_2__3__Impl"
    // InternalSimpleBeeLangTestLanguage.g:4977:1: rule__RequiredCapability__Group_3_1_2__3__Impl : ( ';' ) ;
    public final void rule__RequiredCapability__Group_3_1_2__3__Impl() throws RecognitionException {
        int rule__RequiredCapability__Group_3_1_2__3__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 343) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:4981:1: ( ( ';' ) )
            // InternalSimpleBeeLangTestLanguage.g:4982:1: ( ';' )
            {
            // InternalSimpleBeeLangTestLanguage.g:4982:1: ( ';' )
            // InternalSimpleBeeLangTestLanguage.g:4983:2: ';'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRequiredCapabilityAccess().getSemicolonKeyword_3_1_2_3()); 
            }
            match(input,50,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRequiredCapabilityAccess().getSemicolonKeyword_3_1_2_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 343, rule__RequiredCapability__Group_3_1_2__3__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3_1_2__3__Impl"


    // $ANTLR start "rule__RequiredCapability__Group_3_1_3__0"
    // InternalSimpleBeeLangTestLanguage.g:4993:1: rule__RequiredCapability__Group_3_1_3__0 : rule__RequiredCapability__Group_3_1_3__0__Impl rule__RequiredCapability__Group_3_1_3__1 ;
    public final void rule__RequiredCapability__Group_3_1_3__0() throws RecognitionException {
        int rule__RequiredCapability__Group_3_1_3__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 344) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:4997:1: ( rule__RequiredCapability__Group_3_1_3__0__Impl rule__RequiredCapability__Group_3_1_3__1 )
            // InternalSimpleBeeLangTestLanguage.g:4998:2: rule__RequiredCapability__Group_3_1_3__0__Impl rule__RequiredCapability__Group_3_1_3__1
            {
            pushFollow(FollowSets000.FOLLOW_12);
            rule__RequiredCapability__Group_3_1_3__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RequiredCapability__Group_3_1_3__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 344, rule__RequiredCapability__Group_3_1_3__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3_1_3__0"


    // $ANTLR start "rule__RequiredCapability__Group_3_1_3__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:5005:1: rule__RequiredCapability__Group_3_1_3__0__Impl : ( 'requires-max' ) ;
    public final void rule__RequiredCapability__Group_3_1_3__0__Impl() throws RecognitionException {
        int rule__RequiredCapability__Group_3_1_3__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 345) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:5009:1: ( ( 'requires-max' ) )
            // InternalSimpleBeeLangTestLanguage.g:5010:1: ( 'requires-max' )
            {
            // InternalSimpleBeeLangTestLanguage.g:5010:1: ( 'requires-max' )
            // InternalSimpleBeeLangTestLanguage.g:5011:2: 'requires-max'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRequiredCapabilityAccess().getRequiresMaxKeyword_3_1_3_0()); 
            }
            match(input,58,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRequiredCapabilityAccess().getRequiresMaxKeyword_3_1_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 345, rule__RequiredCapability__Group_3_1_3__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3_1_3__0__Impl"


    // $ANTLR start "rule__RequiredCapability__Group_3_1_3__1"
    // InternalSimpleBeeLangTestLanguage.g:5020:1: rule__RequiredCapability__Group_3_1_3__1 : rule__RequiredCapability__Group_3_1_3__1__Impl rule__RequiredCapability__Group_3_1_3__2 ;
    public final void rule__RequiredCapability__Group_3_1_3__1() throws RecognitionException {
        int rule__RequiredCapability__Group_3_1_3__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 346) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:5024:1: ( rule__RequiredCapability__Group_3_1_3__1__Impl rule__RequiredCapability__Group_3_1_3__2 )
            // InternalSimpleBeeLangTestLanguage.g:5025:2: rule__RequiredCapability__Group_3_1_3__1__Impl rule__RequiredCapability__Group_3_1_3__2
            {
            pushFollow(FollowSets000.FOLLOW_22);
            rule__RequiredCapability__Group_3_1_3__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RequiredCapability__Group_3_1_3__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 346, rule__RequiredCapability__Group_3_1_3__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3_1_3__1"


    // $ANTLR start "rule__RequiredCapability__Group_3_1_3__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:5032:1: rule__RequiredCapability__Group_3_1_3__1__Impl : ( ':' ) ;
    public final void rule__RequiredCapability__Group_3_1_3__1__Impl() throws RecognitionException {
        int rule__RequiredCapability__Group_3_1_3__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 347) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:5036:1: ( ( ':' ) )
            // InternalSimpleBeeLangTestLanguage.g:5037:1: ( ':' )
            {
            // InternalSimpleBeeLangTestLanguage.g:5037:1: ( ':' )
            // InternalSimpleBeeLangTestLanguage.g:5038:2: ':'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRequiredCapabilityAccess().getColonKeyword_3_1_3_1()); 
            }
            match(input,49,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRequiredCapabilityAccess().getColonKeyword_3_1_3_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 347, rule__RequiredCapability__Group_3_1_3__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3_1_3__1__Impl"


    // $ANTLR start "rule__RequiredCapability__Group_3_1_3__2"
    // InternalSimpleBeeLangTestLanguage.g:5047:1: rule__RequiredCapability__Group_3_1_3__2 : rule__RequiredCapability__Group_3_1_3__2__Impl rule__RequiredCapability__Group_3_1_3__3 ;
    public final void rule__RequiredCapability__Group_3_1_3__2() throws RecognitionException {
        int rule__RequiredCapability__Group_3_1_3__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 348) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:5051:1: ( rule__RequiredCapability__Group_3_1_3__2__Impl rule__RequiredCapability__Group_3_1_3__3 )
            // InternalSimpleBeeLangTestLanguage.g:5052:2: rule__RequiredCapability__Group_3_1_3__2__Impl rule__RequiredCapability__Group_3_1_3__3
            {
            pushFollow(FollowSets000.FOLLOW_14);
            rule__RequiredCapability__Group_3_1_3__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RequiredCapability__Group_3_1_3__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 348, rule__RequiredCapability__Group_3_1_3__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3_1_3__2"


    // $ANTLR start "rule__RequiredCapability__Group_3_1_3__2__Impl"
    // InternalSimpleBeeLangTestLanguage.g:5059:1: rule__RequiredCapability__Group_3_1_3__2__Impl : ( ( rule__RequiredCapability__MaxAssignment_3_1_3_2 ) ) ;
    public final void rule__RequiredCapability__Group_3_1_3__2__Impl() throws RecognitionException {
        int rule__RequiredCapability__Group_3_1_3__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 349) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:5063:1: ( ( ( rule__RequiredCapability__MaxAssignment_3_1_3_2 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:5064:1: ( ( rule__RequiredCapability__MaxAssignment_3_1_3_2 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:5064:1: ( ( rule__RequiredCapability__MaxAssignment_3_1_3_2 ) )
            // InternalSimpleBeeLangTestLanguage.g:5065:2: ( rule__RequiredCapability__MaxAssignment_3_1_3_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRequiredCapabilityAccess().getMaxAssignment_3_1_3_2()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:5066:2: ( rule__RequiredCapability__MaxAssignment_3_1_3_2 )
            // InternalSimpleBeeLangTestLanguage.g:5066:3: rule__RequiredCapability__MaxAssignment_3_1_3_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RequiredCapability__MaxAssignment_3_1_3_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRequiredCapabilityAccess().getMaxAssignment_3_1_3_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 349, rule__RequiredCapability__Group_3_1_3__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3_1_3__2__Impl"


    // $ANTLR start "rule__RequiredCapability__Group_3_1_3__3"
    // InternalSimpleBeeLangTestLanguage.g:5074:1: rule__RequiredCapability__Group_3_1_3__3 : rule__RequiredCapability__Group_3_1_3__3__Impl ;
    public final void rule__RequiredCapability__Group_3_1_3__3() throws RecognitionException {
        int rule__RequiredCapability__Group_3_1_3__3_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 350) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:5078:1: ( rule__RequiredCapability__Group_3_1_3__3__Impl )
            // InternalSimpleBeeLangTestLanguage.g:5079:2: rule__RequiredCapability__Group_3_1_3__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RequiredCapability__Group_3_1_3__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 350, rule__RequiredCapability__Group_3_1_3__3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3_1_3__3"


    // $ANTLR start "rule__RequiredCapability__Group_3_1_3__3__Impl"
    // InternalSimpleBeeLangTestLanguage.g:5085:1: rule__RequiredCapability__Group_3_1_3__3__Impl : ( ';' ) ;
    public final void rule__RequiredCapability__Group_3_1_3__3__Impl() throws RecognitionException {
        int rule__RequiredCapability__Group_3_1_3__3__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 351) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:5089:1: ( ( ';' ) )
            // InternalSimpleBeeLangTestLanguage.g:5090:1: ( ';' )
            {
            // InternalSimpleBeeLangTestLanguage.g:5090:1: ( ';' )
            // InternalSimpleBeeLangTestLanguage.g:5091:2: ';'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRequiredCapabilityAccess().getSemicolonKeyword_3_1_3_3()); 
            }
            match(input,50,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRequiredCapabilityAccess().getSemicolonKeyword_3_1_3_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 351, rule__RequiredCapability__Group_3_1_3__3__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3_1_3__3__Impl"


    // $ANTLR start "rule__RequiredCapability__Group_3_1_4__0"
    // InternalSimpleBeeLangTestLanguage.g:5101:1: rule__RequiredCapability__Group_3_1_4__0 : rule__RequiredCapability__Group_3_1_4__0__Impl rule__RequiredCapability__Group_3_1_4__1 ;
    public final void rule__RequiredCapability__Group_3_1_4__0() throws RecognitionException {
        int rule__RequiredCapability__Group_3_1_4__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 352) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:5105:1: ( rule__RequiredCapability__Group_3_1_4__0__Impl rule__RequiredCapability__Group_3_1_4__1 )
            // InternalSimpleBeeLangTestLanguage.g:5106:2: rule__RequiredCapability__Group_3_1_4__0__Impl rule__RequiredCapability__Group_3_1_4__1
            {
            pushFollow(FollowSets000.FOLLOW_12);
            rule__RequiredCapability__Group_3_1_4__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RequiredCapability__Group_3_1_4__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 352, rule__RequiredCapability__Group_3_1_4__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3_1_4__0"


    // $ANTLR start "rule__RequiredCapability__Group_3_1_4__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:5113:1: rule__RequiredCapability__Group_3_1_4__0__Impl : ( 'version' ) ;
    public final void rule__RequiredCapability__Group_3_1_4__0__Impl() throws RecognitionException {
        int rule__RequiredCapability__Group_3_1_4__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 353) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:5117:1: ( ( 'version' ) )
            // InternalSimpleBeeLangTestLanguage.g:5118:1: ( 'version' )
            {
            // InternalSimpleBeeLangTestLanguage.g:5118:1: ( 'version' )
            // InternalSimpleBeeLangTestLanguage.g:5119:2: 'version'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRequiredCapabilityAccess().getVersionKeyword_3_1_4_0()); 
            }
            match(input,46,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRequiredCapabilityAccess().getVersionKeyword_3_1_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 353, rule__RequiredCapability__Group_3_1_4__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3_1_4__0__Impl"


    // $ANTLR start "rule__RequiredCapability__Group_3_1_4__1"
    // InternalSimpleBeeLangTestLanguage.g:5128:1: rule__RequiredCapability__Group_3_1_4__1 : rule__RequiredCapability__Group_3_1_4__1__Impl rule__RequiredCapability__Group_3_1_4__2 ;
    public final void rule__RequiredCapability__Group_3_1_4__1() throws RecognitionException {
        int rule__RequiredCapability__Group_3_1_4__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 354) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:5132:1: ( rule__RequiredCapability__Group_3_1_4__1__Impl rule__RequiredCapability__Group_3_1_4__2 )
            // InternalSimpleBeeLangTestLanguage.g:5133:2: rule__RequiredCapability__Group_3_1_4__1__Impl rule__RequiredCapability__Group_3_1_4__2
            {
            pushFollow(FollowSets000.FOLLOW_9);
            rule__RequiredCapability__Group_3_1_4__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RequiredCapability__Group_3_1_4__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 354, rule__RequiredCapability__Group_3_1_4__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3_1_4__1"


    // $ANTLR start "rule__RequiredCapability__Group_3_1_4__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:5140:1: rule__RequiredCapability__Group_3_1_4__1__Impl : ( ':' ) ;
    public final void rule__RequiredCapability__Group_3_1_4__1__Impl() throws RecognitionException {
        int rule__RequiredCapability__Group_3_1_4__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 355) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:5144:1: ( ( ':' ) )
            // InternalSimpleBeeLangTestLanguage.g:5145:1: ( ':' )
            {
            // InternalSimpleBeeLangTestLanguage.g:5145:1: ( ':' )
            // InternalSimpleBeeLangTestLanguage.g:5146:2: ':'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRequiredCapabilityAccess().getColonKeyword_3_1_4_1()); 
            }
            match(input,49,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRequiredCapabilityAccess().getColonKeyword_3_1_4_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 355, rule__RequiredCapability__Group_3_1_4__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3_1_4__1__Impl"


    // $ANTLR start "rule__RequiredCapability__Group_3_1_4__2"
    // InternalSimpleBeeLangTestLanguage.g:5155:1: rule__RequiredCapability__Group_3_1_4__2 : rule__RequiredCapability__Group_3_1_4__2__Impl rule__RequiredCapability__Group_3_1_4__3 ;
    public final void rule__RequiredCapability__Group_3_1_4__2() throws RecognitionException {
        int rule__RequiredCapability__Group_3_1_4__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 356) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:5159:1: ( rule__RequiredCapability__Group_3_1_4__2__Impl rule__RequiredCapability__Group_3_1_4__3 )
            // InternalSimpleBeeLangTestLanguage.g:5160:2: rule__RequiredCapability__Group_3_1_4__2__Impl rule__RequiredCapability__Group_3_1_4__3
            {
            pushFollow(FollowSets000.FOLLOW_14);
            rule__RequiredCapability__Group_3_1_4__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RequiredCapability__Group_3_1_4__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 356, rule__RequiredCapability__Group_3_1_4__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3_1_4__2"


    // $ANTLR start "rule__RequiredCapability__Group_3_1_4__2__Impl"
    // InternalSimpleBeeLangTestLanguage.g:5167:1: rule__RequiredCapability__Group_3_1_4__2__Impl : ( ( rule__RequiredCapability__VersionRangeAssignment_3_1_4_2 ) ) ;
    public final void rule__RequiredCapability__Group_3_1_4__2__Impl() throws RecognitionException {
        int rule__RequiredCapability__Group_3_1_4__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 357) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:5171:1: ( ( ( rule__RequiredCapability__VersionRangeAssignment_3_1_4_2 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:5172:1: ( ( rule__RequiredCapability__VersionRangeAssignment_3_1_4_2 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:5172:1: ( ( rule__RequiredCapability__VersionRangeAssignment_3_1_4_2 ) )
            // InternalSimpleBeeLangTestLanguage.g:5173:2: ( rule__RequiredCapability__VersionRangeAssignment_3_1_4_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRequiredCapabilityAccess().getVersionRangeAssignment_3_1_4_2()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:5174:2: ( rule__RequiredCapability__VersionRangeAssignment_3_1_4_2 )
            // InternalSimpleBeeLangTestLanguage.g:5174:3: rule__RequiredCapability__VersionRangeAssignment_3_1_4_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RequiredCapability__VersionRangeAssignment_3_1_4_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRequiredCapabilityAccess().getVersionRangeAssignment_3_1_4_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 357, rule__RequiredCapability__Group_3_1_4__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3_1_4__2__Impl"


    // $ANTLR start "rule__RequiredCapability__Group_3_1_4__3"
    // InternalSimpleBeeLangTestLanguage.g:5182:1: rule__RequiredCapability__Group_3_1_4__3 : rule__RequiredCapability__Group_3_1_4__3__Impl ;
    public final void rule__RequiredCapability__Group_3_1_4__3() throws RecognitionException {
        int rule__RequiredCapability__Group_3_1_4__3_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 358) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:5186:1: ( rule__RequiredCapability__Group_3_1_4__3__Impl )
            // InternalSimpleBeeLangTestLanguage.g:5187:2: rule__RequiredCapability__Group_3_1_4__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RequiredCapability__Group_3_1_4__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 358, rule__RequiredCapability__Group_3_1_4__3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3_1_4__3"


    // $ANTLR start "rule__RequiredCapability__Group_3_1_4__3__Impl"
    // InternalSimpleBeeLangTestLanguage.g:5193:1: rule__RequiredCapability__Group_3_1_4__3__Impl : ( ';' ) ;
    public final void rule__RequiredCapability__Group_3_1_4__3__Impl() throws RecognitionException {
        int rule__RequiredCapability__Group_3_1_4__3__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 359) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:5197:1: ( ( ';' ) )
            // InternalSimpleBeeLangTestLanguage.g:5198:1: ( ';' )
            {
            // InternalSimpleBeeLangTestLanguage.g:5198:1: ( ';' )
            // InternalSimpleBeeLangTestLanguage.g:5199:2: ';'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRequiredCapabilityAccess().getSemicolonKeyword_3_1_4_3()); 
            }
            match(input,50,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRequiredCapabilityAccess().getSemicolonKeyword_3_1_4_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 359, rule__RequiredCapability__Group_3_1_4__3__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3_1_4__3__Impl"


    // $ANTLR start "rule__Path__Group_1__0"
    // InternalSimpleBeeLangTestLanguage.g:5209:1: rule__Path__Group_1__0 : rule__Path__Group_1__0__Impl rule__Path__Group_1__1 ;
    public final void rule__Path__Group_1__0() throws RecognitionException {
        int rule__Path__Group_1__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 360) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:5213:1: ( rule__Path__Group_1__0__Impl rule__Path__Group_1__1 )
            // InternalSimpleBeeLangTestLanguage.g:5214:2: rule__Path__Group_1__0__Impl rule__Path__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_13);
            rule__Path__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Path__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 360, rule__Path__Group_1__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Path__Group_1__0"


    // $ANTLR start "rule__Path__Group_1__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:5221:1: rule__Path__Group_1__0__Impl : ( ( '/' )? ) ;
    public final void rule__Path__Group_1__0__Impl() throws RecognitionException {
        int rule__Path__Group_1__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 361) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:5225:1: ( ( ( '/' )? ) )
            // InternalSimpleBeeLangTestLanguage.g:5226:1: ( ( '/' )? )
            {
            // InternalSimpleBeeLangTestLanguage.g:5226:1: ( ( '/' )? )
            // InternalSimpleBeeLangTestLanguage.g:5227:2: ( '/' )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPathAccess().getSolidusKeyword_1_0()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:5228:2: ( '/' )?
            int alt41=2;
            int LA41_0 = input.LA(1);

            if ( (LA41_0==33) ) {
                alt41=1;
            }
            switch (alt41) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:5228:3: '/'
                    {
                    match(input,33,FollowSets000.FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPathAccess().getSolidusKeyword_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 361, rule__Path__Group_1__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Path__Group_1__0__Impl"


    // $ANTLR start "rule__Path__Group_1__1"
    // InternalSimpleBeeLangTestLanguage.g:5236:1: rule__Path__Group_1__1 : rule__Path__Group_1__1__Impl rule__Path__Group_1__2 ;
    public final void rule__Path__Group_1__1() throws RecognitionException {
        int rule__Path__Group_1__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 362) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:5240:1: ( rule__Path__Group_1__1__Impl rule__Path__Group_1__2 )
            // InternalSimpleBeeLangTestLanguage.g:5241:2: rule__Path__Group_1__1__Impl rule__Path__Group_1__2
            {
            pushFollow(FollowSets000.FOLLOW_23);
            rule__Path__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Path__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 362, rule__Path__Group_1__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Path__Group_1__1"


    // $ANTLR start "rule__Path__Group_1__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:5248:1: rule__Path__Group_1__1__Impl : ( ruleQID ) ;
    public final void rule__Path__Group_1__1__Impl() throws RecognitionException {
        int rule__Path__Group_1__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 363) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:5252:1: ( ( ruleQID ) )
            // InternalSimpleBeeLangTestLanguage.g:5253:1: ( ruleQID )
            {
            // InternalSimpleBeeLangTestLanguage.g:5253:1: ( ruleQID )
            // InternalSimpleBeeLangTestLanguage.g:5254:2: ruleQID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPathAccess().getQIDParserRuleCall_1_1()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleQID();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPathAccess().getQIDParserRuleCall_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 363, rule__Path__Group_1__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Path__Group_1__1__Impl"


    // $ANTLR start "rule__Path__Group_1__2"
    // InternalSimpleBeeLangTestLanguage.g:5263:1: rule__Path__Group_1__2 : rule__Path__Group_1__2__Impl rule__Path__Group_1__3 ;
    public final void rule__Path__Group_1__2() throws RecognitionException {
        int rule__Path__Group_1__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 364) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:5267:1: ( rule__Path__Group_1__2__Impl rule__Path__Group_1__3 )
            // InternalSimpleBeeLangTestLanguage.g:5268:2: rule__Path__Group_1__2__Impl rule__Path__Group_1__3
            {
            pushFollow(FollowSets000.FOLLOW_23);
            rule__Path__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Path__Group_1__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 364, rule__Path__Group_1__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Path__Group_1__2"


    // $ANTLR start "rule__Path__Group_1__2__Impl"
    // InternalSimpleBeeLangTestLanguage.g:5275:1: rule__Path__Group_1__2__Impl : ( ( rule__Path__Group_1_2__0 )* ) ;
    public final void rule__Path__Group_1__2__Impl() throws RecognitionException {
        int rule__Path__Group_1__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 365) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:5279:1: ( ( ( rule__Path__Group_1_2__0 )* ) )
            // InternalSimpleBeeLangTestLanguage.g:5280:1: ( ( rule__Path__Group_1_2__0 )* )
            {
            // InternalSimpleBeeLangTestLanguage.g:5280:1: ( ( rule__Path__Group_1_2__0 )* )
            // InternalSimpleBeeLangTestLanguage.g:5281:2: ( rule__Path__Group_1_2__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPathAccess().getGroup_1_2()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:5282:2: ( rule__Path__Group_1_2__0 )*
            loop42:
            do {
                int alt42=2;
                int LA42_0 = input.LA(1);

                if ( (LA42_0==33) ) {
                    int LA42_1 = input.LA(2);

                    if ( (LA42_1==RULE_ID) ) {
                        alt42=1;
                    }


                }


                switch (alt42) {
            	case 1 :
            	    // InternalSimpleBeeLangTestLanguage.g:5282:3: rule__Path__Group_1_2__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_24);
            	    rule__Path__Group_1_2__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop42;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPathAccess().getGroup_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 365, rule__Path__Group_1__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Path__Group_1__2__Impl"


    // $ANTLR start "rule__Path__Group_1__3"
    // InternalSimpleBeeLangTestLanguage.g:5290:1: rule__Path__Group_1__3 : rule__Path__Group_1__3__Impl ;
    public final void rule__Path__Group_1__3() throws RecognitionException {
        int rule__Path__Group_1__3_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 366) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:5294:1: ( rule__Path__Group_1__3__Impl )
            // InternalSimpleBeeLangTestLanguage.g:5295:2: rule__Path__Group_1__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Path__Group_1__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 366, rule__Path__Group_1__3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Path__Group_1__3"


    // $ANTLR start "rule__Path__Group_1__3__Impl"
    // InternalSimpleBeeLangTestLanguage.g:5301:1: rule__Path__Group_1__3__Impl : ( ( '/' )? ) ;
    public final void rule__Path__Group_1__3__Impl() throws RecognitionException {
        int rule__Path__Group_1__3__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 367) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:5305:1: ( ( ( '/' )? ) )
            // InternalSimpleBeeLangTestLanguage.g:5306:1: ( ( '/' )? )
            {
            // InternalSimpleBeeLangTestLanguage.g:5306:1: ( ( '/' )? )
            // InternalSimpleBeeLangTestLanguage.g:5307:2: ( '/' )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPathAccess().getSolidusKeyword_1_3()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:5308:2: ( '/' )?
            int alt43=2;
            int LA43_0 = input.LA(1);

            if ( (LA43_0==33) ) {
                alt43=1;
            }
            switch (alt43) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:5308:3: '/'
                    {
                    match(input,33,FollowSets000.FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPathAccess().getSolidusKeyword_1_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 367, rule__Path__Group_1__3__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Path__Group_1__3__Impl"


    // $ANTLR start "rule__Path__Group_1_2__0"
    // InternalSimpleBeeLangTestLanguage.g:5317:1: rule__Path__Group_1_2__0 : rule__Path__Group_1_2__0__Impl rule__Path__Group_1_2__1 ;
    public final void rule__Path__Group_1_2__0() throws RecognitionException {
        int rule__Path__Group_1_2__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 368) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:5321:1: ( rule__Path__Group_1_2__0__Impl rule__Path__Group_1_2__1 )
            // InternalSimpleBeeLangTestLanguage.g:5322:2: rule__Path__Group_1_2__0__Impl rule__Path__Group_1_2__1
            {
            pushFollow(FollowSets000.FOLLOW_13);
            rule__Path__Group_1_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Path__Group_1_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 368, rule__Path__Group_1_2__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Path__Group_1_2__0"


    // $ANTLR start "rule__Path__Group_1_2__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:5329:1: rule__Path__Group_1_2__0__Impl : ( '/' ) ;
    public final void rule__Path__Group_1_2__0__Impl() throws RecognitionException {
        int rule__Path__Group_1_2__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 369) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:5333:1: ( ( '/' ) )
            // InternalSimpleBeeLangTestLanguage.g:5334:1: ( '/' )
            {
            // InternalSimpleBeeLangTestLanguage.g:5334:1: ( '/' )
            // InternalSimpleBeeLangTestLanguage.g:5335:2: '/'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPathAccess().getSolidusKeyword_1_2_0()); 
            }
            match(input,33,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPathAccess().getSolidusKeyword_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 369, rule__Path__Group_1_2__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Path__Group_1_2__0__Impl"


    // $ANTLR start "rule__Path__Group_1_2__1"
    // InternalSimpleBeeLangTestLanguage.g:5344:1: rule__Path__Group_1_2__1 : rule__Path__Group_1_2__1__Impl ;
    public final void rule__Path__Group_1_2__1() throws RecognitionException {
        int rule__Path__Group_1_2__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 370) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:5348:1: ( rule__Path__Group_1_2__1__Impl )
            // InternalSimpleBeeLangTestLanguage.g:5349:2: rule__Path__Group_1_2__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Path__Group_1_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 370, rule__Path__Group_1_2__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Path__Group_1_2__1"


    // $ANTLR start "rule__Path__Group_1_2__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:5355:1: rule__Path__Group_1_2__1__Impl : ( ruleQID ) ;
    public final void rule__Path__Group_1_2__1__Impl() throws RecognitionException {
        int rule__Path__Group_1_2__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 371) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:5359:1: ( ( ruleQID ) )
            // InternalSimpleBeeLangTestLanguage.g:5360:1: ( ruleQID )
            {
            // InternalSimpleBeeLangTestLanguage.g:5360:1: ( ruleQID )
            // InternalSimpleBeeLangTestLanguage.g:5361:2: ruleQID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPathAccess().getQIDParserRuleCall_1_2_1()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleQID();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPathAccess().getQIDParserRuleCall_1_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 371, rule__Path__Group_1_2__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Path__Group_1_2__1__Impl"


    // $ANTLR start "rule__ParameterList__Group__0"
    // InternalSimpleBeeLangTestLanguage.g:5371:1: rule__ParameterList__Group__0 : rule__ParameterList__Group__0__Impl rule__ParameterList__Group__1 ;
    public final void rule__ParameterList__Group__0() throws RecognitionException {
        int rule__ParameterList__Group__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 372) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:5375:1: ( rule__ParameterList__Group__0__Impl rule__ParameterList__Group__1 )
            // InternalSimpleBeeLangTestLanguage.g:5376:2: rule__ParameterList__Group__0__Impl rule__ParameterList__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_10);
            rule__ParameterList__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ParameterList__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 372, rule__ParameterList__Group__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterList__Group__0"


    // $ANTLR start "rule__ParameterList__Group__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:5383:1: rule__ParameterList__Group__0__Impl : ( ( rule__ParameterList__ParametersAssignment_0 ) ) ;
    public final void rule__ParameterList__Group__0__Impl() throws RecognitionException {
        int rule__ParameterList__Group__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 373) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:5387:1: ( ( ( rule__ParameterList__ParametersAssignment_0 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:5388:1: ( ( rule__ParameterList__ParametersAssignment_0 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:5388:1: ( ( rule__ParameterList__ParametersAssignment_0 ) )
            // InternalSimpleBeeLangTestLanguage.g:5389:2: ( rule__ParameterList__ParametersAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterListAccess().getParametersAssignment_0()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:5390:2: ( rule__ParameterList__ParametersAssignment_0 )
            // InternalSimpleBeeLangTestLanguage.g:5390:3: rule__ParameterList__ParametersAssignment_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ParameterList__ParametersAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterListAccess().getParametersAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 373, rule__ParameterList__Group__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterList__Group__0__Impl"


    // $ANTLR start "rule__ParameterList__Group__1"
    // InternalSimpleBeeLangTestLanguage.g:5398:1: rule__ParameterList__Group__1 : rule__ParameterList__Group__1__Impl ;
    public final void rule__ParameterList__Group__1() throws RecognitionException {
        int rule__ParameterList__Group__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 374) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:5402:1: ( rule__ParameterList__Group__1__Impl )
            // InternalSimpleBeeLangTestLanguage.g:5403:2: rule__ParameterList__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ParameterList__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 374, rule__ParameterList__Group__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterList__Group__1"


    // $ANTLR start "rule__ParameterList__Group__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:5409:1: rule__ParameterList__Group__1__Impl : ( ( rule__ParameterList__Group_1__0 )* ) ;
    public final void rule__ParameterList__Group__1__Impl() throws RecognitionException {
        int rule__ParameterList__Group__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 375) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:5413:1: ( ( ( rule__ParameterList__Group_1__0 )* ) )
            // InternalSimpleBeeLangTestLanguage.g:5414:1: ( ( rule__ParameterList__Group_1__0 )* )
            {
            // InternalSimpleBeeLangTestLanguage.g:5414:1: ( ( rule__ParameterList__Group_1__0 )* )
            // InternalSimpleBeeLangTestLanguage.g:5415:2: ( rule__ParameterList__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterListAccess().getGroup_1()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:5416:2: ( rule__ParameterList__Group_1__0 )*
            loop44:
            do {
                int alt44=2;
                int LA44_0 = input.LA(1);

                if ( (LA44_0==48) ) {
                    alt44=1;
                }


                switch (alt44) {
            	case 1 :
            	    // InternalSimpleBeeLangTestLanguage.g:5416:3: rule__ParameterList__Group_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_11);
            	    rule__ParameterList__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop44;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterListAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 375, rule__ParameterList__Group__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterList__Group__1__Impl"


    // $ANTLR start "rule__ParameterList__Group_1__0"
    // InternalSimpleBeeLangTestLanguage.g:5425:1: rule__ParameterList__Group_1__0 : rule__ParameterList__Group_1__0__Impl rule__ParameterList__Group_1__1 ;
    public final void rule__ParameterList__Group_1__0() throws RecognitionException {
        int rule__ParameterList__Group_1__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 376) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:5429:1: ( rule__ParameterList__Group_1__0__Impl rule__ParameterList__Group_1__1 )
            // InternalSimpleBeeLangTestLanguage.g:5430:2: rule__ParameterList__Group_1__0__Impl rule__ParameterList__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_25);
            rule__ParameterList__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ParameterList__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 376, rule__ParameterList__Group_1__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterList__Group_1__0"


    // $ANTLR start "rule__ParameterList__Group_1__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:5437:1: rule__ParameterList__Group_1__0__Impl : ( ',' ) ;
    public final void rule__ParameterList__Group_1__0__Impl() throws RecognitionException {
        int rule__ParameterList__Group_1__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 377) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:5441:1: ( ( ',' ) )
            // InternalSimpleBeeLangTestLanguage.g:5442:1: ( ',' )
            {
            // InternalSimpleBeeLangTestLanguage.g:5442:1: ( ',' )
            // InternalSimpleBeeLangTestLanguage.g:5443:2: ','
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterListAccess().getCommaKeyword_1_0()); 
            }
            match(input,48,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterListAccess().getCommaKeyword_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 377, rule__ParameterList__Group_1__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterList__Group_1__0__Impl"


    // $ANTLR start "rule__ParameterList__Group_1__1"
    // InternalSimpleBeeLangTestLanguage.g:5452:1: rule__ParameterList__Group_1__1 : rule__ParameterList__Group_1__1__Impl ;
    public final void rule__ParameterList__Group_1__1() throws RecognitionException {
        int rule__ParameterList__Group_1__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 378) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:5456:1: ( rule__ParameterList__Group_1__1__Impl )
            // InternalSimpleBeeLangTestLanguage.g:5457:2: rule__ParameterList__Group_1__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ParameterList__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 378, rule__ParameterList__Group_1__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterList__Group_1__1"


    // $ANTLR start "rule__ParameterList__Group_1__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:5463:1: rule__ParameterList__Group_1__1__Impl : ( ( rule__ParameterList__ParametersAssignment_1_1 ) ) ;
    public final void rule__ParameterList__Group_1__1__Impl() throws RecognitionException {
        int rule__ParameterList__Group_1__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 379) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:5467:1: ( ( ( rule__ParameterList__ParametersAssignment_1_1 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:5468:1: ( ( rule__ParameterList__ParametersAssignment_1_1 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:5468:1: ( ( rule__ParameterList__ParametersAssignment_1_1 ) )
            // InternalSimpleBeeLangTestLanguage.g:5469:2: ( rule__ParameterList__ParametersAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterListAccess().getParametersAssignment_1_1()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:5470:2: ( rule__ParameterList__ParametersAssignment_1_1 )
            // InternalSimpleBeeLangTestLanguage.g:5470:3: rule__ParameterList__ParametersAssignment_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ParameterList__ParametersAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterListAccess().getParametersAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 379, rule__ParameterList__Group_1__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterList__Group_1__1__Impl"


    // $ANTLR start "rule__ParameterDeclaration__Group__0"
    // InternalSimpleBeeLangTestLanguage.g:5479:1: rule__ParameterDeclaration__Group__0 : rule__ParameterDeclaration__Group__0__Impl rule__ParameterDeclaration__Group__1 ;
    public final void rule__ParameterDeclaration__Group__0() throws RecognitionException {
        int rule__ParameterDeclaration__Group__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 380) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:5483:1: ( rule__ParameterDeclaration__Group__0__Impl rule__ParameterDeclaration__Group__1 )
            // InternalSimpleBeeLangTestLanguage.g:5484:2: rule__ParameterDeclaration__Group__0__Impl rule__ParameterDeclaration__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_26);
            rule__ParameterDeclaration__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ParameterDeclaration__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 380, rule__ParameterDeclaration__Group__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterDeclaration__Group__0"


    // $ANTLR start "rule__ParameterDeclaration__Group__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:5491:1: rule__ParameterDeclaration__Group__0__Impl : ( ( rule__ParameterDeclaration__TypeAssignment_0 )? ) ;
    public final void rule__ParameterDeclaration__Group__0__Impl() throws RecognitionException {
        int rule__ParameterDeclaration__Group__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 381) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:5495:1: ( ( ( rule__ParameterDeclaration__TypeAssignment_0 )? ) )
            // InternalSimpleBeeLangTestLanguage.g:5496:1: ( ( rule__ParameterDeclaration__TypeAssignment_0 )? )
            {
            // InternalSimpleBeeLangTestLanguage.g:5496:1: ( ( rule__ParameterDeclaration__TypeAssignment_0 )? )
            // InternalSimpleBeeLangTestLanguage.g:5497:2: ( rule__ParameterDeclaration__TypeAssignment_0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterDeclarationAccess().getTypeAssignment_0()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:5498:2: ( rule__ParameterDeclaration__TypeAssignment_0 )?
            int alt45=2;
            int LA45_0 = input.LA(1);

            if ( (LA45_0==60) ) {
                alt45=1;
            }
            else if ( (LA45_0==RULE_ID) ) {
                int LA45_2 = input.LA(2);

                if ( (LA45_2==RULE_ID||LA45_2==28) ) {
                    alt45=1;
                }
            }
            switch (alt45) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:5498:3: rule__ParameterDeclaration__TypeAssignment_0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ParameterDeclaration__TypeAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterDeclarationAccess().getTypeAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 381, rule__ParameterDeclaration__Group__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterDeclaration__Group__0__Impl"


    // $ANTLR start "rule__ParameterDeclaration__Group__1"
    // InternalSimpleBeeLangTestLanguage.g:5506:1: rule__ParameterDeclaration__Group__1 : rule__ParameterDeclaration__Group__1__Impl ;
    public final void rule__ParameterDeclaration__Group__1() throws RecognitionException {
        int rule__ParameterDeclaration__Group__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 382) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:5510:1: ( rule__ParameterDeclaration__Group__1__Impl )
            // InternalSimpleBeeLangTestLanguage.g:5511:2: rule__ParameterDeclaration__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ParameterDeclaration__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 382, rule__ParameterDeclaration__Group__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterDeclaration__Group__1"


    // $ANTLR start "rule__ParameterDeclaration__Group__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:5517:1: rule__ParameterDeclaration__Group__1__Impl : ( ( rule__ParameterDeclaration__NameAssignment_1 ) ) ;
    public final void rule__ParameterDeclaration__Group__1__Impl() throws RecognitionException {
        int rule__ParameterDeclaration__Group__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 383) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:5521:1: ( ( ( rule__ParameterDeclaration__NameAssignment_1 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:5522:1: ( ( rule__ParameterDeclaration__NameAssignment_1 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:5522:1: ( ( rule__ParameterDeclaration__NameAssignment_1 ) )
            // InternalSimpleBeeLangTestLanguage.g:5523:2: ( rule__ParameterDeclaration__NameAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterDeclarationAccess().getNameAssignment_1()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:5524:2: ( rule__ParameterDeclaration__NameAssignment_1 )
            // InternalSimpleBeeLangTestLanguage.g:5524:3: rule__ParameterDeclaration__NameAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ParameterDeclaration__NameAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterDeclarationAccess().getNameAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 383, rule__ParameterDeclaration__Group__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterDeclaration__Group__1__Impl"


    // $ANTLR start "rule__Function__Group__0"
    // InternalSimpleBeeLangTestLanguage.g:5533:1: rule__Function__Group__0 : rule__Function__Group__0__Impl rule__Function__Group__1 ;
    public final void rule__Function__Group__0() throws RecognitionException {
        int rule__Function__Group__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 384) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:5537:1: ( rule__Function__Group__0__Impl rule__Function__Group__1 )
            // InternalSimpleBeeLangTestLanguage.g:5538:2: rule__Function__Group__0__Impl rule__Function__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_27);
            rule__Function__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Function__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 384, rule__Function__Group__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group__0"


    // $ANTLR start "rule__Function__Group__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:5545:1: rule__Function__Group__0__Impl : ( ( rule__Function__DocumentationAssignment_0 )? ) ;
    public final void rule__Function__Group__0__Impl() throws RecognitionException {
        int rule__Function__Group__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 385) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:5549:1: ( ( ( rule__Function__DocumentationAssignment_0 )? ) )
            // InternalSimpleBeeLangTestLanguage.g:5550:1: ( ( rule__Function__DocumentationAssignment_0 )? )
            {
            // InternalSimpleBeeLangTestLanguage.g:5550:1: ( ( rule__Function__DocumentationAssignment_0 )? )
            // InternalSimpleBeeLangTestLanguage.g:5551:2: ( rule__Function__DocumentationAssignment_0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getDocumentationAssignment_0()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:5552:2: ( rule__Function__DocumentationAssignment_0 )?
            int alt46=2;
            int LA46_0 = input.LA(1);

            if ( (LA46_0==RULE_DOCUMENTATION) ) {
                alt46=1;
            }
            switch (alt46) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:5552:3: rule__Function__DocumentationAssignment_0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__Function__DocumentationAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getDocumentationAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 385, rule__Function__Group__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group__0__Impl"


    // $ANTLR start "rule__Function__Group__1"
    // InternalSimpleBeeLangTestLanguage.g:5560:1: rule__Function__Group__1 : rule__Function__Group__1__Impl rule__Function__Group__2 ;
    public final void rule__Function__Group__1() throws RecognitionException {
        int rule__Function__Group__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 386) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:5564:1: ( rule__Function__Group__1__Impl rule__Function__Group__2 )
            // InternalSimpleBeeLangTestLanguage.g:5565:2: rule__Function__Group__1__Impl rule__Function__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_27);
            rule__Function__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Function__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 386, rule__Function__Group__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group__1"


    // $ANTLR start "rule__Function__Group__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:5572:1: rule__Function__Group__1__Impl : ( ( rule__Function__VisibilityAssignment_1 )? ) ;
    public final void rule__Function__Group__1__Impl() throws RecognitionException {
        int rule__Function__Group__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 387) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:5576:1: ( ( ( rule__Function__VisibilityAssignment_1 )? ) )
            // InternalSimpleBeeLangTestLanguage.g:5577:1: ( ( rule__Function__VisibilityAssignment_1 )? )
            {
            // InternalSimpleBeeLangTestLanguage.g:5577:1: ( ( rule__Function__VisibilityAssignment_1 )? )
            // InternalSimpleBeeLangTestLanguage.g:5578:2: ( rule__Function__VisibilityAssignment_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getVisibilityAssignment_1()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:5579:2: ( rule__Function__VisibilityAssignment_1 )?
            int alt47=2;
            int LA47_0 = input.LA(1);

            if ( (LA47_0==RULE_ID) ) {
                alt47=1;
            }
            switch (alt47) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:5579:3: rule__Function__VisibilityAssignment_1
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__Function__VisibilityAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getVisibilityAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 387, rule__Function__Group__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group__1__Impl"


    // $ANTLR start "rule__Function__Group__2"
    // InternalSimpleBeeLangTestLanguage.g:5587:1: rule__Function__Group__2 : rule__Function__Group__2__Impl rule__Function__Group__3 ;
    public final void rule__Function__Group__2() throws RecognitionException {
        int rule__Function__Group__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 388) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:5591:1: ( rule__Function__Group__2__Impl rule__Function__Group__3 )
            // InternalSimpleBeeLangTestLanguage.g:5592:2: rule__Function__Group__2__Impl rule__Function__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_27);
            rule__Function__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Function__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 388, rule__Function__Group__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group__2"


    // $ANTLR start "rule__Function__Group__2__Impl"
    // InternalSimpleBeeLangTestLanguage.g:5599:1: rule__Function__Group__2__Impl : ( ( rule__Function__FinalAssignment_2 )? ) ;
    public final void rule__Function__Group__2__Impl() throws RecognitionException {
        int rule__Function__Group__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 389) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:5603:1: ( ( ( rule__Function__FinalAssignment_2 )? ) )
            // InternalSimpleBeeLangTestLanguage.g:5604:1: ( ( rule__Function__FinalAssignment_2 )? )
            {
            // InternalSimpleBeeLangTestLanguage.g:5604:1: ( ( rule__Function__FinalAssignment_2 )? )
            // InternalSimpleBeeLangTestLanguage.g:5605:2: ( rule__Function__FinalAssignment_2 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getFinalAssignment_2()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:5606:2: ( rule__Function__FinalAssignment_2 )?
            int alt48=2;
            int LA48_0 = input.LA(1);

            if ( (LA48_0==74) ) {
                alt48=1;
            }
            switch (alt48) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:5606:3: rule__Function__FinalAssignment_2
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__Function__FinalAssignment_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getFinalAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 389, rule__Function__Group__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group__2__Impl"


    // $ANTLR start "rule__Function__Group__3"
    // InternalSimpleBeeLangTestLanguage.g:5614:1: rule__Function__Group__3 : rule__Function__Group__3__Impl rule__Function__Group__4 ;
    public final void rule__Function__Group__3() throws RecognitionException {
        int rule__Function__Group__3_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 390) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:5618:1: ( rule__Function__Group__3__Impl rule__Function__Group__4 )
            // InternalSimpleBeeLangTestLanguage.g:5619:2: rule__Function__Group__3__Impl rule__Function__Group__4
            {
            pushFollow(FollowSets000.FOLLOW_28);
            rule__Function__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Function__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 390, rule__Function__Group__3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group__3"


    // $ANTLR start "rule__Function__Group__3__Impl"
    // InternalSimpleBeeLangTestLanguage.g:5626:1: rule__Function__Group__3__Impl : ( 'function' ) ;
    public final void rule__Function__Group__3__Impl() throws RecognitionException {
        int rule__Function__Group__3__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 391) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:5630:1: ( ( 'function' ) )
            // InternalSimpleBeeLangTestLanguage.g:5631:1: ( 'function' )
            {
            // InternalSimpleBeeLangTestLanguage.g:5631:1: ( 'function' )
            // InternalSimpleBeeLangTestLanguage.g:5632:2: 'function'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getFunctionKeyword_3()); 
            }
            match(input,59,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getFunctionKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 391, rule__Function__Group__3__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group__3__Impl"


    // $ANTLR start "rule__Function__Group__4"
    // InternalSimpleBeeLangTestLanguage.g:5641:1: rule__Function__Group__4 : rule__Function__Group__4__Impl rule__Function__Group__5 ;
    public final void rule__Function__Group__4() throws RecognitionException {
        int rule__Function__Group__4_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 392) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:5645:1: ( rule__Function__Group__4__Impl rule__Function__Group__5 )
            // InternalSimpleBeeLangTestLanguage.g:5646:2: rule__Function__Group__4__Impl rule__Function__Group__5
            {
            pushFollow(FollowSets000.FOLLOW_28);
            rule__Function__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Function__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 392, rule__Function__Group__4_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group__4"


    // $ANTLR start "rule__Function__Group__4__Impl"
    // InternalSimpleBeeLangTestLanguage.g:5653:1: rule__Function__Group__4__Impl : ( ( rule__Function__ReturnTypeAssignment_4 )? ) ;
    public final void rule__Function__Group__4__Impl() throws RecognitionException {
        int rule__Function__Group__4__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 393) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:5657:1: ( ( ( rule__Function__ReturnTypeAssignment_4 )? ) )
            // InternalSimpleBeeLangTestLanguage.g:5658:1: ( ( rule__Function__ReturnTypeAssignment_4 )? )
            {
            // InternalSimpleBeeLangTestLanguage.g:5658:1: ( ( rule__Function__ReturnTypeAssignment_4 )? )
            // InternalSimpleBeeLangTestLanguage.g:5659:2: ( rule__Function__ReturnTypeAssignment_4 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getReturnTypeAssignment_4()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:5660:2: ( rule__Function__ReturnTypeAssignment_4 )?
            int alt49=2;
            int LA49_0 = input.LA(1);

            if ( (LA49_0==60) ) {
                alt49=1;
            }
            else if ( (LA49_0==RULE_ID) ) {
                int LA49_2 = input.LA(2);

                if ( (LA49_2==RULE_ID||LA49_2==28) ) {
                    alt49=1;
                }
            }
            switch (alt49) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:5660:3: rule__Function__ReturnTypeAssignment_4
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__Function__ReturnTypeAssignment_4();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getReturnTypeAssignment_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 393, rule__Function__Group__4__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group__4__Impl"


    // $ANTLR start "rule__Function__Group__5"
    // InternalSimpleBeeLangTestLanguage.g:5668:1: rule__Function__Group__5 : rule__Function__Group__5__Impl rule__Function__Group__6 ;
    public final void rule__Function__Group__5() throws RecognitionException {
        int rule__Function__Group__5_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 394) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:5672:1: ( rule__Function__Group__5__Impl rule__Function__Group__6 )
            // InternalSimpleBeeLangTestLanguage.g:5673:2: rule__Function__Group__5__Impl rule__Function__Group__6
            {
            pushFollow(FollowSets000.FOLLOW_29);
            rule__Function__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Function__Group__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 394, rule__Function__Group__5_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group__5"


    // $ANTLR start "rule__Function__Group__5__Impl"
    // InternalSimpleBeeLangTestLanguage.g:5680:1: rule__Function__Group__5__Impl : ( ( rule__Function__NameAssignment_5 ) ) ;
    public final void rule__Function__Group__5__Impl() throws RecognitionException {
        int rule__Function__Group__5__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 395) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:5684:1: ( ( ( rule__Function__NameAssignment_5 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:5685:1: ( ( rule__Function__NameAssignment_5 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:5685:1: ( ( rule__Function__NameAssignment_5 ) )
            // InternalSimpleBeeLangTestLanguage.g:5686:2: ( rule__Function__NameAssignment_5 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getNameAssignment_5()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:5687:2: ( rule__Function__NameAssignment_5 )
            // InternalSimpleBeeLangTestLanguage.g:5687:3: rule__Function__NameAssignment_5
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Function__NameAssignment_5();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getNameAssignment_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 395, rule__Function__Group__5__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group__5__Impl"


    // $ANTLR start "rule__Function__Group__6"
    // InternalSimpleBeeLangTestLanguage.g:5695:1: rule__Function__Group__6 : rule__Function__Group__6__Impl rule__Function__Group__7 ;
    public final void rule__Function__Group__6() throws RecognitionException {
        int rule__Function__Group__6_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 396) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:5699:1: ( rule__Function__Group__6__Impl rule__Function__Group__7 )
            // InternalSimpleBeeLangTestLanguage.g:5700:2: rule__Function__Group__6__Impl rule__Function__Group__7
            {
            pushFollow(FollowSets000.FOLLOW_29);
            rule__Function__Group__6__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Function__Group__7();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 396, rule__Function__Group__6_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group__6"


    // $ANTLR start "rule__Function__Group__6__Impl"
    // InternalSimpleBeeLangTestLanguage.g:5707:1: rule__Function__Group__6__Impl : ( ( rule__Function__Group_6__0 )? ) ;
    public final void rule__Function__Group__6__Impl() throws RecognitionException {
        int rule__Function__Group__6__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 397) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:5711:1: ( ( ( rule__Function__Group_6__0 )? ) )
            // InternalSimpleBeeLangTestLanguage.g:5712:1: ( ( rule__Function__Group_6__0 )? )
            {
            // InternalSimpleBeeLangTestLanguage.g:5712:1: ( ( rule__Function__Group_6__0 )? )
            // InternalSimpleBeeLangTestLanguage.g:5713:2: ( rule__Function__Group_6__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getGroup_6()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:5714:2: ( rule__Function__Group_6__0 )?
            int alt50=2;
            int LA50_0 = input.LA(1);

            if ( (LA50_0==60) ) {
                alt50=1;
            }
            switch (alt50) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:5714:3: rule__Function__Group_6__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__Function__Group_6__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getGroup_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 397, rule__Function__Group__6__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group__6__Impl"


    // $ANTLR start "rule__Function__Group__7"
    // InternalSimpleBeeLangTestLanguage.g:5722:1: rule__Function__Group__7 : rule__Function__Group__7__Impl rule__Function__Group__8 ;
    public final void rule__Function__Group__7() throws RecognitionException {
        int rule__Function__Group__7_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 398) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:5726:1: ( rule__Function__Group__7__Impl rule__Function__Group__8 )
            // InternalSimpleBeeLangTestLanguage.g:5727:2: rule__Function__Group__7__Impl rule__Function__Group__8
            {
            pushFollow(FollowSets000.FOLLOW_29);
            rule__Function__Group__7__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Function__Group__8();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 398, rule__Function__Group__7_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group__7"


    // $ANTLR start "rule__Function__Group__7__Impl"
    // InternalSimpleBeeLangTestLanguage.g:5734:1: rule__Function__Group__7__Impl : ( ( rule__Function__Group_7__0 )? ) ;
    public final void rule__Function__Group__7__Impl() throws RecognitionException {
        int rule__Function__Group__7__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 399) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:5738:1: ( ( ( rule__Function__Group_7__0 )? ) )
            // InternalSimpleBeeLangTestLanguage.g:5739:1: ( ( rule__Function__Group_7__0 )? )
            {
            // InternalSimpleBeeLangTestLanguage.g:5739:1: ( ( rule__Function__Group_7__0 )? )
            // InternalSimpleBeeLangTestLanguage.g:5740:2: ( rule__Function__Group_7__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getGroup_7()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:5741:2: ( rule__Function__Group_7__0 )?
            int alt51=2;
            int LA51_0 = input.LA(1);

            if ( (LA51_0==54) ) {
                alt51=1;
            }
            switch (alt51) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:5741:3: rule__Function__Group_7__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__Function__Group_7__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getGroup_7()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 399, rule__Function__Group__7__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group__7__Impl"


    // $ANTLR start "rule__Function__Group__8"
    // InternalSimpleBeeLangTestLanguage.g:5749:1: rule__Function__Group__8 : rule__Function__Group__8__Impl ;
    public final void rule__Function__Group__8() throws RecognitionException {
        int rule__Function__Group__8_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 400) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:5753:1: ( rule__Function__Group__8__Impl )
            // InternalSimpleBeeLangTestLanguage.g:5754:2: rule__Function__Group__8__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Function__Group__8__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 400, rule__Function__Group__8_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group__8"

}

@SuppressWarnings("all")
abstract class InternalSimpleBeeLangTestLanguageParser6 extends InternalSimpleBeeLangTestLanguageParser5 {

        InternalSimpleBeeLangTestLanguageParser6(TokenStream input) {
            this(input, new RecognizerSharedState());
        }

        InternalSimpleBeeLangTestLanguageParser6(TokenStream input, RecognizerSharedState state) {
            super(input, state);
        }

    // $ANTLR start "rule__Function__Group__8__Impl"
    // InternalSimpleBeeLangTestLanguage.g:5760:1: rule__Function__Group__8__Impl : ( ( rule__Function__Alternatives_8 ) ) ;
    public final void rule__Function__Group__8__Impl() throws RecognitionException {
        int rule__Function__Group__8__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 401) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:5764:1: ( ( ( rule__Function__Alternatives_8 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:5765:1: ( ( rule__Function__Alternatives_8 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:5765:1: ( ( rule__Function__Alternatives_8 ) )
            // InternalSimpleBeeLangTestLanguage.g:5766:2: ( rule__Function__Alternatives_8 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getAlternatives_8()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:5767:2: ( rule__Function__Alternatives_8 )
            // InternalSimpleBeeLangTestLanguage.g:5767:3: rule__Function__Alternatives_8
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Function__Alternatives_8();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getAlternatives_8()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 401, rule__Function__Group__8__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group__8__Impl"


    // $ANTLR start "rule__Function__Group_6__0"
    // InternalSimpleBeeLangTestLanguage.g:5776:1: rule__Function__Group_6__0 : rule__Function__Group_6__0__Impl rule__Function__Group_6__1 ;
    public final void rule__Function__Group_6__0() throws RecognitionException {
        int rule__Function__Group_6__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 402) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:5780:1: ( rule__Function__Group_6__0__Impl rule__Function__Group_6__1 )
            // InternalSimpleBeeLangTestLanguage.g:5781:2: rule__Function__Group_6__0__Impl rule__Function__Group_6__1
            {
            pushFollow(FollowSets000.FOLLOW_30);
            rule__Function__Group_6__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Function__Group_6__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 402, rule__Function__Group_6__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_6__0"


    // $ANTLR start "rule__Function__Group_6__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:5788:1: rule__Function__Group_6__0__Impl : ( '(' ) ;
    public final void rule__Function__Group_6__0__Impl() throws RecognitionException {
        int rule__Function__Group_6__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 403) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:5792:1: ( ( '(' ) )
            // InternalSimpleBeeLangTestLanguage.g:5793:1: ( '(' )
            {
            // InternalSimpleBeeLangTestLanguage.g:5793:1: ( '(' )
            // InternalSimpleBeeLangTestLanguage.g:5794:2: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getLeftParenthesisKeyword_6_0()); 
            }
            match(input,60,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getLeftParenthesisKeyword_6_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 403, rule__Function__Group_6__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_6__0__Impl"


    // $ANTLR start "rule__Function__Group_6__1"
    // InternalSimpleBeeLangTestLanguage.g:5803:1: rule__Function__Group_6__1 : rule__Function__Group_6__1__Impl rule__Function__Group_6__2 ;
    public final void rule__Function__Group_6__1() throws RecognitionException {
        int rule__Function__Group_6__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 404) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:5807:1: ( rule__Function__Group_6__1__Impl rule__Function__Group_6__2 )
            // InternalSimpleBeeLangTestLanguage.g:5808:2: rule__Function__Group_6__1__Impl rule__Function__Group_6__2
            {
            pushFollow(FollowSets000.FOLLOW_30);
            rule__Function__Group_6__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Function__Group_6__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 404, rule__Function__Group_6__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_6__1"


    // $ANTLR start "rule__Function__Group_6__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:5815:1: rule__Function__Group_6__1__Impl : ( ( rule__Function__Alternatives_6_1 )? ) ;
    public final void rule__Function__Group_6__1__Impl() throws RecognitionException {
        int rule__Function__Group_6__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 405) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:5819:1: ( ( ( rule__Function__Alternatives_6_1 )? ) )
            // InternalSimpleBeeLangTestLanguage.g:5820:1: ( ( rule__Function__Alternatives_6_1 )? )
            {
            // InternalSimpleBeeLangTestLanguage.g:5820:1: ( ( rule__Function__Alternatives_6_1 )? )
            // InternalSimpleBeeLangTestLanguage.g:5821:2: ( rule__Function__Alternatives_6_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getAlternatives_6_1()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:5822:2: ( rule__Function__Alternatives_6_1 )?
            int alt52=2;
            int LA52_0 = input.LA(1);

            if ( (LA52_0==RULE_ID||LA52_0==60||LA52_0==75) ) {
                alt52=1;
            }
            switch (alt52) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:5822:3: rule__Function__Alternatives_6_1
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__Function__Alternatives_6_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getAlternatives_6_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 405, rule__Function__Group_6__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_6__1__Impl"


    // $ANTLR start "rule__Function__Group_6__2"
    // InternalSimpleBeeLangTestLanguage.g:5830:1: rule__Function__Group_6__2 : rule__Function__Group_6__2__Impl ;
    public final void rule__Function__Group_6__2() throws RecognitionException {
        int rule__Function__Group_6__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 406) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:5834:1: ( rule__Function__Group_6__2__Impl )
            // InternalSimpleBeeLangTestLanguage.g:5835:2: rule__Function__Group_6__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Function__Group_6__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 406, rule__Function__Group_6__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_6__2"


    // $ANTLR start "rule__Function__Group_6__2__Impl"
    // InternalSimpleBeeLangTestLanguage.g:5841:1: rule__Function__Group_6__2__Impl : ( ')' ) ;
    public final void rule__Function__Group_6__2__Impl() throws RecognitionException {
        int rule__Function__Group_6__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 407) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:5845:1: ( ( ')' ) )
            // InternalSimpleBeeLangTestLanguage.g:5846:1: ( ')' )
            {
            // InternalSimpleBeeLangTestLanguage.g:5846:1: ( ')' )
            // InternalSimpleBeeLangTestLanguage.g:5847:2: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getRightParenthesisKeyword_6_2()); 
            }
            match(input,61,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getRightParenthesisKeyword_6_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 407, rule__Function__Group_6__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_6__2__Impl"


    // $ANTLR start "rule__Function__Group_6_1_0__0"
    // InternalSimpleBeeLangTestLanguage.g:5857:1: rule__Function__Group_6_1_0__0 : rule__Function__Group_6_1_0__0__Impl rule__Function__Group_6_1_0__1 ;
    public final void rule__Function__Group_6_1_0__0() throws RecognitionException {
        int rule__Function__Group_6_1_0__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 408) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:5861:1: ( rule__Function__Group_6_1_0__0__Impl rule__Function__Group_6_1_0__1 )
            // InternalSimpleBeeLangTestLanguage.g:5862:2: rule__Function__Group_6_1_0__0__Impl rule__Function__Group_6_1_0__1
            {
            pushFollow(FollowSets000.FOLLOW_10);
            rule__Function__Group_6_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Function__Group_6_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 408, rule__Function__Group_6_1_0__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_6_1_0__0"


    // $ANTLR start "rule__Function__Group_6_1_0__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:5869:1: rule__Function__Group_6_1_0__0__Impl : ( ( rule__Function__ParametersAssignment_6_1_0_0 ) ) ;
    public final void rule__Function__Group_6_1_0__0__Impl() throws RecognitionException {
        int rule__Function__Group_6_1_0__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 409) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:5873:1: ( ( ( rule__Function__ParametersAssignment_6_1_0_0 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:5874:1: ( ( rule__Function__ParametersAssignment_6_1_0_0 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:5874:1: ( ( rule__Function__ParametersAssignment_6_1_0_0 ) )
            // InternalSimpleBeeLangTestLanguage.g:5875:2: ( rule__Function__ParametersAssignment_6_1_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getParametersAssignment_6_1_0_0()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:5876:2: ( rule__Function__ParametersAssignment_6_1_0_0 )
            // InternalSimpleBeeLangTestLanguage.g:5876:3: rule__Function__ParametersAssignment_6_1_0_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Function__ParametersAssignment_6_1_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getParametersAssignment_6_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 409, rule__Function__Group_6_1_0__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_6_1_0__0__Impl"


    // $ANTLR start "rule__Function__Group_6_1_0__1"
    // InternalSimpleBeeLangTestLanguage.g:5884:1: rule__Function__Group_6_1_0__1 : rule__Function__Group_6_1_0__1__Impl rule__Function__Group_6_1_0__2 ;
    public final void rule__Function__Group_6_1_0__1() throws RecognitionException {
        int rule__Function__Group_6_1_0__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 410) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:5888:1: ( rule__Function__Group_6_1_0__1__Impl rule__Function__Group_6_1_0__2 )
            // InternalSimpleBeeLangTestLanguage.g:5889:2: rule__Function__Group_6_1_0__1__Impl rule__Function__Group_6_1_0__2
            {
            pushFollow(FollowSets000.FOLLOW_10);
            rule__Function__Group_6_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Function__Group_6_1_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 410, rule__Function__Group_6_1_0__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_6_1_0__1"


    // $ANTLR start "rule__Function__Group_6_1_0__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:5896:1: rule__Function__Group_6_1_0__1__Impl : ( ( rule__Function__Group_6_1_0_1__0 )* ) ;
    public final void rule__Function__Group_6_1_0__1__Impl() throws RecognitionException {
        int rule__Function__Group_6_1_0__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 411) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:5900:1: ( ( ( rule__Function__Group_6_1_0_1__0 )* ) )
            // InternalSimpleBeeLangTestLanguage.g:5901:1: ( ( rule__Function__Group_6_1_0_1__0 )* )
            {
            // InternalSimpleBeeLangTestLanguage.g:5901:1: ( ( rule__Function__Group_6_1_0_1__0 )* )
            // InternalSimpleBeeLangTestLanguage.g:5902:2: ( rule__Function__Group_6_1_0_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getGroup_6_1_0_1()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:5903:2: ( rule__Function__Group_6_1_0_1__0 )*
            loop53:
            do {
                int alt53=2;
                int LA53_0 = input.LA(1);

                if ( (LA53_0==48) ) {
                    int LA53_1 = input.LA(2);

                    if ( (LA53_1==RULE_ID||LA53_1==60) ) {
                        alt53=1;
                    }


                }


                switch (alt53) {
            	case 1 :
            	    // InternalSimpleBeeLangTestLanguage.g:5903:3: rule__Function__Group_6_1_0_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_11);
            	    rule__Function__Group_6_1_0_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop53;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getGroup_6_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 411, rule__Function__Group_6_1_0__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_6_1_0__1__Impl"


    // $ANTLR start "rule__Function__Group_6_1_0__2"
    // InternalSimpleBeeLangTestLanguage.g:5911:1: rule__Function__Group_6_1_0__2 : rule__Function__Group_6_1_0__2__Impl ;
    public final void rule__Function__Group_6_1_0__2() throws RecognitionException {
        int rule__Function__Group_6_1_0__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 412) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:5915:1: ( rule__Function__Group_6_1_0__2__Impl )
            // InternalSimpleBeeLangTestLanguage.g:5916:2: rule__Function__Group_6_1_0__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Function__Group_6_1_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 412, rule__Function__Group_6_1_0__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_6_1_0__2"


    // $ANTLR start "rule__Function__Group_6_1_0__2__Impl"
    // InternalSimpleBeeLangTestLanguage.g:5922:1: rule__Function__Group_6_1_0__2__Impl : ( ( rule__Function__Group_6_1_0_2__0 )? ) ;
    public final void rule__Function__Group_6_1_0__2__Impl() throws RecognitionException {
        int rule__Function__Group_6_1_0__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 413) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:5926:1: ( ( ( rule__Function__Group_6_1_0_2__0 )? ) )
            // InternalSimpleBeeLangTestLanguage.g:5927:1: ( ( rule__Function__Group_6_1_0_2__0 )? )
            {
            // InternalSimpleBeeLangTestLanguage.g:5927:1: ( ( rule__Function__Group_6_1_0_2__0 )? )
            // InternalSimpleBeeLangTestLanguage.g:5928:2: ( rule__Function__Group_6_1_0_2__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getGroup_6_1_0_2()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:5929:2: ( rule__Function__Group_6_1_0_2__0 )?
            int alt54=2;
            int LA54_0 = input.LA(1);

            if ( (LA54_0==48) ) {
                alt54=1;
            }
            switch (alt54) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:5929:3: rule__Function__Group_6_1_0_2__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__Function__Group_6_1_0_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getGroup_6_1_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 413, rule__Function__Group_6_1_0__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_6_1_0__2__Impl"


    // $ANTLR start "rule__Function__Group_6_1_0_1__0"
    // InternalSimpleBeeLangTestLanguage.g:5938:1: rule__Function__Group_6_1_0_1__0 : rule__Function__Group_6_1_0_1__0__Impl rule__Function__Group_6_1_0_1__1 ;
    public final void rule__Function__Group_6_1_0_1__0() throws RecognitionException {
        int rule__Function__Group_6_1_0_1__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 414) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:5942:1: ( rule__Function__Group_6_1_0_1__0__Impl rule__Function__Group_6_1_0_1__1 )
            // InternalSimpleBeeLangTestLanguage.g:5943:2: rule__Function__Group_6_1_0_1__0__Impl rule__Function__Group_6_1_0_1__1
            {
            pushFollow(FollowSets000.FOLLOW_26);
            rule__Function__Group_6_1_0_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Function__Group_6_1_0_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 414, rule__Function__Group_6_1_0_1__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_6_1_0_1__0"


    // $ANTLR start "rule__Function__Group_6_1_0_1__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:5950:1: rule__Function__Group_6_1_0_1__0__Impl : ( ',' ) ;
    public final void rule__Function__Group_6_1_0_1__0__Impl() throws RecognitionException {
        int rule__Function__Group_6_1_0_1__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 415) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:5954:1: ( ( ',' ) )
            // InternalSimpleBeeLangTestLanguage.g:5955:1: ( ',' )
            {
            // InternalSimpleBeeLangTestLanguage.g:5955:1: ( ',' )
            // InternalSimpleBeeLangTestLanguage.g:5956:2: ','
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getCommaKeyword_6_1_0_1_0()); 
            }
            match(input,48,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getCommaKeyword_6_1_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 415, rule__Function__Group_6_1_0_1__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_6_1_0_1__0__Impl"


    // $ANTLR start "rule__Function__Group_6_1_0_1__1"
    // InternalSimpleBeeLangTestLanguage.g:5965:1: rule__Function__Group_6_1_0_1__1 : rule__Function__Group_6_1_0_1__1__Impl ;
    public final void rule__Function__Group_6_1_0_1__1() throws RecognitionException {
        int rule__Function__Group_6_1_0_1__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 416) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:5969:1: ( rule__Function__Group_6_1_0_1__1__Impl )
            // InternalSimpleBeeLangTestLanguage.g:5970:2: rule__Function__Group_6_1_0_1__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Function__Group_6_1_0_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 416, rule__Function__Group_6_1_0_1__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_6_1_0_1__1"


    // $ANTLR start "rule__Function__Group_6_1_0_1__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:5976:1: rule__Function__Group_6_1_0_1__1__Impl : ( ( rule__Function__ParametersAssignment_6_1_0_1_1 ) ) ;
    public final void rule__Function__Group_6_1_0_1__1__Impl() throws RecognitionException {
        int rule__Function__Group_6_1_0_1__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 417) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:5980:1: ( ( ( rule__Function__ParametersAssignment_6_1_0_1_1 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:5981:1: ( ( rule__Function__ParametersAssignment_6_1_0_1_1 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:5981:1: ( ( rule__Function__ParametersAssignment_6_1_0_1_1 ) )
            // InternalSimpleBeeLangTestLanguage.g:5982:2: ( rule__Function__ParametersAssignment_6_1_0_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getParametersAssignment_6_1_0_1_1()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:5983:2: ( rule__Function__ParametersAssignment_6_1_0_1_1 )
            // InternalSimpleBeeLangTestLanguage.g:5983:3: rule__Function__ParametersAssignment_6_1_0_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Function__ParametersAssignment_6_1_0_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getParametersAssignment_6_1_0_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 417, rule__Function__Group_6_1_0_1__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_6_1_0_1__1__Impl"


    // $ANTLR start "rule__Function__Group_6_1_0_2__0"
    // InternalSimpleBeeLangTestLanguage.g:5992:1: rule__Function__Group_6_1_0_2__0 : rule__Function__Group_6_1_0_2__0__Impl rule__Function__Group_6_1_0_2__1 ;
    public final void rule__Function__Group_6_1_0_2__0() throws RecognitionException {
        int rule__Function__Group_6_1_0_2__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 418) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:5996:1: ( rule__Function__Group_6_1_0_2__0__Impl rule__Function__Group_6_1_0_2__1 )
            // InternalSimpleBeeLangTestLanguage.g:5997:2: rule__Function__Group_6_1_0_2__0__Impl rule__Function__Group_6_1_0_2__1
            {
            pushFollow(FollowSets000.FOLLOW_31);
            rule__Function__Group_6_1_0_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Function__Group_6_1_0_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 418, rule__Function__Group_6_1_0_2__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_6_1_0_2__0"


    // $ANTLR start "rule__Function__Group_6_1_0_2__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:6004:1: rule__Function__Group_6_1_0_2__0__Impl : ( ',' ) ;
    public final void rule__Function__Group_6_1_0_2__0__Impl() throws RecognitionException {
        int rule__Function__Group_6_1_0_2__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 419) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:6008:1: ( ( ',' ) )
            // InternalSimpleBeeLangTestLanguage.g:6009:1: ( ',' )
            {
            // InternalSimpleBeeLangTestLanguage.g:6009:1: ( ',' )
            // InternalSimpleBeeLangTestLanguage.g:6010:2: ','
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getCommaKeyword_6_1_0_2_0()); 
            }
            match(input,48,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getCommaKeyword_6_1_0_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 419, rule__Function__Group_6_1_0_2__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_6_1_0_2__0__Impl"


    // $ANTLR start "rule__Function__Group_6_1_0_2__1"
    // InternalSimpleBeeLangTestLanguage.g:6019:1: rule__Function__Group_6_1_0_2__1 : rule__Function__Group_6_1_0_2__1__Impl rule__Function__Group_6_1_0_2__2 ;
    public final void rule__Function__Group_6_1_0_2__1() throws RecognitionException {
        int rule__Function__Group_6_1_0_2__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 420) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:6023:1: ( rule__Function__Group_6_1_0_2__1__Impl rule__Function__Group_6_1_0_2__2 )
            // InternalSimpleBeeLangTestLanguage.g:6024:2: rule__Function__Group_6_1_0_2__1__Impl rule__Function__Group_6_1_0_2__2
            {
            pushFollow(FollowSets000.FOLLOW_26);
            rule__Function__Group_6_1_0_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Function__Group_6_1_0_2__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 420, rule__Function__Group_6_1_0_2__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_6_1_0_2__1"


    // $ANTLR start "rule__Function__Group_6_1_0_2__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:6031:1: rule__Function__Group_6_1_0_2__1__Impl : ( ( rule__Function__VarArgsAssignment_6_1_0_2_1 ) ) ;
    public final void rule__Function__Group_6_1_0_2__1__Impl() throws RecognitionException {
        int rule__Function__Group_6_1_0_2__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 421) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:6035:1: ( ( ( rule__Function__VarArgsAssignment_6_1_0_2_1 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:6036:1: ( ( rule__Function__VarArgsAssignment_6_1_0_2_1 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:6036:1: ( ( rule__Function__VarArgsAssignment_6_1_0_2_1 ) )
            // InternalSimpleBeeLangTestLanguage.g:6037:2: ( rule__Function__VarArgsAssignment_6_1_0_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getVarArgsAssignment_6_1_0_2_1()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:6038:2: ( rule__Function__VarArgsAssignment_6_1_0_2_1 )
            // InternalSimpleBeeLangTestLanguage.g:6038:3: rule__Function__VarArgsAssignment_6_1_0_2_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Function__VarArgsAssignment_6_1_0_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getVarArgsAssignment_6_1_0_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 421, rule__Function__Group_6_1_0_2__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_6_1_0_2__1__Impl"


    // $ANTLR start "rule__Function__Group_6_1_0_2__2"
    // InternalSimpleBeeLangTestLanguage.g:6046:1: rule__Function__Group_6_1_0_2__2 : rule__Function__Group_6_1_0_2__2__Impl ;
    public final void rule__Function__Group_6_1_0_2__2() throws RecognitionException {
        int rule__Function__Group_6_1_0_2__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 422) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:6050:1: ( rule__Function__Group_6_1_0_2__2__Impl )
            // InternalSimpleBeeLangTestLanguage.g:6051:2: rule__Function__Group_6_1_0_2__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Function__Group_6_1_0_2__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 422, rule__Function__Group_6_1_0_2__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_6_1_0_2__2"


    // $ANTLR start "rule__Function__Group_6_1_0_2__2__Impl"
    // InternalSimpleBeeLangTestLanguage.g:6057:1: rule__Function__Group_6_1_0_2__2__Impl : ( ( rule__Function__ParametersAssignment_6_1_0_2_2 ) ) ;
    public final void rule__Function__Group_6_1_0_2__2__Impl() throws RecognitionException {
        int rule__Function__Group_6_1_0_2__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 423) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:6061:1: ( ( ( rule__Function__ParametersAssignment_6_1_0_2_2 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:6062:1: ( ( rule__Function__ParametersAssignment_6_1_0_2_2 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:6062:1: ( ( rule__Function__ParametersAssignment_6_1_0_2_2 ) )
            // InternalSimpleBeeLangTestLanguage.g:6063:2: ( rule__Function__ParametersAssignment_6_1_0_2_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getParametersAssignment_6_1_0_2_2()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:6064:2: ( rule__Function__ParametersAssignment_6_1_0_2_2 )
            // InternalSimpleBeeLangTestLanguage.g:6064:3: rule__Function__ParametersAssignment_6_1_0_2_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Function__ParametersAssignment_6_1_0_2_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getParametersAssignment_6_1_0_2_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 423, rule__Function__Group_6_1_0_2__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_6_1_0_2__2__Impl"


    // $ANTLR start "rule__Function__Group_6_1_1__0"
    // InternalSimpleBeeLangTestLanguage.g:6073:1: rule__Function__Group_6_1_1__0 : rule__Function__Group_6_1_1__0__Impl rule__Function__Group_6_1_1__1 ;
    public final void rule__Function__Group_6_1_1__0() throws RecognitionException {
        int rule__Function__Group_6_1_1__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 424) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:6077:1: ( rule__Function__Group_6_1_1__0__Impl rule__Function__Group_6_1_1__1 )
            // InternalSimpleBeeLangTestLanguage.g:6078:2: rule__Function__Group_6_1_1__0__Impl rule__Function__Group_6_1_1__1
            {
            pushFollow(FollowSets000.FOLLOW_26);
            rule__Function__Group_6_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Function__Group_6_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 424, rule__Function__Group_6_1_1__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_6_1_1__0"


    // $ANTLR start "rule__Function__Group_6_1_1__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:6085:1: rule__Function__Group_6_1_1__0__Impl : ( ( rule__Function__VarArgsAssignment_6_1_1_0 ) ) ;
    public final void rule__Function__Group_6_1_1__0__Impl() throws RecognitionException {
        int rule__Function__Group_6_1_1__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 425) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:6089:1: ( ( ( rule__Function__VarArgsAssignment_6_1_1_0 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:6090:1: ( ( rule__Function__VarArgsAssignment_6_1_1_0 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:6090:1: ( ( rule__Function__VarArgsAssignment_6_1_1_0 ) )
            // InternalSimpleBeeLangTestLanguage.g:6091:2: ( rule__Function__VarArgsAssignment_6_1_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getVarArgsAssignment_6_1_1_0()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:6092:2: ( rule__Function__VarArgsAssignment_6_1_1_0 )
            // InternalSimpleBeeLangTestLanguage.g:6092:3: rule__Function__VarArgsAssignment_6_1_1_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Function__VarArgsAssignment_6_1_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getVarArgsAssignment_6_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 425, rule__Function__Group_6_1_1__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_6_1_1__0__Impl"


    // $ANTLR start "rule__Function__Group_6_1_1__1"
    // InternalSimpleBeeLangTestLanguage.g:6100:1: rule__Function__Group_6_1_1__1 : rule__Function__Group_6_1_1__1__Impl ;
    public final void rule__Function__Group_6_1_1__1() throws RecognitionException {
        int rule__Function__Group_6_1_1__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 426) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:6104:1: ( rule__Function__Group_6_1_1__1__Impl )
            // InternalSimpleBeeLangTestLanguage.g:6105:2: rule__Function__Group_6_1_1__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Function__Group_6_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 426, rule__Function__Group_6_1_1__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_6_1_1__1"


    // $ANTLR start "rule__Function__Group_6_1_1__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:6111:1: rule__Function__Group_6_1_1__1__Impl : ( ( rule__Function__ParametersAssignment_6_1_1_1 ) ) ;
    public final void rule__Function__Group_6_1_1__1__Impl() throws RecognitionException {
        int rule__Function__Group_6_1_1__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 427) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:6115:1: ( ( ( rule__Function__ParametersAssignment_6_1_1_1 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:6116:1: ( ( rule__Function__ParametersAssignment_6_1_1_1 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:6116:1: ( ( rule__Function__ParametersAssignment_6_1_1_1 ) )
            // InternalSimpleBeeLangTestLanguage.g:6117:2: ( rule__Function__ParametersAssignment_6_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getParametersAssignment_6_1_1_1()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:6118:2: ( rule__Function__ParametersAssignment_6_1_1_1 )
            // InternalSimpleBeeLangTestLanguage.g:6118:3: rule__Function__ParametersAssignment_6_1_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Function__ParametersAssignment_6_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getParametersAssignment_6_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 427, rule__Function__Group_6_1_1__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_6_1_1__1__Impl"


    // $ANTLR start "rule__Function__Group_7__0"
    // InternalSimpleBeeLangTestLanguage.g:6127:1: rule__Function__Group_7__0 : rule__Function__Group_7__0__Impl rule__Function__Group_7__1 ;
    public final void rule__Function__Group_7__0() throws RecognitionException {
        int rule__Function__Group_7__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 428) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:6131:1: ( rule__Function__Group_7__0__Impl rule__Function__Group_7__1 )
            // InternalSimpleBeeLangTestLanguage.g:6132:2: rule__Function__Group_7__0__Impl rule__Function__Group_7__1
            {
            pushFollow(FollowSets000.FOLLOW_32);
            rule__Function__Group_7__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Function__Group_7__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 428, rule__Function__Group_7__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_7__0"


    // $ANTLR start "rule__Function__Group_7__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:6139:1: rule__Function__Group_7__0__Impl : ( 'when' ) ;
    public final void rule__Function__Group_7__0__Impl() throws RecognitionException {
        int rule__Function__Group_7__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 429) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:6143:1: ( ( 'when' ) )
            // InternalSimpleBeeLangTestLanguage.g:6144:1: ( 'when' )
            {
            // InternalSimpleBeeLangTestLanguage.g:6144:1: ( 'when' )
            // InternalSimpleBeeLangTestLanguage.g:6145:2: 'when'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getWhenKeyword_7_0()); 
            }
            match(input,54,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getWhenKeyword_7_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 429, rule__Function__Group_7__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_7__0__Impl"


    // $ANTLR start "rule__Function__Group_7__1"
    // InternalSimpleBeeLangTestLanguage.g:6154:1: rule__Function__Group_7__1 : rule__Function__Group_7__1__Impl ;
    public final void rule__Function__Group_7__1() throws RecognitionException {
        int rule__Function__Group_7__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 430) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:6158:1: ( rule__Function__Group_7__1__Impl )
            // InternalSimpleBeeLangTestLanguage.g:6159:2: rule__Function__Group_7__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Function__Group_7__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 430, rule__Function__Group_7__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_7__1"


    // $ANTLR start "rule__Function__Group_7__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:6165:1: rule__Function__Group_7__1__Impl : ( ( rule__Function__GuardAssignment_7_1 ) ) ;
    public final void rule__Function__Group_7__1__Impl() throws RecognitionException {
        int rule__Function__Group_7__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 431) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:6169:1: ( ( ( rule__Function__GuardAssignment_7_1 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:6170:1: ( ( rule__Function__GuardAssignment_7_1 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:6170:1: ( ( rule__Function__GuardAssignment_7_1 ) )
            // InternalSimpleBeeLangTestLanguage.g:6171:2: ( rule__Function__GuardAssignment_7_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getGuardAssignment_7_1()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:6172:2: ( rule__Function__GuardAssignment_7_1 )
            // InternalSimpleBeeLangTestLanguage.g:6172:3: rule__Function__GuardAssignment_7_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Function__GuardAssignment_7_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getGuardAssignment_7_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 431, rule__Function__Group_7__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_7__1__Impl"


    // $ANTLR start "rule__Function__Group_8_0__0"
    // InternalSimpleBeeLangTestLanguage.g:6181:1: rule__Function__Group_8_0__0 : rule__Function__Group_8_0__0__Impl rule__Function__Group_8_0__1 ;
    public final void rule__Function__Group_8_0__0() throws RecognitionException {
        int rule__Function__Group_8_0__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 432) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:6185:1: ( rule__Function__Group_8_0__0__Impl rule__Function__Group_8_0__1 )
            // InternalSimpleBeeLangTestLanguage.g:6186:2: rule__Function__Group_8_0__0__Impl rule__Function__Group_8_0__1
            {
            pushFollow(FollowSets000.FOLLOW_19);
            rule__Function__Group_8_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Function__Group_8_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 432, rule__Function__Group_8_0__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_8_0__0"


    // $ANTLR start "rule__Function__Group_8_0__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:6193:1: rule__Function__Group_8_0__0__Impl : ( ':' ) ;
    public final void rule__Function__Group_8_0__0__Impl() throws RecognitionException {
        int rule__Function__Group_8_0__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 433) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:6197:1: ( ( ':' ) )
            // InternalSimpleBeeLangTestLanguage.g:6198:1: ( ':' )
            {
            // InternalSimpleBeeLangTestLanguage.g:6198:1: ( ':' )
            // InternalSimpleBeeLangTestLanguage.g:6199:2: ':'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getColonKeyword_8_0_0()); 
            }
            match(input,49,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getColonKeyword_8_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 433, rule__Function__Group_8_0__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_8_0__0__Impl"


    // $ANTLR start "rule__Function__Group_8_0__1"
    // InternalSimpleBeeLangTestLanguage.g:6208:1: rule__Function__Group_8_0__1 : rule__Function__Group_8_0__1__Impl rule__Function__Group_8_0__2 ;
    public final void rule__Function__Group_8_0__1() throws RecognitionException {
        int rule__Function__Group_8_0__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 434) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:6212:1: ( rule__Function__Group_8_0__1__Impl rule__Function__Group_8_0__2 )
            // InternalSimpleBeeLangTestLanguage.g:6213:2: rule__Function__Group_8_0__1__Impl rule__Function__Group_8_0__2
            {
            pushFollow(FollowSets000.FOLLOW_14);
            rule__Function__Group_8_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Function__Group_8_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 434, rule__Function__Group_8_0__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_8_0__1"


    // $ANTLR start "rule__Function__Group_8_0__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:6220:1: rule__Function__Group_8_0__1__Impl : ( ( rule__Function__FuncExprAssignment_8_0_1 ) ) ;
    public final void rule__Function__Group_8_0__1__Impl() throws RecognitionException {
        int rule__Function__Group_8_0__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 435) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:6224:1: ( ( ( rule__Function__FuncExprAssignment_8_0_1 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:6225:1: ( ( rule__Function__FuncExprAssignment_8_0_1 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:6225:1: ( ( rule__Function__FuncExprAssignment_8_0_1 ) )
            // InternalSimpleBeeLangTestLanguage.g:6226:2: ( rule__Function__FuncExprAssignment_8_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getFuncExprAssignment_8_0_1()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:6227:2: ( rule__Function__FuncExprAssignment_8_0_1 )
            // InternalSimpleBeeLangTestLanguage.g:6227:3: rule__Function__FuncExprAssignment_8_0_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Function__FuncExprAssignment_8_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getFuncExprAssignment_8_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 435, rule__Function__Group_8_0__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_8_0__1__Impl"


    // $ANTLR start "rule__Function__Group_8_0__2"
    // InternalSimpleBeeLangTestLanguage.g:6235:1: rule__Function__Group_8_0__2 : rule__Function__Group_8_0__2__Impl ;
    public final void rule__Function__Group_8_0__2() throws RecognitionException {
        int rule__Function__Group_8_0__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 436) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:6239:1: ( rule__Function__Group_8_0__2__Impl )
            // InternalSimpleBeeLangTestLanguage.g:6240:2: rule__Function__Group_8_0__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Function__Group_8_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 436, rule__Function__Group_8_0__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_8_0__2"


    // $ANTLR start "rule__Function__Group_8_0__2__Impl"
    // InternalSimpleBeeLangTestLanguage.g:6246:1: rule__Function__Group_8_0__2__Impl : ( ';' ) ;
    public final void rule__Function__Group_8_0__2__Impl() throws RecognitionException {
        int rule__Function__Group_8_0__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 437) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:6250:1: ( ( ';' ) )
            // InternalSimpleBeeLangTestLanguage.g:6251:1: ( ';' )
            {
            // InternalSimpleBeeLangTestLanguage.g:6251:1: ( ';' )
            // InternalSimpleBeeLangTestLanguage.g:6252:2: ';'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getSemicolonKeyword_8_0_2()); 
            }
            match(input,50,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getSemicolonKeyword_8_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 437, rule__Function__Group_8_0__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_8_0__2__Impl"


    // $ANTLR start "rule__GuardExpression__Group_0__0"
    // InternalSimpleBeeLangTestLanguage.g:6262:1: rule__GuardExpression__Group_0__0 : rule__GuardExpression__Group_0__0__Impl rule__GuardExpression__Group_0__1 ;
    public final void rule__GuardExpression__Group_0__0() throws RecognitionException {
        int rule__GuardExpression__Group_0__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 438) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:6266:1: ( rule__GuardExpression__Group_0__0__Impl rule__GuardExpression__Group_0__1 )
            // InternalSimpleBeeLangTestLanguage.g:6267:2: rule__GuardExpression__Group_0__0__Impl rule__GuardExpression__Group_0__1
            {
            pushFollow(FollowSets000.FOLLOW_19);
            rule__GuardExpression__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__GuardExpression__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 438, rule__GuardExpression__Group_0__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GuardExpression__Group_0__0"


    // $ANTLR start "rule__GuardExpression__Group_0__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:6274:1: rule__GuardExpression__Group_0__0__Impl : ( ':' ) ;
    public final void rule__GuardExpression__Group_0__0__Impl() throws RecognitionException {
        int rule__GuardExpression__Group_0__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 439) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:6278:1: ( ( ':' ) )
            // InternalSimpleBeeLangTestLanguage.g:6279:1: ( ':' )
            {
            // InternalSimpleBeeLangTestLanguage.g:6279:1: ( ':' )
            // InternalSimpleBeeLangTestLanguage.g:6280:2: ':'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGuardExpressionAccess().getColonKeyword_0_0()); 
            }
            match(input,49,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getGuardExpressionAccess().getColonKeyword_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 439, rule__GuardExpression__Group_0__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GuardExpression__Group_0__0__Impl"


    // $ANTLR start "rule__GuardExpression__Group_0__1"
    // InternalSimpleBeeLangTestLanguage.g:6289:1: rule__GuardExpression__Group_0__1 : rule__GuardExpression__Group_0__1__Impl rule__GuardExpression__Group_0__2 ;
    public final void rule__GuardExpression__Group_0__1() throws RecognitionException {
        int rule__GuardExpression__Group_0__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 440) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:6293:1: ( rule__GuardExpression__Group_0__1__Impl rule__GuardExpression__Group_0__2 )
            // InternalSimpleBeeLangTestLanguage.g:6294:2: rule__GuardExpression__Group_0__1__Impl rule__GuardExpression__Group_0__2
            {
            pushFollow(FollowSets000.FOLLOW_14);
            rule__GuardExpression__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__GuardExpression__Group_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 440, rule__GuardExpression__Group_0__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GuardExpression__Group_0__1"


    // $ANTLR start "rule__GuardExpression__Group_0__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:6301:1: rule__GuardExpression__Group_0__1__Impl : ( ( rule__GuardExpression__GuardExprAssignment_0_1 ) ) ;
    public final void rule__GuardExpression__Group_0__1__Impl() throws RecognitionException {
        int rule__GuardExpression__Group_0__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 441) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:6305:1: ( ( ( rule__GuardExpression__GuardExprAssignment_0_1 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:6306:1: ( ( rule__GuardExpression__GuardExprAssignment_0_1 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:6306:1: ( ( rule__GuardExpression__GuardExprAssignment_0_1 ) )
            // InternalSimpleBeeLangTestLanguage.g:6307:2: ( rule__GuardExpression__GuardExprAssignment_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGuardExpressionAccess().getGuardExprAssignment_0_1()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:6308:2: ( rule__GuardExpression__GuardExprAssignment_0_1 )
            // InternalSimpleBeeLangTestLanguage.g:6308:3: rule__GuardExpression__GuardExprAssignment_0_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__GuardExpression__GuardExprAssignment_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getGuardExpressionAccess().getGuardExprAssignment_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 441, rule__GuardExpression__Group_0__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GuardExpression__Group_0__1__Impl"


    // $ANTLR start "rule__GuardExpression__Group_0__2"
    // InternalSimpleBeeLangTestLanguage.g:6316:1: rule__GuardExpression__Group_0__2 : rule__GuardExpression__Group_0__2__Impl ;
    public final void rule__GuardExpression__Group_0__2() throws RecognitionException {
        int rule__GuardExpression__Group_0__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 442) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:6320:1: ( rule__GuardExpression__Group_0__2__Impl )
            // InternalSimpleBeeLangTestLanguage.g:6321:2: rule__GuardExpression__Group_0__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__GuardExpression__Group_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 442, rule__GuardExpression__Group_0__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GuardExpression__Group_0__2"


    // $ANTLR start "rule__GuardExpression__Group_0__2__Impl"
    // InternalSimpleBeeLangTestLanguage.g:6327:1: rule__GuardExpression__Group_0__2__Impl : ( ';' ) ;
    public final void rule__GuardExpression__Group_0__2__Impl() throws RecognitionException {
        int rule__GuardExpression__Group_0__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 443) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:6331:1: ( ( ';' ) )
            // InternalSimpleBeeLangTestLanguage.g:6332:1: ( ';' )
            {
            // InternalSimpleBeeLangTestLanguage.g:6332:1: ( ';' )
            // InternalSimpleBeeLangTestLanguage.g:6333:2: ';'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGuardExpressionAccess().getSemicolonKeyword_0_2()); 
            }
            match(input,50,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getGuardExpressionAccess().getSemicolonKeyword_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 443, rule__GuardExpression__Group_0__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GuardExpression__Group_0__2__Impl"


    // $ANTLR start "rule__AssignmentExpression__Group__0"
    // InternalSimpleBeeLangTestLanguage.g:6343:1: rule__AssignmentExpression__Group__0 : rule__AssignmentExpression__Group__0__Impl rule__AssignmentExpression__Group__1 ;
    public final void rule__AssignmentExpression__Group__0() throws RecognitionException {
        int rule__AssignmentExpression__Group__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 444) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:6347:1: ( rule__AssignmentExpression__Group__0__Impl rule__AssignmentExpression__Group__1 )
            // InternalSimpleBeeLangTestLanguage.g:6348:2: rule__AssignmentExpression__Group__0__Impl rule__AssignmentExpression__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_33);
            rule__AssignmentExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AssignmentExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 444, rule__AssignmentExpression__Group__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AssignmentExpression__Group__0"


    // $ANTLR start "rule__AssignmentExpression__Group__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:6355:1: rule__AssignmentExpression__Group__0__Impl : ( ruleCachedExpression ) ;
    public final void rule__AssignmentExpression__Group__0__Impl() throws RecognitionException {
        int rule__AssignmentExpression__Group__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 445) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:6359:1: ( ( ruleCachedExpression ) )
            // InternalSimpleBeeLangTestLanguage.g:6360:1: ( ruleCachedExpression )
            {
            // InternalSimpleBeeLangTestLanguage.g:6360:1: ( ruleCachedExpression )
            // InternalSimpleBeeLangTestLanguage.g:6361:2: ruleCachedExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAssignmentExpressionAccess().getCachedExpressionParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleCachedExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAssignmentExpressionAccess().getCachedExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 445, rule__AssignmentExpression__Group__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AssignmentExpression__Group__0__Impl"


    // $ANTLR start "rule__AssignmentExpression__Group__1"
    // InternalSimpleBeeLangTestLanguage.g:6370:1: rule__AssignmentExpression__Group__1 : rule__AssignmentExpression__Group__1__Impl ;
    public final void rule__AssignmentExpression__Group__1() throws RecognitionException {
        int rule__AssignmentExpression__Group__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 446) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:6374:1: ( rule__AssignmentExpression__Group__1__Impl )
            // InternalSimpleBeeLangTestLanguage.g:6375:2: rule__AssignmentExpression__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AssignmentExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 446, rule__AssignmentExpression__Group__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AssignmentExpression__Group__1"


    // $ANTLR start "rule__AssignmentExpression__Group__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:6381:1: rule__AssignmentExpression__Group__1__Impl : ( ( rule__AssignmentExpression__Group_1__0 )? ) ;
    public final void rule__AssignmentExpression__Group__1__Impl() throws RecognitionException {
        int rule__AssignmentExpression__Group__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 447) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:6385:1: ( ( ( rule__AssignmentExpression__Group_1__0 )? ) )
            // InternalSimpleBeeLangTestLanguage.g:6386:1: ( ( rule__AssignmentExpression__Group_1__0 )? )
            {
            // InternalSimpleBeeLangTestLanguage.g:6386:1: ( ( rule__AssignmentExpression__Group_1__0 )? )
            // InternalSimpleBeeLangTestLanguage.g:6387:2: ( rule__AssignmentExpression__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAssignmentExpressionAccess().getGroup_1()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:6388:2: ( rule__AssignmentExpression__Group_1__0 )?
            int alt55=2;
            switch ( input.LA(1) ) {
                case 14:
                    {
                    int LA55_1 = input.LA(2);

                    if ( (synpred84_InternalSimpleBeeLangTestLanguage()) ) {
                        alt55=1;
                    }
                    }
                    break;
                case 15:
                    {
                    int LA55_2 = input.LA(2);

                    if ( (synpred84_InternalSimpleBeeLangTestLanguage()) ) {
                        alt55=1;
                    }
                    }
                    break;
                case 16:
                    {
                    int LA55_3 = input.LA(2);

                    if ( (synpred84_InternalSimpleBeeLangTestLanguage()) ) {
                        alt55=1;
                    }
                    }
                    break;
                case 17:
                    {
                    int LA55_4 = input.LA(2);

                    if ( (synpred84_InternalSimpleBeeLangTestLanguage()) ) {
                        alt55=1;
                    }
                    }
                    break;
                case 18:
                    {
                    int LA55_5 = input.LA(2);

                    if ( (synpred84_InternalSimpleBeeLangTestLanguage()) ) {
                        alt55=1;
                    }
                    }
                    break;
                case 19:
                    {
                    int LA55_6 = input.LA(2);

                    if ( (synpred84_InternalSimpleBeeLangTestLanguage()) ) {
                        alt55=1;
                    }
                    }
                    break;
            }

            switch (alt55) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:6388:3: rule__AssignmentExpression__Group_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__AssignmentExpression__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAssignmentExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 447, rule__AssignmentExpression__Group__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AssignmentExpression__Group__1__Impl"


    // $ANTLR start "rule__AssignmentExpression__Group_1__0"
    // InternalSimpleBeeLangTestLanguage.g:6397:1: rule__AssignmentExpression__Group_1__0 : rule__AssignmentExpression__Group_1__0__Impl rule__AssignmentExpression__Group_1__1 ;
    public final void rule__AssignmentExpression__Group_1__0() throws RecognitionException {
        int rule__AssignmentExpression__Group_1__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 448) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:6401:1: ( rule__AssignmentExpression__Group_1__0__Impl rule__AssignmentExpression__Group_1__1 )
            // InternalSimpleBeeLangTestLanguage.g:6402:2: rule__AssignmentExpression__Group_1__0__Impl rule__AssignmentExpression__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_33);
            rule__AssignmentExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AssignmentExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 448, rule__AssignmentExpression__Group_1__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AssignmentExpression__Group_1__0"


    // $ANTLR start "rule__AssignmentExpression__Group_1__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:6409:1: rule__AssignmentExpression__Group_1__0__Impl : ( () ) ;
    public final void rule__AssignmentExpression__Group_1__0__Impl() throws RecognitionException {
        int rule__AssignmentExpression__Group_1__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 449) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:6413:1: ( ( () ) )
            // InternalSimpleBeeLangTestLanguage.g:6414:1: ( () )
            {
            // InternalSimpleBeeLangTestLanguage.g:6414:1: ( () )
            // InternalSimpleBeeLangTestLanguage.g:6415:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAssignmentExpressionAccess().getAssignmentExpressionLeftExprAction_1_0()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:6416:2: ()
            // InternalSimpleBeeLangTestLanguage.g:6416:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAssignmentExpressionAccess().getAssignmentExpressionLeftExprAction_1_0()); 
            }

            }


            }

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 449, rule__AssignmentExpression__Group_1__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AssignmentExpression__Group_1__0__Impl"


    // $ANTLR start "rule__AssignmentExpression__Group_1__1"
    // InternalSimpleBeeLangTestLanguage.g:6424:1: rule__AssignmentExpression__Group_1__1 : rule__AssignmentExpression__Group_1__1__Impl rule__AssignmentExpression__Group_1__2 ;
    public final void rule__AssignmentExpression__Group_1__1() throws RecognitionException {
        int rule__AssignmentExpression__Group_1__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 450) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:6428:1: ( rule__AssignmentExpression__Group_1__1__Impl rule__AssignmentExpression__Group_1__2 )
            // InternalSimpleBeeLangTestLanguage.g:6429:2: rule__AssignmentExpression__Group_1__1__Impl rule__AssignmentExpression__Group_1__2
            {
            pushFollow(FollowSets000.FOLLOW_19);
            rule__AssignmentExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AssignmentExpression__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 450, rule__AssignmentExpression__Group_1__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AssignmentExpression__Group_1__1"


    // $ANTLR start "rule__AssignmentExpression__Group_1__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:6436:1: rule__AssignmentExpression__Group_1__1__Impl : ( ( rule__AssignmentExpression__FunctionNameAssignment_1_1 ) ) ;
    public final void rule__AssignmentExpression__Group_1__1__Impl() throws RecognitionException {
        int rule__AssignmentExpression__Group_1__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 451) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:6440:1: ( ( ( rule__AssignmentExpression__FunctionNameAssignment_1_1 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:6441:1: ( ( rule__AssignmentExpression__FunctionNameAssignment_1_1 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:6441:1: ( ( rule__AssignmentExpression__FunctionNameAssignment_1_1 ) )
            // InternalSimpleBeeLangTestLanguage.g:6442:2: ( rule__AssignmentExpression__FunctionNameAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAssignmentExpressionAccess().getFunctionNameAssignment_1_1()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:6443:2: ( rule__AssignmentExpression__FunctionNameAssignment_1_1 )
            // InternalSimpleBeeLangTestLanguage.g:6443:3: rule__AssignmentExpression__FunctionNameAssignment_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AssignmentExpression__FunctionNameAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAssignmentExpressionAccess().getFunctionNameAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 451, rule__AssignmentExpression__Group_1__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AssignmentExpression__Group_1__1__Impl"


    // $ANTLR start "rule__AssignmentExpression__Group_1__2"
    // InternalSimpleBeeLangTestLanguage.g:6451:1: rule__AssignmentExpression__Group_1__2 : rule__AssignmentExpression__Group_1__2__Impl ;
    public final void rule__AssignmentExpression__Group_1__2() throws RecognitionException {
        int rule__AssignmentExpression__Group_1__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 452) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:6455:1: ( rule__AssignmentExpression__Group_1__2__Impl )
            // InternalSimpleBeeLangTestLanguage.g:6456:2: rule__AssignmentExpression__Group_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AssignmentExpression__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 452, rule__AssignmentExpression__Group_1__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AssignmentExpression__Group_1__2"


    // $ANTLR start "rule__AssignmentExpression__Group_1__2__Impl"
    // InternalSimpleBeeLangTestLanguage.g:6462:1: rule__AssignmentExpression__Group_1__2__Impl : ( ( rule__AssignmentExpression__RightExprAssignment_1_2 ) ) ;
    public final void rule__AssignmentExpression__Group_1__2__Impl() throws RecognitionException {
        int rule__AssignmentExpression__Group_1__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 453) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:6466:1: ( ( ( rule__AssignmentExpression__RightExprAssignment_1_2 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:6467:1: ( ( rule__AssignmentExpression__RightExprAssignment_1_2 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:6467:1: ( ( rule__AssignmentExpression__RightExprAssignment_1_2 ) )
            // InternalSimpleBeeLangTestLanguage.g:6468:2: ( rule__AssignmentExpression__RightExprAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAssignmentExpressionAccess().getRightExprAssignment_1_2()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:6469:2: ( rule__AssignmentExpression__RightExprAssignment_1_2 )
            // InternalSimpleBeeLangTestLanguage.g:6469:3: rule__AssignmentExpression__RightExprAssignment_1_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AssignmentExpression__RightExprAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAssignmentExpressionAccess().getRightExprAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 453, rule__AssignmentExpression__Group_1__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AssignmentExpression__Group_1__2__Impl"


    // $ANTLR start "rule__VarDeclaration__Group__0"
    // InternalSimpleBeeLangTestLanguage.g:6478:1: rule__VarDeclaration__Group__0 : rule__VarDeclaration__Group__0__Impl rule__VarDeclaration__Group__1 ;
    public final void rule__VarDeclaration__Group__0() throws RecognitionException {
        int rule__VarDeclaration__Group__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 454) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:6482:1: ( rule__VarDeclaration__Group__0__Impl rule__VarDeclaration__Group__1 )
            // InternalSimpleBeeLangTestLanguage.g:6483:2: rule__VarDeclaration__Group__0__Impl rule__VarDeclaration__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_34);
            rule__VarDeclaration__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__VarDeclaration__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 454, rule__VarDeclaration__Group__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group__0"


    // $ANTLR start "rule__VarDeclaration__Group__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:6490:1: rule__VarDeclaration__Group__0__Impl : ( () ) ;
    public final void rule__VarDeclaration__Group__0__Impl() throws RecognitionException {
        int rule__VarDeclaration__Group__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 455) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:6494:1: ( ( () ) )
            // InternalSimpleBeeLangTestLanguage.g:6495:1: ( () )
            {
            // InternalSimpleBeeLangTestLanguage.g:6495:1: ( () )
            // InternalSimpleBeeLangTestLanguage.g:6496:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getDefValueAction_0()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:6497:2: ()
            // InternalSimpleBeeLangTestLanguage.g:6497:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getDefValueAction_0()); 
            }

            }


            }

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 455, rule__VarDeclaration__Group__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group__0__Impl"


    // $ANTLR start "rule__VarDeclaration__Group__1"
    // InternalSimpleBeeLangTestLanguage.g:6505:1: rule__VarDeclaration__Group__1 : rule__VarDeclaration__Group__1__Impl rule__VarDeclaration__Group__2 ;
    public final void rule__VarDeclaration__Group__1() throws RecognitionException {
        int rule__VarDeclaration__Group__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 456) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:6509:1: ( rule__VarDeclaration__Group__1__Impl rule__VarDeclaration__Group__2 )
            // InternalSimpleBeeLangTestLanguage.g:6510:2: rule__VarDeclaration__Group__1__Impl rule__VarDeclaration__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_34);
            rule__VarDeclaration__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__VarDeclaration__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 456, rule__VarDeclaration__Group__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group__1"


    // $ANTLR start "rule__VarDeclaration__Group__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:6517:1: rule__VarDeclaration__Group__1__Impl : ( ( rule__VarDeclaration__FinalAssignment_1 )? ) ;
    public final void rule__VarDeclaration__Group__1__Impl() throws RecognitionException {
        int rule__VarDeclaration__Group__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 457) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:6521:1: ( ( ( rule__VarDeclaration__FinalAssignment_1 )? ) )
            // InternalSimpleBeeLangTestLanguage.g:6522:1: ( ( rule__VarDeclaration__FinalAssignment_1 )? )
            {
            // InternalSimpleBeeLangTestLanguage.g:6522:1: ( ( rule__VarDeclaration__FinalAssignment_1 )? )
            // InternalSimpleBeeLangTestLanguage.g:6523:2: ( rule__VarDeclaration__FinalAssignment_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getFinalAssignment_1()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:6524:2: ( rule__VarDeclaration__FinalAssignment_1 )?
            int alt56=2;
            int LA56_0 = input.LA(1);

            if ( (LA56_0==74) ) {
                alt56=1;
            }
            switch (alt56) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:6524:3: rule__VarDeclaration__FinalAssignment_1
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__VarDeclaration__FinalAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getFinalAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 457, rule__VarDeclaration__Group__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group__1__Impl"


    // $ANTLR start "rule__VarDeclaration__Group__2"
    // InternalSimpleBeeLangTestLanguage.g:6532:1: rule__VarDeclaration__Group__2 : rule__VarDeclaration__Group__2__Impl rule__VarDeclaration__Group__3 ;
    public final void rule__VarDeclaration__Group__2() throws RecognitionException {
        int rule__VarDeclaration__Group__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 458) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:6536:1: ( rule__VarDeclaration__Group__2__Impl rule__VarDeclaration__Group__3 )
            // InternalSimpleBeeLangTestLanguage.g:6537:2: rule__VarDeclaration__Group__2__Impl rule__VarDeclaration__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_35);
            rule__VarDeclaration__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__VarDeclaration__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 458, rule__VarDeclaration__Group__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group__2"


    // $ANTLR start "rule__VarDeclaration__Group__2__Impl"
    // InternalSimpleBeeLangTestLanguage.g:6544:1: rule__VarDeclaration__Group__2__Impl : ( ( rule__VarDeclaration__Group_2__0 ) ) ;
    public final void rule__VarDeclaration__Group__2__Impl() throws RecognitionException {
        int rule__VarDeclaration__Group__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 459) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:6548:1: ( ( ( rule__VarDeclaration__Group_2__0 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:6549:1: ( ( rule__VarDeclaration__Group_2__0 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:6549:1: ( ( rule__VarDeclaration__Group_2__0 ) )
            // InternalSimpleBeeLangTestLanguage.g:6550:2: ( rule__VarDeclaration__Group_2__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getGroup_2()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:6551:2: ( rule__VarDeclaration__Group_2__0 )
            // InternalSimpleBeeLangTestLanguage.g:6551:3: rule__VarDeclaration__Group_2__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__VarDeclaration__Group_2__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getGroup_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 459, rule__VarDeclaration__Group__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group__2__Impl"


    // $ANTLR start "rule__VarDeclaration__Group__3"
    // InternalSimpleBeeLangTestLanguage.g:6559:1: rule__VarDeclaration__Group__3 : rule__VarDeclaration__Group__3__Impl ;
    public final void rule__VarDeclaration__Group__3() throws RecognitionException {
        int rule__VarDeclaration__Group__3_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 460) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:6563:1: ( rule__VarDeclaration__Group__3__Impl )
            // InternalSimpleBeeLangTestLanguage.g:6564:2: rule__VarDeclaration__Group__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__VarDeclaration__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 460, rule__VarDeclaration__Group__3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group__3"


    // $ANTLR start "rule__VarDeclaration__Group__3__Impl"
    // InternalSimpleBeeLangTestLanguage.g:6570:1: rule__VarDeclaration__Group__3__Impl : ( ( rule__VarDeclaration__Group_3__0 )? ) ;
    public final void rule__VarDeclaration__Group__3__Impl() throws RecognitionException {
        int rule__VarDeclaration__Group__3__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 461) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:6574:1: ( ( ( rule__VarDeclaration__Group_3__0 )? ) )
            // InternalSimpleBeeLangTestLanguage.g:6575:1: ( ( rule__VarDeclaration__Group_3__0 )? )
            {
            // InternalSimpleBeeLangTestLanguage.g:6575:1: ( ( rule__VarDeclaration__Group_3__0 )? )
            // InternalSimpleBeeLangTestLanguage.g:6576:2: ( rule__VarDeclaration__Group_3__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getGroup_3()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:6577:2: ( rule__VarDeclaration__Group_3__0 )?
            int alt57=2;
            int LA57_0 = input.LA(1);

            if ( (LA57_0==14) ) {
                alt57=1;
            }
            switch (alt57) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:6577:3: rule__VarDeclaration__Group_3__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__VarDeclaration__Group_3__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getGroup_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 461, rule__VarDeclaration__Group__3__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group__3__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_2__0"
    // InternalSimpleBeeLangTestLanguage.g:6586:1: rule__VarDeclaration__Group_2__0 : rule__VarDeclaration__Group_2__0__Impl rule__VarDeclaration__Group_2__1 ;
    public final void rule__VarDeclaration__Group_2__0() throws RecognitionException {
        int rule__VarDeclaration__Group_2__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 462) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:6590:1: ( rule__VarDeclaration__Group_2__0__Impl rule__VarDeclaration__Group_2__1 )
            // InternalSimpleBeeLangTestLanguage.g:6591:2: rule__VarDeclaration__Group_2__0__Impl rule__VarDeclaration__Group_2__1
            {
            pushFollow(FollowSets000.FOLLOW_9);
            rule__VarDeclaration__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__VarDeclaration__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 462, rule__VarDeclaration__Group_2__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_2__0"


    // $ANTLR start "rule__VarDeclaration__Group_2__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:6598:1: rule__VarDeclaration__Group_2__0__Impl : ( ( rule__VarDeclaration__Alternatives_2_0 ) ) ;
    public final void rule__VarDeclaration__Group_2__0__Impl() throws RecognitionException {
        int rule__VarDeclaration__Group_2__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 463) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:6602:1: ( ( ( rule__VarDeclaration__Alternatives_2_0 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:6603:1: ( ( rule__VarDeclaration__Alternatives_2_0 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:6603:1: ( ( rule__VarDeclaration__Alternatives_2_0 ) )
            // InternalSimpleBeeLangTestLanguage.g:6604:2: ( rule__VarDeclaration__Alternatives_2_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getAlternatives_2_0()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:6605:2: ( rule__VarDeclaration__Alternatives_2_0 )
            // InternalSimpleBeeLangTestLanguage.g:6605:3: rule__VarDeclaration__Alternatives_2_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__VarDeclaration__Alternatives_2_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getAlternatives_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 463, rule__VarDeclaration__Group_2__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_2__0__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_2__1"
    // InternalSimpleBeeLangTestLanguage.g:6613:1: rule__VarDeclaration__Group_2__1 : rule__VarDeclaration__Group_2__1__Impl ;
    public final void rule__VarDeclaration__Group_2__1() throws RecognitionException {
        int rule__VarDeclaration__Group_2__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 464) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:6617:1: ( rule__VarDeclaration__Group_2__1__Impl )
            // InternalSimpleBeeLangTestLanguage.g:6618:2: rule__VarDeclaration__Group_2__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__VarDeclaration__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 464, rule__VarDeclaration__Group_2__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_2__1"


    // $ANTLR start "rule__VarDeclaration__Group_2__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:6624:1: rule__VarDeclaration__Group_2__1__Impl : ( ( rule__VarDeclaration__NameAssignment_2_1 ) ) ;
    public final void rule__VarDeclaration__Group_2__1__Impl() throws RecognitionException {
        int rule__VarDeclaration__Group_2__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 465) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:6628:1: ( ( ( rule__VarDeclaration__NameAssignment_2_1 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:6629:1: ( ( rule__VarDeclaration__NameAssignment_2_1 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:6629:1: ( ( rule__VarDeclaration__NameAssignment_2_1 ) )
            // InternalSimpleBeeLangTestLanguage.g:6630:2: ( rule__VarDeclaration__NameAssignment_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getNameAssignment_2_1()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:6631:2: ( rule__VarDeclaration__NameAssignment_2_1 )
            // InternalSimpleBeeLangTestLanguage.g:6631:3: rule__VarDeclaration__NameAssignment_2_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__VarDeclaration__NameAssignment_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getNameAssignment_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 465, rule__VarDeclaration__Group_2__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_2__1__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_3__0"
    // InternalSimpleBeeLangTestLanguage.g:6640:1: rule__VarDeclaration__Group_3__0 : rule__VarDeclaration__Group_3__0__Impl rule__VarDeclaration__Group_3__1 ;
    public final void rule__VarDeclaration__Group_3__0() throws RecognitionException {
        int rule__VarDeclaration__Group_3__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 466) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:6644:1: ( rule__VarDeclaration__Group_3__0__Impl rule__VarDeclaration__Group_3__1 )
            // InternalSimpleBeeLangTestLanguage.g:6645:2: rule__VarDeclaration__Group_3__0__Impl rule__VarDeclaration__Group_3__1
            {
            pushFollow(FollowSets000.FOLLOW_19);
            rule__VarDeclaration__Group_3__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__VarDeclaration__Group_3__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 466, rule__VarDeclaration__Group_3__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3__0"


    // $ANTLR start "rule__VarDeclaration__Group_3__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:6652:1: rule__VarDeclaration__Group_3__0__Impl : ( '=' ) ;
    public final void rule__VarDeclaration__Group_3__0__Impl() throws RecognitionException {
        int rule__VarDeclaration__Group_3__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 467) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:6656:1: ( ( '=' ) )
            // InternalSimpleBeeLangTestLanguage.g:6657:1: ( '=' )
            {
            // InternalSimpleBeeLangTestLanguage.g:6657:1: ( '=' )
            // InternalSimpleBeeLangTestLanguage.g:6658:2: '='
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getEqualsSignKeyword_3_0()); 
            }
            match(input,14,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getEqualsSignKeyword_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 467, rule__VarDeclaration__Group_3__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3__0__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_3__1"
    // InternalSimpleBeeLangTestLanguage.g:6667:1: rule__VarDeclaration__Group_3__1 : rule__VarDeclaration__Group_3__1__Impl ;
    public final void rule__VarDeclaration__Group_3__1() throws RecognitionException {
        int rule__VarDeclaration__Group_3__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 468) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:6671:1: ( rule__VarDeclaration__Group_3__1__Impl )
            // InternalSimpleBeeLangTestLanguage.g:6672:2: rule__VarDeclaration__Group_3__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__VarDeclaration__Group_3__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 468, rule__VarDeclaration__Group_3__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3__1"


    // $ANTLR start "rule__VarDeclaration__Group_3__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:6678:1: rule__VarDeclaration__Group_3__1__Impl : ( ( rule__VarDeclaration__ValueExprAssignment_3_1 ) ) ;
    public final void rule__VarDeclaration__Group_3__1__Impl() throws RecognitionException {
        int rule__VarDeclaration__Group_3__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 469) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:6682:1: ( ( ( rule__VarDeclaration__ValueExprAssignment_3_1 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:6683:1: ( ( rule__VarDeclaration__ValueExprAssignment_3_1 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:6683:1: ( ( rule__VarDeclaration__ValueExprAssignment_3_1 ) )
            // InternalSimpleBeeLangTestLanguage.g:6684:2: ( rule__VarDeclaration__ValueExprAssignment_3_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getValueExprAssignment_3_1()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:6685:2: ( rule__VarDeclaration__ValueExprAssignment_3_1 )
            // InternalSimpleBeeLangTestLanguage.g:6685:3: rule__VarDeclaration__ValueExprAssignment_3_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__VarDeclaration__ValueExprAssignment_3_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getValueExprAssignment_3_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 469, rule__VarDeclaration__Group_3__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3__1__Impl"


    // $ANTLR start "rule__ValDeclaration__Group__0"
    // InternalSimpleBeeLangTestLanguage.g:6694:1: rule__ValDeclaration__Group__0 : rule__ValDeclaration__Group__0__Impl rule__ValDeclaration__Group__1 ;
    public final void rule__ValDeclaration__Group__0() throws RecognitionException {
        int rule__ValDeclaration__Group__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 470) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:6698:1: ( rule__ValDeclaration__Group__0__Impl rule__ValDeclaration__Group__1 )
            // InternalSimpleBeeLangTestLanguage.g:6699:2: rule__ValDeclaration__Group__0__Impl rule__ValDeclaration__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_36);
            rule__ValDeclaration__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ValDeclaration__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 470, rule__ValDeclaration__Group__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValDeclaration__Group__0"


    // $ANTLR start "rule__ValDeclaration__Group__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:6706:1: rule__ValDeclaration__Group__0__Impl : ( () ) ;
    public final void rule__ValDeclaration__Group__0__Impl() throws RecognitionException {
        int rule__ValDeclaration__Group__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 471) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:6710:1: ( ( () ) )
            // InternalSimpleBeeLangTestLanguage.g:6711:1: ( () )
            {
            // InternalSimpleBeeLangTestLanguage.g:6711:1: ( () )
            // InternalSimpleBeeLangTestLanguage.g:6712:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValDeclarationAccess().getDefValueAction_0()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:6713:2: ()
            // InternalSimpleBeeLangTestLanguage.g:6713:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getValDeclarationAccess().getDefValueAction_0()); 
            }

            }


            }

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 471, rule__ValDeclaration__Group__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValDeclaration__Group__0__Impl"


    // $ANTLR start "rule__ValDeclaration__Group__1"
    // InternalSimpleBeeLangTestLanguage.g:6721:1: rule__ValDeclaration__Group__1 : rule__ValDeclaration__Group__1__Impl rule__ValDeclaration__Group__2 ;
    public final void rule__ValDeclaration__Group__1() throws RecognitionException {
        int rule__ValDeclaration__Group__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 472) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:6725:1: ( rule__ValDeclaration__Group__1__Impl rule__ValDeclaration__Group__2 )
            // InternalSimpleBeeLangTestLanguage.g:6726:2: rule__ValDeclaration__Group__1__Impl rule__ValDeclaration__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_36);
            rule__ValDeclaration__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ValDeclaration__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 472, rule__ValDeclaration__Group__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValDeclaration__Group__1"


    // $ANTLR start "rule__ValDeclaration__Group__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:6733:1: rule__ValDeclaration__Group__1__Impl : ( ( rule__ValDeclaration__FinalAssignment_1 )? ) ;
    public final void rule__ValDeclaration__Group__1__Impl() throws RecognitionException {
        int rule__ValDeclaration__Group__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 473) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:6737:1: ( ( ( rule__ValDeclaration__FinalAssignment_1 )? ) )
            // InternalSimpleBeeLangTestLanguage.g:6738:1: ( ( rule__ValDeclaration__FinalAssignment_1 )? )
            {
            // InternalSimpleBeeLangTestLanguage.g:6738:1: ( ( rule__ValDeclaration__FinalAssignment_1 )? )
            // InternalSimpleBeeLangTestLanguage.g:6739:2: ( rule__ValDeclaration__FinalAssignment_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValDeclarationAccess().getFinalAssignment_1()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:6740:2: ( rule__ValDeclaration__FinalAssignment_1 )?
            int alt58=2;
            int LA58_0 = input.LA(1);

            if ( (LA58_0==74) ) {
                alt58=1;
            }
            switch (alt58) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:6740:3: rule__ValDeclaration__FinalAssignment_1
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ValDeclaration__FinalAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getValDeclarationAccess().getFinalAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 473, rule__ValDeclaration__Group__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValDeclaration__Group__1__Impl"


    // $ANTLR start "rule__ValDeclaration__Group__2"
    // InternalSimpleBeeLangTestLanguage.g:6748:1: rule__ValDeclaration__Group__2 : rule__ValDeclaration__Group__2__Impl rule__ValDeclaration__Group__3 ;
    public final void rule__ValDeclaration__Group__2() throws RecognitionException {
        int rule__ValDeclaration__Group__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 474) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:6752:1: ( rule__ValDeclaration__Group__2__Impl rule__ValDeclaration__Group__3 )
            // InternalSimpleBeeLangTestLanguage.g:6753:2: rule__ValDeclaration__Group__2__Impl rule__ValDeclaration__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_28);
            rule__ValDeclaration__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ValDeclaration__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 474, rule__ValDeclaration__Group__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValDeclaration__Group__2"


    // $ANTLR start "rule__ValDeclaration__Group__2__Impl"
    // InternalSimpleBeeLangTestLanguage.g:6760:1: rule__ValDeclaration__Group__2__Impl : ( ( rule__ValDeclaration__ImmutableAssignment_2 ) ) ;
    public final void rule__ValDeclaration__Group__2__Impl() throws RecognitionException {
        int rule__ValDeclaration__Group__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 475) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:6764:1: ( ( ( rule__ValDeclaration__ImmutableAssignment_2 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:6765:1: ( ( rule__ValDeclaration__ImmutableAssignment_2 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:6765:1: ( ( rule__ValDeclaration__ImmutableAssignment_2 ) )
            // InternalSimpleBeeLangTestLanguage.g:6766:2: ( rule__ValDeclaration__ImmutableAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValDeclarationAccess().getImmutableAssignment_2()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:6767:2: ( rule__ValDeclaration__ImmutableAssignment_2 )
            // InternalSimpleBeeLangTestLanguage.g:6767:3: rule__ValDeclaration__ImmutableAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ValDeclaration__ImmutableAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getValDeclarationAccess().getImmutableAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 475, rule__ValDeclaration__Group__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValDeclaration__Group__2__Impl"


    // $ANTLR start "rule__ValDeclaration__Group__3"
    // InternalSimpleBeeLangTestLanguage.g:6775:1: rule__ValDeclaration__Group__3 : rule__ValDeclaration__Group__3__Impl rule__ValDeclaration__Group__4 ;
    public final void rule__ValDeclaration__Group__3() throws RecognitionException {
        int rule__ValDeclaration__Group__3_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 476) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:6779:1: ( rule__ValDeclaration__Group__3__Impl rule__ValDeclaration__Group__4 )
            // InternalSimpleBeeLangTestLanguage.g:6780:2: rule__ValDeclaration__Group__3__Impl rule__ValDeclaration__Group__4
            {
            pushFollow(FollowSets000.FOLLOW_28);
            rule__ValDeclaration__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ValDeclaration__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 476, rule__ValDeclaration__Group__3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValDeclaration__Group__3"


    // $ANTLR start "rule__ValDeclaration__Group__3__Impl"
    // InternalSimpleBeeLangTestLanguage.g:6787:1: rule__ValDeclaration__Group__3__Impl : ( ( rule__ValDeclaration__TypeAssignment_3 )? ) ;
    public final void rule__ValDeclaration__Group__3__Impl() throws RecognitionException {
        int rule__ValDeclaration__Group__3__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 477) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:6791:1: ( ( ( rule__ValDeclaration__TypeAssignment_3 )? ) )
            // InternalSimpleBeeLangTestLanguage.g:6792:1: ( ( rule__ValDeclaration__TypeAssignment_3 )? )
            {
            // InternalSimpleBeeLangTestLanguage.g:6792:1: ( ( rule__ValDeclaration__TypeAssignment_3 )? )
            // InternalSimpleBeeLangTestLanguage.g:6793:2: ( rule__ValDeclaration__TypeAssignment_3 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValDeclarationAccess().getTypeAssignment_3()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:6794:2: ( rule__ValDeclaration__TypeAssignment_3 )?
            int alt59=2;
            int LA59_0 = input.LA(1);

            if ( (LA59_0==60) ) {
                alt59=1;
            }
            else if ( (LA59_0==RULE_ID) ) {
                int LA59_2 = input.LA(2);

                if ( (LA59_2==RULE_ID||LA59_2==28) ) {
                    alt59=1;
                }
            }
            switch (alt59) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:6794:3: rule__ValDeclaration__TypeAssignment_3
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ValDeclaration__TypeAssignment_3();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getValDeclarationAccess().getTypeAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 477, rule__ValDeclaration__Group__3__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValDeclaration__Group__3__Impl"


    // $ANTLR start "rule__ValDeclaration__Group__4"
    // InternalSimpleBeeLangTestLanguage.g:6802:1: rule__ValDeclaration__Group__4 : rule__ValDeclaration__Group__4__Impl rule__ValDeclaration__Group__5 ;
    public final void rule__ValDeclaration__Group__4() throws RecognitionException {
        int rule__ValDeclaration__Group__4_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 478) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:6806:1: ( rule__ValDeclaration__Group__4__Impl rule__ValDeclaration__Group__5 )
            // InternalSimpleBeeLangTestLanguage.g:6807:2: rule__ValDeclaration__Group__4__Impl rule__ValDeclaration__Group__5
            {
            pushFollow(FollowSets000.FOLLOW_35);
            rule__ValDeclaration__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ValDeclaration__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 478, rule__ValDeclaration__Group__4_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValDeclaration__Group__4"


    // $ANTLR start "rule__ValDeclaration__Group__4__Impl"
    // InternalSimpleBeeLangTestLanguage.g:6814:1: rule__ValDeclaration__Group__4__Impl : ( ( rule__ValDeclaration__NameAssignment_4 ) ) ;
    public final void rule__ValDeclaration__Group__4__Impl() throws RecognitionException {
        int rule__ValDeclaration__Group__4__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 479) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:6818:1: ( ( ( rule__ValDeclaration__NameAssignment_4 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:6819:1: ( ( rule__ValDeclaration__NameAssignment_4 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:6819:1: ( ( rule__ValDeclaration__NameAssignment_4 ) )
            // InternalSimpleBeeLangTestLanguage.g:6820:2: ( rule__ValDeclaration__NameAssignment_4 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValDeclarationAccess().getNameAssignment_4()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:6821:2: ( rule__ValDeclaration__NameAssignment_4 )
            // InternalSimpleBeeLangTestLanguage.g:6821:3: rule__ValDeclaration__NameAssignment_4
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ValDeclaration__NameAssignment_4();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getValDeclarationAccess().getNameAssignment_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 479, rule__ValDeclaration__Group__4__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValDeclaration__Group__4__Impl"


    // $ANTLR start "rule__ValDeclaration__Group__5"
    // InternalSimpleBeeLangTestLanguage.g:6829:1: rule__ValDeclaration__Group__5 : rule__ValDeclaration__Group__5__Impl rule__ValDeclaration__Group__6 ;
    public final void rule__ValDeclaration__Group__5() throws RecognitionException {
        int rule__ValDeclaration__Group__5_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 480) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:6833:1: ( rule__ValDeclaration__Group__5__Impl rule__ValDeclaration__Group__6 )
            // InternalSimpleBeeLangTestLanguage.g:6834:2: rule__ValDeclaration__Group__5__Impl rule__ValDeclaration__Group__6
            {
            pushFollow(FollowSets000.FOLLOW_19);
            rule__ValDeclaration__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ValDeclaration__Group__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 480, rule__ValDeclaration__Group__5_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValDeclaration__Group__5"


    // $ANTLR start "rule__ValDeclaration__Group__5__Impl"
    // InternalSimpleBeeLangTestLanguage.g:6841:1: rule__ValDeclaration__Group__5__Impl : ( '=' ) ;
    public final void rule__ValDeclaration__Group__5__Impl() throws RecognitionException {
        int rule__ValDeclaration__Group__5__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 481) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:6845:1: ( ( '=' ) )
            // InternalSimpleBeeLangTestLanguage.g:6846:1: ( '=' )
            {
            // InternalSimpleBeeLangTestLanguage.g:6846:1: ( '=' )
            // InternalSimpleBeeLangTestLanguage.g:6847:2: '='
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValDeclarationAccess().getEqualsSignKeyword_5()); 
            }
            match(input,14,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getValDeclarationAccess().getEqualsSignKeyword_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 481, rule__ValDeclaration__Group__5__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValDeclaration__Group__5__Impl"


    // $ANTLR start "rule__ValDeclaration__Group__6"
    // InternalSimpleBeeLangTestLanguage.g:6856:1: rule__ValDeclaration__Group__6 : rule__ValDeclaration__Group__6__Impl ;
    public final void rule__ValDeclaration__Group__6() throws RecognitionException {
        int rule__ValDeclaration__Group__6_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 482) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:6860:1: ( rule__ValDeclaration__Group__6__Impl )
            // InternalSimpleBeeLangTestLanguage.g:6861:2: rule__ValDeclaration__Group__6__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ValDeclaration__Group__6__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 482, rule__ValDeclaration__Group__6_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValDeclaration__Group__6"


    // $ANTLR start "rule__ValDeclaration__Group__6__Impl"
    // InternalSimpleBeeLangTestLanguage.g:6867:1: rule__ValDeclaration__Group__6__Impl : ( ( rule__ValDeclaration__ValueExprAssignment_6 ) ) ;
    public final void rule__ValDeclaration__Group__6__Impl() throws RecognitionException {
        int rule__ValDeclaration__Group__6__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 483) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:6871:1: ( ( ( rule__ValDeclaration__ValueExprAssignment_6 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:6872:1: ( ( rule__ValDeclaration__ValueExprAssignment_6 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:6872:1: ( ( rule__ValDeclaration__ValueExprAssignment_6 ) )
            // InternalSimpleBeeLangTestLanguage.g:6873:2: ( rule__ValDeclaration__ValueExprAssignment_6 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValDeclarationAccess().getValueExprAssignment_6()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:6874:2: ( rule__ValDeclaration__ValueExprAssignment_6 )
            // InternalSimpleBeeLangTestLanguage.g:6874:3: rule__ValDeclaration__ValueExprAssignment_6
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ValDeclaration__ValueExprAssignment_6();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getValDeclarationAccess().getValueExprAssignment_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 483, rule__ValDeclaration__Group__6__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValDeclaration__Group__6__Impl"


    // $ANTLR start "rule__SimpleTypeRef__Group__0"
    // InternalSimpleBeeLangTestLanguage.g:6883:1: rule__SimpleTypeRef__Group__0 : rule__SimpleTypeRef__Group__0__Impl rule__SimpleTypeRef__Group__1 ;
    public final void rule__SimpleTypeRef__Group__0() throws RecognitionException {
        int rule__SimpleTypeRef__Group__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 484) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:6887:1: ( rule__SimpleTypeRef__Group__0__Impl rule__SimpleTypeRef__Group__1 )
            // InternalSimpleBeeLangTestLanguage.g:6888:2: rule__SimpleTypeRef__Group__0__Impl rule__SimpleTypeRef__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_37);
            rule__SimpleTypeRef__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SimpleTypeRef__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 484, rule__SimpleTypeRef__Group__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleTypeRef__Group__0"


    // $ANTLR start "rule__SimpleTypeRef__Group__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:6895:1: rule__SimpleTypeRef__Group__0__Impl : ( ( rule__SimpleTypeRef__RawTypeAssignment_0 ) ) ;
    public final void rule__SimpleTypeRef__Group__0__Impl() throws RecognitionException {
        int rule__SimpleTypeRef__Group__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 485) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:6899:1: ( ( ( rule__SimpleTypeRef__RawTypeAssignment_0 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:6900:1: ( ( rule__SimpleTypeRef__RawTypeAssignment_0 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:6900:1: ( ( rule__SimpleTypeRef__RawTypeAssignment_0 ) )
            // InternalSimpleBeeLangTestLanguage.g:6901:2: ( rule__SimpleTypeRef__RawTypeAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSimpleTypeRefAccess().getRawTypeAssignment_0()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:6902:2: ( rule__SimpleTypeRef__RawTypeAssignment_0 )
            // InternalSimpleBeeLangTestLanguage.g:6902:3: rule__SimpleTypeRef__RawTypeAssignment_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SimpleTypeRef__RawTypeAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSimpleTypeRefAccess().getRawTypeAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 485, rule__SimpleTypeRef__Group__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleTypeRef__Group__0__Impl"


    // $ANTLR start "rule__SimpleTypeRef__Group__1"
    // InternalSimpleBeeLangTestLanguage.g:6910:1: rule__SimpleTypeRef__Group__1 : rule__SimpleTypeRef__Group__1__Impl ;
    public final void rule__SimpleTypeRef__Group__1() throws RecognitionException {
        int rule__SimpleTypeRef__Group__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 486) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:6914:1: ( rule__SimpleTypeRef__Group__1__Impl )
            // InternalSimpleBeeLangTestLanguage.g:6915:2: rule__SimpleTypeRef__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SimpleTypeRef__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 486, rule__SimpleTypeRef__Group__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleTypeRef__Group__1"


    // $ANTLR start "rule__SimpleTypeRef__Group__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:6921:1: rule__SimpleTypeRef__Group__1__Impl : ( ( rule__SimpleTypeRef__Group_1__0 )? ) ;
    public final void rule__SimpleTypeRef__Group__1__Impl() throws RecognitionException {
        int rule__SimpleTypeRef__Group__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 487) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:6925:1: ( ( ( rule__SimpleTypeRef__Group_1__0 )? ) )
            // InternalSimpleBeeLangTestLanguage.g:6926:1: ( ( rule__SimpleTypeRef__Group_1__0 )? )
            {
            // InternalSimpleBeeLangTestLanguage.g:6926:1: ( ( rule__SimpleTypeRef__Group_1__0 )? )
            // InternalSimpleBeeLangTestLanguage.g:6927:2: ( rule__SimpleTypeRef__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSimpleTypeRefAccess().getGroup_1()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:6928:2: ( rule__SimpleTypeRef__Group_1__0 )?
            int alt60=2;
            int LA60_0 = input.LA(1);

            if ( (LA60_0==28) ) {
                alt60=1;
            }
            switch (alt60) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:6928:3: rule__SimpleTypeRef__Group_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__SimpleTypeRef__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSimpleTypeRefAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 487, rule__SimpleTypeRef__Group__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleTypeRef__Group__1__Impl"


    // $ANTLR start "rule__SimpleTypeRef__Group_1__0"
    // InternalSimpleBeeLangTestLanguage.g:6937:1: rule__SimpleTypeRef__Group_1__0 : rule__SimpleTypeRef__Group_1__0__Impl rule__SimpleTypeRef__Group_1__1 ;
    public final void rule__SimpleTypeRef__Group_1__0() throws RecognitionException {
        int rule__SimpleTypeRef__Group_1__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 488) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:6941:1: ( rule__SimpleTypeRef__Group_1__0__Impl rule__SimpleTypeRef__Group_1__1 )
            // InternalSimpleBeeLangTestLanguage.g:6942:2: rule__SimpleTypeRef__Group_1__0__Impl rule__SimpleTypeRef__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_9);
            rule__SimpleTypeRef__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SimpleTypeRef__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 488, rule__SimpleTypeRef__Group_1__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleTypeRef__Group_1__0"


    // $ANTLR start "rule__SimpleTypeRef__Group_1__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:6949:1: rule__SimpleTypeRef__Group_1__0__Impl : ( '<' ) ;
    public final void rule__SimpleTypeRef__Group_1__0__Impl() throws RecognitionException {
        int rule__SimpleTypeRef__Group_1__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 489) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:6953:1: ( ( '<' ) )
            // InternalSimpleBeeLangTestLanguage.g:6954:1: ( '<' )
            {
            // InternalSimpleBeeLangTestLanguage.g:6954:1: ( '<' )
            // InternalSimpleBeeLangTestLanguage.g:6955:2: '<'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSimpleTypeRefAccess().getLessThanSignKeyword_1_0()); 
            }
            match(input,28,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSimpleTypeRefAccess().getLessThanSignKeyword_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 489, rule__SimpleTypeRef__Group_1__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleTypeRef__Group_1__0__Impl"


    // $ANTLR start "rule__SimpleTypeRef__Group_1__1"
    // InternalSimpleBeeLangTestLanguage.g:6964:1: rule__SimpleTypeRef__Group_1__1 : rule__SimpleTypeRef__Group_1__1__Impl rule__SimpleTypeRef__Group_1__2 ;
    public final void rule__SimpleTypeRef__Group_1__1() throws RecognitionException {
        int rule__SimpleTypeRef__Group_1__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 490) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:6968:1: ( rule__SimpleTypeRef__Group_1__1__Impl rule__SimpleTypeRef__Group_1__2 )
            // InternalSimpleBeeLangTestLanguage.g:6969:2: rule__SimpleTypeRef__Group_1__1__Impl rule__SimpleTypeRef__Group_1__2
            {
            pushFollow(FollowSets000.FOLLOW_38);
            rule__SimpleTypeRef__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SimpleTypeRef__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 490, rule__SimpleTypeRef__Group_1__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleTypeRef__Group_1__1"


    // $ANTLR start "rule__SimpleTypeRef__Group_1__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:6976:1: rule__SimpleTypeRef__Group_1__1__Impl : ( ( rule__SimpleTypeRef__ActualArgumentsListAssignment_1_1 ) ) ;
    public final void rule__SimpleTypeRef__Group_1__1__Impl() throws RecognitionException {
        int rule__SimpleTypeRef__Group_1__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 491) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:6980:1: ( ( ( rule__SimpleTypeRef__ActualArgumentsListAssignment_1_1 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:6981:1: ( ( rule__SimpleTypeRef__ActualArgumentsListAssignment_1_1 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:6981:1: ( ( rule__SimpleTypeRef__ActualArgumentsListAssignment_1_1 ) )
            // InternalSimpleBeeLangTestLanguage.g:6982:2: ( rule__SimpleTypeRef__ActualArgumentsListAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSimpleTypeRefAccess().getActualArgumentsListAssignment_1_1()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:6983:2: ( rule__SimpleTypeRef__ActualArgumentsListAssignment_1_1 )
            // InternalSimpleBeeLangTestLanguage.g:6983:3: rule__SimpleTypeRef__ActualArgumentsListAssignment_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SimpleTypeRef__ActualArgumentsListAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSimpleTypeRefAccess().getActualArgumentsListAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 491, rule__SimpleTypeRef__Group_1__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleTypeRef__Group_1__1__Impl"


    // $ANTLR start "rule__SimpleTypeRef__Group_1__2"
    // InternalSimpleBeeLangTestLanguage.g:6991:1: rule__SimpleTypeRef__Group_1__2 : rule__SimpleTypeRef__Group_1__2__Impl rule__SimpleTypeRef__Group_1__3 ;
    public final void rule__SimpleTypeRef__Group_1__2() throws RecognitionException {
        int rule__SimpleTypeRef__Group_1__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 492) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:6995:1: ( rule__SimpleTypeRef__Group_1__2__Impl rule__SimpleTypeRef__Group_1__3 )
            // InternalSimpleBeeLangTestLanguage.g:6996:2: rule__SimpleTypeRef__Group_1__2__Impl rule__SimpleTypeRef__Group_1__3
            {
            pushFollow(FollowSets000.FOLLOW_38);
            rule__SimpleTypeRef__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SimpleTypeRef__Group_1__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 492, rule__SimpleTypeRef__Group_1__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleTypeRef__Group_1__2"


    // $ANTLR start "rule__SimpleTypeRef__Group_1__2__Impl"
    // InternalSimpleBeeLangTestLanguage.g:7003:1: rule__SimpleTypeRef__Group_1__2__Impl : ( ( rule__SimpleTypeRef__Group_1_2__0 )* ) ;
    public final void rule__SimpleTypeRef__Group_1__2__Impl() throws RecognitionException {
        int rule__SimpleTypeRef__Group_1__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 493) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:7007:1: ( ( ( rule__SimpleTypeRef__Group_1_2__0 )* ) )
            // InternalSimpleBeeLangTestLanguage.g:7008:1: ( ( rule__SimpleTypeRef__Group_1_2__0 )* )
            {
            // InternalSimpleBeeLangTestLanguage.g:7008:1: ( ( rule__SimpleTypeRef__Group_1_2__0 )* )
            // InternalSimpleBeeLangTestLanguage.g:7009:2: ( rule__SimpleTypeRef__Group_1_2__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSimpleTypeRefAccess().getGroup_1_2()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:7010:2: ( rule__SimpleTypeRef__Group_1_2__0 )*
            loop61:
            do {
                int alt61=2;
                int LA61_0 = input.LA(1);

                if ( (LA61_0==48) ) {
                    alt61=1;
                }


                switch (alt61) {
            	case 1 :
            	    // InternalSimpleBeeLangTestLanguage.g:7010:3: rule__SimpleTypeRef__Group_1_2__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_11);
            	    rule__SimpleTypeRef__Group_1_2__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop61;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSimpleTypeRefAccess().getGroup_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 493, rule__SimpleTypeRef__Group_1__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleTypeRef__Group_1__2__Impl"


    // $ANTLR start "rule__SimpleTypeRef__Group_1__3"
    // InternalSimpleBeeLangTestLanguage.g:7018:1: rule__SimpleTypeRef__Group_1__3 : rule__SimpleTypeRef__Group_1__3__Impl ;
    public final void rule__SimpleTypeRef__Group_1__3() throws RecognitionException {
        int rule__SimpleTypeRef__Group_1__3_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 494) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:7022:1: ( rule__SimpleTypeRef__Group_1__3__Impl )
            // InternalSimpleBeeLangTestLanguage.g:7023:2: rule__SimpleTypeRef__Group_1__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SimpleTypeRef__Group_1__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 494, rule__SimpleTypeRef__Group_1__3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleTypeRef__Group_1__3"


    // $ANTLR start "rule__SimpleTypeRef__Group_1__3__Impl"
    // InternalSimpleBeeLangTestLanguage.g:7029:1: rule__SimpleTypeRef__Group_1__3__Impl : ( '>' ) ;
    public final void rule__SimpleTypeRef__Group_1__3__Impl() throws RecognitionException {
        int rule__SimpleTypeRef__Group_1__3__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 495) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:7033:1: ( ( '>' ) )
            // InternalSimpleBeeLangTestLanguage.g:7034:1: ( '>' )
            {
            // InternalSimpleBeeLangTestLanguage.g:7034:1: ( '>' )
            // InternalSimpleBeeLangTestLanguage.g:7035:2: '>'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSimpleTypeRefAccess().getGreaterThanSignKeyword_1_3()); 
            }
            match(input,27,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSimpleTypeRefAccess().getGreaterThanSignKeyword_1_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 495, rule__SimpleTypeRef__Group_1__3__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleTypeRef__Group_1__3__Impl"


    // $ANTLR start "rule__SimpleTypeRef__Group_1_2__0"
    // InternalSimpleBeeLangTestLanguage.g:7045:1: rule__SimpleTypeRef__Group_1_2__0 : rule__SimpleTypeRef__Group_1_2__0__Impl rule__SimpleTypeRef__Group_1_2__1 ;
    public final void rule__SimpleTypeRef__Group_1_2__0() throws RecognitionException {
        int rule__SimpleTypeRef__Group_1_2__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 496) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:7049:1: ( rule__SimpleTypeRef__Group_1_2__0__Impl rule__SimpleTypeRef__Group_1_2__1 )
            // InternalSimpleBeeLangTestLanguage.g:7050:2: rule__SimpleTypeRef__Group_1_2__0__Impl rule__SimpleTypeRef__Group_1_2__1
            {
            pushFollow(FollowSets000.FOLLOW_9);
            rule__SimpleTypeRef__Group_1_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SimpleTypeRef__Group_1_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 496, rule__SimpleTypeRef__Group_1_2__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleTypeRef__Group_1_2__0"


    // $ANTLR start "rule__SimpleTypeRef__Group_1_2__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:7057:1: rule__SimpleTypeRef__Group_1_2__0__Impl : ( ',' ) ;
    public final void rule__SimpleTypeRef__Group_1_2__0__Impl() throws RecognitionException {
        int rule__SimpleTypeRef__Group_1_2__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 497) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:7061:1: ( ( ',' ) )
            // InternalSimpleBeeLangTestLanguage.g:7062:1: ( ',' )
            {
            // InternalSimpleBeeLangTestLanguage.g:7062:1: ( ',' )
            // InternalSimpleBeeLangTestLanguage.g:7063:2: ','
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSimpleTypeRefAccess().getCommaKeyword_1_2_0()); 
            }
            match(input,48,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSimpleTypeRefAccess().getCommaKeyword_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 497, rule__SimpleTypeRef__Group_1_2__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleTypeRef__Group_1_2__0__Impl"


    // $ANTLR start "rule__SimpleTypeRef__Group_1_2__1"
    // InternalSimpleBeeLangTestLanguage.g:7072:1: rule__SimpleTypeRef__Group_1_2__1 : rule__SimpleTypeRef__Group_1_2__1__Impl ;
    public final void rule__SimpleTypeRef__Group_1_2__1() throws RecognitionException {
        int rule__SimpleTypeRef__Group_1_2__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 498) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:7076:1: ( rule__SimpleTypeRef__Group_1_2__1__Impl )
            // InternalSimpleBeeLangTestLanguage.g:7077:2: rule__SimpleTypeRef__Group_1_2__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SimpleTypeRef__Group_1_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 498, rule__SimpleTypeRef__Group_1_2__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleTypeRef__Group_1_2__1"


    // $ANTLR start "rule__SimpleTypeRef__Group_1_2__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:7083:1: rule__SimpleTypeRef__Group_1_2__1__Impl : ( ( rule__SimpleTypeRef__ActualArgumentsListAssignment_1_2_1 ) ) ;
    public final void rule__SimpleTypeRef__Group_1_2__1__Impl() throws RecognitionException {
        int rule__SimpleTypeRef__Group_1_2__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 499) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:7087:1: ( ( ( rule__SimpleTypeRef__ActualArgumentsListAssignment_1_2_1 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:7088:1: ( ( rule__SimpleTypeRef__ActualArgumentsListAssignment_1_2_1 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:7088:1: ( ( rule__SimpleTypeRef__ActualArgumentsListAssignment_1_2_1 ) )
            // InternalSimpleBeeLangTestLanguage.g:7089:2: ( rule__SimpleTypeRef__ActualArgumentsListAssignment_1_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSimpleTypeRefAccess().getActualArgumentsListAssignment_1_2_1()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:7090:2: ( rule__SimpleTypeRef__ActualArgumentsListAssignment_1_2_1 )
            // InternalSimpleBeeLangTestLanguage.g:7090:3: rule__SimpleTypeRef__ActualArgumentsListAssignment_1_2_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SimpleTypeRef__ActualArgumentsListAssignment_1_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSimpleTypeRefAccess().getActualArgumentsListAssignment_1_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 499, rule__SimpleTypeRef__Group_1_2__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleTypeRef__Group_1_2__1__Impl"


    // $ANTLR start "rule__ClosureTypeRef__Group__0"
    // InternalSimpleBeeLangTestLanguage.g:7099:1: rule__ClosureTypeRef__Group__0 : rule__ClosureTypeRef__Group__0__Impl rule__ClosureTypeRef__Group__1 ;
    public final void rule__ClosureTypeRef__Group__0() throws RecognitionException {
        int rule__ClosureTypeRef__Group__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 500) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:7103:1: ( rule__ClosureTypeRef__Group__0__Impl rule__ClosureTypeRef__Group__1 )
            // InternalSimpleBeeLangTestLanguage.g:7104:2: rule__ClosureTypeRef__Group__0__Impl rule__ClosureTypeRef__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_39);
            rule__ClosureTypeRef__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureTypeRef__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 500, rule__ClosureTypeRef__Group__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureTypeRef__Group__0"

}

@SuppressWarnings("all")
abstract class InternalSimpleBeeLangTestLanguageParser7 extends InternalSimpleBeeLangTestLanguageParser6 {

        InternalSimpleBeeLangTestLanguageParser7(TokenStream input) {
            this(input, new RecognizerSharedState());
        }

        InternalSimpleBeeLangTestLanguageParser7(TokenStream input, RecognizerSharedState state) {
            super(input, state);
        }

    // $ANTLR start "rule__ClosureTypeRef__Group__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:7111:1: rule__ClosureTypeRef__Group__0__Impl : ( '(' ) ;
    public final void rule__ClosureTypeRef__Group__0__Impl() throws RecognitionException {
        int rule__ClosureTypeRef__Group__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 501) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:7115:1: ( ( '(' ) )
            // InternalSimpleBeeLangTestLanguage.g:7116:1: ( '(' )
            {
            // InternalSimpleBeeLangTestLanguage.g:7116:1: ( '(' )
            // InternalSimpleBeeLangTestLanguage.g:7117:2: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureTypeRefAccess().getLeftParenthesisKeyword_0()); 
            }
            match(input,60,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureTypeRefAccess().getLeftParenthesisKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 501, rule__ClosureTypeRef__Group__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureTypeRef__Group__0__Impl"


    // $ANTLR start "rule__ClosureTypeRef__Group__1"
    // InternalSimpleBeeLangTestLanguage.g:7126:1: rule__ClosureTypeRef__Group__1 : rule__ClosureTypeRef__Group__1__Impl rule__ClosureTypeRef__Group__2 ;
    public final void rule__ClosureTypeRef__Group__1() throws RecognitionException {
        int rule__ClosureTypeRef__Group__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 502) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:7130:1: ( rule__ClosureTypeRef__Group__1__Impl rule__ClosureTypeRef__Group__2 )
            // InternalSimpleBeeLangTestLanguage.g:7131:2: rule__ClosureTypeRef__Group__1__Impl rule__ClosureTypeRef__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_39);
            rule__ClosureTypeRef__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureTypeRef__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 502, rule__ClosureTypeRef__Group__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureTypeRef__Group__1"


    // $ANTLR start "rule__ClosureTypeRef__Group__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:7138:1: rule__ClosureTypeRef__Group__1__Impl : ( ( rule__ClosureTypeRef__Alternatives_1 )? ) ;
    public final void rule__ClosureTypeRef__Group__1__Impl() throws RecognitionException {
        int rule__ClosureTypeRef__Group__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 503) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:7142:1: ( ( ( rule__ClosureTypeRef__Alternatives_1 )? ) )
            // InternalSimpleBeeLangTestLanguage.g:7143:1: ( ( rule__ClosureTypeRef__Alternatives_1 )? )
            {
            // InternalSimpleBeeLangTestLanguage.g:7143:1: ( ( rule__ClosureTypeRef__Alternatives_1 )? )
            // InternalSimpleBeeLangTestLanguage.g:7144:2: ( rule__ClosureTypeRef__Alternatives_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureTypeRefAccess().getAlternatives_1()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:7145:2: ( rule__ClosureTypeRef__Alternatives_1 )?
            int alt62=2;
            int LA62_0 = input.LA(1);

            if ( (LA62_0==RULE_ID||LA62_0==75) ) {
                alt62=1;
            }
            switch (alt62) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:7145:3: rule__ClosureTypeRef__Alternatives_1
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ClosureTypeRef__Alternatives_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureTypeRefAccess().getAlternatives_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 503, rule__ClosureTypeRef__Group__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureTypeRef__Group__1__Impl"


    // $ANTLR start "rule__ClosureTypeRef__Group__2"
    // InternalSimpleBeeLangTestLanguage.g:7153:1: rule__ClosureTypeRef__Group__2 : rule__ClosureTypeRef__Group__2__Impl rule__ClosureTypeRef__Group__3 ;
    public final void rule__ClosureTypeRef__Group__2() throws RecognitionException {
        int rule__ClosureTypeRef__Group__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 504) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:7157:1: ( rule__ClosureTypeRef__Group__2__Impl rule__ClosureTypeRef__Group__3 )
            // InternalSimpleBeeLangTestLanguage.g:7158:2: rule__ClosureTypeRef__Group__2__Impl rule__ClosureTypeRef__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_40);
            rule__ClosureTypeRef__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureTypeRef__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 504, rule__ClosureTypeRef__Group__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureTypeRef__Group__2"


    // $ANTLR start "rule__ClosureTypeRef__Group__2__Impl"
    // InternalSimpleBeeLangTestLanguage.g:7165:1: rule__ClosureTypeRef__Group__2__Impl : ( ')' ) ;
    public final void rule__ClosureTypeRef__Group__2__Impl() throws RecognitionException {
        int rule__ClosureTypeRef__Group__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 505) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:7169:1: ( ( ')' ) )
            // InternalSimpleBeeLangTestLanguage.g:7170:1: ( ')' )
            {
            // InternalSimpleBeeLangTestLanguage.g:7170:1: ( ')' )
            // InternalSimpleBeeLangTestLanguage.g:7171:2: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureTypeRefAccess().getRightParenthesisKeyword_2()); 
            }
            match(input,61,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureTypeRefAccess().getRightParenthesisKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 505, rule__ClosureTypeRef__Group__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureTypeRef__Group__2__Impl"


    // $ANTLR start "rule__ClosureTypeRef__Group__3"
    // InternalSimpleBeeLangTestLanguage.g:7180:1: rule__ClosureTypeRef__Group__3 : rule__ClosureTypeRef__Group__3__Impl rule__ClosureTypeRef__Group__4 ;
    public final void rule__ClosureTypeRef__Group__3() throws RecognitionException {
        int rule__ClosureTypeRef__Group__3_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 506) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:7184:1: ( rule__ClosureTypeRef__Group__3__Impl rule__ClosureTypeRef__Group__4 )
            // InternalSimpleBeeLangTestLanguage.g:7185:2: rule__ClosureTypeRef__Group__3__Impl rule__ClosureTypeRef__Group__4
            {
            pushFollow(FollowSets000.FOLLOW_9);
            rule__ClosureTypeRef__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureTypeRef__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 506, rule__ClosureTypeRef__Group__3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureTypeRef__Group__3"


    // $ANTLR start "rule__ClosureTypeRef__Group__3__Impl"
    // InternalSimpleBeeLangTestLanguage.g:7192:1: rule__ClosureTypeRef__Group__3__Impl : ( '=>' ) ;
    public final void rule__ClosureTypeRef__Group__3__Impl() throws RecognitionException {
        int rule__ClosureTypeRef__Group__3__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 507) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:7196:1: ( ( '=>' ) )
            // InternalSimpleBeeLangTestLanguage.g:7197:1: ( '=>' )
            {
            // InternalSimpleBeeLangTestLanguage.g:7197:1: ( '=>' )
            // InternalSimpleBeeLangTestLanguage.g:7198:2: '=>'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureTypeRefAccess().getEqualsSignGreaterThanSignKeyword_3()); 
            }
            match(input,62,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureTypeRefAccess().getEqualsSignGreaterThanSignKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 507, rule__ClosureTypeRef__Group__3__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureTypeRef__Group__3__Impl"


    // $ANTLR start "rule__ClosureTypeRef__Group__4"
    // InternalSimpleBeeLangTestLanguage.g:7207:1: rule__ClosureTypeRef__Group__4 : rule__ClosureTypeRef__Group__4__Impl ;
    public final void rule__ClosureTypeRef__Group__4() throws RecognitionException {
        int rule__ClosureTypeRef__Group__4_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 508) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:7211:1: ( rule__ClosureTypeRef__Group__4__Impl )
            // InternalSimpleBeeLangTestLanguage.g:7212:2: rule__ClosureTypeRef__Group__4__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureTypeRef__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 508, rule__ClosureTypeRef__Group__4_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureTypeRef__Group__4"


    // $ANTLR start "rule__ClosureTypeRef__Group__4__Impl"
    // InternalSimpleBeeLangTestLanguage.g:7218:1: rule__ClosureTypeRef__Group__4__Impl : ( ( rule__ClosureTypeRef__ReturnTypeAssignment_4 ) ) ;
    public final void rule__ClosureTypeRef__Group__4__Impl() throws RecognitionException {
        int rule__ClosureTypeRef__Group__4__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 509) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:7222:1: ( ( ( rule__ClosureTypeRef__ReturnTypeAssignment_4 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:7223:1: ( ( rule__ClosureTypeRef__ReturnTypeAssignment_4 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:7223:1: ( ( rule__ClosureTypeRef__ReturnTypeAssignment_4 ) )
            // InternalSimpleBeeLangTestLanguage.g:7224:2: ( rule__ClosureTypeRef__ReturnTypeAssignment_4 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureTypeRefAccess().getReturnTypeAssignment_4()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:7225:2: ( rule__ClosureTypeRef__ReturnTypeAssignment_4 )
            // InternalSimpleBeeLangTestLanguage.g:7225:3: rule__ClosureTypeRef__ReturnTypeAssignment_4
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureTypeRef__ReturnTypeAssignment_4();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureTypeRefAccess().getReturnTypeAssignment_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 509, rule__ClosureTypeRef__Group__4__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureTypeRef__Group__4__Impl"


    // $ANTLR start "rule__ClosureTypeRef__Group_1_0__0"
    // InternalSimpleBeeLangTestLanguage.g:7234:1: rule__ClosureTypeRef__Group_1_0__0 : rule__ClosureTypeRef__Group_1_0__0__Impl rule__ClosureTypeRef__Group_1_0__1 ;
    public final void rule__ClosureTypeRef__Group_1_0__0() throws RecognitionException {
        int rule__ClosureTypeRef__Group_1_0__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 510) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:7238:1: ( rule__ClosureTypeRef__Group_1_0__0__Impl rule__ClosureTypeRef__Group_1_0__1 )
            // InternalSimpleBeeLangTestLanguage.g:7239:2: rule__ClosureTypeRef__Group_1_0__0__Impl rule__ClosureTypeRef__Group_1_0__1
            {
            pushFollow(FollowSets000.FOLLOW_10);
            rule__ClosureTypeRef__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureTypeRef__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 510, rule__ClosureTypeRef__Group_1_0__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureTypeRef__Group_1_0__0"


    // $ANTLR start "rule__ClosureTypeRef__Group_1_0__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:7246:1: rule__ClosureTypeRef__Group_1_0__0__Impl : ( ( rule__ClosureTypeRef__ParameterTypesAssignment_1_0_0 ) ) ;
    public final void rule__ClosureTypeRef__Group_1_0__0__Impl() throws RecognitionException {
        int rule__ClosureTypeRef__Group_1_0__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 511) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:7250:1: ( ( ( rule__ClosureTypeRef__ParameterTypesAssignment_1_0_0 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:7251:1: ( ( rule__ClosureTypeRef__ParameterTypesAssignment_1_0_0 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:7251:1: ( ( rule__ClosureTypeRef__ParameterTypesAssignment_1_0_0 ) )
            // InternalSimpleBeeLangTestLanguage.g:7252:2: ( rule__ClosureTypeRef__ParameterTypesAssignment_1_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureTypeRefAccess().getParameterTypesAssignment_1_0_0()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:7253:2: ( rule__ClosureTypeRef__ParameterTypesAssignment_1_0_0 )
            // InternalSimpleBeeLangTestLanguage.g:7253:3: rule__ClosureTypeRef__ParameterTypesAssignment_1_0_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureTypeRef__ParameterTypesAssignment_1_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureTypeRefAccess().getParameterTypesAssignment_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 511, rule__ClosureTypeRef__Group_1_0__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureTypeRef__Group_1_0__0__Impl"


    // $ANTLR start "rule__ClosureTypeRef__Group_1_0__1"
    // InternalSimpleBeeLangTestLanguage.g:7261:1: rule__ClosureTypeRef__Group_1_0__1 : rule__ClosureTypeRef__Group_1_0__1__Impl rule__ClosureTypeRef__Group_1_0__2 ;
    public final void rule__ClosureTypeRef__Group_1_0__1() throws RecognitionException {
        int rule__ClosureTypeRef__Group_1_0__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 512) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:7265:1: ( rule__ClosureTypeRef__Group_1_0__1__Impl rule__ClosureTypeRef__Group_1_0__2 )
            // InternalSimpleBeeLangTestLanguage.g:7266:2: rule__ClosureTypeRef__Group_1_0__1__Impl rule__ClosureTypeRef__Group_1_0__2
            {
            pushFollow(FollowSets000.FOLLOW_10);
            rule__ClosureTypeRef__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureTypeRef__Group_1_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 512, rule__ClosureTypeRef__Group_1_0__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureTypeRef__Group_1_0__1"


    // $ANTLR start "rule__ClosureTypeRef__Group_1_0__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:7273:1: rule__ClosureTypeRef__Group_1_0__1__Impl : ( ( rule__ClosureTypeRef__Group_1_0_1__0 )* ) ;
    public final void rule__ClosureTypeRef__Group_1_0__1__Impl() throws RecognitionException {
        int rule__ClosureTypeRef__Group_1_0__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 513) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:7277:1: ( ( ( rule__ClosureTypeRef__Group_1_0_1__0 )* ) )
            // InternalSimpleBeeLangTestLanguage.g:7278:1: ( ( rule__ClosureTypeRef__Group_1_0_1__0 )* )
            {
            // InternalSimpleBeeLangTestLanguage.g:7278:1: ( ( rule__ClosureTypeRef__Group_1_0_1__0 )* )
            // InternalSimpleBeeLangTestLanguage.g:7279:2: ( rule__ClosureTypeRef__Group_1_0_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureTypeRefAccess().getGroup_1_0_1()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:7280:2: ( rule__ClosureTypeRef__Group_1_0_1__0 )*
            loop63:
            do {
                int alt63=2;
                int LA63_0 = input.LA(1);

                if ( (LA63_0==48) ) {
                    int LA63_1 = input.LA(2);

                    if ( (LA63_1==RULE_ID) ) {
                        alt63=1;
                    }


                }


                switch (alt63) {
            	case 1 :
            	    // InternalSimpleBeeLangTestLanguage.g:7280:3: rule__ClosureTypeRef__Group_1_0_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_11);
            	    rule__ClosureTypeRef__Group_1_0_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop63;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureTypeRefAccess().getGroup_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 513, rule__ClosureTypeRef__Group_1_0__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureTypeRef__Group_1_0__1__Impl"


    // $ANTLR start "rule__ClosureTypeRef__Group_1_0__2"
    // InternalSimpleBeeLangTestLanguage.g:7288:1: rule__ClosureTypeRef__Group_1_0__2 : rule__ClosureTypeRef__Group_1_0__2__Impl ;
    public final void rule__ClosureTypeRef__Group_1_0__2() throws RecognitionException {
        int rule__ClosureTypeRef__Group_1_0__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 514) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:7292:1: ( rule__ClosureTypeRef__Group_1_0__2__Impl )
            // InternalSimpleBeeLangTestLanguage.g:7293:2: rule__ClosureTypeRef__Group_1_0__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureTypeRef__Group_1_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 514, rule__ClosureTypeRef__Group_1_0__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureTypeRef__Group_1_0__2"


    // $ANTLR start "rule__ClosureTypeRef__Group_1_0__2__Impl"
    // InternalSimpleBeeLangTestLanguage.g:7299:1: rule__ClosureTypeRef__Group_1_0__2__Impl : ( ( rule__ClosureTypeRef__Group_1_0_2__0 )? ) ;
    public final void rule__ClosureTypeRef__Group_1_0__2__Impl() throws RecognitionException {
        int rule__ClosureTypeRef__Group_1_0__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 515) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:7303:1: ( ( ( rule__ClosureTypeRef__Group_1_0_2__0 )? ) )
            // InternalSimpleBeeLangTestLanguage.g:7304:1: ( ( rule__ClosureTypeRef__Group_1_0_2__0 )? )
            {
            // InternalSimpleBeeLangTestLanguage.g:7304:1: ( ( rule__ClosureTypeRef__Group_1_0_2__0 )? )
            // InternalSimpleBeeLangTestLanguage.g:7305:2: ( rule__ClosureTypeRef__Group_1_0_2__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureTypeRefAccess().getGroup_1_0_2()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:7306:2: ( rule__ClosureTypeRef__Group_1_0_2__0 )?
            int alt64=2;
            int LA64_0 = input.LA(1);

            if ( (LA64_0==48) ) {
                alt64=1;
            }
            switch (alt64) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:7306:3: rule__ClosureTypeRef__Group_1_0_2__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ClosureTypeRef__Group_1_0_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureTypeRefAccess().getGroup_1_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 515, rule__ClosureTypeRef__Group_1_0__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureTypeRef__Group_1_0__2__Impl"


    // $ANTLR start "rule__ClosureTypeRef__Group_1_0_1__0"
    // InternalSimpleBeeLangTestLanguage.g:7315:1: rule__ClosureTypeRef__Group_1_0_1__0 : rule__ClosureTypeRef__Group_1_0_1__0__Impl rule__ClosureTypeRef__Group_1_0_1__1 ;
    public final void rule__ClosureTypeRef__Group_1_0_1__0() throws RecognitionException {
        int rule__ClosureTypeRef__Group_1_0_1__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 516) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:7319:1: ( rule__ClosureTypeRef__Group_1_0_1__0__Impl rule__ClosureTypeRef__Group_1_0_1__1 )
            // InternalSimpleBeeLangTestLanguage.g:7320:2: rule__ClosureTypeRef__Group_1_0_1__0__Impl rule__ClosureTypeRef__Group_1_0_1__1
            {
            pushFollow(FollowSets000.FOLLOW_9);
            rule__ClosureTypeRef__Group_1_0_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureTypeRef__Group_1_0_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 516, rule__ClosureTypeRef__Group_1_0_1__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureTypeRef__Group_1_0_1__0"


    // $ANTLR start "rule__ClosureTypeRef__Group_1_0_1__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:7327:1: rule__ClosureTypeRef__Group_1_0_1__0__Impl : ( ',' ) ;
    public final void rule__ClosureTypeRef__Group_1_0_1__0__Impl() throws RecognitionException {
        int rule__ClosureTypeRef__Group_1_0_1__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 517) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:7331:1: ( ( ',' ) )
            // InternalSimpleBeeLangTestLanguage.g:7332:1: ( ',' )
            {
            // InternalSimpleBeeLangTestLanguage.g:7332:1: ( ',' )
            // InternalSimpleBeeLangTestLanguage.g:7333:2: ','
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureTypeRefAccess().getCommaKeyword_1_0_1_0()); 
            }
            match(input,48,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureTypeRefAccess().getCommaKeyword_1_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 517, rule__ClosureTypeRef__Group_1_0_1__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureTypeRef__Group_1_0_1__0__Impl"


    // $ANTLR start "rule__ClosureTypeRef__Group_1_0_1__1"
    // InternalSimpleBeeLangTestLanguage.g:7342:1: rule__ClosureTypeRef__Group_1_0_1__1 : rule__ClosureTypeRef__Group_1_0_1__1__Impl ;
    public final void rule__ClosureTypeRef__Group_1_0_1__1() throws RecognitionException {
        int rule__ClosureTypeRef__Group_1_0_1__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 518) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:7346:1: ( rule__ClosureTypeRef__Group_1_0_1__1__Impl )
            // InternalSimpleBeeLangTestLanguage.g:7347:2: rule__ClosureTypeRef__Group_1_0_1__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureTypeRef__Group_1_0_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 518, rule__ClosureTypeRef__Group_1_0_1__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureTypeRef__Group_1_0_1__1"


    // $ANTLR start "rule__ClosureTypeRef__Group_1_0_1__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:7353:1: rule__ClosureTypeRef__Group_1_0_1__1__Impl : ( ( rule__ClosureTypeRef__ParameterTypesAssignment_1_0_1_1 ) ) ;
    public final void rule__ClosureTypeRef__Group_1_0_1__1__Impl() throws RecognitionException {
        int rule__ClosureTypeRef__Group_1_0_1__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 519) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:7357:1: ( ( ( rule__ClosureTypeRef__ParameterTypesAssignment_1_0_1_1 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:7358:1: ( ( rule__ClosureTypeRef__ParameterTypesAssignment_1_0_1_1 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:7358:1: ( ( rule__ClosureTypeRef__ParameterTypesAssignment_1_0_1_1 ) )
            // InternalSimpleBeeLangTestLanguage.g:7359:2: ( rule__ClosureTypeRef__ParameterTypesAssignment_1_0_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureTypeRefAccess().getParameterTypesAssignment_1_0_1_1()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:7360:2: ( rule__ClosureTypeRef__ParameterTypesAssignment_1_0_1_1 )
            // InternalSimpleBeeLangTestLanguage.g:7360:3: rule__ClosureTypeRef__ParameterTypesAssignment_1_0_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureTypeRef__ParameterTypesAssignment_1_0_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureTypeRefAccess().getParameterTypesAssignment_1_0_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 519, rule__ClosureTypeRef__Group_1_0_1__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureTypeRef__Group_1_0_1__1__Impl"


    // $ANTLR start "rule__ClosureTypeRef__Group_1_0_2__0"
    // InternalSimpleBeeLangTestLanguage.g:7369:1: rule__ClosureTypeRef__Group_1_0_2__0 : rule__ClosureTypeRef__Group_1_0_2__0__Impl rule__ClosureTypeRef__Group_1_0_2__1 ;
    public final void rule__ClosureTypeRef__Group_1_0_2__0() throws RecognitionException {
        int rule__ClosureTypeRef__Group_1_0_2__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 520) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:7373:1: ( rule__ClosureTypeRef__Group_1_0_2__0__Impl rule__ClosureTypeRef__Group_1_0_2__1 )
            // InternalSimpleBeeLangTestLanguage.g:7374:2: rule__ClosureTypeRef__Group_1_0_2__0__Impl rule__ClosureTypeRef__Group_1_0_2__1
            {
            pushFollow(FollowSets000.FOLLOW_31);
            rule__ClosureTypeRef__Group_1_0_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureTypeRef__Group_1_0_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 520, rule__ClosureTypeRef__Group_1_0_2__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureTypeRef__Group_1_0_2__0"


    // $ANTLR start "rule__ClosureTypeRef__Group_1_0_2__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:7381:1: rule__ClosureTypeRef__Group_1_0_2__0__Impl : ( ',' ) ;
    public final void rule__ClosureTypeRef__Group_1_0_2__0__Impl() throws RecognitionException {
        int rule__ClosureTypeRef__Group_1_0_2__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 521) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:7385:1: ( ( ',' ) )
            // InternalSimpleBeeLangTestLanguage.g:7386:1: ( ',' )
            {
            // InternalSimpleBeeLangTestLanguage.g:7386:1: ( ',' )
            // InternalSimpleBeeLangTestLanguage.g:7387:2: ','
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureTypeRefAccess().getCommaKeyword_1_0_2_0()); 
            }
            match(input,48,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureTypeRefAccess().getCommaKeyword_1_0_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 521, rule__ClosureTypeRef__Group_1_0_2__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureTypeRef__Group_1_0_2__0__Impl"


    // $ANTLR start "rule__ClosureTypeRef__Group_1_0_2__1"
    // InternalSimpleBeeLangTestLanguage.g:7396:1: rule__ClosureTypeRef__Group_1_0_2__1 : rule__ClosureTypeRef__Group_1_0_2__1__Impl rule__ClosureTypeRef__Group_1_0_2__2 ;
    public final void rule__ClosureTypeRef__Group_1_0_2__1() throws RecognitionException {
        int rule__ClosureTypeRef__Group_1_0_2__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 522) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:7400:1: ( rule__ClosureTypeRef__Group_1_0_2__1__Impl rule__ClosureTypeRef__Group_1_0_2__2 )
            // InternalSimpleBeeLangTestLanguage.g:7401:2: rule__ClosureTypeRef__Group_1_0_2__1__Impl rule__ClosureTypeRef__Group_1_0_2__2
            {
            pushFollow(FollowSets000.FOLLOW_9);
            rule__ClosureTypeRef__Group_1_0_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureTypeRef__Group_1_0_2__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 522, rule__ClosureTypeRef__Group_1_0_2__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureTypeRef__Group_1_0_2__1"


    // $ANTLR start "rule__ClosureTypeRef__Group_1_0_2__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:7408:1: rule__ClosureTypeRef__Group_1_0_2__1__Impl : ( ( rule__ClosureTypeRef__VarArgsAssignment_1_0_2_1 ) ) ;
    public final void rule__ClosureTypeRef__Group_1_0_2__1__Impl() throws RecognitionException {
        int rule__ClosureTypeRef__Group_1_0_2__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 523) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:7412:1: ( ( ( rule__ClosureTypeRef__VarArgsAssignment_1_0_2_1 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:7413:1: ( ( rule__ClosureTypeRef__VarArgsAssignment_1_0_2_1 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:7413:1: ( ( rule__ClosureTypeRef__VarArgsAssignment_1_0_2_1 ) )
            // InternalSimpleBeeLangTestLanguage.g:7414:2: ( rule__ClosureTypeRef__VarArgsAssignment_1_0_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureTypeRefAccess().getVarArgsAssignment_1_0_2_1()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:7415:2: ( rule__ClosureTypeRef__VarArgsAssignment_1_0_2_1 )
            // InternalSimpleBeeLangTestLanguage.g:7415:3: rule__ClosureTypeRef__VarArgsAssignment_1_0_2_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureTypeRef__VarArgsAssignment_1_0_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureTypeRefAccess().getVarArgsAssignment_1_0_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 523, rule__ClosureTypeRef__Group_1_0_2__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureTypeRef__Group_1_0_2__1__Impl"


    // $ANTLR start "rule__ClosureTypeRef__Group_1_0_2__2"
    // InternalSimpleBeeLangTestLanguage.g:7423:1: rule__ClosureTypeRef__Group_1_0_2__2 : rule__ClosureTypeRef__Group_1_0_2__2__Impl ;
    public final void rule__ClosureTypeRef__Group_1_0_2__2() throws RecognitionException {
        int rule__ClosureTypeRef__Group_1_0_2__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 524) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:7427:1: ( rule__ClosureTypeRef__Group_1_0_2__2__Impl )
            // InternalSimpleBeeLangTestLanguage.g:7428:2: rule__ClosureTypeRef__Group_1_0_2__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureTypeRef__Group_1_0_2__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 524, rule__ClosureTypeRef__Group_1_0_2__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureTypeRef__Group_1_0_2__2"


    // $ANTLR start "rule__ClosureTypeRef__Group_1_0_2__2__Impl"
    // InternalSimpleBeeLangTestLanguage.g:7434:1: rule__ClosureTypeRef__Group_1_0_2__2__Impl : ( ( rule__ClosureTypeRef__ParameterTypesAssignment_1_0_2_2 ) ) ;
    public final void rule__ClosureTypeRef__Group_1_0_2__2__Impl() throws RecognitionException {
        int rule__ClosureTypeRef__Group_1_0_2__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 525) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:7438:1: ( ( ( rule__ClosureTypeRef__ParameterTypesAssignment_1_0_2_2 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:7439:1: ( ( rule__ClosureTypeRef__ParameterTypesAssignment_1_0_2_2 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:7439:1: ( ( rule__ClosureTypeRef__ParameterTypesAssignment_1_0_2_2 ) )
            // InternalSimpleBeeLangTestLanguage.g:7440:2: ( rule__ClosureTypeRef__ParameterTypesAssignment_1_0_2_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureTypeRefAccess().getParameterTypesAssignment_1_0_2_2()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:7441:2: ( rule__ClosureTypeRef__ParameterTypesAssignment_1_0_2_2 )
            // InternalSimpleBeeLangTestLanguage.g:7441:3: rule__ClosureTypeRef__ParameterTypesAssignment_1_0_2_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureTypeRef__ParameterTypesAssignment_1_0_2_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureTypeRefAccess().getParameterTypesAssignment_1_0_2_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 525, rule__ClosureTypeRef__Group_1_0_2__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureTypeRef__Group_1_0_2__2__Impl"


    // $ANTLR start "rule__ClosureTypeRef__Group_1_1__0"
    // InternalSimpleBeeLangTestLanguage.g:7450:1: rule__ClosureTypeRef__Group_1_1__0 : rule__ClosureTypeRef__Group_1_1__0__Impl rule__ClosureTypeRef__Group_1_1__1 ;
    public final void rule__ClosureTypeRef__Group_1_1__0() throws RecognitionException {
        int rule__ClosureTypeRef__Group_1_1__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 526) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:7454:1: ( rule__ClosureTypeRef__Group_1_1__0__Impl rule__ClosureTypeRef__Group_1_1__1 )
            // InternalSimpleBeeLangTestLanguage.g:7455:2: rule__ClosureTypeRef__Group_1_1__0__Impl rule__ClosureTypeRef__Group_1_1__1
            {
            pushFollow(FollowSets000.FOLLOW_9);
            rule__ClosureTypeRef__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureTypeRef__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 526, rule__ClosureTypeRef__Group_1_1__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureTypeRef__Group_1_1__0"


    // $ANTLR start "rule__ClosureTypeRef__Group_1_1__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:7462:1: rule__ClosureTypeRef__Group_1_1__0__Impl : ( ( rule__ClosureTypeRef__VarArgsAssignment_1_1_0 ) ) ;
    public final void rule__ClosureTypeRef__Group_1_1__0__Impl() throws RecognitionException {
        int rule__ClosureTypeRef__Group_1_1__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 527) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:7466:1: ( ( ( rule__ClosureTypeRef__VarArgsAssignment_1_1_0 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:7467:1: ( ( rule__ClosureTypeRef__VarArgsAssignment_1_1_0 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:7467:1: ( ( rule__ClosureTypeRef__VarArgsAssignment_1_1_0 ) )
            // InternalSimpleBeeLangTestLanguage.g:7468:2: ( rule__ClosureTypeRef__VarArgsAssignment_1_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureTypeRefAccess().getVarArgsAssignment_1_1_0()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:7469:2: ( rule__ClosureTypeRef__VarArgsAssignment_1_1_0 )
            // InternalSimpleBeeLangTestLanguage.g:7469:3: rule__ClosureTypeRef__VarArgsAssignment_1_1_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureTypeRef__VarArgsAssignment_1_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureTypeRefAccess().getVarArgsAssignment_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 527, rule__ClosureTypeRef__Group_1_1__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureTypeRef__Group_1_1__0__Impl"


    // $ANTLR start "rule__ClosureTypeRef__Group_1_1__1"
    // InternalSimpleBeeLangTestLanguage.g:7477:1: rule__ClosureTypeRef__Group_1_1__1 : rule__ClosureTypeRef__Group_1_1__1__Impl ;
    public final void rule__ClosureTypeRef__Group_1_1__1() throws RecognitionException {
        int rule__ClosureTypeRef__Group_1_1__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 528) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:7481:1: ( rule__ClosureTypeRef__Group_1_1__1__Impl )
            // InternalSimpleBeeLangTestLanguage.g:7482:2: rule__ClosureTypeRef__Group_1_1__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureTypeRef__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 528, rule__ClosureTypeRef__Group_1_1__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureTypeRef__Group_1_1__1"


    // $ANTLR start "rule__ClosureTypeRef__Group_1_1__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:7488:1: rule__ClosureTypeRef__Group_1_1__1__Impl : ( ( rule__ClosureTypeRef__ParameterTypesAssignment_1_1_1 ) ) ;
    public final void rule__ClosureTypeRef__Group_1_1__1__Impl() throws RecognitionException {
        int rule__ClosureTypeRef__Group_1_1__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 529) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:7492:1: ( ( ( rule__ClosureTypeRef__ParameterTypesAssignment_1_1_1 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:7493:1: ( ( rule__ClosureTypeRef__ParameterTypesAssignment_1_1_1 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:7493:1: ( ( rule__ClosureTypeRef__ParameterTypesAssignment_1_1_1 ) )
            // InternalSimpleBeeLangTestLanguage.g:7494:2: ( rule__ClosureTypeRef__ParameterTypesAssignment_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureTypeRefAccess().getParameterTypesAssignment_1_1_1()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:7495:2: ( rule__ClosureTypeRef__ParameterTypesAssignment_1_1_1 )
            // InternalSimpleBeeLangTestLanguage.g:7495:3: rule__ClosureTypeRef__ParameterTypesAssignment_1_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureTypeRef__ParameterTypesAssignment_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureTypeRefAccess().getParameterTypesAssignment_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 529, rule__ClosureTypeRef__Group_1_1__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureTypeRef__Group_1_1__1__Impl"


    // $ANTLR start "rule__CachedExpression__Group_0__0"
    // InternalSimpleBeeLangTestLanguage.g:7504:1: rule__CachedExpression__Group_0__0 : rule__CachedExpression__Group_0__0__Impl rule__CachedExpression__Group_0__1 ;
    public final void rule__CachedExpression__Group_0__0() throws RecognitionException {
        int rule__CachedExpression__Group_0__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 530) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:7508:1: ( rule__CachedExpression__Group_0__0__Impl rule__CachedExpression__Group_0__1 )
            // InternalSimpleBeeLangTestLanguage.g:7509:2: rule__CachedExpression__Group_0__0__Impl rule__CachedExpression__Group_0__1
            {
            pushFollow(FollowSets000.FOLLOW_41);
            rule__CachedExpression__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__CachedExpression__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 530, rule__CachedExpression__Group_0__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CachedExpression__Group_0__0"


    // $ANTLR start "rule__CachedExpression__Group_0__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:7516:1: rule__CachedExpression__Group_0__0__Impl : ( () ) ;
    public final void rule__CachedExpression__Group_0__0__Impl() throws RecognitionException {
        int rule__CachedExpression__Group_0__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 531) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:7520:1: ( ( () ) )
            // InternalSimpleBeeLangTestLanguage.g:7521:1: ( () )
            {
            // InternalSimpleBeeLangTestLanguage.g:7521:1: ( () )
            // InternalSimpleBeeLangTestLanguage.g:7522:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCachedExpressionAccess().getCachedExpressionAction_0_0()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:7523:2: ()
            // InternalSimpleBeeLangTestLanguage.g:7523:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCachedExpressionAccess().getCachedExpressionAction_0_0()); 
            }

            }


            }

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 531, rule__CachedExpression__Group_0__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CachedExpression__Group_0__0__Impl"


    // $ANTLR start "rule__CachedExpression__Group_0__1"
    // InternalSimpleBeeLangTestLanguage.g:7531:1: rule__CachedExpression__Group_0__1 : rule__CachedExpression__Group_0__1__Impl rule__CachedExpression__Group_0__2 ;
    public final void rule__CachedExpression__Group_0__1() throws RecognitionException {
        int rule__CachedExpression__Group_0__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 532) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:7535:1: ( rule__CachedExpression__Group_0__1__Impl rule__CachedExpression__Group_0__2 )
            // InternalSimpleBeeLangTestLanguage.g:7536:2: rule__CachedExpression__Group_0__1__Impl rule__CachedExpression__Group_0__2
            {
            pushFollow(FollowSets000.FOLLOW_19);
            rule__CachedExpression__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__CachedExpression__Group_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 532, rule__CachedExpression__Group_0__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CachedExpression__Group_0__1"


    // $ANTLR start "rule__CachedExpression__Group_0__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:7543:1: rule__CachedExpression__Group_0__1__Impl : ( 'cached' ) ;
    public final void rule__CachedExpression__Group_0__1__Impl() throws RecognitionException {
        int rule__CachedExpression__Group_0__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 533) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:7547:1: ( ( 'cached' ) )
            // InternalSimpleBeeLangTestLanguage.g:7548:1: ( 'cached' )
            {
            // InternalSimpleBeeLangTestLanguage.g:7548:1: ( 'cached' )
            // InternalSimpleBeeLangTestLanguage.g:7549:2: 'cached'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCachedExpressionAccess().getCachedKeyword_0_1()); 
            }
            match(input,63,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCachedExpressionAccess().getCachedKeyword_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 533, rule__CachedExpression__Group_0__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CachedExpression__Group_0__1__Impl"


    // $ANTLR start "rule__CachedExpression__Group_0__2"
    // InternalSimpleBeeLangTestLanguage.g:7558:1: rule__CachedExpression__Group_0__2 : rule__CachedExpression__Group_0__2__Impl ;
    public final void rule__CachedExpression__Group_0__2() throws RecognitionException {
        int rule__CachedExpression__Group_0__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 534) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:7562:1: ( rule__CachedExpression__Group_0__2__Impl )
            // InternalSimpleBeeLangTestLanguage.g:7563:2: rule__CachedExpression__Group_0__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__CachedExpression__Group_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 534, rule__CachedExpression__Group_0__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CachedExpression__Group_0__2"


    // $ANTLR start "rule__CachedExpression__Group_0__2__Impl"
    // InternalSimpleBeeLangTestLanguage.g:7569:1: rule__CachedExpression__Group_0__2__Impl : ( ( rule__CachedExpression__ExprAssignment_0_2 ) ) ;
    public final void rule__CachedExpression__Group_0__2__Impl() throws RecognitionException {
        int rule__CachedExpression__Group_0__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 535) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:7573:1: ( ( ( rule__CachedExpression__ExprAssignment_0_2 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:7574:1: ( ( rule__CachedExpression__ExprAssignment_0_2 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:7574:1: ( ( rule__CachedExpression__ExprAssignment_0_2 ) )
            // InternalSimpleBeeLangTestLanguage.g:7575:2: ( rule__CachedExpression__ExprAssignment_0_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCachedExpressionAccess().getExprAssignment_0_2()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:7576:2: ( rule__CachedExpression__ExprAssignment_0_2 )
            // InternalSimpleBeeLangTestLanguage.g:7576:3: rule__CachedExpression__ExprAssignment_0_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__CachedExpression__ExprAssignment_0_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCachedExpressionAccess().getExprAssignment_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 535, rule__CachedExpression__Group_0__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CachedExpression__Group_0__2__Impl"


    // $ANTLR start "rule__OrExpression__Group__0"
    // InternalSimpleBeeLangTestLanguage.g:7585:1: rule__OrExpression__Group__0 : rule__OrExpression__Group__0__Impl rule__OrExpression__Group__1 ;
    public final void rule__OrExpression__Group__0() throws RecognitionException {
        int rule__OrExpression__Group__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 536) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:7589:1: ( rule__OrExpression__Group__0__Impl rule__OrExpression__Group__1 )
            // InternalSimpleBeeLangTestLanguage.g:7590:2: rule__OrExpression__Group__0__Impl rule__OrExpression__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_42);
            rule__OrExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 536, rule__OrExpression__Group__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrExpression__Group__0"


    // $ANTLR start "rule__OrExpression__Group__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:7597:1: rule__OrExpression__Group__0__Impl : ( ruleAndExpression ) ;
    public final void rule__OrExpression__Group__0__Impl() throws RecognitionException {
        int rule__OrExpression__Group__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 537) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:7601:1: ( ( ruleAndExpression ) )
            // InternalSimpleBeeLangTestLanguage.g:7602:1: ( ruleAndExpression )
            {
            // InternalSimpleBeeLangTestLanguage.g:7602:1: ( ruleAndExpression )
            // InternalSimpleBeeLangTestLanguage.g:7603:2: ruleAndExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrExpressionAccess().getAndExpressionParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAndExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrExpressionAccess().getAndExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 537, rule__OrExpression__Group__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrExpression__Group__0__Impl"


    // $ANTLR start "rule__OrExpression__Group__1"
    // InternalSimpleBeeLangTestLanguage.g:7612:1: rule__OrExpression__Group__1 : rule__OrExpression__Group__1__Impl ;
    public final void rule__OrExpression__Group__1() throws RecognitionException {
        int rule__OrExpression__Group__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 538) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:7616:1: ( rule__OrExpression__Group__1__Impl )
            // InternalSimpleBeeLangTestLanguage.g:7617:2: rule__OrExpression__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 538, rule__OrExpression__Group__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrExpression__Group__1"


    // $ANTLR start "rule__OrExpression__Group__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:7623:1: rule__OrExpression__Group__1__Impl : ( ( rule__OrExpression__Group_1__0 )* ) ;
    public final void rule__OrExpression__Group__1__Impl() throws RecognitionException {
        int rule__OrExpression__Group__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 539) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:7627:1: ( ( ( rule__OrExpression__Group_1__0 )* ) )
            // InternalSimpleBeeLangTestLanguage.g:7628:1: ( ( rule__OrExpression__Group_1__0 )* )
            {
            // InternalSimpleBeeLangTestLanguage.g:7628:1: ( ( rule__OrExpression__Group_1__0 )* )
            // InternalSimpleBeeLangTestLanguage.g:7629:2: ( rule__OrExpression__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrExpressionAccess().getGroup_1()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:7630:2: ( rule__OrExpression__Group_1__0 )*
            loop65:
            do {
                int alt65=2;
                int LA65_0 = input.LA(1);

                if ( (LA65_0==64) ) {
                    int LA65_2 = input.LA(2);

                    if ( (synpred94_InternalSimpleBeeLangTestLanguage()) ) {
                        alt65=1;
                    }


                }


                switch (alt65) {
            	case 1 :
            	    // InternalSimpleBeeLangTestLanguage.g:7630:3: rule__OrExpression__Group_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_43);
            	    rule__OrExpression__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop65;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 539, rule__OrExpression__Group__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrExpression__Group__1__Impl"


    // $ANTLR start "rule__OrExpression__Group_1__0"
    // InternalSimpleBeeLangTestLanguage.g:7639:1: rule__OrExpression__Group_1__0 : rule__OrExpression__Group_1__0__Impl rule__OrExpression__Group_1__1 ;
    public final void rule__OrExpression__Group_1__0() throws RecognitionException {
        int rule__OrExpression__Group_1__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 540) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:7643:1: ( rule__OrExpression__Group_1__0__Impl rule__OrExpression__Group_1__1 )
            // InternalSimpleBeeLangTestLanguage.g:7644:2: rule__OrExpression__Group_1__0__Impl rule__OrExpression__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_42);
            rule__OrExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 540, rule__OrExpression__Group_1__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrExpression__Group_1__0"


    // $ANTLR start "rule__OrExpression__Group_1__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:7651:1: rule__OrExpression__Group_1__0__Impl : ( () ) ;
    public final void rule__OrExpression__Group_1__0__Impl() throws RecognitionException {
        int rule__OrExpression__Group_1__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 541) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:7655:1: ( ( () ) )
            // InternalSimpleBeeLangTestLanguage.g:7656:1: ( () )
            {
            // InternalSimpleBeeLangTestLanguage.g:7656:1: ( () )
            // InternalSimpleBeeLangTestLanguage.g:7657:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrExpressionAccess().getOrExpressionLeftExprAction_1_0()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:7658:2: ()
            // InternalSimpleBeeLangTestLanguage.g:7658:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrExpressionAccess().getOrExpressionLeftExprAction_1_0()); 
            }

            }


            }

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 541, rule__OrExpression__Group_1__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrExpression__Group_1__0__Impl"


    // $ANTLR start "rule__OrExpression__Group_1__1"
    // InternalSimpleBeeLangTestLanguage.g:7666:1: rule__OrExpression__Group_1__1 : rule__OrExpression__Group_1__1__Impl rule__OrExpression__Group_1__2 ;
    public final void rule__OrExpression__Group_1__1() throws RecognitionException {
        int rule__OrExpression__Group_1__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 542) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:7670:1: ( rule__OrExpression__Group_1__1__Impl rule__OrExpression__Group_1__2 )
            // InternalSimpleBeeLangTestLanguage.g:7671:2: rule__OrExpression__Group_1__1__Impl rule__OrExpression__Group_1__2
            {
            pushFollow(FollowSets000.FOLLOW_19);
            rule__OrExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrExpression__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 542, rule__OrExpression__Group_1__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrExpression__Group_1__1"


    // $ANTLR start "rule__OrExpression__Group_1__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:7678:1: rule__OrExpression__Group_1__1__Impl : ( '||' ) ;
    public final void rule__OrExpression__Group_1__1__Impl() throws RecognitionException {
        int rule__OrExpression__Group_1__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 543) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:7682:1: ( ( '||' ) )
            // InternalSimpleBeeLangTestLanguage.g:7683:1: ( '||' )
            {
            // InternalSimpleBeeLangTestLanguage.g:7683:1: ( '||' )
            // InternalSimpleBeeLangTestLanguage.g:7684:2: '||'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrExpressionAccess().getVerticalLineVerticalLineKeyword_1_1()); 
            }
            match(input,64,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrExpressionAccess().getVerticalLineVerticalLineKeyword_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 543, rule__OrExpression__Group_1__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrExpression__Group_1__1__Impl"


    // $ANTLR start "rule__OrExpression__Group_1__2"
    // InternalSimpleBeeLangTestLanguage.g:7693:1: rule__OrExpression__Group_1__2 : rule__OrExpression__Group_1__2__Impl ;
    public final void rule__OrExpression__Group_1__2() throws RecognitionException {
        int rule__OrExpression__Group_1__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 544) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:7697:1: ( rule__OrExpression__Group_1__2__Impl )
            // InternalSimpleBeeLangTestLanguage.g:7698:2: rule__OrExpression__Group_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrExpression__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 544, rule__OrExpression__Group_1__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrExpression__Group_1__2"


    // $ANTLR start "rule__OrExpression__Group_1__2__Impl"
    // InternalSimpleBeeLangTestLanguage.g:7704:1: rule__OrExpression__Group_1__2__Impl : ( ( rule__OrExpression__RightExprAssignment_1_2 ) ) ;
    public final void rule__OrExpression__Group_1__2__Impl() throws RecognitionException {
        int rule__OrExpression__Group_1__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 545) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:7708:1: ( ( ( rule__OrExpression__RightExprAssignment_1_2 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:7709:1: ( ( rule__OrExpression__RightExprAssignment_1_2 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:7709:1: ( ( rule__OrExpression__RightExprAssignment_1_2 ) )
            // InternalSimpleBeeLangTestLanguage.g:7710:2: ( rule__OrExpression__RightExprAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrExpressionAccess().getRightExprAssignment_1_2()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:7711:2: ( rule__OrExpression__RightExprAssignment_1_2 )
            // InternalSimpleBeeLangTestLanguage.g:7711:3: rule__OrExpression__RightExprAssignment_1_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrExpression__RightExprAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrExpressionAccess().getRightExprAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 545, rule__OrExpression__Group_1__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrExpression__Group_1__2__Impl"


    // $ANTLR start "rule__AndExpression__Group__0"
    // InternalSimpleBeeLangTestLanguage.g:7720:1: rule__AndExpression__Group__0 : rule__AndExpression__Group__0__Impl rule__AndExpression__Group__1 ;
    public final void rule__AndExpression__Group__0() throws RecognitionException {
        int rule__AndExpression__Group__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 546) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:7724:1: ( rule__AndExpression__Group__0__Impl rule__AndExpression__Group__1 )
            // InternalSimpleBeeLangTestLanguage.g:7725:2: rule__AndExpression__Group__0__Impl rule__AndExpression__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_44);
            rule__AndExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 546, rule__AndExpression__Group__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndExpression__Group__0"


    // $ANTLR start "rule__AndExpression__Group__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:7732:1: rule__AndExpression__Group__0__Impl : ( ruleRelationalExpression ) ;
    public final void rule__AndExpression__Group__0__Impl() throws RecognitionException {
        int rule__AndExpression__Group__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 547) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:7736:1: ( ( ruleRelationalExpression ) )
            // InternalSimpleBeeLangTestLanguage.g:7737:1: ( ruleRelationalExpression )
            {
            // InternalSimpleBeeLangTestLanguage.g:7737:1: ( ruleRelationalExpression )
            // InternalSimpleBeeLangTestLanguage.g:7738:2: ruleRelationalExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndExpressionAccess().getRelationalExpressionParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleRelationalExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndExpressionAccess().getRelationalExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 547, rule__AndExpression__Group__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndExpression__Group__0__Impl"


    // $ANTLR start "rule__AndExpression__Group__1"
    // InternalSimpleBeeLangTestLanguage.g:7747:1: rule__AndExpression__Group__1 : rule__AndExpression__Group__1__Impl ;
    public final void rule__AndExpression__Group__1() throws RecognitionException {
        int rule__AndExpression__Group__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 548) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:7751:1: ( rule__AndExpression__Group__1__Impl )
            // InternalSimpleBeeLangTestLanguage.g:7752:2: rule__AndExpression__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 548, rule__AndExpression__Group__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndExpression__Group__1"


    // $ANTLR start "rule__AndExpression__Group__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:7758:1: rule__AndExpression__Group__1__Impl : ( ( rule__AndExpression__Group_1__0 )* ) ;
    public final void rule__AndExpression__Group__1__Impl() throws RecognitionException {
        int rule__AndExpression__Group__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 549) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:7762:1: ( ( ( rule__AndExpression__Group_1__0 )* ) )
            // InternalSimpleBeeLangTestLanguage.g:7763:1: ( ( rule__AndExpression__Group_1__0 )* )
            {
            // InternalSimpleBeeLangTestLanguage.g:7763:1: ( ( rule__AndExpression__Group_1__0 )* )
            // InternalSimpleBeeLangTestLanguage.g:7764:2: ( rule__AndExpression__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndExpressionAccess().getGroup_1()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:7765:2: ( rule__AndExpression__Group_1__0 )*
            loop66:
            do {
                int alt66=2;
                int LA66_0 = input.LA(1);

                if ( (LA66_0==65) ) {
                    int LA66_2 = input.LA(2);

                    if ( (synpred95_InternalSimpleBeeLangTestLanguage()) ) {
                        alt66=1;
                    }


                }


                switch (alt66) {
            	case 1 :
            	    // InternalSimpleBeeLangTestLanguage.g:7765:3: rule__AndExpression__Group_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_45);
            	    rule__AndExpression__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop66;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 549, rule__AndExpression__Group__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndExpression__Group__1__Impl"


    // $ANTLR start "rule__AndExpression__Group_1__0"
    // InternalSimpleBeeLangTestLanguage.g:7774:1: rule__AndExpression__Group_1__0 : rule__AndExpression__Group_1__0__Impl rule__AndExpression__Group_1__1 ;
    public final void rule__AndExpression__Group_1__0() throws RecognitionException {
        int rule__AndExpression__Group_1__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 550) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:7778:1: ( rule__AndExpression__Group_1__0__Impl rule__AndExpression__Group_1__1 )
            // InternalSimpleBeeLangTestLanguage.g:7779:2: rule__AndExpression__Group_1__0__Impl rule__AndExpression__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_44);
            rule__AndExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 550, rule__AndExpression__Group_1__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndExpression__Group_1__0"


    // $ANTLR start "rule__AndExpression__Group_1__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:7786:1: rule__AndExpression__Group_1__0__Impl : ( () ) ;
    public final void rule__AndExpression__Group_1__0__Impl() throws RecognitionException {
        int rule__AndExpression__Group_1__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 551) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:7790:1: ( ( () ) )
            // InternalSimpleBeeLangTestLanguage.g:7791:1: ( () )
            {
            // InternalSimpleBeeLangTestLanguage.g:7791:1: ( () )
            // InternalSimpleBeeLangTestLanguage.g:7792:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndExpressionAccess().getAndExpressionLeftExprAction_1_0()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:7793:2: ()
            // InternalSimpleBeeLangTestLanguage.g:7793:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndExpressionAccess().getAndExpressionLeftExprAction_1_0()); 
            }

            }


            }

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 551, rule__AndExpression__Group_1__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndExpression__Group_1__0__Impl"


    // $ANTLR start "rule__AndExpression__Group_1__1"
    // InternalSimpleBeeLangTestLanguage.g:7801:1: rule__AndExpression__Group_1__1 : rule__AndExpression__Group_1__1__Impl rule__AndExpression__Group_1__2 ;
    public final void rule__AndExpression__Group_1__1() throws RecognitionException {
        int rule__AndExpression__Group_1__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 552) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:7805:1: ( rule__AndExpression__Group_1__1__Impl rule__AndExpression__Group_1__2 )
            // InternalSimpleBeeLangTestLanguage.g:7806:2: rule__AndExpression__Group_1__1__Impl rule__AndExpression__Group_1__2
            {
            pushFollow(FollowSets000.FOLLOW_19);
            rule__AndExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndExpression__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 552, rule__AndExpression__Group_1__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndExpression__Group_1__1"


    // $ANTLR start "rule__AndExpression__Group_1__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:7813:1: rule__AndExpression__Group_1__1__Impl : ( '&&' ) ;
    public final void rule__AndExpression__Group_1__1__Impl() throws RecognitionException {
        int rule__AndExpression__Group_1__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 553) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:7817:1: ( ( '&&' ) )
            // InternalSimpleBeeLangTestLanguage.g:7818:1: ( '&&' )
            {
            // InternalSimpleBeeLangTestLanguage.g:7818:1: ( '&&' )
            // InternalSimpleBeeLangTestLanguage.g:7819:2: '&&'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndExpressionAccess().getAmpersandAmpersandKeyword_1_1()); 
            }
            match(input,65,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndExpressionAccess().getAmpersandAmpersandKeyword_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 553, rule__AndExpression__Group_1__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndExpression__Group_1__1__Impl"


    // $ANTLR start "rule__AndExpression__Group_1__2"
    // InternalSimpleBeeLangTestLanguage.g:7828:1: rule__AndExpression__Group_1__2 : rule__AndExpression__Group_1__2__Impl ;
    public final void rule__AndExpression__Group_1__2() throws RecognitionException {
        int rule__AndExpression__Group_1__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 554) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:7832:1: ( rule__AndExpression__Group_1__2__Impl )
            // InternalSimpleBeeLangTestLanguage.g:7833:2: rule__AndExpression__Group_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndExpression__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 554, rule__AndExpression__Group_1__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndExpression__Group_1__2"


    // $ANTLR start "rule__AndExpression__Group_1__2__Impl"
    // InternalSimpleBeeLangTestLanguage.g:7839:1: rule__AndExpression__Group_1__2__Impl : ( ( rule__AndExpression__RightExprAssignment_1_2 ) ) ;
    public final void rule__AndExpression__Group_1__2__Impl() throws RecognitionException {
        int rule__AndExpression__Group_1__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 555) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:7843:1: ( ( ( rule__AndExpression__RightExprAssignment_1_2 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:7844:1: ( ( rule__AndExpression__RightExprAssignment_1_2 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:7844:1: ( ( rule__AndExpression__RightExprAssignment_1_2 ) )
            // InternalSimpleBeeLangTestLanguage.g:7845:2: ( rule__AndExpression__RightExprAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndExpressionAccess().getRightExprAssignment_1_2()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:7846:2: ( rule__AndExpression__RightExprAssignment_1_2 )
            // InternalSimpleBeeLangTestLanguage.g:7846:3: rule__AndExpression__RightExprAssignment_1_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndExpression__RightExprAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndExpressionAccess().getRightExprAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 555, rule__AndExpression__Group_1__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndExpression__Group_1__2__Impl"


    // $ANTLR start "rule__RelationalExpression__Group__0"
    // InternalSimpleBeeLangTestLanguage.g:7855:1: rule__RelationalExpression__Group__0 : rule__RelationalExpression__Group__0__Impl rule__RelationalExpression__Group__1 ;
    public final void rule__RelationalExpression__Group__0() throws RecognitionException {
        int rule__RelationalExpression__Group__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 556) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:7859:1: ( rule__RelationalExpression__Group__0__Impl rule__RelationalExpression__Group__1 )
            // InternalSimpleBeeLangTestLanguage.g:7860:2: rule__RelationalExpression__Group__0__Impl rule__RelationalExpression__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_46);
            rule__RelationalExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RelationalExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 556, rule__RelationalExpression__Group__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RelationalExpression__Group__0"


    // $ANTLR start "rule__RelationalExpression__Group__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:7867:1: rule__RelationalExpression__Group__0__Impl : ( ruleAdditiveExpression ) ;
    public final void rule__RelationalExpression__Group__0__Impl() throws RecognitionException {
        int rule__RelationalExpression__Group__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 557) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:7871:1: ( ( ruleAdditiveExpression ) )
            // InternalSimpleBeeLangTestLanguage.g:7872:1: ( ruleAdditiveExpression )
            {
            // InternalSimpleBeeLangTestLanguage.g:7872:1: ( ruleAdditiveExpression )
            // InternalSimpleBeeLangTestLanguage.g:7873:2: ruleAdditiveExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRelationalExpressionAccess().getAdditiveExpressionParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAdditiveExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRelationalExpressionAccess().getAdditiveExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 557, rule__RelationalExpression__Group__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RelationalExpression__Group__0__Impl"


    // $ANTLR start "rule__RelationalExpression__Group__1"
    // InternalSimpleBeeLangTestLanguage.g:7882:1: rule__RelationalExpression__Group__1 : rule__RelationalExpression__Group__1__Impl ;
    public final void rule__RelationalExpression__Group__1() throws RecognitionException {
        int rule__RelationalExpression__Group__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 558) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:7886:1: ( rule__RelationalExpression__Group__1__Impl )
            // InternalSimpleBeeLangTestLanguage.g:7887:2: rule__RelationalExpression__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RelationalExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 558, rule__RelationalExpression__Group__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RelationalExpression__Group__1"


    // $ANTLR start "rule__RelationalExpression__Group__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:7893:1: rule__RelationalExpression__Group__1__Impl : ( ( rule__RelationalExpression__Group_1__0 )* ) ;
    public final void rule__RelationalExpression__Group__1__Impl() throws RecognitionException {
        int rule__RelationalExpression__Group__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 559) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:7897:1: ( ( ( rule__RelationalExpression__Group_1__0 )* ) )
            // InternalSimpleBeeLangTestLanguage.g:7898:1: ( ( rule__RelationalExpression__Group_1__0 )* )
            {
            // InternalSimpleBeeLangTestLanguage.g:7898:1: ( ( rule__RelationalExpression__Group_1__0 )* )
            // InternalSimpleBeeLangTestLanguage.g:7899:2: ( rule__RelationalExpression__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRelationalExpressionAccess().getGroup_1()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:7900:2: ( rule__RelationalExpression__Group_1__0 )*
            loop67:
            do {
                int alt67=2;
                alt67 = dfa67.predict(input);
                switch (alt67) {
            	case 1 :
            	    // InternalSimpleBeeLangTestLanguage.g:7900:3: rule__RelationalExpression__Group_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_47);
            	    rule__RelationalExpression__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop67;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRelationalExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 559, rule__RelationalExpression__Group__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RelationalExpression__Group__1__Impl"


    // $ANTLR start "rule__RelationalExpression__Group_1__0"
    // InternalSimpleBeeLangTestLanguage.g:7909:1: rule__RelationalExpression__Group_1__0 : rule__RelationalExpression__Group_1__0__Impl rule__RelationalExpression__Group_1__1 ;
    public final void rule__RelationalExpression__Group_1__0() throws RecognitionException {
        int rule__RelationalExpression__Group_1__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 560) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:7913:1: ( rule__RelationalExpression__Group_1__0__Impl rule__RelationalExpression__Group_1__1 )
            // InternalSimpleBeeLangTestLanguage.g:7914:2: rule__RelationalExpression__Group_1__0__Impl rule__RelationalExpression__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_46);
            rule__RelationalExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RelationalExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 560, rule__RelationalExpression__Group_1__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RelationalExpression__Group_1__0"


    // $ANTLR start "rule__RelationalExpression__Group_1__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:7921:1: rule__RelationalExpression__Group_1__0__Impl : ( () ) ;
    public final void rule__RelationalExpression__Group_1__0__Impl() throws RecognitionException {
        int rule__RelationalExpression__Group_1__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 561) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:7925:1: ( ( () ) )
            // InternalSimpleBeeLangTestLanguage.g:7926:1: ( () )
            {
            // InternalSimpleBeeLangTestLanguage.g:7926:1: ( () )
            // InternalSimpleBeeLangTestLanguage.g:7927:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRelationalExpressionAccess().getBinaryOpExpressionLeftExprAction_1_0()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:7928:2: ()
            // InternalSimpleBeeLangTestLanguage.g:7928:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRelationalExpressionAccess().getBinaryOpExpressionLeftExprAction_1_0()); 
            }

            }


            }

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 561, rule__RelationalExpression__Group_1__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RelationalExpression__Group_1__0__Impl"


    // $ANTLR start "rule__RelationalExpression__Group_1__1"
    // InternalSimpleBeeLangTestLanguage.g:7936:1: rule__RelationalExpression__Group_1__1 : rule__RelationalExpression__Group_1__1__Impl rule__RelationalExpression__Group_1__2 ;
    public final void rule__RelationalExpression__Group_1__1() throws RecognitionException {
        int rule__RelationalExpression__Group_1__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 562) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:7940:1: ( rule__RelationalExpression__Group_1__1__Impl rule__RelationalExpression__Group_1__2 )
            // InternalSimpleBeeLangTestLanguage.g:7941:2: rule__RelationalExpression__Group_1__1__Impl rule__RelationalExpression__Group_1__2
            {
            pushFollow(FollowSets000.FOLLOW_19);
            rule__RelationalExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RelationalExpression__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 562, rule__RelationalExpression__Group_1__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RelationalExpression__Group_1__1"


    // $ANTLR start "rule__RelationalExpression__Group_1__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:7948:1: rule__RelationalExpression__Group_1__1__Impl : ( ( rule__RelationalExpression__FunctionNameAssignment_1_1 ) ) ;
    public final void rule__RelationalExpression__Group_1__1__Impl() throws RecognitionException {
        int rule__RelationalExpression__Group_1__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 563) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:7952:1: ( ( ( rule__RelationalExpression__FunctionNameAssignment_1_1 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:7953:1: ( ( rule__RelationalExpression__FunctionNameAssignment_1_1 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:7953:1: ( ( rule__RelationalExpression__FunctionNameAssignment_1_1 ) )
            // InternalSimpleBeeLangTestLanguage.g:7954:2: ( rule__RelationalExpression__FunctionNameAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRelationalExpressionAccess().getFunctionNameAssignment_1_1()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:7955:2: ( rule__RelationalExpression__FunctionNameAssignment_1_1 )
            // InternalSimpleBeeLangTestLanguage.g:7955:3: rule__RelationalExpression__FunctionNameAssignment_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RelationalExpression__FunctionNameAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRelationalExpressionAccess().getFunctionNameAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 563, rule__RelationalExpression__Group_1__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RelationalExpression__Group_1__1__Impl"


    // $ANTLR start "rule__RelationalExpression__Group_1__2"
    // InternalSimpleBeeLangTestLanguage.g:7963:1: rule__RelationalExpression__Group_1__2 : rule__RelationalExpression__Group_1__2__Impl ;
    public final void rule__RelationalExpression__Group_1__2() throws RecognitionException {
        int rule__RelationalExpression__Group_1__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 564) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:7967:1: ( rule__RelationalExpression__Group_1__2__Impl )
            // InternalSimpleBeeLangTestLanguage.g:7968:2: rule__RelationalExpression__Group_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RelationalExpression__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 564, rule__RelationalExpression__Group_1__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RelationalExpression__Group_1__2"


    // $ANTLR start "rule__RelationalExpression__Group_1__2__Impl"
    // InternalSimpleBeeLangTestLanguage.g:7974:1: rule__RelationalExpression__Group_1__2__Impl : ( ( rule__RelationalExpression__RightExprAssignment_1_2 ) ) ;
    public final void rule__RelationalExpression__Group_1__2__Impl() throws RecognitionException {
        int rule__RelationalExpression__Group_1__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 565) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:7978:1: ( ( ( rule__RelationalExpression__RightExprAssignment_1_2 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:7979:1: ( ( rule__RelationalExpression__RightExprAssignment_1_2 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:7979:1: ( ( rule__RelationalExpression__RightExprAssignment_1_2 ) )
            // InternalSimpleBeeLangTestLanguage.g:7980:2: ( rule__RelationalExpression__RightExprAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRelationalExpressionAccess().getRightExprAssignment_1_2()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:7981:2: ( rule__RelationalExpression__RightExprAssignment_1_2 )
            // InternalSimpleBeeLangTestLanguage.g:7981:3: rule__RelationalExpression__RightExprAssignment_1_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RelationalExpression__RightExprAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRelationalExpressionAccess().getRightExprAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 565, rule__RelationalExpression__Group_1__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RelationalExpression__Group_1__2__Impl"


    // $ANTLR start "rule__AdditiveExpression__Group__0"
    // InternalSimpleBeeLangTestLanguage.g:7990:1: rule__AdditiveExpression__Group__0 : rule__AdditiveExpression__Group__0__Impl rule__AdditiveExpression__Group__1 ;
    public final void rule__AdditiveExpression__Group__0() throws RecognitionException {
        int rule__AdditiveExpression__Group__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 566) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:7994:1: ( rule__AdditiveExpression__Group__0__Impl rule__AdditiveExpression__Group__1 )
            // InternalSimpleBeeLangTestLanguage.g:7995:2: rule__AdditiveExpression__Group__0__Impl rule__AdditiveExpression__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_48);
            rule__AdditiveExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AdditiveExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 566, rule__AdditiveExpression__Group__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AdditiveExpression__Group__0"


    // $ANTLR start "rule__AdditiveExpression__Group__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:8002:1: rule__AdditiveExpression__Group__0__Impl : ( ruleMultiplicativeExpression ) ;
    public final void rule__AdditiveExpression__Group__0__Impl() throws RecognitionException {
        int rule__AdditiveExpression__Group__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 567) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:8006:1: ( ( ruleMultiplicativeExpression ) )
            // InternalSimpleBeeLangTestLanguage.g:8007:1: ( ruleMultiplicativeExpression )
            {
            // InternalSimpleBeeLangTestLanguage.g:8007:1: ( ruleMultiplicativeExpression )
            // InternalSimpleBeeLangTestLanguage.g:8008:2: ruleMultiplicativeExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAdditiveExpressionAccess().getMultiplicativeExpressionParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleMultiplicativeExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAdditiveExpressionAccess().getMultiplicativeExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 567, rule__AdditiveExpression__Group__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AdditiveExpression__Group__0__Impl"


    // $ANTLR start "rule__AdditiveExpression__Group__1"
    // InternalSimpleBeeLangTestLanguage.g:8017:1: rule__AdditiveExpression__Group__1 : rule__AdditiveExpression__Group__1__Impl ;
    public final void rule__AdditiveExpression__Group__1() throws RecognitionException {
        int rule__AdditiveExpression__Group__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 568) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:8021:1: ( rule__AdditiveExpression__Group__1__Impl )
            // InternalSimpleBeeLangTestLanguage.g:8022:2: rule__AdditiveExpression__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AdditiveExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 568, rule__AdditiveExpression__Group__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AdditiveExpression__Group__1"


    // $ANTLR start "rule__AdditiveExpression__Group__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:8028:1: rule__AdditiveExpression__Group__1__Impl : ( ( rule__AdditiveExpression__Group_1__0 )* ) ;
    public final void rule__AdditiveExpression__Group__1__Impl() throws RecognitionException {
        int rule__AdditiveExpression__Group__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 569) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:8032:1: ( ( ( rule__AdditiveExpression__Group_1__0 )* ) )
            // InternalSimpleBeeLangTestLanguage.g:8033:1: ( ( rule__AdditiveExpression__Group_1__0 )* )
            {
            // InternalSimpleBeeLangTestLanguage.g:8033:1: ( ( rule__AdditiveExpression__Group_1__0 )* )
            // InternalSimpleBeeLangTestLanguage.g:8034:2: ( rule__AdditiveExpression__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAdditiveExpressionAccess().getGroup_1()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:8035:2: ( rule__AdditiveExpression__Group_1__0 )*
            loop68:
            do {
                int alt68=2;
                int LA68_0 = input.LA(1);

                if ( (LA68_0==30) ) {
                    int LA68_2 = input.LA(2);

                    if ( (synpred97_InternalSimpleBeeLangTestLanguage()) ) {
                        alt68=1;
                    }


                }
                else if ( (LA68_0==31) ) {
                    int LA68_3 = input.LA(2);

                    if ( (synpred97_InternalSimpleBeeLangTestLanguage()) ) {
                        alt68=1;
                    }


                }


                switch (alt68) {
            	case 1 :
            	    // InternalSimpleBeeLangTestLanguage.g:8035:3: rule__AdditiveExpression__Group_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_49);
            	    rule__AdditiveExpression__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop68;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAdditiveExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 569, rule__AdditiveExpression__Group__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AdditiveExpression__Group__1__Impl"


    // $ANTLR start "rule__AdditiveExpression__Group_1__0"
    // InternalSimpleBeeLangTestLanguage.g:8044:1: rule__AdditiveExpression__Group_1__0 : rule__AdditiveExpression__Group_1__0__Impl rule__AdditiveExpression__Group_1__1 ;
    public final void rule__AdditiveExpression__Group_1__0() throws RecognitionException {
        int rule__AdditiveExpression__Group_1__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 570) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:8048:1: ( rule__AdditiveExpression__Group_1__0__Impl rule__AdditiveExpression__Group_1__1 )
            // InternalSimpleBeeLangTestLanguage.g:8049:2: rule__AdditiveExpression__Group_1__0__Impl rule__AdditiveExpression__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_48);
            rule__AdditiveExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AdditiveExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 570, rule__AdditiveExpression__Group_1__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AdditiveExpression__Group_1__0"


    // $ANTLR start "rule__AdditiveExpression__Group_1__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:8056:1: rule__AdditiveExpression__Group_1__0__Impl : ( () ) ;
    public final void rule__AdditiveExpression__Group_1__0__Impl() throws RecognitionException {
        int rule__AdditiveExpression__Group_1__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 571) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:8060:1: ( ( () ) )
            // InternalSimpleBeeLangTestLanguage.g:8061:1: ( () )
            {
            // InternalSimpleBeeLangTestLanguage.g:8061:1: ( () )
            // InternalSimpleBeeLangTestLanguage.g:8062:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAdditiveExpressionAccess().getBinaryOpExpressionLeftExprAction_1_0()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:8063:2: ()
            // InternalSimpleBeeLangTestLanguage.g:8063:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAdditiveExpressionAccess().getBinaryOpExpressionLeftExprAction_1_0()); 
            }

            }


            }

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 571, rule__AdditiveExpression__Group_1__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AdditiveExpression__Group_1__0__Impl"


    // $ANTLR start "rule__AdditiveExpression__Group_1__1"
    // InternalSimpleBeeLangTestLanguage.g:8071:1: rule__AdditiveExpression__Group_1__1 : rule__AdditiveExpression__Group_1__1__Impl rule__AdditiveExpression__Group_1__2 ;
    public final void rule__AdditiveExpression__Group_1__1() throws RecognitionException {
        int rule__AdditiveExpression__Group_1__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 572) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:8075:1: ( rule__AdditiveExpression__Group_1__1__Impl rule__AdditiveExpression__Group_1__2 )
            // InternalSimpleBeeLangTestLanguage.g:8076:2: rule__AdditiveExpression__Group_1__1__Impl rule__AdditiveExpression__Group_1__2
            {
            pushFollow(FollowSets000.FOLLOW_19);
            rule__AdditiveExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AdditiveExpression__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 572, rule__AdditiveExpression__Group_1__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AdditiveExpression__Group_1__1"


    // $ANTLR start "rule__AdditiveExpression__Group_1__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:8083:1: rule__AdditiveExpression__Group_1__1__Impl : ( ( rule__AdditiveExpression__FunctionNameAssignment_1_1 ) ) ;
    public final void rule__AdditiveExpression__Group_1__1__Impl() throws RecognitionException {
        int rule__AdditiveExpression__Group_1__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 573) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:8087:1: ( ( ( rule__AdditiveExpression__FunctionNameAssignment_1_1 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:8088:1: ( ( rule__AdditiveExpression__FunctionNameAssignment_1_1 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:8088:1: ( ( rule__AdditiveExpression__FunctionNameAssignment_1_1 ) )
            // InternalSimpleBeeLangTestLanguage.g:8089:2: ( rule__AdditiveExpression__FunctionNameAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAdditiveExpressionAccess().getFunctionNameAssignment_1_1()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:8090:2: ( rule__AdditiveExpression__FunctionNameAssignment_1_1 )
            // InternalSimpleBeeLangTestLanguage.g:8090:3: rule__AdditiveExpression__FunctionNameAssignment_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AdditiveExpression__FunctionNameAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAdditiveExpressionAccess().getFunctionNameAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 573, rule__AdditiveExpression__Group_1__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AdditiveExpression__Group_1__1__Impl"


    // $ANTLR start "rule__AdditiveExpression__Group_1__2"
    // InternalSimpleBeeLangTestLanguage.g:8098:1: rule__AdditiveExpression__Group_1__2 : rule__AdditiveExpression__Group_1__2__Impl ;
    public final void rule__AdditiveExpression__Group_1__2() throws RecognitionException {
        int rule__AdditiveExpression__Group_1__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 574) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:8102:1: ( rule__AdditiveExpression__Group_1__2__Impl )
            // InternalSimpleBeeLangTestLanguage.g:8103:2: rule__AdditiveExpression__Group_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AdditiveExpression__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 574, rule__AdditiveExpression__Group_1__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AdditiveExpression__Group_1__2"


    // $ANTLR start "rule__AdditiveExpression__Group_1__2__Impl"
    // InternalSimpleBeeLangTestLanguage.g:8109:1: rule__AdditiveExpression__Group_1__2__Impl : ( ( rule__AdditiveExpression__RightExprAssignment_1_2 ) ) ;
    public final void rule__AdditiveExpression__Group_1__2__Impl() throws RecognitionException {
        int rule__AdditiveExpression__Group_1__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 575) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:8113:1: ( ( ( rule__AdditiveExpression__RightExprAssignment_1_2 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:8114:1: ( ( rule__AdditiveExpression__RightExprAssignment_1_2 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:8114:1: ( ( rule__AdditiveExpression__RightExprAssignment_1_2 ) )
            // InternalSimpleBeeLangTestLanguage.g:8115:2: ( rule__AdditiveExpression__RightExprAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAdditiveExpressionAccess().getRightExprAssignment_1_2()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:8116:2: ( rule__AdditiveExpression__RightExprAssignment_1_2 )
            // InternalSimpleBeeLangTestLanguage.g:8116:3: rule__AdditiveExpression__RightExprAssignment_1_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AdditiveExpression__RightExprAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAdditiveExpressionAccess().getRightExprAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 575, rule__AdditiveExpression__Group_1__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AdditiveExpression__Group_1__2__Impl"


    // $ANTLR start "rule__MultiplicativeExpression__Group__0"
    // InternalSimpleBeeLangTestLanguage.g:8125:1: rule__MultiplicativeExpression__Group__0 : rule__MultiplicativeExpression__Group__0__Impl rule__MultiplicativeExpression__Group__1 ;
    public final void rule__MultiplicativeExpression__Group__0() throws RecognitionException {
        int rule__MultiplicativeExpression__Group__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 576) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:8129:1: ( rule__MultiplicativeExpression__Group__0__Impl rule__MultiplicativeExpression__Group__1 )
            // InternalSimpleBeeLangTestLanguage.g:8130:2: rule__MultiplicativeExpression__Group__0__Impl rule__MultiplicativeExpression__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_50);
            rule__MultiplicativeExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MultiplicativeExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 576, rule__MultiplicativeExpression__Group__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultiplicativeExpression__Group__0"


    // $ANTLR start "rule__MultiplicativeExpression__Group__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:8137:1: rule__MultiplicativeExpression__Group__0__Impl : ( ruleSetExpression ) ;
    public final void rule__MultiplicativeExpression__Group__0__Impl() throws RecognitionException {
        int rule__MultiplicativeExpression__Group__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 577) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:8141:1: ( ( ruleSetExpression ) )
            // InternalSimpleBeeLangTestLanguage.g:8142:1: ( ruleSetExpression )
            {
            // InternalSimpleBeeLangTestLanguage.g:8142:1: ( ruleSetExpression )
            // InternalSimpleBeeLangTestLanguage.g:8143:2: ruleSetExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMultiplicativeExpressionAccess().getSetExpressionParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSetExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMultiplicativeExpressionAccess().getSetExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 577, rule__MultiplicativeExpression__Group__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultiplicativeExpression__Group__0__Impl"


    // $ANTLR start "rule__MultiplicativeExpression__Group__1"
    // InternalSimpleBeeLangTestLanguage.g:8152:1: rule__MultiplicativeExpression__Group__1 : rule__MultiplicativeExpression__Group__1__Impl ;
    public final void rule__MultiplicativeExpression__Group__1() throws RecognitionException {
        int rule__MultiplicativeExpression__Group__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 578) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:8156:1: ( rule__MultiplicativeExpression__Group__1__Impl )
            // InternalSimpleBeeLangTestLanguage.g:8157:2: rule__MultiplicativeExpression__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MultiplicativeExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 578, rule__MultiplicativeExpression__Group__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultiplicativeExpression__Group__1"


    // $ANTLR start "rule__MultiplicativeExpression__Group__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:8163:1: rule__MultiplicativeExpression__Group__1__Impl : ( ( rule__MultiplicativeExpression__Group_1__0 )* ) ;
    public final void rule__MultiplicativeExpression__Group__1__Impl() throws RecognitionException {
        int rule__MultiplicativeExpression__Group__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 579) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:8167:1: ( ( ( rule__MultiplicativeExpression__Group_1__0 )* ) )
            // InternalSimpleBeeLangTestLanguage.g:8168:1: ( ( rule__MultiplicativeExpression__Group_1__0 )* )
            {
            // InternalSimpleBeeLangTestLanguage.g:8168:1: ( ( rule__MultiplicativeExpression__Group_1__0 )* )
            // InternalSimpleBeeLangTestLanguage.g:8169:2: ( rule__MultiplicativeExpression__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMultiplicativeExpressionAccess().getGroup_1()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:8170:2: ( rule__MultiplicativeExpression__Group_1__0 )*
            loop69:
            do {
                int alt69=2;
                switch ( input.LA(1) ) {
                case 32:
                    {
                    int LA69_2 = input.LA(2);

                    if ( (synpred98_InternalSimpleBeeLangTestLanguage()) ) {
                        alt69=1;
                    }


                    }
                    break;
                case 33:
                    {
                    int LA69_3 = input.LA(2);

                    if ( (synpred98_InternalSimpleBeeLangTestLanguage()) ) {
                        alt69=1;
                    }


                    }
                    break;
                case 34:
                    {
                    int LA69_4 = input.LA(2);

                    if ( (synpred98_InternalSimpleBeeLangTestLanguage()) ) {
                        alt69=1;
                    }


                    }
                    break;

                }

                switch (alt69) {
            	case 1 :
            	    // InternalSimpleBeeLangTestLanguage.g:8170:3: rule__MultiplicativeExpression__Group_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_51);
            	    rule__MultiplicativeExpression__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop69;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMultiplicativeExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 579, rule__MultiplicativeExpression__Group__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultiplicativeExpression__Group__1__Impl"


    // $ANTLR start "rule__MultiplicativeExpression__Group_1__0"
    // InternalSimpleBeeLangTestLanguage.g:8179:1: rule__MultiplicativeExpression__Group_1__0 : rule__MultiplicativeExpression__Group_1__0__Impl rule__MultiplicativeExpression__Group_1__1 ;
    public final void rule__MultiplicativeExpression__Group_1__0() throws RecognitionException {
        int rule__MultiplicativeExpression__Group_1__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 580) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:8183:1: ( rule__MultiplicativeExpression__Group_1__0__Impl rule__MultiplicativeExpression__Group_1__1 )
            // InternalSimpleBeeLangTestLanguage.g:8184:2: rule__MultiplicativeExpression__Group_1__0__Impl rule__MultiplicativeExpression__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_50);
            rule__MultiplicativeExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MultiplicativeExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 580, rule__MultiplicativeExpression__Group_1__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultiplicativeExpression__Group_1__0"


    // $ANTLR start "rule__MultiplicativeExpression__Group_1__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:8191:1: rule__MultiplicativeExpression__Group_1__0__Impl : ( () ) ;
    public final void rule__MultiplicativeExpression__Group_1__0__Impl() throws RecognitionException {
        int rule__MultiplicativeExpression__Group_1__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 581) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:8195:1: ( ( () ) )
            // InternalSimpleBeeLangTestLanguage.g:8196:1: ( () )
            {
            // InternalSimpleBeeLangTestLanguage.g:8196:1: ( () )
            // InternalSimpleBeeLangTestLanguage.g:8197:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMultiplicativeExpressionAccess().getBinaryOpExpressionLeftExprAction_1_0()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:8198:2: ()
            // InternalSimpleBeeLangTestLanguage.g:8198:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMultiplicativeExpressionAccess().getBinaryOpExpressionLeftExprAction_1_0()); 
            }

            }


            }

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 581, rule__MultiplicativeExpression__Group_1__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultiplicativeExpression__Group_1__0__Impl"


    // $ANTLR start "rule__MultiplicativeExpression__Group_1__1"
    // InternalSimpleBeeLangTestLanguage.g:8206:1: rule__MultiplicativeExpression__Group_1__1 : rule__MultiplicativeExpression__Group_1__1__Impl rule__MultiplicativeExpression__Group_1__2 ;
    public final void rule__MultiplicativeExpression__Group_1__1() throws RecognitionException {
        int rule__MultiplicativeExpression__Group_1__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 582) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:8210:1: ( rule__MultiplicativeExpression__Group_1__1__Impl rule__MultiplicativeExpression__Group_1__2 )
            // InternalSimpleBeeLangTestLanguage.g:8211:2: rule__MultiplicativeExpression__Group_1__1__Impl rule__MultiplicativeExpression__Group_1__2
            {
            pushFollow(FollowSets000.FOLLOW_19);
            rule__MultiplicativeExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MultiplicativeExpression__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 582, rule__MultiplicativeExpression__Group_1__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultiplicativeExpression__Group_1__1"


    // $ANTLR start "rule__MultiplicativeExpression__Group_1__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:8218:1: rule__MultiplicativeExpression__Group_1__1__Impl : ( ( rule__MultiplicativeExpression__FunctionNameAssignment_1_1 ) ) ;
    public final void rule__MultiplicativeExpression__Group_1__1__Impl() throws RecognitionException {
        int rule__MultiplicativeExpression__Group_1__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 583) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:8222:1: ( ( ( rule__MultiplicativeExpression__FunctionNameAssignment_1_1 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:8223:1: ( ( rule__MultiplicativeExpression__FunctionNameAssignment_1_1 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:8223:1: ( ( rule__MultiplicativeExpression__FunctionNameAssignment_1_1 ) )
            // InternalSimpleBeeLangTestLanguage.g:8224:2: ( rule__MultiplicativeExpression__FunctionNameAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMultiplicativeExpressionAccess().getFunctionNameAssignment_1_1()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:8225:2: ( rule__MultiplicativeExpression__FunctionNameAssignment_1_1 )
            // InternalSimpleBeeLangTestLanguage.g:8225:3: rule__MultiplicativeExpression__FunctionNameAssignment_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MultiplicativeExpression__FunctionNameAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMultiplicativeExpressionAccess().getFunctionNameAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 583, rule__MultiplicativeExpression__Group_1__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultiplicativeExpression__Group_1__1__Impl"


    // $ANTLR start "rule__MultiplicativeExpression__Group_1__2"
    // InternalSimpleBeeLangTestLanguage.g:8233:1: rule__MultiplicativeExpression__Group_1__2 : rule__MultiplicativeExpression__Group_1__2__Impl ;
    public final void rule__MultiplicativeExpression__Group_1__2() throws RecognitionException {
        int rule__MultiplicativeExpression__Group_1__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 584) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:8237:1: ( rule__MultiplicativeExpression__Group_1__2__Impl )
            // InternalSimpleBeeLangTestLanguage.g:8238:2: rule__MultiplicativeExpression__Group_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MultiplicativeExpression__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 584, rule__MultiplicativeExpression__Group_1__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultiplicativeExpression__Group_1__2"


    // $ANTLR start "rule__MultiplicativeExpression__Group_1__2__Impl"
    // InternalSimpleBeeLangTestLanguage.g:8244:1: rule__MultiplicativeExpression__Group_1__2__Impl : ( ( rule__MultiplicativeExpression__RightExprAssignment_1_2 ) ) ;
    public final void rule__MultiplicativeExpression__Group_1__2__Impl() throws RecognitionException {
        int rule__MultiplicativeExpression__Group_1__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 585) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:8248:1: ( ( ( rule__MultiplicativeExpression__RightExprAssignment_1_2 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:8249:1: ( ( rule__MultiplicativeExpression__RightExprAssignment_1_2 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:8249:1: ( ( rule__MultiplicativeExpression__RightExprAssignment_1_2 ) )
            // InternalSimpleBeeLangTestLanguage.g:8250:2: ( rule__MultiplicativeExpression__RightExprAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMultiplicativeExpressionAccess().getRightExprAssignment_1_2()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:8251:2: ( rule__MultiplicativeExpression__RightExprAssignment_1_2 )
            // InternalSimpleBeeLangTestLanguage.g:8251:3: rule__MultiplicativeExpression__RightExprAssignment_1_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MultiplicativeExpression__RightExprAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMultiplicativeExpressionAccess().getRightExprAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 585, rule__MultiplicativeExpression__Group_1__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultiplicativeExpression__Group_1__2__Impl"


    // $ANTLR start "rule__SetExpression__Group__0"
    // InternalSimpleBeeLangTestLanguage.g:8260:1: rule__SetExpression__Group__0 : rule__SetExpression__Group__0__Impl rule__SetExpression__Group__1 ;
    public final void rule__SetExpression__Group__0() throws RecognitionException {
        int rule__SetExpression__Group__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 586) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:8264:1: ( rule__SetExpression__Group__0__Impl rule__SetExpression__Group__1 )
            // InternalSimpleBeeLangTestLanguage.g:8265:2: rule__SetExpression__Group__0__Impl rule__SetExpression__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_52);
            rule__SetExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SetExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 586, rule__SetExpression__Group__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SetExpression__Group__0"


    // $ANTLR start "rule__SetExpression__Group__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:8272:1: rule__SetExpression__Group__0__Impl : ( ruleUnaryOrInfixExpression ) ;
    public final void rule__SetExpression__Group__0__Impl() throws RecognitionException {
        int rule__SetExpression__Group__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 587) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:8276:1: ( ( ruleUnaryOrInfixExpression ) )
            // InternalSimpleBeeLangTestLanguage.g:8277:1: ( ruleUnaryOrInfixExpression )
            {
            // InternalSimpleBeeLangTestLanguage.g:8277:1: ( ruleUnaryOrInfixExpression )
            // InternalSimpleBeeLangTestLanguage.g:8278:2: ruleUnaryOrInfixExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSetExpressionAccess().getUnaryOrInfixExpressionParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleUnaryOrInfixExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSetExpressionAccess().getUnaryOrInfixExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 587, rule__SetExpression__Group__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SetExpression__Group__0__Impl"


    // $ANTLR start "rule__SetExpression__Group__1"
    // InternalSimpleBeeLangTestLanguage.g:8287:1: rule__SetExpression__Group__1 : rule__SetExpression__Group__1__Impl ;
    public final void rule__SetExpression__Group__1() throws RecognitionException {
        int rule__SetExpression__Group__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 588) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:8291:1: ( rule__SetExpression__Group__1__Impl )
            // InternalSimpleBeeLangTestLanguage.g:8292:2: rule__SetExpression__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SetExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 588, rule__SetExpression__Group__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SetExpression__Group__1"


    // $ANTLR start "rule__SetExpression__Group__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:8298:1: rule__SetExpression__Group__1__Impl : ( ( rule__SetExpression__Group_1__0 )* ) ;
    public final void rule__SetExpression__Group__1__Impl() throws RecognitionException {
        int rule__SetExpression__Group__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 589) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:8302:1: ( ( ( rule__SetExpression__Group_1__0 )* ) )
            // InternalSimpleBeeLangTestLanguage.g:8303:1: ( ( rule__SetExpression__Group_1__0 )* )
            {
            // InternalSimpleBeeLangTestLanguage.g:8303:1: ( ( rule__SetExpression__Group_1__0 )* )
            // InternalSimpleBeeLangTestLanguage.g:8304:2: ( rule__SetExpression__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSetExpressionAccess().getGroup_1()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:8305:2: ( rule__SetExpression__Group_1__0 )*
            loop70:
            do {
                int alt70=2;
                int LA70_0 = input.LA(1);

                if ( (LA70_0==77) ) {
                    int LA70_2 = input.LA(2);

                    if ( (synpred99_InternalSimpleBeeLangTestLanguage()) ) {
                        alt70=1;
                    }


                }


                switch (alt70) {
            	case 1 :
            	    // InternalSimpleBeeLangTestLanguage.g:8305:3: rule__SetExpression__Group_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_53);
            	    rule__SetExpression__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop70;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSetExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 589, rule__SetExpression__Group__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SetExpression__Group__1__Impl"


    // $ANTLR start "rule__SetExpression__Group_1__0"
    // InternalSimpleBeeLangTestLanguage.g:8314:1: rule__SetExpression__Group_1__0 : rule__SetExpression__Group_1__0__Impl rule__SetExpression__Group_1__1 ;
    public final void rule__SetExpression__Group_1__0() throws RecognitionException {
        int rule__SetExpression__Group_1__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 590) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:8318:1: ( rule__SetExpression__Group_1__0__Impl rule__SetExpression__Group_1__1 )
            // InternalSimpleBeeLangTestLanguage.g:8319:2: rule__SetExpression__Group_1__0__Impl rule__SetExpression__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_52);
            rule__SetExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SetExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 590, rule__SetExpression__Group_1__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SetExpression__Group_1__0"


    // $ANTLR start "rule__SetExpression__Group_1__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:8326:1: rule__SetExpression__Group_1__0__Impl : ( () ) ;
    public final void rule__SetExpression__Group_1__0__Impl() throws RecognitionException {
        int rule__SetExpression__Group_1__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 591) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:8330:1: ( ( () ) )
            // InternalSimpleBeeLangTestLanguage.g:8331:1: ( () )
            {
            // InternalSimpleBeeLangTestLanguage.g:8331:1: ( () )
            // InternalSimpleBeeLangTestLanguage.g:8332:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSetExpressionAccess().getBinaryOpExpressionLeftExprAction_1_0()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:8333:2: ()
            // InternalSimpleBeeLangTestLanguage.g:8333:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSetExpressionAccess().getBinaryOpExpressionLeftExprAction_1_0()); 
            }

            }


            }

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 591, rule__SetExpression__Group_1__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SetExpression__Group_1__0__Impl"


    // $ANTLR start "rule__SetExpression__Group_1__1"
    // InternalSimpleBeeLangTestLanguage.g:8341:1: rule__SetExpression__Group_1__1 : rule__SetExpression__Group_1__1__Impl rule__SetExpression__Group_1__2 ;
    public final void rule__SetExpression__Group_1__1() throws RecognitionException {
        int rule__SetExpression__Group_1__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 592) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:8345:1: ( rule__SetExpression__Group_1__1__Impl rule__SetExpression__Group_1__2 )
            // InternalSimpleBeeLangTestLanguage.g:8346:2: rule__SetExpression__Group_1__1__Impl rule__SetExpression__Group_1__2
            {
            pushFollow(FollowSets000.FOLLOW_19);
            rule__SetExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SetExpression__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 592, rule__SetExpression__Group_1__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SetExpression__Group_1__1"


    // $ANTLR start "rule__SetExpression__Group_1__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:8353:1: rule__SetExpression__Group_1__1__Impl : ( ( rule__SetExpression__FunctionNameAssignment_1_1 ) ) ;
    public final void rule__SetExpression__Group_1__1__Impl() throws RecognitionException {
        int rule__SetExpression__Group_1__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 593) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:8357:1: ( ( ( rule__SetExpression__FunctionNameAssignment_1_1 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:8358:1: ( ( rule__SetExpression__FunctionNameAssignment_1_1 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:8358:1: ( ( rule__SetExpression__FunctionNameAssignment_1_1 ) )
            // InternalSimpleBeeLangTestLanguage.g:8359:2: ( rule__SetExpression__FunctionNameAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSetExpressionAccess().getFunctionNameAssignment_1_1()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:8360:2: ( rule__SetExpression__FunctionNameAssignment_1_1 )
            // InternalSimpleBeeLangTestLanguage.g:8360:3: rule__SetExpression__FunctionNameAssignment_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SetExpression__FunctionNameAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSetExpressionAccess().getFunctionNameAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 593, rule__SetExpression__Group_1__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SetExpression__Group_1__1__Impl"


    // $ANTLR start "rule__SetExpression__Group_1__2"
    // InternalSimpleBeeLangTestLanguage.g:8368:1: rule__SetExpression__Group_1__2 : rule__SetExpression__Group_1__2__Impl ;
    public final void rule__SetExpression__Group_1__2() throws RecognitionException {
        int rule__SetExpression__Group_1__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 594) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:8372:1: ( rule__SetExpression__Group_1__2__Impl )
            // InternalSimpleBeeLangTestLanguage.g:8373:2: rule__SetExpression__Group_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SetExpression__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 594, rule__SetExpression__Group_1__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SetExpression__Group_1__2"


    // $ANTLR start "rule__SetExpression__Group_1__2__Impl"
    // InternalSimpleBeeLangTestLanguage.g:8379:1: rule__SetExpression__Group_1__2__Impl : ( ( rule__SetExpression__RightExprAssignment_1_2 ) ) ;
    public final void rule__SetExpression__Group_1__2__Impl() throws RecognitionException {
        int rule__SetExpression__Group_1__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 595) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:8383:1: ( ( ( rule__SetExpression__RightExprAssignment_1_2 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:8384:1: ( ( rule__SetExpression__RightExprAssignment_1_2 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:8384:1: ( ( rule__SetExpression__RightExprAssignment_1_2 ) )
            // InternalSimpleBeeLangTestLanguage.g:8385:2: ( rule__SetExpression__RightExprAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSetExpressionAccess().getRightExprAssignment_1_2()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:8386:2: ( rule__SetExpression__RightExprAssignment_1_2 )
            // InternalSimpleBeeLangTestLanguage.g:8386:3: rule__SetExpression__RightExprAssignment_1_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SetExpression__RightExprAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSetExpressionAccess().getRightExprAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 595, rule__SetExpression__Group_1__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SetExpression__Group_1__2__Impl"


    // $ANTLR start "rule__UnaryExpression__Group__0"
    // InternalSimpleBeeLangTestLanguage.g:8395:1: rule__UnaryExpression__Group__0 : rule__UnaryExpression__Group__0__Impl rule__UnaryExpression__Group__1 ;
    public final void rule__UnaryExpression__Group__0() throws RecognitionException {
        int rule__UnaryExpression__Group__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 596) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:8399:1: ( rule__UnaryExpression__Group__0__Impl rule__UnaryExpression__Group__1 )
            // InternalSimpleBeeLangTestLanguage.g:8400:2: rule__UnaryExpression__Group__0__Impl rule__UnaryExpression__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_54);
            rule__UnaryExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__UnaryExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 596, rule__UnaryExpression__Group__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnaryExpression__Group__0"


    // $ANTLR start "rule__UnaryExpression__Group__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:8407:1: rule__UnaryExpression__Group__0__Impl : ( () ) ;
    public final void rule__UnaryExpression__Group__0__Impl() throws RecognitionException {
        int rule__UnaryExpression__Group__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 597) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:8411:1: ( ( () ) )
            // InternalSimpleBeeLangTestLanguage.g:8412:1: ( () )
            {
            // InternalSimpleBeeLangTestLanguage.g:8412:1: ( () )
            // InternalSimpleBeeLangTestLanguage.g:8413:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnaryExpressionAccess().getUnaryOpExpressionAction_0()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:8414:2: ()
            // InternalSimpleBeeLangTestLanguage.g:8414:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnaryExpressionAccess().getUnaryOpExpressionAction_0()); 
            }

            }


            }

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 597, rule__UnaryExpression__Group__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnaryExpression__Group__0__Impl"


    // $ANTLR start "rule__UnaryExpression__Group__1"
    // InternalSimpleBeeLangTestLanguage.g:8422:1: rule__UnaryExpression__Group__1 : rule__UnaryExpression__Group__1__Impl rule__UnaryExpression__Group__2 ;
    public final void rule__UnaryExpression__Group__1() throws RecognitionException {
        int rule__UnaryExpression__Group__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 598) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:8426:1: ( rule__UnaryExpression__Group__1__Impl rule__UnaryExpression__Group__2 )
            // InternalSimpleBeeLangTestLanguage.g:8427:2: rule__UnaryExpression__Group__1__Impl rule__UnaryExpression__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_55);
            rule__UnaryExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__UnaryExpression__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 598, rule__UnaryExpression__Group__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnaryExpression__Group__1"


    // $ANTLR start "rule__UnaryExpression__Group__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:8434:1: rule__UnaryExpression__Group__1__Impl : ( ( rule__UnaryExpression__FunctionNameAssignment_1 ) ) ;
    public final void rule__UnaryExpression__Group__1__Impl() throws RecognitionException {
        int rule__UnaryExpression__Group__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 599) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:8438:1: ( ( ( rule__UnaryExpression__FunctionNameAssignment_1 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:8439:1: ( ( rule__UnaryExpression__FunctionNameAssignment_1 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:8439:1: ( ( rule__UnaryExpression__FunctionNameAssignment_1 ) )
            // InternalSimpleBeeLangTestLanguage.g:8440:2: ( rule__UnaryExpression__FunctionNameAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnaryExpressionAccess().getFunctionNameAssignment_1()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:8441:2: ( rule__UnaryExpression__FunctionNameAssignment_1 )
            // InternalSimpleBeeLangTestLanguage.g:8441:3: rule__UnaryExpression__FunctionNameAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__UnaryExpression__FunctionNameAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnaryExpressionAccess().getFunctionNameAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 599, rule__UnaryExpression__Group__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnaryExpression__Group__1__Impl"


    // $ANTLR start "rule__UnaryExpression__Group__2"
    // InternalSimpleBeeLangTestLanguage.g:8449:1: rule__UnaryExpression__Group__2 : rule__UnaryExpression__Group__2__Impl ;
    public final void rule__UnaryExpression__Group__2() throws RecognitionException {
        int rule__UnaryExpression__Group__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 600) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:8453:1: ( rule__UnaryExpression__Group__2__Impl )
            // InternalSimpleBeeLangTestLanguage.g:8454:2: rule__UnaryExpression__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__UnaryExpression__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 600, rule__UnaryExpression__Group__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnaryExpression__Group__2"

}

@SuppressWarnings("all")
abstract class InternalSimpleBeeLangTestLanguageParser8 extends InternalSimpleBeeLangTestLanguageParser7 {

        InternalSimpleBeeLangTestLanguageParser8(TokenStream input) {
            this(input, new RecognizerSharedState());
        }

        InternalSimpleBeeLangTestLanguageParser8(TokenStream input, RecognizerSharedState state) {
            super(input, state);
        }

    // $ANTLR start "rule__UnaryExpression__Group__2__Impl"
    // InternalSimpleBeeLangTestLanguage.g:8460:1: rule__UnaryExpression__Group__2__Impl : ( ( rule__UnaryExpression__ExprAssignment_2 ) ) ;
    public final void rule__UnaryExpression__Group__2__Impl() throws RecognitionException {
        int rule__UnaryExpression__Group__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 601) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:8464:1: ( ( ( rule__UnaryExpression__ExprAssignment_2 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:8465:1: ( ( rule__UnaryExpression__ExprAssignment_2 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:8465:1: ( ( rule__UnaryExpression__ExprAssignment_2 ) )
            // InternalSimpleBeeLangTestLanguage.g:8466:2: ( rule__UnaryExpression__ExprAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnaryExpressionAccess().getExprAssignment_2()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:8467:2: ( rule__UnaryExpression__ExprAssignment_2 )
            // InternalSimpleBeeLangTestLanguage.g:8467:3: rule__UnaryExpression__ExprAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__UnaryExpression__ExprAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnaryExpressionAccess().getExprAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 601, rule__UnaryExpression__Group__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnaryExpression__Group__2__Impl"


    // $ANTLR start "rule__PreopExpression__Group__0"
    // InternalSimpleBeeLangTestLanguage.g:8476:1: rule__PreopExpression__Group__0 : rule__PreopExpression__Group__0__Impl rule__PreopExpression__Group__1 ;
    public final void rule__PreopExpression__Group__0() throws RecognitionException {
        int rule__PreopExpression__Group__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 602) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:8480:1: ( rule__PreopExpression__Group__0__Impl rule__PreopExpression__Group__1 )
            // InternalSimpleBeeLangTestLanguage.g:8481:2: rule__PreopExpression__Group__0__Impl rule__PreopExpression__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_19);
            rule__PreopExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__PreopExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 602, rule__PreopExpression__Group__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PreopExpression__Group__0"


    // $ANTLR start "rule__PreopExpression__Group__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:8488:1: rule__PreopExpression__Group__0__Impl : ( () ) ;
    public final void rule__PreopExpression__Group__0__Impl() throws RecognitionException {
        int rule__PreopExpression__Group__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 603) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:8492:1: ( ( () ) )
            // InternalSimpleBeeLangTestLanguage.g:8493:1: ( () )
            {
            // InternalSimpleBeeLangTestLanguage.g:8493:1: ( () )
            // InternalSimpleBeeLangTestLanguage.g:8494:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPreopExpressionAccess().getUnaryPreOpExpressionAction_0()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:8495:2: ()
            // InternalSimpleBeeLangTestLanguage.g:8495:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPreopExpressionAccess().getUnaryPreOpExpressionAction_0()); 
            }

            }


            }

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 603, rule__PreopExpression__Group__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PreopExpression__Group__0__Impl"


    // $ANTLR start "rule__PreopExpression__Group__1"
    // InternalSimpleBeeLangTestLanguage.g:8503:1: rule__PreopExpression__Group__1 : rule__PreopExpression__Group__1__Impl rule__PreopExpression__Group__2 ;
    public final void rule__PreopExpression__Group__1() throws RecognitionException {
        int rule__PreopExpression__Group__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 604) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:8507:1: ( rule__PreopExpression__Group__1__Impl rule__PreopExpression__Group__2 )
            // InternalSimpleBeeLangTestLanguage.g:8508:2: rule__PreopExpression__Group__1__Impl rule__PreopExpression__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_55);
            rule__PreopExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__PreopExpression__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 604, rule__PreopExpression__Group__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PreopExpression__Group__1"


    // $ANTLR start "rule__PreopExpression__Group__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:8515:1: rule__PreopExpression__Group__1__Impl : ( ( rule__PreopExpression__FunctionNameAssignment_1 ) ) ;
    public final void rule__PreopExpression__Group__1__Impl() throws RecognitionException {
        int rule__PreopExpression__Group__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 605) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:8519:1: ( ( ( rule__PreopExpression__FunctionNameAssignment_1 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:8520:1: ( ( rule__PreopExpression__FunctionNameAssignment_1 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:8520:1: ( ( rule__PreopExpression__FunctionNameAssignment_1 ) )
            // InternalSimpleBeeLangTestLanguage.g:8521:2: ( rule__PreopExpression__FunctionNameAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPreopExpressionAccess().getFunctionNameAssignment_1()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:8522:2: ( rule__PreopExpression__FunctionNameAssignment_1 )
            // InternalSimpleBeeLangTestLanguage.g:8522:3: rule__PreopExpression__FunctionNameAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__PreopExpression__FunctionNameAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPreopExpressionAccess().getFunctionNameAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 605, rule__PreopExpression__Group__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PreopExpression__Group__1__Impl"


    // $ANTLR start "rule__PreopExpression__Group__2"
    // InternalSimpleBeeLangTestLanguage.g:8530:1: rule__PreopExpression__Group__2 : rule__PreopExpression__Group__2__Impl ;
    public final void rule__PreopExpression__Group__2() throws RecognitionException {
        int rule__PreopExpression__Group__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 606) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:8534:1: ( rule__PreopExpression__Group__2__Impl )
            // InternalSimpleBeeLangTestLanguage.g:8535:2: rule__PreopExpression__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__PreopExpression__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 606, rule__PreopExpression__Group__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PreopExpression__Group__2"


    // $ANTLR start "rule__PreopExpression__Group__2__Impl"
    // InternalSimpleBeeLangTestLanguage.g:8541:1: rule__PreopExpression__Group__2__Impl : ( ( rule__PreopExpression__ExprAssignment_2 ) ) ;
    public final void rule__PreopExpression__Group__2__Impl() throws RecognitionException {
        int rule__PreopExpression__Group__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 607) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:8545:1: ( ( ( rule__PreopExpression__ExprAssignment_2 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:8546:1: ( ( rule__PreopExpression__ExprAssignment_2 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:8546:1: ( ( rule__PreopExpression__ExprAssignment_2 ) )
            // InternalSimpleBeeLangTestLanguage.g:8547:2: ( rule__PreopExpression__ExprAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPreopExpressionAccess().getExprAssignment_2()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:8548:2: ( rule__PreopExpression__ExprAssignment_2 )
            // InternalSimpleBeeLangTestLanguage.g:8548:3: rule__PreopExpression__ExprAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__PreopExpression__ExprAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPreopExpressionAccess().getExprAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 607, rule__PreopExpression__Group__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PreopExpression__Group__2__Impl"


    // $ANTLR start "rule__PostopExpression__Group__0"
    // InternalSimpleBeeLangTestLanguage.g:8557:1: rule__PostopExpression__Group__0 : rule__PostopExpression__Group__0__Impl rule__PostopExpression__Group__1 ;
    public final void rule__PostopExpression__Group__0() throws RecognitionException {
        int rule__PostopExpression__Group__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 608) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:8561:1: ( rule__PostopExpression__Group__0__Impl rule__PostopExpression__Group__1 )
            // InternalSimpleBeeLangTestLanguage.g:8562:2: rule__PostopExpression__Group__0__Impl rule__PostopExpression__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_56);
            rule__PostopExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__PostopExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 608, rule__PostopExpression__Group__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PostopExpression__Group__0"


    // $ANTLR start "rule__PostopExpression__Group__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:8569:1: rule__PostopExpression__Group__0__Impl : ( ruleInfixExpression ) ;
    public final void rule__PostopExpression__Group__0__Impl() throws RecognitionException {
        int rule__PostopExpression__Group__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 609) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:8573:1: ( ( ruleInfixExpression ) )
            // InternalSimpleBeeLangTestLanguage.g:8574:1: ( ruleInfixExpression )
            {
            // InternalSimpleBeeLangTestLanguage.g:8574:1: ( ruleInfixExpression )
            // InternalSimpleBeeLangTestLanguage.g:8575:2: ruleInfixExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPostopExpressionAccess().getInfixExpressionParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleInfixExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPostopExpressionAccess().getInfixExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 609, rule__PostopExpression__Group__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PostopExpression__Group__0__Impl"


    // $ANTLR start "rule__PostopExpression__Group__1"
    // InternalSimpleBeeLangTestLanguage.g:8584:1: rule__PostopExpression__Group__1 : rule__PostopExpression__Group__1__Impl ;
    public final void rule__PostopExpression__Group__1() throws RecognitionException {
        int rule__PostopExpression__Group__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 610) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:8588:1: ( rule__PostopExpression__Group__1__Impl )
            // InternalSimpleBeeLangTestLanguage.g:8589:2: rule__PostopExpression__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__PostopExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 610, rule__PostopExpression__Group__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PostopExpression__Group__1"


    // $ANTLR start "rule__PostopExpression__Group__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:8595:1: rule__PostopExpression__Group__1__Impl : ( ( rule__PostopExpression__Group_1__0 )? ) ;
    public final void rule__PostopExpression__Group__1__Impl() throws RecognitionException {
        int rule__PostopExpression__Group__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 611) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:8599:1: ( ( ( rule__PostopExpression__Group_1__0 )? ) )
            // InternalSimpleBeeLangTestLanguage.g:8600:1: ( ( rule__PostopExpression__Group_1__0 )? )
            {
            // InternalSimpleBeeLangTestLanguage.g:8600:1: ( ( rule__PostopExpression__Group_1__0 )? )
            // InternalSimpleBeeLangTestLanguage.g:8601:2: ( rule__PostopExpression__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPostopExpressionAccess().getGroup_1()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:8602:2: ( rule__PostopExpression__Group_1__0 )?
            int alt71=2;
            int LA71_0 = input.LA(1);

            if ( (LA71_0==37) ) {
                int LA71_1 = input.LA(2);

                if ( (synpred100_InternalSimpleBeeLangTestLanguage()) ) {
                    alt71=1;
                }
            }
            else if ( (LA71_0==36) ) {
                int LA71_2 = input.LA(2);

                if ( (synpred100_InternalSimpleBeeLangTestLanguage()) ) {
                    alt71=1;
                }
            }
            switch (alt71) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:8602:3: rule__PostopExpression__Group_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__PostopExpression__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPostopExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 611, rule__PostopExpression__Group__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PostopExpression__Group__1__Impl"


    // $ANTLR start "rule__PostopExpression__Group_1__0"
    // InternalSimpleBeeLangTestLanguage.g:8611:1: rule__PostopExpression__Group_1__0 : rule__PostopExpression__Group_1__0__Impl rule__PostopExpression__Group_1__1 ;
    public final void rule__PostopExpression__Group_1__0() throws RecognitionException {
        int rule__PostopExpression__Group_1__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 612) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:8615:1: ( rule__PostopExpression__Group_1__0__Impl rule__PostopExpression__Group_1__1 )
            // InternalSimpleBeeLangTestLanguage.g:8616:2: rule__PostopExpression__Group_1__0__Impl rule__PostopExpression__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_56);
            rule__PostopExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__PostopExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 612, rule__PostopExpression__Group_1__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PostopExpression__Group_1__0"


    // $ANTLR start "rule__PostopExpression__Group_1__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:8623:1: rule__PostopExpression__Group_1__0__Impl : ( () ) ;
    public final void rule__PostopExpression__Group_1__0__Impl() throws RecognitionException {
        int rule__PostopExpression__Group_1__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 613) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:8627:1: ( ( () ) )
            // InternalSimpleBeeLangTestLanguage.g:8628:1: ( () )
            {
            // InternalSimpleBeeLangTestLanguage.g:8628:1: ( () )
            // InternalSimpleBeeLangTestLanguage.g:8629:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPostopExpressionAccess().getUnaryPostOpExpressionExprAction_1_0()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:8630:2: ()
            // InternalSimpleBeeLangTestLanguage.g:8630:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPostopExpressionAccess().getUnaryPostOpExpressionExprAction_1_0()); 
            }

            }


            }

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 613, rule__PostopExpression__Group_1__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PostopExpression__Group_1__0__Impl"


    // $ANTLR start "rule__PostopExpression__Group_1__1"
    // InternalSimpleBeeLangTestLanguage.g:8638:1: rule__PostopExpression__Group_1__1 : rule__PostopExpression__Group_1__1__Impl ;
    public final void rule__PostopExpression__Group_1__1() throws RecognitionException {
        int rule__PostopExpression__Group_1__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 614) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:8642:1: ( rule__PostopExpression__Group_1__1__Impl )
            // InternalSimpleBeeLangTestLanguage.g:8643:2: rule__PostopExpression__Group_1__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__PostopExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 614, rule__PostopExpression__Group_1__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PostopExpression__Group_1__1"


    // $ANTLR start "rule__PostopExpression__Group_1__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:8649:1: rule__PostopExpression__Group_1__1__Impl : ( ( rule__PostopExpression__FunctionNameAssignment_1_1 ) ) ;
    public final void rule__PostopExpression__Group_1__1__Impl() throws RecognitionException {
        int rule__PostopExpression__Group_1__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 615) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:8653:1: ( ( ( rule__PostopExpression__FunctionNameAssignment_1_1 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:8654:1: ( ( rule__PostopExpression__FunctionNameAssignment_1_1 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:8654:1: ( ( rule__PostopExpression__FunctionNameAssignment_1_1 ) )
            // InternalSimpleBeeLangTestLanguage.g:8655:2: ( rule__PostopExpression__FunctionNameAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPostopExpressionAccess().getFunctionNameAssignment_1_1()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:8656:2: ( rule__PostopExpression__FunctionNameAssignment_1_1 )
            // InternalSimpleBeeLangTestLanguage.g:8656:3: rule__PostopExpression__FunctionNameAssignment_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__PostopExpression__FunctionNameAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPostopExpressionAccess().getFunctionNameAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 615, rule__PostopExpression__Group_1__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PostopExpression__Group_1__1__Impl"


    // $ANTLR start "rule__InfixExpression__Group__0"
    // InternalSimpleBeeLangTestLanguage.g:8665:1: rule__InfixExpression__Group__0 : rule__InfixExpression__Group__0__Impl rule__InfixExpression__Group__1 ;
    public final void rule__InfixExpression__Group__0() throws RecognitionException {
        int rule__InfixExpression__Group__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 616) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:8669:1: ( rule__InfixExpression__Group__0__Impl rule__InfixExpression__Group__1 )
            // InternalSimpleBeeLangTestLanguage.g:8670:2: rule__InfixExpression__Group__0__Impl rule__InfixExpression__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_57);
            rule__InfixExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__InfixExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 616, rule__InfixExpression__Group__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InfixExpression__Group__0"


    // $ANTLR start "rule__InfixExpression__Group__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:8677:1: rule__InfixExpression__Group__0__Impl : ( ruleCallExpression ) ;
    public final void rule__InfixExpression__Group__0__Impl() throws RecognitionException {
        int rule__InfixExpression__Group__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 617) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:8681:1: ( ( ruleCallExpression ) )
            // InternalSimpleBeeLangTestLanguage.g:8682:1: ( ruleCallExpression )
            {
            // InternalSimpleBeeLangTestLanguage.g:8682:1: ( ruleCallExpression )
            // InternalSimpleBeeLangTestLanguage.g:8683:2: ruleCallExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInfixExpressionAccess().getCallExpressionParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleCallExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInfixExpressionAccess().getCallExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 617, rule__InfixExpression__Group__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InfixExpression__Group__0__Impl"


    // $ANTLR start "rule__InfixExpression__Group__1"
    // InternalSimpleBeeLangTestLanguage.g:8692:1: rule__InfixExpression__Group__1 : rule__InfixExpression__Group__1__Impl ;
    public final void rule__InfixExpression__Group__1() throws RecognitionException {
        int rule__InfixExpression__Group__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 618) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:8696:1: ( rule__InfixExpression__Group__1__Impl )
            // InternalSimpleBeeLangTestLanguage.g:8697:2: rule__InfixExpression__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__InfixExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 618, rule__InfixExpression__Group__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InfixExpression__Group__1"


    // $ANTLR start "rule__InfixExpression__Group__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:8703:1: rule__InfixExpression__Group__1__Impl : ( ( rule__InfixExpression__Alternatives_1 )* ) ;
    public final void rule__InfixExpression__Group__1__Impl() throws RecognitionException {
        int rule__InfixExpression__Group__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 619) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:8707:1: ( ( ( rule__InfixExpression__Alternatives_1 )* ) )
            // InternalSimpleBeeLangTestLanguage.g:8708:1: ( ( rule__InfixExpression__Alternatives_1 )* )
            {
            // InternalSimpleBeeLangTestLanguage.g:8708:1: ( ( rule__InfixExpression__Alternatives_1 )* )
            // InternalSimpleBeeLangTestLanguage.g:8709:2: ( rule__InfixExpression__Alternatives_1 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInfixExpressionAccess().getAlternatives_1()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:8710:2: ( rule__InfixExpression__Alternatives_1 )*
            loop72:
            do {
                int alt72=2;
                int LA72_0 = input.LA(1);

                if ( (LA72_0==66) ) {
                    int LA72_2 = input.LA(2);

                    if ( (synpred101_InternalSimpleBeeLangTestLanguage()) ) {
                        alt72=1;
                    }


                }
                else if ( (LA72_0==67) ) {
                    int LA72_3 = input.LA(2);

                    if ( (synpred101_InternalSimpleBeeLangTestLanguage()) ) {
                        alt72=1;
                    }


                }


                switch (alt72) {
            	case 1 :
            	    // InternalSimpleBeeLangTestLanguage.g:8710:3: rule__InfixExpression__Alternatives_1
            	    {
            	    pushFollow(FollowSets000.FOLLOW_58);
            	    rule__InfixExpression__Alternatives_1();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop72;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInfixExpressionAccess().getAlternatives_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 619, rule__InfixExpression__Group__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InfixExpression__Group__1__Impl"


    // $ANTLR start "rule__InfixExpression__Group_1_0__0"
    // InternalSimpleBeeLangTestLanguage.g:8719:1: rule__InfixExpression__Group_1_0__0 : rule__InfixExpression__Group_1_0__0__Impl rule__InfixExpression__Group_1_0__1 ;
    public final void rule__InfixExpression__Group_1_0__0() throws RecognitionException {
        int rule__InfixExpression__Group_1_0__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 620) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:8723:1: ( rule__InfixExpression__Group_1_0__0__Impl rule__InfixExpression__Group_1_0__1 )
            // InternalSimpleBeeLangTestLanguage.g:8724:2: rule__InfixExpression__Group_1_0__0__Impl rule__InfixExpression__Group_1_0__1
            {
            pushFollow(FollowSets000.FOLLOW_59);
            rule__InfixExpression__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__InfixExpression__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 620, rule__InfixExpression__Group_1_0__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InfixExpression__Group_1_0__0"


    // $ANTLR start "rule__InfixExpression__Group_1_0__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:8731:1: rule__InfixExpression__Group_1_0__0__Impl : ( () ) ;
    public final void rule__InfixExpression__Group_1_0__0__Impl() throws RecognitionException {
        int rule__InfixExpression__Group_1_0__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 621) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:8735:1: ( ( () ) )
            // InternalSimpleBeeLangTestLanguage.g:8736:1: ( () )
            {
            // InternalSimpleBeeLangTestLanguage.g:8736:1: ( () )
            // InternalSimpleBeeLangTestLanguage.g:8737:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInfixExpressionAccess().getCallFeatureFuncExprAction_1_0_0()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:8738:2: ()
            // InternalSimpleBeeLangTestLanguage.g:8738:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInfixExpressionAccess().getCallFeatureFuncExprAction_1_0_0()); 
            }

            }


            }

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 621, rule__InfixExpression__Group_1_0__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InfixExpression__Group_1_0__0__Impl"


    // $ANTLR start "rule__InfixExpression__Group_1_0__1"
    // InternalSimpleBeeLangTestLanguage.g:8746:1: rule__InfixExpression__Group_1_0__1 : rule__InfixExpression__Group_1_0__1__Impl rule__InfixExpression__Group_1_0__2 ;
    public final void rule__InfixExpression__Group_1_0__1() throws RecognitionException {
        int rule__InfixExpression__Group_1_0__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 622) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:8750:1: ( rule__InfixExpression__Group_1_0__1__Impl rule__InfixExpression__Group_1_0__2 )
            // InternalSimpleBeeLangTestLanguage.g:8751:2: rule__InfixExpression__Group_1_0__1__Impl rule__InfixExpression__Group_1_0__2
            {
            pushFollow(FollowSets000.FOLLOW_9);
            rule__InfixExpression__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__InfixExpression__Group_1_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 622, rule__InfixExpression__Group_1_0__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InfixExpression__Group_1_0__1"


    // $ANTLR start "rule__InfixExpression__Group_1_0__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:8758:1: rule__InfixExpression__Group_1_0__1__Impl : ( '.' ) ;
    public final void rule__InfixExpression__Group_1_0__1__Impl() throws RecognitionException {
        int rule__InfixExpression__Group_1_0__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 623) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:8762:1: ( ( '.' ) )
            // InternalSimpleBeeLangTestLanguage.g:8763:1: ( '.' )
            {
            // InternalSimpleBeeLangTestLanguage.g:8763:1: ( '.' )
            // InternalSimpleBeeLangTestLanguage.g:8764:2: '.'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInfixExpressionAccess().getFullStopKeyword_1_0_1()); 
            }
            match(input,66,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInfixExpressionAccess().getFullStopKeyword_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 623, rule__InfixExpression__Group_1_0__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InfixExpression__Group_1_0__1__Impl"


    // $ANTLR start "rule__InfixExpression__Group_1_0__2"
    // InternalSimpleBeeLangTestLanguage.g:8773:1: rule__InfixExpression__Group_1_0__2 : rule__InfixExpression__Group_1_0__2__Impl rule__InfixExpression__Group_1_0__3 ;
    public final void rule__InfixExpression__Group_1_0__2() throws RecognitionException {
        int rule__InfixExpression__Group_1_0__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 624) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:8777:1: ( rule__InfixExpression__Group_1_0__2__Impl rule__InfixExpression__Group_1_0__3 )
            // InternalSimpleBeeLangTestLanguage.g:8778:2: rule__InfixExpression__Group_1_0__2__Impl rule__InfixExpression__Group_1_0__3
            {
            pushFollow(FollowSets000.FOLLOW_60);
            rule__InfixExpression__Group_1_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__InfixExpression__Group_1_0__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 624, rule__InfixExpression__Group_1_0__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InfixExpression__Group_1_0__2"


    // $ANTLR start "rule__InfixExpression__Group_1_0__2__Impl"
    // InternalSimpleBeeLangTestLanguage.g:8785:1: rule__InfixExpression__Group_1_0__2__Impl : ( ( rule__InfixExpression__NameAssignment_1_0_2 ) ) ;
    public final void rule__InfixExpression__Group_1_0__2__Impl() throws RecognitionException {
        int rule__InfixExpression__Group_1_0__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 625) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:8789:1: ( ( ( rule__InfixExpression__NameAssignment_1_0_2 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:8790:1: ( ( rule__InfixExpression__NameAssignment_1_0_2 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:8790:1: ( ( rule__InfixExpression__NameAssignment_1_0_2 ) )
            // InternalSimpleBeeLangTestLanguage.g:8791:2: ( rule__InfixExpression__NameAssignment_1_0_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInfixExpressionAccess().getNameAssignment_1_0_2()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:8792:2: ( rule__InfixExpression__NameAssignment_1_0_2 )
            // InternalSimpleBeeLangTestLanguage.g:8792:3: rule__InfixExpression__NameAssignment_1_0_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__InfixExpression__NameAssignment_1_0_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInfixExpressionAccess().getNameAssignment_1_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 625, rule__InfixExpression__Group_1_0__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InfixExpression__Group_1_0__2__Impl"


    // $ANTLR start "rule__InfixExpression__Group_1_0__3"
    // InternalSimpleBeeLangTestLanguage.g:8800:1: rule__InfixExpression__Group_1_0__3 : rule__InfixExpression__Group_1_0__3__Impl rule__InfixExpression__Group_1_0__4 ;
    public final void rule__InfixExpression__Group_1_0__3() throws RecognitionException {
        int rule__InfixExpression__Group_1_0__3_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 626) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:8804:1: ( rule__InfixExpression__Group_1_0__3__Impl rule__InfixExpression__Group_1_0__4 )
            // InternalSimpleBeeLangTestLanguage.g:8805:2: rule__InfixExpression__Group_1_0__3__Impl rule__InfixExpression__Group_1_0__4
            {
            pushFollow(FollowSets000.FOLLOW_61);
            rule__InfixExpression__Group_1_0__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__InfixExpression__Group_1_0__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 626, rule__InfixExpression__Group_1_0__3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InfixExpression__Group_1_0__3"


    // $ANTLR start "rule__InfixExpression__Group_1_0__3__Impl"
    // InternalSimpleBeeLangTestLanguage.g:8812:1: rule__InfixExpression__Group_1_0__3__Impl : ( '(' ) ;
    public final void rule__InfixExpression__Group_1_0__3__Impl() throws RecognitionException {
        int rule__InfixExpression__Group_1_0__3__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 627) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:8816:1: ( ( '(' ) )
            // InternalSimpleBeeLangTestLanguage.g:8817:1: ( '(' )
            {
            // InternalSimpleBeeLangTestLanguage.g:8817:1: ( '(' )
            // InternalSimpleBeeLangTestLanguage.g:8818:2: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInfixExpressionAccess().getLeftParenthesisKeyword_1_0_3()); 
            }
            match(input,60,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInfixExpressionAccess().getLeftParenthesisKeyword_1_0_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 627, rule__InfixExpression__Group_1_0__3__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InfixExpression__Group_1_0__3__Impl"


    // $ANTLR start "rule__InfixExpression__Group_1_0__4"
    // InternalSimpleBeeLangTestLanguage.g:8827:1: rule__InfixExpression__Group_1_0__4 : rule__InfixExpression__Group_1_0__4__Impl rule__InfixExpression__Group_1_0__5 ;
    public final void rule__InfixExpression__Group_1_0__4() throws RecognitionException {
        int rule__InfixExpression__Group_1_0__4_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 628) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:8831:1: ( rule__InfixExpression__Group_1_0__4__Impl rule__InfixExpression__Group_1_0__5 )
            // InternalSimpleBeeLangTestLanguage.g:8832:2: rule__InfixExpression__Group_1_0__4__Impl rule__InfixExpression__Group_1_0__5
            {
            pushFollow(FollowSets000.FOLLOW_61);
            rule__InfixExpression__Group_1_0__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__InfixExpression__Group_1_0__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 628, rule__InfixExpression__Group_1_0__4_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InfixExpression__Group_1_0__4"


    // $ANTLR start "rule__InfixExpression__Group_1_0__4__Impl"
    // InternalSimpleBeeLangTestLanguage.g:8839:1: rule__InfixExpression__Group_1_0__4__Impl : ( ( rule__InfixExpression__ParameterListAssignment_1_0_4 )? ) ;
    public final void rule__InfixExpression__Group_1_0__4__Impl() throws RecognitionException {
        int rule__InfixExpression__Group_1_0__4__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 629) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:8843:1: ( ( ( rule__InfixExpression__ParameterListAssignment_1_0_4 )? ) )
            // InternalSimpleBeeLangTestLanguage.g:8844:1: ( ( rule__InfixExpression__ParameterListAssignment_1_0_4 )? )
            {
            // InternalSimpleBeeLangTestLanguage.g:8844:1: ( ( rule__InfixExpression__ParameterListAssignment_1_0_4 )? )
            // InternalSimpleBeeLangTestLanguage.g:8845:2: ( rule__InfixExpression__ParameterListAssignment_1_0_4 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInfixExpressionAccess().getParameterListAssignment_1_0_4()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:8846:2: ( rule__InfixExpression__ParameterListAssignment_1_0_4 )?
            int alt73=2;
            int LA73_0 = input.LA(1);

            if ( (LA73_0==RULE_STRING||LA73_0==RULE_ID||LA73_0==13||LA73_0==28||LA73_0==31||(LA73_0>=35 && LA73_0<=44)||LA73_0==60||LA73_0==63||LA73_0==69||(LA73_0>=71 && LA73_0<=72)||LA73_0==75) ) {
                alt73=1;
            }
            switch (alt73) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:8846:3: rule__InfixExpression__ParameterListAssignment_1_0_4
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__InfixExpression__ParameterListAssignment_1_0_4();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInfixExpressionAccess().getParameterListAssignment_1_0_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 629, rule__InfixExpression__Group_1_0__4__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InfixExpression__Group_1_0__4__Impl"


    // $ANTLR start "rule__InfixExpression__Group_1_0__5"
    // InternalSimpleBeeLangTestLanguage.g:8854:1: rule__InfixExpression__Group_1_0__5 : rule__InfixExpression__Group_1_0__5__Impl ;
    public final void rule__InfixExpression__Group_1_0__5() throws RecognitionException {
        int rule__InfixExpression__Group_1_0__5_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 630) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:8858:1: ( rule__InfixExpression__Group_1_0__5__Impl )
            // InternalSimpleBeeLangTestLanguage.g:8859:2: rule__InfixExpression__Group_1_0__5__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__InfixExpression__Group_1_0__5__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 630, rule__InfixExpression__Group_1_0__5_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InfixExpression__Group_1_0__5"


    // $ANTLR start "rule__InfixExpression__Group_1_0__5__Impl"
    // InternalSimpleBeeLangTestLanguage.g:8865:1: rule__InfixExpression__Group_1_0__5__Impl : ( ')' ) ;
    public final void rule__InfixExpression__Group_1_0__5__Impl() throws RecognitionException {
        int rule__InfixExpression__Group_1_0__5__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 631) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:8869:1: ( ( ')' ) )
            // InternalSimpleBeeLangTestLanguage.g:8870:1: ( ')' )
            {
            // InternalSimpleBeeLangTestLanguage.g:8870:1: ( ')' )
            // InternalSimpleBeeLangTestLanguage.g:8871:2: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInfixExpressionAccess().getRightParenthesisKeyword_1_0_5()); 
            }
            match(input,61,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInfixExpressionAccess().getRightParenthesisKeyword_1_0_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 631, rule__InfixExpression__Group_1_0__5__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InfixExpression__Group_1_0__5__Impl"


    // $ANTLR start "rule__InfixExpression__Group_1_1__0"
    // InternalSimpleBeeLangTestLanguage.g:8881:1: rule__InfixExpression__Group_1_1__0 : rule__InfixExpression__Group_1_1__0__Impl rule__InfixExpression__Group_1_1__1 ;
    public final void rule__InfixExpression__Group_1_1__0() throws RecognitionException {
        int rule__InfixExpression__Group_1_1__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 632) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:8885:1: ( rule__InfixExpression__Group_1_1__0__Impl rule__InfixExpression__Group_1_1__1 )
            // InternalSimpleBeeLangTestLanguage.g:8886:2: rule__InfixExpression__Group_1_1__0__Impl rule__InfixExpression__Group_1_1__1
            {
            pushFollow(FollowSets000.FOLLOW_62);
            rule__InfixExpression__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__InfixExpression__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 632, rule__InfixExpression__Group_1_1__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InfixExpression__Group_1_1__0"


    // $ANTLR start "rule__InfixExpression__Group_1_1__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:8893:1: rule__InfixExpression__Group_1_1__0__Impl : ( () ) ;
    public final void rule__InfixExpression__Group_1_1__0__Impl() throws RecognitionException {
        int rule__InfixExpression__Group_1_1__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 633) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:8897:1: ( ( () ) )
            // InternalSimpleBeeLangTestLanguage.g:8898:1: ( () )
            {
            // InternalSimpleBeeLangTestLanguage.g:8898:1: ( () )
            // InternalSimpleBeeLangTestLanguage.g:8899:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInfixExpressionAccess().getAtExpressionObjExprAction_1_1_0()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:8900:2: ()
            // InternalSimpleBeeLangTestLanguage.g:8900:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInfixExpressionAccess().getAtExpressionObjExprAction_1_1_0()); 
            }

            }


            }

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 633, rule__InfixExpression__Group_1_1__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InfixExpression__Group_1_1__0__Impl"


    // $ANTLR start "rule__InfixExpression__Group_1_1__1"
    // InternalSimpleBeeLangTestLanguage.g:8908:1: rule__InfixExpression__Group_1_1__1 : rule__InfixExpression__Group_1_1__1__Impl rule__InfixExpression__Group_1_1__2 ;
    public final void rule__InfixExpression__Group_1_1__1() throws RecognitionException {
        int rule__InfixExpression__Group_1_1__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 634) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:8912:1: ( rule__InfixExpression__Group_1_1__1__Impl rule__InfixExpression__Group_1_1__2 )
            // InternalSimpleBeeLangTestLanguage.g:8913:2: rule__InfixExpression__Group_1_1__1__Impl rule__InfixExpression__Group_1_1__2
            {
            pushFollow(FollowSets000.FOLLOW_19);
            rule__InfixExpression__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__InfixExpression__Group_1_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 634, rule__InfixExpression__Group_1_1__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InfixExpression__Group_1_1__1"


    // $ANTLR start "rule__InfixExpression__Group_1_1__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:8920:1: rule__InfixExpression__Group_1_1__1__Impl : ( '[' ) ;
    public final void rule__InfixExpression__Group_1_1__1__Impl() throws RecognitionException {
        int rule__InfixExpression__Group_1_1__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 635) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:8924:1: ( ( '[' ) )
            // InternalSimpleBeeLangTestLanguage.g:8925:1: ( '[' )
            {
            // InternalSimpleBeeLangTestLanguage.g:8925:1: ( '[' )
            // InternalSimpleBeeLangTestLanguage.g:8926:2: '['
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInfixExpressionAccess().getLeftSquareBracketKeyword_1_1_1()); 
            }
            match(input,67,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInfixExpressionAccess().getLeftSquareBracketKeyword_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 635, rule__InfixExpression__Group_1_1__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InfixExpression__Group_1_1__1__Impl"


    // $ANTLR start "rule__InfixExpression__Group_1_1__2"
    // InternalSimpleBeeLangTestLanguage.g:8935:1: rule__InfixExpression__Group_1_1__2 : rule__InfixExpression__Group_1_1__2__Impl rule__InfixExpression__Group_1_1__3 ;
    public final void rule__InfixExpression__Group_1_1__2() throws RecognitionException {
        int rule__InfixExpression__Group_1_1__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 636) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:8939:1: ( rule__InfixExpression__Group_1_1__2__Impl rule__InfixExpression__Group_1_1__3 )
            // InternalSimpleBeeLangTestLanguage.g:8940:2: rule__InfixExpression__Group_1_1__2__Impl rule__InfixExpression__Group_1_1__3
            {
            pushFollow(FollowSets000.FOLLOW_63);
            rule__InfixExpression__Group_1_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__InfixExpression__Group_1_1__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 636, rule__InfixExpression__Group_1_1__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InfixExpression__Group_1_1__2"


    // $ANTLR start "rule__InfixExpression__Group_1_1__2__Impl"
    // InternalSimpleBeeLangTestLanguage.g:8947:1: rule__InfixExpression__Group_1_1__2__Impl : ( ( rule__InfixExpression__IndexExprAssignment_1_1_2 ) ) ;
    public final void rule__InfixExpression__Group_1_1__2__Impl() throws RecognitionException {
        int rule__InfixExpression__Group_1_1__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 637) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:8951:1: ( ( ( rule__InfixExpression__IndexExprAssignment_1_1_2 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:8952:1: ( ( rule__InfixExpression__IndexExprAssignment_1_1_2 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:8952:1: ( ( rule__InfixExpression__IndexExprAssignment_1_1_2 ) )
            // InternalSimpleBeeLangTestLanguage.g:8953:2: ( rule__InfixExpression__IndexExprAssignment_1_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInfixExpressionAccess().getIndexExprAssignment_1_1_2()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:8954:2: ( rule__InfixExpression__IndexExprAssignment_1_1_2 )
            // InternalSimpleBeeLangTestLanguage.g:8954:3: rule__InfixExpression__IndexExprAssignment_1_1_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__InfixExpression__IndexExprAssignment_1_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInfixExpressionAccess().getIndexExprAssignment_1_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 637, rule__InfixExpression__Group_1_1__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InfixExpression__Group_1_1__2__Impl"


    // $ANTLR start "rule__InfixExpression__Group_1_1__3"
    // InternalSimpleBeeLangTestLanguage.g:8962:1: rule__InfixExpression__Group_1_1__3 : rule__InfixExpression__Group_1_1__3__Impl ;
    public final void rule__InfixExpression__Group_1_1__3() throws RecognitionException {
        int rule__InfixExpression__Group_1_1__3_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 638) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:8966:1: ( rule__InfixExpression__Group_1_1__3__Impl )
            // InternalSimpleBeeLangTestLanguage.g:8967:2: rule__InfixExpression__Group_1_1__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__InfixExpression__Group_1_1__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 638, rule__InfixExpression__Group_1_1__3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InfixExpression__Group_1_1__3"


    // $ANTLR start "rule__InfixExpression__Group_1_1__3__Impl"
    // InternalSimpleBeeLangTestLanguage.g:8973:1: rule__InfixExpression__Group_1_1__3__Impl : ( ']' ) ;
    public final void rule__InfixExpression__Group_1_1__3__Impl() throws RecognitionException {
        int rule__InfixExpression__Group_1_1__3__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 639) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:8977:1: ( ( ']' ) )
            // InternalSimpleBeeLangTestLanguage.g:8978:1: ( ']' )
            {
            // InternalSimpleBeeLangTestLanguage.g:8978:1: ( ']' )
            // InternalSimpleBeeLangTestLanguage.g:8979:2: ']'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInfixExpressionAccess().getRightSquareBracketKeyword_1_1_3()); 
            }
            match(input,68,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInfixExpressionAccess().getRightSquareBracketKeyword_1_1_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 639, rule__InfixExpression__Group_1_1__3__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InfixExpression__Group_1_1__3__Impl"


    // $ANTLR start "rule__InfixExpression__Group_1_2__0"
    // InternalSimpleBeeLangTestLanguage.g:8989:1: rule__InfixExpression__Group_1_2__0 : rule__InfixExpression__Group_1_2__0__Impl rule__InfixExpression__Group_1_2__1 ;
    public final void rule__InfixExpression__Group_1_2__0() throws RecognitionException {
        int rule__InfixExpression__Group_1_2__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 640) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:8993:1: ( rule__InfixExpression__Group_1_2__0__Impl rule__InfixExpression__Group_1_2__1 )
            // InternalSimpleBeeLangTestLanguage.g:8994:2: rule__InfixExpression__Group_1_2__0__Impl rule__InfixExpression__Group_1_2__1
            {
            pushFollow(FollowSets000.FOLLOW_57);
            rule__InfixExpression__Group_1_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__InfixExpression__Group_1_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 640, rule__InfixExpression__Group_1_2__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InfixExpression__Group_1_2__0"


    // $ANTLR start "rule__InfixExpression__Group_1_2__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:9001:1: rule__InfixExpression__Group_1_2__0__Impl : ( () ) ;
    public final void rule__InfixExpression__Group_1_2__0__Impl() throws RecognitionException {
        int rule__InfixExpression__Group_1_2__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 641) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:9005:1: ( ( () ) )
            // InternalSimpleBeeLangTestLanguage.g:9006:1: ( () )
            {
            // InternalSimpleBeeLangTestLanguage.g:9006:1: ( () )
            // InternalSimpleBeeLangTestLanguage.g:9007:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInfixExpressionAccess().getFeatureExpressionObjExprAction_1_2_0()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:9008:2: ()
            // InternalSimpleBeeLangTestLanguage.g:9008:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInfixExpressionAccess().getFeatureExpressionObjExprAction_1_2_0()); 
            }

            }


            }

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 641, rule__InfixExpression__Group_1_2__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InfixExpression__Group_1_2__0__Impl"


    // $ANTLR start "rule__InfixExpression__Group_1_2__1"
    // InternalSimpleBeeLangTestLanguage.g:9016:1: rule__InfixExpression__Group_1_2__1 : rule__InfixExpression__Group_1_2__1__Impl rule__InfixExpression__Group_1_2__2 ;
    public final void rule__InfixExpression__Group_1_2__1() throws RecognitionException {
        int rule__InfixExpression__Group_1_2__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 642) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:9020:1: ( rule__InfixExpression__Group_1_2__1__Impl rule__InfixExpression__Group_1_2__2 )
            // InternalSimpleBeeLangTestLanguage.g:9021:2: rule__InfixExpression__Group_1_2__1__Impl rule__InfixExpression__Group_1_2__2
            {
            pushFollow(FollowSets000.FOLLOW_9);
            rule__InfixExpression__Group_1_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__InfixExpression__Group_1_2__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 642, rule__InfixExpression__Group_1_2__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InfixExpression__Group_1_2__1"


    // $ANTLR start "rule__InfixExpression__Group_1_2__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:9028:1: rule__InfixExpression__Group_1_2__1__Impl : ( '.' ) ;
    public final void rule__InfixExpression__Group_1_2__1__Impl() throws RecognitionException {
        int rule__InfixExpression__Group_1_2__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 643) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:9032:1: ( ( '.' ) )
            // InternalSimpleBeeLangTestLanguage.g:9033:1: ( '.' )
            {
            // InternalSimpleBeeLangTestLanguage.g:9033:1: ( '.' )
            // InternalSimpleBeeLangTestLanguage.g:9034:2: '.'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInfixExpressionAccess().getFullStopKeyword_1_2_1()); 
            }
            match(input,66,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInfixExpressionAccess().getFullStopKeyword_1_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 643, rule__InfixExpression__Group_1_2__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InfixExpression__Group_1_2__1__Impl"


    // $ANTLR start "rule__InfixExpression__Group_1_2__2"
    // InternalSimpleBeeLangTestLanguage.g:9043:1: rule__InfixExpression__Group_1_2__2 : rule__InfixExpression__Group_1_2__2__Impl ;
    public final void rule__InfixExpression__Group_1_2__2() throws RecognitionException {
        int rule__InfixExpression__Group_1_2__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 644) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:9047:1: ( rule__InfixExpression__Group_1_2__2__Impl )
            // InternalSimpleBeeLangTestLanguage.g:9048:2: rule__InfixExpression__Group_1_2__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__InfixExpression__Group_1_2__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 644, rule__InfixExpression__Group_1_2__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InfixExpression__Group_1_2__2"


    // $ANTLR start "rule__InfixExpression__Group_1_2__2__Impl"
    // InternalSimpleBeeLangTestLanguage.g:9054:1: rule__InfixExpression__Group_1_2__2__Impl : ( ( rule__InfixExpression__FeatureNameAssignment_1_2_2 ) ) ;
    public final void rule__InfixExpression__Group_1_2__2__Impl() throws RecognitionException {
        int rule__InfixExpression__Group_1_2__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 645) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:9058:1: ( ( ( rule__InfixExpression__FeatureNameAssignment_1_2_2 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:9059:1: ( ( rule__InfixExpression__FeatureNameAssignment_1_2_2 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:9059:1: ( ( rule__InfixExpression__FeatureNameAssignment_1_2_2 ) )
            // InternalSimpleBeeLangTestLanguage.g:9060:2: ( rule__InfixExpression__FeatureNameAssignment_1_2_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInfixExpressionAccess().getFeatureNameAssignment_1_2_2()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:9061:2: ( rule__InfixExpression__FeatureNameAssignment_1_2_2 )
            // InternalSimpleBeeLangTestLanguage.g:9061:3: rule__InfixExpression__FeatureNameAssignment_1_2_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__InfixExpression__FeatureNameAssignment_1_2_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInfixExpressionAccess().getFeatureNameAssignment_1_2_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 645, rule__InfixExpression__Group_1_2__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InfixExpression__Group_1_2__2__Impl"


    // $ANTLR start "rule__CallExpression__Group__0"
    // InternalSimpleBeeLangTestLanguage.g:9070:1: rule__CallExpression__Group__0 : rule__CallExpression__Group__0__Impl rule__CallExpression__Group__1 ;
    public final void rule__CallExpression__Group__0() throws RecognitionException {
        int rule__CallExpression__Group__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 646) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:9074:1: ( rule__CallExpression__Group__0__Impl rule__CallExpression__Group__1 )
            // InternalSimpleBeeLangTestLanguage.g:9075:2: rule__CallExpression__Group__0__Impl rule__CallExpression__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_60);
            rule__CallExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__CallExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 646, rule__CallExpression__Group__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CallExpression__Group__0"


    // $ANTLR start "rule__CallExpression__Group__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:9082:1: rule__CallExpression__Group__0__Impl : ( rulePrimaryExpression ) ;
    public final void rule__CallExpression__Group__0__Impl() throws RecognitionException {
        int rule__CallExpression__Group__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 647) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:9086:1: ( ( rulePrimaryExpression ) )
            // InternalSimpleBeeLangTestLanguage.g:9087:1: ( rulePrimaryExpression )
            {
            // InternalSimpleBeeLangTestLanguage.g:9087:1: ( rulePrimaryExpression )
            // InternalSimpleBeeLangTestLanguage.g:9088:2: rulePrimaryExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCallExpressionAccess().getPrimaryExpressionParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            rulePrimaryExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCallExpressionAccess().getPrimaryExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 647, rule__CallExpression__Group__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CallExpression__Group__0__Impl"


    // $ANTLR start "rule__CallExpression__Group__1"
    // InternalSimpleBeeLangTestLanguage.g:9097:1: rule__CallExpression__Group__1 : rule__CallExpression__Group__1__Impl ;
    public final void rule__CallExpression__Group__1() throws RecognitionException {
        int rule__CallExpression__Group__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 648) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:9101:1: ( rule__CallExpression__Group__1__Impl )
            // InternalSimpleBeeLangTestLanguage.g:9102:2: rule__CallExpression__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__CallExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 648, rule__CallExpression__Group__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CallExpression__Group__1"


    // $ANTLR start "rule__CallExpression__Group__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:9108:1: rule__CallExpression__Group__1__Impl : ( ( rule__CallExpression__Group_1__0 )* ) ;
    public final void rule__CallExpression__Group__1__Impl() throws RecognitionException {
        int rule__CallExpression__Group__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 649) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:9112:1: ( ( ( rule__CallExpression__Group_1__0 )* ) )
            // InternalSimpleBeeLangTestLanguage.g:9113:1: ( ( rule__CallExpression__Group_1__0 )* )
            {
            // InternalSimpleBeeLangTestLanguage.g:9113:1: ( ( rule__CallExpression__Group_1__0 )* )
            // InternalSimpleBeeLangTestLanguage.g:9114:2: ( rule__CallExpression__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCallExpressionAccess().getGroup_1()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:9115:2: ( rule__CallExpression__Group_1__0 )*
            loop74:
            do {
                int alt74=2;
                int LA74_0 = input.LA(1);

                if ( (LA74_0==60) ) {
                    int LA74_2 = input.LA(2);

                    if ( (synpred103_InternalSimpleBeeLangTestLanguage()) ) {
                        alt74=1;
                    }


                }


                switch (alt74) {
            	case 1 :
            	    // InternalSimpleBeeLangTestLanguage.g:9115:3: rule__CallExpression__Group_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_64);
            	    rule__CallExpression__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop74;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCallExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 649, rule__CallExpression__Group__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CallExpression__Group__1__Impl"


    // $ANTLR start "rule__CallExpression__Group_1__0"
    // InternalSimpleBeeLangTestLanguage.g:9124:1: rule__CallExpression__Group_1__0 : rule__CallExpression__Group_1__0__Impl rule__CallExpression__Group_1__1 ;
    public final void rule__CallExpression__Group_1__0() throws RecognitionException {
        int rule__CallExpression__Group_1__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 650) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:9128:1: ( rule__CallExpression__Group_1__0__Impl rule__CallExpression__Group_1__1 )
            // InternalSimpleBeeLangTestLanguage.g:9129:2: rule__CallExpression__Group_1__0__Impl rule__CallExpression__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_60);
            rule__CallExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__CallExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 650, rule__CallExpression__Group_1__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CallExpression__Group_1__0"


    // $ANTLR start "rule__CallExpression__Group_1__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:9136:1: rule__CallExpression__Group_1__0__Impl : ( () ) ;
    public final void rule__CallExpression__Group_1__0__Impl() throws RecognitionException {
        int rule__CallExpression__Group_1__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 651) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:9140:1: ( ( () ) )
            // InternalSimpleBeeLangTestLanguage.g:9141:1: ( () )
            {
            // InternalSimpleBeeLangTestLanguage.g:9141:1: ( () )
            // InternalSimpleBeeLangTestLanguage.g:9142:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCallExpressionAccess().getCallFunctionFuncExprAction_1_0()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:9143:2: ()
            // InternalSimpleBeeLangTestLanguage.g:9143:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCallExpressionAccess().getCallFunctionFuncExprAction_1_0()); 
            }

            }


            }

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 651, rule__CallExpression__Group_1__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CallExpression__Group_1__0__Impl"


    // $ANTLR start "rule__CallExpression__Group_1__1"
    // InternalSimpleBeeLangTestLanguage.g:9151:1: rule__CallExpression__Group_1__1 : rule__CallExpression__Group_1__1__Impl rule__CallExpression__Group_1__2 ;
    public final void rule__CallExpression__Group_1__1() throws RecognitionException {
        int rule__CallExpression__Group_1__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 652) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:9155:1: ( rule__CallExpression__Group_1__1__Impl rule__CallExpression__Group_1__2 )
            // InternalSimpleBeeLangTestLanguage.g:9156:2: rule__CallExpression__Group_1__1__Impl rule__CallExpression__Group_1__2
            {
            pushFollow(FollowSets000.FOLLOW_61);
            rule__CallExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__CallExpression__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 652, rule__CallExpression__Group_1__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CallExpression__Group_1__1"


    // $ANTLR start "rule__CallExpression__Group_1__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:9163:1: rule__CallExpression__Group_1__1__Impl : ( '(' ) ;
    public final void rule__CallExpression__Group_1__1__Impl() throws RecognitionException {
        int rule__CallExpression__Group_1__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 653) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:9167:1: ( ( '(' ) )
            // InternalSimpleBeeLangTestLanguage.g:9168:1: ( '(' )
            {
            // InternalSimpleBeeLangTestLanguage.g:9168:1: ( '(' )
            // InternalSimpleBeeLangTestLanguage.g:9169:2: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCallExpressionAccess().getLeftParenthesisKeyword_1_1()); 
            }
            match(input,60,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCallExpressionAccess().getLeftParenthesisKeyword_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 653, rule__CallExpression__Group_1__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CallExpression__Group_1__1__Impl"


    // $ANTLR start "rule__CallExpression__Group_1__2"
    // InternalSimpleBeeLangTestLanguage.g:9178:1: rule__CallExpression__Group_1__2 : rule__CallExpression__Group_1__2__Impl rule__CallExpression__Group_1__3 ;
    public final void rule__CallExpression__Group_1__2() throws RecognitionException {
        int rule__CallExpression__Group_1__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 654) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:9182:1: ( rule__CallExpression__Group_1__2__Impl rule__CallExpression__Group_1__3 )
            // InternalSimpleBeeLangTestLanguage.g:9183:2: rule__CallExpression__Group_1__2__Impl rule__CallExpression__Group_1__3
            {
            pushFollow(FollowSets000.FOLLOW_61);
            rule__CallExpression__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__CallExpression__Group_1__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 654, rule__CallExpression__Group_1__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CallExpression__Group_1__2"


    // $ANTLR start "rule__CallExpression__Group_1__2__Impl"
    // InternalSimpleBeeLangTestLanguage.g:9190:1: rule__CallExpression__Group_1__2__Impl : ( ( rule__CallExpression__ParameterListAssignment_1_2 )? ) ;
    public final void rule__CallExpression__Group_1__2__Impl() throws RecognitionException {
        int rule__CallExpression__Group_1__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 655) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:9194:1: ( ( ( rule__CallExpression__ParameterListAssignment_1_2 )? ) )
            // InternalSimpleBeeLangTestLanguage.g:9195:1: ( ( rule__CallExpression__ParameterListAssignment_1_2 )? )
            {
            // InternalSimpleBeeLangTestLanguage.g:9195:1: ( ( rule__CallExpression__ParameterListAssignment_1_2 )? )
            // InternalSimpleBeeLangTestLanguage.g:9196:2: ( rule__CallExpression__ParameterListAssignment_1_2 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCallExpressionAccess().getParameterListAssignment_1_2()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:9197:2: ( rule__CallExpression__ParameterListAssignment_1_2 )?
            int alt75=2;
            int LA75_0 = input.LA(1);

            if ( (LA75_0==RULE_STRING||LA75_0==RULE_ID||LA75_0==13||LA75_0==28||LA75_0==31||(LA75_0>=35 && LA75_0<=44)||LA75_0==60||LA75_0==63||LA75_0==69||(LA75_0>=71 && LA75_0<=72)||LA75_0==75) ) {
                alt75=1;
            }
            switch (alt75) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:9197:3: rule__CallExpression__ParameterListAssignment_1_2
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__CallExpression__ParameterListAssignment_1_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCallExpressionAccess().getParameterListAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 655, rule__CallExpression__Group_1__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CallExpression__Group_1__2__Impl"


    // $ANTLR start "rule__CallExpression__Group_1__3"
    // InternalSimpleBeeLangTestLanguage.g:9205:1: rule__CallExpression__Group_1__3 : rule__CallExpression__Group_1__3__Impl ;
    public final void rule__CallExpression__Group_1__3() throws RecognitionException {
        int rule__CallExpression__Group_1__3_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 656) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:9209:1: ( rule__CallExpression__Group_1__3__Impl )
            // InternalSimpleBeeLangTestLanguage.g:9210:2: rule__CallExpression__Group_1__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__CallExpression__Group_1__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 656, rule__CallExpression__Group_1__3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CallExpression__Group_1__3"


    // $ANTLR start "rule__CallExpression__Group_1__3__Impl"
    // InternalSimpleBeeLangTestLanguage.g:9216:1: rule__CallExpression__Group_1__3__Impl : ( ')' ) ;
    public final void rule__CallExpression__Group_1__3__Impl() throws RecognitionException {
        int rule__CallExpression__Group_1__3__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 657) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:9220:1: ( ( ')' ) )
            // InternalSimpleBeeLangTestLanguage.g:9221:1: ( ')' )
            {
            // InternalSimpleBeeLangTestLanguage.g:9221:1: ( ')' )
            // InternalSimpleBeeLangTestLanguage.g:9222:2: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCallExpressionAccess().getRightParenthesisKeyword_1_3()); 
            }
            match(input,61,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCallExpressionAccess().getRightParenthesisKeyword_1_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 657, rule__CallExpression__Group_1__3__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CallExpression__Group_1__3__Impl"


    // $ANTLR start "rule__WithExpression__Group__0"
    // InternalSimpleBeeLangTestLanguage.g:9232:1: rule__WithExpression__Group__0 : rule__WithExpression__Group__0__Impl rule__WithExpression__Group__1 ;
    public final void rule__WithExpression__Group__0() throws RecognitionException {
        int rule__WithExpression__Group__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 658) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:9236:1: ( rule__WithExpression__Group__0__Impl rule__WithExpression__Group__1 )
            // InternalSimpleBeeLangTestLanguage.g:9237:2: rule__WithExpression__Group__0__Impl rule__WithExpression__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_65);
            rule__WithExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__WithExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 658, rule__WithExpression__Group__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithExpression__Group__0"


    // $ANTLR start "rule__WithExpression__Group__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:9244:1: rule__WithExpression__Group__0__Impl : ( 'with' ) ;
    public final void rule__WithExpression__Group__0__Impl() throws RecognitionException {
        int rule__WithExpression__Group__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 659) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:9248:1: ( ( 'with' ) )
            // InternalSimpleBeeLangTestLanguage.g:9249:1: ( 'with' )
            {
            // InternalSimpleBeeLangTestLanguage.g:9249:1: ( 'with' )
            // InternalSimpleBeeLangTestLanguage.g:9250:2: 'with'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithExpressionAccess().getWithKeyword_0()); 
            }
            match(input,69,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithExpressionAccess().getWithKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 659, rule__WithExpression__Group__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithExpression__Group__0__Impl"


    // $ANTLR start "rule__WithExpression__Group__1"
    // InternalSimpleBeeLangTestLanguage.g:9259:1: rule__WithExpression__Group__1 : rule__WithExpression__Group__1__Impl rule__WithExpression__Group__2 ;
    public final void rule__WithExpression__Group__1() throws RecognitionException {
        int rule__WithExpression__Group__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 660) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:9263:1: ( rule__WithExpression__Group__1__Impl rule__WithExpression__Group__2 )
            // InternalSimpleBeeLangTestLanguage.g:9264:2: rule__WithExpression__Group__1__Impl rule__WithExpression__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_65);
            rule__WithExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__WithExpression__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 660, rule__WithExpression__Group__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithExpression__Group__1"


    // $ANTLR start "rule__WithExpression__Group__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:9271:1: rule__WithExpression__Group__1__Impl : ( ( rule__WithExpression__Group_1__0 )? ) ;
    public final void rule__WithExpression__Group__1__Impl() throws RecognitionException {
        int rule__WithExpression__Group__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 661) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:9275:1: ( ( ( rule__WithExpression__Group_1__0 )? ) )
            // InternalSimpleBeeLangTestLanguage.g:9276:1: ( ( rule__WithExpression__Group_1__0 )? )
            {
            // InternalSimpleBeeLangTestLanguage.g:9276:1: ( ( rule__WithExpression__Group_1__0 )? )
            // InternalSimpleBeeLangTestLanguage.g:9277:2: ( rule__WithExpression__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithExpressionAccess().getGroup_1()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:9278:2: ( rule__WithExpression__Group_1__0 )?
            int alt76=2;
            int LA76_0 = input.LA(1);

            if ( (LA76_0==RULE_ID) ) {
                alt76=1;
            }
            switch (alt76) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:9278:3: rule__WithExpression__Group_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__WithExpression__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 661, rule__WithExpression__Group__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithExpression__Group__1__Impl"


    // $ANTLR start "rule__WithExpression__Group__2"
    // InternalSimpleBeeLangTestLanguage.g:9286:1: rule__WithExpression__Group__2 : rule__WithExpression__Group__2__Impl ;
    public final void rule__WithExpression__Group__2() throws RecognitionException {
        int rule__WithExpression__Group__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 662) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:9290:1: ( rule__WithExpression__Group__2__Impl )
            // InternalSimpleBeeLangTestLanguage.g:9291:2: rule__WithExpression__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__WithExpression__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 662, rule__WithExpression__Group__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithExpression__Group__2"


    // $ANTLR start "rule__WithExpression__Group__2__Impl"
    // InternalSimpleBeeLangTestLanguage.g:9297:1: rule__WithExpression__Group__2__Impl : ( ( rule__WithExpression__Alternatives_2 ) ) ;
    public final void rule__WithExpression__Group__2__Impl() throws RecognitionException {
        int rule__WithExpression__Group__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 663) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:9301:1: ( ( ( rule__WithExpression__Alternatives_2 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:9302:1: ( ( rule__WithExpression__Alternatives_2 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:9302:1: ( ( rule__WithExpression__Alternatives_2 ) )
            // InternalSimpleBeeLangTestLanguage.g:9303:2: ( rule__WithExpression__Alternatives_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithExpressionAccess().getAlternatives_2()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:9304:2: ( rule__WithExpression__Alternatives_2 )
            // InternalSimpleBeeLangTestLanguage.g:9304:3: rule__WithExpression__Alternatives_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__WithExpression__Alternatives_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithExpressionAccess().getAlternatives_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 663, rule__WithExpression__Group__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithExpression__Group__2__Impl"


    // $ANTLR start "rule__WithExpression__Group_1__0"
    // InternalSimpleBeeLangTestLanguage.g:9313:1: rule__WithExpression__Group_1__0 : rule__WithExpression__Group_1__0__Impl rule__WithExpression__Group_1__1 ;
    public final void rule__WithExpression__Group_1__0() throws RecognitionException {
        int rule__WithExpression__Group_1__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 664) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:9317:1: ( rule__WithExpression__Group_1__0__Impl rule__WithExpression__Group_1__1 )
            // InternalSimpleBeeLangTestLanguage.g:9318:2: rule__WithExpression__Group_1__0__Impl rule__WithExpression__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_10);
            rule__WithExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__WithExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 664, rule__WithExpression__Group_1__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithExpression__Group_1__0"


    // $ANTLR start "rule__WithExpression__Group_1__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:9325:1: rule__WithExpression__Group_1__0__Impl : ( ( rule__WithExpression__ReferencedAdviceAssignment_1_0 ) ) ;
    public final void rule__WithExpression__Group_1__0__Impl() throws RecognitionException {
        int rule__WithExpression__Group_1__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 665) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:9329:1: ( ( ( rule__WithExpression__ReferencedAdviceAssignment_1_0 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:9330:1: ( ( rule__WithExpression__ReferencedAdviceAssignment_1_0 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:9330:1: ( ( rule__WithExpression__ReferencedAdviceAssignment_1_0 ) )
            // InternalSimpleBeeLangTestLanguage.g:9331:2: ( rule__WithExpression__ReferencedAdviceAssignment_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithExpressionAccess().getReferencedAdviceAssignment_1_0()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:9332:2: ( rule__WithExpression__ReferencedAdviceAssignment_1_0 )
            // InternalSimpleBeeLangTestLanguage.g:9332:3: rule__WithExpression__ReferencedAdviceAssignment_1_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__WithExpression__ReferencedAdviceAssignment_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithExpressionAccess().getReferencedAdviceAssignment_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 665, rule__WithExpression__Group_1__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithExpression__Group_1__0__Impl"


    // $ANTLR start "rule__WithExpression__Group_1__1"
    // InternalSimpleBeeLangTestLanguage.g:9340:1: rule__WithExpression__Group_1__1 : rule__WithExpression__Group_1__1__Impl ;
    public final void rule__WithExpression__Group_1__1() throws RecognitionException {
        int rule__WithExpression__Group_1__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 666) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:9344:1: ( rule__WithExpression__Group_1__1__Impl )
            // InternalSimpleBeeLangTestLanguage.g:9345:2: rule__WithExpression__Group_1__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__WithExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 666, rule__WithExpression__Group_1__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithExpression__Group_1__1"


    // $ANTLR start "rule__WithExpression__Group_1__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:9351:1: rule__WithExpression__Group_1__1__Impl : ( ( rule__WithExpression__Group_1_1__0 )* ) ;
    public final void rule__WithExpression__Group_1__1__Impl() throws RecognitionException {
        int rule__WithExpression__Group_1__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 667) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:9355:1: ( ( ( rule__WithExpression__Group_1_1__0 )* ) )
            // InternalSimpleBeeLangTestLanguage.g:9356:1: ( ( rule__WithExpression__Group_1_1__0 )* )
            {
            // InternalSimpleBeeLangTestLanguage.g:9356:1: ( ( rule__WithExpression__Group_1_1__0 )* )
            // InternalSimpleBeeLangTestLanguage.g:9357:2: ( rule__WithExpression__Group_1_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithExpressionAccess().getGroup_1_1()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:9358:2: ( rule__WithExpression__Group_1_1__0 )*
            loop77:
            do {
                int alt77=2;
                int LA77_0 = input.LA(1);

                if ( (LA77_0==48) ) {
                    alt77=1;
                }


                switch (alt77) {
            	case 1 :
            	    // InternalSimpleBeeLangTestLanguage.g:9358:3: rule__WithExpression__Group_1_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_11);
            	    rule__WithExpression__Group_1_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop77;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithExpressionAccess().getGroup_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 667, rule__WithExpression__Group_1__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithExpression__Group_1__1__Impl"


    // $ANTLR start "rule__WithExpression__Group_1_1__0"
    // InternalSimpleBeeLangTestLanguage.g:9367:1: rule__WithExpression__Group_1_1__0 : rule__WithExpression__Group_1_1__0__Impl rule__WithExpression__Group_1_1__1 ;
    public final void rule__WithExpression__Group_1_1__0() throws RecognitionException {
        int rule__WithExpression__Group_1_1__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 668) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:9371:1: ( rule__WithExpression__Group_1_1__0__Impl rule__WithExpression__Group_1_1__1 )
            // InternalSimpleBeeLangTestLanguage.g:9372:2: rule__WithExpression__Group_1_1__0__Impl rule__WithExpression__Group_1_1__1
            {
            pushFollow(FollowSets000.FOLLOW_9);
            rule__WithExpression__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__WithExpression__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 668, rule__WithExpression__Group_1_1__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithExpression__Group_1_1__0"


    // $ANTLR start "rule__WithExpression__Group_1_1__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:9379:1: rule__WithExpression__Group_1_1__0__Impl : ( ',' ) ;
    public final void rule__WithExpression__Group_1_1__0__Impl() throws RecognitionException {
        int rule__WithExpression__Group_1_1__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 669) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:9383:1: ( ( ',' ) )
            // InternalSimpleBeeLangTestLanguage.g:9384:1: ( ',' )
            {
            // InternalSimpleBeeLangTestLanguage.g:9384:1: ( ',' )
            // InternalSimpleBeeLangTestLanguage.g:9385:2: ','
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithExpressionAccess().getCommaKeyword_1_1_0()); 
            }
            match(input,48,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithExpressionAccess().getCommaKeyword_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 669, rule__WithExpression__Group_1_1__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithExpression__Group_1_1__0__Impl"


    // $ANTLR start "rule__WithExpression__Group_1_1__1"
    // InternalSimpleBeeLangTestLanguage.g:9394:1: rule__WithExpression__Group_1_1__1 : rule__WithExpression__Group_1_1__1__Impl ;
    public final void rule__WithExpression__Group_1_1__1() throws RecognitionException {
        int rule__WithExpression__Group_1_1__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 670) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:9398:1: ( rule__WithExpression__Group_1_1__1__Impl )
            // InternalSimpleBeeLangTestLanguage.g:9399:2: rule__WithExpression__Group_1_1__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__WithExpression__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 670, rule__WithExpression__Group_1_1__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithExpression__Group_1_1__1"


    // $ANTLR start "rule__WithExpression__Group_1_1__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:9405:1: rule__WithExpression__Group_1_1__1__Impl : ( ( rule__WithExpression__ReferencedAdviceAssignment_1_1_1 ) ) ;
    public final void rule__WithExpression__Group_1_1__1__Impl() throws RecognitionException {
        int rule__WithExpression__Group_1_1__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 671) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:9409:1: ( ( ( rule__WithExpression__ReferencedAdviceAssignment_1_1_1 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:9410:1: ( ( rule__WithExpression__ReferencedAdviceAssignment_1_1_1 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:9410:1: ( ( rule__WithExpression__ReferencedAdviceAssignment_1_1_1 ) )
            // InternalSimpleBeeLangTestLanguage.g:9411:2: ( rule__WithExpression__ReferencedAdviceAssignment_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithExpressionAccess().getReferencedAdviceAssignment_1_1_1()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:9412:2: ( rule__WithExpression__ReferencedAdviceAssignment_1_1_1 )
            // InternalSimpleBeeLangTestLanguage.g:9412:3: rule__WithExpression__ReferencedAdviceAssignment_1_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__WithExpression__ReferencedAdviceAssignment_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithExpressionAccess().getReferencedAdviceAssignment_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 671, rule__WithExpression__Group_1_1__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithExpression__Group_1_1__1__Impl"


    // $ANTLR start "rule__WithExpression__Group_2_0__0"
    // InternalSimpleBeeLangTestLanguage.g:9421:1: rule__WithExpression__Group_2_0__0 : rule__WithExpression__Group_2_0__0__Impl rule__WithExpression__Group_2_0__1 ;
    public final void rule__WithExpression__Group_2_0__0() throws RecognitionException {
        int rule__WithExpression__Group_2_0__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 672) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:9425:1: ( rule__WithExpression__Group_2_0__0__Impl rule__WithExpression__Group_2_0__1 )
            // InternalSimpleBeeLangTestLanguage.g:9426:2: rule__WithExpression__Group_2_0__0__Impl rule__WithExpression__Group_2_0__1
            {
            pushFollow(FollowSets000.FOLLOW_19);
            rule__WithExpression__Group_2_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__WithExpression__Group_2_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 672, rule__WithExpression__Group_2_0__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithExpression__Group_2_0__0"


    // $ANTLR start "rule__WithExpression__Group_2_0__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:9433:1: rule__WithExpression__Group_2_0__0__Impl : ( ':' ) ;
    public final void rule__WithExpression__Group_2_0__0__Impl() throws RecognitionException {
        int rule__WithExpression__Group_2_0__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 673) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:9437:1: ( ( ':' ) )
            // InternalSimpleBeeLangTestLanguage.g:9438:1: ( ':' )
            {
            // InternalSimpleBeeLangTestLanguage.g:9438:1: ( ':' )
            // InternalSimpleBeeLangTestLanguage.g:9439:2: ':'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithExpressionAccess().getColonKeyword_2_0_0()); 
            }
            match(input,49,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithExpressionAccess().getColonKeyword_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 673, rule__WithExpression__Group_2_0__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithExpression__Group_2_0__0__Impl"


    // $ANTLR start "rule__WithExpression__Group_2_0__1"
    // InternalSimpleBeeLangTestLanguage.g:9448:1: rule__WithExpression__Group_2_0__1 : rule__WithExpression__Group_2_0__1__Impl ;
    public final void rule__WithExpression__Group_2_0__1() throws RecognitionException {
        int rule__WithExpression__Group_2_0__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 674) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:9452:1: ( rule__WithExpression__Group_2_0__1__Impl )
            // InternalSimpleBeeLangTestLanguage.g:9453:2: rule__WithExpression__Group_2_0__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__WithExpression__Group_2_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 674, rule__WithExpression__Group_2_0__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithExpression__Group_2_0__1"


    // $ANTLR start "rule__WithExpression__Group_2_0__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:9459:1: rule__WithExpression__Group_2_0__1__Impl : ( ( rule__WithExpression__FuncExprAssignment_2_0_1 ) ) ;
    public final void rule__WithExpression__Group_2_0__1__Impl() throws RecognitionException {
        int rule__WithExpression__Group_2_0__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 675) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:9463:1: ( ( ( rule__WithExpression__FuncExprAssignment_2_0_1 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:9464:1: ( ( rule__WithExpression__FuncExprAssignment_2_0_1 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:9464:1: ( ( rule__WithExpression__FuncExprAssignment_2_0_1 ) )
            // InternalSimpleBeeLangTestLanguage.g:9465:2: ( rule__WithExpression__FuncExprAssignment_2_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithExpressionAccess().getFuncExprAssignment_2_0_1()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:9466:2: ( rule__WithExpression__FuncExprAssignment_2_0_1 )
            // InternalSimpleBeeLangTestLanguage.g:9466:3: rule__WithExpression__FuncExprAssignment_2_0_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__WithExpression__FuncExprAssignment_2_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithExpressionAccess().getFuncExprAssignment_2_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 675, rule__WithExpression__Group_2_0__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithExpression__Group_2_0__1__Impl"


    // $ANTLR start "rule__WithExpression__Group_2_1__0"
    // InternalSimpleBeeLangTestLanguage.g:9475:1: rule__WithExpression__Group_2_1__0 : rule__WithExpression__Group_2_1__0__Impl rule__WithExpression__Group_2_1__1 ;
    public final void rule__WithExpression__Group_2_1__0() throws RecognitionException {
        int rule__WithExpression__Group_2_1__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 676) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:9479:1: ( rule__WithExpression__Group_2_1__0__Impl rule__WithExpression__Group_2_1__1 )
            // InternalSimpleBeeLangTestLanguage.g:9480:2: rule__WithExpression__Group_2_1__0__Impl rule__WithExpression__Group_2_1__1
            {
            pushFollow(FollowSets000.FOLLOW_66);
            rule__WithExpression__Group_2_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__WithExpression__Group_2_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 676, rule__WithExpression__Group_2_1__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithExpression__Group_2_1__0"


    // $ANTLR start "rule__WithExpression__Group_2_1__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:9487:1: rule__WithExpression__Group_2_1__0__Impl : ( '{' ) ;
    public final void rule__WithExpression__Group_2_1__0__Impl() throws RecognitionException {
        int rule__WithExpression__Group_2_1__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 677) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:9491:1: ( ( '{' ) )
            // InternalSimpleBeeLangTestLanguage.g:9492:1: ( '{' )
            {
            // InternalSimpleBeeLangTestLanguage.g:9492:1: ( '{' )
            // InternalSimpleBeeLangTestLanguage.g:9493:2: '{'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithExpressionAccess().getLeftCurlyBracketKeyword_2_1_0()); 
            }
            match(input,44,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithExpressionAccess().getLeftCurlyBracketKeyword_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 677, rule__WithExpression__Group_2_1__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithExpression__Group_2_1__0__Impl"


    // $ANTLR start "rule__WithExpression__Group_2_1__1"
    // InternalSimpleBeeLangTestLanguage.g:9502:1: rule__WithExpression__Group_2_1__1 : rule__WithExpression__Group_2_1__1__Impl rule__WithExpression__Group_2_1__2 ;
    public final void rule__WithExpression__Group_2_1__1() throws RecognitionException {
        int rule__WithExpression__Group_2_1__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 678) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:9506:1: ( rule__WithExpression__Group_2_1__1__Impl rule__WithExpression__Group_2_1__2 )
            // InternalSimpleBeeLangTestLanguage.g:9507:2: rule__WithExpression__Group_2_1__1__Impl rule__WithExpression__Group_2_1__2
            {
            pushFollow(FollowSets000.FOLLOW_8);
            rule__WithExpression__Group_2_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__WithExpression__Group_2_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 678, rule__WithExpression__Group_2_1__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithExpression__Group_2_1__1"


    // $ANTLR start "rule__WithExpression__Group_2_1__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:9514:1: rule__WithExpression__Group_2_1__1__Impl : ( ( rule__WithExpression__FuncExprAssignment_2_1_1 ) ) ;
    public final void rule__WithExpression__Group_2_1__1__Impl() throws RecognitionException {
        int rule__WithExpression__Group_2_1__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 679) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:9518:1: ( ( ( rule__WithExpression__FuncExprAssignment_2_1_1 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:9519:1: ( ( rule__WithExpression__FuncExprAssignment_2_1_1 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:9519:1: ( ( rule__WithExpression__FuncExprAssignment_2_1_1 ) )
            // InternalSimpleBeeLangTestLanguage.g:9520:2: ( rule__WithExpression__FuncExprAssignment_2_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithExpressionAccess().getFuncExprAssignment_2_1_1()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:9521:2: ( rule__WithExpression__FuncExprAssignment_2_1_1 )
            // InternalSimpleBeeLangTestLanguage.g:9521:3: rule__WithExpression__FuncExprAssignment_2_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__WithExpression__FuncExprAssignment_2_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithExpressionAccess().getFuncExprAssignment_2_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 679, rule__WithExpression__Group_2_1__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithExpression__Group_2_1__1__Impl"


    // $ANTLR start "rule__WithExpression__Group_2_1__2"
    // InternalSimpleBeeLangTestLanguage.g:9529:1: rule__WithExpression__Group_2_1__2 : rule__WithExpression__Group_2_1__2__Impl ;
    public final void rule__WithExpression__Group_2_1__2() throws RecognitionException {
        int rule__WithExpression__Group_2_1__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 680) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:9533:1: ( rule__WithExpression__Group_2_1__2__Impl )
            // InternalSimpleBeeLangTestLanguage.g:9534:2: rule__WithExpression__Group_2_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__WithExpression__Group_2_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 680, rule__WithExpression__Group_2_1__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithExpression__Group_2_1__2"


    // $ANTLR start "rule__WithExpression__Group_2_1__2__Impl"
    // InternalSimpleBeeLangTestLanguage.g:9540:1: rule__WithExpression__Group_2_1__2__Impl : ( '}' ) ;
    public final void rule__WithExpression__Group_2_1__2__Impl() throws RecognitionException {
        int rule__WithExpression__Group_2_1__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 681) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:9544:1: ( ( '}' ) )
            // InternalSimpleBeeLangTestLanguage.g:9545:1: ( '}' )
            {
            // InternalSimpleBeeLangTestLanguage.g:9545:1: ( '}' )
            // InternalSimpleBeeLangTestLanguage.g:9546:2: '}'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithExpressionAccess().getRightCurlyBracketKeyword_2_1_2()); 
            }
            match(input,45,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithExpressionAccess().getRightCurlyBracketKeyword_2_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 681, rule__WithExpression__Group_2_1__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithExpression__Group_2_1__2__Impl"


    // $ANTLR start "rule__WithContextExpression__Group__0"
    // InternalSimpleBeeLangTestLanguage.g:9556:1: rule__WithContextExpression__Group__0 : rule__WithContextExpression__Group__0__Impl rule__WithContextExpression__Group__1 ;
    public final void rule__WithContextExpression__Group__0() throws RecognitionException {
        int rule__WithContextExpression__Group__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 682) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:9560:1: ( rule__WithContextExpression__Group__0__Impl rule__WithContextExpression__Group__1 )
            // InternalSimpleBeeLangTestLanguage.g:9561:2: rule__WithContextExpression__Group__0__Impl rule__WithContextExpression__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_67);
            rule__WithContextExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__WithContextExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 682, rule__WithContextExpression__Group__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithContextExpression__Group__0"


    // $ANTLR start "rule__WithContextExpression__Group__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:9568:1: rule__WithContextExpression__Group__0__Impl : ( 'with' ) ;
    public final void rule__WithContextExpression__Group__0__Impl() throws RecognitionException {
        int rule__WithContextExpression__Group__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 683) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:9572:1: ( ( 'with' ) )
            // InternalSimpleBeeLangTestLanguage.g:9573:1: ( 'with' )
            {
            // InternalSimpleBeeLangTestLanguage.g:9573:1: ( 'with' )
            // InternalSimpleBeeLangTestLanguage.g:9574:2: 'with'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithContextExpressionAccess().getWithKeyword_0()); 
            }
            match(input,69,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithContextExpressionAccess().getWithKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 683, rule__WithContextExpression__Group__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithContextExpression__Group__0__Impl"


    // $ANTLR start "rule__WithContextExpression__Group__1"
    // InternalSimpleBeeLangTestLanguage.g:9583:1: rule__WithContextExpression__Group__1 : rule__WithContextExpression__Group__1__Impl rule__WithContextExpression__Group__2 ;
    public final void rule__WithContextExpression__Group__1() throws RecognitionException {
        int rule__WithContextExpression__Group__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 684) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:9587:1: ( rule__WithContextExpression__Group__1__Impl rule__WithContextExpression__Group__2 )
            // InternalSimpleBeeLangTestLanguage.g:9588:2: rule__WithContextExpression__Group__1__Impl rule__WithContextExpression__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_19);
            rule__WithContextExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__WithContextExpression__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 684, rule__WithContextExpression__Group__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithContextExpression__Group__1"


    // $ANTLR start "rule__WithContextExpression__Group__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:9595:1: rule__WithContextExpression__Group__1__Impl : ( 'context' ) ;
    public final void rule__WithContextExpression__Group__1__Impl() throws RecognitionException {
        int rule__WithContextExpression__Group__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 685) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:9599:1: ( ( 'context' ) )
            // InternalSimpleBeeLangTestLanguage.g:9600:1: ( 'context' )
            {
            // InternalSimpleBeeLangTestLanguage.g:9600:1: ( 'context' )
            // InternalSimpleBeeLangTestLanguage.g:9601:2: 'context'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithContextExpressionAccess().getContextKeyword_1()); 
            }
            match(input,70,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithContextExpressionAccess().getContextKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 685, rule__WithContextExpression__Group__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithContextExpression__Group__1__Impl"


    // $ANTLR start "rule__WithContextExpression__Group__2"
    // InternalSimpleBeeLangTestLanguage.g:9610:1: rule__WithContextExpression__Group__2 : rule__WithContextExpression__Group__2__Impl rule__WithContextExpression__Group__3 ;
    public final void rule__WithContextExpression__Group__2() throws RecognitionException {
        int rule__WithContextExpression__Group__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 686) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:9614:1: ( rule__WithContextExpression__Group__2__Impl rule__WithContextExpression__Group__3 )
            // InternalSimpleBeeLangTestLanguage.g:9615:2: rule__WithContextExpression__Group__2__Impl rule__WithContextExpression__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_20);
            rule__WithContextExpression__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__WithContextExpression__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 686, rule__WithContextExpression__Group__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithContextExpression__Group__2"


    // $ANTLR start "rule__WithContextExpression__Group__2__Impl"
    // InternalSimpleBeeLangTestLanguage.g:9622:1: rule__WithContextExpression__Group__2__Impl : ( ( rule__WithContextExpression__ExprAssignment_2 ) ) ;
    public final void rule__WithContextExpression__Group__2__Impl() throws RecognitionException {
        int rule__WithContextExpression__Group__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 687) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:9626:1: ( ( ( rule__WithContextExpression__ExprAssignment_2 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:9627:1: ( ( rule__WithContextExpression__ExprAssignment_2 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:9627:1: ( ( rule__WithContextExpression__ExprAssignment_2 ) )
            // InternalSimpleBeeLangTestLanguage.g:9628:2: ( rule__WithContextExpression__ExprAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithContextExpressionAccess().getExprAssignment_2()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:9629:2: ( rule__WithContextExpression__ExprAssignment_2 )
            // InternalSimpleBeeLangTestLanguage.g:9629:3: rule__WithContextExpression__ExprAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__WithContextExpression__ExprAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithContextExpressionAccess().getExprAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 687, rule__WithContextExpression__Group__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithContextExpression__Group__2__Impl"


    // $ANTLR start "rule__WithContextExpression__Group__3"
    // InternalSimpleBeeLangTestLanguage.g:9637:1: rule__WithContextExpression__Group__3 : rule__WithContextExpression__Group__3__Impl rule__WithContextExpression__Group__4 ;
    public final void rule__WithContextExpression__Group__3() throws RecognitionException {
        int rule__WithContextExpression__Group__3_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 688) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:9641:1: ( rule__WithContextExpression__Group__3__Impl rule__WithContextExpression__Group__4 )
            // InternalSimpleBeeLangTestLanguage.g:9642:2: rule__WithContextExpression__Group__3__Impl rule__WithContextExpression__Group__4
            {
            pushFollow(FollowSets000.FOLLOW_20);
            rule__WithContextExpression__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__WithContextExpression__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 688, rule__WithContextExpression__Group__3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithContextExpression__Group__3"


    // $ANTLR start "rule__WithContextExpression__Group__3__Impl"
    // InternalSimpleBeeLangTestLanguage.g:9649:1: rule__WithContextExpression__Group__3__Impl : ( ( rule__WithContextExpression__Group_3__0 )? ) ;
    public final void rule__WithContextExpression__Group__3__Impl() throws RecognitionException {
        int rule__WithContextExpression__Group__3__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 689) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:9653:1: ( ( ( rule__WithContextExpression__Group_3__0 )? ) )
            // InternalSimpleBeeLangTestLanguage.g:9654:1: ( ( rule__WithContextExpression__Group_3__0 )? )
            {
            // InternalSimpleBeeLangTestLanguage.g:9654:1: ( ( rule__WithContextExpression__Group_3__0 )? )
            // InternalSimpleBeeLangTestLanguage.g:9655:2: ( rule__WithContextExpression__Group_3__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithContextExpressionAccess().getGroup_3()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:9656:2: ( rule__WithContextExpression__Group_3__0 )?
            int alt78=2;
            int LA78_0 = input.LA(1);

            if ( (LA78_0==56) ) {
                alt78=1;
            }
            switch (alt78) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:9656:3: rule__WithContextExpression__Group_3__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__WithContextExpression__Group_3__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithContextExpressionAccess().getGroup_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 689, rule__WithContextExpression__Group__3__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithContextExpression__Group__3__Impl"


    // $ANTLR start "rule__WithContextExpression__Group__4"
    // InternalSimpleBeeLangTestLanguage.g:9664:1: rule__WithContextExpression__Group__4 : rule__WithContextExpression__Group__4__Impl ;
    public final void rule__WithContextExpression__Group__4() throws RecognitionException {
        int rule__WithContextExpression__Group__4_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 690) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:9668:1: ( rule__WithContextExpression__Group__4__Impl )
            // InternalSimpleBeeLangTestLanguage.g:9669:2: rule__WithContextExpression__Group__4__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__WithContextExpression__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 690, rule__WithContextExpression__Group__4_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithContextExpression__Group__4"


    // $ANTLR start "rule__WithContextExpression__Group__4__Impl"
    // InternalSimpleBeeLangTestLanguage.g:9675:1: rule__WithContextExpression__Group__4__Impl : ( ( rule__WithContextExpression__ContextBlockAssignment_4 ) ) ;
    public final void rule__WithContextExpression__Group__4__Impl() throws RecognitionException {
        int rule__WithContextExpression__Group__4__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 691) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:9679:1: ( ( ( rule__WithContextExpression__ContextBlockAssignment_4 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:9680:1: ( ( rule__WithContextExpression__ContextBlockAssignment_4 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:9680:1: ( ( rule__WithContextExpression__ContextBlockAssignment_4 ) )
            // InternalSimpleBeeLangTestLanguage.g:9681:2: ( rule__WithContextExpression__ContextBlockAssignment_4 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithContextExpressionAccess().getContextBlockAssignment_4()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:9682:2: ( rule__WithContextExpression__ContextBlockAssignment_4 )
            // InternalSimpleBeeLangTestLanguage.g:9682:3: rule__WithContextExpression__ContextBlockAssignment_4
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__WithContextExpression__ContextBlockAssignment_4();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithContextExpressionAccess().getContextBlockAssignment_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 691, rule__WithContextExpression__Group__4__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithContextExpression__Group__4__Impl"


    // $ANTLR start "rule__WithContextExpression__Group_3__0"
    // InternalSimpleBeeLangTestLanguage.g:9691:1: rule__WithContextExpression__Group_3__0 : rule__WithContextExpression__Group_3__0__Impl rule__WithContextExpression__Group_3__1 ;
    public final void rule__WithContextExpression__Group_3__0() throws RecognitionException {
        int rule__WithContextExpression__Group_3__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 692) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:9695:1: ( rule__WithContextExpression__Group_3__0__Impl rule__WithContextExpression__Group_3__1 )
            // InternalSimpleBeeLangTestLanguage.g:9696:2: rule__WithContextExpression__Group_3__0__Impl rule__WithContextExpression__Group_3__1
            {
            pushFollow(FollowSets000.FOLLOW_9);
            rule__WithContextExpression__Group_3__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__WithContextExpression__Group_3__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 692, rule__WithContextExpression__Group_3__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithContextExpression__Group_3__0"


    // $ANTLR start "rule__WithContextExpression__Group_3__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:9703:1: rule__WithContextExpression__Group_3__0__Impl : ( 'as' ) ;
    public final void rule__WithContextExpression__Group_3__0__Impl() throws RecognitionException {
        int rule__WithContextExpression__Group_3__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 693) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:9707:1: ( ( 'as' ) )
            // InternalSimpleBeeLangTestLanguage.g:9708:1: ( 'as' )
            {
            // InternalSimpleBeeLangTestLanguage.g:9708:1: ( 'as' )
            // InternalSimpleBeeLangTestLanguage.g:9709:2: 'as'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithContextExpressionAccess().getAsKeyword_3_0()); 
            }
            match(input,56,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithContextExpressionAccess().getAsKeyword_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 693, rule__WithContextExpression__Group_3__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithContextExpression__Group_3__0__Impl"


    // $ANTLR start "rule__WithContextExpression__Group_3__1"
    // InternalSimpleBeeLangTestLanguage.g:9718:1: rule__WithContextExpression__Group_3__1 : rule__WithContextExpression__Group_3__1__Impl ;
    public final void rule__WithContextExpression__Group_3__1() throws RecognitionException {
        int rule__WithContextExpression__Group_3__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 694) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:9722:1: ( rule__WithContextExpression__Group_3__1__Impl )
            // InternalSimpleBeeLangTestLanguage.g:9723:2: rule__WithContextExpression__Group_3__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__WithContextExpression__Group_3__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 694, rule__WithContextExpression__Group_3__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithContextExpression__Group_3__1"


    // $ANTLR start "rule__WithContextExpression__Group_3__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:9729:1: rule__WithContextExpression__Group_3__1__Impl : ( ( rule__WithContextExpression__AliasAssignment_3_1 ) ) ;
    public final void rule__WithContextExpression__Group_3__1__Impl() throws RecognitionException {
        int rule__WithContextExpression__Group_3__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 695) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:9733:1: ( ( ( rule__WithContextExpression__AliasAssignment_3_1 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:9734:1: ( ( rule__WithContextExpression__AliasAssignment_3_1 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:9734:1: ( ( rule__WithContextExpression__AliasAssignment_3_1 ) )
            // InternalSimpleBeeLangTestLanguage.g:9735:2: ( rule__WithContextExpression__AliasAssignment_3_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithContextExpressionAccess().getAliasAssignment_3_1()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:9736:2: ( rule__WithContextExpression__AliasAssignment_3_1 )
            // InternalSimpleBeeLangTestLanguage.g:9736:3: rule__WithContextExpression__AliasAssignment_3_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__WithContextExpression__AliasAssignment_3_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithContextExpressionAccess().getAliasAssignment_3_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 695, rule__WithContextExpression__Group_3__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithContextExpression__Group_3__1__Impl"


    // $ANTLR start "rule__BlockExpression__Group__0"
    // InternalSimpleBeeLangTestLanguage.g:9745:1: rule__BlockExpression__Group__0 : rule__BlockExpression__Group__0__Impl rule__BlockExpression__Group__1 ;
    public final void rule__BlockExpression__Group__0() throws RecognitionException {
        int rule__BlockExpression__Group__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 696) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:9749:1: ( rule__BlockExpression__Group__0__Impl rule__BlockExpression__Group__1 )
            // InternalSimpleBeeLangTestLanguage.g:9750:2: rule__BlockExpression__Group__0__Impl rule__BlockExpression__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_17);
            rule__BlockExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BlockExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 696, rule__BlockExpression__Group__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BlockExpression__Group__0"


    // $ANTLR start "rule__BlockExpression__Group__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:9757:1: rule__BlockExpression__Group__0__Impl : ( () ) ;
    public final void rule__BlockExpression__Group__0__Impl() throws RecognitionException {
        int rule__BlockExpression__Group__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 697) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:9761:1: ( ( () ) )
            // InternalSimpleBeeLangTestLanguage.g:9762:1: ( () )
            {
            // InternalSimpleBeeLangTestLanguage.g:9762:1: ( () )
            // InternalSimpleBeeLangTestLanguage.g:9763:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBlockExpressionAccess().getChainedExpressionAction_0()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:9764:2: ()
            // InternalSimpleBeeLangTestLanguage.g:9764:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBlockExpressionAccess().getChainedExpressionAction_0()); 
            }

            }


            }

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 697, rule__BlockExpression__Group__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BlockExpression__Group__0__Impl"


    // $ANTLR start "rule__BlockExpression__Group__1"
    // InternalSimpleBeeLangTestLanguage.g:9772:1: rule__BlockExpression__Group__1 : rule__BlockExpression__Group__1__Impl rule__BlockExpression__Group__2 ;
    public final void rule__BlockExpression__Group__1() throws RecognitionException {
        int rule__BlockExpression__Group__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 698) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:9776:1: ( rule__BlockExpression__Group__1__Impl rule__BlockExpression__Group__2 )
            // InternalSimpleBeeLangTestLanguage.g:9777:2: rule__BlockExpression__Group__1__Impl rule__BlockExpression__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_68);
            rule__BlockExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BlockExpression__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 698, rule__BlockExpression__Group__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BlockExpression__Group__1"


    // $ANTLR start "rule__BlockExpression__Group__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:9784:1: rule__BlockExpression__Group__1__Impl : ( '{' ) ;
    public final void rule__BlockExpression__Group__1__Impl() throws RecognitionException {
        int rule__BlockExpression__Group__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 699) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:9788:1: ( ( '{' ) )
            // InternalSimpleBeeLangTestLanguage.g:9789:1: ( '{' )
            {
            // InternalSimpleBeeLangTestLanguage.g:9789:1: ( '{' )
            // InternalSimpleBeeLangTestLanguage.g:9790:2: '{'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBlockExpressionAccess().getLeftCurlyBracketKeyword_1()); 
            }
            match(input,44,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBlockExpressionAccess().getLeftCurlyBracketKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 699, rule__BlockExpression__Group__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BlockExpression__Group__1__Impl"


    // $ANTLR start "rule__BlockExpression__Group__2"
    // InternalSimpleBeeLangTestLanguage.g:9799:1: rule__BlockExpression__Group__2 : rule__BlockExpression__Group__2__Impl rule__BlockExpression__Group__3 ;
    public final void rule__BlockExpression__Group__2() throws RecognitionException {
        int rule__BlockExpression__Group__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 700) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:9803:1: ( rule__BlockExpression__Group__2__Impl rule__BlockExpression__Group__3 )
            // InternalSimpleBeeLangTestLanguage.g:9804:2: rule__BlockExpression__Group__2__Impl rule__BlockExpression__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_68);
            rule__BlockExpression__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BlockExpression__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 700, rule__BlockExpression__Group__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BlockExpression__Group__2"

}

@SuppressWarnings("all")
abstract class InternalSimpleBeeLangTestLanguageParser9 extends InternalSimpleBeeLangTestLanguageParser8 {

        InternalSimpleBeeLangTestLanguageParser9(TokenStream input) {
            this(input, new RecognizerSharedState());
        }

        InternalSimpleBeeLangTestLanguageParser9(TokenStream input, RecognizerSharedState state) {
            super(input, state);
        }

    // $ANTLR start "rule__BlockExpression__Group__2__Impl"
    // InternalSimpleBeeLangTestLanguage.g:9811:1: rule__BlockExpression__Group__2__Impl : ( ( rule__BlockExpression__Group_2__0 )* ) ;
    public final void rule__BlockExpression__Group__2__Impl() throws RecognitionException {
        int rule__BlockExpression__Group__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 701) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:9815:1: ( ( ( rule__BlockExpression__Group_2__0 )* ) )
            // InternalSimpleBeeLangTestLanguage.g:9816:1: ( ( rule__BlockExpression__Group_2__0 )* )
            {
            // InternalSimpleBeeLangTestLanguage.g:9816:1: ( ( rule__BlockExpression__Group_2__0 )* )
            // InternalSimpleBeeLangTestLanguage.g:9817:2: ( rule__BlockExpression__Group_2__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBlockExpressionAccess().getGroup_2()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:9818:2: ( rule__BlockExpression__Group_2__0 )*
            loop79:
            do {
                int alt79=2;
                int LA79_0 = input.LA(1);

                if ( (LA79_0==RULE_STRING||LA79_0==RULE_ID||LA79_0==13||LA79_0==29||LA79_0==31||(LA79_0>=35 && LA79_0<=44)||LA79_0==60||LA79_0==63||LA79_0==69||LA79_0==71||LA79_0==74||LA79_0==76) ) {
                    alt79=1;
                }


                switch (alt79) {
            	case 1 :
            	    // InternalSimpleBeeLangTestLanguage.g:9818:3: rule__BlockExpression__Group_2__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_69);
            	    rule__BlockExpression__Group_2__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop79;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBlockExpressionAccess().getGroup_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 701, rule__BlockExpression__Group__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BlockExpression__Group__2__Impl"


    // $ANTLR start "rule__BlockExpression__Group__3"
    // InternalSimpleBeeLangTestLanguage.g:9826:1: rule__BlockExpression__Group__3 : rule__BlockExpression__Group__3__Impl ;
    public final void rule__BlockExpression__Group__3() throws RecognitionException {
        int rule__BlockExpression__Group__3_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 702) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:9830:1: ( rule__BlockExpression__Group__3__Impl )
            // InternalSimpleBeeLangTestLanguage.g:9831:2: rule__BlockExpression__Group__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BlockExpression__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 702, rule__BlockExpression__Group__3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BlockExpression__Group__3"


    // $ANTLR start "rule__BlockExpression__Group__3__Impl"
    // InternalSimpleBeeLangTestLanguage.g:9837:1: rule__BlockExpression__Group__3__Impl : ( '}' ) ;
    public final void rule__BlockExpression__Group__3__Impl() throws RecognitionException {
        int rule__BlockExpression__Group__3__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 703) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:9841:1: ( ( '}' ) )
            // InternalSimpleBeeLangTestLanguage.g:9842:1: ( '}' )
            {
            // InternalSimpleBeeLangTestLanguage.g:9842:1: ( '}' )
            // InternalSimpleBeeLangTestLanguage.g:9843:2: '}'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBlockExpressionAccess().getRightCurlyBracketKeyword_3()); 
            }
            match(input,45,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBlockExpressionAccess().getRightCurlyBracketKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 703, rule__BlockExpression__Group__3__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BlockExpression__Group__3__Impl"


    // $ANTLR start "rule__BlockExpression__Group_2__0"
    // InternalSimpleBeeLangTestLanguage.g:9853:1: rule__BlockExpression__Group_2__0 : rule__BlockExpression__Group_2__0__Impl rule__BlockExpression__Group_2__1 ;
    public final void rule__BlockExpression__Group_2__0() throws RecognitionException {
        int rule__BlockExpression__Group_2__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 704) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:9857:1: ( rule__BlockExpression__Group_2__0__Impl rule__BlockExpression__Group_2__1 )
            // InternalSimpleBeeLangTestLanguage.g:9858:2: rule__BlockExpression__Group_2__0__Impl rule__BlockExpression__Group_2__1
            {
            pushFollow(FollowSets000.FOLLOW_14);
            rule__BlockExpression__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BlockExpression__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 704, rule__BlockExpression__Group_2__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BlockExpression__Group_2__0"


    // $ANTLR start "rule__BlockExpression__Group_2__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:9865:1: rule__BlockExpression__Group_2__0__Impl : ( ( rule__BlockExpression__ExpressionsAssignment_2_0 ) ) ;
    public final void rule__BlockExpression__Group_2__0__Impl() throws RecognitionException {
        int rule__BlockExpression__Group_2__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 705) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:9869:1: ( ( ( rule__BlockExpression__ExpressionsAssignment_2_0 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:9870:1: ( ( rule__BlockExpression__ExpressionsAssignment_2_0 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:9870:1: ( ( rule__BlockExpression__ExpressionsAssignment_2_0 ) )
            // InternalSimpleBeeLangTestLanguage.g:9871:2: ( rule__BlockExpression__ExpressionsAssignment_2_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBlockExpressionAccess().getExpressionsAssignment_2_0()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:9872:2: ( rule__BlockExpression__ExpressionsAssignment_2_0 )
            // InternalSimpleBeeLangTestLanguage.g:9872:3: rule__BlockExpression__ExpressionsAssignment_2_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BlockExpression__ExpressionsAssignment_2_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBlockExpressionAccess().getExpressionsAssignment_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 705, rule__BlockExpression__Group_2__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BlockExpression__Group_2__0__Impl"


    // $ANTLR start "rule__BlockExpression__Group_2__1"
    // InternalSimpleBeeLangTestLanguage.g:9880:1: rule__BlockExpression__Group_2__1 : rule__BlockExpression__Group_2__1__Impl ;
    public final void rule__BlockExpression__Group_2__1() throws RecognitionException {
        int rule__BlockExpression__Group_2__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 706) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:9884:1: ( rule__BlockExpression__Group_2__1__Impl )
            // InternalSimpleBeeLangTestLanguage.g:9885:2: rule__BlockExpression__Group_2__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BlockExpression__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 706, rule__BlockExpression__Group_2__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BlockExpression__Group_2__1"


    // $ANTLR start "rule__BlockExpression__Group_2__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:9891:1: rule__BlockExpression__Group_2__1__Impl : ( ';' ) ;
    public final void rule__BlockExpression__Group_2__1__Impl() throws RecognitionException {
        int rule__BlockExpression__Group_2__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 707) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:9895:1: ( ( ';' ) )
            // InternalSimpleBeeLangTestLanguage.g:9896:1: ( ';' )
            {
            // InternalSimpleBeeLangTestLanguage.g:9896:1: ( ';' )
            // InternalSimpleBeeLangTestLanguage.g:9897:2: ';'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBlockExpressionAccess().getSemicolonKeyword_2_1()); 
            }
            match(input,50,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBlockExpressionAccess().getSemicolonKeyword_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 707, rule__BlockExpression__Group_2__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BlockExpression__Group_2__1__Impl"


    // $ANTLR start "rule__Value__Group__0"
    // InternalSimpleBeeLangTestLanguage.g:9907:1: rule__Value__Group__0 : rule__Value__Group__0__Impl rule__Value__Group__1 ;
    public final void rule__Value__Group__0() throws RecognitionException {
        int rule__Value__Group__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 708) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:9911:1: ( rule__Value__Group__0__Impl rule__Value__Group__1 )
            // InternalSimpleBeeLangTestLanguage.g:9912:2: rule__Value__Group__0__Impl rule__Value__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_9);
            rule__Value__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Value__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 708, rule__Value__Group__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Value__Group__0"


    // $ANTLR start "rule__Value__Group__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:9919:1: rule__Value__Group__0__Impl : ( () ) ;
    public final void rule__Value__Group__0__Impl() throws RecognitionException {
        int rule__Value__Group__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 709) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:9923:1: ( ( () ) )
            // InternalSimpleBeeLangTestLanguage.g:9924:1: ( () )
            {
            // InternalSimpleBeeLangTestLanguage.g:9924:1: ( () )
            // InternalSimpleBeeLangTestLanguage.g:9925:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValueAccess().getVariableExpressionAction_0()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:9926:2: ()
            // InternalSimpleBeeLangTestLanguage.g:9926:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getValueAccess().getVariableExpressionAction_0()); 
            }

            }


            }

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 709, rule__Value__Group__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Value__Group__0__Impl"


    // $ANTLR start "rule__Value__Group__1"
    // InternalSimpleBeeLangTestLanguage.g:9934:1: rule__Value__Group__1 : rule__Value__Group__1__Impl ;
    public final void rule__Value__Group__1() throws RecognitionException {
        int rule__Value__Group__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 710) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:9938:1: ( rule__Value__Group__1__Impl )
            // InternalSimpleBeeLangTestLanguage.g:9939:2: rule__Value__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Value__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 710, rule__Value__Group__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Value__Group__1"


    // $ANTLR start "rule__Value__Group__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:9945:1: rule__Value__Group__1__Impl : ( ( rule__Value__NameAssignment_1 ) ) ;
    public final void rule__Value__Group__1__Impl() throws RecognitionException {
        int rule__Value__Group__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 711) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:9949:1: ( ( ( rule__Value__NameAssignment_1 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:9950:1: ( ( rule__Value__NameAssignment_1 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:9950:1: ( ( rule__Value__NameAssignment_1 ) )
            // InternalSimpleBeeLangTestLanguage.g:9951:2: ( rule__Value__NameAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValueAccess().getNameAssignment_1()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:9952:2: ( rule__Value__NameAssignment_1 )
            // InternalSimpleBeeLangTestLanguage.g:9952:3: rule__Value__NameAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Value__NameAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getValueAccess().getNameAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 711, rule__Value__Group__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Value__Group__1__Impl"


    // $ANTLR start "rule__KeywordVariables__Group__0"
    // InternalSimpleBeeLangTestLanguage.g:9961:1: rule__KeywordVariables__Group__0 : rule__KeywordVariables__Group__0__Impl rule__KeywordVariables__Group__1 ;
    public final void rule__KeywordVariables__Group__0() throws RecognitionException {
        int rule__KeywordVariables__Group__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 712) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:9965:1: ( rule__KeywordVariables__Group__0__Impl rule__KeywordVariables__Group__1 )
            // InternalSimpleBeeLangTestLanguage.g:9966:2: rule__KeywordVariables__Group__0__Impl rule__KeywordVariables__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_70);
            rule__KeywordVariables__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__KeywordVariables__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 712, rule__KeywordVariables__Group__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__KeywordVariables__Group__0"


    // $ANTLR start "rule__KeywordVariables__Group__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:9973:1: rule__KeywordVariables__Group__0__Impl : ( () ) ;
    public final void rule__KeywordVariables__Group__0__Impl() throws RecognitionException {
        int rule__KeywordVariables__Group__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 713) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:9977:1: ( ( () ) )
            // InternalSimpleBeeLangTestLanguage.g:9978:1: ( () )
            {
            // InternalSimpleBeeLangTestLanguage.g:9978:1: ( () )
            // InternalSimpleBeeLangTestLanguage.g:9979:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getKeywordVariablesAccess().getVariableExpressionAction_0()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:9980:2: ()
            // InternalSimpleBeeLangTestLanguage.g:9980:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getKeywordVariablesAccess().getVariableExpressionAction_0()); 
            }

            }


            }

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 713, rule__KeywordVariables__Group__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__KeywordVariables__Group__0__Impl"


    // $ANTLR start "rule__KeywordVariables__Group__1"
    // InternalSimpleBeeLangTestLanguage.g:9988:1: rule__KeywordVariables__Group__1 : rule__KeywordVariables__Group__1__Impl ;
    public final void rule__KeywordVariables__Group__1() throws RecognitionException {
        int rule__KeywordVariables__Group__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 714) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:9992:1: ( rule__KeywordVariables__Group__1__Impl )
            // InternalSimpleBeeLangTestLanguage.g:9993:2: rule__KeywordVariables__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__KeywordVariables__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 714, rule__KeywordVariables__Group__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__KeywordVariables__Group__1"


    // $ANTLR start "rule__KeywordVariables__Group__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:9999:1: rule__KeywordVariables__Group__1__Impl : ( ( rule__KeywordVariables__NameAssignment_1 ) ) ;
    public final void rule__KeywordVariables__Group__1__Impl() throws RecognitionException {
        int rule__KeywordVariables__Group__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 715) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:10003:1: ( ( ( rule__KeywordVariables__NameAssignment_1 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:10004:1: ( ( rule__KeywordVariables__NameAssignment_1 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:10004:1: ( ( rule__KeywordVariables__NameAssignment_1 ) )
            // InternalSimpleBeeLangTestLanguage.g:10005:2: ( rule__KeywordVariables__NameAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getKeywordVariablesAccess().getNameAssignment_1()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:10006:2: ( rule__KeywordVariables__NameAssignment_1 )
            // InternalSimpleBeeLangTestLanguage.g:10006:3: rule__KeywordVariables__NameAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__KeywordVariables__NameAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getKeywordVariablesAccess().getNameAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 715, rule__KeywordVariables__Group__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__KeywordVariables__Group__1__Impl"


    // $ANTLR start "rule__OperationCall__Group__0"
    // InternalSimpleBeeLangTestLanguage.g:10015:1: rule__OperationCall__Group__0 : rule__OperationCall__Group__0__Impl rule__OperationCall__Group__1 ;
    public final void rule__OperationCall__Group__0() throws RecognitionException {
        int rule__OperationCall__Group__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 716) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:10019:1: ( rule__OperationCall__Group__0__Impl rule__OperationCall__Group__1 )
            // InternalSimpleBeeLangTestLanguage.g:10020:2: rule__OperationCall__Group__0__Impl rule__OperationCall__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_9);
            rule__OperationCall__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OperationCall__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 716, rule__OperationCall__Group__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperationCall__Group__0"


    // $ANTLR start "rule__OperationCall__Group__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:10027:1: rule__OperationCall__Group__0__Impl : ( () ) ;
    public final void rule__OperationCall__Group__0__Impl() throws RecognitionException {
        int rule__OperationCall__Group__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 717) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:10031:1: ( ( () ) )
            // InternalSimpleBeeLangTestLanguage.g:10032:1: ( () )
            {
            // InternalSimpleBeeLangTestLanguage.g:10032:1: ( () )
            // InternalSimpleBeeLangTestLanguage.g:10033:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperationCallAccess().getCallNamedFunctionAction_0()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:10034:2: ()
            // InternalSimpleBeeLangTestLanguage.g:10034:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperationCallAccess().getCallNamedFunctionAction_0()); 
            }

            }


            }

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 717, rule__OperationCall__Group__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperationCall__Group__0__Impl"


    // $ANTLR start "rule__OperationCall__Group__1"
    // InternalSimpleBeeLangTestLanguage.g:10042:1: rule__OperationCall__Group__1 : rule__OperationCall__Group__1__Impl rule__OperationCall__Group__2 ;
    public final void rule__OperationCall__Group__1() throws RecognitionException {
        int rule__OperationCall__Group__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 718) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:10046:1: ( rule__OperationCall__Group__1__Impl rule__OperationCall__Group__2 )
            // InternalSimpleBeeLangTestLanguage.g:10047:2: rule__OperationCall__Group__1__Impl rule__OperationCall__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_60);
            rule__OperationCall__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OperationCall__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 718, rule__OperationCall__Group__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperationCall__Group__1"


    // $ANTLR start "rule__OperationCall__Group__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:10054:1: rule__OperationCall__Group__1__Impl : ( ( rule__OperationCall__NameAssignment_1 ) ) ;
    public final void rule__OperationCall__Group__1__Impl() throws RecognitionException {
        int rule__OperationCall__Group__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 719) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:10058:1: ( ( ( rule__OperationCall__NameAssignment_1 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:10059:1: ( ( rule__OperationCall__NameAssignment_1 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:10059:1: ( ( rule__OperationCall__NameAssignment_1 ) )
            // InternalSimpleBeeLangTestLanguage.g:10060:2: ( rule__OperationCall__NameAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperationCallAccess().getNameAssignment_1()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:10061:2: ( rule__OperationCall__NameAssignment_1 )
            // InternalSimpleBeeLangTestLanguage.g:10061:3: rule__OperationCall__NameAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OperationCall__NameAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperationCallAccess().getNameAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 719, rule__OperationCall__Group__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperationCall__Group__1__Impl"


    // $ANTLR start "rule__OperationCall__Group__2"
    // InternalSimpleBeeLangTestLanguage.g:10069:1: rule__OperationCall__Group__2 : rule__OperationCall__Group__2__Impl rule__OperationCall__Group__3 ;
    public final void rule__OperationCall__Group__2() throws RecognitionException {
        int rule__OperationCall__Group__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 720) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:10073:1: ( rule__OperationCall__Group__2__Impl rule__OperationCall__Group__3 )
            // InternalSimpleBeeLangTestLanguage.g:10074:2: rule__OperationCall__Group__2__Impl rule__OperationCall__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_61);
            rule__OperationCall__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OperationCall__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 720, rule__OperationCall__Group__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperationCall__Group__2"


    // $ANTLR start "rule__OperationCall__Group__2__Impl"
    // InternalSimpleBeeLangTestLanguage.g:10081:1: rule__OperationCall__Group__2__Impl : ( '(' ) ;
    public final void rule__OperationCall__Group__2__Impl() throws RecognitionException {
        int rule__OperationCall__Group__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 721) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:10085:1: ( ( '(' ) )
            // InternalSimpleBeeLangTestLanguage.g:10086:1: ( '(' )
            {
            // InternalSimpleBeeLangTestLanguage.g:10086:1: ( '(' )
            // InternalSimpleBeeLangTestLanguage.g:10087:2: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperationCallAccess().getLeftParenthesisKeyword_2()); 
            }
            match(input,60,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperationCallAccess().getLeftParenthesisKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 721, rule__OperationCall__Group__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperationCall__Group__2__Impl"


    // $ANTLR start "rule__OperationCall__Group__3"
    // InternalSimpleBeeLangTestLanguage.g:10096:1: rule__OperationCall__Group__3 : rule__OperationCall__Group__3__Impl rule__OperationCall__Group__4 ;
    public final void rule__OperationCall__Group__3() throws RecognitionException {
        int rule__OperationCall__Group__3_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 722) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:10100:1: ( rule__OperationCall__Group__3__Impl rule__OperationCall__Group__4 )
            // InternalSimpleBeeLangTestLanguage.g:10101:2: rule__OperationCall__Group__3__Impl rule__OperationCall__Group__4
            {
            pushFollow(FollowSets000.FOLLOW_61);
            rule__OperationCall__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OperationCall__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 722, rule__OperationCall__Group__3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperationCall__Group__3"


    // $ANTLR start "rule__OperationCall__Group__3__Impl"
    // InternalSimpleBeeLangTestLanguage.g:10108:1: rule__OperationCall__Group__3__Impl : ( ( rule__OperationCall__ParameterListAssignment_3 )? ) ;
    public final void rule__OperationCall__Group__3__Impl() throws RecognitionException {
        int rule__OperationCall__Group__3__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 723) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:10112:1: ( ( ( rule__OperationCall__ParameterListAssignment_3 )? ) )
            // InternalSimpleBeeLangTestLanguage.g:10113:1: ( ( rule__OperationCall__ParameterListAssignment_3 )? )
            {
            // InternalSimpleBeeLangTestLanguage.g:10113:1: ( ( rule__OperationCall__ParameterListAssignment_3 )? )
            // InternalSimpleBeeLangTestLanguage.g:10114:2: ( rule__OperationCall__ParameterListAssignment_3 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperationCallAccess().getParameterListAssignment_3()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:10115:2: ( rule__OperationCall__ParameterListAssignment_3 )?
            int alt80=2;
            int LA80_0 = input.LA(1);

            if ( (LA80_0==RULE_STRING||LA80_0==RULE_ID||LA80_0==13||LA80_0==28||LA80_0==31||(LA80_0>=35 && LA80_0<=44)||LA80_0==60||LA80_0==63||LA80_0==69||(LA80_0>=71 && LA80_0<=72)||LA80_0==75) ) {
                alt80=1;
            }
            switch (alt80) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:10115:3: rule__OperationCall__ParameterListAssignment_3
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__OperationCall__ParameterListAssignment_3();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperationCallAccess().getParameterListAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 723, rule__OperationCall__Group__3__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperationCall__Group__3__Impl"


    // $ANTLR start "rule__OperationCall__Group__4"
    // InternalSimpleBeeLangTestLanguage.g:10123:1: rule__OperationCall__Group__4 : rule__OperationCall__Group__4__Impl ;
    public final void rule__OperationCall__Group__4() throws RecognitionException {
        int rule__OperationCall__Group__4_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 724) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:10127:1: ( rule__OperationCall__Group__4__Impl )
            // InternalSimpleBeeLangTestLanguage.g:10128:2: rule__OperationCall__Group__4__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OperationCall__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 724, rule__OperationCall__Group__4_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperationCall__Group__4"


    // $ANTLR start "rule__OperationCall__Group__4__Impl"
    // InternalSimpleBeeLangTestLanguage.g:10134:1: rule__OperationCall__Group__4__Impl : ( ')' ) ;
    public final void rule__OperationCall__Group__4__Impl() throws RecognitionException {
        int rule__OperationCall__Group__4__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 725) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:10138:1: ( ( ')' ) )
            // InternalSimpleBeeLangTestLanguage.g:10139:1: ( ')' )
            {
            // InternalSimpleBeeLangTestLanguage.g:10139:1: ( ')' )
            // InternalSimpleBeeLangTestLanguage.g:10140:2: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperationCallAccess().getRightParenthesisKeyword_4()); 
            }
            match(input,61,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperationCallAccess().getRightParenthesisKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 725, rule__OperationCall__Group__4__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperationCall__Group__4__Impl"


    // $ANTLR start "rule__ConstructorCallExpression__Group__0"
    // InternalSimpleBeeLangTestLanguage.g:10150:1: rule__ConstructorCallExpression__Group__0 : rule__ConstructorCallExpression__Group__0__Impl rule__ConstructorCallExpression__Group__1 ;
    public final void rule__ConstructorCallExpression__Group__0() throws RecognitionException {
        int rule__ConstructorCallExpression__Group__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 726) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:10154:1: ( rule__ConstructorCallExpression__Group__0__Impl rule__ConstructorCallExpression__Group__1 )
            // InternalSimpleBeeLangTestLanguage.g:10155:2: rule__ConstructorCallExpression__Group__0__Impl rule__ConstructorCallExpression__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_71);
            rule__ConstructorCallExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConstructorCallExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 726, rule__ConstructorCallExpression__Group__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConstructorCallExpression__Group__0"


    // $ANTLR start "rule__ConstructorCallExpression__Group__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:10162:1: rule__ConstructorCallExpression__Group__0__Impl : ( () ) ;
    public final void rule__ConstructorCallExpression__Group__0__Impl() throws RecognitionException {
        int rule__ConstructorCallExpression__Group__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 727) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:10166:1: ( ( () ) )
            // InternalSimpleBeeLangTestLanguage.g:10167:1: ( () )
            {
            // InternalSimpleBeeLangTestLanguage.g:10167:1: ( () )
            // InternalSimpleBeeLangTestLanguage.g:10168:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConstructorCallExpressionAccess().getCreateExpressionAction_0()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:10169:2: ()
            // InternalSimpleBeeLangTestLanguage.g:10169:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConstructorCallExpressionAccess().getCreateExpressionAction_0()); 
            }

            }


            }

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 727, rule__ConstructorCallExpression__Group__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConstructorCallExpression__Group__0__Impl"


    // $ANTLR start "rule__ConstructorCallExpression__Group__1"
    // InternalSimpleBeeLangTestLanguage.g:10177:1: rule__ConstructorCallExpression__Group__1 : rule__ConstructorCallExpression__Group__1__Impl rule__ConstructorCallExpression__Group__2 ;
    public final void rule__ConstructorCallExpression__Group__1() throws RecognitionException {
        int rule__ConstructorCallExpression__Group__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 728) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:10181:1: ( rule__ConstructorCallExpression__Group__1__Impl rule__ConstructorCallExpression__Group__2 )
            // InternalSimpleBeeLangTestLanguage.g:10182:2: rule__ConstructorCallExpression__Group__1__Impl rule__ConstructorCallExpression__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_9);
            rule__ConstructorCallExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConstructorCallExpression__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 728, rule__ConstructorCallExpression__Group__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConstructorCallExpression__Group__1"


    // $ANTLR start "rule__ConstructorCallExpression__Group__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:10189:1: rule__ConstructorCallExpression__Group__1__Impl : ( 'new' ) ;
    public final void rule__ConstructorCallExpression__Group__1__Impl() throws RecognitionException {
        int rule__ConstructorCallExpression__Group__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 729) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:10193:1: ( ( 'new' ) )
            // InternalSimpleBeeLangTestLanguage.g:10194:1: ( 'new' )
            {
            // InternalSimpleBeeLangTestLanguage.g:10194:1: ( 'new' )
            // InternalSimpleBeeLangTestLanguage.g:10195:2: 'new'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConstructorCallExpressionAccess().getNewKeyword_1()); 
            }
            match(input,71,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConstructorCallExpressionAccess().getNewKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 729, rule__ConstructorCallExpression__Group__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConstructorCallExpression__Group__1__Impl"


    // $ANTLR start "rule__ConstructorCallExpression__Group__2"
    // InternalSimpleBeeLangTestLanguage.g:10204:1: rule__ConstructorCallExpression__Group__2 : rule__ConstructorCallExpression__Group__2__Impl rule__ConstructorCallExpression__Group__3 ;
    public final void rule__ConstructorCallExpression__Group__2() throws RecognitionException {
        int rule__ConstructorCallExpression__Group__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 730) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:10208:1: ( rule__ConstructorCallExpression__Group__2__Impl rule__ConstructorCallExpression__Group__3 )
            // InternalSimpleBeeLangTestLanguage.g:10209:2: rule__ConstructorCallExpression__Group__2__Impl rule__ConstructorCallExpression__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_72);
            rule__ConstructorCallExpression__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConstructorCallExpression__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 730, rule__ConstructorCallExpression__Group__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConstructorCallExpression__Group__2"


    // $ANTLR start "rule__ConstructorCallExpression__Group__2__Impl"
    // InternalSimpleBeeLangTestLanguage.g:10216:1: rule__ConstructorCallExpression__Group__2__Impl : ( ( rule__ConstructorCallExpression__TypeExprAssignment_2 ) ) ;
    public final void rule__ConstructorCallExpression__Group__2__Impl() throws RecognitionException {
        int rule__ConstructorCallExpression__Group__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 731) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:10220:1: ( ( ( rule__ConstructorCallExpression__TypeExprAssignment_2 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:10221:1: ( ( rule__ConstructorCallExpression__TypeExprAssignment_2 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:10221:1: ( ( rule__ConstructorCallExpression__TypeExprAssignment_2 ) )
            // InternalSimpleBeeLangTestLanguage.g:10222:2: ( rule__ConstructorCallExpression__TypeExprAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConstructorCallExpressionAccess().getTypeExprAssignment_2()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:10223:2: ( rule__ConstructorCallExpression__TypeExprAssignment_2 )
            // InternalSimpleBeeLangTestLanguage.g:10223:3: rule__ConstructorCallExpression__TypeExprAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConstructorCallExpression__TypeExprAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConstructorCallExpressionAccess().getTypeExprAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 731, rule__ConstructorCallExpression__Group__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConstructorCallExpression__Group__2__Impl"


    // $ANTLR start "rule__ConstructorCallExpression__Group__3"
    // InternalSimpleBeeLangTestLanguage.g:10231:1: rule__ConstructorCallExpression__Group__3 : rule__ConstructorCallExpression__Group__3__Impl rule__ConstructorCallExpression__Group__4 ;
    public final void rule__ConstructorCallExpression__Group__3() throws RecognitionException {
        int rule__ConstructorCallExpression__Group__3_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 732) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:10235:1: ( rule__ConstructorCallExpression__Group__3__Impl rule__ConstructorCallExpression__Group__4 )
            // InternalSimpleBeeLangTestLanguage.g:10236:2: rule__ConstructorCallExpression__Group__3__Impl rule__ConstructorCallExpression__Group__4
            {
            pushFollow(FollowSets000.FOLLOW_72);
            rule__ConstructorCallExpression__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConstructorCallExpression__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 732, rule__ConstructorCallExpression__Group__3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConstructorCallExpression__Group__3"


    // $ANTLR start "rule__ConstructorCallExpression__Group__3__Impl"
    // InternalSimpleBeeLangTestLanguage.g:10243:1: rule__ConstructorCallExpression__Group__3__Impl : ( ( rule__ConstructorCallExpression__Group_3__0 )? ) ;
    public final void rule__ConstructorCallExpression__Group__3__Impl() throws RecognitionException {
        int rule__ConstructorCallExpression__Group__3__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 733) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:10247:1: ( ( ( rule__ConstructorCallExpression__Group_3__0 )? ) )
            // InternalSimpleBeeLangTestLanguage.g:10248:1: ( ( rule__ConstructorCallExpression__Group_3__0 )? )
            {
            // InternalSimpleBeeLangTestLanguage.g:10248:1: ( ( rule__ConstructorCallExpression__Group_3__0 )? )
            // InternalSimpleBeeLangTestLanguage.g:10249:2: ( rule__ConstructorCallExpression__Group_3__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConstructorCallExpressionAccess().getGroup_3()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:10250:2: ( rule__ConstructorCallExpression__Group_3__0 )?
            int alt81=2;
            alt81 = dfa81.predict(input);
            switch (alt81) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:10250:3: rule__ConstructorCallExpression__Group_3__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ConstructorCallExpression__Group_3__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConstructorCallExpressionAccess().getGroup_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 733, rule__ConstructorCallExpression__Group__3__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConstructorCallExpression__Group__3__Impl"


    // $ANTLR start "rule__ConstructorCallExpression__Group__4"
    // InternalSimpleBeeLangTestLanguage.g:10258:1: rule__ConstructorCallExpression__Group__4 : rule__ConstructorCallExpression__Group__4__Impl rule__ConstructorCallExpression__Group__5 ;
    public final void rule__ConstructorCallExpression__Group__4() throws RecognitionException {
        int rule__ConstructorCallExpression__Group__4_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 734) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:10262:1: ( rule__ConstructorCallExpression__Group__4__Impl rule__ConstructorCallExpression__Group__5 )
            // InternalSimpleBeeLangTestLanguage.g:10263:2: rule__ConstructorCallExpression__Group__4__Impl rule__ConstructorCallExpression__Group__5
            {
            pushFollow(FollowSets000.FOLLOW_72);
            rule__ConstructorCallExpression__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConstructorCallExpression__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 734, rule__ConstructorCallExpression__Group__4_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConstructorCallExpression__Group__4"


    // $ANTLR start "rule__ConstructorCallExpression__Group__4__Impl"
    // InternalSimpleBeeLangTestLanguage.g:10270:1: rule__ConstructorCallExpression__Group__4__Impl : ( ( rule__ConstructorCallExpression__Group_4__0 )? ) ;
    public final void rule__ConstructorCallExpression__Group__4__Impl() throws RecognitionException {
        int rule__ConstructorCallExpression__Group__4__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 735) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:10274:1: ( ( ( rule__ConstructorCallExpression__Group_4__0 )? ) )
            // InternalSimpleBeeLangTestLanguage.g:10275:1: ( ( rule__ConstructorCallExpression__Group_4__0 )? )
            {
            // InternalSimpleBeeLangTestLanguage.g:10275:1: ( ( rule__ConstructorCallExpression__Group_4__0 )? )
            // InternalSimpleBeeLangTestLanguage.g:10276:2: ( rule__ConstructorCallExpression__Group_4__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConstructorCallExpressionAccess().getGroup_4()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:10277:2: ( rule__ConstructorCallExpression__Group_4__0 )?
            int alt82=2;
            int LA82_0 = input.LA(1);

            if ( (LA82_0==56) ) {
                int LA82_1 = input.LA(2);

                if ( (LA82_1==RULE_ID) ) {
                    int LA82_3 = input.LA(3);

                    if ( (synpred111_InternalSimpleBeeLangTestLanguage()) ) {
                        alt82=1;
                    }
                }
            }
            switch (alt82) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:10277:3: rule__ConstructorCallExpression__Group_4__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ConstructorCallExpression__Group_4__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConstructorCallExpressionAccess().getGroup_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 735, rule__ConstructorCallExpression__Group__4__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConstructorCallExpression__Group__4__Impl"


    // $ANTLR start "rule__ConstructorCallExpression__Group__5"
    // InternalSimpleBeeLangTestLanguage.g:10285:1: rule__ConstructorCallExpression__Group__5 : rule__ConstructorCallExpression__Group__5__Impl ;
    public final void rule__ConstructorCallExpression__Group__5() throws RecognitionException {
        int rule__ConstructorCallExpression__Group__5_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 736) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:10289:1: ( rule__ConstructorCallExpression__Group__5__Impl )
            // InternalSimpleBeeLangTestLanguage.g:10290:2: rule__ConstructorCallExpression__Group__5__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConstructorCallExpression__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 736, rule__ConstructorCallExpression__Group__5_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConstructorCallExpression__Group__5"


    // $ANTLR start "rule__ConstructorCallExpression__Group__5__Impl"
    // InternalSimpleBeeLangTestLanguage.g:10296:1: rule__ConstructorCallExpression__Group__5__Impl : ( ( rule__ConstructorCallExpression__ContextBlockAssignment_5 )? ) ;
    public final void rule__ConstructorCallExpression__Group__5__Impl() throws RecognitionException {
        int rule__ConstructorCallExpression__Group__5__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 737) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:10300:1: ( ( ( rule__ConstructorCallExpression__ContextBlockAssignment_5 )? ) )
            // InternalSimpleBeeLangTestLanguage.g:10301:1: ( ( rule__ConstructorCallExpression__ContextBlockAssignment_5 )? )
            {
            // InternalSimpleBeeLangTestLanguage.g:10301:1: ( ( rule__ConstructorCallExpression__ContextBlockAssignment_5 )? )
            // InternalSimpleBeeLangTestLanguage.g:10302:2: ( rule__ConstructorCallExpression__ContextBlockAssignment_5 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConstructorCallExpressionAccess().getContextBlockAssignment_5()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:10303:2: ( rule__ConstructorCallExpression__ContextBlockAssignment_5 )?
            int alt83=2;
            int LA83_0 = input.LA(1);

            if ( (LA83_0==44) ) {
                int LA83_1 = input.LA(2);

                if ( (LA83_1==RULE_ID) ) {
                    int LA83_3 = input.LA(3);

                    if ( (LA83_3==49) ) {
                        alt83=1;
                    }
                }
            }
            switch (alt83) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:10303:3: rule__ConstructorCallExpression__ContextBlockAssignment_5
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ConstructorCallExpression__ContextBlockAssignment_5();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConstructorCallExpressionAccess().getContextBlockAssignment_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 737, rule__ConstructorCallExpression__Group__5__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConstructorCallExpression__Group__5__Impl"


    // $ANTLR start "rule__ConstructorCallExpression__Group_3__0"
    // InternalSimpleBeeLangTestLanguage.g:10312:1: rule__ConstructorCallExpression__Group_3__0 : rule__ConstructorCallExpression__Group_3__0__Impl rule__ConstructorCallExpression__Group_3__1 ;
    public final void rule__ConstructorCallExpression__Group_3__0() throws RecognitionException {
        int rule__ConstructorCallExpression__Group_3__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 738) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:10316:1: ( rule__ConstructorCallExpression__Group_3__0__Impl rule__ConstructorCallExpression__Group_3__1 )
            // InternalSimpleBeeLangTestLanguage.g:10317:2: rule__ConstructorCallExpression__Group_3__0__Impl rule__ConstructorCallExpression__Group_3__1
            {
            pushFollow(FollowSets000.FOLLOW_61);
            rule__ConstructorCallExpression__Group_3__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConstructorCallExpression__Group_3__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 738, rule__ConstructorCallExpression__Group_3__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConstructorCallExpression__Group_3__0"


    // $ANTLR start "rule__ConstructorCallExpression__Group_3__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:10324:1: rule__ConstructorCallExpression__Group_3__0__Impl : ( '(' ) ;
    public final void rule__ConstructorCallExpression__Group_3__0__Impl() throws RecognitionException {
        int rule__ConstructorCallExpression__Group_3__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 739) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:10328:1: ( ( '(' ) )
            // InternalSimpleBeeLangTestLanguage.g:10329:1: ( '(' )
            {
            // InternalSimpleBeeLangTestLanguage.g:10329:1: ( '(' )
            // InternalSimpleBeeLangTestLanguage.g:10330:2: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConstructorCallExpressionAccess().getLeftParenthesisKeyword_3_0()); 
            }
            match(input,60,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConstructorCallExpressionAccess().getLeftParenthesisKeyword_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 739, rule__ConstructorCallExpression__Group_3__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConstructorCallExpression__Group_3__0__Impl"


    // $ANTLR start "rule__ConstructorCallExpression__Group_3__1"
    // InternalSimpleBeeLangTestLanguage.g:10339:1: rule__ConstructorCallExpression__Group_3__1 : rule__ConstructorCallExpression__Group_3__1__Impl rule__ConstructorCallExpression__Group_3__2 ;
    public final void rule__ConstructorCallExpression__Group_3__1() throws RecognitionException {
        int rule__ConstructorCallExpression__Group_3__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 740) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:10343:1: ( rule__ConstructorCallExpression__Group_3__1__Impl rule__ConstructorCallExpression__Group_3__2 )
            // InternalSimpleBeeLangTestLanguage.g:10344:2: rule__ConstructorCallExpression__Group_3__1__Impl rule__ConstructorCallExpression__Group_3__2
            {
            pushFollow(FollowSets000.FOLLOW_61);
            rule__ConstructorCallExpression__Group_3__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConstructorCallExpression__Group_3__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 740, rule__ConstructorCallExpression__Group_3__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConstructorCallExpression__Group_3__1"


    // $ANTLR start "rule__ConstructorCallExpression__Group_3__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:10351:1: rule__ConstructorCallExpression__Group_3__1__Impl : ( ( rule__ConstructorCallExpression__ParameterListAssignment_3_1 )? ) ;
    public final void rule__ConstructorCallExpression__Group_3__1__Impl() throws RecognitionException {
        int rule__ConstructorCallExpression__Group_3__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 741) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:10355:1: ( ( ( rule__ConstructorCallExpression__ParameterListAssignment_3_1 )? ) )
            // InternalSimpleBeeLangTestLanguage.g:10356:1: ( ( rule__ConstructorCallExpression__ParameterListAssignment_3_1 )? )
            {
            // InternalSimpleBeeLangTestLanguage.g:10356:1: ( ( rule__ConstructorCallExpression__ParameterListAssignment_3_1 )? )
            // InternalSimpleBeeLangTestLanguage.g:10357:2: ( rule__ConstructorCallExpression__ParameterListAssignment_3_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConstructorCallExpressionAccess().getParameterListAssignment_3_1()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:10358:2: ( rule__ConstructorCallExpression__ParameterListAssignment_3_1 )?
            int alt84=2;
            int LA84_0 = input.LA(1);

            if ( (LA84_0==RULE_STRING||LA84_0==RULE_ID||LA84_0==13||LA84_0==28||LA84_0==31||(LA84_0>=35 && LA84_0<=44)||LA84_0==60||LA84_0==63||LA84_0==69||(LA84_0>=71 && LA84_0<=72)||LA84_0==75) ) {
                alt84=1;
            }
            switch (alt84) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:10358:3: rule__ConstructorCallExpression__ParameterListAssignment_3_1
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ConstructorCallExpression__ParameterListAssignment_3_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConstructorCallExpressionAccess().getParameterListAssignment_3_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 741, rule__ConstructorCallExpression__Group_3__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConstructorCallExpression__Group_3__1__Impl"


    // $ANTLR start "rule__ConstructorCallExpression__Group_3__2"
    // InternalSimpleBeeLangTestLanguage.g:10366:1: rule__ConstructorCallExpression__Group_3__2 : rule__ConstructorCallExpression__Group_3__2__Impl ;
    public final void rule__ConstructorCallExpression__Group_3__2() throws RecognitionException {
        int rule__ConstructorCallExpression__Group_3__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 742) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:10370:1: ( rule__ConstructorCallExpression__Group_3__2__Impl )
            // InternalSimpleBeeLangTestLanguage.g:10371:2: rule__ConstructorCallExpression__Group_3__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConstructorCallExpression__Group_3__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 742, rule__ConstructorCallExpression__Group_3__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConstructorCallExpression__Group_3__2"


    // $ANTLR start "rule__ConstructorCallExpression__Group_3__2__Impl"
    // InternalSimpleBeeLangTestLanguage.g:10377:1: rule__ConstructorCallExpression__Group_3__2__Impl : ( ')' ) ;
    public final void rule__ConstructorCallExpression__Group_3__2__Impl() throws RecognitionException {
        int rule__ConstructorCallExpression__Group_3__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 743) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:10381:1: ( ( ')' ) )
            // InternalSimpleBeeLangTestLanguage.g:10382:1: ( ')' )
            {
            // InternalSimpleBeeLangTestLanguage.g:10382:1: ( ')' )
            // InternalSimpleBeeLangTestLanguage.g:10383:2: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConstructorCallExpressionAccess().getRightParenthesisKeyword_3_2()); 
            }
            match(input,61,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConstructorCallExpressionAccess().getRightParenthesisKeyword_3_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 743, rule__ConstructorCallExpression__Group_3__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConstructorCallExpression__Group_3__2__Impl"


    // $ANTLR start "rule__ConstructorCallExpression__Group_4__0"
    // InternalSimpleBeeLangTestLanguage.g:10393:1: rule__ConstructorCallExpression__Group_4__0 : rule__ConstructorCallExpression__Group_4__0__Impl rule__ConstructorCallExpression__Group_4__1 ;
    public final void rule__ConstructorCallExpression__Group_4__0() throws RecognitionException {
        int rule__ConstructorCallExpression__Group_4__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 744) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:10397:1: ( rule__ConstructorCallExpression__Group_4__0__Impl rule__ConstructorCallExpression__Group_4__1 )
            // InternalSimpleBeeLangTestLanguage.g:10398:2: rule__ConstructorCallExpression__Group_4__0__Impl rule__ConstructorCallExpression__Group_4__1
            {
            pushFollow(FollowSets000.FOLLOW_9);
            rule__ConstructorCallExpression__Group_4__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConstructorCallExpression__Group_4__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 744, rule__ConstructorCallExpression__Group_4__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConstructorCallExpression__Group_4__0"


    // $ANTLR start "rule__ConstructorCallExpression__Group_4__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:10405:1: rule__ConstructorCallExpression__Group_4__0__Impl : ( 'as' ) ;
    public final void rule__ConstructorCallExpression__Group_4__0__Impl() throws RecognitionException {
        int rule__ConstructorCallExpression__Group_4__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 745) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:10409:1: ( ( 'as' ) )
            // InternalSimpleBeeLangTestLanguage.g:10410:1: ( 'as' )
            {
            // InternalSimpleBeeLangTestLanguage.g:10410:1: ( 'as' )
            // InternalSimpleBeeLangTestLanguage.g:10411:2: 'as'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConstructorCallExpressionAccess().getAsKeyword_4_0()); 
            }
            match(input,56,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConstructorCallExpressionAccess().getAsKeyword_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 745, rule__ConstructorCallExpression__Group_4__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConstructorCallExpression__Group_4__0__Impl"


    // $ANTLR start "rule__ConstructorCallExpression__Group_4__1"
    // InternalSimpleBeeLangTestLanguage.g:10420:1: rule__ConstructorCallExpression__Group_4__1 : rule__ConstructorCallExpression__Group_4__1__Impl ;
    public final void rule__ConstructorCallExpression__Group_4__1() throws RecognitionException {
        int rule__ConstructorCallExpression__Group_4__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 746) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:10424:1: ( rule__ConstructorCallExpression__Group_4__1__Impl )
            // InternalSimpleBeeLangTestLanguage.g:10425:2: rule__ConstructorCallExpression__Group_4__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConstructorCallExpression__Group_4__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 746, rule__ConstructorCallExpression__Group_4__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConstructorCallExpression__Group_4__1"


    // $ANTLR start "rule__ConstructorCallExpression__Group_4__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:10431:1: rule__ConstructorCallExpression__Group_4__1__Impl : ( ( rule__ConstructorCallExpression__AliasAssignment_4_1 ) ) ;
    public final void rule__ConstructorCallExpression__Group_4__1__Impl() throws RecognitionException {
        int rule__ConstructorCallExpression__Group_4__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 747) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:10435:1: ( ( ( rule__ConstructorCallExpression__AliasAssignment_4_1 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:10436:1: ( ( rule__ConstructorCallExpression__AliasAssignment_4_1 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:10436:1: ( ( rule__ConstructorCallExpression__AliasAssignment_4_1 ) )
            // InternalSimpleBeeLangTestLanguage.g:10437:2: ( rule__ConstructorCallExpression__AliasAssignment_4_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConstructorCallExpressionAccess().getAliasAssignment_4_1()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:10438:2: ( rule__ConstructorCallExpression__AliasAssignment_4_1 )
            // InternalSimpleBeeLangTestLanguage.g:10438:3: rule__ConstructorCallExpression__AliasAssignment_4_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConstructorCallExpression__AliasAssignment_4_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConstructorCallExpressionAccess().getAliasAssignment_4_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 747, rule__ConstructorCallExpression__Group_4__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConstructorCallExpression__Group_4__1__Impl"


    // $ANTLR start "rule__InitializationBlockExpression__Group__0"
    // InternalSimpleBeeLangTestLanguage.g:10447:1: rule__InitializationBlockExpression__Group__0 : rule__InitializationBlockExpression__Group__0__Impl rule__InitializationBlockExpression__Group__1 ;
    public final void rule__InitializationBlockExpression__Group__0() throws RecognitionException {
        int rule__InitializationBlockExpression__Group__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 748) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:10451:1: ( rule__InitializationBlockExpression__Group__0__Impl rule__InitializationBlockExpression__Group__1 )
            // InternalSimpleBeeLangTestLanguage.g:10452:2: rule__InitializationBlockExpression__Group__0__Impl rule__InitializationBlockExpression__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_17);
            rule__InitializationBlockExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__InitializationBlockExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 748, rule__InitializationBlockExpression__Group__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InitializationBlockExpression__Group__0"


    // $ANTLR start "rule__InitializationBlockExpression__Group__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:10459:1: rule__InitializationBlockExpression__Group__0__Impl : ( () ) ;
    public final void rule__InitializationBlockExpression__Group__0__Impl() throws RecognitionException {
        int rule__InitializationBlockExpression__Group__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 749) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:10463:1: ( ( () ) )
            // InternalSimpleBeeLangTestLanguage.g:10464:1: ( () )
            {
            // InternalSimpleBeeLangTestLanguage.g:10464:1: ( () )
            // InternalSimpleBeeLangTestLanguage.g:10465:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInitializationBlockExpressionAccess().getChainedExpressionAction_0()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:10466:2: ()
            // InternalSimpleBeeLangTestLanguage.g:10466:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInitializationBlockExpressionAccess().getChainedExpressionAction_0()); 
            }

            }


            }

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 749, rule__InitializationBlockExpression__Group__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InitializationBlockExpression__Group__0__Impl"


    // $ANTLR start "rule__InitializationBlockExpression__Group__1"
    // InternalSimpleBeeLangTestLanguage.g:10474:1: rule__InitializationBlockExpression__Group__1 : rule__InitializationBlockExpression__Group__1__Impl rule__InitializationBlockExpression__Group__2 ;
    public final void rule__InitializationBlockExpression__Group__1() throws RecognitionException {
        int rule__InitializationBlockExpression__Group__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 750) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:10478:1: ( rule__InitializationBlockExpression__Group__1__Impl rule__InitializationBlockExpression__Group__2 )
            // InternalSimpleBeeLangTestLanguage.g:10479:2: rule__InitializationBlockExpression__Group__1__Impl rule__InitializationBlockExpression__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_9);
            rule__InitializationBlockExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__InitializationBlockExpression__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 750, rule__InitializationBlockExpression__Group__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InitializationBlockExpression__Group__1"


    // $ANTLR start "rule__InitializationBlockExpression__Group__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:10486:1: rule__InitializationBlockExpression__Group__1__Impl : ( '{' ) ;
    public final void rule__InitializationBlockExpression__Group__1__Impl() throws RecognitionException {
        int rule__InitializationBlockExpression__Group__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 751) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:10490:1: ( ( '{' ) )
            // InternalSimpleBeeLangTestLanguage.g:10491:1: ( '{' )
            {
            // InternalSimpleBeeLangTestLanguage.g:10491:1: ( '{' )
            // InternalSimpleBeeLangTestLanguage.g:10492:2: '{'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInitializationBlockExpressionAccess().getLeftCurlyBracketKeyword_1()); 
            }
            match(input,44,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInitializationBlockExpressionAccess().getLeftCurlyBracketKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 751, rule__InitializationBlockExpression__Group__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InitializationBlockExpression__Group__1__Impl"


    // $ANTLR start "rule__InitializationBlockExpression__Group__2"
    // InternalSimpleBeeLangTestLanguage.g:10501:1: rule__InitializationBlockExpression__Group__2 : rule__InitializationBlockExpression__Group__2__Impl rule__InitializationBlockExpression__Group__3 ;
    public final void rule__InitializationBlockExpression__Group__2() throws RecognitionException {
        int rule__InitializationBlockExpression__Group__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 752) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:10505:1: ( rule__InitializationBlockExpression__Group__2__Impl rule__InitializationBlockExpression__Group__3 )
            // InternalSimpleBeeLangTestLanguage.g:10506:2: rule__InitializationBlockExpression__Group__2__Impl rule__InitializationBlockExpression__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_14);
            rule__InitializationBlockExpression__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__InitializationBlockExpression__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 752, rule__InitializationBlockExpression__Group__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InitializationBlockExpression__Group__2"


    // $ANTLR start "rule__InitializationBlockExpression__Group__2__Impl"
    // InternalSimpleBeeLangTestLanguage.g:10513:1: rule__InitializationBlockExpression__Group__2__Impl : ( ( rule__InitializationBlockExpression__ExpressionsAssignment_2 ) ) ;
    public final void rule__InitializationBlockExpression__Group__2__Impl() throws RecognitionException {
        int rule__InitializationBlockExpression__Group__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 753) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:10517:1: ( ( ( rule__InitializationBlockExpression__ExpressionsAssignment_2 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:10518:1: ( ( rule__InitializationBlockExpression__ExpressionsAssignment_2 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:10518:1: ( ( rule__InitializationBlockExpression__ExpressionsAssignment_2 ) )
            // InternalSimpleBeeLangTestLanguage.g:10519:2: ( rule__InitializationBlockExpression__ExpressionsAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInitializationBlockExpressionAccess().getExpressionsAssignment_2()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:10520:2: ( rule__InitializationBlockExpression__ExpressionsAssignment_2 )
            // InternalSimpleBeeLangTestLanguage.g:10520:3: rule__InitializationBlockExpression__ExpressionsAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__InitializationBlockExpression__ExpressionsAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInitializationBlockExpressionAccess().getExpressionsAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 753, rule__InitializationBlockExpression__Group__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InitializationBlockExpression__Group__2__Impl"


    // $ANTLR start "rule__InitializationBlockExpression__Group__3"
    // InternalSimpleBeeLangTestLanguage.g:10528:1: rule__InitializationBlockExpression__Group__3 : rule__InitializationBlockExpression__Group__3__Impl rule__InitializationBlockExpression__Group__4 ;
    public final void rule__InitializationBlockExpression__Group__3() throws RecognitionException {
        int rule__InitializationBlockExpression__Group__3_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 754) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:10532:1: ( rule__InitializationBlockExpression__Group__3__Impl rule__InitializationBlockExpression__Group__4 )
            // InternalSimpleBeeLangTestLanguage.g:10533:2: rule__InitializationBlockExpression__Group__3__Impl rule__InitializationBlockExpression__Group__4
            {
            pushFollow(FollowSets000.FOLLOW_8);
            rule__InitializationBlockExpression__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__InitializationBlockExpression__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 754, rule__InitializationBlockExpression__Group__3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InitializationBlockExpression__Group__3"


    // $ANTLR start "rule__InitializationBlockExpression__Group__3__Impl"
    // InternalSimpleBeeLangTestLanguage.g:10540:1: rule__InitializationBlockExpression__Group__3__Impl : ( ';' ) ;
    public final void rule__InitializationBlockExpression__Group__3__Impl() throws RecognitionException {
        int rule__InitializationBlockExpression__Group__3__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 755) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:10544:1: ( ( ';' ) )
            // InternalSimpleBeeLangTestLanguage.g:10545:1: ( ';' )
            {
            // InternalSimpleBeeLangTestLanguage.g:10545:1: ( ';' )
            // InternalSimpleBeeLangTestLanguage.g:10546:2: ';'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInitializationBlockExpressionAccess().getSemicolonKeyword_3()); 
            }
            match(input,50,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInitializationBlockExpressionAccess().getSemicolonKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 755, rule__InitializationBlockExpression__Group__3__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InitializationBlockExpression__Group__3__Impl"


    // $ANTLR start "rule__InitializationBlockExpression__Group__4"
    // InternalSimpleBeeLangTestLanguage.g:10555:1: rule__InitializationBlockExpression__Group__4 : rule__InitializationBlockExpression__Group__4__Impl ;
    public final void rule__InitializationBlockExpression__Group__4() throws RecognitionException {
        int rule__InitializationBlockExpression__Group__4_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 756) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:10559:1: ( rule__InitializationBlockExpression__Group__4__Impl )
            // InternalSimpleBeeLangTestLanguage.g:10560:2: rule__InitializationBlockExpression__Group__4__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__InitializationBlockExpression__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 756, rule__InitializationBlockExpression__Group__4_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InitializationBlockExpression__Group__4"


    // $ANTLR start "rule__InitializationBlockExpression__Group__4__Impl"
    // InternalSimpleBeeLangTestLanguage.g:10566:1: rule__InitializationBlockExpression__Group__4__Impl : ( '}' ) ;
    public final void rule__InitializationBlockExpression__Group__4__Impl() throws RecognitionException {
        int rule__InitializationBlockExpression__Group__4__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 757) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:10570:1: ( ( '}' ) )
            // InternalSimpleBeeLangTestLanguage.g:10571:1: ( '}' )
            {
            // InternalSimpleBeeLangTestLanguage.g:10571:1: ( '}' )
            // InternalSimpleBeeLangTestLanguage.g:10572:2: '}'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInitializationBlockExpressionAccess().getRightCurlyBracketKeyword_4()); 
            }
            match(input,45,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInitializationBlockExpressionAccess().getRightCurlyBracketKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 757, rule__InitializationBlockExpression__Group__4__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InitializationBlockExpression__Group__4__Impl"


    // $ANTLR start "rule__InitializationExpression__Group__0"
    // InternalSimpleBeeLangTestLanguage.g:10582:1: rule__InitializationExpression__Group__0 : rule__InitializationExpression__Group__0__Impl rule__InitializationExpression__Group__1 ;
    public final void rule__InitializationExpression__Group__0() throws RecognitionException {
        int rule__InitializationExpression__Group__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 758) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:10586:1: ( rule__InitializationExpression__Group__0__Impl rule__InitializationExpression__Group__1 )
            // InternalSimpleBeeLangTestLanguage.g:10587:2: rule__InitializationExpression__Group__0__Impl rule__InitializationExpression__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_9);
            rule__InitializationExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__InitializationExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 758, rule__InitializationExpression__Group__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InitializationExpression__Group__0"


    // $ANTLR start "rule__InitializationExpression__Group__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:10594:1: rule__InitializationExpression__Group__0__Impl : ( () ) ;
    public final void rule__InitializationExpression__Group__0__Impl() throws RecognitionException {
        int rule__InitializationExpression__Group__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 759) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:10598:1: ( ( () ) )
            // InternalSimpleBeeLangTestLanguage.g:10599:1: ( () )
            {
            // InternalSimpleBeeLangTestLanguage.g:10599:1: ( () )
            // InternalSimpleBeeLangTestLanguage.g:10600:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInitializationExpressionAccess().getAssignmentExpressionAction_0()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:10601:2: ()
            // InternalSimpleBeeLangTestLanguage.g:10601:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInitializationExpressionAccess().getAssignmentExpressionAction_0()); 
            }

            }


            }

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 759, rule__InitializationExpression__Group__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InitializationExpression__Group__0__Impl"


    // $ANTLR start "rule__InitializationExpression__Group__1"
    // InternalSimpleBeeLangTestLanguage.g:10609:1: rule__InitializationExpression__Group__1 : rule__InitializationExpression__Group__1__Impl rule__InitializationExpression__Group__2 ;
    public final void rule__InitializationExpression__Group__1() throws RecognitionException {
        int rule__InitializationExpression__Group__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 760) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:10613:1: ( rule__InitializationExpression__Group__1__Impl rule__InitializationExpression__Group__2 )
            // InternalSimpleBeeLangTestLanguage.g:10614:2: rule__InitializationExpression__Group__1__Impl rule__InitializationExpression__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_12);
            rule__InitializationExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__InitializationExpression__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 760, rule__InitializationExpression__Group__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InitializationExpression__Group__1"


    // $ANTLR start "rule__InitializationExpression__Group__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:10621:1: rule__InitializationExpression__Group__1__Impl : ( ( rule__InitializationExpression__LeftExprAssignment_1 ) ) ;
    public final void rule__InitializationExpression__Group__1__Impl() throws RecognitionException {
        int rule__InitializationExpression__Group__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 761) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:10625:1: ( ( ( rule__InitializationExpression__LeftExprAssignment_1 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:10626:1: ( ( rule__InitializationExpression__LeftExprAssignment_1 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:10626:1: ( ( rule__InitializationExpression__LeftExprAssignment_1 ) )
            // InternalSimpleBeeLangTestLanguage.g:10627:2: ( rule__InitializationExpression__LeftExprAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInitializationExpressionAccess().getLeftExprAssignment_1()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:10628:2: ( rule__InitializationExpression__LeftExprAssignment_1 )
            // InternalSimpleBeeLangTestLanguage.g:10628:3: rule__InitializationExpression__LeftExprAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__InitializationExpression__LeftExprAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInitializationExpressionAccess().getLeftExprAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 761, rule__InitializationExpression__Group__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InitializationExpression__Group__1__Impl"


    // $ANTLR start "rule__InitializationExpression__Group__2"
    // InternalSimpleBeeLangTestLanguage.g:10636:1: rule__InitializationExpression__Group__2 : rule__InitializationExpression__Group__2__Impl rule__InitializationExpression__Group__3 ;
    public final void rule__InitializationExpression__Group__2() throws RecognitionException {
        int rule__InitializationExpression__Group__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 762) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:10640:1: ( rule__InitializationExpression__Group__2__Impl rule__InitializationExpression__Group__3 )
            // InternalSimpleBeeLangTestLanguage.g:10641:2: rule__InitializationExpression__Group__2__Impl rule__InitializationExpression__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_19);
            rule__InitializationExpression__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__InitializationExpression__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 762, rule__InitializationExpression__Group__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InitializationExpression__Group__2"


    // $ANTLR start "rule__InitializationExpression__Group__2__Impl"
    // InternalSimpleBeeLangTestLanguage.g:10648:1: rule__InitializationExpression__Group__2__Impl : ( ( rule__InitializationExpression__FunctionNameAssignment_2 ) ) ;
    public final void rule__InitializationExpression__Group__2__Impl() throws RecognitionException {
        int rule__InitializationExpression__Group__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 763) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:10652:1: ( ( ( rule__InitializationExpression__FunctionNameAssignment_2 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:10653:1: ( ( rule__InitializationExpression__FunctionNameAssignment_2 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:10653:1: ( ( rule__InitializationExpression__FunctionNameAssignment_2 ) )
            // InternalSimpleBeeLangTestLanguage.g:10654:2: ( rule__InitializationExpression__FunctionNameAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInitializationExpressionAccess().getFunctionNameAssignment_2()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:10655:2: ( rule__InitializationExpression__FunctionNameAssignment_2 )
            // InternalSimpleBeeLangTestLanguage.g:10655:3: rule__InitializationExpression__FunctionNameAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__InitializationExpression__FunctionNameAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInitializationExpressionAccess().getFunctionNameAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 763, rule__InitializationExpression__Group__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InitializationExpression__Group__2__Impl"


    // $ANTLR start "rule__InitializationExpression__Group__3"
    // InternalSimpleBeeLangTestLanguage.g:10663:1: rule__InitializationExpression__Group__3 : rule__InitializationExpression__Group__3__Impl ;
    public final void rule__InitializationExpression__Group__3() throws RecognitionException {
        int rule__InitializationExpression__Group__3_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 764) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:10667:1: ( rule__InitializationExpression__Group__3__Impl )
            // InternalSimpleBeeLangTestLanguage.g:10668:2: rule__InitializationExpression__Group__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__InitializationExpression__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 764, rule__InitializationExpression__Group__3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InitializationExpression__Group__3"


    // $ANTLR start "rule__InitializationExpression__Group__3__Impl"
    // InternalSimpleBeeLangTestLanguage.g:10674:1: rule__InitializationExpression__Group__3__Impl : ( ( rule__InitializationExpression__RightExprAssignment_3 ) ) ;
    public final void rule__InitializationExpression__Group__3__Impl() throws RecognitionException {
        int rule__InitializationExpression__Group__3__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 765) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:10678:1: ( ( ( rule__InitializationExpression__RightExprAssignment_3 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:10679:1: ( ( rule__InitializationExpression__RightExprAssignment_3 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:10679:1: ( ( rule__InitializationExpression__RightExprAssignment_3 ) )
            // InternalSimpleBeeLangTestLanguage.g:10680:2: ( rule__InitializationExpression__RightExprAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInitializationExpressionAccess().getRightExprAssignment_3()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:10681:2: ( rule__InitializationExpression__RightExprAssignment_3 )
            // InternalSimpleBeeLangTestLanguage.g:10681:3: rule__InitializationExpression__RightExprAssignment_3
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__InitializationExpression__RightExprAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInitializationExpressionAccess().getRightExprAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 765, rule__InitializationExpression__Group__3__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InitializationExpression__Group__3__Impl"


    // $ANTLR start "rule__FeatureOfThis__Group__0"
    // InternalSimpleBeeLangTestLanguage.g:10690:1: rule__FeatureOfThis__Group__0 : rule__FeatureOfThis__Group__0__Impl rule__FeatureOfThis__Group__1 ;
    public final void rule__FeatureOfThis__Group__0() throws RecognitionException {
        int rule__FeatureOfThis__Group__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 766) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:10694:1: ( rule__FeatureOfThis__Group__0__Impl rule__FeatureOfThis__Group__1 )
            // InternalSimpleBeeLangTestLanguage.g:10695:2: rule__FeatureOfThis__Group__0__Impl rule__FeatureOfThis__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_9);
            rule__FeatureOfThis__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FeatureOfThis__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 766, rule__FeatureOfThis__Group__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FeatureOfThis__Group__0"


    // $ANTLR start "rule__FeatureOfThis__Group__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:10702:1: rule__FeatureOfThis__Group__0__Impl : ( () ) ;
    public final void rule__FeatureOfThis__Group__0__Impl() throws RecognitionException {
        int rule__FeatureOfThis__Group__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 767) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:10706:1: ( ( () ) )
            // InternalSimpleBeeLangTestLanguage.g:10707:1: ( () )
            {
            // InternalSimpleBeeLangTestLanguage.g:10707:1: ( () )
            // InternalSimpleBeeLangTestLanguage.g:10708:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFeatureOfThisAccess().getFeatureExpressionAction_0()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:10709:2: ()
            // InternalSimpleBeeLangTestLanguage.g:10709:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFeatureOfThisAccess().getFeatureExpressionAction_0()); 
            }

            }


            }

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 767, rule__FeatureOfThis__Group__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FeatureOfThis__Group__0__Impl"


    // $ANTLR start "rule__FeatureOfThis__Group__1"
    // InternalSimpleBeeLangTestLanguage.g:10717:1: rule__FeatureOfThis__Group__1 : rule__FeatureOfThis__Group__1__Impl ;
    public final void rule__FeatureOfThis__Group__1() throws RecognitionException {
        int rule__FeatureOfThis__Group__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 768) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:10721:1: ( rule__FeatureOfThis__Group__1__Impl )
            // InternalSimpleBeeLangTestLanguage.g:10722:2: rule__FeatureOfThis__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FeatureOfThis__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 768, rule__FeatureOfThis__Group__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FeatureOfThis__Group__1"


    // $ANTLR start "rule__FeatureOfThis__Group__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:10728:1: rule__FeatureOfThis__Group__1__Impl : ( ( rule__FeatureOfThis__FeatureNameAssignment_1 ) ) ;
    public final void rule__FeatureOfThis__Group__1__Impl() throws RecognitionException {
        int rule__FeatureOfThis__Group__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 769) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:10732:1: ( ( ( rule__FeatureOfThis__FeatureNameAssignment_1 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:10733:1: ( ( rule__FeatureOfThis__FeatureNameAssignment_1 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:10733:1: ( ( rule__FeatureOfThis__FeatureNameAssignment_1 ) )
            // InternalSimpleBeeLangTestLanguage.g:10734:2: ( rule__FeatureOfThis__FeatureNameAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFeatureOfThisAccess().getFeatureNameAssignment_1()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:10735:2: ( rule__FeatureOfThis__FeatureNameAssignment_1 )
            // InternalSimpleBeeLangTestLanguage.g:10735:3: rule__FeatureOfThis__FeatureNameAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FeatureOfThis__FeatureNameAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFeatureOfThisAccess().getFeatureNameAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 769, rule__FeatureOfThis__Group__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FeatureOfThis__Group__1__Impl"


    // $ANTLR start "rule__LiteralFunction__Group__0"
    // InternalSimpleBeeLangTestLanguage.g:10744:1: rule__LiteralFunction__Group__0 : rule__LiteralFunction__Group__0__Impl rule__LiteralFunction__Group__1 ;
    public final void rule__LiteralFunction__Group__0() throws RecognitionException {
        int rule__LiteralFunction__Group__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 770) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:10748:1: ( rule__LiteralFunction__Group__0__Impl rule__LiteralFunction__Group__1 )
            // InternalSimpleBeeLangTestLanguage.g:10749:2: rule__LiteralFunction__Group__0__Impl rule__LiteralFunction__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_73);
            rule__LiteralFunction__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LiteralFunction__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 770, rule__LiteralFunction__Group__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralFunction__Group__0"


    // $ANTLR start "rule__LiteralFunction__Group__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:10756:1: rule__LiteralFunction__Group__0__Impl : ( '{' ) ;
    public final void rule__LiteralFunction__Group__0__Impl() throws RecognitionException {
        int rule__LiteralFunction__Group__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 771) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:10760:1: ( ( '{' ) )
            // InternalSimpleBeeLangTestLanguage.g:10761:1: ( '{' )
            {
            // InternalSimpleBeeLangTestLanguage.g:10761:1: ( '{' )
            // InternalSimpleBeeLangTestLanguage.g:10762:2: '{'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLiteralFunctionAccess().getLeftCurlyBracketKeyword_0()); 
            }
            match(input,44,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLiteralFunctionAccess().getLeftCurlyBracketKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 771, rule__LiteralFunction__Group__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralFunction__Group__0__Impl"


    // $ANTLR start "rule__LiteralFunction__Group__1"
    // InternalSimpleBeeLangTestLanguage.g:10771:1: rule__LiteralFunction__Group__1 : rule__LiteralFunction__Group__1__Impl rule__LiteralFunction__Group__2 ;
    public final void rule__LiteralFunction__Group__1() throws RecognitionException {
        int rule__LiteralFunction__Group__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 772) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:10775:1: ( rule__LiteralFunction__Group__1__Impl rule__LiteralFunction__Group__2 )
            // InternalSimpleBeeLangTestLanguage.g:10776:2: rule__LiteralFunction__Group__1__Impl rule__LiteralFunction__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_8);
            rule__LiteralFunction__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LiteralFunction__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 772, rule__LiteralFunction__Group__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralFunction__Group__1"


    // $ANTLR start "rule__LiteralFunction__Group__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:10783:1: rule__LiteralFunction__Group__1__Impl : ( ruleClosureExpression ) ;
    public final void rule__LiteralFunction__Group__1__Impl() throws RecognitionException {
        int rule__LiteralFunction__Group__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 773) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:10787:1: ( ( ruleClosureExpression ) )
            // InternalSimpleBeeLangTestLanguage.g:10788:1: ( ruleClosureExpression )
            {
            // InternalSimpleBeeLangTestLanguage.g:10788:1: ( ruleClosureExpression )
            // InternalSimpleBeeLangTestLanguage.g:10789:2: ruleClosureExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLiteralFunctionAccess().getClosureExpressionParserRuleCall_1()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleClosureExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLiteralFunctionAccess().getClosureExpressionParserRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 773, rule__LiteralFunction__Group__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralFunction__Group__1__Impl"


    // $ANTLR start "rule__LiteralFunction__Group__2"
    // InternalSimpleBeeLangTestLanguage.g:10798:1: rule__LiteralFunction__Group__2 : rule__LiteralFunction__Group__2__Impl ;
    public final void rule__LiteralFunction__Group__2() throws RecognitionException {
        int rule__LiteralFunction__Group__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 774) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:10802:1: ( rule__LiteralFunction__Group__2__Impl )
            // InternalSimpleBeeLangTestLanguage.g:10803:2: rule__LiteralFunction__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LiteralFunction__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 774, rule__LiteralFunction__Group__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralFunction__Group__2"


    // $ANTLR start "rule__LiteralFunction__Group__2__Impl"
    // InternalSimpleBeeLangTestLanguage.g:10809:1: rule__LiteralFunction__Group__2__Impl : ( '}' ) ;
    public final void rule__LiteralFunction__Group__2__Impl() throws RecognitionException {
        int rule__LiteralFunction__Group__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 775) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:10813:1: ( ( '}' ) )
            // InternalSimpleBeeLangTestLanguage.g:10814:1: ( '}' )
            {
            // InternalSimpleBeeLangTestLanguage.g:10814:1: ( '}' )
            // InternalSimpleBeeLangTestLanguage.g:10815:2: '}'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLiteralFunctionAccess().getRightCurlyBracketKeyword_2()); 
            }
            match(input,45,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLiteralFunctionAccess().getRightCurlyBracketKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 775, rule__LiteralFunction__Group__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralFunction__Group__2__Impl"


    // $ANTLR start "rule__ClosureExpression__Group__0"
    // InternalSimpleBeeLangTestLanguage.g:10825:1: rule__ClosureExpression__Group__0 : rule__ClosureExpression__Group__0__Impl rule__ClosureExpression__Group__1 ;
    public final void rule__ClosureExpression__Group__0() throws RecognitionException {
        int rule__ClosureExpression__Group__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 776) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:10829:1: ( rule__ClosureExpression__Group__0__Impl rule__ClosureExpression__Group__1 )
            // InternalSimpleBeeLangTestLanguage.g:10830:2: rule__ClosureExpression__Group__0__Impl rule__ClosureExpression__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_73);
            rule__ClosureExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 776, rule__ClosureExpression__Group__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group__0"


    // $ANTLR start "rule__ClosureExpression__Group__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:10837:1: rule__ClosureExpression__Group__0__Impl : ( () ) ;
    public final void rule__ClosureExpression__Group__0__Impl() throws RecognitionException {
        int rule__ClosureExpression__Group__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 777) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:10841:1: ( ( () ) )
            // InternalSimpleBeeLangTestLanguage.g:10842:1: ( () )
            {
            // InternalSimpleBeeLangTestLanguage.g:10842:1: ( () )
            // InternalSimpleBeeLangTestLanguage.g:10843:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureExpressionAccess().getFunctionAction_0()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:10844:2: ()
            // InternalSimpleBeeLangTestLanguage.g:10844:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureExpressionAccess().getFunctionAction_0()); 
            }

            }


            }

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 777, rule__ClosureExpression__Group__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group__0__Impl"


    // $ANTLR start "rule__ClosureExpression__Group__1"
    // InternalSimpleBeeLangTestLanguage.g:10852:1: rule__ClosureExpression__Group__1 : rule__ClosureExpression__Group__1__Impl rule__ClosureExpression__Group__2 ;
    public final void rule__ClosureExpression__Group__1() throws RecognitionException {
        int rule__ClosureExpression__Group__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 778) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:10856:1: ( rule__ClosureExpression__Group__1__Impl rule__ClosureExpression__Group__2 )
            // InternalSimpleBeeLangTestLanguage.g:10857:2: rule__ClosureExpression__Group__1__Impl rule__ClosureExpression__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_73);
            rule__ClosureExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureExpression__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 778, rule__ClosureExpression__Group__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group__1"


    // $ANTLR start "rule__ClosureExpression__Group__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:10864:1: rule__ClosureExpression__Group__1__Impl : ( ( rule__ClosureExpression__Group_1__0 )? ) ;
    public final void rule__ClosureExpression__Group__1__Impl() throws RecognitionException {
        int rule__ClosureExpression__Group__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 779) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:10868:1: ( ( ( rule__ClosureExpression__Group_1__0 )? ) )
            // InternalSimpleBeeLangTestLanguage.g:10869:1: ( ( rule__ClosureExpression__Group_1__0 )? )
            {
            // InternalSimpleBeeLangTestLanguage.g:10869:1: ( ( rule__ClosureExpression__Group_1__0 )? )
            // InternalSimpleBeeLangTestLanguage.g:10870:2: ( rule__ClosureExpression__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureExpressionAccess().getGroup_1()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:10871:2: ( rule__ClosureExpression__Group_1__0 )?
            int alt85=2;
            int LA85_0 = input.LA(1);

            if ( (LA85_0==28) ) {
                alt85=1;
            }
            switch (alt85) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:10871:3: rule__ClosureExpression__Group_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ClosureExpression__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 779, rule__ClosureExpression__Group__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group__1__Impl"


    // $ANTLR start "rule__ClosureExpression__Group__2"
    // InternalSimpleBeeLangTestLanguage.g:10879:1: rule__ClosureExpression__Group__2 : rule__ClosureExpression__Group__2__Impl rule__ClosureExpression__Group__3 ;
    public final void rule__ClosureExpression__Group__2() throws RecognitionException {
        int rule__ClosureExpression__Group__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 780) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:10883:1: ( rule__ClosureExpression__Group__2__Impl rule__ClosureExpression__Group__3 )
            // InternalSimpleBeeLangTestLanguage.g:10884:2: rule__ClosureExpression__Group__2__Impl rule__ClosureExpression__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_73);
            rule__ClosureExpression__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureExpression__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 780, rule__ClosureExpression__Group__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group__2"


    // $ANTLR start "rule__ClosureExpression__Group__2__Impl"
    // InternalSimpleBeeLangTestLanguage.g:10891:1: rule__ClosureExpression__Group__2__Impl : ( ( rule__ClosureExpression__Alternatives_2 )? ) ;
    public final void rule__ClosureExpression__Group__2__Impl() throws RecognitionException {
        int rule__ClosureExpression__Group__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 781) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:10895:1: ( ( ( rule__ClosureExpression__Alternatives_2 )? ) )
            // InternalSimpleBeeLangTestLanguage.g:10896:1: ( ( rule__ClosureExpression__Alternatives_2 )? )
            {
            // InternalSimpleBeeLangTestLanguage.g:10896:1: ( ( rule__ClosureExpression__Alternatives_2 )? )
            // InternalSimpleBeeLangTestLanguage.g:10897:2: ( rule__ClosureExpression__Alternatives_2 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureExpressionAccess().getAlternatives_2()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:10898:2: ( rule__ClosureExpression__Alternatives_2 )?
            int alt86=2;
            alt86 = dfa86.predict(input);
            switch (alt86) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:10898:3: rule__ClosureExpression__Alternatives_2
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ClosureExpression__Alternatives_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureExpressionAccess().getAlternatives_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 781, rule__ClosureExpression__Group__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group__2__Impl"


    // $ANTLR start "rule__ClosureExpression__Group__3"
    // InternalSimpleBeeLangTestLanguage.g:10906:1: rule__ClosureExpression__Group__3 : rule__ClosureExpression__Group__3__Impl rule__ClosureExpression__Group__4 ;
    public final void rule__ClosureExpression__Group__3() throws RecognitionException {
        int rule__ClosureExpression__Group__3_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 782) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:10910:1: ( rule__ClosureExpression__Group__3__Impl rule__ClosureExpression__Group__4 )
            // InternalSimpleBeeLangTestLanguage.g:10911:2: rule__ClosureExpression__Group__3__Impl rule__ClosureExpression__Group__4
            {
            pushFollow(FollowSets000.FOLLOW_66);
            rule__ClosureExpression__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureExpression__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 782, rule__ClosureExpression__Group__3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group__3"


    // $ANTLR start "rule__ClosureExpression__Group__3__Impl"
    // InternalSimpleBeeLangTestLanguage.g:10918:1: rule__ClosureExpression__Group__3__Impl : ( '|' ) ;
    public final void rule__ClosureExpression__Group__3__Impl() throws RecognitionException {
        int rule__ClosureExpression__Group__3__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 783) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:10922:1: ( ( '|' ) )
            // InternalSimpleBeeLangTestLanguage.g:10923:1: ( '|' )
            {
            // InternalSimpleBeeLangTestLanguage.g:10923:1: ( '|' )
            // InternalSimpleBeeLangTestLanguage.g:10924:2: '|'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureExpressionAccess().getVerticalLineKeyword_3()); 
            }
            match(input,72,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureExpressionAccess().getVerticalLineKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 783, rule__ClosureExpression__Group__3__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group__3__Impl"


    // $ANTLR start "rule__ClosureExpression__Group__4"
    // InternalSimpleBeeLangTestLanguage.g:10933:1: rule__ClosureExpression__Group__4 : rule__ClosureExpression__Group__4__Impl ;
    public final void rule__ClosureExpression__Group__4() throws RecognitionException {
        int rule__ClosureExpression__Group__4_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 784) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:10937:1: ( rule__ClosureExpression__Group__4__Impl )
            // InternalSimpleBeeLangTestLanguage.g:10938:2: rule__ClosureExpression__Group__4__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureExpression__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 784, rule__ClosureExpression__Group__4_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group__4"


    // $ANTLR start "rule__ClosureExpression__Group__4__Impl"
    // InternalSimpleBeeLangTestLanguage.g:10944:1: rule__ClosureExpression__Group__4__Impl : ( ( rule__ClosureExpression__FuncExprAssignment_4 ) ) ;
    public final void rule__ClosureExpression__Group__4__Impl() throws RecognitionException {
        int rule__ClosureExpression__Group__4__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 785) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:10948:1: ( ( ( rule__ClosureExpression__FuncExprAssignment_4 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:10949:1: ( ( rule__ClosureExpression__FuncExprAssignment_4 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:10949:1: ( ( rule__ClosureExpression__FuncExprAssignment_4 ) )
            // InternalSimpleBeeLangTestLanguage.g:10950:2: ( rule__ClosureExpression__FuncExprAssignment_4 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureExpressionAccess().getFuncExprAssignment_4()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:10951:2: ( rule__ClosureExpression__FuncExprAssignment_4 )
            // InternalSimpleBeeLangTestLanguage.g:10951:3: rule__ClosureExpression__FuncExprAssignment_4
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureExpression__FuncExprAssignment_4();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureExpressionAccess().getFuncExprAssignment_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 785, rule__ClosureExpression__Group__4__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group__4__Impl"


    // $ANTLR start "rule__ClosureExpression__Group_1__0"
    // InternalSimpleBeeLangTestLanguage.g:10960:1: rule__ClosureExpression__Group_1__0 : rule__ClosureExpression__Group_1__0__Impl rule__ClosureExpression__Group_1__1 ;
    public final void rule__ClosureExpression__Group_1__0() throws RecognitionException {
        int rule__ClosureExpression__Group_1__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 786) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:10964:1: ( rule__ClosureExpression__Group_1__0__Impl rule__ClosureExpression__Group_1__1 )
            // InternalSimpleBeeLangTestLanguage.g:10965:2: rule__ClosureExpression__Group_1__0__Impl rule__ClosureExpression__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_28);
            rule__ClosureExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 786, rule__ClosureExpression__Group_1__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group_1__0"


    // $ANTLR start "rule__ClosureExpression__Group_1__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:10972:1: rule__ClosureExpression__Group_1__0__Impl : ( '<' ) ;
    public final void rule__ClosureExpression__Group_1__0__Impl() throws RecognitionException {
        int rule__ClosureExpression__Group_1__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 787) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:10976:1: ( ( '<' ) )
            // InternalSimpleBeeLangTestLanguage.g:10977:1: ( '<' )
            {
            // InternalSimpleBeeLangTestLanguage.g:10977:1: ( '<' )
            // InternalSimpleBeeLangTestLanguage.g:10978:2: '<'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureExpressionAccess().getLessThanSignKeyword_1_0()); 
            }
            match(input,28,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureExpressionAccess().getLessThanSignKeyword_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 787, rule__ClosureExpression__Group_1__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group_1__0__Impl"


    // $ANTLR start "rule__ClosureExpression__Group_1__1"
    // InternalSimpleBeeLangTestLanguage.g:10987:1: rule__ClosureExpression__Group_1__1 : rule__ClosureExpression__Group_1__1__Impl rule__ClosureExpression__Group_1__2 ;
    public final void rule__ClosureExpression__Group_1__1() throws RecognitionException {
        int rule__ClosureExpression__Group_1__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 788) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:10991:1: ( rule__ClosureExpression__Group_1__1__Impl rule__ClosureExpression__Group_1__2 )
            // InternalSimpleBeeLangTestLanguage.g:10992:2: rule__ClosureExpression__Group_1__1__Impl rule__ClosureExpression__Group_1__2
            {
            pushFollow(FollowSets000.FOLLOW_74);
            rule__ClosureExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureExpression__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 788, rule__ClosureExpression__Group_1__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group_1__1"


    // $ANTLR start "rule__ClosureExpression__Group_1__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:10999:1: rule__ClosureExpression__Group_1__1__Impl : ( ( rule__ClosureExpression__ReturnTypeAssignment_1_1 ) ) ;
    public final void rule__ClosureExpression__Group_1__1__Impl() throws RecognitionException {
        int rule__ClosureExpression__Group_1__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 789) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:11003:1: ( ( ( rule__ClosureExpression__ReturnTypeAssignment_1_1 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:11004:1: ( ( rule__ClosureExpression__ReturnTypeAssignment_1_1 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:11004:1: ( ( rule__ClosureExpression__ReturnTypeAssignment_1_1 ) )
            // InternalSimpleBeeLangTestLanguage.g:11005:2: ( rule__ClosureExpression__ReturnTypeAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureExpressionAccess().getReturnTypeAssignment_1_1()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:11006:2: ( rule__ClosureExpression__ReturnTypeAssignment_1_1 )
            // InternalSimpleBeeLangTestLanguage.g:11006:3: rule__ClosureExpression__ReturnTypeAssignment_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureExpression__ReturnTypeAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureExpressionAccess().getReturnTypeAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 789, rule__ClosureExpression__Group_1__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group_1__1__Impl"


    // $ANTLR start "rule__ClosureExpression__Group_1__2"
    // InternalSimpleBeeLangTestLanguage.g:11014:1: rule__ClosureExpression__Group_1__2 : rule__ClosureExpression__Group_1__2__Impl ;
    public final void rule__ClosureExpression__Group_1__2() throws RecognitionException {
        int rule__ClosureExpression__Group_1__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 790) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:11018:1: ( rule__ClosureExpression__Group_1__2__Impl )
            // InternalSimpleBeeLangTestLanguage.g:11019:2: rule__ClosureExpression__Group_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureExpression__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 790, rule__ClosureExpression__Group_1__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group_1__2"


    // $ANTLR start "rule__ClosureExpression__Group_1__2__Impl"
    // InternalSimpleBeeLangTestLanguage.g:11025:1: rule__ClosureExpression__Group_1__2__Impl : ( '>' ) ;
    public final void rule__ClosureExpression__Group_1__2__Impl() throws RecognitionException {
        int rule__ClosureExpression__Group_1__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 791) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:11029:1: ( ( '>' ) )
            // InternalSimpleBeeLangTestLanguage.g:11030:1: ( '>' )
            {
            // InternalSimpleBeeLangTestLanguage.g:11030:1: ( '>' )
            // InternalSimpleBeeLangTestLanguage.g:11031:2: '>'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureExpressionAccess().getGreaterThanSignKeyword_1_2()); 
            }
            match(input,27,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureExpressionAccess().getGreaterThanSignKeyword_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 791, rule__ClosureExpression__Group_1__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group_1__2__Impl"


    // $ANTLR start "rule__ClosureExpression__Group_2_0__0"
    // InternalSimpleBeeLangTestLanguage.g:11041:1: rule__ClosureExpression__Group_2_0__0 : rule__ClosureExpression__Group_2_0__0__Impl rule__ClosureExpression__Group_2_0__1 ;
    public final void rule__ClosureExpression__Group_2_0__0() throws RecognitionException {
        int rule__ClosureExpression__Group_2_0__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 792) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:11045:1: ( rule__ClosureExpression__Group_2_0__0__Impl rule__ClosureExpression__Group_2_0__1 )
            // InternalSimpleBeeLangTestLanguage.g:11046:2: rule__ClosureExpression__Group_2_0__0__Impl rule__ClosureExpression__Group_2_0__1
            {
            pushFollow(FollowSets000.FOLLOW_26);
            rule__ClosureExpression__Group_2_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureExpression__Group_2_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 792, rule__ClosureExpression__Group_2_0__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group_2_0__0"


    // $ANTLR start "rule__ClosureExpression__Group_2_0__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:11053:1: rule__ClosureExpression__Group_2_0__0__Impl : ( ( '|' )? ) ;
    public final void rule__ClosureExpression__Group_2_0__0__Impl() throws RecognitionException {
        int rule__ClosureExpression__Group_2_0__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 793) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:11057:1: ( ( ( '|' )? ) )
            // InternalSimpleBeeLangTestLanguage.g:11058:1: ( ( '|' )? )
            {
            // InternalSimpleBeeLangTestLanguage.g:11058:1: ( ( '|' )? )
            // InternalSimpleBeeLangTestLanguage.g:11059:2: ( '|' )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureExpressionAccess().getVerticalLineKeyword_2_0_0()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:11060:2: ( '|' )?
            int alt87=2;
            int LA87_0 = input.LA(1);

            if ( (LA87_0==72) ) {
                alt87=1;
            }
            switch (alt87) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:11060:3: '|'
                    {
                    match(input,72,FollowSets000.FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureExpressionAccess().getVerticalLineKeyword_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 793, rule__ClosureExpression__Group_2_0__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group_2_0__0__Impl"


    // $ANTLR start "rule__ClosureExpression__Group_2_0__1"
    // InternalSimpleBeeLangTestLanguage.g:11068:1: rule__ClosureExpression__Group_2_0__1 : rule__ClosureExpression__Group_2_0__1__Impl ;
    public final void rule__ClosureExpression__Group_2_0__1() throws RecognitionException {
        int rule__ClosureExpression__Group_2_0__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 794) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:11072:1: ( rule__ClosureExpression__Group_2_0__1__Impl )
            // InternalSimpleBeeLangTestLanguage.g:11073:2: rule__ClosureExpression__Group_2_0__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureExpression__Group_2_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 794, rule__ClosureExpression__Group_2_0__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group_2_0__1"


    // $ANTLR start "rule__ClosureExpression__Group_2_0__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:11079:1: rule__ClosureExpression__Group_2_0__1__Impl : ( ( rule__ClosureExpression__Group_2_0_1__0 ) ) ;
    public final void rule__ClosureExpression__Group_2_0__1__Impl() throws RecognitionException {
        int rule__ClosureExpression__Group_2_0__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 795) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:11083:1: ( ( ( rule__ClosureExpression__Group_2_0_1__0 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:11084:1: ( ( rule__ClosureExpression__Group_2_0_1__0 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:11084:1: ( ( rule__ClosureExpression__Group_2_0_1__0 ) )
            // InternalSimpleBeeLangTestLanguage.g:11085:2: ( rule__ClosureExpression__Group_2_0_1__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureExpressionAccess().getGroup_2_0_1()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:11086:2: ( rule__ClosureExpression__Group_2_0_1__0 )
            // InternalSimpleBeeLangTestLanguage.g:11086:3: rule__ClosureExpression__Group_2_0_1__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureExpression__Group_2_0_1__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureExpressionAccess().getGroup_2_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 795, rule__ClosureExpression__Group_2_0__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group_2_0__1__Impl"


    // $ANTLR start "rule__ClosureExpression__Group_2_0_1__0"
    // InternalSimpleBeeLangTestLanguage.g:11095:1: rule__ClosureExpression__Group_2_0_1__0 : rule__ClosureExpression__Group_2_0_1__0__Impl rule__ClosureExpression__Group_2_0_1__1 ;
    public final void rule__ClosureExpression__Group_2_0_1__0() throws RecognitionException {
        int rule__ClosureExpression__Group_2_0_1__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 796) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:11099:1: ( rule__ClosureExpression__Group_2_0_1__0__Impl rule__ClosureExpression__Group_2_0_1__1 )
            // InternalSimpleBeeLangTestLanguage.g:11100:2: rule__ClosureExpression__Group_2_0_1__0__Impl rule__ClosureExpression__Group_2_0_1__1
            {
            pushFollow(FollowSets000.FOLLOW_10);
            rule__ClosureExpression__Group_2_0_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureExpression__Group_2_0_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 796, rule__ClosureExpression__Group_2_0_1__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group_2_0_1__0"


    // $ANTLR start "rule__ClosureExpression__Group_2_0_1__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:11107:1: rule__ClosureExpression__Group_2_0_1__0__Impl : ( ( rule__ClosureExpression__ParametersAssignment_2_0_1_0 ) ) ;
    public final void rule__ClosureExpression__Group_2_0_1__0__Impl() throws RecognitionException {
        int rule__ClosureExpression__Group_2_0_1__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 797) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:11111:1: ( ( ( rule__ClosureExpression__ParametersAssignment_2_0_1_0 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:11112:1: ( ( rule__ClosureExpression__ParametersAssignment_2_0_1_0 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:11112:1: ( ( rule__ClosureExpression__ParametersAssignment_2_0_1_0 ) )
            // InternalSimpleBeeLangTestLanguage.g:11113:2: ( rule__ClosureExpression__ParametersAssignment_2_0_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureExpressionAccess().getParametersAssignment_2_0_1_0()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:11114:2: ( rule__ClosureExpression__ParametersAssignment_2_0_1_0 )
            // InternalSimpleBeeLangTestLanguage.g:11114:3: rule__ClosureExpression__ParametersAssignment_2_0_1_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureExpression__ParametersAssignment_2_0_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureExpressionAccess().getParametersAssignment_2_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 797, rule__ClosureExpression__Group_2_0_1__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group_2_0_1__0__Impl"


    // $ANTLR start "rule__ClosureExpression__Group_2_0_1__1"
    // InternalSimpleBeeLangTestLanguage.g:11122:1: rule__ClosureExpression__Group_2_0_1__1 : rule__ClosureExpression__Group_2_0_1__1__Impl rule__ClosureExpression__Group_2_0_1__2 ;
    public final void rule__ClosureExpression__Group_2_0_1__1() throws RecognitionException {
        int rule__ClosureExpression__Group_2_0_1__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 798) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:11126:1: ( rule__ClosureExpression__Group_2_0_1__1__Impl rule__ClosureExpression__Group_2_0_1__2 )
            // InternalSimpleBeeLangTestLanguage.g:11127:2: rule__ClosureExpression__Group_2_0_1__1__Impl rule__ClosureExpression__Group_2_0_1__2
            {
            pushFollow(FollowSets000.FOLLOW_10);
            rule__ClosureExpression__Group_2_0_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureExpression__Group_2_0_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 798, rule__ClosureExpression__Group_2_0_1__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group_2_0_1__1"


    // $ANTLR start "rule__ClosureExpression__Group_2_0_1__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:11134:1: rule__ClosureExpression__Group_2_0_1__1__Impl : ( ( rule__ClosureExpression__Group_2_0_1_1__0 )* ) ;
    public final void rule__ClosureExpression__Group_2_0_1__1__Impl() throws RecognitionException {
        int rule__ClosureExpression__Group_2_0_1__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 799) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:11138:1: ( ( ( rule__ClosureExpression__Group_2_0_1_1__0 )* ) )
            // InternalSimpleBeeLangTestLanguage.g:11139:1: ( ( rule__ClosureExpression__Group_2_0_1_1__0 )* )
            {
            // InternalSimpleBeeLangTestLanguage.g:11139:1: ( ( rule__ClosureExpression__Group_2_0_1_1__0 )* )
            // InternalSimpleBeeLangTestLanguage.g:11140:2: ( rule__ClosureExpression__Group_2_0_1_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureExpressionAccess().getGroup_2_0_1_1()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:11141:2: ( rule__ClosureExpression__Group_2_0_1_1__0 )*
            loop88:
            do {
                int alt88=2;
                int LA88_0 = input.LA(1);

                if ( (LA88_0==48) ) {
                    int LA88_1 = input.LA(2);

                    if ( (LA88_1==RULE_ID||LA88_1==60) ) {
                        alt88=1;
                    }


                }


                switch (alt88) {
            	case 1 :
            	    // InternalSimpleBeeLangTestLanguage.g:11141:3: rule__ClosureExpression__Group_2_0_1_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_11);
            	    rule__ClosureExpression__Group_2_0_1_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop88;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureExpressionAccess().getGroup_2_0_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 799, rule__ClosureExpression__Group_2_0_1__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group_2_0_1__1__Impl"


    // $ANTLR start "rule__ClosureExpression__Group_2_0_1__2"
    // InternalSimpleBeeLangTestLanguage.g:11149:1: rule__ClosureExpression__Group_2_0_1__2 : rule__ClosureExpression__Group_2_0_1__2__Impl ;
    public final void rule__ClosureExpression__Group_2_0_1__2() throws RecognitionException {
        int rule__ClosureExpression__Group_2_0_1__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 800) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:11153:1: ( rule__ClosureExpression__Group_2_0_1__2__Impl )
            // InternalSimpleBeeLangTestLanguage.g:11154:2: rule__ClosureExpression__Group_2_0_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureExpression__Group_2_0_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 800, rule__ClosureExpression__Group_2_0_1__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group_2_0_1__2"

}

@SuppressWarnings("all")
abstract class InternalSimpleBeeLangTestLanguageParser10 extends InternalSimpleBeeLangTestLanguageParser9 {

        InternalSimpleBeeLangTestLanguageParser10(TokenStream input) {
            this(input, new RecognizerSharedState());
        }

        InternalSimpleBeeLangTestLanguageParser10(TokenStream input, RecognizerSharedState state) {
            super(input, state);
        }

    // $ANTLR start "rule__ClosureExpression__Group_2_0_1__2__Impl"
    // InternalSimpleBeeLangTestLanguage.g:11160:1: rule__ClosureExpression__Group_2_0_1__2__Impl : ( ( rule__ClosureExpression__Group_2_0_1_2__0 )? ) ;
    public final void rule__ClosureExpression__Group_2_0_1__2__Impl() throws RecognitionException {
        int rule__ClosureExpression__Group_2_0_1__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 801) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:11164:1: ( ( ( rule__ClosureExpression__Group_2_0_1_2__0 )? ) )
            // InternalSimpleBeeLangTestLanguage.g:11165:1: ( ( rule__ClosureExpression__Group_2_0_1_2__0 )? )
            {
            // InternalSimpleBeeLangTestLanguage.g:11165:1: ( ( rule__ClosureExpression__Group_2_0_1_2__0 )? )
            // InternalSimpleBeeLangTestLanguage.g:11166:2: ( rule__ClosureExpression__Group_2_0_1_2__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureExpressionAccess().getGroup_2_0_1_2()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:11167:2: ( rule__ClosureExpression__Group_2_0_1_2__0 )?
            int alt89=2;
            int LA89_0 = input.LA(1);

            if ( (LA89_0==48) ) {
                alt89=1;
            }
            switch (alt89) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:11167:3: rule__ClosureExpression__Group_2_0_1_2__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ClosureExpression__Group_2_0_1_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureExpressionAccess().getGroup_2_0_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 801, rule__ClosureExpression__Group_2_0_1__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group_2_0_1__2__Impl"


    // $ANTLR start "rule__ClosureExpression__Group_2_0_1_1__0"
    // InternalSimpleBeeLangTestLanguage.g:11176:1: rule__ClosureExpression__Group_2_0_1_1__0 : rule__ClosureExpression__Group_2_0_1_1__0__Impl rule__ClosureExpression__Group_2_0_1_1__1 ;
    public final void rule__ClosureExpression__Group_2_0_1_1__0() throws RecognitionException {
        int rule__ClosureExpression__Group_2_0_1_1__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 802) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:11180:1: ( rule__ClosureExpression__Group_2_0_1_1__0__Impl rule__ClosureExpression__Group_2_0_1_1__1 )
            // InternalSimpleBeeLangTestLanguage.g:11181:2: rule__ClosureExpression__Group_2_0_1_1__0__Impl rule__ClosureExpression__Group_2_0_1_1__1
            {
            pushFollow(FollowSets000.FOLLOW_26);
            rule__ClosureExpression__Group_2_0_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureExpression__Group_2_0_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 802, rule__ClosureExpression__Group_2_0_1_1__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group_2_0_1_1__0"


    // $ANTLR start "rule__ClosureExpression__Group_2_0_1_1__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:11188:1: rule__ClosureExpression__Group_2_0_1_1__0__Impl : ( ',' ) ;
    public final void rule__ClosureExpression__Group_2_0_1_1__0__Impl() throws RecognitionException {
        int rule__ClosureExpression__Group_2_0_1_1__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 803) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:11192:1: ( ( ',' ) )
            // InternalSimpleBeeLangTestLanguage.g:11193:1: ( ',' )
            {
            // InternalSimpleBeeLangTestLanguage.g:11193:1: ( ',' )
            // InternalSimpleBeeLangTestLanguage.g:11194:2: ','
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureExpressionAccess().getCommaKeyword_2_0_1_1_0()); 
            }
            match(input,48,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureExpressionAccess().getCommaKeyword_2_0_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 803, rule__ClosureExpression__Group_2_0_1_1__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group_2_0_1_1__0__Impl"


    // $ANTLR start "rule__ClosureExpression__Group_2_0_1_1__1"
    // InternalSimpleBeeLangTestLanguage.g:11203:1: rule__ClosureExpression__Group_2_0_1_1__1 : rule__ClosureExpression__Group_2_0_1_1__1__Impl ;
    public final void rule__ClosureExpression__Group_2_0_1_1__1() throws RecognitionException {
        int rule__ClosureExpression__Group_2_0_1_1__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 804) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:11207:1: ( rule__ClosureExpression__Group_2_0_1_1__1__Impl )
            // InternalSimpleBeeLangTestLanguage.g:11208:2: rule__ClosureExpression__Group_2_0_1_1__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureExpression__Group_2_0_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 804, rule__ClosureExpression__Group_2_0_1_1__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group_2_0_1_1__1"


    // $ANTLR start "rule__ClosureExpression__Group_2_0_1_1__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:11214:1: rule__ClosureExpression__Group_2_0_1_1__1__Impl : ( ( rule__ClosureExpression__ParametersAssignment_2_0_1_1_1 ) ) ;
    public final void rule__ClosureExpression__Group_2_0_1_1__1__Impl() throws RecognitionException {
        int rule__ClosureExpression__Group_2_0_1_1__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 805) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:11218:1: ( ( ( rule__ClosureExpression__ParametersAssignment_2_0_1_1_1 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:11219:1: ( ( rule__ClosureExpression__ParametersAssignment_2_0_1_1_1 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:11219:1: ( ( rule__ClosureExpression__ParametersAssignment_2_0_1_1_1 ) )
            // InternalSimpleBeeLangTestLanguage.g:11220:2: ( rule__ClosureExpression__ParametersAssignment_2_0_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureExpressionAccess().getParametersAssignment_2_0_1_1_1()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:11221:2: ( rule__ClosureExpression__ParametersAssignment_2_0_1_1_1 )
            // InternalSimpleBeeLangTestLanguage.g:11221:3: rule__ClosureExpression__ParametersAssignment_2_0_1_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureExpression__ParametersAssignment_2_0_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureExpressionAccess().getParametersAssignment_2_0_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 805, rule__ClosureExpression__Group_2_0_1_1__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group_2_0_1_1__1__Impl"


    // $ANTLR start "rule__ClosureExpression__Group_2_0_1_2__0"
    // InternalSimpleBeeLangTestLanguage.g:11230:1: rule__ClosureExpression__Group_2_0_1_2__0 : rule__ClosureExpression__Group_2_0_1_2__0__Impl rule__ClosureExpression__Group_2_0_1_2__1 ;
    public final void rule__ClosureExpression__Group_2_0_1_2__0() throws RecognitionException {
        int rule__ClosureExpression__Group_2_0_1_2__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 806) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:11234:1: ( rule__ClosureExpression__Group_2_0_1_2__0__Impl rule__ClosureExpression__Group_2_0_1_2__1 )
            // InternalSimpleBeeLangTestLanguage.g:11235:2: rule__ClosureExpression__Group_2_0_1_2__0__Impl rule__ClosureExpression__Group_2_0_1_2__1
            {
            pushFollow(FollowSets000.FOLLOW_31);
            rule__ClosureExpression__Group_2_0_1_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureExpression__Group_2_0_1_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 806, rule__ClosureExpression__Group_2_0_1_2__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group_2_0_1_2__0"


    // $ANTLR start "rule__ClosureExpression__Group_2_0_1_2__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:11242:1: rule__ClosureExpression__Group_2_0_1_2__0__Impl : ( ',' ) ;
    public final void rule__ClosureExpression__Group_2_0_1_2__0__Impl() throws RecognitionException {
        int rule__ClosureExpression__Group_2_0_1_2__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 807) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:11246:1: ( ( ',' ) )
            // InternalSimpleBeeLangTestLanguage.g:11247:1: ( ',' )
            {
            // InternalSimpleBeeLangTestLanguage.g:11247:1: ( ',' )
            // InternalSimpleBeeLangTestLanguage.g:11248:2: ','
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureExpressionAccess().getCommaKeyword_2_0_1_2_0()); 
            }
            match(input,48,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureExpressionAccess().getCommaKeyword_2_0_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 807, rule__ClosureExpression__Group_2_0_1_2__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group_2_0_1_2__0__Impl"


    // $ANTLR start "rule__ClosureExpression__Group_2_0_1_2__1"
    // InternalSimpleBeeLangTestLanguage.g:11257:1: rule__ClosureExpression__Group_2_0_1_2__1 : rule__ClosureExpression__Group_2_0_1_2__1__Impl rule__ClosureExpression__Group_2_0_1_2__2 ;
    public final void rule__ClosureExpression__Group_2_0_1_2__1() throws RecognitionException {
        int rule__ClosureExpression__Group_2_0_1_2__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 808) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:11261:1: ( rule__ClosureExpression__Group_2_0_1_2__1__Impl rule__ClosureExpression__Group_2_0_1_2__2 )
            // InternalSimpleBeeLangTestLanguage.g:11262:2: rule__ClosureExpression__Group_2_0_1_2__1__Impl rule__ClosureExpression__Group_2_0_1_2__2
            {
            pushFollow(FollowSets000.FOLLOW_26);
            rule__ClosureExpression__Group_2_0_1_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureExpression__Group_2_0_1_2__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 808, rule__ClosureExpression__Group_2_0_1_2__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group_2_0_1_2__1"


    // $ANTLR start "rule__ClosureExpression__Group_2_0_1_2__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:11269:1: rule__ClosureExpression__Group_2_0_1_2__1__Impl : ( ( rule__ClosureExpression__VarArgsAssignment_2_0_1_2_1 ) ) ;
    public final void rule__ClosureExpression__Group_2_0_1_2__1__Impl() throws RecognitionException {
        int rule__ClosureExpression__Group_2_0_1_2__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 809) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:11273:1: ( ( ( rule__ClosureExpression__VarArgsAssignment_2_0_1_2_1 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:11274:1: ( ( rule__ClosureExpression__VarArgsAssignment_2_0_1_2_1 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:11274:1: ( ( rule__ClosureExpression__VarArgsAssignment_2_0_1_2_1 ) )
            // InternalSimpleBeeLangTestLanguage.g:11275:2: ( rule__ClosureExpression__VarArgsAssignment_2_0_1_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureExpressionAccess().getVarArgsAssignment_2_0_1_2_1()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:11276:2: ( rule__ClosureExpression__VarArgsAssignment_2_0_1_2_1 )
            // InternalSimpleBeeLangTestLanguage.g:11276:3: rule__ClosureExpression__VarArgsAssignment_2_0_1_2_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureExpression__VarArgsAssignment_2_0_1_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureExpressionAccess().getVarArgsAssignment_2_0_1_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 809, rule__ClosureExpression__Group_2_0_1_2__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group_2_0_1_2__1__Impl"


    // $ANTLR start "rule__ClosureExpression__Group_2_0_1_2__2"
    // InternalSimpleBeeLangTestLanguage.g:11284:1: rule__ClosureExpression__Group_2_0_1_2__2 : rule__ClosureExpression__Group_2_0_1_2__2__Impl ;
    public final void rule__ClosureExpression__Group_2_0_1_2__2() throws RecognitionException {
        int rule__ClosureExpression__Group_2_0_1_2__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 810) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:11288:1: ( rule__ClosureExpression__Group_2_0_1_2__2__Impl )
            // InternalSimpleBeeLangTestLanguage.g:11289:2: rule__ClosureExpression__Group_2_0_1_2__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureExpression__Group_2_0_1_2__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 810, rule__ClosureExpression__Group_2_0_1_2__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group_2_0_1_2__2"


    // $ANTLR start "rule__ClosureExpression__Group_2_0_1_2__2__Impl"
    // InternalSimpleBeeLangTestLanguage.g:11295:1: rule__ClosureExpression__Group_2_0_1_2__2__Impl : ( ( rule__ClosureExpression__ParametersAssignment_2_0_1_2_2 ) ) ;
    public final void rule__ClosureExpression__Group_2_0_1_2__2__Impl() throws RecognitionException {
        int rule__ClosureExpression__Group_2_0_1_2__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 811) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:11299:1: ( ( ( rule__ClosureExpression__ParametersAssignment_2_0_1_2_2 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:11300:1: ( ( rule__ClosureExpression__ParametersAssignment_2_0_1_2_2 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:11300:1: ( ( rule__ClosureExpression__ParametersAssignment_2_0_1_2_2 ) )
            // InternalSimpleBeeLangTestLanguage.g:11301:2: ( rule__ClosureExpression__ParametersAssignment_2_0_1_2_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureExpressionAccess().getParametersAssignment_2_0_1_2_2()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:11302:2: ( rule__ClosureExpression__ParametersAssignment_2_0_1_2_2 )
            // InternalSimpleBeeLangTestLanguage.g:11302:3: rule__ClosureExpression__ParametersAssignment_2_0_1_2_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureExpression__ParametersAssignment_2_0_1_2_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureExpressionAccess().getParametersAssignment_2_0_1_2_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 811, rule__ClosureExpression__Group_2_0_1_2__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group_2_0_1_2__2__Impl"


    // $ANTLR start "rule__ClosureExpression__Group_2_1__0"
    // InternalSimpleBeeLangTestLanguage.g:11311:1: rule__ClosureExpression__Group_2_1__0 : rule__ClosureExpression__Group_2_1__0__Impl rule__ClosureExpression__Group_2_1__1 ;
    public final void rule__ClosureExpression__Group_2_1__0() throws RecognitionException {
        int rule__ClosureExpression__Group_2_1__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 812) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:11315:1: ( rule__ClosureExpression__Group_2_1__0__Impl rule__ClosureExpression__Group_2_1__1 )
            // InternalSimpleBeeLangTestLanguage.g:11316:2: rule__ClosureExpression__Group_2_1__0__Impl rule__ClosureExpression__Group_2_1__1
            {
            pushFollow(FollowSets000.FOLLOW_26);
            rule__ClosureExpression__Group_2_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureExpression__Group_2_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 812, rule__ClosureExpression__Group_2_1__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group_2_1__0"


    // $ANTLR start "rule__ClosureExpression__Group_2_1__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:11323:1: rule__ClosureExpression__Group_2_1__0__Impl : ( ( rule__ClosureExpression__VarArgsAssignment_2_1_0 ) ) ;
    public final void rule__ClosureExpression__Group_2_1__0__Impl() throws RecognitionException {
        int rule__ClosureExpression__Group_2_1__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 813) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:11327:1: ( ( ( rule__ClosureExpression__VarArgsAssignment_2_1_0 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:11328:1: ( ( rule__ClosureExpression__VarArgsAssignment_2_1_0 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:11328:1: ( ( rule__ClosureExpression__VarArgsAssignment_2_1_0 ) )
            // InternalSimpleBeeLangTestLanguage.g:11329:2: ( rule__ClosureExpression__VarArgsAssignment_2_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureExpressionAccess().getVarArgsAssignment_2_1_0()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:11330:2: ( rule__ClosureExpression__VarArgsAssignment_2_1_0 )
            // InternalSimpleBeeLangTestLanguage.g:11330:3: rule__ClosureExpression__VarArgsAssignment_2_1_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureExpression__VarArgsAssignment_2_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureExpressionAccess().getVarArgsAssignment_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 813, rule__ClosureExpression__Group_2_1__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group_2_1__0__Impl"


    // $ANTLR start "rule__ClosureExpression__Group_2_1__1"
    // InternalSimpleBeeLangTestLanguage.g:11338:1: rule__ClosureExpression__Group_2_1__1 : rule__ClosureExpression__Group_2_1__1__Impl ;
    public final void rule__ClosureExpression__Group_2_1__1() throws RecognitionException {
        int rule__ClosureExpression__Group_2_1__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 814) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:11342:1: ( rule__ClosureExpression__Group_2_1__1__Impl )
            // InternalSimpleBeeLangTestLanguage.g:11343:2: rule__ClosureExpression__Group_2_1__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureExpression__Group_2_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 814, rule__ClosureExpression__Group_2_1__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group_2_1__1"


    // $ANTLR start "rule__ClosureExpression__Group_2_1__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:11349:1: rule__ClosureExpression__Group_2_1__1__Impl : ( ( rule__ClosureExpression__ParametersAssignment_2_1_1 ) ) ;
    public final void rule__ClosureExpression__Group_2_1__1__Impl() throws RecognitionException {
        int rule__ClosureExpression__Group_2_1__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 815) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:11353:1: ( ( ( rule__ClosureExpression__ParametersAssignment_2_1_1 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:11354:1: ( ( rule__ClosureExpression__ParametersAssignment_2_1_1 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:11354:1: ( ( rule__ClosureExpression__ParametersAssignment_2_1_1 ) )
            // InternalSimpleBeeLangTestLanguage.g:11355:2: ( rule__ClosureExpression__ParametersAssignment_2_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureExpressionAccess().getParametersAssignment_2_1_1()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:11356:2: ( rule__ClosureExpression__ParametersAssignment_2_1_1 )
            // InternalSimpleBeeLangTestLanguage.g:11356:3: rule__ClosureExpression__ParametersAssignment_2_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureExpression__ParametersAssignment_2_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureExpressionAccess().getParametersAssignment_2_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 815, rule__ClosureExpression__Group_2_1__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group_2_1__1__Impl"


    // $ANTLR start "rule__BlockExpressionWithoutBrackets__Group__0"
    // InternalSimpleBeeLangTestLanguage.g:11365:1: rule__BlockExpressionWithoutBrackets__Group__0 : rule__BlockExpressionWithoutBrackets__Group__0__Impl rule__BlockExpressionWithoutBrackets__Group__1 ;
    public final void rule__BlockExpressionWithoutBrackets__Group__0() throws RecognitionException {
        int rule__BlockExpressionWithoutBrackets__Group__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 816) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:11369:1: ( rule__BlockExpressionWithoutBrackets__Group__0__Impl rule__BlockExpressionWithoutBrackets__Group__1 )
            // InternalSimpleBeeLangTestLanguage.g:11370:2: rule__BlockExpressionWithoutBrackets__Group__0__Impl rule__BlockExpressionWithoutBrackets__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_66);
            rule__BlockExpressionWithoutBrackets__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BlockExpressionWithoutBrackets__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 816, rule__BlockExpressionWithoutBrackets__Group__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BlockExpressionWithoutBrackets__Group__0"


    // $ANTLR start "rule__BlockExpressionWithoutBrackets__Group__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:11377:1: rule__BlockExpressionWithoutBrackets__Group__0__Impl : ( () ) ;
    public final void rule__BlockExpressionWithoutBrackets__Group__0__Impl() throws RecognitionException {
        int rule__BlockExpressionWithoutBrackets__Group__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 817) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:11381:1: ( ( () ) )
            // InternalSimpleBeeLangTestLanguage.g:11382:1: ( () )
            {
            // InternalSimpleBeeLangTestLanguage.g:11382:1: ( () )
            // InternalSimpleBeeLangTestLanguage.g:11383:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBlockExpressionWithoutBracketsAccess().getChainedExpressionAction_0()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:11384:2: ()
            // InternalSimpleBeeLangTestLanguage.g:11384:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBlockExpressionWithoutBracketsAccess().getChainedExpressionAction_0()); 
            }

            }


            }

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 817, rule__BlockExpressionWithoutBrackets__Group__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BlockExpressionWithoutBrackets__Group__0__Impl"


    // $ANTLR start "rule__BlockExpressionWithoutBrackets__Group__1"
    // InternalSimpleBeeLangTestLanguage.g:11392:1: rule__BlockExpressionWithoutBrackets__Group__1 : rule__BlockExpressionWithoutBrackets__Group__1__Impl ;
    public final void rule__BlockExpressionWithoutBrackets__Group__1() throws RecognitionException {
        int rule__BlockExpressionWithoutBrackets__Group__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 818) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:11396:1: ( rule__BlockExpressionWithoutBrackets__Group__1__Impl )
            // InternalSimpleBeeLangTestLanguage.g:11397:2: rule__BlockExpressionWithoutBrackets__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BlockExpressionWithoutBrackets__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 818, rule__BlockExpressionWithoutBrackets__Group__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BlockExpressionWithoutBrackets__Group__1"


    // $ANTLR start "rule__BlockExpressionWithoutBrackets__Group__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:11403:1: rule__BlockExpressionWithoutBrackets__Group__1__Impl : ( ( ( rule__BlockExpressionWithoutBrackets__Group_1__0 ) ) ( ( rule__BlockExpressionWithoutBrackets__Group_1__0 )* ) ) ;
    public final void rule__BlockExpressionWithoutBrackets__Group__1__Impl() throws RecognitionException {
        int rule__BlockExpressionWithoutBrackets__Group__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 819) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:11407:1: ( ( ( ( rule__BlockExpressionWithoutBrackets__Group_1__0 ) ) ( ( rule__BlockExpressionWithoutBrackets__Group_1__0 )* ) ) )
            // InternalSimpleBeeLangTestLanguage.g:11408:1: ( ( ( rule__BlockExpressionWithoutBrackets__Group_1__0 ) ) ( ( rule__BlockExpressionWithoutBrackets__Group_1__0 )* ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:11408:1: ( ( ( rule__BlockExpressionWithoutBrackets__Group_1__0 ) ) ( ( rule__BlockExpressionWithoutBrackets__Group_1__0 )* ) )
            // InternalSimpleBeeLangTestLanguage.g:11409:2: ( ( rule__BlockExpressionWithoutBrackets__Group_1__0 ) ) ( ( rule__BlockExpressionWithoutBrackets__Group_1__0 )* )
            {
            // InternalSimpleBeeLangTestLanguage.g:11409:2: ( ( rule__BlockExpressionWithoutBrackets__Group_1__0 ) )
            // InternalSimpleBeeLangTestLanguage.g:11410:3: ( rule__BlockExpressionWithoutBrackets__Group_1__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBlockExpressionWithoutBracketsAccess().getGroup_1()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:11411:3: ( rule__BlockExpressionWithoutBrackets__Group_1__0 )
            // InternalSimpleBeeLangTestLanguage.g:11411:4: rule__BlockExpressionWithoutBrackets__Group_1__0
            {
            pushFollow(FollowSets000.FOLLOW_69);
            rule__BlockExpressionWithoutBrackets__Group_1__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBlockExpressionWithoutBracketsAccess().getGroup_1()); 
            }

            }

            // InternalSimpleBeeLangTestLanguage.g:11414:2: ( ( rule__BlockExpressionWithoutBrackets__Group_1__0 )* )
            // InternalSimpleBeeLangTestLanguage.g:11415:3: ( rule__BlockExpressionWithoutBrackets__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBlockExpressionWithoutBracketsAccess().getGroup_1()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:11416:3: ( rule__BlockExpressionWithoutBrackets__Group_1__0 )*
            loop90:
            do {
                int alt90=2;
                int LA90_0 = input.LA(1);

                if ( (LA90_0==RULE_STRING||LA90_0==RULE_ID||LA90_0==13||LA90_0==29||LA90_0==31||(LA90_0>=35 && LA90_0<=44)||LA90_0==60||LA90_0==63||LA90_0==69||LA90_0==71||LA90_0==74||LA90_0==76) ) {
                    alt90=1;
                }


                switch (alt90) {
            	case 1 :
            	    // InternalSimpleBeeLangTestLanguage.g:11416:4: rule__BlockExpressionWithoutBrackets__Group_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_69);
            	    rule__BlockExpressionWithoutBrackets__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop90;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBlockExpressionWithoutBracketsAccess().getGroup_1()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 819, rule__BlockExpressionWithoutBrackets__Group__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BlockExpressionWithoutBrackets__Group__1__Impl"


    // $ANTLR start "rule__BlockExpressionWithoutBrackets__Group_1__0"
    // InternalSimpleBeeLangTestLanguage.g:11426:1: rule__BlockExpressionWithoutBrackets__Group_1__0 : rule__BlockExpressionWithoutBrackets__Group_1__0__Impl rule__BlockExpressionWithoutBrackets__Group_1__1 ;
    public final void rule__BlockExpressionWithoutBrackets__Group_1__0() throws RecognitionException {
        int rule__BlockExpressionWithoutBrackets__Group_1__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 820) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:11430:1: ( rule__BlockExpressionWithoutBrackets__Group_1__0__Impl rule__BlockExpressionWithoutBrackets__Group_1__1 )
            // InternalSimpleBeeLangTestLanguage.g:11431:2: rule__BlockExpressionWithoutBrackets__Group_1__0__Impl rule__BlockExpressionWithoutBrackets__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_14);
            rule__BlockExpressionWithoutBrackets__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BlockExpressionWithoutBrackets__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 820, rule__BlockExpressionWithoutBrackets__Group_1__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BlockExpressionWithoutBrackets__Group_1__0"


    // $ANTLR start "rule__BlockExpressionWithoutBrackets__Group_1__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:11438:1: rule__BlockExpressionWithoutBrackets__Group_1__0__Impl : ( ( rule__BlockExpressionWithoutBrackets__ExpressionsAssignment_1_0 ) ) ;
    public final void rule__BlockExpressionWithoutBrackets__Group_1__0__Impl() throws RecognitionException {
        int rule__BlockExpressionWithoutBrackets__Group_1__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 821) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:11442:1: ( ( ( rule__BlockExpressionWithoutBrackets__ExpressionsAssignment_1_0 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:11443:1: ( ( rule__BlockExpressionWithoutBrackets__ExpressionsAssignment_1_0 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:11443:1: ( ( rule__BlockExpressionWithoutBrackets__ExpressionsAssignment_1_0 ) )
            // InternalSimpleBeeLangTestLanguage.g:11444:2: ( rule__BlockExpressionWithoutBrackets__ExpressionsAssignment_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBlockExpressionWithoutBracketsAccess().getExpressionsAssignment_1_0()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:11445:2: ( rule__BlockExpressionWithoutBrackets__ExpressionsAssignment_1_0 )
            // InternalSimpleBeeLangTestLanguage.g:11445:3: rule__BlockExpressionWithoutBrackets__ExpressionsAssignment_1_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BlockExpressionWithoutBrackets__ExpressionsAssignment_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBlockExpressionWithoutBracketsAccess().getExpressionsAssignment_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 821, rule__BlockExpressionWithoutBrackets__Group_1__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BlockExpressionWithoutBrackets__Group_1__0__Impl"


    // $ANTLR start "rule__BlockExpressionWithoutBrackets__Group_1__1"
    // InternalSimpleBeeLangTestLanguage.g:11453:1: rule__BlockExpressionWithoutBrackets__Group_1__1 : rule__BlockExpressionWithoutBrackets__Group_1__1__Impl ;
    public final void rule__BlockExpressionWithoutBrackets__Group_1__1() throws RecognitionException {
        int rule__BlockExpressionWithoutBrackets__Group_1__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 822) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:11457:1: ( rule__BlockExpressionWithoutBrackets__Group_1__1__Impl )
            // InternalSimpleBeeLangTestLanguage.g:11458:2: rule__BlockExpressionWithoutBrackets__Group_1__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BlockExpressionWithoutBrackets__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 822, rule__BlockExpressionWithoutBrackets__Group_1__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BlockExpressionWithoutBrackets__Group_1__1"


    // $ANTLR start "rule__BlockExpressionWithoutBrackets__Group_1__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:11464:1: rule__BlockExpressionWithoutBrackets__Group_1__1__Impl : ( ';' ) ;
    public final void rule__BlockExpressionWithoutBrackets__Group_1__1__Impl() throws RecognitionException {
        int rule__BlockExpressionWithoutBrackets__Group_1__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 823) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:11468:1: ( ( ';' ) )
            // InternalSimpleBeeLangTestLanguage.g:11469:1: ( ';' )
            {
            // InternalSimpleBeeLangTestLanguage.g:11469:1: ( ';' )
            // InternalSimpleBeeLangTestLanguage.g:11470:2: ';'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBlockExpressionWithoutBracketsAccess().getSemicolonKeyword_1_1()); 
            }
            match(input,50,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBlockExpressionWithoutBracketsAccess().getSemicolonKeyword_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 823, rule__BlockExpressionWithoutBrackets__Group_1__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BlockExpressionWithoutBrackets__Group_1__1__Impl"


    // $ANTLR start "rule__ParanthesizedExpression__Group__0"
    // InternalSimpleBeeLangTestLanguage.g:11480:1: rule__ParanthesizedExpression__Group__0 : rule__ParanthesizedExpression__Group__0__Impl rule__ParanthesizedExpression__Group__1 ;
    public final void rule__ParanthesizedExpression__Group__0() throws RecognitionException {
        int rule__ParanthesizedExpression__Group__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 824) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:11484:1: ( rule__ParanthesizedExpression__Group__0__Impl rule__ParanthesizedExpression__Group__1 )
            // InternalSimpleBeeLangTestLanguage.g:11485:2: rule__ParanthesizedExpression__Group__0__Impl rule__ParanthesizedExpression__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_19);
            rule__ParanthesizedExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ParanthesizedExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 824, rule__ParanthesizedExpression__Group__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParanthesizedExpression__Group__0"


    // $ANTLR start "rule__ParanthesizedExpression__Group__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:11492:1: rule__ParanthesizedExpression__Group__0__Impl : ( '(' ) ;
    public final void rule__ParanthesizedExpression__Group__0__Impl() throws RecognitionException {
        int rule__ParanthesizedExpression__Group__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 825) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:11496:1: ( ( '(' ) )
            // InternalSimpleBeeLangTestLanguage.g:11497:1: ( '(' )
            {
            // InternalSimpleBeeLangTestLanguage.g:11497:1: ( '(' )
            // InternalSimpleBeeLangTestLanguage.g:11498:2: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParanthesizedExpressionAccess().getLeftParenthesisKeyword_0()); 
            }
            match(input,60,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParanthesizedExpressionAccess().getLeftParenthesisKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 825, rule__ParanthesizedExpression__Group__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParanthesizedExpression__Group__0__Impl"


    // $ANTLR start "rule__ParanthesizedExpression__Group__1"
    // InternalSimpleBeeLangTestLanguage.g:11507:1: rule__ParanthesizedExpression__Group__1 : rule__ParanthesizedExpression__Group__1__Impl rule__ParanthesizedExpression__Group__2 ;
    public final void rule__ParanthesizedExpression__Group__1() throws RecognitionException {
        int rule__ParanthesizedExpression__Group__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 826) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:11511:1: ( rule__ParanthesizedExpression__Group__1__Impl rule__ParanthesizedExpression__Group__2 )
            // InternalSimpleBeeLangTestLanguage.g:11512:2: rule__ParanthesizedExpression__Group__1__Impl rule__ParanthesizedExpression__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_75);
            rule__ParanthesizedExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ParanthesizedExpression__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 826, rule__ParanthesizedExpression__Group__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParanthesizedExpression__Group__1"


    // $ANTLR start "rule__ParanthesizedExpression__Group__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:11519:1: rule__ParanthesizedExpression__Group__1__Impl : ( ruleExpression ) ;
    public final void rule__ParanthesizedExpression__Group__1__Impl() throws RecognitionException {
        int rule__ParanthesizedExpression__Group__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 827) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:11523:1: ( ( ruleExpression ) )
            // InternalSimpleBeeLangTestLanguage.g:11524:1: ( ruleExpression )
            {
            // InternalSimpleBeeLangTestLanguage.g:11524:1: ( ruleExpression )
            // InternalSimpleBeeLangTestLanguage.g:11525:2: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParanthesizedExpressionAccess().getExpressionParserRuleCall_1()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParanthesizedExpressionAccess().getExpressionParserRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 827, rule__ParanthesizedExpression__Group__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParanthesizedExpression__Group__1__Impl"


    // $ANTLR start "rule__ParanthesizedExpression__Group__2"
    // InternalSimpleBeeLangTestLanguage.g:11534:1: rule__ParanthesizedExpression__Group__2 : rule__ParanthesizedExpression__Group__2__Impl ;
    public final void rule__ParanthesizedExpression__Group__2() throws RecognitionException {
        int rule__ParanthesizedExpression__Group__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 828) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:11538:1: ( rule__ParanthesizedExpression__Group__2__Impl )
            // InternalSimpleBeeLangTestLanguage.g:11539:2: rule__ParanthesizedExpression__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ParanthesizedExpression__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 828, rule__ParanthesizedExpression__Group__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParanthesizedExpression__Group__2"


    // $ANTLR start "rule__ParanthesizedExpression__Group__2__Impl"
    // InternalSimpleBeeLangTestLanguage.g:11545:1: rule__ParanthesizedExpression__Group__2__Impl : ( ')' ) ;
    public final void rule__ParanthesizedExpression__Group__2__Impl() throws RecognitionException {
        int rule__ParanthesizedExpression__Group__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 829) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:11549:1: ( ( ')' ) )
            // InternalSimpleBeeLangTestLanguage.g:11550:1: ( ')' )
            {
            // InternalSimpleBeeLangTestLanguage.g:11550:1: ( ')' )
            // InternalSimpleBeeLangTestLanguage.g:11551:2: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParanthesizedExpressionAccess().getRightParenthesisKeyword_2()); 
            }
            match(input,61,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParanthesizedExpressionAccess().getRightParenthesisKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 829, rule__ParanthesizedExpression__Group__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParanthesizedExpression__Group__2__Impl"


    // $ANTLR start "rule__QID__Group__0"
    // InternalSimpleBeeLangTestLanguage.g:11561:1: rule__QID__Group__0 : rule__QID__Group__0__Impl rule__QID__Group__1 ;
    public final void rule__QID__Group__0() throws RecognitionException {
        int rule__QID__Group__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 830) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:11565:1: ( rule__QID__Group__0__Impl rule__QID__Group__1 )
            // InternalSimpleBeeLangTestLanguage.g:11566:2: rule__QID__Group__0__Impl rule__QID__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_76);
            rule__QID__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__QID__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 830, rule__QID__Group__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QID__Group__0"


    // $ANTLR start "rule__QID__Group__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:11573:1: rule__QID__Group__0__Impl : ( RULE_ID ) ;
    public final void rule__QID__Group__0__Impl() throws RecognitionException {
        int rule__QID__Group__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 831) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:11577:1: ( ( RULE_ID ) )
            // InternalSimpleBeeLangTestLanguage.g:11578:1: ( RULE_ID )
            {
            // InternalSimpleBeeLangTestLanguage.g:11578:1: ( RULE_ID )
            // InternalSimpleBeeLangTestLanguage.g:11579:2: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQIDAccess().getIDTerminalRuleCall_0()); 
            }
            match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getQIDAccess().getIDTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 831, rule__QID__Group__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QID__Group__0__Impl"


    // $ANTLR start "rule__QID__Group__1"
    // InternalSimpleBeeLangTestLanguage.g:11588:1: rule__QID__Group__1 : rule__QID__Group__1__Impl rule__QID__Group__2 ;
    public final void rule__QID__Group__1() throws RecognitionException {
        int rule__QID__Group__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 832) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:11592:1: ( rule__QID__Group__1__Impl rule__QID__Group__2 )
            // InternalSimpleBeeLangTestLanguage.g:11593:2: rule__QID__Group__1__Impl rule__QID__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_76);
            rule__QID__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__QID__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 832, rule__QID__Group__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QID__Group__1"


    // $ANTLR start "rule__QID__Group__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:11600:1: rule__QID__Group__1__Impl : ( ( rule__QID__Alternatives_1 )* ) ;
    public final void rule__QID__Group__1__Impl() throws RecognitionException {
        int rule__QID__Group__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 833) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:11604:1: ( ( ( rule__QID__Alternatives_1 )* ) )
            // InternalSimpleBeeLangTestLanguage.g:11605:1: ( ( rule__QID__Alternatives_1 )* )
            {
            // InternalSimpleBeeLangTestLanguage.g:11605:1: ( ( rule__QID__Alternatives_1 )* )
            // InternalSimpleBeeLangTestLanguage.g:11606:2: ( rule__QID__Alternatives_1 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQIDAccess().getAlternatives_1()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:11607:2: ( rule__QID__Alternatives_1 )*
            loop91:
            do {
                int alt91=2;
                int LA91_0 = input.LA(1);

                if ( ((LA91_0>=RULE_INT && LA91_0<=RULE_ID)) ) {
                    alt91=1;
                }


                switch (alt91) {
            	case 1 :
            	    // InternalSimpleBeeLangTestLanguage.g:11607:3: rule__QID__Alternatives_1
            	    {
            	    pushFollow(FollowSets000.FOLLOW_77);
            	    rule__QID__Alternatives_1();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop91;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getQIDAccess().getAlternatives_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 833, rule__QID__Group__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QID__Group__1__Impl"


    // $ANTLR start "rule__QID__Group__2"
    // InternalSimpleBeeLangTestLanguage.g:11615:1: rule__QID__Group__2 : rule__QID__Group__2__Impl ;
    public final void rule__QID__Group__2() throws RecognitionException {
        int rule__QID__Group__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 834) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:11619:1: ( rule__QID__Group__2__Impl )
            // InternalSimpleBeeLangTestLanguage.g:11620:2: rule__QID__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__QID__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 834, rule__QID__Group__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QID__Group__2"


    // $ANTLR start "rule__QID__Group__2__Impl"
    // InternalSimpleBeeLangTestLanguage.g:11626:1: rule__QID__Group__2__Impl : ( ( rule__QID__Group_2__0 )* ) ;
    public final void rule__QID__Group__2__Impl() throws RecognitionException {
        int rule__QID__Group__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 835) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:11630:1: ( ( ( rule__QID__Group_2__0 )* ) )
            // InternalSimpleBeeLangTestLanguage.g:11631:1: ( ( rule__QID__Group_2__0 )* )
            {
            // InternalSimpleBeeLangTestLanguage.g:11631:1: ( ( rule__QID__Group_2__0 )* )
            // InternalSimpleBeeLangTestLanguage.g:11632:2: ( rule__QID__Group_2__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQIDAccess().getGroup_2()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:11633:2: ( rule__QID__Group_2__0 )*
            loop92:
            do {
                int alt92=2;
                int LA92_0 = input.LA(1);

                if ( (LA92_0==66) ) {
                    alt92=1;
                }


                switch (alt92) {
            	case 1 :
            	    // InternalSimpleBeeLangTestLanguage.g:11633:3: rule__QID__Group_2__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_78);
            	    rule__QID__Group_2__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop92;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getQIDAccess().getGroup_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 835, rule__QID__Group__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QID__Group__2__Impl"


    // $ANTLR start "rule__QID__Group_2__0"
    // InternalSimpleBeeLangTestLanguage.g:11642:1: rule__QID__Group_2__0 : rule__QID__Group_2__0__Impl rule__QID__Group_2__1 ;
    public final void rule__QID__Group_2__0() throws RecognitionException {
        int rule__QID__Group_2__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 836) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:11646:1: ( rule__QID__Group_2__0__Impl rule__QID__Group_2__1 )
            // InternalSimpleBeeLangTestLanguage.g:11647:2: rule__QID__Group_2__0__Impl rule__QID__Group_2__1
            {
            pushFollow(FollowSets000.FOLLOW_9);
            rule__QID__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__QID__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 836, rule__QID__Group_2__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QID__Group_2__0"


    // $ANTLR start "rule__QID__Group_2__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:11654:1: rule__QID__Group_2__0__Impl : ( '.' ) ;
    public final void rule__QID__Group_2__0__Impl() throws RecognitionException {
        int rule__QID__Group_2__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 837) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:11658:1: ( ( '.' ) )
            // InternalSimpleBeeLangTestLanguage.g:11659:1: ( '.' )
            {
            // InternalSimpleBeeLangTestLanguage.g:11659:1: ( '.' )
            // InternalSimpleBeeLangTestLanguage.g:11660:2: '.'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQIDAccess().getFullStopKeyword_2_0()); 
            }
            match(input,66,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getQIDAccess().getFullStopKeyword_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 837, rule__QID__Group_2__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QID__Group_2__0__Impl"


    // $ANTLR start "rule__QID__Group_2__1"
    // InternalSimpleBeeLangTestLanguage.g:11669:1: rule__QID__Group_2__1 : rule__QID__Group_2__1__Impl rule__QID__Group_2__2 ;
    public final void rule__QID__Group_2__1() throws RecognitionException {
        int rule__QID__Group_2__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 838) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:11673:1: ( rule__QID__Group_2__1__Impl rule__QID__Group_2__2 )
            // InternalSimpleBeeLangTestLanguage.g:11674:2: rule__QID__Group_2__1__Impl rule__QID__Group_2__2
            {
            pushFollow(FollowSets000.FOLLOW_79);
            rule__QID__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__QID__Group_2__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 838, rule__QID__Group_2__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QID__Group_2__1"


    // $ANTLR start "rule__QID__Group_2__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:11681:1: rule__QID__Group_2__1__Impl : ( RULE_ID ) ;
    public final void rule__QID__Group_2__1__Impl() throws RecognitionException {
        int rule__QID__Group_2__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 839) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:11685:1: ( ( RULE_ID ) )
            // InternalSimpleBeeLangTestLanguage.g:11686:1: ( RULE_ID )
            {
            // InternalSimpleBeeLangTestLanguage.g:11686:1: ( RULE_ID )
            // InternalSimpleBeeLangTestLanguage.g:11687:2: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQIDAccess().getIDTerminalRuleCall_2_1()); 
            }
            match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getQIDAccess().getIDTerminalRuleCall_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 839, rule__QID__Group_2__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QID__Group_2__1__Impl"


    // $ANTLR start "rule__QID__Group_2__2"
    // InternalSimpleBeeLangTestLanguage.g:11696:1: rule__QID__Group_2__2 : rule__QID__Group_2__2__Impl ;
    public final void rule__QID__Group_2__2() throws RecognitionException {
        int rule__QID__Group_2__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 840) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:11700:1: ( rule__QID__Group_2__2__Impl )
            // InternalSimpleBeeLangTestLanguage.g:11701:2: rule__QID__Group_2__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__QID__Group_2__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 840, rule__QID__Group_2__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QID__Group_2__2"


    // $ANTLR start "rule__QID__Group_2__2__Impl"
    // InternalSimpleBeeLangTestLanguage.g:11707:1: rule__QID__Group_2__2__Impl : ( ( rule__QID__Alternatives_2_2 )* ) ;
    public final void rule__QID__Group_2__2__Impl() throws RecognitionException {
        int rule__QID__Group_2__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 841) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:11711:1: ( ( ( rule__QID__Alternatives_2_2 )* ) )
            // InternalSimpleBeeLangTestLanguage.g:11712:1: ( ( rule__QID__Alternatives_2_2 )* )
            {
            // InternalSimpleBeeLangTestLanguage.g:11712:1: ( ( rule__QID__Alternatives_2_2 )* )
            // InternalSimpleBeeLangTestLanguage.g:11713:2: ( rule__QID__Alternatives_2_2 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQIDAccess().getAlternatives_2_2()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:11714:2: ( rule__QID__Alternatives_2_2 )*
            loop93:
            do {
                int alt93=2;
                int LA93_0 = input.LA(1);

                if ( ((LA93_0>=RULE_INT && LA93_0<=RULE_ID)) ) {
                    alt93=1;
                }


                switch (alt93) {
            	case 1 :
            	    // InternalSimpleBeeLangTestLanguage.g:11714:3: rule__QID__Alternatives_2_2
            	    {
            	    pushFollow(FollowSets000.FOLLOW_77);
            	    rule__QID__Alternatives_2_2();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop93;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getQIDAccess().getAlternatives_2_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 841, rule__QID__Group_2__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QID__Group_2__2__Impl"


    // $ANTLR start "rule__Unit__UnorderedGroup_7"
    // InternalSimpleBeeLangTestLanguage.g:11723:1: rule__Unit__UnorderedGroup_7 : ( rule__Unit__UnorderedGroup_7__0 )? ;
    public final void rule__Unit__UnorderedGroup_7() throws RecognitionException {
        int rule__Unit__UnorderedGroup_7_StartIndex = input.index();

        		int stackSize = keepStackSize();
        		getUnorderedGroupHelper().enter(grammarAccess.getUnitAccess().getUnorderedGroup_7());
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 842) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:11728:1: ( ( rule__Unit__UnorderedGroup_7__0 )? )
            // InternalSimpleBeeLangTestLanguage.g:11729:2: ( rule__Unit__UnorderedGroup_7__0 )?
            {
            // InternalSimpleBeeLangTestLanguage.g:11729:2: ( rule__Unit__UnorderedGroup_7__0 )?
            int alt94=2;
            alt94 = dfa94.predict(input);
            switch (alt94) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:0:0: rule__Unit__UnorderedGroup_7__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__Unit__UnorderedGroup_7__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 842, rule__Unit__UnorderedGroup_7_StartIndex); }

            	getUnorderedGroupHelper().leave(grammarAccess.getUnitAccess().getUnorderedGroup_7());
            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__UnorderedGroup_7"


    // $ANTLR start "rule__Unit__UnorderedGroup_7__Impl"
    // InternalSimpleBeeLangTestLanguage.g:11737:1: rule__Unit__UnorderedGroup_7__Impl : ( ({...}? => ( ( ( rule__Unit__Group_7_0__0 ) ) ) ) | ({...}? => ( ( ( rule__Unit__Group_7_1__0 ) ) ) ) | ({...}? => ( ( ( ( rule__Unit__Group_7_2__0 ) ) ( ( ( rule__Unit__Group_7_2__0 )=> rule__Unit__Group_7_2__0 )* ) ) ) ) | ({...}? => ( ( ( ( rule__Unit__Group_7_3__0 ) ) ( ( ( rule__Unit__Group_7_3__0 )=> rule__Unit__Group_7_3__0 )* ) ) ) ) | ({...}? => ( ( ( ( rule__Unit__Group_7_4__0 ) ) ( ( ( rule__Unit__Group_7_4__0 )=> rule__Unit__Group_7_4__0 )* ) ) ) ) | ({...}? => ( ( ( ( rule__Unit__FunctionsAssignment_7_5 ) ) ( ( ( rule__Unit__FunctionsAssignment_7_5 )=> rule__Unit__FunctionsAssignment_7_5 )* ) ) ) ) ) ;
    public final void rule__Unit__UnorderedGroup_7__Impl() throws RecognitionException {
        int rule__Unit__UnorderedGroup_7__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        		boolean selected = false;
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 843) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:11742:1: ( ( ({...}? => ( ( ( rule__Unit__Group_7_0__0 ) ) ) ) | ({...}? => ( ( ( rule__Unit__Group_7_1__0 ) ) ) ) | ({...}? => ( ( ( ( rule__Unit__Group_7_2__0 ) ) ( ( ( rule__Unit__Group_7_2__0 )=> rule__Unit__Group_7_2__0 )* ) ) ) ) | ({...}? => ( ( ( ( rule__Unit__Group_7_3__0 ) ) ( ( ( rule__Unit__Group_7_3__0 )=> rule__Unit__Group_7_3__0 )* ) ) ) ) | ({...}? => ( ( ( ( rule__Unit__Group_7_4__0 ) ) ( ( ( rule__Unit__Group_7_4__0 )=> rule__Unit__Group_7_4__0 )* ) ) ) ) | ({...}? => ( ( ( ( rule__Unit__FunctionsAssignment_7_5 ) ) ( ( ( rule__Unit__FunctionsAssignment_7_5 )=> rule__Unit__FunctionsAssignment_7_5 )* ) ) ) ) ) )
            // InternalSimpleBeeLangTestLanguage.g:11743:3: ( ({...}? => ( ( ( rule__Unit__Group_7_0__0 ) ) ) ) | ({...}? => ( ( ( rule__Unit__Group_7_1__0 ) ) ) ) | ({...}? => ( ( ( ( rule__Unit__Group_7_2__0 ) ) ( ( ( rule__Unit__Group_7_2__0 )=> rule__Unit__Group_7_2__0 )* ) ) ) ) | ({...}? => ( ( ( ( rule__Unit__Group_7_3__0 ) ) ( ( ( rule__Unit__Group_7_3__0 )=> rule__Unit__Group_7_3__0 )* ) ) ) ) | ({...}? => ( ( ( ( rule__Unit__Group_7_4__0 ) ) ( ( ( rule__Unit__Group_7_4__0 )=> rule__Unit__Group_7_4__0 )* ) ) ) ) | ({...}? => ( ( ( ( rule__Unit__FunctionsAssignment_7_5 ) ) ( ( ( rule__Unit__FunctionsAssignment_7_5 )=> rule__Unit__FunctionsAssignment_7_5 )* ) ) ) ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:11743:3: ( ({...}? => ( ( ( rule__Unit__Group_7_0__0 ) ) ) ) | ({...}? => ( ( ( rule__Unit__Group_7_1__0 ) ) ) ) | ({...}? => ( ( ( ( rule__Unit__Group_7_2__0 ) ) ( ( ( rule__Unit__Group_7_2__0 )=> rule__Unit__Group_7_2__0 )* ) ) ) ) | ({...}? => ( ( ( ( rule__Unit__Group_7_3__0 ) ) ( ( ( rule__Unit__Group_7_3__0 )=> rule__Unit__Group_7_3__0 )* ) ) ) ) | ({...}? => ( ( ( ( rule__Unit__Group_7_4__0 ) ) ( ( ( rule__Unit__Group_7_4__0 )=> rule__Unit__Group_7_4__0 )* ) ) ) ) | ({...}? => ( ( ( ( rule__Unit__FunctionsAssignment_7_5 ) ) ( ( ( rule__Unit__FunctionsAssignment_7_5 )=> rule__Unit__FunctionsAssignment_7_5 )* ) ) ) ) )
            int alt99=6;
            int LA99_0 = input.LA(1);

            if ( LA99_0 == 40 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 0) ) {
                alt99=1;
            }
            else if ( LA99_0 == 39 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 1) ) {
                alt99=2;
            }
            else if ( LA99_0 == 51 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 2) ) {
                alt99=3;
            }
            else if ( (LA99_0==52) ) {
                int LA99_4 = input.LA(2);

                if ( LA99_4 == 49 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 3) ) {
                    alt99=4;
                }
                else if ( LA99_4 == 53 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 4) ) {
                    alt99=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 99, 4, input);

                    throw nvae;
                }
            }
            else if ( ( LA99_0 >= RULE_ID && LA99_0 <= RULE_DOCUMENTATION || LA99_0 == 59 || LA99_0 == 74 ) && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 5) ) {
                alt99=6;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 99, 0, input);

                throw nvae;
            }
            switch (alt99) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:11744:3: ({...}? => ( ( ( rule__Unit__Group_7_0__0 ) ) ) )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:11744:3: ({...}? => ( ( ( rule__Unit__Group_7_0__0 ) ) ) )
                    // InternalSimpleBeeLangTestLanguage.g:11745:4: {...}? => ( ( ( rule__Unit__Group_7_0__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 0) ) {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        throw new FailedPredicateException(input, "rule__Unit__UnorderedGroup_7__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 0)");
                    }
                    // InternalSimpleBeeLangTestLanguage.g:11745:100: ( ( ( rule__Unit__Group_7_0__0 ) ) )
                    // InternalSimpleBeeLangTestLanguage.g:11746:5: ( ( rule__Unit__Group_7_0__0 ) )
                    {
                    getUnorderedGroupHelper().select(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 0);
                    selected = true;
                    // InternalSimpleBeeLangTestLanguage.g:11752:5: ( ( rule__Unit__Group_7_0__0 ) )
                    // InternalSimpleBeeLangTestLanguage.g:11753:6: ( rule__Unit__Group_7_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnitAccess().getGroup_7_0()); 
                    }
                    // InternalSimpleBeeLangTestLanguage.g:11754:6: ( rule__Unit__Group_7_0__0 )
                    // InternalSimpleBeeLangTestLanguage.g:11754:7: rule__Unit__Group_7_0__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__Unit__Group_7_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnitAccess().getGroup_7_0()); 
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSimpleBeeLangTestLanguage.g:11759:3: ({...}? => ( ( ( rule__Unit__Group_7_1__0 ) ) ) )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:11759:3: ({...}? => ( ( ( rule__Unit__Group_7_1__0 ) ) ) )
                    // InternalSimpleBeeLangTestLanguage.g:11760:4: {...}? => ( ( ( rule__Unit__Group_7_1__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 1) ) {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        throw new FailedPredicateException(input, "rule__Unit__UnorderedGroup_7__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 1)");
                    }
                    // InternalSimpleBeeLangTestLanguage.g:11760:100: ( ( ( rule__Unit__Group_7_1__0 ) ) )
                    // InternalSimpleBeeLangTestLanguage.g:11761:5: ( ( rule__Unit__Group_7_1__0 ) )
                    {
                    getUnorderedGroupHelper().select(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 1);
                    selected = true;
                    // InternalSimpleBeeLangTestLanguage.g:11767:5: ( ( rule__Unit__Group_7_1__0 ) )
                    // InternalSimpleBeeLangTestLanguage.g:11768:6: ( rule__Unit__Group_7_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnitAccess().getGroup_7_1()); 
                    }
                    // InternalSimpleBeeLangTestLanguage.g:11769:6: ( rule__Unit__Group_7_1__0 )
                    // InternalSimpleBeeLangTestLanguage.g:11769:7: rule__Unit__Group_7_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__Unit__Group_7_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnitAccess().getGroup_7_1()); 
                    }

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalSimpleBeeLangTestLanguage.g:11774:3: ({...}? => ( ( ( ( rule__Unit__Group_7_2__0 ) ) ( ( ( rule__Unit__Group_7_2__0 )=> rule__Unit__Group_7_2__0 )* ) ) ) )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:11774:3: ({...}? => ( ( ( ( rule__Unit__Group_7_2__0 ) ) ( ( ( rule__Unit__Group_7_2__0 )=> rule__Unit__Group_7_2__0 )* ) ) ) )
                    // InternalSimpleBeeLangTestLanguage.g:11775:4: {...}? => ( ( ( ( rule__Unit__Group_7_2__0 ) ) ( ( ( rule__Unit__Group_7_2__0 )=> rule__Unit__Group_7_2__0 )* ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 2) ) {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        throw new FailedPredicateException(input, "rule__Unit__UnorderedGroup_7__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 2)");
                    }
                    // InternalSimpleBeeLangTestLanguage.g:11775:100: ( ( ( ( rule__Unit__Group_7_2__0 ) ) ( ( ( rule__Unit__Group_7_2__0 )=> rule__Unit__Group_7_2__0 )* ) ) )
                    // InternalSimpleBeeLangTestLanguage.g:11776:5: ( ( ( rule__Unit__Group_7_2__0 ) ) ( ( ( rule__Unit__Group_7_2__0 )=> rule__Unit__Group_7_2__0 )* ) )
                    {
                    getUnorderedGroupHelper().select(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 2);
                    selected = true;
                    // InternalSimpleBeeLangTestLanguage.g:11782:5: ( ( ( rule__Unit__Group_7_2__0 ) ) ( ( ( rule__Unit__Group_7_2__0 )=> rule__Unit__Group_7_2__0 )* ) )
                    // InternalSimpleBeeLangTestLanguage.g:11783:6: ( ( rule__Unit__Group_7_2__0 ) ) ( ( ( rule__Unit__Group_7_2__0 )=> rule__Unit__Group_7_2__0 )* )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:11783:6: ( ( rule__Unit__Group_7_2__0 ) )
                    // InternalSimpleBeeLangTestLanguage.g:11784:7: ( rule__Unit__Group_7_2__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnitAccess().getGroup_7_2()); 
                    }
                    // InternalSimpleBeeLangTestLanguage.g:11785:7: ( rule__Unit__Group_7_2__0 )
                    // InternalSimpleBeeLangTestLanguage.g:11785:8: rule__Unit__Group_7_2__0
                    {
                    pushFollow(FollowSets000.FOLLOW_80);
                    rule__Unit__Group_7_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnitAccess().getGroup_7_2()); 
                    }

                    }

                    // InternalSimpleBeeLangTestLanguage.g:11788:6: ( ( ( rule__Unit__Group_7_2__0 )=> rule__Unit__Group_7_2__0 )* )
                    // InternalSimpleBeeLangTestLanguage.g:11789:7: ( ( rule__Unit__Group_7_2__0 )=> rule__Unit__Group_7_2__0 )*
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnitAccess().getGroup_7_2()); 
                    }
                    // InternalSimpleBeeLangTestLanguage.g:11790:7: ( ( rule__Unit__Group_7_2__0 )=> rule__Unit__Group_7_2__0 )*
                    loop95:
                    do {
                        int alt95=2;
                        alt95 = dfa95.predict(input);
                        switch (alt95) {
                    	case 1 :
                    	    // InternalSimpleBeeLangTestLanguage.g:11790:8: ( rule__Unit__Group_7_2__0 )=> rule__Unit__Group_7_2__0
                    	    {
                    	    pushFollow(FollowSets000.FOLLOW_80);
                    	    rule__Unit__Group_7_2__0();

                    	    state._fsp--;
                    	    if (state.failed) return ;

                    	    }
                    	    break;

                    	default :
                    	    break loop95;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnitAccess().getGroup_7_2()); 
                    }

                    }


                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalSimpleBeeLangTestLanguage.g:11796:3: ({...}? => ( ( ( ( rule__Unit__Group_7_3__0 ) ) ( ( ( rule__Unit__Group_7_3__0 )=> rule__Unit__Group_7_3__0 )* ) ) ) )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:11796:3: ({...}? => ( ( ( ( rule__Unit__Group_7_3__0 ) ) ( ( ( rule__Unit__Group_7_3__0 )=> rule__Unit__Group_7_3__0 )* ) ) ) )
                    // InternalSimpleBeeLangTestLanguage.g:11797:4: {...}? => ( ( ( ( rule__Unit__Group_7_3__0 ) ) ( ( ( rule__Unit__Group_7_3__0 )=> rule__Unit__Group_7_3__0 )* ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 3) ) {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        throw new FailedPredicateException(input, "rule__Unit__UnorderedGroup_7__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 3)");
                    }
                    // InternalSimpleBeeLangTestLanguage.g:11797:100: ( ( ( ( rule__Unit__Group_7_3__0 ) ) ( ( ( rule__Unit__Group_7_3__0 )=> rule__Unit__Group_7_3__0 )* ) ) )
                    // InternalSimpleBeeLangTestLanguage.g:11798:5: ( ( ( rule__Unit__Group_7_3__0 ) ) ( ( ( rule__Unit__Group_7_3__0 )=> rule__Unit__Group_7_3__0 )* ) )
                    {
                    getUnorderedGroupHelper().select(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 3);
                    selected = true;
                    // InternalSimpleBeeLangTestLanguage.g:11804:5: ( ( ( rule__Unit__Group_7_3__0 ) ) ( ( ( rule__Unit__Group_7_3__0 )=> rule__Unit__Group_7_3__0 )* ) )
                    // InternalSimpleBeeLangTestLanguage.g:11805:6: ( ( rule__Unit__Group_7_3__0 ) ) ( ( ( rule__Unit__Group_7_3__0 )=> rule__Unit__Group_7_3__0 )* )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:11805:6: ( ( rule__Unit__Group_7_3__0 ) )
                    // InternalSimpleBeeLangTestLanguage.g:11806:7: ( rule__Unit__Group_7_3__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnitAccess().getGroup_7_3()); 
                    }
                    // InternalSimpleBeeLangTestLanguage.g:11807:7: ( rule__Unit__Group_7_3__0 )
                    // InternalSimpleBeeLangTestLanguage.g:11807:8: rule__Unit__Group_7_3__0
                    {
                    pushFollow(FollowSets000.FOLLOW_81);
                    rule__Unit__Group_7_3__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnitAccess().getGroup_7_3()); 
                    }

                    }

                    // InternalSimpleBeeLangTestLanguage.g:11810:6: ( ( ( rule__Unit__Group_7_3__0 )=> rule__Unit__Group_7_3__0 )* )
                    // InternalSimpleBeeLangTestLanguage.g:11811:7: ( ( rule__Unit__Group_7_3__0 )=> rule__Unit__Group_7_3__0 )*
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnitAccess().getGroup_7_3()); 
                    }
                    // InternalSimpleBeeLangTestLanguage.g:11812:7: ( ( rule__Unit__Group_7_3__0 )=> rule__Unit__Group_7_3__0 )*
                    loop96:
                    do {
                        int alt96=2;
                        alt96 = dfa96.predict(input);
                        switch (alt96) {
                    	case 1 :
                    	    // InternalSimpleBeeLangTestLanguage.g:11812:8: ( rule__Unit__Group_7_3__0 )=> rule__Unit__Group_7_3__0
                    	    {
                    	    pushFollow(FollowSets000.FOLLOW_81);
                    	    rule__Unit__Group_7_3__0();

                    	    state._fsp--;
                    	    if (state.failed) return ;

                    	    }
                    	    break;

                    	default :
                    	    break loop96;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnitAccess().getGroup_7_3()); 
                    }

                    }


                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalSimpleBeeLangTestLanguage.g:11818:3: ({...}? => ( ( ( ( rule__Unit__Group_7_4__0 ) ) ( ( ( rule__Unit__Group_7_4__0 )=> rule__Unit__Group_7_4__0 )* ) ) ) )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:11818:3: ({...}? => ( ( ( ( rule__Unit__Group_7_4__0 ) ) ( ( ( rule__Unit__Group_7_4__0 )=> rule__Unit__Group_7_4__0 )* ) ) ) )
                    // InternalSimpleBeeLangTestLanguage.g:11819:4: {...}? => ( ( ( ( rule__Unit__Group_7_4__0 ) ) ( ( ( rule__Unit__Group_7_4__0 )=> rule__Unit__Group_7_4__0 )* ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 4) ) {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        throw new FailedPredicateException(input, "rule__Unit__UnorderedGroup_7__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 4)");
                    }
                    // InternalSimpleBeeLangTestLanguage.g:11819:100: ( ( ( ( rule__Unit__Group_7_4__0 ) ) ( ( ( rule__Unit__Group_7_4__0 )=> rule__Unit__Group_7_4__0 )* ) ) )
                    // InternalSimpleBeeLangTestLanguage.g:11820:5: ( ( ( rule__Unit__Group_7_4__0 ) ) ( ( ( rule__Unit__Group_7_4__0 )=> rule__Unit__Group_7_4__0 )* ) )
                    {
                    getUnorderedGroupHelper().select(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 4);
                    selected = true;
                    // InternalSimpleBeeLangTestLanguage.g:11826:5: ( ( ( rule__Unit__Group_7_4__0 ) ) ( ( ( rule__Unit__Group_7_4__0 )=> rule__Unit__Group_7_4__0 )* ) )
                    // InternalSimpleBeeLangTestLanguage.g:11827:6: ( ( rule__Unit__Group_7_4__0 ) ) ( ( ( rule__Unit__Group_7_4__0 )=> rule__Unit__Group_7_4__0 )* )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:11827:6: ( ( rule__Unit__Group_7_4__0 ) )
                    // InternalSimpleBeeLangTestLanguage.g:11828:7: ( rule__Unit__Group_7_4__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnitAccess().getGroup_7_4()); 
                    }
                    // InternalSimpleBeeLangTestLanguage.g:11829:7: ( rule__Unit__Group_7_4__0 )
                    // InternalSimpleBeeLangTestLanguage.g:11829:8: rule__Unit__Group_7_4__0
                    {
                    pushFollow(FollowSets000.FOLLOW_81);
                    rule__Unit__Group_7_4__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnitAccess().getGroup_7_4()); 
                    }

                    }

                    // InternalSimpleBeeLangTestLanguage.g:11832:6: ( ( ( rule__Unit__Group_7_4__0 )=> rule__Unit__Group_7_4__0 )* )
                    // InternalSimpleBeeLangTestLanguage.g:11833:7: ( ( rule__Unit__Group_7_4__0 )=> rule__Unit__Group_7_4__0 )*
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnitAccess().getGroup_7_4()); 
                    }
                    // InternalSimpleBeeLangTestLanguage.g:11834:7: ( ( rule__Unit__Group_7_4__0 )=> rule__Unit__Group_7_4__0 )*
                    loop97:
                    do {
                        int alt97=2;
                        alt97 = dfa97.predict(input);
                        switch (alt97) {
                    	case 1 :
                    	    // InternalSimpleBeeLangTestLanguage.g:11834:8: ( rule__Unit__Group_7_4__0 )=> rule__Unit__Group_7_4__0
                    	    {
                    	    pushFollow(FollowSets000.FOLLOW_81);
                    	    rule__Unit__Group_7_4__0();

                    	    state._fsp--;
                    	    if (state.failed) return ;

                    	    }
                    	    break;

                    	default :
                    	    break loop97;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnitAccess().getGroup_7_4()); 
                    }

                    }


                    }


                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalSimpleBeeLangTestLanguage.g:11840:3: ({...}? => ( ( ( ( rule__Unit__FunctionsAssignment_7_5 ) ) ( ( ( rule__Unit__FunctionsAssignment_7_5 )=> rule__Unit__FunctionsAssignment_7_5 )* ) ) ) )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:11840:3: ({...}? => ( ( ( ( rule__Unit__FunctionsAssignment_7_5 ) ) ( ( ( rule__Unit__FunctionsAssignment_7_5 )=> rule__Unit__FunctionsAssignment_7_5 )* ) ) ) )
                    // InternalSimpleBeeLangTestLanguage.g:11841:4: {...}? => ( ( ( ( rule__Unit__FunctionsAssignment_7_5 ) ) ( ( ( rule__Unit__FunctionsAssignment_7_5 )=> rule__Unit__FunctionsAssignment_7_5 )* ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 5) ) {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        throw new FailedPredicateException(input, "rule__Unit__UnorderedGroup_7__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 5)");
                    }
                    // InternalSimpleBeeLangTestLanguage.g:11841:100: ( ( ( ( rule__Unit__FunctionsAssignment_7_5 ) ) ( ( ( rule__Unit__FunctionsAssignment_7_5 )=> rule__Unit__FunctionsAssignment_7_5 )* ) ) )
                    // InternalSimpleBeeLangTestLanguage.g:11842:5: ( ( ( rule__Unit__FunctionsAssignment_7_5 ) ) ( ( ( rule__Unit__FunctionsAssignment_7_5 )=> rule__Unit__FunctionsAssignment_7_5 )* ) )
                    {
                    getUnorderedGroupHelper().select(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 5);
                    selected = true;
                    // InternalSimpleBeeLangTestLanguage.g:11848:5: ( ( ( rule__Unit__FunctionsAssignment_7_5 ) ) ( ( ( rule__Unit__FunctionsAssignment_7_5 )=> rule__Unit__FunctionsAssignment_7_5 )* ) )
                    // InternalSimpleBeeLangTestLanguage.g:11849:6: ( ( rule__Unit__FunctionsAssignment_7_5 ) ) ( ( ( rule__Unit__FunctionsAssignment_7_5 )=> rule__Unit__FunctionsAssignment_7_5 )* )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:11849:6: ( ( rule__Unit__FunctionsAssignment_7_5 ) )
                    // InternalSimpleBeeLangTestLanguage.g:11850:7: ( rule__Unit__FunctionsAssignment_7_5 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnitAccess().getFunctionsAssignment_7_5()); 
                    }
                    // InternalSimpleBeeLangTestLanguage.g:11851:7: ( rule__Unit__FunctionsAssignment_7_5 )
                    // InternalSimpleBeeLangTestLanguage.g:11851:8: rule__Unit__FunctionsAssignment_7_5
                    {
                    pushFollow(FollowSets000.FOLLOW_82);
                    rule__Unit__FunctionsAssignment_7_5();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnitAccess().getFunctionsAssignment_7_5()); 
                    }

                    }

                    // InternalSimpleBeeLangTestLanguage.g:11854:6: ( ( ( rule__Unit__FunctionsAssignment_7_5 )=> rule__Unit__FunctionsAssignment_7_5 )* )
                    // InternalSimpleBeeLangTestLanguage.g:11855:7: ( ( rule__Unit__FunctionsAssignment_7_5 )=> rule__Unit__FunctionsAssignment_7_5 )*
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnitAccess().getFunctionsAssignment_7_5()); 
                    }
                    // InternalSimpleBeeLangTestLanguage.g:11856:7: ( ( rule__Unit__FunctionsAssignment_7_5 )=> rule__Unit__FunctionsAssignment_7_5 )*
                    loop98:
                    do {
                        int alt98=2;
                        alt98 = dfa98.predict(input);
                        switch (alt98) {
                    	case 1 :
                    	    // InternalSimpleBeeLangTestLanguage.g:11856:8: ( rule__Unit__FunctionsAssignment_7_5 )=> rule__Unit__FunctionsAssignment_7_5
                    	    {
                    	    pushFollow(FollowSets000.FOLLOW_82);
                    	    rule__Unit__FunctionsAssignment_7_5();

                    	    state._fsp--;
                    	    if (state.failed) return ;

                    	    }
                    	    break;

                    	default :
                    	    break loop98;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnitAccess().getFunctionsAssignment_7_5()); 
                    }

                    }


                    }


                    }


                    }


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 843, rule__Unit__UnorderedGroup_7__Impl_StartIndex); }

            	if (selected)
            		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getUnitAccess().getUnorderedGroup_7());
            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__UnorderedGroup_7__Impl"


    // $ANTLR start "rule__Unit__UnorderedGroup_7__0"
    // InternalSimpleBeeLangTestLanguage.g:11870:1: rule__Unit__UnorderedGroup_7__0 : rule__Unit__UnorderedGroup_7__Impl ( rule__Unit__UnorderedGroup_7__1 )? ;
    public final void rule__Unit__UnorderedGroup_7__0() throws RecognitionException {
        int rule__Unit__UnorderedGroup_7__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 844) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:11874:1: ( rule__Unit__UnorderedGroup_7__Impl ( rule__Unit__UnorderedGroup_7__1 )? )
            // InternalSimpleBeeLangTestLanguage.g:11875:2: rule__Unit__UnorderedGroup_7__Impl ( rule__Unit__UnorderedGroup_7__1 )?
            {
            pushFollow(FollowSets000.FOLLOW_82);
            rule__Unit__UnorderedGroup_7__Impl();

            state._fsp--;
            if (state.failed) return ;
            // InternalSimpleBeeLangTestLanguage.g:11876:2: ( rule__Unit__UnorderedGroup_7__1 )?
            int alt100=2;
            alt100 = dfa100.predict(input);
            switch (alt100) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:0:0: rule__Unit__UnorderedGroup_7__1
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__Unit__UnorderedGroup_7__1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 844, rule__Unit__UnorderedGroup_7__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__UnorderedGroup_7__0"


    // $ANTLR start "rule__Unit__UnorderedGroup_7__1"
    // InternalSimpleBeeLangTestLanguage.g:11882:1: rule__Unit__UnorderedGroup_7__1 : rule__Unit__UnorderedGroup_7__Impl ( rule__Unit__UnorderedGroup_7__2 )? ;
    public final void rule__Unit__UnorderedGroup_7__1() throws RecognitionException {
        int rule__Unit__UnorderedGroup_7__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 845) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:11886:1: ( rule__Unit__UnorderedGroup_7__Impl ( rule__Unit__UnorderedGroup_7__2 )? )
            // InternalSimpleBeeLangTestLanguage.g:11887:2: rule__Unit__UnorderedGroup_7__Impl ( rule__Unit__UnorderedGroup_7__2 )?
            {
            pushFollow(FollowSets000.FOLLOW_82);
            rule__Unit__UnorderedGroup_7__Impl();

            state._fsp--;
            if (state.failed) return ;
            // InternalSimpleBeeLangTestLanguage.g:11888:2: ( rule__Unit__UnorderedGroup_7__2 )?
            int alt101=2;
            alt101 = dfa101.predict(input);
            switch (alt101) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:0:0: rule__Unit__UnorderedGroup_7__2
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__Unit__UnorderedGroup_7__2();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 845, rule__Unit__UnorderedGroup_7__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__UnorderedGroup_7__1"


    // $ANTLR start "rule__Unit__UnorderedGroup_7__2"
    // InternalSimpleBeeLangTestLanguage.g:11894:1: rule__Unit__UnorderedGroup_7__2 : rule__Unit__UnorderedGroup_7__Impl ( rule__Unit__UnorderedGroup_7__3 )? ;
    public final void rule__Unit__UnorderedGroup_7__2() throws RecognitionException {
        int rule__Unit__UnorderedGroup_7__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 846) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:11898:1: ( rule__Unit__UnorderedGroup_7__Impl ( rule__Unit__UnorderedGroup_7__3 )? )
            // InternalSimpleBeeLangTestLanguage.g:11899:2: rule__Unit__UnorderedGroup_7__Impl ( rule__Unit__UnorderedGroup_7__3 )?
            {
            pushFollow(FollowSets000.FOLLOW_82);
            rule__Unit__UnorderedGroup_7__Impl();

            state._fsp--;
            if (state.failed) return ;
            // InternalSimpleBeeLangTestLanguage.g:11900:2: ( rule__Unit__UnorderedGroup_7__3 )?
            int alt102=2;
            alt102 = dfa102.predict(input);
            switch (alt102) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:0:0: rule__Unit__UnorderedGroup_7__3
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__Unit__UnorderedGroup_7__3();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 846, rule__Unit__UnorderedGroup_7__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__UnorderedGroup_7__2"


    // $ANTLR start "rule__Unit__UnorderedGroup_7__3"
    // InternalSimpleBeeLangTestLanguage.g:11906:1: rule__Unit__UnorderedGroup_7__3 : rule__Unit__UnorderedGroup_7__Impl ( rule__Unit__UnorderedGroup_7__4 )? ;
    public final void rule__Unit__UnorderedGroup_7__3() throws RecognitionException {
        int rule__Unit__UnorderedGroup_7__3_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 847) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:11910:1: ( rule__Unit__UnorderedGroup_7__Impl ( rule__Unit__UnorderedGroup_7__4 )? )
            // InternalSimpleBeeLangTestLanguage.g:11911:2: rule__Unit__UnorderedGroup_7__Impl ( rule__Unit__UnorderedGroup_7__4 )?
            {
            pushFollow(FollowSets000.FOLLOW_82);
            rule__Unit__UnorderedGroup_7__Impl();

            state._fsp--;
            if (state.failed) return ;
            // InternalSimpleBeeLangTestLanguage.g:11912:2: ( rule__Unit__UnorderedGroup_7__4 )?
            int alt103=2;
            alt103 = dfa103.predict(input);
            switch (alt103) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:0:0: rule__Unit__UnorderedGroup_7__4
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__Unit__UnorderedGroup_7__4();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 847, rule__Unit__UnorderedGroup_7__3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__UnorderedGroup_7__3"


    // $ANTLR start "rule__Unit__UnorderedGroup_7__4"
    // InternalSimpleBeeLangTestLanguage.g:11918:1: rule__Unit__UnorderedGroup_7__4 : rule__Unit__UnorderedGroup_7__Impl ( rule__Unit__UnorderedGroup_7__5 )? ;
    public final void rule__Unit__UnorderedGroup_7__4() throws RecognitionException {
        int rule__Unit__UnorderedGroup_7__4_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 848) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:11922:1: ( rule__Unit__UnorderedGroup_7__Impl ( rule__Unit__UnorderedGroup_7__5 )? )
            // InternalSimpleBeeLangTestLanguage.g:11923:2: rule__Unit__UnorderedGroup_7__Impl ( rule__Unit__UnorderedGroup_7__5 )?
            {
            pushFollow(FollowSets000.FOLLOW_82);
            rule__Unit__UnorderedGroup_7__Impl();

            state._fsp--;
            if (state.failed) return ;
            // InternalSimpleBeeLangTestLanguage.g:11924:2: ( rule__Unit__UnorderedGroup_7__5 )?
            int alt104=2;
            alt104 = dfa104.predict(input);
            switch (alt104) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:0:0: rule__Unit__UnorderedGroup_7__5
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__Unit__UnorderedGroup_7__5();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 848, rule__Unit__UnorderedGroup_7__4_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__UnorderedGroup_7__4"


    // $ANTLR start "rule__Unit__UnorderedGroup_7__5"
    // InternalSimpleBeeLangTestLanguage.g:11930:1: rule__Unit__UnorderedGroup_7__5 : rule__Unit__UnorderedGroup_7__Impl ;
    public final void rule__Unit__UnorderedGroup_7__5() throws RecognitionException {
        int rule__Unit__UnorderedGroup_7__5_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 849) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:11934:1: ( rule__Unit__UnorderedGroup_7__Impl )
            // InternalSimpleBeeLangTestLanguage.g:11935:2: rule__Unit__UnorderedGroup_7__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Unit__UnorderedGroup_7__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 849, rule__Unit__UnorderedGroup_7__5_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__UnorderedGroup_7__5"


    // $ANTLR start "rule__ProvidedCapability__UnorderedGroup_2_1"
    // InternalSimpleBeeLangTestLanguage.g:11942:1: rule__ProvidedCapability__UnorderedGroup_2_1 : rule__ProvidedCapability__UnorderedGroup_2_1__0 {...}?;
    public final void rule__ProvidedCapability__UnorderedGroup_2_1() throws RecognitionException {
        int rule__ProvidedCapability__UnorderedGroup_2_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        		getUnorderedGroupHelper().enter(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1());
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 850) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:11947:1: ( rule__ProvidedCapability__UnorderedGroup_2_1__0 {...}?)
            // InternalSimpleBeeLangTestLanguage.g:11948:2: rule__ProvidedCapability__UnorderedGroup_2_1__0 {...}?
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ProvidedCapability__UnorderedGroup_2_1__0();

            state._fsp--;
            if (state.failed) return ;
            if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1()) ) {
                if (state.backtracking>0) {state.failed=true; return ;}
                throw new FailedPredicateException(input, "rule__ProvidedCapability__UnorderedGroup_2_1", "getUnorderedGroupHelper().canLeave(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1())");
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 850, rule__ProvidedCapability__UnorderedGroup_2_1_StartIndex); }

            	getUnorderedGroupHelper().leave(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1());
            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__UnorderedGroup_2_1"


    // $ANTLR start "rule__ProvidedCapability__UnorderedGroup_2_1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:11956:1: rule__ProvidedCapability__UnorderedGroup_2_1__Impl : ( ({...}? => ( ( ( rule__ProvidedCapability__Group_2_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__ProvidedCapability__Group_2_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__ProvidedCapability__Group_2_1_2__0 ) ) ) ) ) ;
    public final void rule__ProvidedCapability__UnorderedGroup_2_1__Impl() throws RecognitionException {
        int rule__ProvidedCapability__UnorderedGroup_2_1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        		boolean selected = false;
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 851) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:11961:1: ( ( ({...}? => ( ( ( rule__ProvidedCapability__Group_2_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__ProvidedCapability__Group_2_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__ProvidedCapability__Group_2_1_2__0 ) ) ) ) ) )
            // InternalSimpleBeeLangTestLanguage.g:11962:3: ( ({...}? => ( ( ( rule__ProvidedCapability__Group_2_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__ProvidedCapability__Group_2_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__ProvidedCapability__Group_2_1_2__0 ) ) ) ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:11962:3: ( ({...}? => ( ( ( rule__ProvidedCapability__Group_2_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__ProvidedCapability__Group_2_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__ProvidedCapability__Group_2_1_2__0 ) ) ) ) )
            int alt105=3;
            int LA105_0 = input.LA(1);

            if ( LA105_0 == 54 && getUnorderedGroupHelper().canSelect(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1(), 0) ) {
                alt105=1;
            }
            else if ( LA105_0 == 55 && getUnorderedGroupHelper().canSelect(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1(), 1) ) {
                alt105=2;
            }
            else if ( LA105_0 == 46 && getUnorderedGroupHelper().canSelect(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1(), 2) ) {
                alt105=3;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 105, 0, input);

                throw nvae;
            }
            switch (alt105) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:11963:3: ({...}? => ( ( ( rule__ProvidedCapability__Group_2_1_0__0 ) ) ) )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:11963:3: ({...}? => ( ( ( rule__ProvidedCapability__Group_2_1_0__0 ) ) ) )
                    // InternalSimpleBeeLangTestLanguage.g:11964:4: {...}? => ( ( ( rule__ProvidedCapability__Group_2_1_0__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1(), 0) ) {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        throw new FailedPredicateException(input, "rule__ProvidedCapability__UnorderedGroup_2_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1(), 0)");
                    }
                    // InternalSimpleBeeLangTestLanguage.g:11964:116: ( ( ( rule__ProvidedCapability__Group_2_1_0__0 ) ) )
                    // InternalSimpleBeeLangTestLanguage.g:11965:5: ( ( rule__ProvidedCapability__Group_2_1_0__0 ) )
                    {
                    getUnorderedGroupHelper().select(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1(), 0);
                    selected = true;
                    // InternalSimpleBeeLangTestLanguage.g:11971:5: ( ( rule__ProvidedCapability__Group_2_1_0__0 ) )
                    // InternalSimpleBeeLangTestLanguage.g:11972:6: ( rule__ProvidedCapability__Group_2_1_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getProvidedCapabilityAccess().getGroup_2_1_0()); 
                    }
                    // InternalSimpleBeeLangTestLanguage.g:11973:6: ( rule__ProvidedCapability__Group_2_1_0__0 )
                    // InternalSimpleBeeLangTestLanguage.g:11973:7: rule__ProvidedCapability__Group_2_1_0__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ProvidedCapability__Group_2_1_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getProvidedCapabilityAccess().getGroup_2_1_0()); 
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSimpleBeeLangTestLanguage.g:11978:3: ({...}? => ( ( ( rule__ProvidedCapability__Group_2_1_1__0 ) ) ) )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:11978:3: ({...}? => ( ( ( rule__ProvidedCapability__Group_2_1_1__0 ) ) ) )
                    // InternalSimpleBeeLangTestLanguage.g:11979:4: {...}? => ( ( ( rule__ProvidedCapability__Group_2_1_1__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1(), 1) ) {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        throw new FailedPredicateException(input, "rule__ProvidedCapability__UnorderedGroup_2_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1(), 1)");
                    }
                    // InternalSimpleBeeLangTestLanguage.g:11979:116: ( ( ( rule__ProvidedCapability__Group_2_1_1__0 ) ) )
                    // InternalSimpleBeeLangTestLanguage.g:11980:5: ( ( rule__ProvidedCapability__Group_2_1_1__0 ) )
                    {
                    getUnorderedGroupHelper().select(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1(), 1);
                    selected = true;
                    // InternalSimpleBeeLangTestLanguage.g:11986:5: ( ( rule__ProvidedCapability__Group_2_1_1__0 ) )
                    // InternalSimpleBeeLangTestLanguage.g:11987:6: ( rule__ProvidedCapability__Group_2_1_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getProvidedCapabilityAccess().getGroup_2_1_1()); 
                    }
                    // InternalSimpleBeeLangTestLanguage.g:11988:6: ( rule__ProvidedCapability__Group_2_1_1__0 )
                    // InternalSimpleBeeLangTestLanguage.g:11988:7: rule__ProvidedCapability__Group_2_1_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ProvidedCapability__Group_2_1_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getProvidedCapabilityAccess().getGroup_2_1_1()); 
                    }

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalSimpleBeeLangTestLanguage.g:11993:3: ({...}? => ( ( ( rule__ProvidedCapability__Group_2_1_2__0 ) ) ) )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:11993:3: ({...}? => ( ( ( rule__ProvidedCapability__Group_2_1_2__0 ) ) ) )
                    // InternalSimpleBeeLangTestLanguage.g:11994:4: {...}? => ( ( ( rule__ProvidedCapability__Group_2_1_2__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1(), 2) ) {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        throw new FailedPredicateException(input, "rule__ProvidedCapability__UnorderedGroup_2_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1(), 2)");
                    }
                    // InternalSimpleBeeLangTestLanguage.g:11994:116: ( ( ( rule__ProvidedCapability__Group_2_1_2__0 ) ) )
                    // InternalSimpleBeeLangTestLanguage.g:11995:5: ( ( rule__ProvidedCapability__Group_2_1_2__0 ) )
                    {
                    getUnorderedGroupHelper().select(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1(), 2);
                    selected = true;
                    // InternalSimpleBeeLangTestLanguage.g:12001:5: ( ( rule__ProvidedCapability__Group_2_1_2__0 ) )
                    // InternalSimpleBeeLangTestLanguage.g:12002:6: ( rule__ProvidedCapability__Group_2_1_2__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getProvidedCapabilityAccess().getGroup_2_1_2()); 
                    }
                    // InternalSimpleBeeLangTestLanguage.g:12003:6: ( rule__ProvidedCapability__Group_2_1_2__0 )
                    // InternalSimpleBeeLangTestLanguage.g:12003:7: rule__ProvidedCapability__Group_2_1_2__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ProvidedCapability__Group_2_1_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getProvidedCapabilityAccess().getGroup_2_1_2()); 
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 851, rule__ProvidedCapability__UnorderedGroup_2_1__Impl_StartIndex); }

            	if (selected)
            		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1());
            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__UnorderedGroup_2_1__Impl"


    // $ANTLR start "rule__ProvidedCapability__UnorderedGroup_2_1__0"
    // InternalSimpleBeeLangTestLanguage.g:12016:1: rule__ProvidedCapability__UnorderedGroup_2_1__0 : rule__ProvidedCapability__UnorderedGroup_2_1__Impl ( rule__ProvidedCapability__UnorderedGroup_2_1__1 )? ;
    public final void rule__ProvidedCapability__UnorderedGroup_2_1__0() throws RecognitionException {
        int rule__ProvidedCapability__UnorderedGroup_2_1__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 852) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:12020:1: ( rule__ProvidedCapability__UnorderedGroup_2_1__Impl ( rule__ProvidedCapability__UnorderedGroup_2_1__1 )? )
            // InternalSimpleBeeLangTestLanguage.g:12021:2: rule__ProvidedCapability__UnorderedGroup_2_1__Impl ( rule__ProvidedCapability__UnorderedGroup_2_1__1 )?
            {
            pushFollow(FollowSets000.FOLLOW_83);
            rule__ProvidedCapability__UnorderedGroup_2_1__Impl();

            state._fsp--;
            if (state.failed) return ;
            // InternalSimpleBeeLangTestLanguage.g:12022:2: ( rule__ProvidedCapability__UnorderedGroup_2_1__1 )?
            int alt106=2;
            int LA106_0 = input.LA(1);

            if ( LA106_0 == 54 && getUnorderedGroupHelper().canSelect(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1(), 0) ) {
                alt106=1;
            }
            else if ( LA106_0 == 55 && getUnorderedGroupHelper().canSelect(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1(), 1) ) {
                alt106=1;
            }
            else if ( LA106_0 == 46 && getUnorderedGroupHelper().canSelect(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1(), 2) ) {
                alt106=1;
            }
            switch (alt106) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:0:0: rule__ProvidedCapability__UnorderedGroup_2_1__1
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ProvidedCapability__UnorderedGroup_2_1__1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 852, rule__ProvidedCapability__UnorderedGroup_2_1__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__UnorderedGroup_2_1__0"


    // $ANTLR start "rule__ProvidedCapability__UnorderedGroup_2_1__1"
    // InternalSimpleBeeLangTestLanguage.g:12028:1: rule__ProvidedCapability__UnorderedGroup_2_1__1 : rule__ProvidedCapability__UnorderedGroup_2_1__Impl ( rule__ProvidedCapability__UnorderedGroup_2_1__2 )? ;
    public final void rule__ProvidedCapability__UnorderedGroup_2_1__1() throws RecognitionException {
        int rule__ProvidedCapability__UnorderedGroup_2_1__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 853) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:12032:1: ( rule__ProvidedCapability__UnorderedGroup_2_1__Impl ( rule__ProvidedCapability__UnorderedGroup_2_1__2 )? )
            // InternalSimpleBeeLangTestLanguage.g:12033:2: rule__ProvidedCapability__UnorderedGroup_2_1__Impl ( rule__ProvidedCapability__UnorderedGroup_2_1__2 )?
            {
            pushFollow(FollowSets000.FOLLOW_83);
            rule__ProvidedCapability__UnorderedGroup_2_1__Impl();

            state._fsp--;
            if (state.failed) return ;
            // InternalSimpleBeeLangTestLanguage.g:12034:2: ( rule__ProvidedCapability__UnorderedGroup_2_1__2 )?
            int alt107=2;
            int LA107_0 = input.LA(1);

            if ( LA107_0 == 54 && getUnorderedGroupHelper().canSelect(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1(), 0) ) {
                alt107=1;
            }
            else if ( LA107_0 == 55 && getUnorderedGroupHelper().canSelect(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1(), 1) ) {
                alt107=1;
            }
            else if ( LA107_0 == 46 && getUnorderedGroupHelper().canSelect(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1(), 2) ) {
                alt107=1;
            }
            switch (alt107) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:0:0: rule__ProvidedCapability__UnorderedGroup_2_1__2
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ProvidedCapability__UnorderedGroup_2_1__2();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 853, rule__ProvidedCapability__UnorderedGroup_2_1__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__UnorderedGroup_2_1__1"


    // $ANTLR start "rule__ProvidedCapability__UnorderedGroup_2_1__2"
    // InternalSimpleBeeLangTestLanguage.g:12040:1: rule__ProvidedCapability__UnorderedGroup_2_1__2 : rule__ProvidedCapability__UnorderedGroup_2_1__Impl ;
    public final void rule__ProvidedCapability__UnorderedGroup_2_1__2() throws RecognitionException {
        int rule__ProvidedCapability__UnorderedGroup_2_1__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 854) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:12044:1: ( rule__ProvidedCapability__UnorderedGroup_2_1__Impl )
            // InternalSimpleBeeLangTestLanguage.g:12045:2: rule__ProvidedCapability__UnorderedGroup_2_1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ProvidedCapability__UnorderedGroup_2_1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 854, rule__ProvidedCapability__UnorderedGroup_2_1__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__UnorderedGroup_2_1__2"


    // $ANTLR start "rule__AliasedRequiredCapability__UnorderedGroup_3_1"
    // InternalSimpleBeeLangTestLanguage.g:12052:1: rule__AliasedRequiredCapability__UnorderedGroup_3_1 : ( rule__AliasedRequiredCapability__UnorderedGroup_3_1__0 )? ;
    public final void rule__AliasedRequiredCapability__UnorderedGroup_3_1() throws RecognitionException {
        int rule__AliasedRequiredCapability__UnorderedGroup_3_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        		getUnorderedGroupHelper().enter(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1());
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 855) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:12057:1: ( ( rule__AliasedRequiredCapability__UnorderedGroup_3_1__0 )? )
            // InternalSimpleBeeLangTestLanguage.g:12058:2: ( rule__AliasedRequiredCapability__UnorderedGroup_3_1__0 )?
            {
            // InternalSimpleBeeLangTestLanguage.g:12058:2: ( rule__AliasedRequiredCapability__UnorderedGroup_3_1__0 )?
            int alt108=2;
            int LA108_0 = input.LA(1);

            if ( LA108_0 == 54 && getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 0) ) {
                alt108=1;
            }
            else if ( LA108_0 == 73 && getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 1) ) {
                alt108=1;
            }
            else if ( LA108_0 == 57 && getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 2) ) {
                alt108=1;
            }
            else if ( LA108_0 == 58 && getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 3) ) {
                alt108=1;
            }
            else if ( LA108_0 == 46 && getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 4) ) {
                alt108=1;
            }
            switch (alt108) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:0:0: rule__AliasedRequiredCapability__UnorderedGroup_3_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__AliasedRequiredCapability__UnorderedGroup_3_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 855, rule__AliasedRequiredCapability__UnorderedGroup_3_1_StartIndex); }

            	getUnorderedGroupHelper().leave(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1());
            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__UnorderedGroup_3_1"


    // $ANTLR start "rule__AliasedRequiredCapability__UnorderedGroup_3_1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:12066:1: rule__AliasedRequiredCapability__UnorderedGroup_3_1__Impl : ( ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_2__0 ) ) ) ) | ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_3__0 ) ) ) ) | ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_4__0 ) ) ) ) ) ;
    public final void rule__AliasedRequiredCapability__UnorderedGroup_3_1__Impl() throws RecognitionException {
        int rule__AliasedRequiredCapability__UnorderedGroup_3_1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        		boolean selected = false;
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 856) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:12071:1: ( ( ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_2__0 ) ) ) ) | ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_3__0 ) ) ) ) | ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_4__0 ) ) ) ) ) )
            // InternalSimpleBeeLangTestLanguage.g:12072:3: ( ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_2__0 ) ) ) ) | ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_3__0 ) ) ) ) | ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_4__0 ) ) ) ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:12072:3: ( ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_2__0 ) ) ) ) | ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_3__0 ) ) ) ) | ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_4__0 ) ) ) ) )
            int alt109=5;
            int LA109_0 = input.LA(1);

            if ( LA109_0 == 54 && getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 0) ) {
                alt109=1;
            }
            else if ( LA109_0 == 73 && getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 1) ) {
                alt109=2;
            }
            else if ( LA109_0 == 57 && getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 2) ) {
                alt109=3;
            }
            else if ( LA109_0 == 58 && getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 3) ) {
                alt109=4;
            }
            else if ( LA109_0 == 46 && getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 4) ) {
                alt109=5;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 109, 0, input);

                throw nvae;
            }
            switch (alt109) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:12073:3: ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_0__0 ) ) ) )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:12073:3: ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_0__0 ) ) ) )
                    // InternalSimpleBeeLangTestLanguage.g:12074:4: {...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_0__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 0) ) {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        throw new FailedPredicateException(input, "rule__AliasedRequiredCapability__UnorderedGroup_3_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 0)");
                    }
                    // InternalSimpleBeeLangTestLanguage.g:12074:123: ( ( ( rule__AliasedRequiredCapability__Group_3_1_0__0 ) ) )
                    // InternalSimpleBeeLangTestLanguage.g:12075:5: ( ( rule__AliasedRequiredCapability__Group_3_1_0__0 ) )
                    {
                    getUnorderedGroupHelper().select(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 0);
                    selected = true;
                    // InternalSimpleBeeLangTestLanguage.g:12081:5: ( ( rule__AliasedRequiredCapability__Group_3_1_0__0 ) )
                    // InternalSimpleBeeLangTestLanguage.g:12082:6: ( rule__AliasedRequiredCapability__Group_3_1_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAliasedRequiredCapabilityAccess().getGroup_3_1_0()); 
                    }
                    // InternalSimpleBeeLangTestLanguage.g:12083:6: ( rule__AliasedRequiredCapability__Group_3_1_0__0 )
                    // InternalSimpleBeeLangTestLanguage.g:12083:7: rule__AliasedRequiredCapability__Group_3_1_0__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__AliasedRequiredCapability__Group_3_1_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAliasedRequiredCapabilityAccess().getGroup_3_1_0()); 
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSimpleBeeLangTestLanguage.g:12088:3: ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_1__0 ) ) ) )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:12088:3: ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_1__0 ) ) ) )
                    // InternalSimpleBeeLangTestLanguage.g:12089:4: {...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_1__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 1) ) {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        throw new FailedPredicateException(input, "rule__AliasedRequiredCapability__UnorderedGroup_3_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 1)");
                    }
                    // InternalSimpleBeeLangTestLanguage.g:12089:123: ( ( ( rule__AliasedRequiredCapability__Group_3_1_1__0 ) ) )
                    // InternalSimpleBeeLangTestLanguage.g:12090:5: ( ( rule__AliasedRequiredCapability__Group_3_1_1__0 ) )
                    {
                    getUnorderedGroupHelper().select(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 1);
                    selected = true;
                    // InternalSimpleBeeLangTestLanguage.g:12096:5: ( ( rule__AliasedRequiredCapability__Group_3_1_1__0 ) )
                    // InternalSimpleBeeLangTestLanguage.g:12097:6: ( rule__AliasedRequiredCapability__Group_3_1_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAliasedRequiredCapabilityAccess().getGroup_3_1_1()); 
                    }
                    // InternalSimpleBeeLangTestLanguage.g:12098:6: ( rule__AliasedRequiredCapability__Group_3_1_1__0 )
                    // InternalSimpleBeeLangTestLanguage.g:12098:7: rule__AliasedRequiredCapability__Group_3_1_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__AliasedRequiredCapability__Group_3_1_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAliasedRequiredCapabilityAccess().getGroup_3_1_1()); 
                    }

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalSimpleBeeLangTestLanguage.g:12103:3: ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_2__0 ) ) ) )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:12103:3: ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_2__0 ) ) ) )
                    // InternalSimpleBeeLangTestLanguage.g:12104:4: {...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_2__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 2) ) {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        throw new FailedPredicateException(input, "rule__AliasedRequiredCapability__UnorderedGroup_3_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 2)");
                    }
                    // InternalSimpleBeeLangTestLanguage.g:12104:123: ( ( ( rule__AliasedRequiredCapability__Group_3_1_2__0 ) ) )
                    // InternalSimpleBeeLangTestLanguage.g:12105:5: ( ( rule__AliasedRequiredCapability__Group_3_1_2__0 ) )
                    {
                    getUnorderedGroupHelper().select(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 2);
                    selected = true;
                    // InternalSimpleBeeLangTestLanguage.g:12111:5: ( ( rule__AliasedRequiredCapability__Group_3_1_2__0 ) )
                    // InternalSimpleBeeLangTestLanguage.g:12112:6: ( rule__AliasedRequiredCapability__Group_3_1_2__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAliasedRequiredCapabilityAccess().getGroup_3_1_2()); 
                    }
                    // InternalSimpleBeeLangTestLanguage.g:12113:6: ( rule__AliasedRequiredCapability__Group_3_1_2__0 )
                    // InternalSimpleBeeLangTestLanguage.g:12113:7: rule__AliasedRequiredCapability__Group_3_1_2__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__AliasedRequiredCapability__Group_3_1_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAliasedRequiredCapabilityAccess().getGroup_3_1_2()); 
                    }

                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalSimpleBeeLangTestLanguage.g:12118:3: ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_3__0 ) ) ) )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:12118:3: ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_3__0 ) ) ) )
                    // InternalSimpleBeeLangTestLanguage.g:12119:4: {...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_3__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 3) ) {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        throw new FailedPredicateException(input, "rule__AliasedRequiredCapability__UnorderedGroup_3_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 3)");
                    }
                    // InternalSimpleBeeLangTestLanguage.g:12119:123: ( ( ( rule__AliasedRequiredCapability__Group_3_1_3__0 ) ) )
                    // InternalSimpleBeeLangTestLanguage.g:12120:5: ( ( rule__AliasedRequiredCapability__Group_3_1_3__0 ) )
                    {
                    getUnorderedGroupHelper().select(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 3);
                    selected = true;
                    // InternalSimpleBeeLangTestLanguage.g:12126:5: ( ( rule__AliasedRequiredCapability__Group_3_1_3__0 ) )
                    // InternalSimpleBeeLangTestLanguage.g:12127:6: ( rule__AliasedRequiredCapability__Group_3_1_3__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAliasedRequiredCapabilityAccess().getGroup_3_1_3()); 
                    }
                    // InternalSimpleBeeLangTestLanguage.g:12128:6: ( rule__AliasedRequiredCapability__Group_3_1_3__0 )
                    // InternalSimpleBeeLangTestLanguage.g:12128:7: rule__AliasedRequiredCapability__Group_3_1_3__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__AliasedRequiredCapability__Group_3_1_3__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAliasedRequiredCapabilityAccess().getGroup_3_1_3()); 
                    }

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalSimpleBeeLangTestLanguage.g:12133:3: ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_4__0 ) ) ) )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:12133:3: ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_4__0 ) ) ) )
                    // InternalSimpleBeeLangTestLanguage.g:12134:4: {...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_4__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 4) ) {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        throw new FailedPredicateException(input, "rule__AliasedRequiredCapability__UnorderedGroup_3_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 4)");
                    }
                    // InternalSimpleBeeLangTestLanguage.g:12134:123: ( ( ( rule__AliasedRequiredCapability__Group_3_1_4__0 ) ) )
                    // InternalSimpleBeeLangTestLanguage.g:12135:5: ( ( rule__AliasedRequiredCapability__Group_3_1_4__0 ) )
                    {
                    getUnorderedGroupHelper().select(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 4);
                    selected = true;
                    // InternalSimpleBeeLangTestLanguage.g:12141:5: ( ( rule__AliasedRequiredCapability__Group_3_1_4__0 ) )
                    // InternalSimpleBeeLangTestLanguage.g:12142:6: ( rule__AliasedRequiredCapability__Group_3_1_4__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAliasedRequiredCapabilityAccess().getGroup_3_1_4()); 
                    }
                    // InternalSimpleBeeLangTestLanguage.g:12143:6: ( rule__AliasedRequiredCapability__Group_3_1_4__0 )
                    // InternalSimpleBeeLangTestLanguage.g:12143:7: rule__AliasedRequiredCapability__Group_3_1_4__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__AliasedRequiredCapability__Group_3_1_4__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAliasedRequiredCapabilityAccess().getGroup_3_1_4()); 
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 856, rule__AliasedRequiredCapability__UnorderedGroup_3_1__Impl_StartIndex); }

            	if (selected)
            		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1());
            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__UnorderedGroup_3_1__Impl"


    // $ANTLR start "rule__AliasedRequiredCapability__UnorderedGroup_3_1__0"
    // InternalSimpleBeeLangTestLanguage.g:12156:1: rule__AliasedRequiredCapability__UnorderedGroup_3_1__0 : rule__AliasedRequiredCapability__UnorderedGroup_3_1__Impl ( rule__AliasedRequiredCapability__UnorderedGroup_3_1__1 )? ;
    public final void rule__AliasedRequiredCapability__UnorderedGroup_3_1__0() throws RecognitionException {
        int rule__AliasedRequiredCapability__UnorderedGroup_3_1__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 857) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:12160:1: ( rule__AliasedRequiredCapability__UnorderedGroup_3_1__Impl ( rule__AliasedRequiredCapability__UnorderedGroup_3_1__1 )? )
            // InternalSimpleBeeLangTestLanguage.g:12161:2: rule__AliasedRequiredCapability__UnorderedGroup_3_1__Impl ( rule__AliasedRequiredCapability__UnorderedGroup_3_1__1 )?
            {
            pushFollow(FollowSets000.FOLLOW_84);
            rule__AliasedRequiredCapability__UnorderedGroup_3_1__Impl();

            state._fsp--;
            if (state.failed) return ;
            // InternalSimpleBeeLangTestLanguage.g:12162:2: ( rule__AliasedRequiredCapability__UnorderedGroup_3_1__1 )?
            int alt110=2;
            int LA110_0 = input.LA(1);

            if ( LA110_0 == 54 && getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 0) ) {
                alt110=1;
            }
            else if ( LA110_0 == 73 && getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 1) ) {
                alt110=1;
            }
            else if ( LA110_0 == 57 && getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 2) ) {
                alt110=1;
            }
            else if ( LA110_0 == 58 && getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 3) ) {
                alt110=1;
            }
            else if ( LA110_0 == 46 && getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 4) ) {
                alt110=1;
            }
            switch (alt110) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:0:0: rule__AliasedRequiredCapability__UnorderedGroup_3_1__1
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__AliasedRequiredCapability__UnorderedGroup_3_1__1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 857, rule__AliasedRequiredCapability__UnorderedGroup_3_1__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__UnorderedGroup_3_1__0"


    // $ANTLR start "rule__AliasedRequiredCapability__UnorderedGroup_3_1__1"
    // InternalSimpleBeeLangTestLanguage.g:12168:1: rule__AliasedRequiredCapability__UnorderedGroup_3_1__1 : rule__AliasedRequiredCapability__UnorderedGroup_3_1__Impl ( rule__AliasedRequiredCapability__UnorderedGroup_3_1__2 )? ;
    public final void rule__AliasedRequiredCapability__UnorderedGroup_3_1__1() throws RecognitionException {
        int rule__AliasedRequiredCapability__UnorderedGroup_3_1__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 858) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:12172:1: ( rule__AliasedRequiredCapability__UnorderedGroup_3_1__Impl ( rule__AliasedRequiredCapability__UnorderedGroup_3_1__2 )? )
            // InternalSimpleBeeLangTestLanguage.g:12173:2: rule__AliasedRequiredCapability__UnorderedGroup_3_1__Impl ( rule__AliasedRequiredCapability__UnorderedGroup_3_1__2 )?
            {
            pushFollow(FollowSets000.FOLLOW_84);
            rule__AliasedRequiredCapability__UnorderedGroup_3_1__Impl();

            state._fsp--;
            if (state.failed) return ;
            // InternalSimpleBeeLangTestLanguage.g:12174:2: ( rule__AliasedRequiredCapability__UnorderedGroup_3_1__2 )?
            int alt111=2;
            int LA111_0 = input.LA(1);

            if ( LA111_0 == 54 && getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 0) ) {
                alt111=1;
            }
            else if ( LA111_0 == 73 && getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 1) ) {
                alt111=1;
            }
            else if ( LA111_0 == 57 && getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 2) ) {
                alt111=1;
            }
            else if ( LA111_0 == 58 && getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 3) ) {
                alt111=1;
            }
            else if ( LA111_0 == 46 && getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 4) ) {
                alt111=1;
            }
            switch (alt111) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:0:0: rule__AliasedRequiredCapability__UnorderedGroup_3_1__2
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__AliasedRequiredCapability__UnorderedGroup_3_1__2();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 858, rule__AliasedRequiredCapability__UnorderedGroup_3_1__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__UnorderedGroup_3_1__1"


    // $ANTLR start "rule__AliasedRequiredCapability__UnorderedGroup_3_1__2"
    // InternalSimpleBeeLangTestLanguage.g:12180:1: rule__AliasedRequiredCapability__UnorderedGroup_3_1__2 : rule__AliasedRequiredCapability__UnorderedGroup_3_1__Impl ( rule__AliasedRequiredCapability__UnorderedGroup_3_1__3 )? ;
    public final void rule__AliasedRequiredCapability__UnorderedGroup_3_1__2() throws RecognitionException {
        int rule__AliasedRequiredCapability__UnorderedGroup_3_1__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 859) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:12184:1: ( rule__AliasedRequiredCapability__UnorderedGroup_3_1__Impl ( rule__AliasedRequiredCapability__UnorderedGroup_3_1__3 )? )
            // InternalSimpleBeeLangTestLanguage.g:12185:2: rule__AliasedRequiredCapability__UnorderedGroup_3_1__Impl ( rule__AliasedRequiredCapability__UnorderedGroup_3_1__3 )?
            {
            pushFollow(FollowSets000.FOLLOW_84);
            rule__AliasedRequiredCapability__UnorderedGroup_3_1__Impl();

            state._fsp--;
            if (state.failed) return ;
            // InternalSimpleBeeLangTestLanguage.g:12186:2: ( rule__AliasedRequiredCapability__UnorderedGroup_3_1__3 )?
            int alt112=2;
            int LA112_0 = input.LA(1);

            if ( LA112_0 == 54 && getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 0) ) {
                alt112=1;
            }
            else if ( LA112_0 == 73 && getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 1) ) {
                alt112=1;
            }
            else if ( LA112_0 == 57 && getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 2) ) {
                alt112=1;
            }
            else if ( LA112_0 == 58 && getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 3) ) {
                alt112=1;
            }
            else if ( LA112_0 == 46 && getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 4) ) {
                alt112=1;
            }
            switch (alt112) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:0:0: rule__AliasedRequiredCapability__UnorderedGroup_3_1__3
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__AliasedRequiredCapability__UnorderedGroup_3_1__3();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 859, rule__AliasedRequiredCapability__UnorderedGroup_3_1__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__UnorderedGroup_3_1__2"


    // $ANTLR start "rule__AliasedRequiredCapability__UnorderedGroup_3_1__3"
    // InternalSimpleBeeLangTestLanguage.g:12192:1: rule__AliasedRequiredCapability__UnorderedGroup_3_1__3 : rule__AliasedRequiredCapability__UnorderedGroup_3_1__Impl ( rule__AliasedRequiredCapability__UnorderedGroup_3_1__4 )? ;
    public final void rule__AliasedRequiredCapability__UnorderedGroup_3_1__3() throws RecognitionException {
        int rule__AliasedRequiredCapability__UnorderedGroup_3_1__3_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 860) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:12196:1: ( rule__AliasedRequiredCapability__UnorderedGroup_3_1__Impl ( rule__AliasedRequiredCapability__UnorderedGroup_3_1__4 )? )
            // InternalSimpleBeeLangTestLanguage.g:12197:2: rule__AliasedRequiredCapability__UnorderedGroup_3_1__Impl ( rule__AliasedRequiredCapability__UnorderedGroup_3_1__4 )?
            {
            pushFollow(FollowSets000.FOLLOW_84);
            rule__AliasedRequiredCapability__UnorderedGroup_3_1__Impl();

            state._fsp--;
            if (state.failed) return ;
            // InternalSimpleBeeLangTestLanguage.g:12198:2: ( rule__AliasedRequiredCapability__UnorderedGroup_3_1__4 )?
            int alt113=2;
            int LA113_0 = input.LA(1);

            if ( LA113_0 == 54 && getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 0) ) {
                alt113=1;
            }
            else if ( LA113_0 == 73 && getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 1) ) {
                alt113=1;
            }
            else if ( LA113_0 == 57 && getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 2) ) {
                alt113=1;
            }
            else if ( LA113_0 == 58 && getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 3) ) {
                alt113=1;
            }
            else if ( LA113_0 == 46 && getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 4) ) {
                alt113=1;
            }
            switch (alt113) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:0:0: rule__AliasedRequiredCapability__UnorderedGroup_3_1__4
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__AliasedRequiredCapability__UnorderedGroup_3_1__4();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 860, rule__AliasedRequiredCapability__UnorderedGroup_3_1__3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__UnorderedGroup_3_1__3"


    // $ANTLR start "rule__AliasedRequiredCapability__UnorderedGroup_3_1__4"
    // InternalSimpleBeeLangTestLanguage.g:12204:1: rule__AliasedRequiredCapability__UnorderedGroup_3_1__4 : rule__AliasedRequiredCapability__UnorderedGroup_3_1__Impl ;
    public final void rule__AliasedRequiredCapability__UnorderedGroup_3_1__4() throws RecognitionException {
        int rule__AliasedRequiredCapability__UnorderedGroup_3_1__4_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 861) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:12208:1: ( rule__AliasedRequiredCapability__UnorderedGroup_3_1__Impl )
            // InternalSimpleBeeLangTestLanguage.g:12209:2: rule__AliasedRequiredCapability__UnorderedGroup_3_1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AliasedRequiredCapability__UnorderedGroup_3_1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 861, rule__AliasedRequiredCapability__UnorderedGroup_3_1__4_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__UnorderedGroup_3_1__4"


    // $ANTLR start "rule__RequiredCapability__UnorderedGroup_3_1"
    // InternalSimpleBeeLangTestLanguage.g:12216:1: rule__RequiredCapability__UnorderedGroup_3_1 : ( rule__RequiredCapability__UnorderedGroup_3_1__0 )? ;
    public final void rule__RequiredCapability__UnorderedGroup_3_1() throws RecognitionException {
        int rule__RequiredCapability__UnorderedGroup_3_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        		getUnorderedGroupHelper().enter(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1());
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 862) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:12221:1: ( ( rule__RequiredCapability__UnorderedGroup_3_1__0 )? )
            // InternalSimpleBeeLangTestLanguage.g:12222:2: ( rule__RequiredCapability__UnorderedGroup_3_1__0 )?
            {
            // InternalSimpleBeeLangTestLanguage.g:12222:2: ( rule__RequiredCapability__UnorderedGroup_3_1__0 )?
            int alt114=2;
            int LA114_0 = input.LA(1);

            if ( LA114_0 == 54 && getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 0) ) {
                alt114=1;
            }
            else if ( LA114_0 == 73 && getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 1) ) {
                alt114=1;
            }
            else if ( LA114_0 == 57 && getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 2) ) {
                alt114=1;
            }
            else if ( LA114_0 == 58 && getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 3) ) {
                alt114=1;
            }
            else if ( LA114_0 == 46 && getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 4) ) {
                alt114=1;
            }
            switch (alt114) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:0:0: rule__RequiredCapability__UnorderedGroup_3_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__RequiredCapability__UnorderedGroup_3_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 862, rule__RequiredCapability__UnorderedGroup_3_1_StartIndex); }

            	getUnorderedGroupHelper().leave(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1());
            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__UnorderedGroup_3_1"


    // $ANTLR start "rule__RequiredCapability__UnorderedGroup_3_1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:12230:1: rule__RequiredCapability__UnorderedGroup_3_1__Impl : ( ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_2__0 ) ) ) ) | ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_3__0 ) ) ) ) | ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_4__0 ) ) ) ) ) ;
    public final void rule__RequiredCapability__UnorderedGroup_3_1__Impl() throws RecognitionException {
        int rule__RequiredCapability__UnorderedGroup_3_1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        		boolean selected = false;
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 863) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:12235:1: ( ( ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_2__0 ) ) ) ) | ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_3__0 ) ) ) ) | ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_4__0 ) ) ) ) ) )
            // InternalSimpleBeeLangTestLanguage.g:12236:3: ( ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_2__0 ) ) ) ) | ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_3__0 ) ) ) ) | ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_4__0 ) ) ) ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:12236:3: ( ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_2__0 ) ) ) ) | ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_3__0 ) ) ) ) | ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_4__0 ) ) ) ) )
            int alt115=5;
            int LA115_0 = input.LA(1);

            if ( LA115_0 == 54 && getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 0) ) {
                alt115=1;
            }
            else if ( LA115_0 == 73 && getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 1) ) {
                alt115=2;
            }
            else if ( LA115_0 == 57 && getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 2) ) {
                alt115=3;
            }
            else if ( LA115_0 == 58 && getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 3) ) {
                alt115=4;
            }
            else if ( LA115_0 == 46 && getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 4) ) {
                alt115=5;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 115, 0, input);

                throw nvae;
            }
            switch (alt115) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:12237:3: ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_0__0 ) ) ) )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:12237:3: ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_0__0 ) ) ) )
                    // InternalSimpleBeeLangTestLanguage.g:12238:4: {...}? => ( ( ( rule__RequiredCapability__Group_3_1_0__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 0) ) {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        throw new FailedPredicateException(input, "rule__RequiredCapability__UnorderedGroup_3_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 0)");
                    }
                    // InternalSimpleBeeLangTestLanguage.g:12238:116: ( ( ( rule__RequiredCapability__Group_3_1_0__0 ) ) )
                    // InternalSimpleBeeLangTestLanguage.g:12239:5: ( ( rule__RequiredCapability__Group_3_1_0__0 ) )
                    {
                    getUnorderedGroupHelper().select(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 0);
                    selected = true;
                    // InternalSimpleBeeLangTestLanguage.g:12245:5: ( ( rule__RequiredCapability__Group_3_1_0__0 ) )
                    // InternalSimpleBeeLangTestLanguage.g:12246:6: ( rule__RequiredCapability__Group_3_1_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getRequiredCapabilityAccess().getGroup_3_1_0()); 
                    }
                    // InternalSimpleBeeLangTestLanguage.g:12247:6: ( rule__RequiredCapability__Group_3_1_0__0 )
                    // InternalSimpleBeeLangTestLanguage.g:12247:7: rule__RequiredCapability__Group_3_1_0__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__RequiredCapability__Group_3_1_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getRequiredCapabilityAccess().getGroup_3_1_0()); 
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSimpleBeeLangTestLanguage.g:12252:3: ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_1__0 ) ) ) )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:12252:3: ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_1__0 ) ) ) )
                    // InternalSimpleBeeLangTestLanguage.g:12253:4: {...}? => ( ( ( rule__RequiredCapability__Group_3_1_1__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 1) ) {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        throw new FailedPredicateException(input, "rule__RequiredCapability__UnorderedGroup_3_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 1)");
                    }
                    // InternalSimpleBeeLangTestLanguage.g:12253:116: ( ( ( rule__RequiredCapability__Group_3_1_1__0 ) ) )
                    // InternalSimpleBeeLangTestLanguage.g:12254:5: ( ( rule__RequiredCapability__Group_3_1_1__0 ) )
                    {
                    getUnorderedGroupHelper().select(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 1);
                    selected = true;
                    // InternalSimpleBeeLangTestLanguage.g:12260:5: ( ( rule__RequiredCapability__Group_3_1_1__0 ) )
                    // InternalSimpleBeeLangTestLanguage.g:12261:6: ( rule__RequiredCapability__Group_3_1_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getRequiredCapabilityAccess().getGroup_3_1_1()); 
                    }
                    // InternalSimpleBeeLangTestLanguage.g:12262:6: ( rule__RequiredCapability__Group_3_1_1__0 )
                    // InternalSimpleBeeLangTestLanguage.g:12262:7: rule__RequiredCapability__Group_3_1_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__RequiredCapability__Group_3_1_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getRequiredCapabilityAccess().getGroup_3_1_1()); 
                    }

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalSimpleBeeLangTestLanguage.g:12267:3: ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_2__0 ) ) ) )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:12267:3: ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_2__0 ) ) ) )
                    // InternalSimpleBeeLangTestLanguage.g:12268:4: {...}? => ( ( ( rule__RequiredCapability__Group_3_1_2__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 2) ) {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        throw new FailedPredicateException(input, "rule__RequiredCapability__UnorderedGroup_3_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 2)");
                    }
                    // InternalSimpleBeeLangTestLanguage.g:12268:116: ( ( ( rule__RequiredCapability__Group_3_1_2__0 ) ) )
                    // InternalSimpleBeeLangTestLanguage.g:12269:5: ( ( rule__RequiredCapability__Group_3_1_2__0 ) )
                    {
                    getUnorderedGroupHelper().select(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 2);
                    selected = true;
                    // InternalSimpleBeeLangTestLanguage.g:12275:5: ( ( rule__RequiredCapability__Group_3_1_2__0 ) )
                    // InternalSimpleBeeLangTestLanguage.g:12276:6: ( rule__RequiredCapability__Group_3_1_2__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getRequiredCapabilityAccess().getGroup_3_1_2()); 
                    }
                    // InternalSimpleBeeLangTestLanguage.g:12277:6: ( rule__RequiredCapability__Group_3_1_2__0 )
                    // InternalSimpleBeeLangTestLanguage.g:12277:7: rule__RequiredCapability__Group_3_1_2__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__RequiredCapability__Group_3_1_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getRequiredCapabilityAccess().getGroup_3_1_2()); 
                    }

                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalSimpleBeeLangTestLanguage.g:12282:3: ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_3__0 ) ) ) )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:12282:3: ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_3__0 ) ) ) )
                    // InternalSimpleBeeLangTestLanguage.g:12283:4: {...}? => ( ( ( rule__RequiredCapability__Group_3_1_3__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 3) ) {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        throw new FailedPredicateException(input, "rule__RequiredCapability__UnorderedGroup_3_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 3)");
                    }
                    // InternalSimpleBeeLangTestLanguage.g:12283:116: ( ( ( rule__RequiredCapability__Group_3_1_3__0 ) ) )
                    // InternalSimpleBeeLangTestLanguage.g:12284:5: ( ( rule__RequiredCapability__Group_3_1_3__0 ) )
                    {
                    getUnorderedGroupHelper().select(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 3);
                    selected = true;
                    // InternalSimpleBeeLangTestLanguage.g:12290:5: ( ( rule__RequiredCapability__Group_3_1_3__0 ) )
                    // InternalSimpleBeeLangTestLanguage.g:12291:6: ( rule__RequiredCapability__Group_3_1_3__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getRequiredCapabilityAccess().getGroup_3_1_3()); 
                    }
                    // InternalSimpleBeeLangTestLanguage.g:12292:6: ( rule__RequiredCapability__Group_3_1_3__0 )
                    // InternalSimpleBeeLangTestLanguage.g:12292:7: rule__RequiredCapability__Group_3_1_3__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__RequiredCapability__Group_3_1_3__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getRequiredCapabilityAccess().getGroup_3_1_3()); 
                    }

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalSimpleBeeLangTestLanguage.g:12297:3: ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_4__0 ) ) ) )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:12297:3: ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_4__0 ) ) ) )
                    // InternalSimpleBeeLangTestLanguage.g:12298:4: {...}? => ( ( ( rule__RequiredCapability__Group_3_1_4__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 4) ) {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        throw new FailedPredicateException(input, "rule__RequiredCapability__UnorderedGroup_3_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 4)");
                    }
                    // InternalSimpleBeeLangTestLanguage.g:12298:116: ( ( ( rule__RequiredCapability__Group_3_1_4__0 ) ) )
                    // InternalSimpleBeeLangTestLanguage.g:12299:5: ( ( rule__RequiredCapability__Group_3_1_4__0 ) )
                    {
                    getUnorderedGroupHelper().select(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 4);
                    selected = true;
                    // InternalSimpleBeeLangTestLanguage.g:12305:5: ( ( rule__RequiredCapability__Group_3_1_4__0 ) )
                    // InternalSimpleBeeLangTestLanguage.g:12306:6: ( rule__RequiredCapability__Group_3_1_4__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getRequiredCapabilityAccess().getGroup_3_1_4()); 
                    }
                    // InternalSimpleBeeLangTestLanguage.g:12307:6: ( rule__RequiredCapability__Group_3_1_4__0 )
                    // InternalSimpleBeeLangTestLanguage.g:12307:7: rule__RequiredCapability__Group_3_1_4__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__RequiredCapability__Group_3_1_4__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getRequiredCapabilityAccess().getGroup_3_1_4()); 
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 863, rule__RequiredCapability__UnorderedGroup_3_1__Impl_StartIndex); }

            	if (selected)
            		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1());
            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__UnorderedGroup_3_1__Impl"


    // $ANTLR start "rule__RequiredCapability__UnorderedGroup_3_1__0"
    // InternalSimpleBeeLangTestLanguage.g:12320:1: rule__RequiredCapability__UnorderedGroup_3_1__0 : rule__RequiredCapability__UnorderedGroup_3_1__Impl ( rule__RequiredCapability__UnorderedGroup_3_1__1 )? ;
    public final void rule__RequiredCapability__UnorderedGroup_3_1__0() throws RecognitionException {
        int rule__RequiredCapability__UnorderedGroup_3_1__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 864) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:12324:1: ( rule__RequiredCapability__UnorderedGroup_3_1__Impl ( rule__RequiredCapability__UnorderedGroup_3_1__1 )? )
            // InternalSimpleBeeLangTestLanguage.g:12325:2: rule__RequiredCapability__UnorderedGroup_3_1__Impl ( rule__RequiredCapability__UnorderedGroup_3_1__1 )?
            {
            pushFollow(FollowSets000.FOLLOW_84);
            rule__RequiredCapability__UnorderedGroup_3_1__Impl();

            state._fsp--;
            if (state.failed) return ;
            // InternalSimpleBeeLangTestLanguage.g:12326:2: ( rule__RequiredCapability__UnorderedGroup_3_1__1 )?
            int alt116=2;
            int LA116_0 = input.LA(1);

            if ( LA116_0 == 54 && getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 0) ) {
                alt116=1;
            }
            else if ( LA116_0 == 73 && getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 1) ) {
                alt116=1;
            }
            else if ( LA116_0 == 57 && getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 2) ) {
                alt116=1;
            }
            else if ( LA116_0 == 58 && getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 3) ) {
                alt116=1;
            }
            else if ( LA116_0 == 46 && getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 4) ) {
                alt116=1;
            }
            switch (alt116) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:0:0: rule__RequiredCapability__UnorderedGroup_3_1__1
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__RequiredCapability__UnorderedGroup_3_1__1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 864, rule__RequiredCapability__UnorderedGroup_3_1__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__UnorderedGroup_3_1__0"


    // $ANTLR start "rule__RequiredCapability__UnorderedGroup_3_1__1"
    // InternalSimpleBeeLangTestLanguage.g:12332:1: rule__RequiredCapability__UnorderedGroup_3_1__1 : rule__RequiredCapability__UnorderedGroup_3_1__Impl ( rule__RequiredCapability__UnorderedGroup_3_1__2 )? ;
    public final void rule__RequiredCapability__UnorderedGroup_3_1__1() throws RecognitionException {
        int rule__RequiredCapability__UnorderedGroup_3_1__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 865) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:12336:1: ( rule__RequiredCapability__UnorderedGroup_3_1__Impl ( rule__RequiredCapability__UnorderedGroup_3_1__2 )? )
            // InternalSimpleBeeLangTestLanguage.g:12337:2: rule__RequiredCapability__UnorderedGroup_3_1__Impl ( rule__RequiredCapability__UnorderedGroup_3_1__2 )?
            {
            pushFollow(FollowSets000.FOLLOW_84);
            rule__RequiredCapability__UnorderedGroup_3_1__Impl();

            state._fsp--;
            if (state.failed) return ;
            // InternalSimpleBeeLangTestLanguage.g:12338:2: ( rule__RequiredCapability__UnorderedGroup_3_1__2 )?
            int alt117=2;
            int LA117_0 = input.LA(1);

            if ( LA117_0 == 54 && getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 0) ) {
                alt117=1;
            }
            else if ( LA117_0 == 73 && getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 1) ) {
                alt117=1;
            }
            else if ( LA117_0 == 57 && getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 2) ) {
                alt117=1;
            }
            else if ( LA117_0 == 58 && getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 3) ) {
                alt117=1;
            }
            else if ( LA117_0 == 46 && getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 4) ) {
                alt117=1;
            }
            switch (alt117) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:0:0: rule__RequiredCapability__UnorderedGroup_3_1__2
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__RequiredCapability__UnorderedGroup_3_1__2();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 865, rule__RequiredCapability__UnorderedGroup_3_1__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__UnorderedGroup_3_1__1"


    // $ANTLR start "rule__RequiredCapability__UnorderedGroup_3_1__2"
    // InternalSimpleBeeLangTestLanguage.g:12344:1: rule__RequiredCapability__UnorderedGroup_3_1__2 : rule__RequiredCapability__UnorderedGroup_3_1__Impl ( rule__RequiredCapability__UnorderedGroup_3_1__3 )? ;
    public final void rule__RequiredCapability__UnorderedGroup_3_1__2() throws RecognitionException {
        int rule__RequiredCapability__UnorderedGroup_3_1__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 866) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:12348:1: ( rule__RequiredCapability__UnorderedGroup_3_1__Impl ( rule__RequiredCapability__UnorderedGroup_3_1__3 )? )
            // InternalSimpleBeeLangTestLanguage.g:12349:2: rule__RequiredCapability__UnorderedGroup_3_1__Impl ( rule__RequiredCapability__UnorderedGroup_3_1__3 )?
            {
            pushFollow(FollowSets000.FOLLOW_84);
            rule__RequiredCapability__UnorderedGroup_3_1__Impl();

            state._fsp--;
            if (state.failed) return ;
            // InternalSimpleBeeLangTestLanguage.g:12350:2: ( rule__RequiredCapability__UnorderedGroup_3_1__3 )?
            int alt118=2;
            int LA118_0 = input.LA(1);

            if ( LA118_0 == 54 && getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 0) ) {
                alt118=1;
            }
            else if ( LA118_0 == 73 && getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 1) ) {
                alt118=1;
            }
            else if ( LA118_0 == 57 && getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 2) ) {
                alt118=1;
            }
            else if ( LA118_0 == 58 && getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 3) ) {
                alt118=1;
            }
            else if ( LA118_0 == 46 && getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 4) ) {
                alt118=1;
            }
            switch (alt118) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:0:0: rule__RequiredCapability__UnorderedGroup_3_1__3
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__RequiredCapability__UnorderedGroup_3_1__3();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 866, rule__RequiredCapability__UnorderedGroup_3_1__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__UnorderedGroup_3_1__2"


    // $ANTLR start "rule__RequiredCapability__UnorderedGroup_3_1__3"
    // InternalSimpleBeeLangTestLanguage.g:12356:1: rule__RequiredCapability__UnorderedGroup_3_1__3 : rule__RequiredCapability__UnorderedGroup_3_1__Impl ( rule__RequiredCapability__UnorderedGroup_3_1__4 )? ;
    public final void rule__RequiredCapability__UnorderedGroup_3_1__3() throws RecognitionException {
        int rule__RequiredCapability__UnorderedGroup_3_1__3_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 867) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:12360:1: ( rule__RequiredCapability__UnorderedGroup_3_1__Impl ( rule__RequiredCapability__UnorderedGroup_3_1__4 )? )
            // InternalSimpleBeeLangTestLanguage.g:12361:2: rule__RequiredCapability__UnorderedGroup_3_1__Impl ( rule__RequiredCapability__UnorderedGroup_3_1__4 )?
            {
            pushFollow(FollowSets000.FOLLOW_84);
            rule__RequiredCapability__UnorderedGroup_3_1__Impl();

            state._fsp--;
            if (state.failed) return ;
            // InternalSimpleBeeLangTestLanguage.g:12362:2: ( rule__RequiredCapability__UnorderedGroup_3_1__4 )?
            int alt119=2;
            int LA119_0 = input.LA(1);

            if ( LA119_0 == 54 && getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 0) ) {
                alt119=1;
            }
            else if ( LA119_0 == 73 && getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 1) ) {
                alt119=1;
            }
            else if ( LA119_0 == 57 && getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 2) ) {
                alt119=1;
            }
            else if ( LA119_0 == 58 && getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 3) ) {
                alt119=1;
            }
            else if ( LA119_0 == 46 && getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 4) ) {
                alt119=1;
            }
            switch (alt119) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:0:0: rule__RequiredCapability__UnorderedGroup_3_1__4
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__RequiredCapability__UnorderedGroup_3_1__4();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 867, rule__RequiredCapability__UnorderedGroup_3_1__3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__UnorderedGroup_3_1__3"


    // $ANTLR start "rule__RequiredCapability__UnorderedGroup_3_1__4"
    // InternalSimpleBeeLangTestLanguage.g:12368:1: rule__RequiredCapability__UnorderedGroup_3_1__4 : rule__RequiredCapability__UnorderedGroup_3_1__Impl ;
    public final void rule__RequiredCapability__UnorderedGroup_3_1__4() throws RecognitionException {
        int rule__RequiredCapability__UnorderedGroup_3_1__4_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 868) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:12372:1: ( rule__RequiredCapability__UnorderedGroup_3_1__Impl )
            // InternalSimpleBeeLangTestLanguage.g:12373:2: rule__RequiredCapability__UnorderedGroup_3_1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RequiredCapability__UnorderedGroup_3_1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 868, rule__RequiredCapability__UnorderedGroup_3_1__4_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__UnorderedGroup_3_1__4"


    // $ANTLR start "rule__Model__UnitsAssignment_0"
    // InternalSimpleBeeLangTestLanguage.g:12380:1: rule__Model__UnitsAssignment_0 : ( ruleUnit ) ;
    public final void rule__Model__UnitsAssignment_0() throws RecognitionException {
        int rule__Model__UnitsAssignment_0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 869) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:12384:1: ( ( ruleUnit ) )
            // InternalSimpleBeeLangTestLanguage.g:12385:2: ( ruleUnit )
            {
            // InternalSimpleBeeLangTestLanguage.g:12385:2: ( ruleUnit )
            // InternalSimpleBeeLangTestLanguage.g:12386:3: ruleUnit
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getModelAccess().getUnitsUnitParserRuleCall_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleUnit();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getModelAccess().getUnitsUnitParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 869, rule__Model__UnitsAssignment_0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Model__UnitsAssignment_0"


    // $ANTLR start "rule__Model__FunctionsAssignment_1"
    // InternalSimpleBeeLangTestLanguage.g:12395:1: rule__Model__FunctionsAssignment_1 : ( ruleFunction ) ;
    public final void rule__Model__FunctionsAssignment_1() throws RecognitionException {
        int rule__Model__FunctionsAssignment_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 870) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:12399:1: ( ( ruleFunction ) )
            // InternalSimpleBeeLangTestLanguage.g:12400:2: ( ruleFunction )
            {
            // InternalSimpleBeeLangTestLanguage.g:12400:2: ( ruleFunction )
            // InternalSimpleBeeLangTestLanguage.g:12401:3: ruleFunction
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getModelAccess().getFunctionsFunctionParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleFunction();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getModelAccess().getFunctionsFunctionParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 870, rule__Model__FunctionsAssignment_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Model__FunctionsAssignment_1"


    // $ANTLR start "rule__Unit__DocumentationAssignment_1"
    // InternalSimpleBeeLangTestLanguage.g:12410:1: rule__Unit__DocumentationAssignment_1 : ( RULE_DOCUMENTATION ) ;
    public final void rule__Unit__DocumentationAssignment_1() throws RecognitionException {
        int rule__Unit__DocumentationAssignment_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 871) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:12414:1: ( ( RULE_DOCUMENTATION ) )
            // InternalSimpleBeeLangTestLanguage.g:12415:2: ( RULE_DOCUMENTATION )
            {
            // InternalSimpleBeeLangTestLanguage.g:12415:2: ( RULE_DOCUMENTATION )
            // InternalSimpleBeeLangTestLanguage.g:12416:3: RULE_DOCUMENTATION
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getDocumentationDOCUMENTATIONTerminalRuleCall_1_0()); 
            }
            match(input,RULE_DOCUMENTATION,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getDocumentationDOCUMENTATIONTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 871, rule__Unit__DocumentationAssignment_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__DocumentationAssignment_1"


    // $ANTLR start "rule__Unit__NameAssignment_3"
    // InternalSimpleBeeLangTestLanguage.g:12425:1: rule__Unit__NameAssignment_3 : ( RULE_ID ) ;
    public final void rule__Unit__NameAssignment_3() throws RecognitionException {
        int rule__Unit__NameAssignment_3_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 872) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:12429:1: ( ( RULE_ID ) )
            // InternalSimpleBeeLangTestLanguage.g:12430:2: ( RULE_ID )
            {
            // InternalSimpleBeeLangTestLanguage.g:12430:2: ( RULE_ID )
            // InternalSimpleBeeLangTestLanguage.g:12431:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getNameIDTerminalRuleCall_3_0()); 
            }
            match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getNameIDTerminalRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 872, rule__Unit__NameAssignment_3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__NameAssignment_3"


    // $ANTLR start "rule__Unit__VersionAssignment_4_1"
    // InternalSimpleBeeLangTestLanguage.g:12440:1: rule__Unit__VersionAssignment_4_1 : ( RULE_ID ) ;
    public final void rule__Unit__VersionAssignment_4_1() throws RecognitionException {
        int rule__Unit__VersionAssignment_4_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 873) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:12444:1: ( ( RULE_ID ) )
            // InternalSimpleBeeLangTestLanguage.g:12445:2: ( RULE_ID )
            {
            // InternalSimpleBeeLangTestLanguage.g:12445:2: ( RULE_ID )
            // InternalSimpleBeeLangTestLanguage.g:12446:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getVersionIDTerminalRuleCall_4_1_0()); 
            }
            match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getVersionIDTerminalRuleCall_4_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 873, rule__Unit__VersionAssignment_4_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__VersionAssignment_4_1"


    // $ANTLR start "rule__Unit__ImplementsAssignment_5_1"
    // InternalSimpleBeeLangTestLanguage.g:12455:1: rule__Unit__ImplementsAssignment_5_1 : ( ruleSimpleTypeRef ) ;
    public final void rule__Unit__ImplementsAssignment_5_1() throws RecognitionException {
        int rule__Unit__ImplementsAssignment_5_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 874) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:12459:1: ( ( ruleSimpleTypeRef ) )
            // InternalSimpleBeeLangTestLanguage.g:12460:2: ( ruleSimpleTypeRef )
            {
            // InternalSimpleBeeLangTestLanguage.g:12460:2: ( ruleSimpleTypeRef )
            // InternalSimpleBeeLangTestLanguage.g:12461:3: ruleSimpleTypeRef
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getImplementsSimpleTypeRefParserRuleCall_5_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSimpleTypeRef();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getImplementsSimpleTypeRefParserRuleCall_5_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 874, rule__Unit__ImplementsAssignment_5_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__ImplementsAssignment_5_1"


    // $ANTLR start "rule__Unit__ImplementsAssignment_5_2_1"
    // InternalSimpleBeeLangTestLanguage.g:12470:1: rule__Unit__ImplementsAssignment_5_2_1 : ( ruleSimpleTypeRef ) ;
    public final void rule__Unit__ImplementsAssignment_5_2_1() throws RecognitionException {
        int rule__Unit__ImplementsAssignment_5_2_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 875) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:12474:1: ( ( ruleSimpleTypeRef ) )
            // InternalSimpleBeeLangTestLanguage.g:12475:2: ( ruleSimpleTypeRef )
            {
            // InternalSimpleBeeLangTestLanguage.g:12475:2: ( ruleSimpleTypeRef )
            // InternalSimpleBeeLangTestLanguage.g:12476:3: ruleSimpleTypeRef
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getImplementsSimpleTypeRefParserRuleCall_5_2_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSimpleTypeRef();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getImplementsSimpleTypeRefParserRuleCall_5_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 875, rule__Unit__ImplementsAssignment_5_2_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__ImplementsAssignment_5_2_1"


    // $ANTLR start "rule__Unit__SourceLocationAssignment_7_0_2"
    // InternalSimpleBeeLangTestLanguage.g:12485:1: rule__Unit__SourceLocationAssignment_7_0_2 : ( rulePath ) ;
    public final void rule__Unit__SourceLocationAssignment_7_0_2() throws RecognitionException {
        int rule__Unit__SourceLocationAssignment_7_0_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 876) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:12489:1: ( ( rulePath ) )
            // InternalSimpleBeeLangTestLanguage.g:12490:2: ( rulePath )
            {
            // InternalSimpleBeeLangTestLanguage.g:12490:2: ( rulePath )
            // InternalSimpleBeeLangTestLanguage.g:12491:3: rulePath
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getSourceLocationPathParserRuleCall_7_0_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            rulePath();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getSourceLocationPathParserRuleCall_7_0_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 876, rule__Unit__SourceLocationAssignment_7_0_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__SourceLocationAssignment_7_0_2"


    // $ANTLR start "rule__Unit__OutputLocationAssignment_7_1_2"
    // InternalSimpleBeeLangTestLanguage.g:12500:1: rule__Unit__OutputLocationAssignment_7_1_2 : ( rulePath ) ;
    public final void rule__Unit__OutputLocationAssignment_7_1_2() throws RecognitionException {
        int rule__Unit__OutputLocationAssignment_7_1_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 877) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:12504:1: ( ( rulePath ) )
            // InternalSimpleBeeLangTestLanguage.g:12505:2: ( rulePath )
            {
            // InternalSimpleBeeLangTestLanguage.g:12505:2: ( rulePath )
            // InternalSimpleBeeLangTestLanguage.g:12506:3: rulePath
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getOutputLocationPathParserRuleCall_7_1_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            rulePath();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getOutputLocationPathParserRuleCall_7_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 877, rule__Unit__OutputLocationAssignment_7_1_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__OutputLocationAssignment_7_1_2"


    // $ANTLR start "rule__Unit__ProvidedCapabilitiesAssignment_7_2_2"
    // InternalSimpleBeeLangTestLanguage.g:12515:1: rule__Unit__ProvidedCapabilitiesAssignment_7_2_2 : ( ruleProvidedCapability ) ;
    public final void rule__Unit__ProvidedCapabilitiesAssignment_7_2_2() throws RecognitionException {
        int rule__Unit__ProvidedCapabilitiesAssignment_7_2_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 878) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:12519:1: ( ( ruleProvidedCapability ) )
            // InternalSimpleBeeLangTestLanguage.g:12520:2: ( ruleProvidedCapability )
            {
            // InternalSimpleBeeLangTestLanguage.g:12520:2: ( ruleProvidedCapability )
            // InternalSimpleBeeLangTestLanguage.g:12521:3: ruleProvidedCapability
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getProvidedCapabilitiesProvidedCapabilityParserRuleCall_7_2_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleProvidedCapability();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getProvidedCapabilitiesProvidedCapabilityParserRuleCall_7_2_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 878, rule__Unit__ProvidedCapabilitiesAssignment_7_2_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__ProvidedCapabilitiesAssignment_7_2_2"


    // $ANTLR start "rule__Unit__RequiredCapabilitiesAssignment_7_3_2"
    // InternalSimpleBeeLangTestLanguage.g:12530:1: rule__Unit__RequiredCapabilitiesAssignment_7_3_2 : ( ruleAliasedRequiredCapability ) ;
    public final void rule__Unit__RequiredCapabilitiesAssignment_7_3_2() throws RecognitionException {
        int rule__Unit__RequiredCapabilitiesAssignment_7_3_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 879) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:12534:1: ( ( ruleAliasedRequiredCapability ) )
            // InternalSimpleBeeLangTestLanguage.g:12535:2: ( ruleAliasedRequiredCapability )
            {
            // InternalSimpleBeeLangTestLanguage.g:12535:2: ( ruleAliasedRequiredCapability )
            // InternalSimpleBeeLangTestLanguage.g:12536:3: ruleAliasedRequiredCapability
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getRequiredCapabilitiesAliasedRequiredCapabilityParserRuleCall_7_3_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAliasedRequiredCapability();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getRequiredCapabilitiesAliasedRequiredCapabilityParserRuleCall_7_3_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 879, rule__Unit__RequiredCapabilitiesAssignment_7_3_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__RequiredCapabilitiesAssignment_7_3_2"


    // $ANTLR start "rule__Unit__MetaRequiredCapabilitiesAssignment_7_4_3"
    // InternalSimpleBeeLangTestLanguage.g:12545:1: rule__Unit__MetaRequiredCapabilitiesAssignment_7_4_3 : ( ruleRequiredCapability ) ;
    public final void rule__Unit__MetaRequiredCapabilitiesAssignment_7_4_3() throws RecognitionException {
        int rule__Unit__MetaRequiredCapabilitiesAssignment_7_4_3_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 880) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:12549:1: ( ( ruleRequiredCapability ) )
            // InternalSimpleBeeLangTestLanguage.g:12550:2: ( ruleRequiredCapability )
            {
            // InternalSimpleBeeLangTestLanguage.g:12550:2: ( ruleRequiredCapability )
            // InternalSimpleBeeLangTestLanguage.g:12551:3: ruleRequiredCapability
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getMetaRequiredCapabilitiesRequiredCapabilityParserRuleCall_7_4_3_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleRequiredCapability();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getMetaRequiredCapabilitiesRequiredCapabilityParserRuleCall_7_4_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 880, rule__Unit__MetaRequiredCapabilitiesAssignment_7_4_3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__MetaRequiredCapabilitiesAssignment_7_4_3"


    // $ANTLR start "rule__Unit__FunctionsAssignment_7_5"
    // InternalSimpleBeeLangTestLanguage.g:12560:1: rule__Unit__FunctionsAssignment_7_5 : ( ruleFunction ) ;
    public final void rule__Unit__FunctionsAssignment_7_5() throws RecognitionException {
        int rule__Unit__FunctionsAssignment_7_5_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 881) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:12564:1: ( ( ruleFunction ) )
            // InternalSimpleBeeLangTestLanguage.g:12565:2: ( ruleFunction )
            {
            // InternalSimpleBeeLangTestLanguage.g:12565:2: ( ruleFunction )
            // InternalSimpleBeeLangTestLanguage.g:12566:3: ruleFunction
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getFunctionsFunctionParserRuleCall_7_5_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleFunction();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getFunctionsFunctionParserRuleCall_7_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 881, rule__Unit__FunctionsAssignment_7_5_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__FunctionsAssignment_7_5"


    // $ANTLR start "rule__ProvidedCapability__NameSpaceAssignment_1_0"
    // InternalSimpleBeeLangTestLanguage.g:12575:1: rule__ProvidedCapability__NameSpaceAssignment_1_0 : ( RULE_ID ) ;
    public final void rule__ProvidedCapability__NameSpaceAssignment_1_0() throws RecognitionException {
        int rule__ProvidedCapability__NameSpaceAssignment_1_0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 882) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:12579:1: ( ( RULE_ID ) )
            // InternalSimpleBeeLangTestLanguage.g:12580:2: ( RULE_ID )
            {
            // InternalSimpleBeeLangTestLanguage.g:12580:2: ( RULE_ID )
            // InternalSimpleBeeLangTestLanguage.g:12581:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProvidedCapabilityAccess().getNameSpaceIDTerminalRuleCall_1_0_0()); 
            }
            match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getProvidedCapabilityAccess().getNameSpaceIDTerminalRuleCall_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 882, rule__ProvidedCapability__NameSpaceAssignment_1_0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__NameSpaceAssignment_1_0"


    // $ANTLR start "rule__ProvidedCapability__CondExprAssignment_2_1_0_2"
    // InternalSimpleBeeLangTestLanguage.g:12590:1: rule__ProvidedCapability__CondExprAssignment_2_1_0_2 : ( ruleExpression ) ;
    public final void rule__ProvidedCapability__CondExprAssignment_2_1_0_2() throws RecognitionException {
        int rule__ProvidedCapability__CondExprAssignment_2_1_0_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 883) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:12594:1: ( ( ruleExpression ) )
            // InternalSimpleBeeLangTestLanguage.g:12595:2: ( ruleExpression )
            {
            // InternalSimpleBeeLangTestLanguage.g:12595:2: ( ruleExpression )
            // InternalSimpleBeeLangTestLanguage.g:12596:3: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProvidedCapabilityAccess().getCondExprExpressionParserRuleCall_2_1_0_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getProvidedCapabilityAccess().getCondExprExpressionParserRuleCall_2_1_0_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 883, rule__ProvidedCapability__CondExprAssignment_2_1_0_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__CondExprAssignment_2_1_0_2"


    // $ANTLR start "rule__ProvidedCapability__NameAssignment_2_1_1_2"
    // InternalSimpleBeeLangTestLanguage.g:12605:1: rule__ProvidedCapability__NameAssignment_2_1_1_2 : ( RULE_ID ) ;
    public final void rule__ProvidedCapability__NameAssignment_2_1_1_2() throws RecognitionException {
        int rule__ProvidedCapability__NameAssignment_2_1_1_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 884) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:12609:1: ( ( RULE_ID ) )
            // InternalSimpleBeeLangTestLanguage.g:12610:2: ( RULE_ID )
            {
            // InternalSimpleBeeLangTestLanguage.g:12610:2: ( RULE_ID )
            // InternalSimpleBeeLangTestLanguage.g:12611:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProvidedCapabilityAccess().getNameIDTerminalRuleCall_2_1_1_2_0()); 
            }
            match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getProvidedCapabilityAccess().getNameIDTerminalRuleCall_2_1_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 884, rule__ProvidedCapability__NameAssignment_2_1_1_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__NameAssignment_2_1_1_2"


    // $ANTLR start "rule__ProvidedCapability__VersionAssignment_2_1_2_2"
    // InternalSimpleBeeLangTestLanguage.g:12620:1: rule__ProvidedCapability__VersionAssignment_2_1_2_2 : ( RULE_ID ) ;
    public final void rule__ProvidedCapability__VersionAssignment_2_1_2_2() throws RecognitionException {
        int rule__ProvidedCapability__VersionAssignment_2_1_2_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 885) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:12624:1: ( ( RULE_ID ) )
            // InternalSimpleBeeLangTestLanguage.g:12625:2: ( RULE_ID )
            {
            // InternalSimpleBeeLangTestLanguage.g:12625:2: ( RULE_ID )
            // InternalSimpleBeeLangTestLanguage.g:12626:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProvidedCapabilityAccess().getVersionIDTerminalRuleCall_2_1_2_2_0()); 
            }
            match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getProvidedCapabilityAccess().getVersionIDTerminalRuleCall_2_1_2_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 885, rule__ProvidedCapability__VersionAssignment_2_1_2_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__VersionAssignment_2_1_2_2"


    // $ANTLR start "rule__AliasedRequiredCapability__NameSpaceAssignment_0_0"
    // InternalSimpleBeeLangTestLanguage.g:12635:1: rule__AliasedRequiredCapability__NameSpaceAssignment_0_0 : ( RULE_ID ) ;
    public final void rule__AliasedRequiredCapability__NameSpaceAssignment_0_0() throws RecognitionException {
        int rule__AliasedRequiredCapability__NameSpaceAssignment_0_0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 886) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:12639:1: ( ( RULE_ID ) )
            // InternalSimpleBeeLangTestLanguage.g:12640:2: ( RULE_ID )
            {
            // InternalSimpleBeeLangTestLanguage.g:12640:2: ( RULE_ID )
            // InternalSimpleBeeLangTestLanguage.g:12641:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAliasedRequiredCapabilityAccess().getNameSpaceIDTerminalRuleCall_0_0_0()); 
            }
            match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAliasedRequiredCapabilityAccess().getNameSpaceIDTerminalRuleCall_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 886, rule__AliasedRequiredCapability__NameSpaceAssignment_0_0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__NameSpaceAssignment_0_0"


    // $ANTLR start "rule__AliasedRequiredCapability__NameAssignment_1"
    // InternalSimpleBeeLangTestLanguage.g:12650:1: rule__AliasedRequiredCapability__NameAssignment_1 : ( RULE_ID ) ;
    public final void rule__AliasedRequiredCapability__NameAssignment_1() throws RecognitionException {
        int rule__AliasedRequiredCapability__NameAssignment_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 887) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:12654:1: ( ( RULE_ID ) )
            // InternalSimpleBeeLangTestLanguage.g:12655:2: ( RULE_ID )
            {
            // InternalSimpleBeeLangTestLanguage.g:12655:2: ( RULE_ID )
            // InternalSimpleBeeLangTestLanguage.g:12656:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAliasedRequiredCapabilityAccess().getNameIDTerminalRuleCall_1_0()); 
            }
            match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAliasedRequiredCapabilityAccess().getNameIDTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 887, rule__AliasedRequiredCapability__NameAssignment_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__NameAssignment_1"


    // $ANTLR start "rule__AliasedRequiredCapability__AliasAssignment_2_1"
    // InternalSimpleBeeLangTestLanguage.g:12665:1: rule__AliasedRequiredCapability__AliasAssignment_2_1 : ( RULE_ID ) ;
    public final void rule__AliasedRequiredCapability__AliasAssignment_2_1() throws RecognitionException {
        int rule__AliasedRequiredCapability__AliasAssignment_2_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 888) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:12669:1: ( ( RULE_ID ) )
            // InternalSimpleBeeLangTestLanguage.g:12670:2: ( RULE_ID )
            {
            // InternalSimpleBeeLangTestLanguage.g:12670:2: ( RULE_ID )
            // InternalSimpleBeeLangTestLanguage.g:12671:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAliasedRequiredCapabilityAccess().getAliasIDTerminalRuleCall_2_1_0()); 
            }
            match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAliasedRequiredCapabilityAccess().getAliasIDTerminalRuleCall_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 888, rule__AliasedRequiredCapability__AliasAssignment_2_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__AliasAssignment_2_1"


    // $ANTLR start "rule__AliasedRequiredCapability__CondExprAssignment_3_1_0_2"
    // InternalSimpleBeeLangTestLanguage.g:12680:1: rule__AliasedRequiredCapability__CondExprAssignment_3_1_0_2 : ( ruleExpression ) ;
    public final void rule__AliasedRequiredCapability__CondExprAssignment_3_1_0_2() throws RecognitionException {
        int rule__AliasedRequiredCapability__CondExprAssignment_3_1_0_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 889) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:12684:1: ( ( ruleExpression ) )
            // InternalSimpleBeeLangTestLanguage.g:12685:2: ( ruleExpression )
            {
            // InternalSimpleBeeLangTestLanguage.g:12685:2: ( ruleExpression )
            // InternalSimpleBeeLangTestLanguage.g:12686:3: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAliasedRequiredCapabilityAccess().getCondExprExpressionParserRuleCall_3_1_0_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAliasedRequiredCapabilityAccess().getCondExprExpressionParserRuleCall_3_1_0_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 889, rule__AliasedRequiredCapability__CondExprAssignment_3_1_0_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__CondExprAssignment_3_1_0_2"


    // $ANTLR start "rule__AliasedRequiredCapability__GreedyAssignment_3_1_1_0"
    // InternalSimpleBeeLangTestLanguage.g:12695:1: rule__AliasedRequiredCapability__GreedyAssignment_3_1_1_0 : ( ( 'greedy' ) ) ;
    public final void rule__AliasedRequiredCapability__GreedyAssignment_3_1_1_0() throws RecognitionException {
        int rule__AliasedRequiredCapability__GreedyAssignment_3_1_1_0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 890) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:12699:1: ( ( ( 'greedy' ) ) )
            // InternalSimpleBeeLangTestLanguage.g:12700:2: ( ( 'greedy' ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:12700:2: ( ( 'greedy' ) )
            // InternalSimpleBeeLangTestLanguage.g:12701:3: ( 'greedy' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAliasedRequiredCapabilityAccess().getGreedyGreedyKeyword_3_1_1_0_0()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:12702:3: ( 'greedy' )
            // InternalSimpleBeeLangTestLanguage.g:12703:4: 'greedy'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAliasedRequiredCapabilityAccess().getGreedyGreedyKeyword_3_1_1_0_0()); 
            }
            match(input,73,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAliasedRequiredCapabilityAccess().getGreedyGreedyKeyword_3_1_1_0_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAliasedRequiredCapabilityAccess().getGreedyGreedyKeyword_3_1_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 890, rule__AliasedRequiredCapability__GreedyAssignment_3_1_1_0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__GreedyAssignment_3_1_1_0"


    // $ANTLR start "rule__AliasedRequiredCapability__MinAssignment_3_1_2_2"
    // InternalSimpleBeeLangTestLanguage.g:12714:1: rule__AliasedRequiredCapability__MinAssignment_3_1_2_2 : ( RULE_INT ) ;
    public final void rule__AliasedRequiredCapability__MinAssignment_3_1_2_2() throws RecognitionException {
        int rule__AliasedRequiredCapability__MinAssignment_3_1_2_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 891) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:12718:1: ( ( RULE_INT ) )
            // InternalSimpleBeeLangTestLanguage.g:12719:2: ( RULE_INT )
            {
            // InternalSimpleBeeLangTestLanguage.g:12719:2: ( RULE_INT )
            // InternalSimpleBeeLangTestLanguage.g:12720:3: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAliasedRequiredCapabilityAccess().getMinINTTerminalRuleCall_3_1_2_2_0()); 
            }
            match(input,RULE_INT,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAliasedRequiredCapabilityAccess().getMinINTTerminalRuleCall_3_1_2_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 891, rule__AliasedRequiredCapability__MinAssignment_3_1_2_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__MinAssignment_3_1_2_2"


    // $ANTLR start "rule__AliasedRequiredCapability__MaxAssignment_3_1_3_2"
    // InternalSimpleBeeLangTestLanguage.g:12729:1: rule__AliasedRequiredCapability__MaxAssignment_3_1_3_2 : ( RULE_INT ) ;
    public final void rule__AliasedRequiredCapability__MaxAssignment_3_1_3_2() throws RecognitionException {
        int rule__AliasedRequiredCapability__MaxAssignment_3_1_3_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 892) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:12733:1: ( ( RULE_INT ) )
            // InternalSimpleBeeLangTestLanguage.g:12734:2: ( RULE_INT )
            {
            // InternalSimpleBeeLangTestLanguage.g:12734:2: ( RULE_INT )
            // InternalSimpleBeeLangTestLanguage.g:12735:3: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAliasedRequiredCapabilityAccess().getMaxINTTerminalRuleCall_3_1_3_2_0()); 
            }
            match(input,RULE_INT,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAliasedRequiredCapabilityAccess().getMaxINTTerminalRuleCall_3_1_3_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 892, rule__AliasedRequiredCapability__MaxAssignment_3_1_3_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__MaxAssignment_3_1_3_2"


    // $ANTLR start "rule__AliasedRequiredCapability__VersionRangeAssignment_3_1_4_2"
    // InternalSimpleBeeLangTestLanguage.g:12744:1: rule__AliasedRequiredCapability__VersionRangeAssignment_3_1_4_2 : ( RULE_ID ) ;
    public final void rule__AliasedRequiredCapability__VersionRangeAssignment_3_1_4_2() throws RecognitionException {
        int rule__AliasedRequiredCapability__VersionRangeAssignment_3_1_4_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 893) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:12748:1: ( ( RULE_ID ) )
            // InternalSimpleBeeLangTestLanguage.g:12749:2: ( RULE_ID )
            {
            // InternalSimpleBeeLangTestLanguage.g:12749:2: ( RULE_ID )
            // InternalSimpleBeeLangTestLanguage.g:12750:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAliasedRequiredCapabilityAccess().getVersionRangeIDTerminalRuleCall_3_1_4_2_0()); 
            }
            match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAliasedRequiredCapabilityAccess().getVersionRangeIDTerminalRuleCall_3_1_4_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 893, rule__AliasedRequiredCapability__VersionRangeAssignment_3_1_4_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__VersionRangeAssignment_3_1_4_2"


    // $ANTLR start "rule__RequiredCapability__NameSpaceAssignment_1_0"
    // InternalSimpleBeeLangTestLanguage.g:12759:1: rule__RequiredCapability__NameSpaceAssignment_1_0 : ( RULE_ID ) ;
    public final void rule__RequiredCapability__NameSpaceAssignment_1_0() throws RecognitionException {
        int rule__RequiredCapability__NameSpaceAssignment_1_0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 894) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:12763:1: ( ( RULE_ID ) )
            // InternalSimpleBeeLangTestLanguage.g:12764:2: ( RULE_ID )
            {
            // InternalSimpleBeeLangTestLanguage.g:12764:2: ( RULE_ID )
            // InternalSimpleBeeLangTestLanguage.g:12765:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRequiredCapabilityAccess().getNameSpaceIDTerminalRuleCall_1_0_0()); 
            }
            match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRequiredCapabilityAccess().getNameSpaceIDTerminalRuleCall_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 894, rule__RequiredCapability__NameSpaceAssignment_1_0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__NameSpaceAssignment_1_0"


    // $ANTLR start "rule__RequiredCapability__NameAssignment_2"
    // InternalSimpleBeeLangTestLanguage.g:12774:1: rule__RequiredCapability__NameAssignment_2 : ( RULE_ID ) ;
    public final void rule__RequiredCapability__NameAssignment_2() throws RecognitionException {
        int rule__RequiredCapability__NameAssignment_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 895) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:12778:1: ( ( RULE_ID ) )
            // InternalSimpleBeeLangTestLanguage.g:12779:2: ( RULE_ID )
            {
            // InternalSimpleBeeLangTestLanguage.g:12779:2: ( RULE_ID )
            // InternalSimpleBeeLangTestLanguage.g:12780:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRequiredCapabilityAccess().getNameIDTerminalRuleCall_2_0()); 
            }
            match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRequiredCapabilityAccess().getNameIDTerminalRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 895, rule__RequiredCapability__NameAssignment_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__NameAssignment_2"


    // $ANTLR start "rule__RequiredCapability__CondExprAssignment_3_1_0_2"
    // InternalSimpleBeeLangTestLanguage.g:12789:1: rule__RequiredCapability__CondExprAssignment_3_1_0_2 : ( ruleExpression ) ;
    public final void rule__RequiredCapability__CondExprAssignment_3_1_0_2() throws RecognitionException {
        int rule__RequiredCapability__CondExprAssignment_3_1_0_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 896) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:12793:1: ( ( ruleExpression ) )
            // InternalSimpleBeeLangTestLanguage.g:12794:2: ( ruleExpression )
            {
            // InternalSimpleBeeLangTestLanguage.g:12794:2: ( ruleExpression )
            // InternalSimpleBeeLangTestLanguage.g:12795:3: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRequiredCapabilityAccess().getCondExprExpressionParserRuleCall_3_1_0_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRequiredCapabilityAccess().getCondExprExpressionParserRuleCall_3_1_0_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 896, rule__RequiredCapability__CondExprAssignment_3_1_0_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__CondExprAssignment_3_1_0_2"


    // $ANTLR start "rule__RequiredCapability__GreedyAssignment_3_1_1_0"
    // InternalSimpleBeeLangTestLanguage.g:12804:1: rule__RequiredCapability__GreedyAssignment_3_1_1_0 : ( ( 'greedy' ) ) ;
    public final void rule__RequiredCapability__GreedyAssignment_3_1_1_0() throws RecognitionException {
        int rule__RequiredCapability__GreedyAssignment_3_1_1_0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 897) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:12808:1: ( ( ( 'greedy' ) ) )
            // InternalSimpleBeeLangTestLanguage.g:12809:2: ( ( 'greedy' ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:12809:2: ( ( 'greedy' ) )
            // InternalSimpleBeeLangTestLanguage.g:12810:3: ( 'greedy' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRequiredCapabilityAccess().getGreedyGreedyKeyword_3_1_1_0_0()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:12811:3: ( 'greedy' )
            // InternalSimpleBeeLangTestLanguage.g:12812:4: 'greedy'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRequiredCapabilityAccess().getGreedyGreedyKeyword_3_1_1_0_0()); 
            }
            match(input,73,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRequiredCapabilityAccess().getGreedyGreedyKeyword_3_1_1_0_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRequiredCapabilityAccess().getGreedyGreedyKeyword_3_1_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 897, rule__RequiredCapability__GreedyAssignment_3_1_1_0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__GreedyAssignment_3_1_1_0"


    // $ANTLR start "rule__RequiredCapability__MinAssignment_3_1_2_2"
    // InternalSimpleBeeLangTestLanguage.g:12823:1: rule__RequiredCapability__MinAssignment_3_1_2_2 : ( RULE_INT ) ;
    public final void rule__RequiredCapability__MinAssignment_3_1_2_2() throws RecognitionException {
        int rule__RequiredCapability__MinAssignment_3_1_2_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 898) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:12827:1: ( ( RULE_INT ) )
            // InternalSimpleBeeLangTestLanguage.g:12828:2: ( RULE_INT )
            {
            // InternalSimpleBeeLangTestLanguage.g:12828:2: ( RULE_INT )
            // InternalSimpleBeeLangTestLanguage.g:12829:3: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRequiredCapabilityAccess().getMinINTTerminalRuleCall_3_1_2_2_0()); 
            }
            match(input,RULE_INT,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRequiredCapabilityAccess().getMinINTTerminalRuleCall_3_1_2_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 898, rule__RequiredCapability__MinAssignment_3_1_2_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__MinAssignment_3_1_2_2"


    // $ANTLR start "rule__RequiredCapability__MaxAssignment_3_1_3_2"
    // InternalSimpleBeeLangTestLanguage.g:12838:1: rule__RequiredCapability__MaxAssignment_3_1_3_2 : ( RULE_INT ) ;
    public final void rule__RequiredCapability__MaxAssignment_3_1_3_2() throws RecognitionException {
        int rule__RequiredCapability__MaxAssignment_3_1_3_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 899) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:12842:1: ( ( RULE_INT ) )
            // InternalSimpleBeeLangTestLanguage.g:12843:2: ( RULE_INT )
            {
            // InternalSimpleBeeLangTestLanguage.g:12843:2: ( RULE_INT )
            // InternalSimpleBeeLangTestLanguage.g:12844:3: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRequiredCapabilityAccess().getMaxINTTerminalRuleCall_3_1_3_2_0()); 
            }
            match(input,RULE_INT,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRequiredCapabilityAccess().getMaxINTTerminalRuleCall_3_1_3_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 899, rule__RequiredCapability__MaxAssignment_3_1_3_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__MaxAssignment_3_1_3_2"


    // $ANTLR start "rule__RequiredCapability__VersionRangeAssignment_3_1_4_2"
    // InternalSimpleBeeLangTestLanguage.g:12853:1: rule__RequiredCapability__VersionRangeAssignment_3_1_4_2 : ( RULE_ID ) ;
    public final void rule__RequiredCapability__VersionRangeAssignment_3_1_4_2() throws RecognitionException {
        int rule__RequiredCapability__VersionRangeAssignment_3_1_4_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 900) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:12857:1: ( ( RULE_ID ) )
            // InternalSimpleBeeLangTestLanguage.g:12858:2: ( RULE_ID )
            {
            // InternalSimpleBeeLangTestLanguage.g:12858:2: ( RULE_ID )
            // InternalSimpleBeeLangTestLanguage.g:12859:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRequiredCapabilityAccess().getVersionRangeIDTerminalRuleCall_3_1_4_2_0()); 
            }
            match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRequiredCapabilityAccess().getVersionRangeIDTerminalRuleCall_3_1_4_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 900, rule__RequiredCapability__VersionRangeAssignment_3_1_4_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__VersionRangeAssignment_3_1_4_2"

}

@SuppressWarnings("all")
abstract class InternalSimpleBeeLangTestLanguageParser11 extends InternalSimpleBeeLangTestLanguageParser10 {

        InternalSimpleBeeLangTestLanguageParser11(TokenStream input) {
            this(input, new RecognizerSharedState());
        }

        InternalSimpleBeeLangTestLanguageParser11(TokenStream input, RecognizerSharedState state) {
            super(input, state);
        }

    // $ANTLR start "rule__ParameterList__ParametersAssignment_0"
    // InternalSimpleBeeLangTestLanguage.g:12868:1: rule__ParameterList__ParametersAssignment_0 : ( ruleFirstParameter ) ;
    public final void rule__ParameterList__ParametersAssignment_0() throws RecognitionException {
        int rule__ParameterList__ParametersAssignment_0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 901) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:12872:1: ( ( ruleFirstParameter ) )
            // InternalSimpleBeeLangTestLanguage.g:12873:2: ( ruleFirstParameter )
            {
            // InternalSimpleBeeLangTestLanguage.g:12873:2: ( ruleFirstParameter )
            // InternalSimpleBeeLangTestLanguage.g:12874:3: ruleFirstParameter
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterListAccess().getParametersFirstParameterParserRuleCall_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleFirstParameter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterListAccess().getParametersFirstParameterParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 901, rule__ParameterList__ParametersAssignment_0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterList__ParametersAssignment_0"


    // $ANTLR start "rule__ParameterList__ParametersAssignment_1_1"
    // InternalSimpleBeeLangTestLanguage.g:12883:1: rule__ParameterList__ParametersAssignment_1_1 : ( ruleFirstParameter ) ;
    public final void rule__ParameterList__ParametersAssignment_1_1() throws RecognitionException {
        int rule__ParameterList__ParametersAssignment_1_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 902) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:12887:1: ( ( ruleFirstParameter ) )
            // InternalSimpleBeeLangTestLanguage.g:12888:2: ( ruleFirstParameter )
            {
            // InternalSimpleBeeLangTestLanguage.g:12888:2: ( ruleFirstParameter )
            // InternalSimpleBeeLangTestLanguage.g:12889:3: ruleFirstParameter
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterListAccess().getParametersFirstParameterParserRuleCall_1_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleFirstParameter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterListAccess().getParametersFirstParameterParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 902, rule__ParameterList__ParametersAssignment_1_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterList__ParametersAssignment_1_1"


    // $ANTLR start "rule__Parameter__ExprAssignment"
    // InternalSimpleBeeLangTestLanguage.g:12898:1: rule__Parameter__ExprAssignment : ( ruleExpression ) ;
    public final void rule__Parameter__ExprAssignment() throws RecognitionException {
        int rule__Parameter__ExprAssignment_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 903) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:12902:1: ( ( ruleExpression ) )
            // InternalSimpleBeeLangTestLanguage.g:12903:2: ( ruleExpression )
            {
            // InternalSimpleBeeLangTestLanguage.g:12903:2: ( ruleExpression )
            // InternalSimpleBeeLangTestLanguage.g:12904:3: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterAccess().getExprExpressionParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterAccess().getExprExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 903, rule__Parameter__ExprAssignment_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Parameter__ExprAssignment"


    // $ANTLR start "rule__ClosureParameter__ExprAssignment"
    // InternalSimpleBeeLangTestLanguage.g:12913:1: rule__ClosureParameter__ExprAssignment : ( ruleClosureExpression ) ;
    public final void rule__ClosureParameter__ExprAssignment() throws RecognitionException {
        int rule__ClosureParameter__ExprAssignment_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 904) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:12917:1: ( ( ruleClosureExpression ) )
            // InternalSimpleBeeLangTestLanguage.g:12918:2: ( ruleClosureExpression )
            {
            // InternalSimpleBeeLangTestLanguage.g:12918:2: ( ruleClosureExpression )
            // InternalSimpleBeeLangTestLanguage.g:12919:3: ruleClosureExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureParameterAccess().getExprClosureExpressionParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleClosureExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureParameterAccess().getExprClosureExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 904, rule__ClosureParameter__ExprAssignment_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureParameter__ExprAssignment"


    // $ANTLR start "rule__ParameterDeclaration__TypeAssignment_0"
    // InternalSimpleBeeLangTestLanguage.g:12928:1: rule__ParameterDeclaration__TypeAssignment_0 : ( ruleTypeRef ) ;
    public final void rule__ParameterDeclaration__TypeAssignment_0() throws RecognitionException {
        int rule__ParameterDeclaration__TypeAssignment_0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 905) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:12932:1: ( ( ruleTypeRef ) )
            // InternalSimpleBeeLangTestLanguage.g:12933:2: ( ruleTypeRef )
            {
            // InternalSimpleBeeLangTestLanguage.g:12933:2: ( ruleTypeRef )
            // InternalSimpleBeeLangTestLanguage.g:12934:3: ruleTypeRef
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterDeclarationAccess().getTypeTypeRefParserRuleCall_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleTypeRef();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterDeclarationAccess().getTypeTypeRefParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 905, rule__ParameterDeclaration__TypeAssignment_0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterDeclaration__TypeAssignment_0"


    // $ANTLR start "rule__ParameterDeclaration__NameAssignment_1"
    // InternalSimpleBeeLangTestLanguage.g:12943:1: rule__ParameterDeclaration__NameAssignment_1 : ( RULE_ID ) ;
    public final void rule__ParameterDeclaration__NameAssignment_1() throws RecognitionException {
        int rule__ParameterDeclaration__NameAssignment_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 906) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:12947:1: ( ( RULE_ID ) )
            // InternalSimpleBeeLangTestLanguage.g:12948:2: ( RULE_ID )
            {
            // InternalSimpleBeeLangTestLanguage.g:12948:2: ( RULE_ID )
            // InternalSimpleBeeLangTestLanguage.g:12949:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterDeclarationAccess().getNameIDTerminalRuleCall_1_0()); 
            }
            match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterDeclarationAccess().getNameIDTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 906, rule__ParameterDeclaration__NameAssignment_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterDeclaration__NameAssignment_1"


    // $ANTLR start "rule__Function__DocumentationAssignment_0"
    // InternalSimpleBeeLangTestLanguage.g:12958:1: rule__Function__DocumentationAssignment_0 : ( RULE_DOCUMENTATION ) ;
    public final void rule__Function__DocumentationAssignment_0() throws RecognitionException {
        int rule__Function__DocumentationAssignment_0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 907) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:12962:1: ( ( RULE_DOCUMENTATION ) )
            // InternalSimpleBeeLangTestLanguage.g:12963:2: ( RULE_DOCUMENTATION )
            {
            // InternalSimpleBeeLangTestLanguage.g:12963:2: ( RULE_DOCUMENTATION )
            // InternalSimpleBeeLangTestLanguage.g:12964:3: RULE_DOCUMENTATION
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getDocumentationDOCUMENTATIONTerminalRuleCall_0_0()); 
            }
            match(input,RULE_DOCUMENTATION,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getDocumentationDOCUMENTATIONTerminalRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 907, rule__Function__DocumentationAssignment_0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__DocumentationAssignment_0"


    // $ANTLR start "rule__Function__VisibilityAssignment_1"
    // InternalSimpleBeeLangTestLanguage.g:12973:1: rule__Function__VisibilityAssignment_1 : ( RULE_ID ) ;
    public final void rule__Function__VisibilityAssignment_1() throws RecognitionException {
        int rule__Function__VisibilityAssignment_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 908) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:12977:1: ( ( RULE_ID ) )
            // InternalSimpleBeeLangTestLanguage.g:12978:2: ( RULE_ID )
            {
            // InternalSimpleBeeLangTestLanguage.g:12978:2: ( RULE_ID )
            // InternalSimpleBeeLangTestLanguage.g:12979:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getVisibilityIDTerminalRuleCall_1_0()); 
            }
            match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getVisibilityIDTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 908, rule__Function__VisibilityAssignment_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__VisibilityAssignment_1"


    // $ANTLR start "rule__Function__FinalAssignment_2"
    // InternalSimpleBeeLangTestLanguage.g:12988:1: rule__Function__FinalAssignment_2 : ( ( 'final' ) ) ;
    public final void rule__Function__FinalAssignment_2() throws RecognitionException {
        int rule__Function__FinalAssignment_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 909) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:12992:1: ( ( ( 'final' ) ) )
            // InternalSimpleBeeLangTestLanguage.g:12993:2: ( ( 'final' ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:12993:2: ( ( 'final' ) )
            // InternalSimpleBeeLangTestLanguage.g:12994:3: ( 'final' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getFinalFinalKeyword_2_0()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:12995:3: ( 'final' )
            // InternalSimpleBeeLangTestLanguage.g:12996:4: 'final'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getFinalFinalKeyword_2_0()); 
            }
            match(input,74,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getFinalFinalKeyword_2_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getFinalFinalKeyword_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 909, rule__Function__FinalAssignment_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__FinalAssignment_2"


    // $ANTLR start "rule__Function__ReturnTypeAssignment_4"
    // InternalSimpleBeeLangTestLanguage.g:13007:1: rule__Function__ReturnTypeAssignment_4 : ( ruleTypeRef ) ;
    public final void rule__Function__ReturnTypeAssignment_4() throws RecognitionException {
        int rule__Function__ReturnTypeAssignment_4_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 910) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:13011:1: ( ( ruleTypeRef ) )
            // InternalSimpleBeeLangTestLanguage.g:13012:2: ( ruleTypeRef )
            {
            // InternalSimpleBeeLangTestLanguage.g:13012:2: ( ruleTypeRef )
            // InternalSimpleBeeLangTestLanguage.g:13013:3: ruleTypeRef
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getReturnTypeTypeRefParserRuleCall_4_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleTypeRef();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getReturnTypeTypeRefParserRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 910, rule__Function__ReturnTypeAssignment_4_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__ReturnTypeAssignment_4"


    // $ANTLR start "rule__Function__NameAssignment_5"
    // InternalSimpleBeeLangTestLanguage.g:13022:1: rule__Function__NameAssignment_5 : ( RULE_ID ) ;
    public final void rule__Function__NameAssignment_5() throws RecognitionException {
        int rule__Function__NameAssignment_5_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 911) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:13026:1: ( ( RULE_ID ) )
            // InternalSimpleBeeLangTestLanguage.g:13027:2: ( RULE_ID )
            {
            // InternalSimpleBeeLangTestLanguage.g:13027:2: ( RULE_ID )
            // InternalSimpleBeeLangTestLanguage.g:13028:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getNameIDTerminalRuleCall_5_0()); 
            }
            match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getNameIDTerminalRuleCall_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 911, rule__Function__NameAssignment_5_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__NameAssignment_5"


    // $ANTLR start "rule__Function__ParametersAssignment_6_1_0_0"
    // InternalSimpleBeeLangTestLanguage.g:13037:1: rule__Function__ParametersAssignment_6_1_0_0 : ( ruleParameterDeclaration ) ;
    public final void rule__Function__ParametersAssignment_6_1_0_0() throws RecognitionException {
        int rule__Function__ParametersAssignment_6_1_0_0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 912) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:13041:1: ( ( ruleParameterDeclaration ) )
            // InternalSimpleBeeLangTestLanguage.g:13042:2: ( ruleParameterDeclaration )
            {
            // InternalSimpleBeeLangTestLanguage.g:13042:2: ( ruleParameterDeclaration )
            // InternalSimpleBeeLangTestLanguage.g:13043:3: ruleParameterDeclaration
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getParametersParameterDeclarationParserRuleCall_6_1_0_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleParameterDeclaration();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getParametersParameterDeclarationParserRuleCall_6_1_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 912, rule__Function__ParametersAssignment_6_1_0_0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__ParametersAssignment_6_1_0_0"


    // $ANTLR start "rule__Function__ParametersAssignment_6_1_0_1_1"
    // InternalSimpleBeeLangTestLanguage.g:13052:1: rule__Function__ParametersAssignment_6_1_0_1_1 : ( ruleParameterDeclaration ) ;
    public final void rule__Function__ParametersAssignment_6_1_0_1_1() throws RecognitionException {
        int rule__Function__ParametersAssignment_6_1_0_1_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 913) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:13056:1: ( ( ruleParameterDeclaration ) )
            // InternalSimpleBeeLangTestLanguage.g:13057:2: ( ruleParameterDeclaration )
            {
            // InternalSimpleBeeLangTestLanguage.g:13057:2: ( ruleParameterDeclaration )
            // InternalSimpleBeeLangTestLanguage.g:13058:3: ruleParameterDeclaration
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getParametersParameterDeclarationParserRuleCall_6_1_0_1_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleParameterDeclaration();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getParametersParameterDeclarationParserRuleCall_6_1_0_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 913, rule__Function__ParametersAssignment_6_1_0_1_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__ParametersAssignment_6_1_0_1_1"


    // $ANTLR start "rule__Function__VarArgsAssignment_6_1_0_2_1"
    // InternalSimpleBeeLangTestLanguage.g:13067:1: rule__Function__VarArgsAssignment_6_1_0_2_1 : ( ( '...' ) ) ;
    public final void rule__Function__VarArgsAssignment_6_1_0_2_1() throws RecognitionException {
        int rule__Function__VarArgsAssignment_6_1_0_2_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 914) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:13071:1: ( ( ( '...' ) ) )
            // InternalSimpleBeeLangTestLanguage.g:13072:2: ( ( '...' ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:13072:2: ( ( '...' ) )
            // InternalSimpleBeeLangTestLanguage.g:13073:3: ( '...' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getVarArgsFullStopFullStopFullStopKeyword_6_1_0_2_1_0()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:13074:3: ( '...' )
            // InternalSimpleBeeLangTestLanguage.g:13075:4: '...'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getVarArgsFullStopFullStopFullStopKeyword_6_1_0_2_1_0()); 
            }
            match(input,75,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getVarArgsFullStopFullStopFullStopKeyword_6_1_0_2_1_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getVarArgsFullStopFullStopFullStopKeyword_6_1_0_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 914, rule__Function__VarArgsAssignment_6_1_0_2_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__VarArgsAssignment_6_1_0_2_1"


    // $ANTLR start "rule__Function__ParametersAssignment_6_1_0_2_2"
    // InternalSimpleBeeLangTestLanguage.g:13086:1: rule__Function__ParametersAssignment_6_1_0_2_2 : ( ruleParameterDeclaration ) ;
    public final void rule__Function__ParametersAssignment_6_1_0_2_2() throws RecognitionException {
        int rule__Function__ParametersAssignment_6_1_0_2_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 915) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:13090:1: ( ( ruleParameterDeclaration ) )
            // InternalSimpleBeeLangTestLanguage.g:13091:2: ( ruleParameterDeclaration )
            {
            // InternalSimpleBeeLangTestLanguage.g:13091:2: ( ruleParameterDeclaration )
            // InternalSimpleBeeLangTestLanguage.g:13092:3: ruleParameterDeclaration
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getParametersParameterDeclarationParserRuleCall_6_1_0_2_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleParameterDeclaration();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getParametersParameterDeclarationParserRuleCall_6_1_0_2_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 915, rule__Function__ParametersAssignment_6_1_0_2_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__ParametersAssignment_6_1_0_2_2"


    // $ANTLR start "rule__Function__VarArgsAssignment_6_1_1_0"
    // InternalSimpleBeeLangTestLanguage.g:13101:1: rule__Function__VarArgsAssignment_6_1_1_0 : ( ( '...' ) ) ;
    public final void rule__Function__VarArgsAssignment_6_1_1_0() throws RecognitionException {
        int rule__Function__VarArgsAssignment_6_1_1_0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 916) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:13105:1: ( ( ( '...' ) ) )
            // InternalSimpleBeeLangTestLanguage.g:13106:2: ( ( '...' ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:13106:2: ( ( '...' ) )
            // InternalSimpleBeeLangTestLanguage.g:13107:3: ( '...' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getVarArgsFullStopFullStopFullStopKeyword_6_1_1_0_0()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:13108:3: ( '...' )
            // InternalSimpleBeeLangTestLanguage.g:13109:4: '...'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getVarArgsFullStopFullStopFullStopKeyword_6_1_1_0_0()); 
            }
            match(input,75,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getVarArgsFullStopFullStopFullStopKeyword_6_1_1_0_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getVarArgsFullStopFullStopFullStopKeyword_6_1_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 916, rule__Function__VarArgsAssignment_6_1_1_0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__VarArgsAssignment_6_1_1_0"


    // $ANTLR start "rule__Function__ParametersAssignment_6_1_1_1"
    // InternalSimpleBeeLangTestLanguage.g:13120:1: rule__Function__ParametersAssignment_6_1_1_1 : ( ruleParameterDeclaration ) ;
    public final void rule__Function__ParametersAssignment_6_1_1_1() throws RecognitionException {
        int rule__Function__ParametersAssignment_6_1_1_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 917) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:13124:1: ( ( ruleParameterDeclaration ) )
            // InternalSimpleBeeLangTestLanguage.g:13125:2: ( ruleParameterDeclaration )
            {
            // InternalSimpleBeeLangTestLanguage.g:13125:2: ( ruleParameterDeclaration )
            // InternalSimpleBeeLangTestLanguage.g:13126:3: ruleParameterDeclaration
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getParametersParameterDeclarationParserRuleCall_6_1_1_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleParameterDeclaration();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getParametersParameterDeclarationParserRuleCall_6_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 917, rule__Function__ParametersAssignment_6_1_1_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__ParametersAssignment_6_1_1_1"


    // $ANTLR start "rule__Function__GuardAssignment_7_1"
    // InternalSimpleBeeLangTestLanguage.g:13135:1: rule__Function__GuardAssignment_7_1 : ( ruleGuardExpression ) ;
    public final void rule__Function__GuardAssignment_7_1() throws RecognitionException {
        int rule__Function__GuardAssignment_7_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 918) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:13139:1: ( ( ruleGuardExpression ) )
            // InternalSimpleBeeLangTestLanguage.g:13140:2: ( ruleGuardExpression )
            {
            // InternalSimpleBeeLangTestLanguage.g:13140:2: ( ruleGuardExpression )
            // InternalSimpleBeeLangTestLanguage.g:13141:3: ruleGuardExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getGuardGuardExpressionParserRuleCall_7_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleGuardExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getGuardGuardExpressionParserRuleCall_7_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 918, rule__Function__GuardAssignment_7_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__GuardAssignment_7_1"


    // $ANTLR start "rule__Function__FuncExprAssignment_8_0_1"
    // InternalSimpleBeeLangTestLanguage.g:13150:1: rule__Function__FuncExprAssignment_8_0_1 : ( ruleExpression ) ;
    public final void rule__Function__FuncExprAssignment_8_0_1() throws RecognitionException {
        int rule__Function__FuncExprAssignment_8_0_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 919) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:13154:1: ( ( ruleExpression ) )
            // InternalSimpleBeeLangTestLanguage.g:13155:2: ( ruleExpression )
            {
            // InternalSimpleBeeLangTestLanguage.g:13155:2: ( ruleExpression )
            // InternalSimpleBeeLangTestLanguage.g:13156:3: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getFuncExprExpressionParserRuleCall_8_0_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getFuncExprExpressionParserRuleCall_8_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 919, rule__Function__FuncExprAssignment_8_0_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__FuncExprAssignment_8_0_1"


    // $ANTLR start "rule__Function__FuncExprAssignment_8_1"
    // InternalSimpleBeeLangTestLanguage.g:13165:1: rule__Function__FuncExprAssignment_8_1 : ( ruleBlockExpression ) ;
    public final void rule__Function__FuncExprAssignment_8_1() throws RecognitionException {
        int rule__Function__FuncExprAssignment_8_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 920) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:13169:1: ( ( ruleBlockExpression ) )
            // InternalSimpleBeeLangTestLanguage.g:13170:2: ( ruleBlockExpression )
            {
            // InternalSimpleBeeLangTestLanguage.g:13170:2: ( ruleBlockExpression )
            // InternalSimpleBeeLangTestLanguage.g:13171:3: ruleBlockExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getFuncExprBlockExpressionParserRuleCall_8_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleBlockExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getFuncExprBlockExpressionParserRuleCall_8_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 920, rule__Function__FuncExprAssignment_8_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__FuncExprAssignment_8_1"


    // $ANTLR start "rule__GuardExpression__GuardExprAssignment_0_1"
    // InternalSimpleBeeLangTestLanguage.g:13180:1: rule__GuardExpression__GuardExprAssignment_0_1 : ( ruleExpression ) ;
    public final void rule__GuardExpression__GuardExprAssignment_0_1() throws RecognitionException {
        int rule__GuardExpression__GuardExprAssignment_0_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 921) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:13184:1: ( ( ruleExpression ) )
            // InternalSimpleBeeLangTestLanguage.g:13185:2: ( ruleExpression )
            {
            // InternalSimpleBeeLangTestLanguage.g:13185:2: ( ruleExpression )
            // InternalSimpleBeeLangTestLanguage.g:13186:3: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGuardExpressionAccess().getGuardExprExpressionParserRuleCall_0_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getGuardExpressionAccess().getGuardExprExpressionParserRuleCall_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 921, rule__GuardExpression__GuardExprAssignment_0_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GuardExpression__GuardExprAssignment_0_1"


    // $ANTLR start "rule__GuardExpression__GuardExprAssignment_1"
    // InternalSimpleBeeLangTestLanguage.g:13195:1: rule__GuardExpression__GuardExprAssignment_1 : ( ruleBlockExpression ) ;
    public final void rule__GuardExpression__GuardExprAssignment_1() throws RecognitionException {
        int rule__GuardExpression__GuardExprAssignment_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 922) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:13199:1: ( ( ruleBlockExpression ) )
            // InternalSimpleBeeLangTestLanguage.g:13200:2: ( ruleBlockExpression )
            {
            // InternalSimpleBeeLangTestLanguage.g:13200:2: ( ruleBlockExpression )
            // InternalSimpleBeeLangTestLanguage.g:13201:3: ruleBlockExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGuardExpressionAccess().getGuardExprBlockExpressionParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleBlockExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getGuardExpressionAccess().getGuardExprBlockExpressionParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 922, rule__GuardExpression__GuardExprAssignment_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GuardExpression__GuardExprAssignment_1"


    // $ANTLR start "rule__AssignmentExpression__FunctionNameAssignment_1_1"
    // InternalSimpleBeeLangTestLanguage.g:13210:1: rule__AssignmentExpression__FunctionNameAssignment_1_1 : ( ruleAssignmentOperator ) ;
    public final void rule__AssignmentExpression__FunctionNameAssignment_1_1() throws RecognitionException {
        int rule__AssignmentExpression__FunctionNameAssignment_1_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 923) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:13214:1: ( ( ruleAssignmentOperator ) )
            // InternalSimpleBeeLangTestLanguage.g:13215:2: ( ruleAssignmentOperator )
            {
            // InternalSimpleBeeLangTestLanguage.g:13215:2: ( ruleAssignmentOperator )
            // InternalSimpleBeeLangTestLanguage.g:13216:3: ruleAssignmentOperator
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAssignmentExpressionAccess().getFunctionNameAssignmentOperatorParserRuleCall_1_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAssignmentOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAssignmentExpressionAccess().getFunctionNameAssignmentOperatorParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 923, rule__AssignmentExpression__FunctionNameAssignment_1_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AssignmentExpression__FunctionNameAssignment_1_1"


    // $ANTLR start "rule__AssignmentExpression__RightExprAssignment_1_2"
    // InternalSimpleBeeLangTestLanguage.g:13225:1: rule__AssignmentExpression__RightExprAssignment_1_2 : ( ruleAssignmentExpression ) ;
    public final void rule__AssignmentExpression__RightExprAssignment_1_2() throws RecognitionException {
        int rule__AssignmentExpression__RightExprAssignment_1_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 924) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:13229:1: ( ( ruleAssignmentExpression ) )
            // InternalSimpleBeeLangTestLanguage.g:13230:2: ( ruleAssignmentExpression )
            {
            // InternalSimpleBeeLangTestLanguage.g:13230:2: ( ruleAssignmentExpression )
            // InternalSimpleBeeLangTestLanguage.g:13231:3: ruleAssignmentExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAssignmentExpressionAccess().getRightExprAssignmentExpressionParserRuleCall_1_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAssignmentExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAssignmentExpressionAccess().getRightExprAssignmentExpressionParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 924, rule__AssignmentExpression__RightExprAssignment_1_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AssignmentExpression__RightExprAssignment_1_2"


    // $ANTLR start "rule__VarDeclaration__FinalAssignment_1"
    // InternalSimpleBeeLangTestLanguage.g:13240:1: rule__VarDeclaration__FinalAssignment_1 : ( ( 'final' ) ) ;
    public final void rule__VarDeclaration__FinalAssignment_1() throws RecognitionException {
        int rule__VarDeclaration__FinalAssignment_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 925) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:13244:1: ( ( ( 'final' ) ) )
            // InternalSimpleBeeLangTestLanguage.g:13245:2: ( ( 'final' ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:13245:2: ( ( 'final' ) )
            // InternalSimpleBeeLangTestLanguage.g:13246:3: ( 'final' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getFinalFinalKeyword_1_0()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:13247:3: ( 'final' )
            // InternalSimpleBeeLangTestLanguage.g:13248:4: 'final'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getFinalFinalKeyword_1_0()); 
            }
            match(input,74,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getFinalFinalKeyword_1_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getFinalFinalKeyword_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 925, rule__VarDeclaration__FinalAssignment_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__FinalAssignment_1"


    // $ANTLR start "rule__VarDeclaration__TypeAssignment_2_0_1"
    // InternalSimpleBeeLangTestLanguage.g:13259:1: rule__VarDeclaration__TypeAssignment_2_0_1 : ( ruleTypeRef ) ;
    public final void rule__VarDeclaration__TypeAssignment_2_0_1() throws RecognitionException {
        int rule__VarDeclaration__TypeAssignment_2_0_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 926) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:13263:1: ( ( ruleTypeRef ) )
            // InternalSimpleBeeLangTestLanguage.g:13264:2: ( ruleTypeRef )
            {
            // InternalSimpleBeeLangTestLanguage.g:13264:2: ( ruleTypeRef )
            // InternalSimpleBeeLangTestLanguage.g:13265:3: ruleTypeRef
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getTypeTypeRefParserRuleCall_2_0_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleTypeRef();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getTypeTypeRefParserRuleCall_2_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 926, rule__VarDeclaration__TypeAssignment_2_0_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__TypeAssignment_2_0_1"


    // $ANTLR start "rule__VarDeclaration__NameAssignment_2_1"
    // InternalSimpleBeeLangTestLanguage.g:13274:1: rule__VarDeclaration__NameAssignment_2_1 : ( RULE_ID ) ;
    public final void rule__VarDeclaration__NameAssignment_2_1() throws RecognitionException {
        int rule__VarDeclaration__NameAssignment_2_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 927) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:13278:1: ( ( RULE_ID ) )
            // InternalSimpleBeeLangTestLanguage.g:13279:2: ( RULE_ID )
            {
            // InternalSimpleBeeLangTestLanguage.g:13279:2: ( RULE_ID )
            // InternalSimpleBeeLangTestLanguage.g:13280:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getNameIDTerminalRuleCall_2_1_0()); 
            }
            match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getNameIDTerminalRuleCall_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 927, rule__VarDeclaration__NameAssignment_2_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__NameAssignment_2_1"


    // $ANTLR start "rule__VarDeclaration__ValueExprAssignment_3_1"
    // InternalSimpleBeeLangTestLanguage.g:13289:1: rule__VarDeclaration__ValueExprAssignment_3_1 : ( ruleExpression ) ;
    public final void rule__VarDeclaration__ValueExprAssignment_3_1() throws RecognitionException {
        int rule__VarDeclaration__ValueExprAssignment_3_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 928) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:13293:1: ( ( ruleExpression ) )
            // InternalSimpleBeeLangTestLanguage.g:13294:2: ( ruleExpression )
            {
            // InternalSimpleBeeLangTestLanguage.g:13294:2: ( ruleExpression )
            // InternalSimpleBeeLangTestLanguage.g:13295:3: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getValueExprExpressionParserRuleCall_3_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getValueExprExpressionParserRuleCall_3_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 928, rule__VarDeclaration__ValueExprAssignment_3_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__ValueExprAssignment_3_1"


    // $ANTLR start "rule__ValDeclaration__FinalAssignment_1"
    // InternalSimpleBeeLangTestLanguage.g:13304:1: rule__ValDeclaration__FinalAssignment_1 : ( ( 'final' ) ) ;
    public final void rule__ValDeclaration__FinalAssignment_1() throws RecognitionException {
        int rule__ValDeclaration__FinalAssignment_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 929) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:13308:1: ( ( ( 'final' ) ) )
            // InternalSimpleBeeLangTestLanguage.g:13309:2: ( ( 'final' ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:13309:2: ( ( 'final' ) )
            // InternalSimpleBeeLangTestLanguage.g:13310:3: ( 'final' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValDeclarationAccess().getFinalFinalKeyword_1_0()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:13311:3: ( 'final' )
            // InternalSimpleBeeLangTestLanguage.g:13312:4: 'final'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValDeclarationAccess().getFinalFinalKeyword_1_0()); 
            }
            match(input,74,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getValDeclarationAccess().getFinalFinalKeyword_1_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getValDeclarationAccess().getFinalFinalKeyword_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 929, rule__ValDeclaration__FinalAssignment_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValDeclaration__FinalAssignment_1"


    // $ANTLR start "rule__ValDeclaration__ImmutableAssignment_2"
    // InternalSimpleBeeLangTestLanguage.g:13323:1: rule__ValDeclaration__ImmutableAssignment_2 : ( ( 'val' ) ) ;
    public final void rule__ValDeclaration__ImmutableAssignment_2() throws RecognitionException {
        int rule__ValDeclaration__ImmutableAssignment_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 930) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:13327:1: ( ( ( 'val' ) ) )
            // InternalSimpleBeeLangTestLanguage.g:13328:2: ( ( 'val' ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:13328:2: ( ( 'val' ) )
            // InternalSimpleBeeLangTestLanguage.g:13329:3: ( 'val' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValDeclarationAccess().getImmutableValKeyword_2_0()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:13330:3: ( 'val' )
            // InternalSimpleBeeLangTestLanguage.g:13331:4: 'val'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValDeclarationAccess().getImmutableValKeyword_2_0()); 
            }
            match(input,76,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getValDeclarationAccess().getImmutableValKeyword_2_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getValDeclarationAccess().getImmutableValKeyword_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 930, rule__ValDeclaration__ImmutableAssignment_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValDeclaration__ImmutableAssignment_2"


    // $ANTLR start "rule__ValDeclaration__TypeAssignment_3"
    // InternalSimpleBeeLangTestLanguage.g:13342:1: rule__ValDeclaration__TypeAssignment_3 : ( ruleTypeRef ) ;
    public final void rule__ValDeclaration__TypeAssignment_3() throws RecognitionException {
        int rule__ValDeclaration__TypeAssignment_3_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 931) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:13346:1: ( ( ruleTypeRef ) )
            // InternalSimpleBeeLangTestLanguage.g:13347:2: ( ruleTypeRef )
            {
            // InternalSimpleBeeLangTestLanguage.g:13347:2: ( ruleTypeRef )
            // InternalSimpleBeeLangTestLanguage.g:13348:3: ruleTypeRef
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValDeclarationAccess().getTypeTypeRefParserRuleCall_3_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleTypeRef();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getValDeclarationAccess().getTypeTypeRefParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 931, rule__ValDeclaration__TypeAssignment_3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValDeclaration__TypeAssignment_3"


    // $ANTLR start "rule__ValDeclaration__NameAssignment_4"
    // InternalSimpleBeeLangTestLanguage.g:13357:1: rule__ValDeclaration__NameAssignment_4 : ( RULE_ID ) ;
    public final void rule__ValDeclaration__NameAssignment_4() throws RecognitionException {
        int rule__ValDeclaration__NameAssignment_4_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 932) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:13361:1: ( ( RULE_ID ) )
            // InternalSimpleBeeLangTestLanguage.g:13362:2: ( RULE_ID )
            {
            // InternalSimpleBeeLangTestLanguage.g:13362:2: ( RULE_ID )
            // InternalSimpleBeeLangTestLanguage.g:13363:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValDeclarationAccess().getNameIDTerminalRuleCall_4_0()); 
            }
            match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getValDeclarationAccess().getNameIDTerminalRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 932, rule__ValDeclaration__NameAssignment_4_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValDeclaration__NameAssignment_4"


    // $ANTLR start "rule__ValDeclaration__ValueExprAssignment_6"
    // InternalSimpleBeeLangTestLanguage.g:13372:1: rule__ValDeclaration__ValueExprAssignment_6 : ( ruleExpression ) ;
    public final void rule__ValDeclaration__ValueExprAssignment_6() throws RecognitionException {
        int rule__ValDeclaration__ValueExprAssignment_6_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 933) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:13376:1: ( ( ruleExpression ) )
            // InternalSimpleBeeLangTestLanguage.g:13377:2: ( ruleExpression )
            {
            // InternalSimpleBeeLangTestLanguage.g:13377:2: ( ruleExpression )
            // InternalSimpleBeeLangTestLanguage.g:13378:3: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValDeclarationAccess().getValueExprExpressionParserRuleCall_6_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getValDeclarationAccess().getValueExprExpressionParserRuleCall_6_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 933, rule__ValDeclaration__ValueExprAssignment_6_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValDeclaration__ValueExprAssignment_6"


    // $ANTLR start "rule__SimpleTypeRef__RawTypeAssignment_0"
    // InternalSimpleBeeLangTestLanguage.g:13387:1: rule__SimpleTypeRef__RawTypeAssignment_0 : ( RULE_ID ) ;
    public final void rule__SimpleTypeRef__RawTypeAssignment_0() throws RecognitionException {
        int rule__SimpleTypeRef__RawTypeAssignment_0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 934) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:13391:1: ( ( RULE_ID ) )
            // InternalSimpleBeeLangTestLanguage.g:13392:2: ( RULE_ID )
            {
            // InternalSimpleBeeLangTestLanguage.g:13392:2: ( RULE_ID )
            // InternalSimpleBeeLangTestLanguage.g:13393:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSimpleTypeRefAccess().getRawTypeIDTerminalRuleCall_0_0()); 
            }
            match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSimpleTypeRefAccess().getRawTypeIDTerminalRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 934, rule__SimpleTypeRef__RawTypeAssignment_0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleTypeRef__RawTypeAssignment_0"


    // $ANTLR start "rule__SimpleTypeRef__ActualArgumentsListAssignment_1_1"
    // InternalSimpleBeeLangTestLanguage.g:13402:1: rule__SimpleTypeRef__ActualArgumentsListAssignment_1_1 : ( RULE_ID ) ;
    public final void rule__SimpleTypeRef__ActualArgumentsListAssignment_1_1() throws RecognitionException {
        int rule__SimpleTypeRef__ActualArgumentsListAssignment_1_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 935) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:13406:1: ( ( RULE_ID ) )
            // InternalSimpleBeeLangTestLanguage.g:13407:2: ( RULE_ID )
            {
            // InternalSimpleBeeLangTestLanguage.g:13407:2: ( RULE_ID )
            // InternalSimpleBeeLangTestLanguage.g:13408:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSimpleTypeRefAccess().getActualArgumentsListIDTerminalRuleCall_1_1_0()); 
            }
            match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSimpleTypeRefAccess().getActualArgumentsListIDTerminalRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 935, rule__SimpleTypeRef__ActualArgumentsListAssignment_1_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleTypeRef__ActualArgumentsListAssignment_1_1"


    // $ANTLR start "rule__SimpleTypeRef__ActualArgumentsListAssignment_1_2_1"
    // InternalSimpleBeeLangTestLanguage.g:13417:1: rule__SimpleTypeRef__ActualArgumentsListAssignment_1_2_1 : ( RULE_ID ) ;
    public final void rule__SimpleTypeRef__ActualArgumentsListAssignment_1_2_1() throws RecognitionException {
        int rule__SimpleTypeRef__ActualArgumentsListAssignment_1_2_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 936) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:13421:1: ( ( RULE_ID ) )
            // InternalSimpleBeeLangTestLanguage.g:13422:2: ( RULE_ID )
            {
            // InternalSimpleBeeLangTestLanguage.g:13422:2: ( RULE_ID )
            // InternalSimpleBeeLangTestLanguage.g:13423:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSimpleTypeRefAccess().getActualArgumentsListIDTerminalRuleCall_1_2_1_0()); 
            }
            match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSimpleTypeRefAccess().getActualArgumentsListIDTerminalRuleCall_1_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 936, rule__SimpleTypeRef__ActualArgumentsListAssignment_1_2_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleTypeRef__ActualArgumentsListAssignment_1_2_1"


    // $ANTLR start "rule__ClosureTypeRef__ParameterTypesAssignment_1_0_0"
    // InternalSimpleBeeLangTestLanguage.g:13432:1: rule__ClosureTypeRef__ParameterTypesAssignment_1_0_0 : ( RULE_ID ) ;
    public final void rule__ClosureTypeRef__ParameterTypesAssignment_1_0_0() throws RecognitionException {
        int rule__ClosureTypeRef__ParameterTypesAssignment_1_0_0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 937) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:13436:1: ( ( RULE_ID ) )
            // InternalSimpleBeeLangTestLanguage.g:13437:2: ( RULE_ID )
            {
            // InternalSimpleBeeLangTestLanguage.g:13437:2: ( RULE_ID )
            // InternalSimpleBeeLangTestLanguage.g:13438:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureTypeRefAccess().getParameterTypesIDTerminalRuleCall_1_0_0_0()); 
            }
            match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureTypeRefAccess().getParameterTypesIDTerminalRuleCall_1_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 937, rule__ClosureTypeRef__ParameterTypesAssignment_1_0_0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureTypeRef__ParameterTypesAssignment_1_0_0"


    // $ANTLR start "rule__ClosureTypeRef__ParameterTypesAssignment_1_0_1_1"
    // InternalSimpleBeeLangTestLanguage.g:13447:1: rule__ClosureTypeRef__ParameterTypesAssignment_1_0_1_1 : ( RULE_ID ) ;
    public final void rule__ClosureTypeRef__ParameterTypesAssignment_1_0_1_1() throws RecognitionException {
        int rule__ClosureTypeRef__ParameterTypesAssignment_1_0_1_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 938) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:13451:1: ( ( RULE_ID ) )
            // InternalSimpleBeeLangTestLanguage.g:13452:2: ( RULE_ID )
            {
            // InternalSimpleBeeLangTestLanguage.g:13452:2: ( RULE_ID )
            // InternalSimpleBeeLangTestLanguage.g:13453:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureTypeRefAccess().getParameterTypesIDTerminalRuleCall_1_0_1_1_0()); 
            }
            match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureTypeRefAccess().getParameterTypesIDTerminalRuleCall_1_0_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 938, rule__ClosureTypeRef__ParameterTypesAssignment_1_0_1_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureTypeRef__ParameterTypesAssignment_1_0_1_1"


    // $ANTLR start "rule__ClosureTypeRef__VarArgsAssignment_1_0_2_1"
    // InternalSimpleBeeLangTestLanguage.g:13462:1: rule__ClosureTypeRef__VarArgsAssignment_1_0_2_1 : ( ( '...' ) ) ;
    public final void rule__ClosureTypeRef__VarArgsAssignment_1_0_2_1() throws RecognitionException {
        int rule__ClosureTypeRef__VarArgsAssignment_1_0_2_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 939) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:13466:1: ( ( ( '...' ) ) )
            // InternalSimpleBeeLangTestLanguage.g:13467:2: ( ( '...' ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:13467:2: ( ( '...' ) )
            // InternalSimpleBeeLangTestLanguage.g:13468:3: ( '...' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureTypeRefAccess().getVarArgsFullStopFullStopFullStopKeyword_1_0_2_1_0()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:13469:3: ( '...' )
            // InternalSimpleBeeLangTestLanguage.g:13470:4: '...'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureTypeRefAccess().getVarArgsFullStopFullStopFullStopKeyword_1_0_2_1_0()); 
            }
            match(input,75,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureTypeRefAccess().getVarArgsFullStopFullStopFullStopKeyword_1_0_2_1_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureTypeRefAccess().getVarArgsFullStopFullStopFullStopKeyword_1_0_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 939, rule__ClosureTypeRef__VarArgsAssignment_1_0_2_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureTypeRef__VarArgsAssignment_1_0_2_1"


    // $ANTLR start "rule__ClosureTypeRef__ParameterTypesAssignment_1_0_2_2"
    // InternalSimpleBeeLangTestLanguage.g:13481:1: rule__ClosureTypeRef__ParameterTypesAssignment_1_0_2_2 : ( RULE_ID ) ;
    public final void rule__ClosureTypeRef__ParameterTypesAssignment_1_0_2_2() throws RecognitionException {
        int rule__ClosureTypeRef__ParameterTypesAssignment_1_0_2_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 940) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:13485:1: ( ( RULE_ID ) )
            // InternalSimpleBeeLangTestLanguage.g:13486:2: ( RULE_ID )
            {
            // InternalSimpleBeeLangTestLanguage.g:13486:2: ( RULE_ID )
            // InternalSimpleBeeLangTestLanguage.g:13487:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureTypeRefAccess().getParameterTypesIDTerminalRuleCall_1_0_2_2_0()); 
            }
            match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureTypeRefAccess().getParameterTypesIDTerminalRuleCall_1_0_2_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 940, rule__ClosureTypeRef__ParameterTypesAssignment_1_0_2_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureTypeRef__ParameterTypesAssignment_1_0_2_2"


    // $ANTLR start "rule__ClosureTypeRef__VarArgsAssignment_1_1_0"
    // InternalSimpleBeeLangTestLanguage.g:13496:1: rule__ClosureTypeRef__VarArgsAssignment_1_1_0 : ( ( '...' ) ) ;
    public final void rule__ClosureTypeRef__VarArgsAssignment_1_1_0() throws RecognitionException {
        int rule__ClosureTypeRef__VarArgsAssignment_1_1_0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 941) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:13500:1: ( ( ( '...' ) ) )
            // InternalSimpleBeeLangTestLanguage.g:13501:2: ( ( '...' ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:13501:2: ( ( '...' ) )
            // InternalSimpleBeeLangTestLanguage.g:13502:3: ( '...' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureTypeRefAccess().getVarArgsFullStopFullStopFullStopKeyword_1_1_0_0()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:13503:3: ( '...' )
            // InternalSimpleBeeLangTestLanguage.g:13504:4: '...'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureTypeRefAccess().getVarArgsFullStopFullStopFullStopKeyword_1_1_0_0()); 
            }
            match(input,75,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureTypeRefAccess().getVarArgsFullStopFullStopFullStopKeyword_1_1_0_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureTypeRefAccess().getVarArgsFullStopFullStopFullStopKeyword_1_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 941, rule__ClosureTypeRef__VarArgsAssignment_1_1_0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureTypeRef__VarArgsAssignment_1_1_0"


    // $ANTLR start "rule__ClosureTypeRef__ParameterTypesAssignment_1_1_1"
    // InternalSimpleBeeLangTestLanguage.g:13515:1: rule__ClosureTypeRef__ParameterTypesAssignment_1_1_1 : ( RULE_ID ) ;
    public final void rule__ClosureTypeRef__ParameterTypesAssignment_1_1_1() throws RecognitionException {
        int rule__ClosureTypeRef__ParameterTypesAssignment_1_1_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 942) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:13519:1: ( ( RULE_ID ) )
            // InternalSimpleBeeLangTestLanguage.g:13520:2: ( RULE_ID )
            {
            // InternalSimpleBeeLangTestLanguage.g:13520:2: ( RULE_ID )
            // InternalSimpleBeeLangTestLanguage.g:13521:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureTypeRefAccess().getParameterTypesIDTerminalRuleCall_1_1_1_0()); 
            }
            match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureTypeRefAccess().getParameterTypesIDTerminalRuleCall_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 942, rule__ClosureTypeRef__ParameterTypesAssignment_1_1_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureTypeRef__ParameterTypesAssignment_1_1_1"


    // $ANTLR start "rule__ClosureTypeRef__ReturnTypeAssignment_4"
    // InternalSimpleBeeLangTestLanguage.g:13530:1: rule__ClosureTypeRef__ReturnTypeAssignment_4 : ( RULE_ID ) ;
    public final void rule__ClosureTypeRef__ReturnTypeAssignment_4() throws RecognitionException {
        int rule__ClosureTypeRef__ReturnTypeAssignment_4_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 943) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:13534:1: ( ( RULE_ID ) )
            // InternalSimpleBeeLangTestLanguage.g:13535:2: ( RULE_ID )
            {
            // InternalSimpleBeeLangTestLanguage.g:13535:2: ( RULE_ID )
            // InternalSimpleBeeLangTestLanguage.g:13536:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureTypeRefAccess().getReturnTypeIDTerminalRuleCall_4_0()); 
            }
            match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureTypeRefAccess().getReturnTypeIDTerminalRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 943, rule__ClosureTypeRef__ReturnTypeAssignment_4_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureTypeRef__ReturnTypeAssignment_4"


    // $ANTLR start "rule__CachedExpression__ExprAssignment_0_2"
    // InternalSimpleBeeLangTestLanguage.g:13545:1: rule__CachedExpression__ExprAssignment_0_2 : ( ruleOrExpression ) ;
    public final void rule__CachedExpression__ExprAssignment_0_2() throws RecognitionException {
        int rule__CachedExpression__ExprAssignment_0_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 944) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:13549:1: ( ( ruleOrExpression ) )
            // InternalSimpleBeeLangTestLanguage.g:13550:2: ( ruleOrExpression )
            {
            // InternalSimpleBeeLangTestLanguage.g:13550:2: ( ruleOrExpression )
            // InternalSimpleBeeLangTestLanguage.g:13551:3: ruleOrExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCachedExpressionAccess().getExprOrExpressionParserRuleCall_0_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleOrExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCachedExpressionAccess().getExprOrExpressionParserRuleCall_0_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 944, rule__CachedExpression__ExprAssignment_0_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CachedExpression__ExprAssignment_0_2"


    // $ANTLR start "rule__OrExpression__RightExprAssignment_1_2"
    // InternalSimpleBeeLangTestLanguage.g:13560:1: rule__OrExpression__RightExprAssignment_1_2 : ( ruleAndExpression ) ;
    public final void rule__OrExpression__RightExprAssignment_1_2() throws RecognitionException {
        int rule__OrExpression__RightExprAssignment_1_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 945) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:13564:1: ( ( ruleAndExpression ) )
            // InternalSimpleBeeLangTestLanguage.g:13565:2: ( ruleAndExpression )
            {
            // InternalSimpleBeeLangTestLanguage.g:13565:2: ( ruleAndExpression )
            // InternalSimpleBeeLangTestLanguage.g:13566:3: ruleAndExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrExpressionAccess().getRightExprAndExpressionParserRuleCall_1_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAndExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrExpressionAccess().getRightExprAndExpressionParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 945, rule__OrExpression__RightExprAssignment_1_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrExpression__RightExprAssignment_1_2"


    // $ANTLR start "rule__AndExpression__RightExprAssignment_1_2"
    // InternalSimpleBeeLangTestLanguage.g:13575:1: rule__AndExpression__RightExprAssignment_1_2 : ( ruleRelationalExpression ) ;
    public final void rule__AndExpression__RightExprAssignment_1_2() throws RecognitionException {
        int rule__AndExpression__RightExprAssignment_1_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 946) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:13579:1: ( ( ruleRelationalExpression ) )
            // InternalSimpleBeeLangTestLanguage.g:13580:2: ( ruleRelationalExpression )
            {
            // InternalSimpleBeeLangTestLanguage.g:13580:2: ( ruleRelationalExpression )
            // InternalSimpleBeeLangTestLanguage.g:13581:3: ruleRelationalExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndExpressionAccess().getRightExprRelationalExpressionParserRuleCall_1_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleRelationalExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndExpressionAccess().getRightExprRelationalExpressionParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 946, rule__AndExpression__RightExprAssignment_1_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndExpression__RightExprAssignment_1_2"


    // $ANTLR start "rule__RelationalExpression__FunctionNameAssignment_1_1"
    // InternalSimpleBeeLangTestLanguage.g:13590:1: rule__RelationalExpression__FunctionNameAssignment_1_1 : ( ruleRelationalOperator ) ;
    public final void rule__RelationalExpression__FunctionNameAssignment_1_1() throws RecognitionException {
        int rule__RelationalExpression__FunctionNameAssignment_1_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 947) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:13594:1: ( ( ruleRelationalOperator ) )
            // InternalSimpleBeeLangTestLanguage.g:13595:2: ( ruleRelationalOperator )
            {
            // InternalSimpleBeeLangTestLanguage.g:13595:2: ( ruleRelationalOperator )
            // InternalSimpleBeeLangTestLanguage.g:13596:3: ruleRelationalOperator
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRelationalExpressionAccess().getFunctionNameRelationalOperatorParserRuleCall_1_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleRelationalOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRelationalExpressionAccess().getFunctionNameRelationalOperatorParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 947, rule__RelationalExpression__FunctionNameAssignment_1_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RelationalExpression__FunctionNameAssignment_1_1"


    // $ANTLR start "rule__RelationalExpression__RightExprAssignment_1_2"
    // InternalSimpleBeeLangTestLanguage.g:13605:1: rule__RelationalExpression__RightExprAssignment_1_2 : ( ruleAdditiveExpression ) ;
    public final void rule__RelationalExpression__RightExprAssignment_1_2() throws RecognitionException {
        int rule__RelationalExpression__RightExprAssignment_1_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 948) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:13609:1: ( ( ruleAdditiveExpression ) )
            // InternalSimpleBeeLangTestLanguage.g:13610:2: ( ruleAdditiveExpression )
            {
            // InternalSimpleBeeLangTestLanguage.g:13610:2: ( ruleAdditiveExpression )
            // InternalSimpleBeeLangTestLanguage.g:13611:3: ruleAdditiveExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRelationalExpressionAccess().getRightExprAdditiveExpressionParserRuleCall_1_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAdditiveExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRelationalExpressionAccess().getRightExprAdditiveExpressionParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 948, rule__RelationalExpression__RightExprAssignment_1_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RelationalExpression__RightExprAssignment_1_2"


    // $ANTLR start "rule__AdditiveExpression__FunctionNameAssignment_1_1"
    // InternalSimpleBeeLangTestLanguage.g:13620:1: rule__AdditiveExpression__FunctionNameAssignment_1_1 : ( ( rule__AdditiveExpression__FunctionNameAlternatives_1_1_0 ) ) ;
    public final void rule__AdditiveExpression__FunctionNameAssignment_1_1() throws RecognitionException {
        int rule__AdditiveExpression__FunctionNameAssignment_1_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 949) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:13624:1: ( ( ( rule__AdditiveExpression__FunctionNameAlternatives_1_1_0 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:13625:2: ( ( rule__AdditiveExpression__FunctionNameAlternatives_1_1_0 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:13625:2: ( ( rule__AdditiveExpression__FunctionNameAlternatives_1_1_0 ) )
            // InternalSimpleBeeLangTestLanguage.g:13626:3: ( rule__AdditiveExpression__FunctionNameAlternatives_1_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAdditiveExpressionAccess().getFunctionNameAlternatives_1_1_0()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:13627:3: ( rule__AdditiveExpression__FunctionNameAlternatives_1_1_0 )
            // InternalSimpleBeeLangTestLanguage.g:13627:4: rule__AdditiveExpression__FunctionNameAlternatives_1_1_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AdditiveExpression__FunctionNameAlternatives_1_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAdditiveExpressionAccess().getFunctionNameAlternatives_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 949, rule__AdditiveExpression__FunctionNameAssignment_1_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AdditiveExpression__FunctionNameAssignment_1_1"


    // $ANTLR start "rule__AdditiveExpression__RightExprAssignment_1_2"
    // InternalSimpleBeeLangTestLanguage.g:13635:1: rule__AdditiveExpression__RightExprAssignment_1_2 : ( ruleMultiplicativeExpression ) ;
    public final void rule__AdditiveExpression__RightExprAssignment_1_2() throws RecognitionException {
        int rule__AdditiveExpression__RightExprAssignment_1_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 950) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:13639:1: ( ( ruleMultiplicativeExpression ) )
            // InternalSimpleBeeLangTestLanguage.g:13640:2: ( ruleMultiplicativeExpression )
            {
            // InternalSimpleBeeLangTestLanguage.g:13640:2: ( ruleMultiplicativeExpression )
            // InternalSimpleBeeLangTestLanguage.g:13641:3: ruleMultiplicativeExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAdditiveExpressionAccess().getRightExprMultiplicativeExpressionParserRuleCall_1_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleMultiplicativeExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAdditiveExpressionAccess().getRightExprMultiplicativeExpressionParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 950, rule__AdditiveExpression__RightExprAssignment_1_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AdditiveExpression__RightExprAssignment_1_2"


    // $ANTLR start "rule__MultiplicativeExpression__FunctionNameAssignment_1_1"
    // InternalSimpleBeeLangTestLanguage.g:13650:1: rule__MultiplicativeExpression__FunctionNameAssignment_1_1 : ( ( rule__MultiplicativeExpression__FunctionNameAlternatives_1_1_0 ) ) ;
    public final void rule__MultiplicativeExpression__FunctionNameAssignment_1_1() throws RecognitionException {
        int rule__MultiplicativeExpression__FunctionNameAssignment_1_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 951) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:13654:1: ( ( ( rule__MultiplicativeExpression__FunctionNameAlternatives_1_1_0 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:13655:2: ( ( rule__MultiplicativeExpression__FunctionNameAlternatives_1_1_0 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:13655:2: ( ( rule__MultiplicativeExpression__FunctionNameAlternatives_1_1_0 ) )
            // InternalSimpleBeeLangTestLanguage.g:13656:3: ( rule__MultiplicativeExpression__FunctionNameAlternatives_1_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMultiplicativeExpressionAccess().getFunctionNameAlternatives_1_1_0()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:13657:3: ( rule__MultiplicativeExpression__FunctionNameAlternatives_1_1_0 )
            // InternalSimpleBeeLangTestLanguage.g:13657:4: rule__MultiplicativeExpression__FunctionNameAlternatives_1_1_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MultiplicativeExpression__FunctionNameAlternatives_1_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMultiplicativeExpressionAccess().getFunctionNameAlternatives_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 951, rule__MultiplicativeExpression__FunctionNameAssignment_1_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultiplicativeExpression__FunctionNameAssignment_1_1"


    // $ANTLR start "rule__MultiplicativeExpression__RightExprAssignment_1_2"
    // InternalSimpleBeeLangTestLanguage.g:13665:1: rule__MultiplicativeExpression__RightExprAssignment_1_2 : ( ruleSetExpression ) ;
    public final void rule__MultiplicativeExpression__RightExprAssignment_1_2() throws RecognitionException {
        int rule__MultiplicativeExpression__RightExprAssignment_1_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 952) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:13669:1: ( ( ruleSetExpression ) )
            // InternalSimpleBeeLangTestLanguage.g:13670:2: ( ruleSetExpression )
            {
            // InternalSimpleBeeLangTestLanguage.g:13670:2: ( ruleSetExpression )
            // InternalSimpleBeeLangTestLanguage.g:13671:3: ruleSetExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMultiplicativeExpressionAccess().getRightExprSetExpressionParserRuleCall_1_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSetExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMultiplicativeExpressionAccess().getRightExprSetExpressionParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 952, rule__MultiplicativeExpression__RightExprAssignment_1_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultiplicativeExpression__RightExprAssignment_1_2"


    // $ANTLR start "rule__SetExpression__FunctionNameAssignment_1_1"
    // InternalSimpleBeeLangTestLanguage.g:13680:1: rule__SetExpression__FunctionNameAssignment_1_1 : ( ( '..' ) ) ;
    public final void rule__SetExpression__FunctionNameAssignment_1_1() throws RecognitionException {
        int rule__SetExpression__FunctionNameAssignment_1_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 953) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:13684:1: ( ( ( '..' ) ) )
            // InternalSimpleBeeLangTestLanguage.g:13685:2: ( ( '..' ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:13685:2: ( ( '..' ) )
            // InternalSimpleBeeLangTestLanguage.g:13686:3: ( '..' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSetExpressionAccess().getFunctionNameFullStopFullStopKeyword_1_1_0()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:13687:3: ( '..' )
            // InternalSimpleBeeLangTestLanguage.g:13688:4: '..'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSetExpressionAccess().getFunctionNameFullStopFullStopKeyword_1_1_0()); 
            }
            match(input,77,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSetExpressionAccess().getFunctionNameFullStopFullStopKeyword_1_1_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSetExpressionAccess().getFunctionNameFullStopFullStopKeyword_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 953, rule__SetExpression__FunctionNameAssignment_1_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SetExpression__FunctionNameAssignment_1_1"


    // $ANTLR start "rule__SetExpression__RightExprAssignment_1_2"
    // InternalSimpleBeeLangTestLanguage.g:13699:1: rule__SetExpression__RightExprAssignment_1_2 : ( ruleUnaryOrInfixExpression ) ;
    public final void rule__SetExpression__RightExprAssignment_1_2() throws RecognitionException {
        int rule__SetExpression__RightExprAssignment_1_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 954) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:13703:1: ( ( ruleUnaryOrInfixExpression ) )
            // InternalSimpleBeeLangTestLanguage.g:13704:2: ( ruleUnaryOrInfixExpression )
            {
            // InternalSimpleBeeLangTestLanguage.g:13704:2: ( ruleUnaryOrInfixExpression )
            // InternalSimpleBeeLangTestLanguage.g:13705:3: ruleUnaryOrInfixExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSetExpressionAccess().getRightExprUnaryOrInfixExpressionParserRuleCall_1_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleUnaryOrInfixExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSetExpressionAccess().getRightExprUnaryOrInfixExpressionParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 954, rule__SetExpression__RightExprAssignment_1_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SetExpression__RightExprAssignment_1_2"


    // $ANTLR start "rule__UnaryExpression__FunctionNameAssignment_1"
    // InternalSimpleBeeLangTestLanguage.g:13714:1: rule__UnaryExpression__FunctionNameAssignment_1 : ( ( rule__UnaryExpression__FunctionNameAlternatives_1_0 ) ) ;
    public final void rule__UnaryExpression__FunctionNameAssignment_1() throws RecognitionException {
        int rule__UnaryExpression__FunctionNameAssignment_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 955) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:13718:1: ( ( ( rule__UnaryExpression__FunctionNameAlternatives_1_0 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:13719:2: ( ( rule__UnaryExpression__FunctionNameAlternatives_1_0 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:13719:2: ( ( rule__UnaryExpression__FunctionNameAlternatives_1_0 ) )
            // InternalSimpleBeeLangTestLanguage.g:13720:3: ( rule__UnaryExpression__FunctionNameAlternatives_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnaryExpressionAccess().getFunctionNameAlternatives_1_0()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:13721:3: ( rule__UnaryExpression__FunctionNameAlternatives_1_0 )
            // InternalSimpleBeeLangTestLanguage.g:13721:4: rule__UnaryExpression__FunctionNameAlternatives_1_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__UnaryExpression__FunctionNameAlternatives_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnaryExpressionAccess().getFunctionNameAlternatives_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 955, rule__UnaryExpression__FunctionNameAssignment_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnaryExpression__FunctionNameAssignment_1"


    // $ANTLR start "rule__UnaryExpression__ExprAssignment_2"
    // InternalSimpleBeeLangTestLanguage.g:13729:1: rule__UnaryExpression__ExprAssignment_2 : ( ruleInfixExpression ) ;
    public final void rule__UnaryExpression__ExprAssignment_2() throws RecognitionException {
        int rule__UnaryExpression__ExprAssignment_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 956) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:13733:1: ( ( ruleInfixExpression ) )
            // InternalSimpleBeeLangTestLanguage.g:13734:2: ( ruleInfixExpression )
            {
            // InternalSimpleBeeLangTestLanguage.g:13734:2: ( ruleInfixExpression )
            // InternalSimpleBeeLangTestLanguage.g:13735:3: ruleInfixExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnaryExpressionAccess().getExprInfixExpressionParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleInfixExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnaryExpressionAccess().getExprInfixExpressionParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 956, rule__UnaryExpression__ExprAssignment_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnaryExpression__ExprAssignment_2"


    // $ANTLR start "rule__PreopExpression__FunctionNameAssignment_1"
    // InternalSimpleBeeLangTestLanguage.g:13744:1: rule__PreopExpression__FunctionNameAssignment_1 : ( ( rule__PreopExpression__FunctionNameAlternatives_1_0 ) ) ;
    public final void rule__PreopExpression__FunctionNameAssignment_1() throws RecognitionException {
        int rule__PreopExpression__FunctionNameAssignment_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 957) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:13748:1: ( ( ( rule__PreopExpression__FunctionNameAlternatives_1_0 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:13749:2: ( ( rule__PreopExpression__FunctionNameAlternatives_1_0 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:13749:2: ( ( rule__PreopExpression__FunctionNameAlternatives_1_0 ) )
            // InternalSimpleBeeLangTestLanguage.g:13750:3: ( rule__PreopExpression__FunctionNameAlternatives_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPreopExpressionAccess().getFunctionNameAlternatives_1_0()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:13751:3: ( rule__PreopExpression__FunctionNameAlternatives_1_0 )
            // InternalSimpleBeeLangTestLanguage.g:13751:4: rule__PreopExpression__FunctionNameAlternatives_1_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__PreopExpression__FunctionNameAlternatives_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPreopExpressionAccess().getFunctionNameAlternatives_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 957, rule__PreopExpression__FunctionNameAssignment_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PreopExpression__FunctionNameAssignment_1"


    // $ANTLR start "rule__PreopExpression__ExprAssignment_2"
    // InternalSimpleBeeLangTestLanguage.g:13759:1: rule__PreopExpression__ExprAssignment_2 : ( ruleInfixExpression ) ;
    public final void rule__PreopExpression__ExprAssignment_2() throws RecognitionException {
        int rule__PreopExpression__ExprAssignment_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 958) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:13763:1: ( ( ruleInfixExpression ) )
            // InternalSimpleBeeLangTestLanguage.g:13764:2: ( ruleInfixExpression )
            {
            // InternalSimpleBeeLangTestLanguage.g:13764:2: ( ruleInfixExpression )
            // InternalSimpleBeeLangTestLanguage.g:13765:3: ruleInfixExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPreopExpressionAccess().getExprInfixExpressionParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleInfixExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPreopExpressionAccess().getExprInfixExpressionParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 958, rule__PreopExpression__ExprAssignment_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PreopExpression__ExprAssignment_2"


    // $ANTLR start "rule__PostopExpression__FunctionNameAssignment_1_1"
    // InternalSimpleBeeLangTestLanguage.g:13774:1: rule__PostopExpression__FunctionNameAssignment_1_1 : ( ( rule__PostopExpression__FunctionNameAlternatives_1_1_0 ) ) ;
    public final void rule__PostopExpression__FunctionNameAssignment_1_1() throws RecognitionException {
        int rule__PostopExpression__FunctionNameAssignment_1_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 959) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:13778:1: ( ( ( rule__PostopExpression__FunctionNameAlternatives_1_1_0 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:13779:2: ( ( rule__PostopExpression__FunctionNameAlternatives_1_1_0 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:13779:2: ( ( rule__PostopExpression__FunctionNameAlternatives_1_1_0 ) )
            // InternalSimpleBeeLangTestLanguage.g:13780:3: ( rule__PostopExpression__FunctionNameAlternatives_1_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPostopExpressionAccess().getFunctionNameAlternatives_1_1_0()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:13781:3: ( rule__PostopExpression__FunctionNameAlternatives_1_1_0 )
            // InternalSimpleBeeLangTestLanguage.g:13781:4: rule__PostopExpression__FunctionNameAlternatives_1_1_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__PostopExpression__FunctionNameAlternatives_1_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPostopExpressionAccess().getFunctionNameAlternatives_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 959, rule__PostopExpression__FunctionNameAssignment_1_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PostopExpression__FunctionNameAssignment_1_1"


    // $ANTLR start "rule__InfixExpression__NameAssignment_1_0_2"
    // InternalSimpleBeeLangTestLanguage.g:13789:1: rule__InfixExpression__NameAssignment_1_0_2 : ( RULE_ID ) ;
    public final void rule__InfixExpression__NameAssignment_1_0_2() throws RecognitionException {
        int rule__InfixExpression__NameAssignment_1_0_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 960) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:13793:1: ( ( RULE_ID ) )
            // InternalSimpleBeeLangTestLanguage.g:13794:2: ( RULE_ID )
            {
            // InternalSimpleBeeLangTestLanguage.g:13794:2: ( RULE_ID )
            // InternalSimpleBeeLangTestLanguage.g:13795:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInfixExpressionAccess().getNameIDTerminalRuleCall_1_0_2_0()); 
            }
            match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInfixExpressionAccess().getNameIDTerminalRuleCall_1_0_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 960, rule__InfixExpression__NameAssignment_1_0_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InfixExpression__NameAssignment_1_0_2"


    // $ANTLR start "rule__InfixExpression__ParameterListAssignment_1_0_4"
    // InternalSimpleBeeLangTestLanguage.g:13804:1: rule__InfixExpression__ParameterListAssignment_1_0_4 : ( ruleParameterList ) ;
    public final void rule__InfixExpression__ParameterListAssignment_1_0_4() throws RecognitionException {
        int rule__InfixExpression__ParameterListAssignment_1_0_4_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 961) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:13808:1: ( ( ruleParameterList ) )
            // InternalSimpleBeeLangTestLanguage.g:13809:2: ( ruleParameterList )
            {
            // InternalSimpleBeeLangTestLanguage.g:13809:2: ( ruleParameterList )
            // InternalSimpleBeeLangTestLanguage.g:13810:3: ruleParameterList
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInfixExpressionAccess().getParameterListParameterListParserRuleCall_1_0_4_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleParameterList();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInfixExpressionAccess().getParameterListParameterListParserRuleCall_1_0_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 961, rule__InfixExpression__ParameterListAssignment_1_0_4_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InfixExpression__ParameterListAssignment_1_0_4"


    // $ANTLR start "rule__InfixExpression__IndexExprAssignment_1_1_2"
    // InternalSimpleBeeLangTestLanguage.g:13819:1: rule__InfixExpression__IndexExprAssignment_1_1_2 : ( ruleExpression ) ;
    public final void rule__InfixExpression__IndexExprAssignment_1_1_2() throws RecognitionException {
        int rule__InfixExpression__IndexExprAssignment_1_1_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 962) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:13823:1: ( ( ruleExpression ) )
            // InternalSimpleBeeLangTestLanguage.g:13824:2: ( ruleExpression )
            {
            // InternalSimpleBeeLangTestLanguage.g:13824:2: ( ruleExpression )
            // InternalSimpleBeeLangTestLanguage.g:13825:3: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInfixExpressionAccess().getIndexExprExpressionParserRuleCall_1_1_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInfixExpressionAccess().getIndexExprExpressionParserRuleCall_1_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 962, rule__InfixExpression__IndexExprAssignment_1_1_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InfixExpression__IndexExprAssignment_1_1_2"


    // $ANTLR start "rule__InfixExpression__FeatureNameAssignment_1_2_2"
    // InternalSimpleBeeLangTestLanguage.g:13834:1: rule__InfixExpression__FeatureNameAssignment_1_2_2 : ( RULE_ID ) ;
    public final void rule__InfixExpression__FeatureNameAssignment_1_2_2() throws RecognitionException {
        int rule__InfixExpression__FeatureNameAssignment_1_2_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 963) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:13838:1: ( ( RULE_ID ) )
            // InternalSimpleBeeLangTestLanguage.g:13839:2: ( RULE_ID )
            {
            // InternalSimpleBeeLangTestLanguage.g:13839:2: ( RULE_ID )
            // InternalSimpleBeeLangTestLanguage.g:13840:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInfixExpressionAccess().getFeatureNameIDTerminalRuleCall_1_2_2_0()); 
            }
            match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInfixExpressionAccess().getFeatureNameIDTerminalRuleCall_1_2_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 963, rule__InfixExpression__FeatureNameAssignment_1_2_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InfixExpression__FeatureNameAssignment_1_2_2"


    // $ANTLR start "rule__CallExpression__ParameterListAssignment_1_2"
    // InternalSimpleBeeLangTestLanguage.g:13849:1: rule__CallExpression__ParameterListAssignment_1_2 : ( ruleParameterList ) ;
    public final void rule__CallExpression__ParameterListAssignment_1_2() throws RecognitionException {
        int rule__CallExpression__ParameterListAssignment_1_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 964) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:13853:1: ( ( ruleParameterList ) )
            // InternalSimpleBeeLangTestLanguage.g:13854:2: ( ruleParameterList )
            {
            // InternalSimpleBeeLangTestLanguage.g:13854:2: ( ruleParameterList )
            // InternalSimpleBeeLangTestLanguage.g:13855:3: ruleParameterList
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCallExpressionAccess().getParameterListParameterListParserRuleCall_1_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleParameterList();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCallExpressionAccess().getParameterListParameterListParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 964, rule__CallExpression__ParameterListAssignment_1_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CallExpression__ParameterListAssignment_1_2"


    // $ANTLR start "rule__WithExpression__ReferencedAdviceAssignment_1_0"
    // InternalSimpleBeeLangTestLanguage.g:13864:1: rule__WithExpression__ReferencedAdviceAssignment_1_0 : ( RULE_ID ) ;
    public final void rule__WithExpression__ReferencedAdviceAssignment_1_0() throws RecognitionException {
        int rule__WithExpression__ReferencedAdviceAssignment_1_0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 965) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:13868:1: ( ( RULE_ID ) )
            // InternalSimpleBeeLangTestLanguage.g:13869:2: ( RULE_ID )
            {
            // InternalSimpleBeeLangTestLanguage.g:13869:2: ( RULE_ID )
            // InternalSimpleBeeLangTestLanguage.g:13870:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithExpressionAccess().getReferencedAdviceIDTerminalRuleCall_1_0_0()); 
            }
            match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithExpressionAccess().getReferencedAdviceIDTerminalRuleCall_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 965, rule__WithExpression__ReferencedAdviceAssignment_1_0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithExpression__ReferencedAdviceAssignment_1_0"


    // $ANTLR start "rule__WithExpression__ReferencedAdviceAssignment_1_1_1"
    // InternalSimpleBeeLangTestLanguage.g:13879:1: rule__WithExpression__ReferencedAdviceAssignment_1_1_1 : ( RULE_ID ) ;
    public final void rule__WithExpression__ReferencedAdviceAssignment_1_1_1() throws RecognitionException {
        int rule__WithExpression__ReferencedAdviceAssignment_1_1_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 966) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:13883:1: ( ( RULE_ID ) )
            // InternalSimpleBeeLangTestLanguage.g:13884:2: ( RULE_ID )
            {
            // InternalSimpleBeeLangTestLanguage.g:13884:2: ( RULE_ID )
            // InternalSimpleBeeLangTestLanguage.g:13885:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithExpressionAccess().getReferencedAdviceIDTerminalRuleCall_1_1_1_0()); 
            }
            match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithExpressionAccess().getReferencedAdviceIDTerminalRuleCall_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 966, rule__WithExpression__ReferencedAdviceAssignment_1_1_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithExpression__ReferencedAdviceAssignment_1_1_1"


    // $ANTLR start "rule__WithExpression__FuncExprAssignment_2_0_1"
    // InternalSimpleBeeLangTestLanguage.g:13894:1: rule__WithExpression__FuncExprAssignment_2_0_1 : ( ruleExpression ) ;
    public final void rule__WithExpression__FuncExprAssignment_2_0_1() throws RecognitionException {
        int rule__WithExpression__FuncExprAssignment_2_0_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 967) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:13898:1: ( ( ruleExpression ) )
            // InternalSimpleBeeLangTestLanguage.g:13899:2: ( ruleExpression )
            {
            // InternalSimpleBeeLangTestLanguage.g:13899:2: ( ruleExpression )
            // InternalSimpleBeeLangTestLanguage.g:13900:3: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithExpressionAccess().getFuncExprExpressionParserRuleCall_2_0_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithExpressionAccess().getFuncExprExpressionParserRuleCall_2_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 967, rule__WithExpression__FuncExprAssignment_2_0_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithExpression__FuncExprAssignment_2_0_1"


    // $ANTLR start "rule__WithExpression__FuncExprAssignment_2_1_1"
    // InternalSimpleBeeLangTestLanguage.g:13909:1: rule__WithExpression__FuncExprAssignment_2_1_1 : ( ruleBlockExpressionWithoutBrackets ) ;
    public final void rule__WithExpression__FuncExprAssignment_2_1_1() throws RecognitionException {
        int rule__WithExpression__FuncExprAssignment_2_1_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 968) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:13913:1: ( ( ruleBlockExpressionWithoutBrackets ) )
            // InternalSimpleBeeLangTestLanguage.g:13914:2: ( ruleBlockExpressionWithoutBrackets )
            {
            // InternalSimpleBeeLangTestLanguage.g:13914:2: ( ruleBlockExpressionWithoutBrackets )
            // InternalSimpleBeeLangTestLanguage.g:13915:3: ruleBlockExpressionWithoutBrackets
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithExpressionAccess().getFuncExprBlockExpressionWithoutBracketsParserRuleCall_2_1_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleBlockExpressionWithoutBrackets();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithExpressionAccess().getFuncExprBlockExpressionWithoutBracketsParserRuleCall_2_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 968, rule__WithExpression__FuncExprAssignment_2_1_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithExpression__FuncExprAssignment_2_1_1"


    // $ANTLR start "rule__WithContextExpression__ExprAssignment_2"
    // InternalSimpleBeeLangTestLanguage.g:13924:1: rule__WithContextExpression__ExprAssignment_2 : ( ruleExpression ) ;
    public final void rule__WithContextExpression__ExprAssignment_2() throws RecognitionException {
        int rule__WithContextExpression__ExprAssignment_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 969) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:13928:1: ( ( ruleExpression ) )
            // InternalSimpleBeeLangTestLanguage.g:13929:2: ( ruleExpression )
            {
            // InternalSimpleBeeLangTestLanguage.g:13929:2: ( ruleExpression )
            // InternalSimpleBeeLangTestLanguage.g:13930:3: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithContextExpressionAccess().getExprExpressionParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithContextExpressionAccess().getExprExpressionParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 969, rule__WithContextExpression__ExprAssignment_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithContextExpression__ExprAssignment_2"


    // $ANTLR start "rule__WithContextExpression__AliasAssignment_3_1"
    // InternalSimpleBeeLangTestLanguage.g:13939:1: rule__WithContextExpression__AliasAssignment_3_1 : ( RULE_ID ) ;
    public final void rule__WithContextExpression__AliasAssignment_3_1() throws RecognitionException {
        int rule__WithContextExpression__AliasAssignment_3_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 970) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:13943:1: ( ( RULE_ID ) )
            // InternalSimpleBeeLangTestLanguage.g:13944:2: ( RULE_ID )
            {
            // InternalSimpleBeeLangTestLanguage.g:13944:2: ( RULE_ID )
            // InternalSimpleBeeLangTestLanguage.g:13945:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithContextExpressionAccess().getAliasIDTerminalRuleCall_3_1_0()); 
            }
            match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithContextExpressionAccess().getAliasIDTerminalRuleCall_3_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 970, rule__WithContextExpression__AliasAssignment_3_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithContextExpression__AliasAssignment_3_1"


    // $ANTLR start "rule__WithContextExpression__ContextBlockAssignment_4"
    // InternalSimpleBeeLangTestLanguage.g:13954:1: rule__WithContextExpression__ContextBlockAssignment_4 : ( ruleBlockExpression ) ;
    public final void rule__WithContextExpression__ContextBlockAssignment_4() throws RecognitionException {
        int rule__WithContextExpression__ContextBlockAssignment_4_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 971) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:13958:1: ( ( ruleBlockExpression ) )
            // InternalSimpleBeeLangTestLanguage.g:13959:2: ( ruleBlockExpression )
            {
            // InternalSimpleBeeLangTestLanguage.g:13959:2: ( ruleBlockExpression )
            // InternalSimpleBeeLangTestLanguage.g:13960:3: ruleBlockExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithContextExpressionAccess().getContextBlockBlockExpressionParserRuleCall_4_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleBlockExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithContextExpressionAccess().getContextBlockBlockExpressionParserRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 971, rule__WithContextExpression__ContextBlockAssignment_4_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithContextExpression__ContextBlockAssignment_4"


    // $ANTLR start "rule__BlockExpression__ExpressionsAssignment_2_0"
    // InternalSimpleBeeLangTestLanguage.g:13969:1: rule__BlockExpression__ExpressionsAssignment_2_0 : ( ruleTopLevelExpression ) ;
    public final void rule__BlockExpression__ExpressionsAssignment_2_0() throws RecognitionException {
        int rule__BlockExpression__ExpressionsAssignment_2_0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 972) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:13973:1: ( ( ruleTopLevelExpression ) )
            // InternalSimpleBeeLangTestLanguage.g:13974:2: ( ruleTopLevelExpression )
            {
            // InternalSimpleBeeLangTestLanguage.g:13974:2: ( ruleTopLevelExpression )
            // InternalSimpleBeeLangTestLanguage.g:13975:3: ruleTopLevelExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBlockExpressionAccess().getExpressionsTopLevelExpressionParserRuleCall_2_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleTopLevelExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBlockExpressionAccess().getExpressionsTopLevelExpressionParserRuleCall_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 972, rule__BlockExpression__ExpressionsAssignment_2_0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BlockExpression__ExpressionsAssignment_2_0"


    // $ANTLR start "rule__Value__NameAssignment_1"
    // InternalSimpleBeeLangTestLanguage.g:13984:1: rule__Value__NameAssignment_1 : ( RULE_ID ) ;
    public final void rule__Value__NameAssignment_1() throws RecognitionException {
        int rule__Value__NameAssignment_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 973) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:13988:1: ( ( RULE_ID ) )
            // InternalSimpleBeeLangTestLanguage.g:13989:2: ( RULE_ID )
            {
            // InternalSimpleBeeLangTestLanguage.g:13989:2: ( RULE_ID )
            // InternalSimpleBeeLangTestLanguage.g:13990:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValueAccess().getNameIDTerminalRuleCall_1_0()); 
            }
            match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getValueAccess().getNameIDTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 973, rule__Value__NameAssignment_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Value__NameAssignment_1"


    // $ANTLR start "rule__KeywordVariables__NameAssignment_1"
    // InternalSimpleBeeLangTestLanguage.g:13999:1: rule__KeywordVariables__NameAssignment_1 : ( ( rule__KeywordVariables__NameAlternatives_1_0 ) ) ;
    public final void rule__KeywordVariables__NameAssignment_1() throws RecognitionException {
        int rule__KeywordVariables__NameAssignment_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 974) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:14003:1: ( ( ( rule__KeywordVariables__NameAlternatives_1_0 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:14004:2: ( ( rule__KeywordVariables__NameAlternatives_1_0 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:14004:2: ( ( rule__KeywordVariables__NameAlternatives_1_0 ) )
            // InternalSimpleBeeLangTestLanguage.g:14005:3: ( rule__KeywordVariables__NameAlternatives_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getKeywordVariablesAccess().getNameAlternatives_1_0()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:14006:3: ( rule__KeywordVariables__NameAlternatives_1_0 )
            // InternalSimpleBeeLangTestLanguage.g:14006:4: rule__KeywordVariables__NameAlternatives_1_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__KeywordVariables__NameAlternatives_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getKeywordVariablesAccess().getNameAlternatives_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 974, rule__KeywordVariables__NameAssignment_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__KeywordVariables__NameAssignment_1"


    // $ANTLR start "rule__OperationCall__NameAssignment_1"
    // InternalSimpleBeeLangTestLanguage.g:14014:1: rule__OperationCall__NameAssignment_1 : ( RULE_ID ) ;
    public final void rule__OperationCall__NameAssignment_1() throws RecognitionException {
        int rule__OperationCall__NameAssignment_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 975) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:14018:1: ( ( RULE_ID ) )
            // InternalSimpleBeeLangTestLanguage.g:14019:2: ( RULE_ID )
            {
            // InternalSimpleBeeLangTestLanguage.g:14019:2: ( RULE_ID )
            // InternalSimpleBeeLangTestLanguage.g:14020:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperationCallAccess().getNameIDTerminalRuleCall_1_0()); 
            }
            match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperationCallAccess().getNameIDTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 975, rule__OperationCall__NameAssignment_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperationCall__NameAssignment_1"


    // $ANTLR start "rule__OperationCall__ParameterListAssignment_3"
    // InternalSimpleBeeLangTestLanguage.g:14029:1: rule__OperationCall__ParameterListAssignment_3 : ( ruleParameterList ) ;
    public final void rule__OperationCall__ParameterListAssignment_3() throws RecognitionException {
        int rule__OperationCall__ParameterListAssignment_3_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 976) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:14033:1: ( ( ruleParameterList ) )
            // InternalSimpleBeeLangTestLanguage.g:14034:2: ( ruleParameterList )
            {
            // InternalSimpleBeeLangTestLanguage.g:14034:2: ( ruleParameterList )
            // InternalSimpleBeeLangTestLanguage.g:14035:3: ruleParameterList
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperationCallAccess().getParameterListParameterListParserRuleCall_3_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleParameterList();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperationCallAccess().getParameterListParameterListParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 976, rule__OperationCall__ParameterListAssignment_3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperationCall__ParameterListAssignment_3"


    // $ANTLR start "rule__ConstructorCallExpression__TypeExprAssignment_2"
    // InternalSimpleBeeLangTestLanguage.g:14044:1: rule__ConstructorCallExpression__TypeExprAssignment_2 : ( RULE_ID ) ;
    public final void rule__ConstructorCallExpression__TypeExprAssignment_2() throws RecognitionException {
        int rule__ConstructorCallExpression__TypeExprAssignment_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 977) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:14048:1: ( ( RULE_ID ) )
            // InternalSimpleBeeLangTestLanguage.g:14049:2: ( RULE_ID )
            {
            // InternalSimpleBeeLangTestLanguage.g:14049:2: ( RULE_ID )
            // InternalSimpleBeeLangTestLanguage.g:14050:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConstructorCallExpressionAccess().getTypeExprIDTerminalRuleCall_2_0()); 
            }
            match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConstructorCallExpressionAccess().getTypeExprIDTerminalRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 977, rule__ConstructorCallExpression__TypeExprAssignment_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConstructorCallExpression__TypeExprAssignment_2"


    // $ANTLR start "rule__ConstructorCallExpression__ParameterListAssignment_3_1"
    // InternalSimpleBeeLangTestLanguage.g:14059:1: rule__ConstructorCallExpression__ParameterListAssignment_3_1 : ( ruleParameterList ) ;
    public final void rule__ConstructorCallExpression__ParameterListAssignment_3_1() throws RecognitionException {
        int rule__ConstructorCallExpression__ParameterListAssignment_3_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 978) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:14063:1: ( ( ruleParameterList ) )
            // InternalSimpleBeeLangTestLanguage.g:14064:2: ( ruleParameterList )
            {
            // InternalSimpleBeeLangTestLanguage.g:14064:2: ( ruleParameterList )
            // InternalSimpleBeeLangTestLanguage.g:14065:3: ruleParameterList
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConstructorCallExpressionAccess().getParameterListParameterListParserRuleCall_3_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleParameterList();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConstructorCallExpressionAccess().getParameterListParameterListParserRuleCall_3_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 978, rule__ConstructorCallExpression__ParameterListAssignment_3_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConstructorCallExpression__ParameterListAssignment_3_1"


    // $ANTLR start "rule__ConstructorCallExpression__AliasAssignment_4_1"
    // InternalSimpleBeeLangTestLanguage.g:14074:1: rule__ConstructorCallExpression__AliasAssignment_4_1 : ( RULE_ID ) ;
    public final void rule__ConstructorCallExpression__AliasAssignment_4_1() throws RecognitionException {
        int rule__ConstructorCallExpression__AliasAssignment_4_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 979) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:14078:1: ( ( RULE_ID ) )
            // InternalSimpleBeeLangTestLanguage.g:14079:2: ( RULE_ID )
            {
            // InternalSimpleBeeLangTestLanguage.g:14079:2: ( RULE_ID )
            // InternalSimpleBeeLangTestLanguage.g:14080:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConstructorCallExpressionAccess().getAliasIDTerminalRuleCall_4_1_0()); 
            }
            match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConstructorCallExpressionAccess().getAliasIDTerminalRuleCall_4_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 979, rule__ConstructorCallExpression__AliasAssignment_4_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConstructorCallExpression__AliasAssignment_4_1"


    // $ANTLR start "rule__ConstructorCallExpression__ContextBlockAssignment_5"
    // InternalSimpleBeeLangTestLanguage.g:14089:1: rule__ConstructorCallExpression__ContextBlockAssignment_5 : ( ruleInitializationBlockExpression ) ;
    public final void rule__ConstructorCallExpression__ContextBlockAssignment_5() throws RecognitionException {
        int rule__ConstructorCallExpression__ContextBlockAssignment_5_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 980) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:14093:1: ( ( ruleInitializationBlockExpression ) )
            // InternalSimpleBeeLangTestLanguage.g:14094:2: ( ruleInitializationBlockExpression )
            {
            // InternalSimpleBeeLangTestLanguage.g:14094:2: ( ruleInitializationBlockExpression )
            // InternalSimpleBeeLangTestLanguage.g:14095:3: ruleInitializationBlockExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConstructorCallExpressionAccess().getContextBlockInitializationBlockExpressionParserRuleCall_5_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleInitializationBlockExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConstructorCallExpressionAccess().getContextBlockInitializationBlockExpressionParserRuleCall_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 980, rule__ConstructorCallExpression__ContextBlockAssignment_5_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConstructorCallExpression__ContextBlockAssignment_5"


    // $ANTLR start "rule__InitializationBlockExpression__ExpressionsAssignment_2"
    // InternalSimpleBeeLangTestLanguage.g:14104:1: rule__InitializationBlockExpression__ExpressionsAssignment_2 : ( ruleInitializationExpression ) ;
    public final void rule__InitializationBlockExpression__ExpressionsAssignment_2() throws RecognitionException {
        int rule__InitializationBlockExpression__ExpressionsAssignment_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 981) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:14108:1: ( ( ruleInitializationExpression ) )
            // InternalSimpleBeeLangTestLanguage.g:14109:2: ( ruleInitializationExpression )
            {
            // InternalSimpleBeeLangTestLanguage.g:14109:2: ( ruleInitializationExpression )
            // InternalSimpleBeeLangTestLanguage.g:14110:3: ruleInitializationExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInitializationBlockExpressionAccess().getExpressionsInitializationExpressionParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleInitializationExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInitializationBlockExpressionAccess().getExpressionsInitializationExpressionParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 981, rule__InitializationBlockExpression__ExpressionsAssignment_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InitializationBlockExpression__ExpressionsAssignment_2"


    // $ANTLR start "rule__InitializationExpression__LeftExprAssignment_1"
    // InternalSimpleBeeLangTestLanguage.g:14119:1: rule__InitializationExpression__LeftExprAssignment_1 : ( ruleFeatureOfThis ) ;
    public final void rule__InitializationExpression__LeftExprAssignment_1() throws RecognitionException {
        int rule__InitializationExpression__LeftExprAssignment_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 982) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:14123:1: ( ( ruleFeatureOfThis ) )
            // InternalSimpleBeeLangTestLanguage.g:14124:2: ( ruleFeatureOfThis )
            {
            // InternalSimpleBeeLangTestLanguage.g:14124:2: ( ruleFeatureOfThis )
            // InternalSimpleBeeLangTestLanguage.g:14125:3: ruleFeatureOfThis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInitializationExpressionAccess().getLeftExprFeatureOfThisParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleFeatureOfThis();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInitializationExpressionAccess().getLeftExprFeatureOfThisParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 982, rule__InitializationExpression__LeftExprAssignment_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InitializationExpression__LeftExprAssignment_1"


    // $ANTLR start "rule__InitializationExpression__FunctionNameAssignment_2"
    // InternalSimpleBeeLangTestLanguage.g:14134:1: rule__InitializationExpression__FunctionNameAssignment_2 : ( ( ':' ) ) ;
    public final void rule__InitializationExpression__FunctionNameAssignment_2() throws RecognitionException {
        int rule__InitializationExpression__FunctionNameAssignment_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 983) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:14138:1: ( ( ( ':' ) ) )
            // InternalSimpleBeeLangTestLanguage.g:14139:2: ( ( ':' ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:14139:2: ( ( ':' ) )
            // InternalSimpleBeeLangTestLanguage.g:14140:3: ( ':' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInitializationExpressionAccess().getFunctionNameColonKeyword_2_0()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:14141:3: ( ':' )
            // InternalSimpleBeeLangTestLanguage.g:14142:4: ':'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInitializationExpressionAccess().getFunctionNameColonKeyword_2_0()); 
            }
            match(input,49,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInitializationExpressionAccess().getFunctionNameColonKeyword_2_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInitializationExpressionAccess().getFunctionNameColonKeyword_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 983, rule__InitializationExpression__FunctionNameAssignment_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InitializationExpression__FunctionNameAssignment_2"


    // $ANTLR start "rule__InitializationExpression__RightExprAssignment_3"
    // InternalSimpleBeeLangTestLanguage.g:14153:1: rule__InitializationExpression__RightExprAssignment_3 : ( ruleExpression ) ;
    public final void rule__InitializationExpression__RightExprAssignment_3() throws RecognitionException {
        int rule__InitializationExpression__RightExprAssignment_3_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 984) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:14157:1: ( ( ruleExpression ) )
            // InternalSimpleBeeLangTestLanguage.g:14158:2: ( ruleExpression )
            {
            // InternalSimpleBeeLangTestLanguage.g:14158:2: ( ruleExpression )
            // InternalSimpleBeeLangTestLanguage.g:14159:3: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInitializationExpressionAccess().getRightExprExpressionParserRuleCall_3_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInitializationExpressionAccess().getRightExprExpressionParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 984, rule__InitializationExpression__RightExprAssignment_3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InitializationExpression__RightExprAssignment_3"


    // $ANTLR start "rule__FeatureOfThis__FeatureNameAssignment_1"
    // InternalSimpleBeeLangTestLanguage.g:14168:1: rule__FeatureOfThis__FeatureNameAssignment_1 : ( RULE_ID ) ;
    public final void rule__FeatureOfThis__FeatureNameAssignment_1() throws RecognitionException {
        int rule__FeatureOfThis__FeatureNameAssignment_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 985) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:14172:1: ( ( RULE_ID ) )
            // InternalSimpleBeeLangTestLanguage.g:14173:2: ( RULE_ID )
            {
            // InternalSimpleBeeLangTestLanguage.g:14173:2: ( RULE_ID )
            // InternalSimpleBeeLangTestLanguage.g:14174:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFeatureOfThisAccess().getFeatureNameIDTerminalRuleCall_1_0()); 
            }
            match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFeatureOfThisAccess().getFeatureNameIDTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 985, rule__FeatureOfThis__FeatureNameAssignment_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FeatureOfThis__FeatureNameAssignment_1"


    // $ANTLR start "rule__ClosureExpression__ReturnTypeAssignment_1_1"
    // InternalSimpleBeeLangTestLanguage.g:14183:1: rule__ClosureExpression__ReturnTypeAssignment_1_1 : ( ruleTypeRef ) ;
    public final void rule__ClosureExpression__ReturnTypeAssignment_1_1() throws RecognitionException {
        int rule__ClosureExpression__ReturnTypeAssignment_1_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 986) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:14187:1: ( ( ruleTypeRef ) )
            // InternalSimpleBeeLangTestLanguage.g:14188:2: ( ruleTypeRef )
            {
            // InternalSimpleBeeLangTestLanguage.g:14188:2: ( ruleTypeRef )
            // InternalSimpleBeeLangTestLanguage.g:14189:3: ruleTypeRef
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureExpressionAccess().getReturnTypeTypeRefParserRuleCall_1_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleTypeRef();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureExpressionAccess().getReturnTypeTypeRefParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 986, rule__ClosureExpression__ReturnTypeAssignment_1_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__ReturnTypeAssignment_1_1"


    // $ANTLR start "rule__ClosureExpression__ParametersAssignment_2_0_1_0"
    // InternalSimpleBeeLangTestLanguage.g:14198:1: rule__ClosureExpression__ParametersAssignment_2_0_1_0 : ( ruleParameterDeclaration ) ;
    public final void rule__ClosureExpression__ParametersAssignment_2_0_1_0() throws RecognitionException {
        int rule__ClosureExpression__ParametersAssignment_2_0_1_0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 987) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:14202:1: ( ( ruleParameterDeclaration ) )
            // InternalSimpleBeeLangTestLanguage.g:14203:2: ( ruleParameterDeclaration )
            {
            // InternalSimpleBeeLangTestLanguage.g:14203:2: ( ruleParameterDeclaration )
            // InternalSimpleBeeLangTestLanguage.g:14204:3: ruleParameterDeclaration
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureExpressionAccess().getParametersParameterDeclarationParserRuleCall_2_0_1_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleParameterDeclaration();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureExpressionAccess().getParametersParameterDeclarationParserRuleCall_2_0_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 987, rule__ClosureExpression__ParametersAssignment_2_0_1_0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__ParametersAssignment_2_0_1_0"


    // $ANTLR start "rule__ClosureExpression__ParametersAssignment_2_0_1_1_1"
    // InternalSimpleBeeLangTestLanguage.g:14213:1: rule__ClosureExpression__ParametersAssignment_2_0_1_1_1 : ( ruleParameterDeclaration ) ;
    public final void rule__ClosureExpression__ParametersAssignment_2_0_1_1_1() throws RecognitionException {
        int rule__ClosureExpression__ParametersAssignment_2_0_1_1_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 988) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:14217:1: ( ( ruleParameterDeclaration ) )
            // InternalSimpleBeeLangTestLanguage.g:14218:2: ( ruleParameterDeclaration )
            {
            // InternalSimpleBeeLangTestLanguage.g:14218:2: ( ruleParameterDeclaration )
            // InternalSimpleBeeLangTestLanguage.g:14219:3: ruleParameterDeclaration
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureExpressionAccess().getParametersParameterDeclarationParserRuleCall_2_0_1_1_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleParameterDeclaration();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureExpressionAccess().getParametersParameterDeclarationParserRuleCall_2_0_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 988, rule__ClosureExpression__ParametersAssignment_2_0_1_1_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__ParametersAssignment_2_0_1_1_1"


    // $ANTLR start "rule__ClosureExpression__VarArgsAssignment_2_0_1_2_1"
    // InternalSimpleBeeLangTestLanguage.g:14228:1: rule__ClosureExpression__VarArgsAssignment_2_0_1_2_1 : ( ( '...' ) ) ;
    public final void rule__ClosureExpression__VarArgsAssignment_2_0_1_2_1() throws RecognitionException {
        int rule__ClosureExpression__VarArgsAssignment_2_0_1_2_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 989) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:14232:1: ( ( ( '...' ) ) )
            // InternalSimpleBeeLangTestLanguage.g:14233:2: ( ( '...' ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:14233:2: ( ( '...' ) )
            // InternalSimpleBeeLangTestLanguage.g:14234:3: ( '...' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureExpressionAccess().getVarArgsFullStopFullStopFullStopKeyword_2_0_1_2_1_0()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:14235:3: ( '...' )
            // InternalSimpleBeeLangTestLanguage.g:14236:4: '...'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureExpressionAccess().getVarArgsFullStopFullStopFullStopKeyword_2_0_1_2_1_0()); 
            }
            match(input,75,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureExpressionAccess().getVarArgsFullStopFullStopFullStopKeyword_2_0_1_2_1_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureExpressionAccess().getVarArgsFullStopFullStopFullStopKeyword_2_0_1_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 989, rule__ClosureExpression__VarArgsAssignment_2_0_1_2_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__VarArgsAssignment_2_0_1_2_1"


    // $ANTLR start "rule__ClosureExpression__ParametersAssignment_2_0_1_2_2"
    // InternalSimpleBeeLangTestLanguage.g:14247:1: rule__ClosureExpression__ParametersAssignment_2_0_1_2_2 : ( ruleParameterDeclaration ) ;
    public final void rule__ClosureExpression__ParametersAssignment_2_0_1_2_2() throws RecognitionException {
        int rule__ClosureExpression__ParametersAssignment_2_0_1_2_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 990) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:14251:1: ( ( ruleParameterDeclaration ) )
            // InternalSimpleBeeLangTestLanguage.g:14252:2: ( ruleParameterDeclaration )
            {
            // InternalSimpleBeeLangTestLanguage.g:14252:2: ( ruleParameterDeclaration )
            // InternalSimpleBeeLangTestLanguage.g:14253:3: ruleParameterDeclaration
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureExpressionAccess().getParametersParameterDeclarationParserRuleCall_2_0_1_2_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleParameterDeclaration();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureExpressionAccess().getParametersParameterDeclarationParserRuleCall_2_0_1_2_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 990, rule__ClosureExpression__ParametersAssignment_2_0_1_2_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__ParametersAssignment_2_0_1_2_2"


    // $ANTLR start "rule__ClosureExpression__VarArgsAssignment_2_1_0"
    // InternalSimpleBeeLangTestLanguage.g:14262:1: rule__ClosureExpression__VarArgsAssignment_2_1_0 : ( ( '...' ) ) ;
    public final void rule__ClosureExpression__VarArgsAssignment_2_1_0() throws RecognitionException {
        int rule__ClosureExpression__VarArgsAssignment_2_1_0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 991) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:14266:1: ( ( ( '...' ) ) )
            // InternalSimpleBeeLangTestLanguage.g:14267:2: ( ( '...' ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:14267:2: ( ( '...' ) )
            // InternalSimpleBeeLangTestLanguage.g:14268:3: ( '...' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureExpressionAccess().getVarArgsFullStopFullStopFullStopKeyword_2_1_0_0()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:14269:3: ( '...' )
            // InternalSimpleBeeLangTestLanguage.g:14270:4: '...'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureExpressionAccess().getVarArgsFullStopFullStopFullStopKeyword_2_1_0_0()); 
            }
            match(input,75,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureExpressionAccess().getVarArgsFullStopFullStopFullStopKeyword_2_1_0_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureExpressionAccess().getVarArgsFullStopFullStopFullStopKeyword_2_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 991, rule__ClosureExpression__VarArgsAssignment_2_1_0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__VarArgsAssignment_2_1_0"


    // $ANTLR start "rule__ClosureExpression__ParametersAssignment_2_1_1"
    // InternalSimpleBeeLangTestLanguage.g:14281:1: rule__ClosureExpression__ParametersAssignment_2_1_1 : ( ruleParameterDeclaration ) ;
    public final void rule__ClosureExpression__ParametersAssignment_2_1_1() throws RecognitionException {
        int rule__ClosureExpression__ParametersAssignment_2_1_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 992) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:14285:1: ( ( ruleParameterDeclaration ) )
            // InternalSimpleBeeLangTestLanguage.g:14286:2: ( ruleParameterDeclaration )
            {
            // InternalSimpleBeeLangTestLanguage.g:14286:2: ( ruleParameterDeclaration )
            // InternalSimpleBeeLangTestLanguage.g:14287:3: ruleParameterDeclaration
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureExpressionAccess().getParametersParameterDeclarationParserRuleCall_2_1_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleParameterDeclaration();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureExpressionAccess().getParametersParameterDeclarationParserRuleCall_2_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 992, rule__ClosureExpression__ParametersAssignment_2_1_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__ParametersAssignment_2_1_1"


    // $ANTLR start "rule__ClosureExpression__FuncExprAssignment_4"
    // InternalSimpleBeeLangTestLanguage.g:14296:1: rule__ClosureExpression__FuncExprAssignment_4 : ( ruleOneOrManyExpressions ) ;
    public final void rule__ClosureExpression__FuncExprAssignment_4() throws RecognitionException {
        int rule__ClosureExpression__FuncExprAssignment_4_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 993) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:14300:1: ( ( ruleOneOrManyExpressions ) )
            // InternalSimpleBeeLangTestLanguage.g:14301:2: ( ruleOneOrManyExpressions )
            {
            // InternalSimpleBeeLangTestLanguage.g:14301:2: ( ruleOneOrManyExpressions )
            // InternalSimpleBeeLangTestLanguage.g:14302:3: ruleOneOrManyExpressions
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureExpressionAccess().getFuncExprOneOrManyExpressionsParserRuleCall_4_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleOneOrManyExpressions();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureExpressionAccess().getFuncExprOneOrManyExpressionsParserRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 993, rule__ClosureExpression__FuncExprAssignment_4_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__FuncExprAssignment_4"


    // $ANTLR start "rule__BlockExpressionWithoutBrackets__ExpressionsAssignment_1_0"
    // InternalSimpleBeeLangTestLanguage.g:14311:1: rule__BlockExpressionWithoutBrackets__ExpressionsAssignment_1_0 : ( ruleTopLevelExpression ) ;
    public final void rule__BlockExpressionWithoutBrackets__ExpressionsAssignment_1_0() throws RecognitionException {
        int rule__BlockExpressionWithoutBrackets__ExpressionsAssignment_1_0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 994) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:14315:1: ( ( ruleTopLevelExpression ) )
            // InternalSimpleBeeLangTestLanguage.g:14316:2: ( ruleTopLevelExpression )
            {
            // InternalSimpleBeeLangTestLanguage.g:14316:2: ( ruleTopLevelExpression )
            // InternalSimpleBeeLangTestLanguage.g:14317:3: ruleTopLevelExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBlockExpressionWithoutBracketsAccess().getExpressionsTopLevelExpressionParserRuleCall_1_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleTopLevelExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBlockExpressionWithoutBracketsAccess().getExpressionsTopLevelExpressionParserRuleCall_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 994, rule__BlockExpressionWithoutBrackets__ExpressionsAssignment_1_0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BlockExpressionWithoutBrackets__ExpressionsAssignment_1_0"


    // $ANTLR start "rule__ValueLiteral__ValueAssignment"
    // InternalSimpleBeeLangTestLanguage.g:14326:1: rule__ValueLiteral__ValueAssignment : ( RULE_STRING ) ;
    public final void rule__ValueLiteral__ValueAssignment() throws RecognitionException {
        int rule__ValueLiteral__ValueAssignment_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 995) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:14330:1: ( ( RULE_STRING ) )
            // InternalSimpleBeeLangTestLanguage.g:14331:2: ( RULE_STRING )
            {
            // InternalSimpleBeeLangTestLanguage.g:14331:2: ( RULE_STRING )
            // InternalSimpleBeeLangTestLanguage.g:14332:3: RULE_STRING
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValueLiteralAccess().getValueSTRINGTerminalRuleCall_0()); 
            }
            match(input,RULE_STRING,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getValueLiteralAccess().getValueSTRINGTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 995, rule__ValueLiteral__ValueAssignment_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValueLiteral__ValueAssignment"

    // $ANTLR start synpred2_InternalSimpleBeeLangTestLanguage
    public final void synpred2_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalSimpleBeeLangTestLanguage.g:1500:2: ( ( ( rule__Model__UnitsAssignment_0 )* ) )
        // InternalSimpleBeeLangTestLanguage.g:1500:2: ( ( rule__Model__UnitsAssignment_0 )* )
        {
        // InternalSimpleBeeLangTestLanguage.g:1500:2: ( ( rule__Model__UnitsAssignment_0 )* )
        // InternalSimpleBeeLangTestLanguage.g:1501:3: ( rule__Model__UnitsAssignment_0 )*
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getModelAccess().getUnitsAssignment_0()); 
        }
        // InternalSimpleBeeLangTestLanguage.g:1502:3: ( rule__Model__UnitsAssignment_0 )*
        loop120:
        do {
            int alt120=2;
            int LA120_0 = input.LA(1);

            if ( (LA120_0==RULE_DOCUMENTATION||LA120_0==13) ) {
                alt120=1;
            }


            switch (alt120) {
        	case 1 :
        	    // InternalSimpleBeeLangTestLanguage.g:1502:4: rule__Model__UnitsAssignment_0
        	    {
        	    pushFollow(FollowSets000.FOLLOW_3);
        	    rule__Model__UnitsAssignment_0();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }
        	    break;

        	default :
        	    break loop120;
            }
        } while (true);


        }


        }
    }
    // $ANTLR end synpred2_InternalSimpleBeeLangTestLanguage

    // $ANTLR start synpred8_InternalSimpleBeeLangTestLanguage
    public final void synpred8_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalSimpleBeeLangTestLanguage.g:1605:2: ( ( ruleClosureParameter ) )
        // InternalSimpleBeeLangTestLanguage.g:1605:2: ( ruleClosureParameter )
        {
        // InternalSimpleBeeLangTestLanguage.g:1605:2: ( ruleClosureParameter )
        // InternalSimpleBeeLangTestLanguage.g:1606:3: ruleClosureParameter
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getFirstParameterAccess().getClosureParameterParserRuleCall_0()); 
        }
        pushFollow(FollowSets000.FOLLOW_2);
        ruleClosureParameter();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred8_InternalSimpleBeeLangTestLanguage

    // $ANTLR start synpred25_InternalSimpleBeeLangTestLanguage
    public final void synpred25_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalSimpleBeeLangTestLanguage.g:1797:2: ( ( ruleVarDeclaration ) )
        // InternalSimpleBeeLangTestLanguage.g:1797:2: ( ruleVarDeclaration )
        {
        // InternalSimpleBeeLangTestLanguage.g:1797:2: ( ruleVarDeclaration )
        // InternalSimpleBeeLangTestLanguage.g:1798:3: ruleVarDeclaration
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getTopLevelExpressionAccess().getVarDeclarationParserRuleCall_0()); 
        }
        pushFollow(FollowSets000.FOLLOW_2);
        ruleVarDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred25_InternalSimpleBeeLangTestLanguage

    // $ANTLR start synpred39_InternalSimpleBeeLangTestLanguage
    public final void synpred39_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalSimpleBeeLangTestLanguage.g:2046:2: ( ( ( rule__InfixExpression__Group_1_0__0 ) ) )
        // InternalSimpleBeeLangTestLanguage.g:2046:2: ( ( rule__InfixExpression__Group_1_0__0 ) )
        {
        // InternalSimpleBeeLangTestLanguage.g:2046:2: ( ( rule__InfixExpression__Group_1_0__0 ) )
        // InternalSimpleBeeLangTestLanguage.g:2047:3: ( rule__InfixExpression__Group_1_0__0 )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getInfixExpressionAccess().getGroup_1_0()); 
        }
        // InternalSimpleBeeLangTestLanguage.g:2048:3: ( rule__InfixExpression__Group_1_0__0 )
        // InternalSimpleBeeLangTestLanguage.g:2048:4: rule__InfixExpression__Group_1_0__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__InfixExpression__Group_1_0__0();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred39_InternalSimpleBeeLangTestLanguage

    // $ANTLR start synpred41_InternalSimpleBeeLangTestLanguage
    public final void synpred41_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalSimpleBeeLangTestLanguage.g:2073:2: ( ( ruleFeatureCall ) )
        // InternalSimpleBeeLangTestLanguage.g:2073:2: ( ruleFeatureCall )
        {
        // InternalSimpleBeeLangTestLanguage.g:2073:2: ( ruleFeatureCall )
        // InternalSimpleBeeLangTestLanguage.g:2074:3: ruleFeatureCall
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getPrimaryExpressionAccess().getFeatureCallParserRuleCall_0()); 
        }
        pushFollow(FollowSets000.FOLLOW_2);
        ruleFeatureCall();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred41_InternalSimpleBeeLangTestLanguage

}

@SuppressWarnings("all")
abstract class InternalSimpleBeeLangTestLanguageParser12 extends InternalSimpleBeeLangTestLanguageParser11 {

        InternalSimpleBeeLangTestLanguageParser12(TokenStream input) {
            this(input, new RecognizerSharedState());
        }

        InternalSimpleBeeLangTestLanguageParser12(TokenStream input, RecognizerSharedState state) {
            super(input, state);
        }

    // $ANTLR start synpred43_InternalSimpleBeeLangTestLanguage
    public final void synpred43_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalSimpleBeeLangTestLanguage.g:2085:2: ( ( ruleValue ) )
        // InternalSimpleBeeLangTestLanguage.g:2085:2: ( ruleValue )
        {
        // InternalSimpleBeeLangTestLanguage.g:2085:2: ( ruleValue )
        // InternalSimpleBeeLangTestLanguage.g:2086:3: ruleValue
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getPrimaryExpressionAccess().getValueParserRuleCall_2()); 
        }
        pushFollow(FollowSets000.FOLLOW_2);
        ruleValue();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred43_InternalSimpleBeeLangTestLanguage

    // $ANTLR start synpred44_InternalSimpleBeeLangTestLanguage
    public final void synpred44_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalSimpleBeeLangTestLanguage.g:2091:2: ( ( ruleLiteral ) )
        // InternalSimpleBeeLangTestLanguage.g:2091:2: ( ruleLiteral )
        {
        // InternalSimpleBeeLangTestLanguage.g:2091:2: ( ruleLiteral )
        // InternalSimpleBeeLangTestLanguage.g:2092:3: ruleLiteral
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getPrimaryExpressionAccess().getLiteralParserRuleCall_3()); 
        }
        pushFollow(FollowSets000.FOLLOW_2);
        ruleLiteral();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred44_InternalSimpleBeeLangTestLanguage

    // $ANTLR start synpred47_InternalSimpleBeeLangTestLanguage
    public final void synpred47_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalSimpleBeeLangTestLanguage.g:2109:2: ( ( ruleBlockExpression ) )
        // InternalSimpleBeeLangTestLanguage.g:2109:2: ( ruleBlockExpression )
        {
        // InternalSimpleBeeLangTestLanguage.g:2109:2: ( ruleBlockExpression )
        // InternalSimpleBeeLangTestLanguage.g:2110:3: ruleBlockExpression
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getPrimaryExpressionAccess().getBlockExpressionParserRuleCall_6()); 
        }
        pushFollow(FollowSets000.FOLLOW_2);
        ruleBlockExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred47_InternalSimpleBeeLangTestLanguage

    // $ANTLR start synpred48_InternalSimpleBeeLangTestLanguage
    public final void synpred48_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalSimpleBeeLangTestLanguage.g:2115:2: ( ( ruleWithExpression ) )
        // InternalSimpleBeeLangTestLanguage.g:2115:2: ( ruleWithExpression )
        {
        // InternalSimpleBeeLangTestLanguage.g:2115:2: ( ruleWithExpression )
        // InternalSimpleBeeLangTestLanguage.g:2116:3: ruleWithExpression
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getPrimaryExpressionAccess().getWithExpressionParserRuleCall_7()); 
        }
        pushFollow(FollowSets000.FOLLOW_2);
        ruleWithExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred48_InternalSimpleBeeLangTestLanguage

    // $ANTLR start synpred58_InternalSimpleBeeLangTestLanguage
    public final void synpred58_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalSimpleBeeLangTestLanguage.g:2250:2: ( ( ruleBlockExpressionWithoutBrackets ) )
        // InternalSimpleBeeLangTestLanguage.g:2250:2: ( ruleBlockExpressionWithoutBrackets )
        {
        // InternalSimpleBeeLangTestLanguage.g:2250:2: ( ruleBlockExpressionWithoutBrackets )
        // InternalSimpleBeeLangTestLanguage.g:2251:3: ruleBlockExpressionWithoutBrackets
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getOneOrManyExpressionsAccess().getBlockExpressionWithoutBracketsParserRuleCall_0()); 
        }
        pushFollow(FollowSets000.FOLLOW_2);
        ruleBlockExpressionWithoutBrackets();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred58_InternalSimpleBeeLangTestLanguage

    // $ANTLR start synpred84_InternalSimpleBeeLangTestLanguage
    public final void synpred84_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalSimpleBeeLangTestLanguage.g:6388:3: ( rule__AssignmentExpression__Group_1__0 )
        // InternalSimpleBeeLangTestLanguage.g:6388:3: rule__AssignmentExpression__Group_1__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__AssignmentExpression__Group_1__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred84_InternalSimpleBeeLangTestLanguage

    // $ANTLR start synpred94_InternalSimpleBeeLangTestLanguage
    public final void synpred94_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalSimpleBeeLangTestLanguage.g:7630:3: ( rule__OrExpression__Group_1__0 )
        // InternalSimpleBeeLangTestLanguage.g:7630:3: rule__OrExpression__Group_1__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__OrExpression__Group_1__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred94_InternalSimpleBeeLangTestLanguage

    // $ANTLR start synpred95_InternalSimpleBeeLangTestLanguage
    public final void synpred95_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalSimpleBeeLangTestLanguage.g:7765:3: ( rule__AndExpression__Group_1__0 )
        // InternalSimpleBeeLangTestLanguage.g:7765:3: rule__AndExpression__Group_1__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__AndExpression__Group_1__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred95_InternalSimpleBeeLangTestLanguage

    // $ANTLR start synpred96_InternalSimpleBeeLangTestLanguage
    public final void synpred96_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalSimpleBeeLangTestLanguage.g:7900:3: ( rule__RelationalExpression__Group_1__0 )
        // InternalSimpleBeeLangTestLanguage.g:7900:3: rule__RelationalExpression__Group_1__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__RelationalExpression__Group_1__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred96_InternalSimpleBeeLangTestLanguage

    // $ANTLR start synpred97_InternalSimpleBeeLangTestLanguage
    public final void synpred97_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalSimpleBeeLangTestLanguage.g:8035:3: ( rule__AdditiveExpression__Group_1__0 )
        // InternalSimpleBeeLangTestLanguage.g:8035:3: rule__AdditiveExpression__Group_1__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__AdditiveExpression__Group_1__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred97_InternalSimpleBeeLangTestLanguage

    // $ANTLR start synpred98_InternalSimpleBeeLangTestLanguage
    public final void synpred98_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalSimpleBeeLangTestLanguage.g:8170:3: ( rule__MultiplicativeExpression__Group_1__0 )
        // InternalSimpleBeeLangTestLanguage.g:8170:3: rule__MultiplicativeExpression__Group_1__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__MultiplicativeExpression__Group_1__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred98_InternalSimpleBeeLangTestLanguage

    // $ANTLR start synpred99_InternalSimpleBeeLangTestLanguage
    public final void synpred99_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalSimpleBeeLangTestLanguage.g:8305:3: ( rule__SetExpression__Group_1__0 )
        // InternalSimpleBeeLangTestLanguage.g:8305:3: rule__SetExpression__Group_1__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__SetExpression__Group_1__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred99_InternalSimpleBeeLangTestLanguage

    // $ANTLR start synpred100_InternalSimpleBeeLangTestLanguage
    public final void synpred100_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalSimpleBeeLangTestLanguage.g:8602:3: ( rule__PostopExpression__Group_1__0 )
        // InternalSimpleBeeLangTestLanguage.g:8602:3: rule__PostopExpression__Group_1__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__PostopExpression__Group_1__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred100_InternalSimpleBeeLangTestLanguage

    // $ANTLR start synpred101_InternalSimpleBeeLangTestLanguage
    public final void synpred101_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalSimpleBeeLangTestLanguage.g:8710:3: ( rule__InfixExpression__Alternatives_1 )
        // InternalSimpleBeeLangTestLanguage.g:8710:3: rule__InfixExpression__Alternatives_1
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__InfixExpression__Alternatives_1();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred101_InternalSimpleBeeLangTestLanguage

    // $ANTLR start synpred103_InternalSimpleBeeLangTestLanguage
    public final void synpred103_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalSimpleBeeLangTestLanguage.g:9115:3: ( rule__CallExpression__Group_1__0 )
        // InternalSimpleBeeLangTestLanguage.g:9115:3: rule__CallExpression__Group_1__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__CallExpression__Group_1__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred103_InternalSimpleBeeLangTestLanguage

    // $ANTLR start synpred110_InternalSimpleBeeLangTestLanguage
    public final void synpred110_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalSimpleBeeLangTestLanguage.g:10250:3: ( rule__ConstructorCallExpression__Group_3__0 )
        // InternalSimpleBeeLangTestLanguage.g:10250:3: rule__ConstructorCallExpression__Group_3__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__ConstructorCallExpression__Group_3__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred110_InternalSimpleBeeLangTestLanguage

    // $ANTLR start synpred111_InternalSimpleBeeLangTestLanguage
    public final void synpred111_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalSimpleBeeLangTestLanguage.g:10277:3: ( rule__ConstructorCallExpression__Group_4__0 )
        // InternalSimpleBeeLangTestLanguage.g:10277:3: rule__ConstructorCallExpression__Group_4__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__ConstructorCallExpression__Group_4__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred111_InternalSimpleBeeLangTestLanguage

    // $ANTLR start synpred115_InternalSimpleBeeLangTestLanguage
    public final void synpred115_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalSimpleBeeLangTestLanguage.g:10898:3: ( rule__ClosureExpression__Alternatives_2 )
        // InternalSimpleBeeLangTestLanguage.g:10898:3: rule__ClosureExpression__Alternatives_2
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__ClosureExpression__Alternatives_2();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred115_InternalSimpleBeeLangTestLanguage

    // $ANTLR start synpred123_InternalSimpleBeeLangTestLanguage
    public final void synpred123_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalSimpleBeeLangTestLanguage.g:11729:2: ( rule__Unit__UnorderedGroup_7__0 )
        // InternalSimpleBeeLangTestLanguage.g:11729:2: rule__Unit__UnorderedGroup_7__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__Unit__UnorderedGroup_7__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred123_InternalSimpleBeeLangTestLanguage

    // $ANTLR start synpred124_InternalSimpleBeeLangTestLanguage
    public final void synpred124_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalSimpleBeeLangTestLanguage.g:11744:3: ( ({...}? => ( ( ( rule__Unit__Group_7_0__0 ) ) ) ) )
        // InternalSimpleBeeLangTestLanguage.g:11744:3: ({...}? => ( ( ( rule__Unit__Group_7_0__0 ) ) ) )
        {
        // InternalSimpleBeeLangTestLanguage.g:11744:3: ({...}? => ( ( ( rule__Unit__Group_7_0__0 ) ) ) )
        // InternalSimpleBeeLangTestLanguage.g:11745:4: {...}? => ( ( ( rule__Unit__Group_7_0__0 ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 0) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred124_InternalSimpleBeeLangTestLanguage", "getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 0)");
        }
        // InternalSimpleBeeLangTestLanguage.g:11745:100: ( ( ( rule__Unit__Group_7_0__0 ) ) )
        // InternalSimpleBeeLangTestLanguage.g:11746:5: ( ( rule__Unit__Group_7_0__0 ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 0);
        // InternalSimpleBeeLangTestLanguage.g:11752:5: ( ( rule__Unit__Group_7_0__0 ) )
        // InternalSimpleBeeLangTestLanguage.g:11753:6: ( rule__Unit__Group_7_0__0 )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getUnitAccess().getGroup_7_0()); 
        }
        // InternalSimpleBeeLangTestLanguage.g:11754:6: ( rule__Unit__Group_7_0__0 )
        // InternalSimpleBeeLangTestLanguage.g:11754:7: rule__Unit__Group_7_0__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__Unit__Group_7_0__0();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred124_InternalSimpleBeeLangTestLanguage

    // $ANTLR start synpred125_InternalSimpleBeeLangTestLanguage
    public final void synpred125_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalSimpleBeeLangTestLanguage.g:11759:3: ( ({...}? => ( ( ( rule__Unit__Group_7_1__0 ) ) ) ) )
        // InternalSimpleBeeLangTestLanguage.g:11759:3: ({...}? => ( ( ( rule__Unit__Group_7_1__0 ) ) ) )
        {
        // InternalSimpleBeeLangTestLanguage.g:11759:3: ({...}? => ( ( ( rule__Unit__Group_7_1__0 ) ) ) )
        // InternalSimpleBeeLangTestLanguage.g:11760:4: {...}? => ( ( ( rule__Unit__Group_7_1__0 ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 1) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred125_InternalSimpleBeeLangTestLanguage", "getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 1)");
        }
        // InternalSimpleBeeLangTestLanguage.g:11760:100: ( ( ( rule__Unit__Group_7_1__0 ) ) )
        // InternalSimpleBeeLangTestLanguage.g:11761:5: ( ( rule__Unit__Group_7_1__0 ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 1);
        // InternalSimpleBeeLangTestLanguage.g:11767:5: ( ( rule__Unit__Group_7_1__0 ) )
        // InternalSimpleBeeLangTestLanguage.g:11768:6: ( rule__Unit__Group_7_1__0 )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getUnitAccess().getGroup_7_1()); 
        }
        // InternalSimpleBeeLangTestLanguage.g:11769:6: ( rule__Unit__Group_7_1__0 )
        // InternalSimpleBeeLangTestLanguage.g:11769:7: rule__Unit__Group_7_1__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__Unit__Group_7_1__0();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred125_InternalSimpleBeeLangTestLanguage

    // $ANTLR start synpred126_InternalSimpleBeeLangTestLanguage
    public final void synpred126_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalSimpleBeeLangTestLanguage.g:11790:8: ( rule__Unit__Group_7_2__0 )
        // InternalSimpleBeeLangTestLanguage.g:11790:9: rule__Unit__Group_7_2__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__Unit__Group_7_2__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred126_InternalSimpleBeeLangTestLanguage

    // $ANTLR start synpred127_InternalSimpleBeeLangTestLanguage
    public final void synpred127_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalSimpleBeeLangTestLanguage.g:11774:3: ( ({...}? => ( ( ( ( rule__Unit__Group_7_2__0 ) ) ( ( ( rule__Unit__Group_7_2__0 )=> rule__Unit__Group_7_2__0 )* ) ) ) ) )
        // InternalSimpleBeeLangTestLanguage.g:11774:3: ({...}? => ( ( ( ( rule__Unit__Group_7_2__0 ) ) ( ( ( rule__Unit__Group_7_2__0 )=> rule__Unit__Group_7_2__0 )* ) ) ) )
        {
        // InternalSimpleBeeLangTestLanguage.g:11774:3: ({...}? => ( ( ( ( rule__Unit__Group_7_2__0 ) ) ( ( ( rule__Unit__Group_7_2__0 )=> rule__Unit__Group_7_2__0 )* ) ) ) )
        // InternalSimpleBeeLangTestLanguage.g:11775:4: {...}? => ( ( ( ( rule__Unit__Group_7_2__0 ) ) ( ( ( rule__Unit__Group_7_2__0 )=> rule__Unit__Group_7_2__0 )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 2) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred127_InternalSimpleBeeLangTestLanguage", "getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 2)");
        }
        // InternalSimpleBeeLangTestLanguage.g:11775:100: ( ( ( ( rule__Unit__Group_7_2__0 ) ) ( ( ( rule__Unit__Group_7_2__0 )=> rule__Unit__Group_7_2__0 )* ) ) )
        // InternalSimpleBeeLangTestLanguage.g:11776:5: ( ( ( rule__Unit__Group_7_2__0 ) ) ( ( ( rule__Unit__Group_7_2__0 )=> rule__Unit__Group_7_2__0 )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 2);
        // InternalSimpleBeeLangTestLanguage.g:11782:5: ( ( ( rule__Unit__Group_7_2__0 ) ) ( ( ( rule__Unit__Group_7_2__0 )=> rule__Unit__Group_7_2__0 )* ) )
        // InternalSimpleBeeLangTestLanguage.g:11783:6: ( ( rule__Unit__Group_7_2__0 ) ) ( ( ( rule__Unit__Group_7_2__0 )=> rule__Unit__Group_7_2__0 )* )
        {
        // InternalSimpleBeeLangTestLanguage.g:11783:6: ( ( rule__Unit__Group_7_2__0 ) )
        // InternalSimpleBeeLangTestLanguage.g:11784:7: ( rule__Unit__Group_7_2__0 )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getUnitAccess().getGroup_7_2()); 
        }
        // InternalSimpleBeeLangTestLanguage.g:11785:7: ( rule__Unit__Group_7_2__0 )
        // InternalSimpleBeeLangTestLanguage.g:11785:8: rule__Unit__Group_7_2__0
        {
        pushFollow(FollowSets000.FOLLOW_80);
        rule__Unit__Group_7_2__0();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalSimpleBeeLangTestLanguage.g:11788:6: ( ( ( rule__Unit__Group_7_2__0 )=> rule__Unit__Group_7_2__0 )* )
        // InternalSimpleBeeLangTestLanguage.g:11789:7: ( ( rule__Unit__Group_7_2__0 )=> rule__Unit__Group_7_2__0 )*
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getUnitAccess().getGroup_7_2()); 
        }
        // InternalSimpleBeeLangTestLanguage.g:11790:7: ( ( rule__Unit__Group_7_2__0 )=> rule__Unit__Group_7_2__0 )*
        loop121:
        do {
            int alt121=2;
            int LA121_0 = input.LA(1);

            if ( (LA121_0==51) && (synpred126_InternalSimpleBeeLangTestLanguage())) {
                alt121=1;
            }


            switch (alt121) {
        	case 1 :
        	    // InternalSimpleBeeLangTestLanguage.g:11790:8: ( rule__Unit__Group_7_2__0 )=> rule__Unit__Group_7_2__0
        	    {
        	    pushFollow(FollowSets000.FOLLOW_80);
        	    rule__Unit__Group_7_2__0();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }
        	    break;

        	default :
        	    break loop121;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred127_InternalSimpleBeeLangTestLanguage

    // $ANTLR start synpred128_InternalSimpleBeeLangTestLanguage
    public final void synpred128_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalSimpleBeeLangTestLanguage.g:11812:8: ( rule__Unit__Group_7_3__0 )
        // InternalSimpleBeeLangTestLanguage.g:11812:9: rule__Unit__Group_7_3__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__Unit__Group_7_3__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred128_InternalSimpleBeeLangTestLanguage

    // $ANTLR start synpred129_InternalSimpleBeeLangTestLanguage
    public final void synpred129_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalSimpleBeeLangTestLanguage.g:11796:3: ( ({...}? => ( ( ( ( rule__Unit__Group_7_3__0 ) ) ( ( ( rule__Unit__Group_7_3__0 )=> rule__Unit__Group_7_3__0 )* ) ) ) ) )
        // InternalSimpleBeeLangTestLanguage.g:11796:3: ({...}? => ( ( ( ( rule__Unit__Group_7_3__0 ) ) ( ( ( rule__Unit__Group_7_3__0 )=> rule__Unit__Group_7_3__0 )* ) ) ) )
        {
        // InternalSimpleBeeLangTestLanguage.g:11796:3: ({...}? => ( ( ( ( rule__Unit__Group_7_3__0 ) ) ( ( ( rule__Unit__Group_7_3__0 )=> rule__Unit__Group_7_3__0 )* ) ) ) )
        // InternalSimpleBeeLangTestLanguage.g:11797:4: {...}? => ( ( ( ( rule__Unit__Group_7_3__0 ) ) ( ( ( rule__Unit__Group_7_3__0 )=> rule__Unit__Group_7_3__0 )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 3) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred129_InternalSimpleBeeLangTestLanguage", "getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 3)");
        }
        // InternalSimpleBeeLangTestLanguage.g:11797:100: ( ( ( ( rule__Unit__Group_7_3__0 ) ) ( ( ( rule__Unit__Group_7_3__0 )=> rule__Unit__Group_7_3__0 )* ) ) )
        // InternalSimpleBeeLangTestLanguage.g:11798:5: ( ( ( rule__Unit__Group_7_3__0 ) ) ( ( ( rule__Unit__Group_7_3__0 )=> rule__Unit__Group_7_3__0 )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 3);
        // InternalSimpleBeeLangTestLanguage.g:11804:5: ( ( ( rule__Unit__Group_7_3__0 ) ) ( ( ( rule__Unit__Group_7_3__0 )=> rule__Unit__Group_7_3__0 )* ) )
        // InternalSimpleBeeLangTestLanguage.g:11805:6: ( ( rule__Unit__Group_7_3__0 ) ) ( ( ( rule__Unit__Group_7_3__0 )=> rule__Unit__Group_7_3__0 )* )
        {
        // InternalSimpleBeeLangTestLanguage.g:11805:6: ( ( rule__Unit__Group_7_3__0 ) )
        // InternalSimpleBeeLangTestLanguage.g:11806:7: ( rule__Unit__Group_7_3__0 )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getUnitAccess().getGroup_7_3()); 
        }
        // InternalSimpleBeeLangTestLanguage.g:11807:7: ( rule__Unit__Group_7_3__0 )
        // InternalSimpleBeeLangTestLanguage.g:11807:8: rule__Unit__Group_7_3__0
        {
        pushFollow(FollowSets000.FOLLOW_81);
        rule__Unit__Group_7_3__0();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalSimpleBeeLangTestLanguage.g:11810:6: ( ( ( rule__Unit__Group_7_3__0 )=> rule__Unit__Group_7_3__0 )* )
        // InternalSimpleBeeLangTestLanguage.g:11811:7: ( ( rule__Unit__Group_7_3__0 )=> rule__Unit__Group_7_3__0 )*
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getUnitAccess().getGroup_7_3()); 
        }
        // InternalSimpleBeeLangTestLanguage.g:11812:7: ( ( rule__Unit__Group_7_3__0 )=> rule__Unit__Group_7_3__0 )*
        loop122:
        do {
            int alt122=2;
            int LA122_0 = input.LA(1);

            if ( (LA122_0==52) && (synpred128_InternalSimpleBeeLangTestLanguage())) {
                alt122=1;
            }


            switch (alt122) {
        	case 1 :
        	    // InternalSimpleBeeLangTestLanguage.g:11812:8: ( rule__Unit__Group_7_3__0 )=> rule__Unit__Group_7_3__0
        	    {
        	    pushFollow(FollowSets000.FOLLOW_81);
        	    rule__Unit__Group_7_3__0();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }
        	    break;

        	default :
        	    break loop122;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred129_InternalSimpleBeeLangTestLanguage

    // $ANTLR start synpred130_InternalSimpleBeeLangTestLanguage
    public final void synpred130_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalSimpleBeeLangTestLanguage.g:11834:8: ( rule__Unit__Group_7_4__0 )
        // InternalSimpleBeeLangTestLanguage.g:11834:9: rule__Unit__Group_7_4__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__Unit__Group_7_4__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred130_InternalSimpleBeeLangTestLanguage

    // $ANTLR start synpred131_InternalSimpleBeeLangTestLanguage
    public final void synpred131_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalSimpleBeeLangTestLanguage.g:11818:3: ( ({...}? => ( ( ( ( rule__Unit__Group_7_4__0 ) ) ( ( ( rule__Unit__Group_7_4__0 )=> rule__Unit__Group_7_4__0 )* ) ) ) ) )
        // InternalSimpleBeeLangTestLanguage.g:11818:3: ({...}? => ( ( ( ( rule__Unit__Group_7_4__0 ) ) ( ( ( rule__Unit__Group_7_4__0 )=> rule__Unit__Group_7_4__0 )* ) ) ) )
        {
        // InternalSimpleBeeLangTestLanguage.g:11818:3: ({...}? => ( ( ( ( rule__Unit__Group_7_4__0 ) ) ( ( ( rule__Unit__Group_7_4__0 )=> rule__Unit__Group_7_4__0 )* ) ) ) )
        // InternalSimpleBeeLangTestLanguage.g:11819:4: {...}? => ( ( ( ( rule__Unit__Group_7_4__0 ) ) ( ( ( rule__Unit__Group_7_4__0 )=> rule__Unit__Group_7_4__0 )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 4) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred131_InternalSimpleBeeLangTestLanguage", "getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 4)");
        }
        // InternalSimpleBeeLangTestLanguage.g:11819:100: ( ( ( ( rule__Unit__Group_7_4__0 ) ) ( ( ( rule__Unit__Group_7_4__0 )=> rule__Unit__Group_7_4__0 )* ) ) )
        // InternalSimpleBeeLangTestLanguage.g:11820:5: ( ( ( rule__Unit__Group_7_4__0 ) ) ( ( ( rule__Unit__Group_7_4__0 )=> rule__Unit__Group_7_4__0 )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 4);
        // InternalSimpleBeeLangTestLanguage.g:11826:5: ( ( ( rule__Unit__Group_7_4__0 ) ) ( ( ( rule__Unit__Group_7_4__0 )=> rule__Unit__Group_7_4__0 )* ) )
        // InternalSimpleBeeLangTestLanguage.g:11827:6: ( ( rule__Unit__Group_7_4__0 ) ) ( ( ( rule__Unit__Group_7_4__0 )=> rule__Unit__Group_7_4__0 )* )
        {
        // InternalSimpleBeeLangTestLanguage.g:11827:6: ( ( rule__Unit__Group_7_4__0 ) )
        // InternalSimpleBeeLangTestLanguage.g:11828:7: ( rule__Unit__Group_7_4__0 )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getUnitAccess().getGroup_7_4()); 
        }
        // InternalSimpleBeeLangTestLanguage.g:11829:7: ( rule__Unit__Group_7_4__0 )
        // InternalSimpleBeeLangTestLanguage.g:11829:8: rule__Unit__Group_7_4__0
        {
        pushFollow(FollowSets000.FOLLOW_81);
        rule__Unit__Group_7_4__0();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalSimpleBeeLangTestLanguage.g:11832:6: ( ( ( rule__Unit__Group_7_4__0 )=> rule__Unit__Group_7_4__0 )* )
        // InternalSimpleBeeLangTestLanguage.g:11833:7: ( ( rule__Unit__Group_7_4__0 )=> rule__Unit__Group_7_4__0 )*
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getUnitAccess().getGroup_7_4()); 
        }
        // InternalSimpleBeeLangTestLanguage.g:11834:7: ( ( rule__Unit__Group_7_4__0 )=> rule__Unit__Group_7_4__0 )*
        loop123:
        do {
            int alt123=2;
            int LA123_0 = input.LA(1);

            if ( (LA123_0==52) && (synpred130_InternalSimpleBeeLangTestLanguage())) {
                alt123=1;
            }


            switch (alt123) {
        	case 1 :
        	    // InternalSimpleBeeLangTestLanguage.g:11834:8: ( rule__Unit__Group_7_4__0 )=> rule__Unit__Group_7_4__0
        	    {
        	    pushFollow(FollowSets000.FOLLOW_81);
        	    rule__Unit__Group_7_4__0();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }
        	    break;

        	default :
        	    break loop123;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred131_InternalSimpleBeeLangTestLanguage

    // $ANTLR start synpred132_InternalSimpleBeeLangTestLanguage
    public final void synpred132_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalSimpleBeeLangTestLanguage.g:11856:8: ( rule__Unit__FunctionsAssignment_7_5 )
        // InternalSimpleBeeLangTestLanguage.g:11856:9: rule__Unit__FunctionsAssignment_7_5
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__Unit__FunctionsAssignment_7_5();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred132_InternalSimpleBeeLangTestLanguage

    // $ANTLR start synpred133_InternalSimpleBeeLangTestLanguage
    public final void synpred133_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalSimpleBeeLangTestLanguage.g:11876:2: ( rule__Unit__UnorderedGroup_7__1 )
        // InternalSimpleBeeLangTestLanguage.g:11876:2: rule__Unit__UnorderedGroup_7__1
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__Unit__UnorderedGroup_7__1();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred133_InternalSimpleBeeLangTestLanguage

    // $ANTLR start synpred134_InternalSimpleBeeLangTestLanguage
    public final void synpred134_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalSimpleBeeLangTestLanguage.g:11888:2: ( rule__Unit__UnorderedGroup_7__2 )
        // InternalSimpleBeeLangTestLanguage.g:11888:2: rule__Unit__UnorderedGroup_7__2
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__Unit__UnorderedGroup_7__2();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred134_InternalSimpleBeeLangTestLanguage

    // $ANTLR start synpred135_InternalSimpleBeeLangTestLanguage
    public final void synpred135_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalSimpleBeeLangTestLanguage.g:11900:2: ( rule__Unit__UnorderedGroup_7__3 )
        // InternalSimpleBeeLangTestLanguage.g:11900:2: rule__Unit__UnorderedGroup_7__3
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__Unit__UnorderedGroup_7__3();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred135_InternalSimpleBeeLangTestLanguage

    // $ANTLR start synpred136_InternalSimpleBeeLangTestLanguage
    public final void synpred136_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalSimpleBeeLangTestLanguage.g:11912:2: ( rule__Unit__UnorderedGroup_7__4 )
        // InternalSimpleBeeLangTestLanguage.g:11912:2: rule__Unit__UnorderedGroup_7__4
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__Unit__UnorderedGroup_7__4();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred136_InternalSimpleBeeLangTestLanguage

    // $ANTLR start synpred137_InternalSimpleBeeLangTestLanguage
    public final void synpred137_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalSimpleBeeLangTestLanguage.g:11924:2: ( rule__Unit__UnorderedGroup_7__5 )
        // InternalSimpleBeeLangTestLanguage.g:11924:2: rule__Unit__UnorderedGroup_7__5
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__Unit__UnorderedGroup_7__5();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred137_InternalSimpleBeeLangTestLanguage

    // $ANTLR start synpred138_InternalSimpleBeeLangTestLanguage
    public final void synpred138_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalSimpleBeeLangTestLanguage.g:11963:3: ( ({...}? => ( ( ( rule__ProvidedCapability__Group_2_1_0__0 ) ) ) ) )
        // InternalSimpleBeeLangTestLanguage.g:11963:3: ({...}? => ( ( ( rule__ProvidedCapability__Group_2_1_0__0 ) ) ) )
        {
        // InternalSimpleBeeLangTestLanguage.g:11963:3: ({...}? => ( ( ( rule__ProvidedCapability__Group_2_1_0__0 ) ) ) )
        // InternalSimpleBeeLangTestLanguage.g:11964:4: {...}? => ( ( ( rule__ProvidedCapability__Group_2_1_0__0 ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1(), 0) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred138_InternalSimpleBeeLangTestLanguage", "getUnorderedGroupHelper().canSelect(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1(), 0)");
        }
        // InternalSimpleBeeLangTestLanguage.g:11964:116: ( ( ( rule__ProvidedCapability__Group_2_1_0__0 ) ) )
        // InternalSimpleBeeLangTestLanguage.g:11965:5: ( ( rule__ProvidedCapability__Group_2_1_0__0 ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1(), 0);
        // InternalSimpleBeeLangTestLanguage.g:11971:5: ( ( rule__ProvidedCapability__Group_2_1_0__0 ) )
        // InternalSimpleBeeLangTestLanguage.g:11972:6: ( rule__ProvidedCapability__Group_2_1_0__0 )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getProvidedCapabilityAccess().getGroup_2_1_0()); 
        }
        // InternalSimpleBeeLangTestLanguage.g:11973:6: ( rule__ProvidedCapability__Group_2_1_0__0 )
        // InternalSimpleBeeLangTestLanguage.g:11973:7: rule__ProvidedCapability__Group_2_1_0__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__ProvidedCapability__Group_2_1_0__0();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred138_InternalSimpleBeeLangTestLanguage

    // $ANTLR start synpred139_InternalSimpleBeeLangTestLanguage
    public final void synpred139_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalSimpleBeeLangTestLanguage.g:11978:3: ( ({...}? => ( ( ( rule__ProvidedCapability__Group_2_1_1__0 ) ) ) ) )
        // InternalSimpleBeeLangTestLanguage.g:11978:3: ({...}? => ( ( ( rule__ProvidedCapability__Group_2_1_1__0 ) ) ) )
        {
        // InternalSimpleBeeLangTestLanguage.g:11978:3: ({...}? => ( ( ( rule__ProvidedCapability__Group_2_1_1__0 ) ) ) )
        // InternalSimpleBeeLangTestLanguage.g:11979:4: {...}? => ( ( ( rule__ProvidedCapability__Group_2_1_1__0 ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1(), 1) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred139_InternalSimpleBeeLangTestLanguage", "getUnorderedGroupHelper().canSelect(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1(), 1)");
        }
        // InternalSimpleBeeLangTestLanguage.g:11979:116: ( ( ( rule__ProvidedCapability__Group_2_1_1__0 ) ) )
        // InternalSimpleBeeLangTestLanguage.g:11980:5: ( ( rule__ProvidedCapability__Group_2_1_1__0 ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1(), 1);
        // InternalSimpleBeeLangTestLanguage.g:11986:5: ( ( rule__ProvidedCapability__Group_2_1_1__0 ) )
        // InternalSimpleBeeLangTestLanguage.g:11987:6: ( rule__ProvidedCapability__Group_2_1_1__0 )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getProvidedCapabilityAccess().getGroup_2_1_1()); 
        }
        // InternalSimpleBeeLangTestLanguage.g:11988:6: ( rule__ProvidedCapability__Group_2_1_1__0 )
        // InternalSimpleBeeLangTestLanguage.g:11988:7: rule__ProvidedCapability__Group_2_1_1__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__ProvidedCapability__Group_2_1_1__0();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred139_InternalSimpleBeeLangTestLanguage

    // $ANTLR start synpred140_InternalSimpleBeeLangTestLanguage
    public final void synpred140_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalSimpleBeeLangTestLanguage.g:12022:2: ( rule__ProvidedCapability__UnorderedGroup_2_1__1 )
        // InternalSimpleBeeLangTestLanguage.g:12022:2: rule__ProvidedCapability__UnorderedGroup_2_1__1
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__ProvidedCapability__UnorderedGroup_2_1__1();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred140_InternalSimpleBeeLangTestLanguage

    // $ANTLR start synpred141_InternalSimpleBeeLangTestLanguage
    public final void synpred141_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalSimpleBeeLangTestLanguage.g:12034:2: ( rule__ProvidedCapability__UnorderedGroup_2_1__2 )
        // InternalSimpleBeeLangTestLanguage.g:12034:2: rule__ProvidedCapability__UnorderedGroup_2_1__2
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__ProvidedCapability__UnorderedGroup_2_1__2();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred141_InternalSimpleBeeLangTestLanguage

    // $ANTLR start synpred142_InternalSimpleBeeLangTestLanguage
    public final void synpred142_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalSimpleBeeLangTestLanguage.g:12058:2: ( rule__AliasedRequiredCapability__UnorderedGroup_3_1__0 )
        // InternalSimpleBeeLangTestLanguage.g:12058:2: rule__AliasedRequiredCapability__UnorderedGroup_3_1__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__AliasedRequiredCapability__UnorderedGroup_3_1__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred142_InternalSimpleBeeLangTestLanguage

    // $ANTLR start synpred143_InternalSimpleBeeLangTestLanguage
    public final void synpred143_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalSimpleBeeLangTestLanguage.g:12073:3: ( ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_0__0 ) ) ) ) )
        // InternalSimpleBeeLangTestLanguage.g:12073:3: ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_0__0 ) ) ) )
        {
        // InternalSimpleBeeLangTestLanguage.g:12073:3: ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_0__0 ) ) ) )
        // InternalSimpleBeeLangTestLanguage.g:12074:4: {...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_0__0 ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 0) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred143_InternalSimpleBeeLangTestLanguage", "getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 0)");
        }
        // InternalSimpleBeeLangTestLanguage.g:12074:123: ( ( ( rule__AliasedRequiredCapability__Group_3_1_0__0 ) ) )
        // InternalSimpleBeeLangTestLanguage.g:12075:5: ( ( rule__AliasedRequiredCapability__Group_3_1_0__0 ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 0);
        // InternalSimpleBeeLangTestLanguage.g:12081:5: ( ( rule__AliasedRequiredCapability__Group_3_1_0__0 ) )
        // InternalSimpleBeeLangTestLanguage.g:12082:6: ( rule__AliasedRequiredCapability__Group_3_1_0__0 )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getAliasedRequiredCapabilityAccess().getGroup_3_1_0()); 
        }
        // InternalSimpleBeeLangTestLanguage.g:12083:6: ( rule__AliasedRequiredCapability__Group_3_1_0__0 )
        // InternalSimpleBeeLangTestLanguage.g:12083:7: rule__AliasedRequiredCapability__Group_3_1_0__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__AliasedRequiredCapability__Group_3_1_0__0();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred143_InternalSimpleBeeLangTestLanguage

    // $ANTLR start synpred144_InternalSimpleBeeLangTestLanguage
    public final void synpred144_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalSimpleBeeLangTestLanguage.g:12088:3: ( ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_1__0 ) ) ) ) )
        // InternalSimpleBeeLangTestLanguage.g:12088:3: ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_1__0 ) ) ) )
        {
        // InternalSimpleBeeLangTestLanguage.g:12088:3: ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_1__0 ) ) ) )
        // InternalSimpleBeeLangTestLanguage.g:12089:4: {...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_1__0 ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 1) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred144_InternalSimpleBeeLangTestLanguage", "getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 1)");
        }
        // InternalSimpleBeeLangTestLanguage.g:12089:123: ( ( ( rule__AliasedRequiredCapability__Group_3_1_1__0 ) ) )
        // InternalSimpleBeeLangTestLanguage.g:12090:5: ( ( rule__AliasedRequiredCapability__Group_3_1_1__0 ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 1);
        // InternalSimpleBeeLangTestLanguage.g:12096:5: ( ( rule__AliasedRequiredCapability__Group_3_1_1__0 ) )
        // InternalSimpleBeeLangTestLanguage.g:12097:6: ( rule__AliasedRequiredCapability__Group_3_1_1__0 )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getAliasedRequiredCapabilityAccess().getGroup_3_1_1()); 
        }
        // InternalSimpleBeeLangTestLanguage.g:12098:6: ( rule__AliasedRequiredCapability__Group_3_1_1__0 )
        // InternalSimpleBeeLangTestLanguage.g:12098:7: rule__AliasedRequiredCapability__Group_3_1_1__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__AliasedRequiredCapability__Group_3_1_1__0();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred144_InternalSimpleBeeLangTestLanguage

    // $ANTLR start synpred145_InternalSimpleBeeLangTestLanguage
    public final void synpred145_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalSimpleBeeLangTestLanguage.g:12103:3: ( ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_2__0 ) ) ) ) )
        // InternalSimpleBeeLangTestLanguage.g:12103:3: ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_2__0 ) ) ) )
        {
        // InternalSimpleBeeLangTestLanguage.g:12103:3: ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_2__0 ) ) ) )
        // InternalSimpleBeeLangTestLanguage.g:12104:4: {...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_2__0 ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 2) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred145_InternalSimpleBeeLangTestLanguage", "getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 2)");
        }
        // InternalSimpleBeeLangTestLanguage.g:12104:123: ( ( ( rule__AliasedRequiredCapability__Group_3_1_2__0 ) ) )
        // InternalSimpleBeeLangTestLanguage.g:12105:5: ( ( rule__AliasedRequiredCapability__Group_3_1_2__0 ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 2);
        // InternalSimpleBeeLangTestLanguage.g:12111:5: ( ( rule__AliasedRequiredCapability__Group_3_1_2__0 ) )
        // InternalSimpleBeeLangTestLanguage.g:12112:6: ( rule__AliasedRequiredCapability__Group_3_1_2__0 )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getAliasedRequiredCapabilityAccess().getGroup_3_1_2()); 
        }
        // InternalSimpleBeeLangTestLanguage.g:12113:6: ( rule__AliasedRequiredCapability__Group_3_1_2__0 )
        // InternalSimpleBeeLangTestLanguage.g:12113:7: rule__AliasedRequiredCapability__Group_3_1_2__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__AliasedRequiredCapability__Group_3_1_2__0();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred145_InternalSimpleBeeLangTestLanguage

    // $ANTLR start synpred146_InternalSimpleBeeLangTestLanguage
    public final void synpred146_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalSimpleBeeLangTestLanguage.g:12118:3: ( ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_3__0 ) ) ) ) )
        // InternalSimpleBeeLangTestLanguage.g:12118:3: ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_3__0 ) ) ) )
        {
        // InternalSimpleBeeLangTestLanguage.g:12118:3: ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_3__0 ) ) ) )
        // InternalSimpleBeeLangTestLanguage.g:12119:4: {...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_3__0 ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 3) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred146_InternalSimpleBeeLangTestLanguage", "getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 3)");
        }
        // InternalSimpleBeeLangTestLanguage.g:12119:123: ( ( ( rule__AliasedRequiredCapability__Group_3_1_3__0 ) ) )
        // InternalSimpleBeeLangTestLanguage.g:12120:5: ( ( rule__AliasedRequiredCapability__Group_3_1_3__0 ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 3);
        // InternalSimpleBeeLangTestLanguage.g:12126:5: ( ( rule__AliasedRequiredCapability__Group_3_1_3__0 ) )
        // InternalSimpleBeeLangTestLanguage.g:12127:6: ( rule__AliasedRequiredCapability__Group_3_1_3__0 )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getAliasedRequiredCapabilityAccess().getGroup_3_1_3()); 
        }
        // InternalSimpleBeeLangTestLanguage.g:12128:6: ( rule__AliasedRequiredCapability__Group_3_1_3__0 )
        // InternalSimpleBeeLangTestLanguage.g:12128:7: rule__AliasedRequiredCapability__Group_3_1_3__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__AliasedRequiredCapability__Group_3_1_3__0();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred146_InternalSimpleBeeLangTestLanguage

    // $ANTLR start synpred147_InternalSimpleBeeLangTestLanguage
    public final void synpred147_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalSimpleBeeLangTestLanguage.g:12162:2: ( rule__AliasedRequiredCapability__UnorderedGroup_3_1__1 )
        // InternalSimpleBeeLangTestLanguage.g:12162:2: rule__AliasedRequiredCapability__UnorderedGroup_3_1__1
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__AliasedRequiredCapability__UnorderedGroup_3_1__1();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred147_InternalSimpleBeeLangTestLanguage

    // $ANTLR start synpred148_InternalSimpleBeeLangTestLanguage
    public final void synpred148_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalSimpleBeeLangTestLanguage.g:12174:2: ( rule__AliasedRequiredCapability__UnorderedGroup_3_1__2 )
        // InternalSimpleBeeLangTestLanguage.g:12174:2: rule__AliasedRequiredCapability__UnorderedGroup_3_1__2
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__AliasedRequiredCapability__UnorderedGroup_3_1__2();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred148_InternalSimpleBeeLangTestLanguage

    // $ANTLR start synpred149_InternalSimpleBeeLangTestLanguage
    public final void synpred149_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalSimpleBeeLangTestLanguage.g:12186:2: ( rule__AliasedRequiredCapability__UnorderedGroup_3_1__3 )
        // InternalSimpleBeeLangTestLanguage.g:12186:2: rule__AliasedRequiredCapability__UnorderedGroup_3_1__3
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__AliasedRequiredCapability__UnorderedGroup_3_1__3();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred149_InternalSimpleBeeLangTestLanguage

    // $ANTLR start synpred150_InternalSimpleBeeLangTestLanguage
    public final void synpred150_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalSimpleBeeLangTestLanguage.g:12198:2: ( rule__AliasedRequiredCapability__UnorderedGroup_3_1__4 )
        // InternalSimpleBeeLangTestLanguage.g:12198:2: rule__AliasedRequiredCapability__UnorderedGroup_3_1__4
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__AliasedRequiredCapability__UnorderedGroup_3_1__4();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred150_InternalSimpleBeeLangTestLanguage

    // $ANTLR start synpred151_InternalSimpleBeeLangTestLanguage
    public final void synpred151_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalSimpleBeeLangTestLanguage.g:12222:2: ( rule__RequiredCapability__UnorderedGroup_3_1__0 )
        // InternalSimpleBeeLangTestLanguage.g:12222:2: rule__RequiredCapability__UnorderedGroup_3_1__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__RequiredCapability__UnorderedGroup_3_1__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred151_InternalSimpleBeeLangTestLanguage

    // $ANTLR start synpred152_InternalSimpleBeeLangTestLanguage
    public final void synpred152_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalSimpleBeeLangTestLanguage.g:12237:3: ( ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_0__0 ) ) ) ) )
        // InternalSimpleBeeLangTestLanguage.g:12237:3: ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_0__0 ) ) ) )
        {
        // InternalSimpleBeeLangTestLanguage.g:12237:3: ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_0__0 ) ) ) )
        // InternalSimpleBeeLangTestLanguage.g:12238:4: {...}? => ( ( ( rule__RequiredCapability__Group_3_1_0__0 ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 0) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred152_InternalSimpleBeeLangTestLanguage", "getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 0)");
        }
        // InternalSimpleBeeLangTestLanguage.g:12238:116: ( ( ( rule__RequiredCapability__Group_3_1_0__0 ) ) )
        // InternalSimpleBeeLangTestLanguage.g:12239:5: ( ( rule__RequiredCapability__Group_3_1_0__0 ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 0);
        // InternalSimpleBeeLangTestLanguage.g:12245:5: ( ( rule__RequiredCapability__Group_3_1_0__0 ) )
        // InternalSimpleBeeLangTestLanguage.g:12246:6: ( rule__RequiredCapability__Group_3_1_0__0 )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getRequiredCapabilityAccess().getGroup_3_1_0()); 
        }
        // InternalSimpleBeeLangTestLanguage.g:12247:6: ( rule__RequiredCapability__Group_3_1_0__0 )
        // InternalSimpleBeeLangTestLanguage.g:12247:7: rule__RequiredCapability__Group_3_1_0__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__RequiredCapability__Group_3_1_0__0();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred152_InternalSimpleBeeLangTestLanguage

    // $ANTLR start synpred153_InternalSimpleBeeLangTestLanguage
    public final void synpred153_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalSimpleBeeLangTestLanguage.g:12252:3: ( ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_1__0 ) ) ) ) )
        // InternalSimpleBeeLangTestLanguage.g:12252:3: ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_1__0 ) ) ) )
        {
        // InternalSimpleBeeLangTestLanguage.g:12252:3: ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_1__0 ) ) ) )
        // InternalSimpleBeeLangTestLanguage.g:12253:4: {...}? => ( ( ( rule__RequiredCapability__Group_3_1_1__0 ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 1) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred153_InternalSimpleBeeLangTestLanguage", "getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 1)");
        }
        // InternalSimpleBeeLangTestLanguage.g:12253:116: ( ( ( rule__RequiredCapability__Group_3_1_1__0 ) ) )
        // InternalSimpleBeeLangTestLanguage.g:12254:5: ( ( rule__RequiredCapability__Group_3_1_1__0 ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 1);
        // InternalSimpleBeeLangTestLanguage.g:12260:5: ( ( rule__RequiredCapability__Group_3_1_1__0 ) )
        // InternalSimpleBeeLangTestLanguage.g:12261:6: ( rule__RequiredCapability__Group_3_1_1__0 )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getRequiredCapabilityAccess().getGroup_3_1_1()); 
        }
        // InternalSimpleBeeLangTestLanguage.g:12262:6: ( rule__RequiredCapability__Group_3_1_1__0 )
        // InternalSimpleBeeLangTestLanguage.g:12262:7: rule__RequiredCapability__Group_3_1_1__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__RequiredCapability__Group_3_1_1__0();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred153_InternalSimpleBeeLangTestLanguage

    // $ANTLR start synpred154_InternalSimpleBeeLangTestLanguage
    public final void synpred154_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalSimpleBeeLangTestLanguage.g:12267:3: ( ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_2__0 ) ) ) ) )
        // InternalSimpleBeeLangTestLanguage.g:12267:3: ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_2__0 ) ) ) )
        {
        // InternalSimpleBeeLangTestLanguage.g:12267:3: ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_2__0 ) ) ) )
        // InternalSimpleBeeLangTestLanguage.g:12268:4: {...}? => ( ( ( rule__RequiredCapability__Group_3_1_2__0 ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 2) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred154_InternalSimpleBeeLangTestLanguage", "getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 2)");
        }
        // InternalSimpleBeeLangTestLanguage.g:12268:116: ( ( ( rule__RequiredCapability__Group_3_1_2__0 ) ) )
        // InternalSimpleBeeLangTestLanguage.g:12269:5: ( ( rule__RequiredCapability__Group_3_1_2__0 ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 2);
        // InternalSimpleBeeLangTestLanguage.g:12275:5: ( ( rule__RequiredCapability__Group_3_1_2__0 ) )
        // InternalSimpleBeeLangTestLanguage.g:12276:6: ( rule__RequiredCapability__Group_3_1_2__0 )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getRequiredCapabilityAccess().getGroup_3_1_2()); 
        }
        // InternalSimpleBeeLangTestLanguage.g:12277:6: ( rule__RequiredCapability__Group_3_1_2__0 )
        // InternalSimpleBeeLangTestLanguage.g:12277:7: rule__RequiredCapability__Group_3_1_2__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__RequiredCapability__Group_3_1_2__0();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred154_InternalSimpleBeeLangTestLanguage

    // $ANTLR start synpred155_InternalSimpleBeeLangTestLanguage
    public final void synpred155_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalSimpleBeeLangTestLanguage.g:12282:3: ( ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_3__0 ) ) ) ) )
        // InternalSimpleBeeLangTestLanguage.g:12282:3: ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_3__0 ) ) ) )
        {
        // InternalSimpleBeeLangTestLanguage.g:12282:3: ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_3__0 ) ) ) )
        // InternalSimpleBeeLangTestLanguage.g:12283:4: {...}? => ( ( ( rule__RequiredCapability__Group_3_1_3__0 ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 3) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred155_InternalSimpleBeeLangTestLanguage", "getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 3)");
        }
        // InternalSimpleBeeLangTestLanguage.g:12283:116: ( ( ( rule__RequiredCapability__Group_3_1_3__0 ) ) )
        // InternalSimpleBeeLangTestLanguage.g:12284:5: ( ( rule__RequiredCapability__Group_3_1_3__0 ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 3);
        // InternalSimpleBeeLangTestLanguage.g:12290:5: ( ( rule__RequiredCapability__Group_3_1_3__0 ) )
        // InternalSimpleBeeLangTestLanguage.g:12291:6: ( rule__RequiredCapability__Group_3_1_3__0 )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getRequiredCapabilityAccess().getGroup_3_1_3()); 
        }
        // InternalSimpleBeeLangTestLanguage.g:12292:6: ( rule__RequiredCapability__Group_3_1_3__0 )
        // InternalSimpleBeeLangTestLanguage.g:12292:7: rule__RequiredCapability__Group_3_1_3__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__RequiredCapability__Group_3_1_3__0();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred155_InternalSimpleBeeLangTestLanguage

    // $ANTLR start synpred156_InternalSimpleBeeLangTestLanguage
    public final void synpred156_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalSimpleBeeLangTestLanguage.g:12326:2: ( rule__RequiredCapability__UnorderedGroup_3_1__1 )
        // InternalSimpleBeeLangTestLanguage.g:12326:2: rule__RequiredCapability__UnorderedGroup_3_1__1
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__RequiredCapability__UnorderedGroup_3_1__1();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred156_InternalSimpleBeeLangTestLanguage

    // $ANTLR start synpred157_InternalSimpleBeeLangTestLanguage
    public final void synpred157_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalSimpleBeeLangTestLanguage.g:12338:2: ( rule__RequiredCapability__UnorderedGroup_3_1__2 )
        // InternalSimpleBeeLangTestLanguage.g:12338:2: rule__RequiredCapability__UnorderedGroup_3_1__2
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__RequiredCapability__UnorderedGroup_3_1__2();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred157_InternalSimpleBeeLangTestLanguage

    // $ANTLR start synpred158_InternalSimpleBeeLangTestLanguage
    public final void synpred158_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalSimpleBeeLangTestLanguage.g:12350:2: ( rule__RequiredCapability__UnorderedGroup_3_1__3 )
        // InternalSimpleBeeLangTestLanguage.g:12350:2: rule__RequiredCapability__UnorderedGroup_3_1__3
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__RequiredCapability__UnorderedGroup_3_1__3();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred158_InternalSimpleBeeLangTestLanguage

    // $ANTLR start synpred159_InternalSimpleBeeLangTestLanguage
    public final void synpred159_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalSimpleBeeLangTestLanguage.g:12362:2: ( rule__RequiredCapability__UnorderedGroup_3_1__4 )
        // InternalSimpleBeeLangTestLanguage.g:12362:2: rule__RequiredCapability__UnorderedGroup_3_1__4
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__RequiredCapability__UnorderedGroup_3_1__4();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred159_InternalSimpleBeeLangTestLanguage

}

@SuppressWarnings("all")
public class InternalSimpleBeeLangTestLanguageParser extends InternalSimpleBeeLangTestLanguageParser12 {



        public InternalSimpleBeeLangTestLanguageParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public InternalSimpleBeeLangTestLanguageParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
            this.state.ruleMemo = new HashMap[1154+1];
             
             
        }
        


}
