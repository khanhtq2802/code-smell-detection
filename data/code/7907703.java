/**
 * Autogenerated by Thrift Compiler (0.11.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.facebook.buck.log.thrift;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.11.0)")
public class TimeStatsRemoteLogEntry implements org.apache.thrift.TBase<TimeStatsRemoteLogEntry, TimeStatsRemoteLogEntry._Fields>, java.io.Serializable, Cloneable, Comparable<TimeStatsRemoteLogEntry> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("TimeStatsRemoteLogEntry");

  private static final org.apache.thrift.protocol.TField PYTHON_TIME_MS_FIELD_DESC = new org.apache.thrift.protocol.TField("pythonTimeMs", org.apache.thrift.protocol.TType.I64, (short)1);
  private static final org.apache.thrift.protocol.TField INIT_TIME_MS_FIELD_DESC = new org.apache.thrift.protocol.TField("initTimeMs", org.apache.thrift.protocol.TType.I64, (short)2);
  private static final org.apache.thrift.protocol.TField PARSE_TIME_MS_FIELD_DESC = new org.apache.thrift.protocol.TField("parseTimeMs", org.apache.thrift.protocol.TType.I64, (short)3);
  private static final org.apache.thrift.protocol.TField PROCESSING_TIME_MS_FIELD_DESC = new org.apache.thrift.protocol.TField("processingTimeMs", org.apache.thrift.protocol.TType.I64, (short)4);
  private static final org.apache.thrift.protocol.TField ACTION_GRAPH_TIME_MS_FIELD_DESC = new org.apache.thrift.protocol.TField("actionGraphTimeMs", org.apache.thrift.protocol.TType.I64, (short)5);
  private static final org.apache.thrift.protocol.TField RULEKEY_TIME_MS_FIELD_DESC = new org.apache.thrift.protocol.TField("rulekeyTimeMs", org.apache.thrift.protocol.TType.I64, (short)6);
  private static final org.apache.thrift.protocol.TField FETCH_TIME_MS_FIELD_DESC = new org.apache.thrift.protocol.TField("fetchTimeMs", org.apache.thrift.protocol.TType.I64, (short)7);
  private static final org.apache.thrift.protocol.TField BUILD_TIME_MS_FIELD_DESC = new org.apache.thrift.protocol.TField("buildTimeMs", org.apache.thrift.protocol.TType.I64, (short)8);
  private static final org.apache.thrift.protocol.TField INSTALL_TIME_MS_FIELD_DESC = new org.apache.thrift.protocol.TField("installTimeMs", org.apache.thrift.protocol.TType.I64, (short)9);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new TimeStatsRemoteLogEntryStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new TimeStatsRemoteLogEntryTupleSchemeFactory();

  public long pythonTimeMs; // required
  public long initTimeMs; // required
  public long parseTimeMs; // required
  public long processingTimeMs; // required
  public long actionGraphTimeMs; // required
  public long rulekeyTimeMs; // required
  public long fetchTimeMs; // required
  public long buildTimeMs; // required
  public long installTimeMs; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    PYTHON_TIME_MS((short)1, "pythonTimeMs"),
    INIT_TIME_MS((short)2, "initTimeMs"),
    PARSE_TIME_MS((short)3, "parseTimeMs"),
    PROCESSING_TIME_MS((short)4, "processingTimeMs"),
    ACTION_GRAPH_TIME_MS((short)5, "actionGraphTimeMs"),
    RULEKEY_TIME_MS((short)6, "rulekeyTimeMs"),
    FETCH_TIME_MS((short)7, "fetchTimeMs"),
    BUILD_TIME_MS((short)8, "buildTimeMs"),
    INSTALL_TIME_MS((short)9, "installTimeMs");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // PYTHON_TIME_MS
          return PYTHON_TIME_MS;
        case 2: // INIT_TIME_MS
          return INIT_TIME_MS;
        case 3: // PARSE_TIME_MS
          return PARSE_TIME_MS;
        case 4: // PROCESSING_TIME_MS
          return PROCESSING_TIME_MS;
        case 5: // ACTION_GRAPH_TIME_MS
          return ACTION_GRAPH_TIME_MS;
        case 6: // RULEKEY_TIME_MS
          return RULEKEY_TIME_MS;
        case 7: // FETCH_TIME_MS
          return FETCH_TIME_MS;
        case 8: // BUILD_TIME_MS
          return BUILD_TIME_MS;
        case 9: // INSTALL_TIME_MS
          return INSTALL_TIME_MS;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __PYTHONTIMEMS_ISSET_ID = 0;
  private static final int __INITTIMEMS_ISSET_ID = 1;
  private static final int __PARSETIMEMS_ISSET_ID = 2;
  private static final int __PROCESSINGTIMEMS_ISSET_ID = 3;
  private static final int __ACTIONGRAPHTIMEMS_ISSET_ID = 4;
  private static final int __RULEKEYTIMEMS_ISSET_ID = 5;
  private static final int __FETCHTIMEMS_ISSET_ID = 6;
  private static final int __BUILDTIMEMS_ISSET_ID = 7;
  private static final int __INSTALLTIMEMS_ISSET_ID = 8;
  private short __isset_bitfield = 0;
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.PYTHON_TIME_MS, new org.apache.thrift.meta_data.FieldMetaData("pythonTimeMs", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.INIT_TIME_MS, new org.apache.thrift.meta_data.FieldMetaData("initTimeMs", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.PARSE_TIME_MS, new org.apache.thrift.meta_data.FieldMetaData("parseTimeMs", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.PROCESSING_TIME_MS, new org.apache.thrift.meta_data.FieldMetaData("processingTimeMs", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.ACTION_GRAPH_TIME_MS, new org.apache.thrift.meta_data.FieldMetaData("actionGraphTimeMs", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.RULEKEY_TIME_MS, new org.apache.thrift.meta_data.FieldMetaData("rulekeyTimeMs", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.FETCH_TIME_MS, new org.apache.thrift.meta_data.FieldMetaData("fetchTimeMs", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.BUILD_TIME_MS, new org.apache.thrift.meta_data.FieldMetaData("buildTimeMs", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.INSTALL_TIME_MS, new org.apache.thrift.meta_data.FieldMetaData("installTimeMs", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(TimeStatsRemoteLogEntry.class, metaDataMap);
  }

  public TimeStatsRemoteLogEntry() {
  }

  public TimeStatsRemoteLogEntry(
    long pythonTimeMs,
    long initTimeMs,
    long parseTimeMs,
    long processingTimeMs,
    long actionGraphTimeMs,
    long rulekeyTimeMs,
    long fetchTimeMs,
    long buildTimeMs,
    long installTimeMs)
  {
    this();
    this.pythonTimeMs = pythonTimeMs;
    setPythonTimeMsIsSet(true);
    this.initTimeMs = initTimeMs;
    setInitTimeMsIsSet(true);
    this.parseTimeMs = parseTimeMs;
    setParseTimeMsIsSet(true);
    this.processingTimeMs = processingTimeMs;
    setProcessingTimeMsIsSet(true);
    this.actionGraphTimeMs = actionGraphTimeMs;
    setActionGraphTimeMsIsSet(true);
    this.rulekeyTimeMs = rulekeyTimeMs;
    setRulekeyTimeMsIsSet(true);
    this.fetchTimeMs = fetchTimeMs;
    setFetchTimeMsIsSet(true);
    this.buildTimeMs = buildTimeMs;
    setBuildTimeMsIsSet(true);
    this.installTimeMs = installTimeMs;
    setInstallTimeMsIsSet(true);
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public TimeStatsRemoteLogEntry(TimeStatsRemoteLogEntry other) {
    __isset_bitfield = other.__isset_bitfield;
    this.pythonTimeMs = other.pythonTimeMs;
    this.initTimeMs = other.initTimeMs;
    this.parseTimeMs = other.parseTimeMs;
    this.processingTimeMs = other.processingTimeMs;
    this.actionGraphTimeMs = other.actionGraphTimeMs;
    this.rulekeyTimeMs = other.rulekeyTimeMs;
    this.fetchTimeMs = other.fetchTimeMs;
    this.buildTimeMs = other.buildTimeMs;
    this.installTimeMs = other.installTimeMs;
  }

  public TimeStatsRemoteLogEntry deepCopy() {
    return new TimeStatsRemoteLogEntry(this);
  }

  @Override
  public void clear() {
    setPythonTimeMsIsSet(false);
    this.pythonTimeMs = 0;
    setInitTimeMsIsSet(false);
    this.initTimeMs = 0;
    setParseTimeMsIsSet(false);
    this.parseTimeMs = 0;
    setProcessingTimeMsIsSet(false);
    this.processingTimeMs = 0;
    setActionGraphTimeMsIsSet(false);
    this.actionGraphTimeMs = 0;
    setRulekeyTimeMsIsSet(false);
    this.rulekeyTimeMs = 0;
    setFetchTimeMsIsSet(false);
    this.fetchTimeMs = 0;
    setBuildTimeMsIsSet(false);
    this.buildTimeMs = 0;
    setInstallTimeMsIsSet(false);
    this.installTimeMs = 0;
  }

  public long getPythonTimeMs() {
    return this.pythonTimeMs;
  }

  public TimeStatsRemoteLogEntry setPythonTimeMs(long pythonTimeMs) {
    this.pythonTimeMs = pythonTimeMs;
    setPythonTimeMsIsSet(true);
    return this;
  }

  public void unsetPythonTimeMs() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __PYTHONTIMEMS_ISSET_ID);
  }

  /** Returns true if field pythonTimeMs is set (has been assigned a value) and false otherwise */
  public boolean isSetPythonTimeMs() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __PYTHONTIMEMS_ISSET_ID);
  }

  public void setPythonTimeMsIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __PYTHONTIMEMS_ISSET_ID, value);
  }

  public long getInitTimeMs() {
    return this.initTimeMs;
  }

  public TimeStatsRemoteLogEntry setInitTimeMs(long initTimeMs) {
    this.initTimeMs = initTimeMs;
    setInitTimeMsIsSet(true);
    return this;
  }

  public void unsetInitTimeMs() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __INITTIMEMS_ISSET_ID);
  }

  /** Returns true if field initTimeMs is set (has been assigned a value) and false otherwise */
  public boolean isSetInitTimeMs() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __INITTIMEMS_ISSET_ID);
  }

  public void setInitTimeMsIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __INITTIMEMS_ISSET_ID, value);
  }

  public long getParseTimeMs() {
    return this.parseTimeMs;
  }

  public TimeStatsRemoteLogEntry setParseTimeMs(long parseTimeMs) {
    this.parseTimeMs = parseTimeMs;
    setParseTimeMsIsSet(true);
    return this;
  }

  public void unsetParseTimeMs() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __PARSETIMEMS_ISSET_ID);
  }

  /** Returns true if field parseTimeMs is set (has been assigned a value) and false otherwise */
  public boolean isSetParseTimeMs() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __PARSETIMEMS_ISSET_ID);
  }

  public void setParseTimeMsIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __PARSETIMEMS_ISSET_ID, value);
  }

  public long getProcessingTimeMs() {
    return this.processingTimeMs;
  }

  public TimeStatsRemoteLogEntry setProcessingTimeMs(long processingTimeMs) {
    this.processingTimeMs = processingTimeMs;
    setProcessingTimeMsIsSet(true);
    return this;
  }

  public void unsetProcessingTimeMs() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __PROCESSINGTIMEMS_ISSET_ID);
  }

  /** Returns true if field processingTimeMs is set (has been assigned a value) and false otherwise */
  public boolean isSetProcessingTimeMs() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __PROCESSINGTIMEMS_ISSET_ID);
  }

  public void setProcessingTimeMsIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __PROCESSINGTIMEMS_ISSET_ID, value);
  }

  public long getActionGraphTimeMs() {
    return this.actionGraphTimeMs;
  }

  public TimeStatsRemoteLogEntry setActionGraphTimeMs(long actionGraphTimeMs) {
    this.actionGraphTimeMs = actionGraphTimeMs;
    setActionGraphTimeMsIsSet(true);
    return this;
  }

  public void unsetActionGraphTimeMs() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __ACTIONGRAPHTIMEMS_ISSET_ID);
  }

  /** Returns true if field actionGraphTimeMs is set (has been assigned a value) and false otherwise */
  public boolean isSetActionGraphTimeMs() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __ACTIONGRAPHTIMEMS_ISSET_ID);
  }

  public void setActionGraphTimeMsIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __ACTIONGRAPHTIMEMS_ISSET_ID, value);
  }

  public long getRulekeyTimeMs() {
    return this.rulekeyTimeMs;
  }

  public TimeStatsRemoteLogEntry setRulekeyTimeMs(long rulekeyTimeMs) {
    this.rulekeyTimeMs = rulekeyTimeMs;
    setRulekeyTimeMsIsSet(true);
    return this;
  }

  public void unsetRulekeyTimeMs() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __RULEKEYTIMEMS_ISSET_ID);
  }

  /** Returns true if field rulekeyTimeMs is set (has been assigned a value) and false otherwise */
  public boolean isSetRulekeyTimeMs() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __RULEKEYTIMEMS_ISSET_ID);
  }

  public void setRulekeyTimeMsIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __RULEKEYTIMEMS_ISSET_ID, value);
  }

  public long getFetchTimeMs() {
    return this.fetchTimeMs;
  }

  public TimeStatsRemoteLogEntry setFetchTimeMs(long fetchTimeMs) {
    this.fetchTimeMs = fetchTimeMs;
    setFetchTimeMsIsSet(true);
    return this;
  }

  public void unsetFetchTimeMs() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __FETCHTIMEMS_ISSET_ID);
  }

  /** Returns true if field fetchTimeMs is set (has been assigned a value) and false otherwise */
  public boolean isSetFetchTimeMs() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __FETCHTIMEMS_ISSET_ID);
  }

  public void setFetchTimeMsIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __FETCHTIMEMS_ISSET_ID, value);
  }

  public long getBuildTimeMs() {
    return this.buildTimeMs;
  }

  public TimeStatsRemoteLogEntry setBuildTimeMs(long buildTimeMs) {
    this.buildTimeMs = buildTimeMs;
    setBuildTimeMsIsSet(true);
    return this;
  }

  public void unsetBuildTimeMs() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __BUILDTIMEMS_ISSET_ID);
  }

  /** Returns true if field buildTimeMs is set (has been assigned a value) and false otherwise */
  public boolean isSetBuildTimeMs() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __BUILDTIMEMS_ISSET_ID);
  }

  public void setBuildTimeMsIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __BUILDTIMEMS_ISSET_ID, value);
  }

  public long getInstallTimeMs() {
    return this.installTimeMs;
  }

  public TimeStatsRemoteLogEntry setInstallTimeMs(long installTimeMs) {
    this.installTimeMs = installTimeMs;
    setInstallTimeMsIsSet(true);
    return this;
  }

  public void unsetInstallTimeMs() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __INSTALLTIMEMS_ISSET_ID);
  }

  /** Returns true if field installTimeMs is set (has been assigned a value) and false otherwise */
  public boolean isSetInstallTimeMs() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __INSTALLTIMEMS_ISSET_ID);
  }

  public void setInstallTimeMsIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __INSTALLTIMEMS_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, java.lang.Object value) {
    switch (field) {
    case PYTHON_TIME_MS:
      if (value == null) {
        unsetPythonTimeMs();
      } else {
        setPythonTimeMs((java.lang.Long)value);
      }
      break;

    case INIT_TIME_MS:
      if (value == null) {
        unsetInitTimeMs();
      } else {
        setInitTimeMs((java.lang.Long)value);
      }
      break;

    case PARSE_TIME_MS:
      if (value == null) {
        unsetParseTimeMs();
      } else {
        setParseTimeMs((java.lang.Long)value);
      }
      break;

    case PROCESSING_TIME_MS:
      if (value == null) {
        unsetProcessingTimeMs();
      } else {
        setProcessingTimeMs((java.lang.Long)value);
      }
      break;

    case ACTION_GRAPH_TIME_MS:
      if (value == null) {
        unsetActionGraphTimeMs();
      } else {
        setActionGraphTimeMs((java.lang.Long)value);
      }
      break;

    case RULEKEY_TIME_MS:
      if (value == null) {
        unsetRulekeyTimeMs();
      } else {
        setRulekeyTimeMs((java.lang.Long)value);
      }
      break;

    case FETCH_TIME_MS:
      if (value == null) {
        unsetFetchTimeMs();
      } else {
        setFetchTimeMs((java.lang.Long)value);
      }
      break;

    case BUILD_TIME_MS:
      if (value == null) {
        unsetBuildTimeMs();
      } else {
        setBuildTimeMs((java.lang.Long)value);
      }
      break;

    case INSTALL_TIME_MS:
      if (value == null) {
        unsetInstallTimeMs();
      } else {
        setInstallTimeMs((java.lang.Long)value);
      }
      break;

    }
  }

  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case PYTHON_TIME_MS:
      return getPythonTimeMs();

    case INIT_TIME_MS:
      return getInitTimeMs();

    case PARSE_TIME_MS:
      return getParseTimeMs();

    case PROCESSING_TIME_MS:
      return getProcessingTimeMs();

    case ACTION_GRAPH_TIME_MS:
      return getActionGraphTimeMs();

    case RULEKEY_TIME_MS:
      return getRulekeyTimeMs();

    case FETCH_TIME_MS:
      return getFetchTimeMs();

    case BUILD_TIME_MS:
      return getBuildTimeMs();

    case INSTALL_TIME_MS:
      return getInstallTimeMs();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case PYTHON_TIME_MS:
      return isSetPythonTimeMs();
    case INIT_TIME_MS:
      return isSetInitTimeMs();
    case PARSE_TIME_MS:
      return isSetParseTimeMs();
    case PROCESSING_TIME_MS:
      return isSetProcessingTimeMs();
    case ACTION_GRAPH_TIME_MS:
      return isSetActionGraphTimeMs();
    case RULEKEY_TIME_MS:
      return isSetRulekeyTimeMs();
    case FETCH_TIME_MS:
      return isSetFetchTimeMs();
    case BUILD_TIME_MS:
      return isSetBuildTimeMs();
    case INSTALL_TIME_MS:
      return isSetInstallTimeMs();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof TimeStatsRemoteLogEntry)
      return this.equals((TimeStatsRemoteLogEntry)that);
    return false;
  }

  public boolean equals(TimeStatsRemoteLogEntry that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_pythonTimeMs = true;
    boolean that_present_pythonTimeMs = true;
    if (this_present_pythonTimeMs || that_present_pythonTimeMs) {
      if (!(this_present_pythonTimeMs && that_present_pythonTimeMs))
        return false;
      if (this.pythonTimeMs != that.pythonTimeMs)
        return false;
    }

    boolean this_present_initTimeMs = true;
    boolean that_present_initTimeMs = true;
    if (this_present_initTimeMs || that_present_initTimeMs) {
      if (!(this_present_initTimeMs && that_present_initTimeMs))
        return false;
      if (this.initTimeMs != that.initTimeMs)
        return false;
    }

    boolean this_present_parseTimeMs = true;
    boolean that_present_parseTimeMs = true;
    if (this_present_parseTimeMs || that_present_parseTimeMs) {
      if (!(this_present_parseTimeMs && that_present_parseTimeMs))
        return false;
      if (this.parseTimeMs != that.parseTimeMs)
        return false;
    }

    boolean this_present_processingTimeMs = true;
    boolean that_present_processingTimeMs = true;
    if (this_present_processingTimeMs || that_present_processingTimeMs) {
      if (!(this_present_processingTimeMs && that_present_processingTimeMs))
        return false;
      if (this.processingTimeMs != that.processingTimeMs)
        return false;
    }

    boolean this_present_actionGraphTimeMs = true;
    boolean that_present_actionGraphTimeMs = true;
    if (this_present_actionGraphTimeMs || that_present_actionGraphTimeMs) {
      if (!(this_present_actionGraphTimeMs && that_present_actionGraphTimeMs))
        return false;
      if (this.actionGraphTimeMs != that.actionGraphTimeMs)
        return false;
    }

    boolean this_present_rulekeyTimeMs = true;
    boolean that_present_rulekeyTimeMs = true;
    if (this_present_rulekeyTimeMs || that_present_rulekeyTimeMs) {
      if (!(this_present_rulekeyTimeMs && that_present_rulekeyTimeMs))
        return false;
      if (this.rulekeyTimeMs != that.rulekeyTimeMs)
        return false;
    }

    boolean this_present_fetchTimeMs = true;
    boolean that_present_fetchTimeMs = true;
    if (this_present_fetchTimeMs || that_present_fetchTimeMs) {
      if (!(this_present_fetchTimeMs && that_present_fetchTimeMs))
        return false;
      if (this.fetchTimeMs != that.fetchTimeMs)
        return false;
    }

    boolean this_present_buildTimeMs = true;
    boolean that_present_buildTimeMs = true;
    if (this_present_buildTimeMs || that_present_buildTimeMs) {
      if (!(this_present_buildTimeMs && that_present_buildTimeMs))
        return false;
      if (this.buildTimeMs != that.buildTimeMs)
        return false;
    }

    boolean this_present_installTimeMs = true;
    boolean that_present_installTimeMs = true;
    if (this_present_installTimeMs || that_present_installTimeMs) {
      if (!(this_present_installTimeMs && that_present_installTimeMs))
        return false;
      if (this.installTimeMs != that.installTimeMs)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(pythonTimeMs);

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(initTimeMs);

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(parseTimeMs);

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(processingTimeMs);

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(actionGraphTimeMs);

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(rulekeyTimeMs);

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(fetchTimeMs);

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(buildTimeMs);

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(installTimeMs);

    return hashCode;
  }

  @Override
  public int compareTo(TimeStatsRemoteLogEntry other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSetPythonTimeMs()).compareTo(other.isSetPythonTimeMs());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPythonTimeMs()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.pythonTimeMs, other.pythonTimeMs);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetInitTimeMs()).compareTo(other.isSetInitTimeMs());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetInitTimeMs()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.initTimeMs, other.initTimeMs);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetParseTimeMs()).compareTo(other.isSetParseTimeMs());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetParseTimeMs()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.parseTimeMs, other.parseTimeMs);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetProcessingTimeMs()).compareTo(other.isSetProcessingTimeMs());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProcessingTimeMs()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.processingTimeMs, other.processingTimeMs);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetActionGraphTimeMs()).compareTo(other.isSetActionGraphTimeMs());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetActionGraphTimeMs()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.actionGraphTimeMs, other.actionGraphTimeMs);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetRulekeyTimeMs()).compareTo(other.isSetRulekeyTimeMs());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRulekeyTimeMs()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.rulekeyTimeMs, other.rulekeyTimeMs);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetFetchTimeMs()).compareTo(other.isSetFetchTimeMs());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetFetchTimeMs()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.fetchTimeMs, other.fetchTimeMs);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetBuildTimeMs()).compareTo(other.isSetBuildTimeMs());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBuildTimeMs()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.buildTimeMs, other.buildTimeMs);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetInstallTimeMs()).compareTo(other.isSetInstallTimeMs());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetInstallTimeMs()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.installTimeMs, other.installTimeMs);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("TimeStatsRemoteLogEntry(");
    boolean first = true;

    sb.append("pythonTimeMs:");
    sb.append(this.pythonTimeMs);
    first = false;
    if (!first) sb.append(", ");
    sb.append("initTimeMs:");
    sb.append(this.initTimeMs);
    first = false;
    if (!first) sb.append(", ");
    sb.append("parseTimeMs:");
    sb.append(this.parseTimeMs);
    first = false;
    if (!first) sb.append(", ");
    sb.append("processingTimeMs:");
    sb.append(this.processingTimeMs);
    first = false;
    if (!first) sb.append(", ");
    sb.append("actionGraphTimeMs:");
    sb.append(this.actionGraphTimeMs);
    first = false;
    if (!first) sb.append(", ");
    sb.append("rulekeyTimeMs:");
    sb.append(this.rulekeyTimeMs);
    first = false;
    if (!first) sb.append(", ");
    sb.append("fetchTimeMs:");
    sb.append(this.fetchTimeMs);
    first = false;
    if (!first) sb.append(", ");
    sb.append("buildTimeMs:");
    sb.append(this.buildTimeMs);
    first = false;
    if (!first) sb.append(", ");
    sb.append("installTimeMs:");
    sb.append(this.installTimeMs);
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class TimeStatsRemoteLogEntryStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public TimeStatsRemoteLogEntryStandardScheme getScheme() {
      return new TimeStatsRemoteLogEntryStandardScheme();
    }
  }

  private static class TimeStatsRemoteLogEntryStandardScheme extends org.apache.thrift.scheme.StandardScheme<TimeStatsRemoteLogEntry> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, TimeStatsRemoteLogEntry struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // PYTHON_TIME_MS
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.pythonTimeMs = iprot.readI64();
              struct.setPythonTimeMsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // INIT_TIME_MS
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.initTimeMs = iprot.readI64();
              struct.setInitTimeMsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // PARSE_TIME_MS
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.parseTimeMs = iprot.readI64();
              struct.setParseTimeMsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // PROCESSING_TIME_MS
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.processingTimeMs = iprot.readI64();
              struct.setProcessingTimeMsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // ACTION_GRAPH_TIME_MS
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.actionGraphTimeMs = iprot.readI64();
              struct.setActionGraphTimeMsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // RULEKEY_TIME_MS
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.rulekeyTimeMs = iprot.readI64();
              struct.setRulekeyTimeMsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // FETCH_TIME_MS
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.fetchTimeMs = iprot.readI64();
              struct.setFetchTimeMsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // BUILD_TIME_MS
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.buildTimeMs = iprot.readI64();
              struct.setBuildTimeMsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // INSTALL_TIME_MS
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.installTimeMs = iprot.readI64();
              struct.setInstallTimeMsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, TimeStatsRemoteLogEntry struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(PYTHON_TIME_MS_FIELD_DESC);
      oprot.writeI64(struct.pythonTimeMs);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(INIT_TIME_MS_FIELD_DESC);
      oprot.writeI64(struct.initTimeMs);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(PARSE_TIME_MS_FIELD_DESC);
      oprot.writeI64(struct.parseTimeMs);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(PROCESSING_TIME_MS_FIELD_DESC);
      oprot.writeI64(struct.processingTimeMs);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(ACTION_GRAPH_TIME_MS_FIELD_DESC);
      oprot.writeI64(struct.actionGraphTimeMs);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(RULEKEY_TIME_MS_FIELD_DESC);
      oprot.writeI64(struct.rulekeyTimeMs);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(FETCH_TIME_MS_FIELD_DESC);
      oprot.writeI64(struct.fetchTimeMs);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(BUILD_TIME_MS_FIELD_DESC);
      oprot.writeI64(struct.buildTimeMs);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(INSTALL_TIME_MS_FIELD_DESC);
      oprot.writeI64(struct.installTimeMs);
      oprot.writeFieldEnd();
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class TimeStatsRemoteLogEntryTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public TimeStatsRemoteLogEntryTupleScheme getScheme() {
      return new TimeStatsRemoteLogEntryTupleScheme();
    }
  }

  private static class TimeStatsRemoteLogEntryTupleScheme extends org.apache.thrift.scheme.TupleScheme<TimeStatsRemoteLogEntry> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, TimeStatsRemoteLogEntry struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetPythonTimeMs()) {
        optionals.set(0);
      }
      if (struct.isSetInitTimeMs()) {
        optionals.set(1);
      }
      if (struct.isSetParseTimeMs()) {
        optionals.set(2);
      }
      if (struct.isSetProcessingTimeMs()) {
        optionals.set(3);
      }
      if (struct.isSetActionGraphTimeMs()) {
        optionals.set(4);
      }
      if (struct.isSetRulekeyTimeMs()) {
        optionals.set(5);
      }
      if (struct.isSetFetchTimeMs()) {
        optionals.set(6);
      }
      if (struct.isSetBuildTimeMs()) {
        optionals.set(7);
      }
      if (struct.isSetInstallTimeMs()) {
        optionals.set(8);
      }
      oprot.writeBitSet(optionals, 9);
      if (struct.isSetPythonTimeMs()) {
        oprot.writeI64(struct.pythonTimeMs);
      }
      if (struct.isSetInitTimeMs()) {
        oprot.writeI64(struct.initTimeMs);
      }
      if (struct.isSetParseTimeMs()) {
        oprot.writeI64(struct.parseTimeMs);
      }
      if (struct.isSetProcessingTimeMs()) {
        oprot.writeI64(struct.processingTimeMs);
      }
      if (struct.isSetActionGraphTimeMs()) {
        oprot.writeI64(struct.actionGraphTimeMs);
      }
      if (struct.isSetRulekeyTimeMs()) {
        oprot.writeI64(struct.rulekeyTimeMs);
      }
      if (struct.isSetFetchTimeMs()) {
        oprot.writeI64(struct.fetchTimeMs);
      }
      if (struct.isSetBuildTimeMs()) {
        oprot.writeI64(struct.buildTimeMs);
      }
      if (struct.isSetInstallTimeMs()) {
        oprot.writeI64(struct.installTimeMs);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, TimeStatsRemoteLogEntry struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(9);
      if (incoming.get(0)) {
        struct.pythonTimeMs = iprot.readI64();
        struct.setPythonTimeMsIsSet(true);
      }
      if (incoming.get(1)) {
        struct.initTimeMs = iprot.readI64();
        struct.setInitTimeMsIsSet(true);
      }
      if (incoming.get(2)) {
        struct.parseTimeMs = iprot.readI64();
        struct.setParseTimeMsIsSet(true);
      }
      if (incoming.get(3)) {
        struct.processingTimeMs = iprot.readI64();
        struct.setProcessingTimeMsIsSet(true);
      }
      if (incoming.get(4)) {
        struct.actionGraphTimeMs = iprot.readI64();
        struct.setActionGraphTimeMsIsSet(true);
      }
      if (incoming.get(5)) {
        struct.rulekeyTimeMs = iprot.readI64();
        struct.setRulekeyTimeMsIsSet(true);
      }
      if (incoming.get(6)) {
        struct.fetchTimeMs = iprot.readI64();
        struct.setFetchTimeMsIsSet(true);
      }
      if (incoming.get(7)) {
        struct.buildTimeMs = iprot.readI64();
        struct.setBuildTimeMsIsSet(true);
      }
      if (incoming.get(8)) {
        struct.installTimeMs = iprot.readI64();
        struct.setInstallTimeMsIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

